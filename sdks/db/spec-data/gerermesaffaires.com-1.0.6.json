{
  "providerName": "gerermesaffaires.com",
  "openApiRaw": "https://api.gerermesaffaires.com/wp-content/uploads/2022/09/GmaAPI-GererMesAffairesAPI-1.0.6-swagger.json",
  "securitySchemes": {
    "gma_auth": {
      "flows": {
        "authorizationCode": {
          "authorizationUrl": "https://sandbox.gerermesaffaires.com/openid/v1/authorize",
          "refreshUrl": "https://sandbox.gerermesaffaires.com/openid/v1/token",
          "scopes": {
            "box": "*Originally missing*",
            "collaborator": "blue access",
            "hub": "*Originally missing*",
            "owner": "green access"
          },
          "tokenUrl": "https://sandbox.gerermesaffaires.com/openid/v1/token"
        },
        "clientCredentials": {
          "refreshUrl": "https://sandbox.gerermesaffaires.com/openid/v1/token",
          "scopes": {
            "box": "*Originally missing*",
            "hub": "*Originally missing*",
            "robot": "server access"
          },
          "tokenUrl": "https://sandbox.gerermesaffaires.com/openid/v1/token"
        }
      },
      "type": "oauth2"
    }
  },
  "homepage": "gerermesaffaires.com",
  "apiVersion": "1.0.6",
  "methods": [
    {
      "url": "/box/menus",
      "method": "/box/menusGet",
      "httpMethod": "get",
      "description": "Returns predefined folders and workbooks of the Box for all the spaces",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/business-groups",
      "method": "/businessGroupsGet",
      "httpMethod": "get",
      "description": "Returns a list of groups custom ordered by name",
      "parameters": [
        {
          "name": "Name",
          "schema": "string",
          "required": false,
          "description": "Name of the group"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/business-groups",
      "method": "/businessGroupsPatch",
      "httpMethod": "patch",
      "description": "Modifies an object",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/business-groups",
      "method": "/businessGroupsPost",
      "httpMethod": "post",
      "description": "Adds a group (only for managers and ADN collaborators)",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/business-groups/all",
      "method": "/businessGroups/allGet",
      "httpMethod": "get",
      "description": "Returns list of groups custom for managers",
      "parameters": [
        {
          "name": "Name",
          "schema": "string",
          "required": false,
          "description": "Name of the group"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/business-groups/{id}",
      "method": "/businessGroups/{id}Get",
      "httpMethod": "get",
      "description": "Returns a group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the group"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/business-groups/{id}/spaces",
      "method": "/businessGroups/{id}/spacesGet",
      "httpMethod": "get",
      "description": "Returns spaces of the business group with id",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the group"
        },
        {
          "name": "Name",
          "schema": "string",
          "required": false,
          "description": "Name of the space"
        },
        {
          "name": "Type",
          "schema": "string",
          "required": false,
          "description": "Type of the space"
        },
        {
          "name": "RegistrationNumber",
          "schema": "string",
          "required": false,
          "description": "registration number of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/business-groups/{id}/spaces/{spaceId}",
      "method": "/businessGroups/{id}/spaces/{spaceId}Delete",
      "httpMethod": "delete",
      "description": "Remove a customer space from partner",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the group of the customer space"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/business-groups/{id}/spaces/{spaceId}/legal-entities/{personId}/customers/{folderId}/guest-in-space",
      "method": "/businessGroups/{id}/spaces/{spaceId}/legalEntities/{personId}/customers/{folderId}/guestInSpacePost",
      "httpMethod": "post",
      "description": "send an invitation to manager the private space of personId",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the group"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the company space which contains the customer folder"
        },
        {
          "name": "personId",
          "schema": "string",
          "required": true,
          "description": "Id of the person customer"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder customer"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/business-groups/{id}/spaces/{spaceId}/legal-entities/{personId}/customers/{folderId}/spaces",
      "method": "/businessGroups/{id}/spaces/{spaceId}/legalEntities/{personId}/customers/{folderId}/spacesPost",
      "httpMethod": "post",
      "description": "Add a Space in a group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the group"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the company space which contains the customer folder"
        },
        {
          "name": "personId",
          "schema": "string",
          "required": true,
          "description": "Id of the person customer"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder customer"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/hub/business-groups/{Id}/menus",
      "method": "/hub/businessGroups/{id}/menusGet",
      "httpMethod": "get",
      "description": "Returns predefined folders and workbooks of the Hub for all the spaces of the business group",
      "parameters": [
        {
          "name": "Id",
          "schema": "string",
          "required": true,
          "description": "Id of the business group"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/hub/documents",
      "method": "/hub/documentsPost",
      "httpMethod": "post",
      "description": "Add a document (this document is analyzed to be saved in the correct folder and correct space)",
      "parameters": [
        {
          "name": "Accounting",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "AddContractAllowed",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "Author",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Comment",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "File",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "Title",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/hub/menus",
      "method": "/hub/menusGet",
      "httpMethod": "get",
      "description": "Returns predefined folders and workbooks of the Hub for all the spaces",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/hub/menus/all",
      "method": "/hub/menus/allGet",
      "httpMethod": "get",
      "description": "Returns predefined folders and workbooks of the Hub for all the spaces and customer spaces",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/hub/payslips",
      "method": "/hub/payslipsPost",
      "httpMethod": "post",
      "description": "Add a payslip (this document is analyzed to be saved in the correct folder and correct space)",
      "parameters": [
        {
          "name": "Accounting",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "AddContractAllowed",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "Author",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Comment",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "File",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "Title",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/hub/spaces/{spaceId}/documents",
      "method": "/hub/spaces/{spaceId}/documentsPost",
      "httpMethod": "post",
      "description": "Add a document in a space (this document is analyzed to be saved in the correct folder)",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Accounting",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "Author",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Code",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Comment",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "File",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "Title",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/hub/spaces/{spaceId}/menus",
      "method": "/hub/spaces/{spaceId}/menusGet",
      "httpMethod": "get",
      "description": "Returns predefined folders and workbooks of the Hub for the space",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/hub/spaces/{spaceId}/payslips",
      "method": "/hub/spaces/{spaceId}/payslipsPost",
      "httpMethod": "post",
      "description": "Add a payslip in a space (this document is analyzed to be saved in the correct folder)",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Accounting",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "Author",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Code",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Comment",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "File",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "Title",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/menus",
      "method": "/menusGet",
      "httpMethod": "get",
      "description": "Returns predefined entries",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/menus/{menuId}/documents",
      "method": "/menus/{menuId}/documentsPost",
      "httpMethod": "post",
      "description": "add a document to the target menuId",
      "parameters": [
        {
          "name": "menuId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Author",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Comment",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "File",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "Title",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/profile",
      "method": "/profileGet",
      "httpMethod": "get",
      "description": "Returns status of member",
      "parameters": [
        {
          "name": "Contract",
          "schema": "string",
          "required": false,
          "description": "to get a contract (if not signed error 404 + html contract)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/profile",
      "method": "/profilePatch",
      "httpMethod": "patch",
      "description": "modify infos of profile",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/profile",
      "method": "/profilePost",
      "httpMethod": "post",
      "description": "create infos of profile",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/profile/email",
      "method": "/profile/emailPatch",
      "httpMethod": "patch",
      "description": "modify email of profile",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/profile/id-file",
      "method": "/profile/idFileGet",
      "httpMethod": "get",
      "description": "Returns status of member",
      "parameters": [
        {
          "name": "Contract",
          "schema": "string",
          "required": false,
          "description": "to get a contract (if not signed error 404 + html contract)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/profile/mobile",
      "method": "/profile/mobilePatch",
      "httpMethod": "patch",
      "description": "modify mobile of profile",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/registration",
      "method": "/registrationGet",
      "httpMethod": "get",
      "description": "Returns the method to get the validation code or the link to register after invitation",
      "parameters": [
        {
          "name": "Code",
          "schema": "string",
          "required": true,
          "description": "Code of the invitation"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/registration",
      "method": "/registrationPost",
      "httpMethod": "post",
      "description": "complete the invitation",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/session",
      "method": "/sessionGet",
      "httpMethod": "get",
      "description": "Returns member id of user logged",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces",
      "method": "/spacesGet",
      "httpMethod": "get",
      "description": "Returns spaces of my group",
      "parameters": [
        {
          "name": "Name",
          "schema": "string",
          "required": false,
          "description": "Name of the space"
        },
        {
          "name": "Type",
          "schema": "string",
          "required": false,
          "description": "Type of the space"
        },
        {
          "name": "RegistrationNumber",
          "schema": "string",
          "required": false,
          "description": "registration number of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces",
      "method": "/spacesPost",
      "httpMethod": "post",
      "description": "Add a Space in my group",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/all",
      "method": "/spaces/allGet",
      "httpMethod": "get",
      "description": "Returns all spaces",
      "parameters": [
        {
          "name": "Name",
          "schema": "string",
          "required": false,
          "description": "Name of the space"
        },
        {
          "name": "Type",
          "schema": "string",
          "required": false,
          "description": "Type of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}",
      "method": "/spaces/{id}Delete",
      "httpMethod": "delete",
      "description": "Delete a Space (only space not delivered to customer)",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}",
      "method": "/spaces/{id}Get",
      "httpMethod": "get",
      "description": "Returns a space",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}",
      "method": "/spaces/{id}Patch",
      "httpMethod": "patch",
      "description": "Modify a Space (except private)",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/accounting-year",
      "method": "/spaces/{id}/accountingYearGet",
      "httpMethod": "get",
      "description": "Returns list of accounting years for the space {id}",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "End",
          "schema": "string",
          "required": false,
          "description": "End date of the accounting year (YYYYMM or YYYYMMDD) (range not available)"
        },
        {
          "name": "EffectiveDate",
          "schema": "string",
          "required": false,
          "description": "Effective date inside  the accounting year  (range not available)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/accounting-year",
      "method": "/spaces/{id}/accountingYearPost",
      "httpMethod": "post",
      "description": "Create a accounting year for the space id",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/collective-decision",
      "method": "/spaces/{id}/collectiveDecisionGet",
      "httpMethod": "get",
      "description": "Returns list of collective decisions for the space {id}",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": "Date of the collective decision YYYMMDD"
        },
        {
          "name": "Event",
          "schema": "string",
          "required": false,
          "description": "Event of the collective decision (see post for the list of events)"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        },
        {
          "name": "HasCompanyRegistrationCertificate",
          "schema": "string",
          "required": false,
          "description": "If true returns only invoices with a CompanyRegistrationCertificate"
        },
        {
          "name": "HasStatus",
          "schema": "string",
          "required": false,
          "description": "If true returns only invoices with a Status"
        },
        {
          "name": "HasSireneRegister",
          "schema": "string",
          "required": false,
          "description": "If true returns only invoices with a SireneRegister"
        },
        {
          "name": "HasMinutes",
          "schema": "string",
          "required": false,
          "description": "If true returns only invoices with Minutes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/collective-decision",
      "method": "/spaces/{id}/collectiveDecisionPost",
      "httpMethod": "post",
      "description": "Create a colletive decision for the space id",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/company-entities",
      "method": "/spaces/{id}/companyEntitiesGet",
      "httpMethod": "get",
      "description": "Returns list of company entities",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Name",
          "schema": "string",
          "required": false,
          "description": "Name of the company entity"
        },
        {
          "name": "LegalName",
          "schema": "string",
          "required": false,
          "description": "Legal name of the company entity"
        },
        {
          "name": "RegistrationNumber",
          "schema": "string",
          "required": false,
          "description": "registration number of the company entity"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/company-entities",
      "method": "/spaces/{id}/companyEntitiesPost",
      "httpMethod": "post",
      "description": "Add a Company Entity in a Space",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/company-entities/all",
      "method": "/spaces/{id}/companyEntities/allGet",
      "httpMethod": "get",
      "description": "Returns list of company entities even company entities archived",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Name",
          "schema": "string",
          "required": false,
          "description": "Name of the company entity"
        },
        {
          "name": "RegistrationNumber",
          "schema": "string",
          "required": false,
          "description": "registration number of the company entity"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/company-entities/{companyId}",
      "method": "/spaces/{id}/companyEntities/{companyId}Get",
      "httpMethod": "get",
      "description": "Returns a compay entity",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Id of the company entity"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/company-entities/{companyId}",
      "method": "/spaces/{id}/companyEntities/{companyId}Patch",
      "httpMethod": "patch",
      "description": "Modify a company entity",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Id of the company entity to modify"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/company-entities/{personId}/details",
      "method": "/spaces/{id}/companyEntities/{personId}/detailsGet",
      "httpMethod": "get",
      "description": "Returns all details of a company entity",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "personId",
          "schema": "string",
          "required": true,
          "description": "Id of the company entity to get"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/company-entities/{personId}/details",
      "method": "/spaces/{id}/companyEntities/{personId}/detailsPost",
      "httpMethod": "post",
      "description": "Replace or Add a contact detail for a person",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "personId",
          "schema": "string",
          "required": true,
          "description": "Id of the person or memberId"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/company-entities/{personId}/details/{designation}",
      "method": "/spaces/{id}/companyEntities/{personId}/details/{designation}Delete",
      "httpMethod": "delete",
      "description": "delete a contact detail for a company entity",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "personId",
          "schema": "string",
          "required": true,
          "description": "Id of the person or memberId"
        },
        {
          "name": "designation",
          "schema": "string",
          "required": true,
          "description": "designation"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/documents/download",
      "method": "/spaces/{id}/documents/downloadPost",
      "httpMethod": "post",
      "description": "create an archive with documents",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/folders/{folderId}/persons/{memberId}",
      "method": "/spaces/{id}/folders/{folderId}/persons/{memberId}Get",
      "httpMethod": "get",
      "description": "return the access of a person in a customer contract",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "memberId",
          "schema": "string",
          "required": true,
          "description": "memberId of the person"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "id of the customer folder"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/folders/{folderId}/persons/{memberId}",
      "method": "/spaces/{id}/folders/{folderId}/persons/{memberId}Patch",
      "httpMethod": "patch",
      "description": "Add/Modify/Delete a person in a customer contract (except manager)",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "memberId",
          "schema": "string",
          "required": true,
          "description": "memberId of the person"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "id of the customer folder"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/folders/{folderId}/persons/{memberId}/activeaccess",
      "method": "/spaces/{id}/folders/{folderId}/persons/{memberId}/activeaccessPatch",
      "httpMethod": "patch",
      "description": "open an access",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "memberId",
          "schema": "string",
          "required": true,
          "description": "memberId of the person"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "id of the customer folder"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/folders/{folderId}/persons/{memberId}/unactiveaccess",
      "method": "/spaces/{id}/folders/{folderId}/persons/{memberId}/unactiveaccessPatch",
      "httpMethod": "patch",
      "description": "close an access",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "memberId",
          "schema": "string",
          "required": true,
          "description": "memberId of the person"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "id of the customer folder"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/folders/{folderId}/persons/{personId}/guest-in-space",
      "method": "/spaces/{id}/folders/{folderId}/persons/{personId}/guestInSpacePost",
      "httpMethod": "post",
      "description": "invite a owner in a space",
      "parameters": [
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder customer"
        },
        {
          "name": "personId",
          "schema": "string",
          "required": true,
          "description": "Id of the person to invite to his space"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "PersonId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/groups",
      "method": "/spaces/{id}/groupsGet",
      "httpMethod": "get",
      "description": "Returns list of groups",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Name",
          "schema": "string",
          "required": false,
          "description": "Name of the groups"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/groups",
      "method": "/spaces/{id}/groupsPost",
      "httpMethod": "post",
      "description": "Add a group in a Space",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/groups/all",
      "method": "/spaces/{id}/groups/allGet",
      "httpMethod": "get",
      "description": "Returns list of groups even archived of the space",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Name",
          "schema": "string",
          "required": false,
          "description": "Name of the group"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/groups/{groupId}",
      "method": "/spaces/{id}/groups/{groupId}Get",
      "httpMethod": "get",
      "description": "Returns a group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "Id of the group"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/groups/{groupId}",
      "method": "/spaces/{id}/groups/{groupId}Patch",
      "httpMethod": "patch",
      "description": "Modify a group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "Id of the group to modify"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/groups/{groupId}/folders/{folderId}",
      "method": "/spaces/{id}/groups/{groupId}/folders/{folderId}Delete",
      "httpMethod": "delete",
      "description": "delete access to a folder for a group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "Id of the group to modify"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/groups/{groupId}/folders/{folderId}",
      "method": "/spaces/{id}/groups/{groupId}/folders/{folderId}Patch",
      "httpMethod": "patch",
      "description": "Add access to a folder for a group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "Id of the group to modify"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/groups/{groupId}/persons/{memberId}",
      "method": "/spaces/{id}/groups/{groupId}/persons/{memberId}Delete",
      "httpMethod": "delete",
      "description": "Delete a person of a group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "Id of the group to modify"
        },
        {
          "name": "memberId",
          "schema": "string",
          "required": true,
          "description": "MemberId of the person"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/groups/{groupId}/persons/{memberId}",
      "method": "/spaces/{id}/groups/{groupId}/persons/{memberId}Patch",
      "httpMethod": "patch",
      "description": "Add a person to a group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "Id of the group to modify"
        },
        {
          "name": "memberId",
          "schema": "string",
          "required": true,
          "description": "MemberId of the person"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/legal",
      "method": "/spaces/{id}/legalGet",
      "httpMethod": "get",
      "description": "Returns legal information of a space (except private)",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/legal",
      "method": "/spaces/{id}/legalPatch",
      "httpMethod": "patch",
      "description": "Modify legal information of a Space (except private)",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/logo",
      "method": "/spaces/{id}/logoGet",
      "httpMethod": "get",
      "description": "Returns a space with the logo",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/persons",
      "method": "/spaces/{id}/personsGet",
      "httpMethod": "get",
      "description": "Returns list of persons",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Function",
          "schema": "string",
          "required": false,
          "description": "Function of the person"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        },
        {
          "name": "Name",
          "schema": "string",
          "required": false,
          "description": "Name of the person"
        },
        {
          "name": "Validated",
          "schema": "string",
          "required": false,
          "description": "Status of the person"
        },
        {
          "name": "Email",
          "schema": "string",
          "required": false,
          "description": "Email of the person"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/persons",
      "method": "/spaces/{id}/personsPost",
      "httpMethod": "post",
      "description": "Add a Person in a Space",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/persons/all",
      "method": "/spaces/{id}/persons/allGet",
      "httpMethod": "get",
      "description": "Returns list of persons even persons archived",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Name",
          "schema": "string",
          "required": false,
          "description": "Name of the person"
        },
        {
          "name": "Function",
          "schema": "string",
          "required": false,
          "description": "Function of the person"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        },
        {
          "name": "Validated",
          "schema": "string",
          "required": false,
          "description": "Status of the person"
        },
        {
          "name": "Email",
          "schema": "string",
          "required": false,
          "description": "Email of the person"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/persons/{memberId}/player",
      "method": "/spaces/{id}/persons/{memberId}/playerPatch",
      "httpMethod": "patch",
      "description": "Modify the role of a person",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "memberId",
          "schema": "string",
          "required": true,
          "description": "memberId of the person"
        },
        {
          "name": "ClientManagement",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "IsAdmin",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "Player",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "PlayerEnd",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/persons/{personId}",
      "method": "/spaces/{id}/persons/{personId}Delete",
      "httpMethod": "delete",
      "description": "delete a person",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "personId",
          "schema": "string",
          "required": true,
          "description": "Id of the person to modify or memberId"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/persons/{personId}",
      "method": "/spaces/{id}/persons/{personId}Get",
      "httpMethod": "get",
      "description": "Returns a person",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "personId",
          "schema": "string",
          "required": true,
          "description": "Id of the person to get or memberId"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/persons/{personId}",
      "method": "/spaces/{id}/persons/{personId}Patch",
      "httpMethod": "patch",
      "description": "Modify a person",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "personId",
          "schema": "string",
          "required": true,
          "description": "Id of the person to modify or memberId"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/persons/{personId}/details",
      "method": "/spaces/{id}/persons/{personId}/detailsGet",
      "httpMethod": "get",
      "description": "Returns all details of a person",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "personId",
          "schema": "string",
          "required": true,
          "description": "Id of the person to get or memberId"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/persons/{personId}/details",
      "method": "/spaces/{id}/persons/{personId}/detailsPost",
      "httpMethod": "post",
      "description": "Replace or Add a contact detail for a person",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "personId",
          "schema": "string",
          "required": true,
          "description": "Id of the person or memberId"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/persons/{personId}/details/{designation}",
      "method": "/spaces/{id}/persons/{personId}/details/{designation}Delete",
      "httpMethod": "delete",
      "description": "delete a contact detail for a person",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "personId",
          "schema": "string",
          "required": true,
          "description": "Id of the person or memberId"
        },
        {
          "name": "designation",
          "schema": "string",
          "required": true,
          "description": "designation"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/persons/{personId}/folders",
      "method": "/spaces/{id}/persons/{personId}/foldersGet",
      "httpMethod": "get",
      "description": "Returns list of folders with exceptionnal access of the person personId",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "personId",
          "schema": "string",
          "required": true,
          "description": "Id of the person to get folders"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/persons/{personId}/groups",
      "method": "/spaces/{id}/persons/{personId}/groupsGet",
      "httpMethod": "get",
      "description": "Returns list of groups of the person personId",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "personId",
          "schema": "string",
          "required": true,
          "description": "Id of the person to get groups"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/persons/{personId}/portfolios",
      "method": "/spaces/{id}/persons/{personId}/portfoliosGet",
      "httpMethod": "get",
      "description": "Returns list of portfolios of the person personId",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "personId",
          "schema": "string",
          "required": true,
          "description": "Id of the person to get portfolios"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/persons/{personId}/portfolios",
      "method": "/spaces/{id}/persons/{personId}/portfoliosPost",
      "httpMethod": "post",
      "description": "Create a portfolio for the person personId",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "personId",
          "schema": "string",
          "required": true,
          "description": "Id of the person who will be the owner of the portfolio"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/portfolios/{portfolioId}/persons/{memberId}",
      "method": "/spaces/{id}/portfolios/{portfolioId}/persons/{memberId}Patch",
      "httpMethod": "patch",
      "description": "Add/Modify/Delete a person in a portfolio (except manager)",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "memberId",
          "schema": "string",
          "required": true,
          "description": "memberId of the person"
        },
        {
          "name": "portfolioId",
          "schema": "string",
          "required": true,
          "description": "id of the portfolio"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/professional-vehicles",
      "method": "/spaces/{id}/professionalVehiclesGet",
      "httpMethod": "get",
      "description": "Returns list of professionalvehicles for the space {id}",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Designation",
          "schema": "string",
          "required": false,
          "description": "designation of the vehicle"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/professional-vehicles",
      "method": "/spaces/{id}/professionalVehiclesPost",
      "httpMethod": "post",
      "description": "Create a professional vehicle for the space",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/settings/nf203/logs",
      "method": "/spaces/{id}/settings/nf203/logsGet",
      "httpMethod": "get",
      "description": "Returns state of activation of logs",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/settings/nf203/logs",
      "method": "/spaces/{id}/settings/nf203/logsPost",
      "httpMethod": "post",
      "description": "Enable/Disable logs",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Enabled",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/status",
      "method": "/spaces/{id}/statusGet",
      "httpMethod": "get",
      "description": "Returns all status of the space",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/status",
      "method": "/spaces/{id}/statusPost",
      "httpMethod": "post",
      "description": "Replace or Add a status",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/status/{code}",
      "method": "/spaces/{id}/status/{code}Delete",
      "httpMethod": "delete",
      "description": "delete a status of the space",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "code of the status"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/tax-contracts",
      "method": "/spaces/{id}/taxContractsGet",
      "httpMethod": "get",
      "description": "Returns list of tax contracts for the space {id}",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/tax-contracts",
      "method": "/spaces/{id}/taxContractsPost",
      "httpMethod": "post",
      "description": "Create a tax contract for the space",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/triggers",
      "method": "/spaces/{id}/triggersGet",
      "httpMethod": "get",
      "description": "Returns list of triggers for the space {id}",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{id}/triggers/{name}",
      "method": "/spaces/{id}/triggers/{name}Delete",
      "httpMethod": "delete",
      "description": "Deletes a trigger for the space id",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "trigger name"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{id}/triggers/{name}",
      "method": "/spaces/{id}/triggers/{name}Post",
      "httpMethod": "post",
      "description": "Creates a trigger for the space id",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "trigger name"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/common-folders/{id}",
      "method": "/spaces/{spaceId}/commonFolders/{id}Delete",
      "httpMethod": "delete",
      "description": "Delete a common folder",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/common-folders/{id}",
      "method": "/spaces/{spaceId}/commonFolders/{id}Patch",
      "httpMethod": "patch",
      "description": "Modify a common folder",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/company-entities/{id}/follow-ups",
      "method": "/spaces/{spaceId}/companyEntities/{id}/followUpsGet",
      "httpMethod": "get",
      "description": "Returns folder of the company entity",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the company entity"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/customers",
      "method": "/spaces/{spaceId}/customersGet",
      "httpMethod": "get",
      "description": "Returns folder with Id and customer data",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "CustomerNumber",
          "schema": "string",
          "required": false,
          "description": "CustomerNumber of the customer"
        },
        {
          "name": "WithContractingPartner",
          "schema": "string",
          "required": false,
          "description": "if present returns infos of the ContractingPartner too"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/customers/all",
      "method": "/spaces/{spaceId}/customers/allGet",
      "httpMethod": "get",
      "description": "Returns folder with Id and customer data (even archived)",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "CustomerNumber",
          "schema": "string",
          "required": false,
          "description": "CustomerNumber of the employee"
        },
        {
          "name": "WithContractingPartner",
          "schema": "string",
          "required": false,
          "description": "if present returns infos of the ContractingPartner too"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/documents",
      "method": "/spaces/{spaceId}/documentsGet",
      "httpMethod": "get",
      "description": "Returns documents of the folder",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "FullText",
          "schema": "string",
          "required": false,
          "description": "Text to find"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        },
        {
          "name": "Class",
          "schema": "string",
          "required": false,
          "description": "class of the document to find"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/documents/{documentId}",
      "method": "/spaces/{spaceId}/documents/{documentId}Patch",
      "httpMethod": "patch",
      "description": "modify a doc",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "Accounting",
          "schema": "object",
          "description": ""
        },
        {
          "name": "Author",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Comment",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Title",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/documents/{documentId}/extend",
      "method": "/spaces/{spaceId}/documents/{documentId}/extendGet",
      "httpMethod": "get",
      "description": "read the data of a document",
      "parameters": [
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/documents/{documentId}/extend",
      "method": "/spaces/{spaceId}/documents/{documentId}/extendPost",
      "httpMethod": "post",
      "description": "Add a data to a document",
      "parameters": [
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/documents/{documentId}/folders",
      "method": "/spaces/{spaceId}/documents/{documentId}/foldersGet",
      "httpMethod": "get",
      "description": "Returns versions of the document",
      "parameters": [
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/documents/{documentId}/mailing",
      "method": "/spaces/{spaceId}/documents/{documentId}/mailingPost",
      "httpMethod": "post",
      "description": "send by mail a document",
      "parameters": [
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/documents/{documentId}/mailingprice",
      "method": "/spaces/{spaceId}/documents/{documentId}/mailingpriceGet",
      "httpMethod": "get",
      "description": "returns the number of pages and the price of the pdf to send by mail",
      "parameters": [
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/documents/{documentId}/versions",
      "method": "/spaces/{spaceId}/documents/{documentId}/versionsGet",
      "httpMethod": "get",
      "description": "Returns versions of the document",
      "parameters": [
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/documents/{documentId}/versions",
      "method": "/spaces/{spaceId}/documents/{documentId}/versionsPost",
      "httpMethod": "post",
      "description": "Add a version to a document and set it as current",
      "parameters": [
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/documents/{documentId}/versions/current",
      "method": "/spaces/{spaceId}/documents/{documentId}/versions/currentGet",
      "httpMethod": "get",
      "description": "Returns current version of the document",
      "parameters": [
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/documents/{id}/access",
      "method": "/spaces/{spaceId}/documents/{id}/accessGet",
      "httpMethod": "get",
      "description": "Returns accesses of one document",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/documents/{id}/accounting",
      "method": "/spaces/{spaceId}/documents/{id}/accountingGet",
      "httpMethod": "get",
      "description": "Returns the document with the accounting property",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/documents/{id}/download",
      "method": "/spaces/{spaceId}/documents/{id}/downloadGet",
      "httpMethod": "get",
      "description": "Returns content of one document",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/employees",
      "method": "/spaces/{spaceId}/employeesGet",
      "httpMethod": "get",
      "description": "Returns folders with Id and employee data",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "SSNumber",
          "schema": "string",
          "required": false,
          "description": "SSNumber of the employee"
        },
        {
          "name": "EmployeeNumber",
          "schema": "string",
          "required": false,
          "description": "EmployeeNumber of the employee"
        },
        {
          "name": "WithContractingPartner",
          "schema": "string",
          "required": false,
          "description": "if present returns infos of the ContractingPartner too"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/employees/all",
      "method": "/spaces/{spaceId}/employees/allGet",
      "httpMethod": "get",
      "description": "Returns folders with Id and employee data (even archived)",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "SSNumber",
          "schema": "string",
          "required": false,
          "description": "SSNumber of the employee"
        },
        {
          "name": "EmployeeNumber",
          "schema": "string",
          "required": false,
          "description": "EmployeeNumber of the employee"
        },
        {
          "name": "WithContractingPartner",
          "schema": "string",
          "required": false,
          "description": "if present returns infos of the ContractingPartner too"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/employers",
      "method": "/spaces/{spaceId}/employersGet",
      "httpMethod": "get",
      "description": "Returns folders with Id and employer data",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "EmployeeNumber",
          "schema": "string",
          "required": false,
          "description": "EmployeeNumber of the employer contract"
        },
        {
          "name": "WithContractingPartner",
          "schema": "string",
          "required": false,
          "description": "if present returns infos of the ContractingPartner too"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/employers/all",
      "method": "/spaces/{spaceId}/employers/allGet",
      "httpMethod": "get",
      "description": "Returns folders with Id and employer data (even archived)",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "EmployeeNumber",
          "schema": "string",
          "required": false,
          "description": "EmployeeNumber of the employer contract"
        },
        {
          "name": "WithContractingPartner",
          "schema": "string",
          "required": false,
          "description": "if present returns infos of the ContractingPartner too"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/extend",
      "method": "/spaces/{spaceId}/extendGet",
      "httpMethod": "get",
      "description": "read the data of a space",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/extend",
      "method": "/spaces/{spaceId}/extendPost",
      "httpMethod": "post",
      "description": "Add a data to a space",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders",
      "method": "/spaces/{spaceId}/foldersGet",
      "httpMethod": "get",
      "description": "Returns folders of the space",
      "parameters": [
        {
          "name": "Name",
          "schema": "string",
          "required": false,
          "description": "Name of the folder"
        },
        {
          "name": "Keywords",
          "schema": "string",
          "required": false,
          "description": "keywords attached to the folder"
        },
        {
          "name": "RootFolders",
          "schema": "string",
          "required": false,
          "description": "only root folders"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        },
        {
          "name": "Class",
          "schema": "string",
          "required": false,
          "description": "class of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/all",
      "method": "/spaces/{spaceId}/folders/allGet",
      "httpMethod": "get",
      "description": "Returns folders of the space (even archived)",
      "parameters": [
        {
          "name": "Name",
          "schema": "string",
          "required": false,
          "description": "Name of the folder"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        },
        {
          "name": "Keywords",
          "schema": "string",
          "required": false,
          "description": "keywords attached to the folder"
        },
        {
          "name": "Class",
          "schema": "string",
          "required": false,
          "description": "class of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/bank-statements/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/bankStatements/{documentId}Delete",
      "httpMethod": "delete",
      "description": "delete a bank statement",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/bank-statements/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/bankStatements/{documentId}Patch",
      "httpMethod": "patch",
      "description": "modify a bank statement",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "Balance",
          "schema": "number",
          "description": ""
        },
        {
          "name": "Number",
          "schema": "number",
          "description": ""
        },
        {
          "name": "StatementDate",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/contractual-documents/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/contractualDocuments/{documentId}Delete",
      "httpMethod": "delete",
      "description": "delete a contractual document",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/contractual-documents/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/contractualDocuments/{documentId}Patch",
      "httpMethod": "patch",
      "description": "modify a contractual document",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "Amount",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Designation",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "StartDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/corporate-tax-declarations/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/corporateTaxDeclarations/{documentId}Delete",
      "httpMethod": "delete",
      "description": "delete a corporate tax declaration",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/corporate-tax-declarations/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/corporateTaxDeclarations/{documentId}Patch",
      "httpMethod": "patch",
      "description": "modify a coporate tax declaration",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "Amount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "DeclarationDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Order",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "TaxBase",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/expense-proofs/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/expenseProofs/{documentId}Delete",
      "httpMethod": "delete",
      "description": "delete an expense proof",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/expense-proofs/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/expenseProofs/{documentId}Patch",
      "httpMethod": "patch",
      "description": "modify an expense report",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "Account",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ArchivalDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "BeforeVAT",
          "schema": "number",
          "description": ""
        },
        {
          "name": "ExpenseDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ExpenseReportId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Provider",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Reason",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "VAT",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/expense-reports/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/expenseReports/{documentId}Delete",
      "httpMethod": "delete",
      "description": "delete an expense report",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/expense-reports/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/expenseReports/{documentId}Patch",
      "httpMethod": "patch",
      "description": "modify an expense report",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "BeforeVAT",
          "schema": "number",
          "description": ""
        },
        {
          "name": "ExpenseDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "InclVAT",
          "schema": "number",
          "description": ""
        },
        {
          "name": "ProcessingDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "VAT",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/invoices/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/invoices/{documentId}Delete",
      "httpMethod": "delete",
      "description": "delete an invoice document",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/invoices/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/invoices/{documentId}Patch",
      "httpMethod": "patch",
      "description": "modify a invoice",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "BeforeVAT",
          "schema": "number",
          "description": ""
        },
        {
          "name": "DueDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "InclVAT",
          "schema": "number",
          "description": ""
        },
        {
          "name": "InvoiceDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "PaymentDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "VAT",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/nominative-social-declarations/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/nominativeSocialDeclarations/{documentId}Get",
      "httpMethod": "get",
      "description": "get a nominative social declaration",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/other-taxes/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/otherTaxes/{documentId}Delete",
      "httpMethod": "delete",
      "description": "delete a tax declaration",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/other-taxes/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/otherTaxes/{documentId}Patch",
      "httpMethod": "patch",
      "description": "modify an other tax declaration",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "Amount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "DeclarationDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Reference",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/payrolls/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/payrolls/{documentId}Delete",
      "httpMethod": "delete",
      "description": "delete a payroll",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/payrolls/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/payrolls/{documentId}Patch",
      "httpMethod": "patch",
      "description": "modify a payroll",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "Begin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "EmployeeContributions",
          "schema": "number",
          "description": ""
        },
        {
          "name": "EmployerContributions",
          "schema": "number",
          "description": ""
        },
        {
          "name": "End",
          "schema": "string",
          "description": ""
        },
        {
          "name": "NetAmount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "TotalGrossAmount",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/payrolls/{documentId}/refresh",
      "method": "/spaces/{spaceId}/folders/{folderId}/payrolls/{documentId}/refreshPost",
      "httpMethod": "post",
      "description": "recalculate a payroll",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/payslips/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/payslips/{documentId}Delete",
      "httpMethod": "delete",
      "description": "delete a payslip",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/payslips/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/payslips/{documentId}Patch",
      "httpMethod": "patch",
      "description": "modify a payslip",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "Begin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "EmployeeContributions",
          "schema": "number",
          "description": ""
        },
        {
          "name": "EmployerContributions",
          "schema": "number",
          "description": ""
        },
        {
          "name": "End",
          "schema": "string",
          "description": ""
        },
        {
          "name": "FixedGrossAmount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "NetAmount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "TotalGrossAmount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "Vacation",
          "schema": "number",
          "description": ""
        },
        {
          "name": "VariableGrossAmount",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/social-contracts/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/socialContracts/{documentId}Delete",
      "httpMethod": "delete",
      "description": "delete a social contract",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/social-contracts/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/socialContracts/{documentId}Patch",
      "httpMethod": "patch",
      "description": "modify a social contract",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "ContractDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ContractDuration",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ContractualChange",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Position",
          "schema": "string",
          "description": ""
        },
        {
          "name": "WageDevelopments",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/social-declarations/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/socialDeclarations/{documentId}Delete",
      "httpMethod": "delete",
      "description": "delete a social declaration",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/social-declarations/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/socialDeclarations/{documentId}Patch",
      "httpMethod": "patch",
      "description": "modify a social declaration",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "Amount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "DeclarationDate",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/vat-declarations/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/vatDeclarations/{documentId}Delete",
      "httpMethod": "delete",
      "description": "delete a VAT declaration",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{folderId}/vat-declarations/{documentId}",
      "method": "/spaces/{spaceId}/folders/{folderId}/vatDeclarations/{documentId}Patch",
      "httpMethod": "patch",
      "description": "modify a vat declaration",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        },
        {
          "name": "Begin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "CollectedVAT",
          "schema": "number",
          "description": ""
        },
        {
          "name": "CreditVAT",
          "schema": "number",
          "description": ""
        },
        {
          "name": "DeductibleVAT",
          "schema": "number",
          "description": ""
        },
        {
          "name": "End",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ExemptTurnover",
          "schema": "number",
          "description": ""
        },
        {
          "name": "Number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "PayableVAT",
          "schema": "number",
          "description": ""
        },
        {
          "name": "TaxableTurnover",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}",
      "method": "/spaces/{spaceId}/folders/{id}Get",
      "httpMethod": "get",
      "description": "Returns folder with Id",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}",
      "method": "/spaces/{spaceId}/folders/{id}Patch",
      "httpMethod": "patch",
      "description": "Modify a Folder (except Name, Class, ModificationDate and ArchivalDate)",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/accounting-year",
      "method": "/spaces/{spaceId}/folders/{id}/accountingYearDelete",
      "httpMethod": "delete",
      "description": "delete an AccountingYear",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/accounting-year",
      "method": "/spaces/{spaceId}/folders/{id}/accountingYearPatch",
      "httpMethod": "patch",
      "description": "Modify a Folder (except Name, Class, ModificationDate and ArchivalDate) and AccountingYear data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/accountings",
      "method": "/spaces/{spaceId}/folders/{id}/accountingsGet",
      "httpMethod": "get",
      "description": "Returns accountings documents of the folder (results and taxation or accountingyear)",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": "date range of the documents"
        },
        {
          "name": "FolderDate",
          "schema": "string",
          "required": false,
          "description": "date range of attachment"
        },
        {
          "name": "Title",
          "schema": "string",
          "required": false,
          "description": "Title of the accounting document"
        },
        {
          "name": "Workbook",
          "schema": "string",
          "required": false,
          "description": "workbook of the accounting"
        },
        {
          "name": "Class",
          "schema": "string",
          "required": false,
          "description": "class of the accounting"
        },
        {
          "name": "AccountedOn",
          "schema": "string",
          "required": false,
          "description": "accountedon of the accounting (boolean available)"
        },
        {
          "name": "WithFolders",
          "schema": "string",
          "required": false,
          "description": "if present, the folders containing the documents are returned"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/accountings-journal",
      "method": "/spaces/{spaceId}/folders/{id}/accountingsJournalGet",
      "httpMethod": "get",
      "description": "journal of accountings document delivered to a customer",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the customer folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "DeliveryDate",
          "schema": "string",
          "required": false,
          "description": "delivery dates of the document"
        },
        {
          "name": "AccountingDate",
          "schema": "string",
          "required": false,
          "description": "accounting dates of the document"
        },
        {
          "name": "Number",
          "schema": "integer",
          "required": false,
          "description": "numbers of the document"
        },
        {
          "name": "Workbook",
          "schema": "string",
          "required": false,
          "description": "workbook of the document"
        },
        {
          "name": "YearMonth",
          "schema": "string",
          "required": false,
          "description": "yearmonth of the document"
        },
        {
          "name": "Class",
          "schema": "string",
          "required": false,
          "description": "class of the document"
        },
        {
          "name": "Code",
          "schema": "string",
          "required": false,
          "description": "code of the document"
        },
        {
          "name": "TargetFolderName",
          "schema": "string",
          "required": false,
          "description": "Name of the target folder of the document"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/bank",
      "method": "/spaces/{spaceId}/folders/{id}/bankDelete",
      "httpMethod": "delete",
      "description": "Delete a Folder (except Name, Class, ModificationDate and ArchivalDate) and Bank data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/bank",
      "method": "/spaces/{spaceId}/folders/{id}/bankGet",
      "httpMethod": "get",
      "description": "Returns folder with Id and bank data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/bank",
      "method": "/spaces/{spaceId}/folders/{id}/bankPatch",
      "httpMethod": "patch",
      "description": "Modify a Folder (except Name, Class, ModificationDate and ArchivalDate) and Bank data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/bank-statements",
      "method": "/spaces/{spaceId}/folders/{id}/bankStatementsGet",
      "httpMethod": "get",
      "description": "Returns bank statements of the folder bank",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder bank"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": "range date of the documents"
        },
        {
          "name": "Number",
          "schema": "string",
          "required": false,
          "description": "Number of the bank statement"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/bank-statements",
      "method": "/spaces/{spaceId}/folders/{id}/bankStatementsPost",
      "httpMethod": "post",
      "description": "Add a bank statement in a folder bank",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder bank"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/collective-decision",
      "method": "/spaces/{spaceId}/folders/{id}/collectiveDecisionPatch",
      "httpMethod": "patch",
      "description": "Modify a Folder (except Name, Class, ModificationDate and ArchivalDate) and Collective Decision data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/common-folders",
      "method": "/spaces/{spaceId}/folders/{id}/commonFoldersGet",
      "httpMethod": "get",
      "description": "Returns common folders of a folder",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Name",
          "schema": "string",
          "required": false,
          "description": "Name of the folder"
        },
        {
          "name": "Keywords",
          "schema": "string",
          "required": false,
          "description": "keywords attached to the folder"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/common-folders",
      "method": "/spaces/{spaceId}/folders/{id}/commonFoldersPost",
      "httpMethod": "post",
      "description": "Add a common folder in another folder",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/common-folders/all",
      "method": "/spaces/{spaceId}/folders/{id}/commonFolders/allGet",
      "httpMethod": "get",
      "description": "Returns common folders (even archived) of a folder",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Name",
          "schema": "string",
          "required": false,
          "description": "Name of the folder"
        },
        {
          "name": "Keywords",
          "schema": "string",
          "required": false,
          "description": "keywords attached to the folder"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/contracting-partner",
      "method": "/spaces/{spaceId}/folders/{id}/contractingPartnerGet",
      "httpMethod": "get",
      "description": "Returns all contracting partners of a contract",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder (contract)"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/contracting-partner/space",
      "method": "/spaces/{spaceId}/folders/{id}/contractingPartner/spaceGet",
      "httpMethod": "get",
      "description": "Returns collector space of a contract",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder (contract)"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/contractual-documents",
      "method": "/spaces/{spaceId}/folders/{id}/contractualDocumentsGet",
      "httpMethod": "get",
      "description": "Returns documents of the folder",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": "date range of the documents"
        },
        {
          "name": "FolderDate",
          "schema": "string",
          "required": false,
          "description": "date range of attachment"
        },
        {
          "name": "Type",
          "schema": "string",
          "required": false,
          "description": "Type of the document"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/contractual-documents",
      "method": "/spaces/{spaceId}/folders/{id}/contractualDocumentsPost",
      "httpMethod": "post",
      "description": "Add a document in a folder",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/contractual-relationship",
      "method": "/spaces/{spaceId}/folders/{id}/contractualRelationshipGet",
      "httpMethod": "get",
      "description": "Returns folder with Id and contractual-relationship data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/coporate-tax-declarations",
      "method": "/spaces/{spaceId}/folders/{id}/coporateTaxDeclarationsGet",
      "httpMethod": "get",
      "description": "Returns corporate tax declarations",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder result and taxation"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": "range date of the documents"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/coporate-tax-declarations",
      "method": "/spaces/{spaceId}/folders/{id}/coporateTaxDeclarationsPost",
      "httpMethod": "post",
      "description": "Add a corporate tax declaration",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder result and taxation"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/customer",
      "method": "/spaces/{spaceId}/folders/{id}/customerDelete",
      "httpMethod": "delete",
      "description": "delete a customer",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/customer",
      "method": "/spaces/{spaceId}/folders/{id}/customerGet",
      "httpMethod": "get",
      "description": "Returns folder with Id and customer data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/customer",
      "method": "/spaces/{spaceId}/folders/{id}/customerPatch",
      "httpMethod": "patch",
      "description": "Modify a Folder (except Name, Class, ModificationDate and ArchivalDate) and Customer data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/deliveries-journal",
      "method": "/spaces/{spaceId}/folders/{id}/deliveriesJournalGet",
      "httpMethod": "get",
      "description": "journal of documents delivered to a customer",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the customer folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "DeliveryDate",
          "schema": "string",
          "required": false,
          "description": "delivery dates of the document"
        },
        {
          "name": "AccountingDate",
          "schema": "string",
          "required": false,
          "description": "accounting dates of the document"
        },
        {
          "name": "Number",
          "schema": "integer",
          "required": false,
          "description": "numbers of the document"
        },
        {
          "name": "Class",
          "schema": "string",
          "required": false,
          "description": "class of the document"
        },
        {
          "name": "TargetFolderName",
          "schema": "string",
          "required": false,
          "description": "Name of the target folder of the document"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/documents",
      "method": "/spaces/{spaceId}/folders/{id}/documentsGet",
      "httpMethod": "get",
      "description": "Returns documents of the folder",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": "date range of the documents"
        },
        {
          "name": "Title",
          "schema": "string",
          "required": false,
          "description": "Title of the document"
        },
        {
          "name": "FolderDate",
          "schema": "string",
          "required": false,
          "description": "date range of attachment"
        },
        {
          "name": "Class",
          "schema": "string",
          "required": false,
          "description": "Class of document"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/documents",
      "method": "/spaces/{spaceId}/folders/{id}/documentsPost",
      "httpMethod": "post",
      "description": "Add a document in a folder",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/documents/{documentId}/detach",
      "method": "/spaces/{spaceId}/folders/{id}/documents/{documentId}/detachPatch",
      "httpMethod": "patch",
      "description": "Detach a doc of a folder",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/employee",
      "method": "/spaces/{spaceId}/folders/{id}/employeeDelete",
      "httpMethod": "delete",
      "description": "Delete a Folder (except Name, Class, ModificationDate and ArchivalDate) and Employee data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/employee",
      "method": "/spaces/{spaceId}/folders/{id}/employeeGet",
      "httpMethod": "get",
      "description": "Returns folder with Id and employee data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/employee",
      "method": "/spaces/{spaceId}/folders/{id}/employeePatch",
      "httpMethod": "patch",
      "description": "Modify a Folder (except Name, Class, ModificationDate and ArchivalDate) and Employee data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/expense-proofs",
      "method": "/spaces/{spaceId}/folders/{id}/expenseProofsGet",
      "httpMethod": "get",
      "description": "Returns expense proofs of the folder (social, followup or exchange)",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": "date range of the documents"
        },
        {
          "name": "FolderDate",
          "schema": "string",
          "required": false,
          "description": "date range of attachment"
        },
        {
          "name": "Status",
          "schema": "string",
          "required": false,
          "description": "Status of the expense proof"
        },
        {
          "name": "NoExpenseReport",
          "schema": "boolean",
          "required": false,
          "description": "To return expense proofs not attached to an expense report"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/expense-proofs",
      "method": "/spaces/{spaceId}/folders/{id}/expenseProofsPost",
      "httpMethod": "post",
      "description": "Add a expense proof in a folder followup or exchange",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/expense-reports",
      "method": "/spaces/{spaceId}/folders/{id}/expenseReportsGet",
      "httpMethod": "get",
      "description": "Returns expense reports of the folder (social or followup)",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": "date range of the documents"
        },
        {
          "name": "FolderDate",
          "schema": "string",
          "required": false,
          "description": "date range of attachment"
        },
        {
          "name": "WithExtend",
          "schema": "string",
          "required": false,
          "description": "If present returns also the data extend"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        },
        {
          "name": "ProcessingDate",
          "schema": "string",
          "required": false,
          "description": "range of processing date (boolean available)"
        },
        {
          "name": "ExpenseDate",
          "schema": "undefined",
          "required": false,
          "description": "range of ExpenseDate (valid available)"
        },
        {
          "name": "SortOrder",
          "schema": "string",
          "required": false,
          "description": "order of sort (if absent default is asc)"
        },
        {
          "name": "SortName",
          "schema": "string",
          "required": false,
          "description": "name of value for sort"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/expense-reports",
      "method": "/spaces/{spaceId}/folders/{id}/expenseReportsPost",
      "httpMethod": "post",
      "description": "Add a expense report in a folder followup",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/expense-reports/{expenseReportId}/expense-proofs",
      "method": "/spaces/{spaceId}/folders/{id}/expenseReports/{expenseReportId}/expenseProofsGet",
      "httpMethod": "get",
      "description": "Returns expense proofs linked to the expenseReportId",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "expenseReportId",
          "schema": "string",
          "required": true,
          "description": "Id of the expense report"
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": "Date of the documents (YYYY or YYYYMM or YYYYMMDD)"
        },
        {
          "name": "Status",
          "schema": "string",
          "required": false,
          "description": "Status of the expense proof"
        },
        {
          "name": "FolderDate",
          "schema": "string",
          "required": false,
          "description": "Date of upload of the document (YYYY or YYYYMM or YYYYMMDD)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/insurance",
      "method": "/spaces/{spaceId}/folders/{id}/insuranceDelete",
      "httpMethod": "delete",
      "description": "Delete a Folder (except Name, Class, ModificationDate and ArchivalDate) and Insurance data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/insurance",
      "method": "/spaces/{spaceId}/folders/{id}/insuranceGet",
      "httpMethod": "get",
      "description": "Returns folder with Id and insurance data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/insurance",
      "method": "/spaces/{spaceId}/folders/{id}/insurancePatch",
      "httpMethod": "patch",
      "description": "Modify a Folder (except Name, Class, ModificationDate and ArchivalDate) and Insurance data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/invoices",
      "method": "/spaces/{spaceId}/folders/{id}/invoicesGet",
      "httpMethod": "get",
      "description": "Returns invoices of the folder (customer, provider, accountingyear or root folders customers or providers)",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Title",
          "schema": "string",
          "required": false,
          "description": "Title of the documents"
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": "date range of the documents"
        },
        {
          "name": "Number",
          "schema": "string",
          "required": false,
          "description": "Number of the invoice"
        },
        {
          "name": "InclVAT",
          "schema": "number",
          "required": false,
          "description": "amount incl. VAT"
        },
        {
          "name": "BeforeVAT",
          "schema": "number",
          "required": false,
          "description": "amount before VAT"
        },
        {
          "name": "DueDate",
          "schema": "string",
          "required": false,
          "description": "date due payment"
        },
        {
          "name": "PaymentDate",
          "schema": "string",
          "required": false,
          "description": "date of payment (boolean and valid available)"
        },
        {
          "name": "InvoiceDate",
          "schema": "string",
          "required": false,
          "description": "range date of invoice"
        },
        {
          "name": "FolderDate",
          "schema": "string",
          "required": false,
          "description": "date range of attachment"
        },
        {
          "name": "AccountedOn",
          "schema": "string",
          "required": false,
          "description": "value of AccountedOn (boolean available but not range)"
        },
        {
          "name": "WithExtend",
          "schema": "string",
          "required": false,
          "description": "If present returns also the data extend"
        },
        {
          "name": "Extend",
          "schema": "string",
          "required": false,
          "description": "json object to filter extend data"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        },
        {
          "name": "SortOrder",
          "schema": "string",
          "required": false,
          "description": "order of sort (if absent default is asc)"
        },
        {
          "name": "SortName",
          "schema": "string",
          "required": false,
          "description": "name of value for sort"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/invoices",
      "method": "/spaces/{spaceId}/folders/{id}/invoicesPost",
      "httpMethod": "post",
      "description": "Add a invoice in a folder of a customer or a provider",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/legal-entity",
      "method": "/spaces/{spaceId}/folders/{id}/legalEntityGet",
      "httpMethod": "get",
      "description": "Returns legal entity of a follow up folder",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder (followup)"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/loan",
      "method": "/spaces/{spaceId}/folders/{id}/loanDelete",
      "httpMethod": "delete",
      "description": "Delete a Folder (except Name, Class, ModificationDate and ArchivalDate) and Loan data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/loan",
      "method": "/spaces/{spaceId}/folders/{id}/loanGet",
      "httpMethod": "get",
      "description": "Returns folder with Id and loan data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/loan",
      "method": "/spaces/{spaceId}/folders/{id}/loanPatch",
      "httpMethod": "patch",
      "description": "Modify a Folder (except Name, Class, ModificationDate and ArchivalDate) and Loan data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/messages",
      "method": "/spaces/{spaceId}/folders/{id}/messagesGet",
      "httpMethod": "get",
      "description": "Returns messages of the folder",
      "parameters": [
        {
          "name": "Text",
          "schema": "string",
          "required": false,
          "description": "Name of the message"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        },
        {
          "name": "MessageDate",
          "schema": "string",
          "required": false,
          "description": "date of the message"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/messages",
      "method": "/spaces/{spaceId}/folders/{id}/messagesPost",
      "httpMethod": "post",
      "description": "Write a message in the journal of a folder",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/messages/{messageId}",
      "method": "/spaces/{spaceId}/folders/{id}/messages/{messageId}Get",
      "httpMethod": "get",
      "description": "Returns message with Id",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "messageId",
          "schema": "string",
          "required": true,
          "description": "Id of the mesage"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/messages/{messageId}",
      "method": "/spaces/{spaceId}/folders/{id}/messages/{messageId}Patch",
      "httpMethod": "patch",
      "description": "Modify a Message",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "messageId",
          "schema": "string",
          "required": true,
          "description": "Id of the message"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/nominative-social-declarations",
      "method": "/spaces/{spaceId}/folders/{id}/nominativeSocialDeclarationsGet",
      "httpMethod": "get",
      "description": "Returns nominative social declarations of the folder social",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder social"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": "range date of the documents"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/other-taxes",
      "method": "/spaces/{spaceId}/folders/{id}/otherTaxesGet",
      "httpMethod": "get",
      "description": "Returns other taxes declarations",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder taxcontract"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": "range date of the documents"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/other-taxes",
      "method": "/spaces/{spaceId}/folders/{id}/otherTaxesPost",
      "httpMethod": "post",
      "description": "Add a tax declaration",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder tax contract"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/passwords",
      "method": "/spaces/{spaceId}/folders/{id}/passwordsGet",
      "httpMethod": "get",
      "description": "Returns identifiers/passwords of the folder",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/passwords",
      "method": "/spaces/{spaceId}/folders/{id}/passwordsPost",
      "httpMethod": "post",
      "description": "Write a identifier/password in aa folder",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/passwords/{passwordId}",
      "method": "/spaces/{spaceId}/folders/{id}/passwords/{passwordId}Delete",
      "httpMethod": "delete",
      "description": "delete a password",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "passwordId",
          "schema": "string",
          "required": true,
          "description": "Id of the password"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/passwords/{passwordId}",
      "method": "/spaces/{spaceId}/folders/{id}/passwords/{passwordId}Get",
      "httpMethod": "get",
      "description": "Returns password with Id",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "passwordId",
          "schema": "string",
          "required": true,
          "description": "Id of the password"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/passwords/{passwordId}",
      "method": "/spaces/{spaceId}/folders/{id}/passwords/{passwordId}Patch",
      "httpMethod": "patch",
      "description": "Modify a Password",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "passwordId",
          "schema": "string",
          "required": true,
          "description": "Id of the password"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/payrolls",
      "method": "/spaces/{spaceId}/folders/{id}/payrollsGet",
      "httpMethod": "get",
      "description": "Returns payrolls of the folder social",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder social"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": "range date of the documents"
        },
        {
          "name": "Begin",
          "schema": "string",
          "required": false,
          "description": "begin date of the payrolls"
        },
        {
          "name": "End",
          "schema": "string",
          "required": false,
          "description": "end date of the payrolls"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/payrolls",
      "method": "/spaces/{spaceId}/folders/{id}/payrollsPost",
      "httpMethod": "post",
      "description": "Add a payroll in a folder social",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder social"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/payrolls/{payrollId}/nominative-social-declaration",
      "method": "/spaces/{spaceId}/folders/{id}/payrolls/{payrollId}/nominativeSocialDeclarationDelete",
      "httpMethod": "delete",
      "description": "delete a nominative social declaration in a folder social",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder social"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "payrollId",
          "schema": "string",
          "required": true,
          "description": "Id of the payroll"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/payrolls/{payrollId}/nominative-social-declaration",
      "method": "/spaces/{spaceId}/folders/{id}/payrolls/{payrollId}/nominativeSocialDeclarationPost",
      "httpMethod": "post",
      "description": "Add a nominative social declaration in a folder social",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder social"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "payrollId",
          "schema": "string",
          "required": true,
          "description": "Id of the payroll"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/payslips",
      "method": "/spaces/{spaceId}/folders/{id}/payslipsGet",
      "httpMethod": "get",
      "description": "Returns payslips of the folder employee",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder employee"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": "range date of the documents"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/payslips",
      "method": "/spaces/{spaceId}/folders/{id}/payslipsPost",
      "httpMethod": "post",
      "description": "Add a payslip in a folder employee",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder employee"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/portfolio/{portfolioId}",
      "method": "/spaces/{spaceId}/folders/{id}/portfolio/{portfolioId}Delete",
      "httpMethod": "delete",
      "description": "delete a secondary portfolio of a customer contract",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "portfolioId",
          "schema": "string",
          "required": true,
          "description": "Id of the portfolio"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/professional-vehicle",
      "method": "/spaces/{spaceId}/folders/{id}/professionalVehicleDelete",
      "httpMethod": "delete",
      "description": "delete a Professional Vehicle",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/professional-vehicle",
      "method": "/spaces/{spaceId}/folders/{id}/professionalVehiclePatch",
      "httpMethod": "patch",
      "description": "Modify a Folder (except Name, Class, ModificationDate and ArchivalDate) and Professional Vehicle data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/provider",
      "method": "/spaces/{spaceId}/folders/{id}/providerDelete",
      "httpMethod": "delete",
      "description": "delete a provider",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/provider",
      "method": "/spaces/{spaceId}/folders/{id}/providerGet",
      "httpMethod": "get",
      "description": "Returns folder with Id and provider data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/provider",
      "method": "/spaces/{spaceId}/folders/{id}/providerPatch",
      "httpMethod": "patch",
      "description": "Modify a Folder (except Name, Class, ModificationDate and ArchivalDate) and Provider data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/required-documents",
      "method": "/spaces/{spaceId}/folders/{id}/requiredDocumentsGet",
      "httpMethod": "get",
      "description": "list of the required documents for a person",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder either exchange either followup"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/required-documents/{requireddocumentid}",
      "method": "/spaces/{spaceId}/folders/{id}/requiredDocuments/{requireddocumentid}Patch",
      "httpMethod": "patch",
      "description": "Modify the status of a requireddocument",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder exchange or followup"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "requireddocumentid",
          "schema": "string",
          "required": true,
          "description": "Id of the requireddocument"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/required-documents/{requireddocumentid}",
      "method": "/spaces/{spaceId}/folders/{id}/requiredDocuments/{requireddocumentid}Post",
      "httpMethod": "post",
      "description": "Add a required document to a line",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder exchange or followup"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "requireddocumentid",
          "schema": "string",
          "required": true,
          "description": "Id of the requireddocument"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/required-documents/{requireddocumentid}/documents/{documentId}",
      "method": "/spaces/{spaceId}/folders/{id}/requiredDocuments/{requireddocumentid}/documents/{documentId}Delete",
      "httpMethod": "delete",
      "description": "delete a document from a required document",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder exchange or followup"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "requireddocumentid",
          "schema": "string",
          "required": true,
          "description": "Id of the requireddocument"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "Id of the document to delete"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/sections",
      "method": "/spaces/{spaceId}/folders/{id}/sectionsGet",
      "httpMethod": "get",
      "description": "Returns sections of the folder",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/social-contracts",
      "method": "/spaces/{spaceId}/folders/{id}/socialContractsGet",
      "httpMethod": "get",
      "description": "Returns social contracts of the folder employee",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder employee"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": "range date of the documents"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/social-contracts",
      "method": "/spaces/{spaceId}/folders/{id}/socialContractsPost",
      "httpMethod": "post",
      "description": "Add a social contract in a folder employee",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder employee"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/social-declarations",
      "method": "/spaces/{spaceId}/folders/{id}/socialDeclarationsGet",
      "httpMethod": "get",
      "description": "Returns social declarations",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder socialregime"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": "range date of the documents"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/social-declarations",
      "method": "/spaces/{spaceId}/folders/{id}/socialDeclarationsPost",
      "httpMethod": "post",
      "description": "Add a social declaration",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder social regime"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/social-regimes",
      "method": "/spaces/{spaceId}/folders/{id}/socialRegimesDelete",
      "httpMethod": "delete",
      "description": "delete a social regime",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/social-regimes",
      "method": "/spaces/{spaceId}/folders/{id}/socialRegimesGet",
      "httpMethod": "get",
      "description": "Returns folder with Id and social regime data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/social-regimes",
      "method": "/spaces/{spaceId}/folders/{id}/socialRegimesPatch",
      "httpMethod": "patch",
      "description": "Modify a Folder (except Name, Class, ModificationDate and ArchivalDate) and Social Regime data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/sum-invoices",
      "method": "/spaces/{spaceId}/folders/{id}/sumInvoicesGet",
      "httpMethod": "get",
      "description": "Returns sum of invoices of the folder (customer, provider, accountingyear or root folders customers or providers)",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Number",
          "schema": "string",
          "required": false,
          "description": "Number of the invoice"
        },
        {
          "name": "InclVat",
          "schema": "number",
          "required": false,
          "description": "amount incl. VAT"
        },
        {
          "name": "BeforeVAT",
          "schema": "number",
          "required": false,
          "description": "amount before VAT"
        },
        {
          "name": "DueDate",
          "schema": "string",
          "required": false,
          "description": "range date due payment"
        },
        {
          "name": "PaymentDate",
          "schema": "string",
          "required": false,
          "description": "range date of payment"
        },
        {
          "name": "InvoiceDate",
          "schema": "string",
          "required": false,
          "description": "range date of invoice"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/tax-contract",
      "method": "/spaces/{spaceId}/folders/{id}/taxContractDelete",
      "httpMethod": "delete",
      "description": "Delete a Folder (except Name, Class, ModificationDate and ArchivalDate) and tax contract data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/tax-contract",
      "method": "/spaces/{spaceId}/folders/{id}/taxContractPatch",
      "httpMethod": "patch",
      "description": "Modify a Folder (except Name, Class, ModificationDate and ArchivalDate) and Tax Contract data",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/vat-declarations",
      "method": "/spaces/{spaceId}/folders/{id}/vatDeclarationsGet",
      "httpMethod": "get",
      "description": "Returns vat declarations",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder result and taxation"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": "range date of the documents"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/vat-declarations",
      "method": "/spaces/{spaceId}/folders/{id}/vatDeclarationsPost",
      "httpMethod": "post",
      "description": "Add a vat declaration",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder result and taxation"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/{documentClass}",
      "method": "/spaces/{spaceId}/folders/{id}/{documentClass}Delete",
      "httpMethod": "delete",
      "description": "delete a class document",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "documentClass",
          "schema": "string",
          "required": true,
          "description": "class of the document"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/{documentClass}",
      "method": "/spaces/{spaceId}/folders/{id}/{documentClass}Get",
      "httpMethod": "get",
      "description": "Returns document of documentClass (without specific data) of the folder",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "documentClass",
          "schema": "string",
          "required": true,
          "description": "class of the document"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/folders/{id}/{documentClass}",
      "method": "/spaces/{spaceId}/folders/{id}/{documentClass}Post",
      "httpMethod": "post",
      "description": "Add a document in a folder",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "documentClass",
          "schema": "string",
          "required": true,
          "description": "class of the document"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/legal-entities/{id}/banks",
      "method": "/spaces/{spaceId}/legalEntities/{id}/banksGet",
      "httpMethod": "get",
      "description": "Returns list of bank folders for a legal-entity",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the legal-entity"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/legal-entities/{id}/banks",
      "method": "/spaces/{spaceId}/legalEntities/{id}/banksPost",
      "httpMethod": "post",
      "description": "Add a folder for a bank",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the bank or memberId"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/legal-entities/{id}/banks/all",
      "method": "/spaces/{spaceId}/legalEntities/{id}/banks/allGet",
      "httpMethod": "get",
      "description": "Returns folder of the banks even archived",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the bank"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/legal-entities/{id}/contracts",
      "method": "/spaces/{spaceId}/legalEntities/{id}/contractsGet",
      "httpMethod": "get",
      "description": "Returns all contract folders of the legal entity",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the legal entity or memberId"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/legal-entities/{id}/contractual-relationships",
      "method": "/spaces/{spaceId}/legalEntities/{id}/contractualRelationshipsGet",
      "httpMethod": "get",
      "description": "Returns folder of the others contract with legal entity",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the legal-entity or memberId"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/legal-entities/{id}/contractual-relationships/all",
      "method": "/spaces/{spaceId}/legalEntities/{id}/contractualRelationships/allGet",
      "httpMethod": "get",
      "description": "Returns folder of the others contract with legal entity (even archived)",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the legal-entity or memberId"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/legal-entities/{id}/customers",
      "method": "/spaces/{spaceId}/legalEntities/{id}/customersGet",
      "httpMethod": "get",
      "description": "Returns folder of the customer",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the customer or memberId"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/legal-entities/{id}/customers",
      "method": "/spaces/{spaceId}/legalEntities/{id}/customersPost",
      "httpMethod": "post",
      "description": "Add a folder for a customer",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the customer or memberId"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/legal-entities/{id}/customers/all",
      "method": "/spaces/{spaceId}/legalEntities/{id}/customers/allGet",
      "httpMethod": "get",
      "description": "Returns folder of the customers (even archived)",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the customer or memberId"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/legal-entities/{id}/insurances",
      "method": "/spaces/{spaceId}/legalEntities/{id}/insurancesGet",
      "httpMethod": "get",
      "description": "Returns list of insurance folders for a legal-entity",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the insurance"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/legal-entities/{id}/insurances",
      "method": "/spaces/{spaceId}/legalEntities/{id}/insurancesPost",
      "httpMethod": "post",
      "description": "Add a folder for a insurance",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the insurance or memberId"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/legal-entities/{id}/insurances/all",
      "method": "/spaces/{spaceId}/legalEntities/{id}/insurances/allGet",
      "httpMethod": "get",
      "description": "Returns folder of the insurances even archived",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the insurance"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/legal-entities/{id}/loans",
      "method": "/spaces/{spaceId}/legalEntities/{id}/loansGet",
      "httpMethod": "get",
      "description": "Returns folder of the loan",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the loan"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/legal-entities/{id}/loans",
      "method": "/spaces/{spaceId}/legalEntities/{id}/loansPost",
      "httpMethod": "post",
      "description": "Add a folder for a loan",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the loan or memberId"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/legal-entities/{id}/loans/all",
      "method": "/spaces/{spaceId}/legalEntities/{id}/loans/allGet",
      "httpMethod": "get",
      "description": "Returns folder of the loans even archived",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the loan"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/legal-entities/{id}/providers",
      "method": "/spaces/{spaceId}/legalEntities/{id}/providersGet",
      "httpMethod": "get",
      "description": "Returns list of providers folders for a legal-entity",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the provider or memberId"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/legal-entities/{id}/providers",
      "method": "/spaces/{spaceId}/legalEntities/{id}/providersPost",
      "httpMethod": "post",
      "description": "Add a folder for a provider",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the provider or memberId"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/legal-entities/{id}/providers/all",
      "method": "/spaces/{spaceId}/legalEntities/{id}/providers/allGet",
      "httpMethod": "get",
      "description": "Returns folder of the providers even archived",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the provider or memberId"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/legal-entities/{id}/social-regimes",
      "method": "/spaces/{spaceId}/legalEntities/{id}/socialRegimesGet",
      "httpMethod": "get",
      "description": "Returns list of social regimes folders for a legal-entity",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the legal entity or memberId"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/legal-entities/{id}/social-regimes",
      "method": "/spaces/{spaceId}/legalEntities/{id}/socialRegimesPost",
      "httpMethod": "post",
      "description": "Add a folder for a social regime",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the legal entity or memberId"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/legal-entities/{id}/social-regimes/all",
      "method": "/spaces/{spaceId}/legalEntities/{id}/socialRegimes/allGet",
      "httpMethod": "get",
      "description": "Returns folder of the social regimes even archived",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the legal entity or memberId"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/loans",
      "method": "/spaces/{spaceId}/loansGet",
      "httpMethod": "get",
      "description": "Returns list of all loan folders of the space",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/loans/all",
      "method": "/spaces/{spaceId}/loans/allGet",
      "httpMethod": "get",
      "description": "Returns list of all loan folders even archived of the space",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/persons/{id}/call-for-document",
      "method": "/spaces/{spaceId}/persons/{id}/callForDocumentPatch",
      "httpMethod": "patch",
      "description": "modify the invitation of a person to collect documents",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the person"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Categories",
          "schema": "array",
          "description": ""
        },
        {
          "name": "ClientManagement",
          "schema": "string",
          "description": ""
        },
        {
          "name": "IsAdmin",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "Player",
          "schema": "string",
          "description": ""
        },
        {
          "name": "PlayerEnd",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/persons/{id}/call-for-document",
      "method": "/spaces/{spaceId}/persons/{id}/callForDocumentPost",
      "httpMethod": "post",
      "description": "invite a person to collect documents",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the person or memberId"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Categories",
          "schema": "array",
          "description": ""
        },
        {
          "name": "ClientManagement",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Comment",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Contact",
          "schema": "string",
          "description": ""
        },
        {
          "name": "IsAdmin",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "Message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Player",
          "schema": "string",
          "description": ""
        },
        {
          "name": "PlayerEnd",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Signature",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Subject",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/persons/{id}/employees",
      "method": "/spaces/{spaceId}/persons/{id}/employeesGet",
      "httpMethod": "get",
      "description": "Returns folder of the employee",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the person or memberId"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/persons/{id}/employees",
      "method": "/spaces/{spaceId}/persons/{id}/employeesPost",
      "httpMethod": "post",
      "description": "Add a folder for a employee",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the employee"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/persons/{id}/employees/all",
      "method": "/spaces/{spaceId}/persons/{id}/employees/allGet",
      "httpMethod": "get",
      "description": "Returns folder of all employees (even archived)",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the person or memberId"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/persons/{id}/exchange",
      "method": "/spaces/{spaceId}/persons/{id}/exchangeGet",
      "httpMethod": "get",
      "description": "Returns folder exchange of the person",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the person or memberId"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/persons/{id}/follow-ups",
      "method": "/spaces/{spaceId}/persons/{id}/followUpsGet",
      "httpMethod": "get",
      "description": "Returns folder of the person",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the person or memberId"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/persons/{id}/guest-in-space",
      "method": "/spaces/{spaceId}/persons/{id}/guestInSpaceDelete",
      "httpMethod": "delete",
      "description": "delete the invitation of a person in a space",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the person"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/persons/{id}/guest-in-space",
      "method": "/spaces/{spaceId}/persons/{id}/guestInSpacePatch",
      "httpMethod": "patch",
      "description": "invite a person in a space",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the person"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "ClientManagement",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Folders",
          "schema": "array",
          "description": ""
        },
        {
          "name": "GroupIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "IsAdmin",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "Player",
          "schema": "string",
          "description": ""
        },
        {
          "name": "PlayerEnd",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/persons/{id}/guest-in-space",
      "method": "/spaces/{spaceId}/persons/{id}/guestInSpacePost",
      "httpMethod": "post",
      "description": "invite a person in a space",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the person"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "ClientManagement",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Comment",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Contact",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Folders",
          "schema": "array",
          "description": ""
        },
        {
          "name": "GroupIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "IsAdmin",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "MemberId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Player",
          "schema": "string",
          "description": ""
        },
        {
          "name": "PlayerEnd",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Signature",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Subject",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/persons/{id}/invitation",
      "method": "/spaces/{spaceId}/persons/{id}/invitationDelete",
      "httpMethod": "delete",
      "description": "delete the invitation of a person in a space",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the person"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/persons/{id}/invitation",
      "method": "/spaces/{spaceId}/persons/{id}/invitationGet",
      "httpMethod": "get",
      "description": "Returns invitation of a person",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the person"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/persons/{id}/invitation",
      "method": "/spaces/{spaceId}/persons/{id}/invitationPatch",
      "httpMethod": "patch",
      "description": "modify an invitation",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the person"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "ClientManagement",
          "schema": "string",
          "description": ""
        },
        {
          "name": "EmployeeAccess",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "Folders",
          "schema": "array",
          "description": ""
        },
        {
          "name": "GroupIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "IsAdmin",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "Player",
          "schema": "string",
          "description": ""
        },
        {
          "name": "PlayerEnd",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/persons/{id}/invitation",
      "method": "/spaces/{spaceId}/persons/{id}/invitationPost",
      "httpMethod": "post",
      "description": "create an invitation in a space for a person",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the person"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "ClientManagement",
          "schema": "string",
          "description": ""
        },
        {
          "name": "EmployeeAccess",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "Folders",
          "schema": "array",
          "description": ""
        },
        {
          "name": "GroupIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "IsAdmin",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "Player",
          "schema": "string",
          "description": ""
        },
        {
          "name": "PlayerEnd",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/persons/{id}/invitation/{invitationId}/send",
      "method": "/spaces/{spaceId}/persons/{id}/invitation/{invitationId}/sendPost",
      "httpMethod": "post",
      "description": "send the invitation of a person in a space",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the person"
        },
        {
          "name": "invitationId",
          "schema": "string",
          "required": true,
          "description": "Id of the invitation"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Contact",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Signature",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Subject",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/persons/{memberId}/folders/{id}",
      "method": "/spaces/{spaceId}/persons/{memberId}/folders/{id}Get",
      "httpMethod": "get",
      "description": "Returns folderId with the access of the person",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "memberId",
          "schema": "string",
          "required": true,
          "description": "memberId of the person"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/persons/{memberId}/folders/{id}",
      "method": "/spaces/{spaceId}/persons/{memberId}/folders/{id}Patch",
      "httpMethod": "patch",
      "description": "Modify an access",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the folder"
        },
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "memberId",
          "schema": "string",
          "required": true,
          "description": "memberId of the person"
        }
      ],
      "responses": []
    },
    {
      "url": "/spaces/{spaceId}/providers",
      "method": "/spaces/{spaceId}/providersGet",
      "httpMethod": "get",
      "description": "Returns folder with Id and provider data",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "WithContractingPartner",
          "schema": "string",
          "required": false,
          "description": "if present returns infos of the ContractingPartner too"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/providers/all",
      "method": "/spaces/{spaceId}/providers/allGet",
      "httpMethod": "get",
      "description": "Returns folder with Id and provider data (even archived)",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "WithContractingPartner",
          "schema": "string",
          "required": false,
          "description": "if present returns infos of the ContractingPartner too"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/search",
      "method": "/spaces/{spaceId}/searchGet",
      "httpMethod": "get",
      "description": "Research text inside documents, folders or messages",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Query",
          "schema": "string",
          "required": false,
          "description": "Text to find"
        },
        {
          "name": "Range",
          "schema": "string",
          "required": false,
          "description": "index range of the results"
        },
        {
          "name": "QueryContext",
          "schema": "object",
          "required": false,
          "description": "context of research"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/social-regimes",
      "method": "/spaces/{spaceId}/socialRegimesGet",
      "httpMethod": "get",
      "description": "Returns folder with Id and social regime data",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "WithContractingPartner",
          "schema": "string",
          "required": false,
          "description": "if present returns infos of the ContractingPartner too"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/social-regimes/all",
      "method": "/spaces/{spaceId}/socialRegimes/allGet",
      "httpMethod": "get",
      "description": "Returns folder with Id and social regime data (even archived)",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "WithContractingPartner",
          "schema": "string",
          "required": false,
          "description": "if present returns infos of the ContractingPartner too"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spaces/{spaceId}/spaces-invoicings",
      "method": "/spaces/{spaceId}/spacesInvoicingsGet",
      "httpMethod": "get",
      "description": "Returns CSV Invoicings of the spaces for the account of the spaceId",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "Id of the space"
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": "date range of the documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://sandbox.gerermesaffaires.com/api/v1/",
  "apiDescription": "Sécurisez vos données en interfaçant votre logiciel métier avec le service en ligne GererMesAffaires",
  "apiTitle": "GererMesAffaires {REST:API}",
  "endpoints": 180,
  "sdkMethods": 280,
  "schemas": 53,
  "parameters": 860,
  "contactEmail": "api@gerermesaffaires.com",
  "difficultyScore": 521.5,
  "difficulty": "Very Hard"
}