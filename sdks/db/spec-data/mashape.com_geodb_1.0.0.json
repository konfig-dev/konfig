{
  "providerName": "mashape.com",
  "openApiRaw": "https://wirefreethought.github.io/geodb-cities-api-docs/swagger.json",
  "securitySchemes": {
    "UserSecurity": {
      "in": "header",
      "name": "x-rapidapi-key",
      "type": "apiKey"
    }
  },
  "homepage": "mashape.com",
  "serviceName": "geodb",
  "apiVersion": "1.0.0",
  "methods": [
    {
      "url": "/geo/adminDivisions",
      "method": "findAdminDivisionsUsingGet",
      "httpMethod": "get",
      "tag": "Geo",
      "typeScriptTag": "geo",
      "description": "Find administrative divisions",
      "parameters": [
        {
          "name": "location",
          "schema": "string",
          "required": false,
          "description": "Only places near this location. Latitude/longitude in ISO-6709 format: ±DD.DDDD±DDD.DDDD"
        },
        {
          "name": "radius",
          "schema": "integer",
          "required": false,
          "description": "The location radius within which to find places"
        },
        {
          "name": "distanceUnit",
          "schema": "string",
          "required": false,
          "description": "The unit of distance: MI | KM"
        },
        {
          "name": "countryIds",
          "schema": "string",
          "required": false,
          "description": "Only places in these countries (comma-delimited country codes or WikiData ids)"
        },
        {
          "name": "excludedCountryIds",
          "schema": "string",
          "required": false,
          "description": "Only places NOT in these countries (comma-delimited country codes or WikiData ids)"
        },
        {
          "name": "minPopulation",
          "schema": "integer",
          "required": false,
          "description": "Only places having at least this population"
        },
        {
          "name": "maxPopulation",
          "schema": "integer",
          "required": false,
          "description": "Only places having no more than this population"
        },
        {
          "name": "namePrefix",
          "schema": "string",
          "required": false,
          "description": "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n"
        },
        {
          "name": "namePrefixDefaultLangResults",
          "schema": "boolean",
          "required": false,
          "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n"
        },
        {
          "name": "timeZoneIds",
          "schema": "string",
          "required": false,
          "description": "Only places in these time-zones (comma-delimited)"
        },
        {
          "name": "asciiMode",
          "schema": "boolean",
          "required": false,
          "description": "Display results using ASCII characters"
        },
        {
          "name": "hateoasMode",
          "schema": "boolean",
          "required": false,
          "description": "Include HATEOAS-style links in results"
        },
        {
          "name": "languageCode",
          "schema": "string",
          "required": false,
          "description": "Display results in this language"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to retrieve"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The zero-ary offset index into the results"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere SORT_FIELD = countryCode | elevation | name | population\n"
        },
        {
          "name": "includeDeleted",
          "schema": "string",
          "required": false,
          "description": "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of populated places"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        }
      ]
    },
    {
      "url": "/geo/adminDivisions/{divisionId}",
      "method": "getAdminDivisionUsingGet",
      "httpMethod": "get",
      "tag": "Geo",
      "typeScriptTag": "geo",
      "description": "Get administrative division details",
      "parameters": [
        {
          "name": "divisionId",
          "schema": "string",
          "required": true,
          "description": "An admin-division id (either native 'id' or 'wikiDataId')"
        },
        {
          "name": "asciiMode",
          "schema": "boolean",
          "required": false,
          "description": "Display results using ASCII characters"
        },
        {
          "name": "languageCode",
          "schema": "string",
          "required": false,
          "description": "Display results in this language"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Populated-place details response"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        },
        {
          "statusCode": "404",
          "description": "Not Found Response"
        }
      ]
    },
    {
      "url": "/geo/adminDivisions/{divisionId}/nearbyCities",
      "method": "findCitiesNearAdminDivisionUsingGet",
      "httpMethod": "get",
      "tag": "Geo",
      "typeScriptTag": "geo",
      "description": "Find cities near division",
      "parameters": [
        {
          "name": "divisionId",
          "schema": "string",
          "required": true,
          "description": "An admin-division id (either native 'id' or 'wikiDataId')"
        },
        {
          "name": "radius",
          "schema": "integer",
          "required": false,
          "description": "The location radius within which to find places"
        },
        {
          "name": "distanceUnit",
          "schema": "string",
          "required": false,
          "description": "The unit of distance: MI | KM"
        },
        {
          "name": "countryIds",
          "schema": "string",
          "required": false,
          "description": "Only places in these countries (comma-delimited country codes or WikiData ids)"
        },
        {
          "name": "excludedCountryIds",
          "schema": "string",
          "required": false,
          "description": "Only places NOT in these countries (comma-delimited country codes or WikiData ids)"
        },
        {
          "name": "minPopulation",
          "schema": "integer",
          "required": false,
          "description": "Only places having at least this population"
        },
        {
          "name": "maxPopulation",
          "schema": "integer",
          "required": false,
          "description": "Only places having no more than this population"
        },
        {
          "name": "namePrefix",
          "schema": "string",
          "required": false,
          "description": "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n"
        },
        {
          "name": "namePrefixDefaultLangResults",
          "schema": "boolean",
          "required": false,
          "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n"
        },
        {
          "name": "timeZoneIds",
          "schema": "string",
          "required": false,
          "description": "Only places in these time-zones (comma-delimited)"
        },
        {
          "name": "types",
          "schema": "string",
          "required": false,
          "description": "Only places for these types (comma-delimited): CITY | ADM2"
        },
        {
          "name": "asciiMode",
          "schema": "boolean",
          "required": false,
          "description": "Display results using ASCII characters"
        },
        {
          "name": "hateoasMode",
          "schema": "boolean",
          "required": false,
          "description": "Include HATEOAS-style links in results"
        },
        {
          "name": "languageCode",
          "schema": "string",
          "required": false,
          "description": "Display results in this language"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to retrieve"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The zero-ary offset index into the results"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere SORT_FIELD = countryCode | elevation | name | population\n"
        },
        {
          "name": "includeDeleted",
          "schema": "string",
          "required": false,
          "description": "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of populated places"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        },
        {
          "statusCode": "404",
          "description": "Not Found Response"
        }
      ]
    },
    {
      "url": "/geo/adminDivisions/{divisionId}/nearbyDivisions",
      "method": "findDivisionsNearAdminDivisionUsingGet",
      "httpMethod": "get",
      "tag": "Geo",
      "typeScriptTag": "geo",
      "description": "Find divisions near division",
      "parameters": [
        {
          "name": "divisionId",
          "schema": "string",
          "required": true,
          "description": "An admin-division id (either native 'id' or 'wikiDataId')"
        },
        {
          "name": "radius",
          "schema": "integer",
          "required": false,
          "description": "The location radius within which to find places"
        },
        {
          "name": "distanceUnit",
          "schema": "string",
          "required": false,
          "description": "The unit of distance: MI | KM"
        },
        {
          "name": "countryIds",
          "schema": "string",
          "required": false,
          "description": "Only places in these countries (comma-delimited country codes or WikiData ids)"
        },
        {
          "name": "excludedCountryIds",
          "schema": "string",
          "required": false,
          "description": "Only places NOT in these countries (comma-delimited country codes or WikiData ids)"
        },
        {
          "name": "minPopulation",
          "schema": "integer",
          "required": false,
          "description": "Only places having at least this population"
        },
        {
          "name": "maxPopulation",
          "schema": "integer",
          "required": false,
          "description": "Only places having no more than this population"
        },
        {
          "name": "namePrefix",
          "schema": "string",
          "required": false,
          "description": "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n"
        },
        {
          "name": "namePrefixDefaultLangResults",
          "schema": "boolean",
          "required": false,
          "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n"
        },
        {
          "name": "timeZoneIds",
          "schema": "string",
          "required": false,
          "description": "Only places in these time-zones (comma-delimited)"
        },
        {
          "name": "asciiMode",
          "schema": "boolean",
          "required": false,
          "description": "Display results using ASCII characters"
        },
        {
          "name": "hateoasMode",
          "schema": "boolean",
          "required": false,
          "description": "Include HATEOAS-style links in results"
        },
        {
          "name": "languageCode",
          "schema": "string",
          "required": false,
          "description": "Display results in this language"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to retrieve"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The zero-ary offset index into the results"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere SORT_FIELD = countryCode | elevation | name | population\n"
        },
        {
          "name": "includeDeleted",
          "schema": "string",
          "required": false,
          "description": "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of populated places"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        },
        {
          "statusCode": "404",
          "description": "Not Found Response"
        }
      ]
    },
    {
      "url": "/geo/cities",
      "method": "findCitiesUsingGet",
      "httpMethod": "get",
      "tag": "Geo",
      "typeScriptTag": "geo",
      "description": "Find cities",
      "parameters": [
        {
          "name": "location",
          "schema": "string",
          "required": false,
          "description": "Only places near this location. Latitude/longitude in ISO-6709 format: ±DD.DDDD±DDD.DDDD"
        },
        {
          "name": "radius",
          "schema": "integer",
          "required": false,
          "description": "The location radius within which to find places"
        },
        {
          "name": "distanceUnit",
          "schema": "string",
          "required": false,
          "description": "The unit of distance: MI | KM"
        },
        {
          "name": "countryIds",
          "schema": "string",
          "required": false,
          "description": "Only places in these countries (comma-delimited country codes or WikiData ids)"
        },
        {
          "name": "excludedCountryIds",
          "schema": "string",
          "required": false,
          "description": "Only places NOT in these countries (comma-delimited country codes or WikiData ids)"
        },
        {
          "name": "minPopulation",
          "schema": "integer",
          "required": false,
          "description": "Only places having at least this population"
        },
        {
          "name": "maxPopulation",
          "schema": "integer",
          "required": false,
          "description": "Only places having no more than this population"
        },
        {
          "name": "namePrefix",
          "schema": "string",
          "required": false,
          "description": "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n"
        },
        {
          "name": "namePrefixDefaultLangResults",
          "schema": "boolean",
          "required": false,
          "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n"
        },
        {
          "name": "timeZoneIds",
          "schema": "string",
          "required": false,
          "description": "Only places in these time-zones (comma-delimited)"
        },
        {
          "name": "types",
          "schema": "string",
          "required": false,
          "description": "Only places for these types (comma-delimited): CITY | ADM2"
        },
        {
          "name": "asciiMode",
          "schema": "boolean",
          "required": false,
          "description": "Display results using ASCII characters"
        },
        {
          "name": "hateoasMode",
          "schema": "boolean",
          "required": false,
          "description": "Include HATEOAS-style links in results"
        },
        {
          "name": "languageCode",
          "schema": "string",
          "required": false,
          "description": "Display results in this language"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to retrieve"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The zero-ary offset index into the results"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere SORT_FIELD = countryCode | elevation | name | population\n"
        },
        {
          "name": "includeDeleted",
          "schema": "string",
          "required": false,
          "description": "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of populated places"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        }
      ]
    },
    {
      "url": "/geo/cities/{cityId}",
      "method": "getCityUsingGet",
      "httpMethod": "get",
      "tag": "Geo",
      "typeScriptTag": "geo",
      "description": "Get city details",
      "parameters": [
        {
          "name": "cityId",
          "schema": "string",
          "required": true,
          "description": "A city id (either native 'id' or 'wikiDataId')"
        },
        {
          "name": "asciiMode",
          "schema": "boolean",
          "required": false,
          "description": "Display results using ASCII characters"
        },
        {
          "name": "languageCode",
          "schema": "string",
          "required": false,
          "description": "Display results in this language"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Populated-place details response"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        },
        {
          "statusCode": "404",
          "description": "Not Found Response"
        }
      ]
    },
    {
      "url": "/geo/cities/{cityId}/dateTime",
      "method": "getCityDateTimeUsingGet",
      "httpMethod": "get",
      "tag": "Geo",
      "typeScriptTag": "geo",
      "description": "Get city date-time",
      "parameters": [
        {
          "name": "cityId",
          "schema": "string",
          "required": true,
          "description": "A city id (either native 'id' or 'wikiDataId')"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An ISO-6801 date-time response"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        },
        {
          "statusCode": "404",
          "description": "Not Found Response"
        }
      ]
    },
    {
      "url": "/geo/cities/{cityId}/distance",
      "method": "getCityDistanceUsingGet",
      "httpMethod": "get",
      "tag": "Geo",
      "typeScriptTag": "geo",
      "description": "Get city distance",
      "parameters": [
        {
          "name": "cityId",
          "schema": "string",
          "required": true,
          "description": "A city id (either native 'id' or 'wikiDataId')"
        },
        {
          "name": "toCityId",
          "schema": "string",
          "required": true,
          "description": "Distance to this city"
        },
        {
          "name": "distanceUnit",
          "schema": "string",
          "required": false,
          "description": "The unit of distance: MI | KM"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A decimal distance (in miles or kilometers)"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        },
        {
          "statusCode": "404",
          "description": "Not Found Response"
        }
      ]
    },
    {
      "url": "/geo/cities/{cityId}/locatedIn",
      "method": "getCityLocatedInUsingGet",
      "httpMethod": "get",
      "tag": "Geo",
      "typeScriptTag": "geo",
      "description": "Get city admin region",
      "parameters": [
        {
          "name": "cityId",
          "schema": "string",
          "required": true,
          "description": "A city id (either native 'id' or 'wikiDataId')"
        },
        {
          "name": "asciiMode",
          "schema": "boolean",
          "required": false,
          "description": "Display results using ASCII characters"
        },
        {
          "name": "languageCode",
          "schema": "string",
          "required": false,
          "description": "Display results in this language"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Populated-place details response"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        },
        {
          "statusCode": "404",
          "description": "Not Found Response"
        }
      ]
    },
    {
      "url": "/geo/cities/{cityId}/nearbyCities",
      "method": "findCitiesNearCityUsingGet",
      "httpMethod": "get",
      "tag": "Geo",
      "typeScriptTag": "geo",
      "description": "Find cities near city",
      "parameters": [
        {
          "name": "cityId",
          "schema": "string",
          "required": true,
          "description": "A city id (either native 'id' or 'wikiDataId')"
        },
        {
          "name": "radius",
          "schema": "integer",
          "required": false,
          "description": "The location radius within which to find places"
        },
        {
          "name": "distanceUnit",
          "schema": "string",
          "required": false,
          "description": "The unit of distance: MI | KM"
        },
        {
          "name": "countryIds",
          "schema": "string",
          "required": false,
          "description": "Only places in these countries (comma-delimited country codes or WikiData ids)"
        },
        {
          "name": "excludedCountryIds",
          "schema": "string",
          "required": false,
          "description": "Only places NOT in these countries (comma-delimited country codes or WikiData ids)"
        },
        {
          "name": "minPopulation",
          "schema": "integer",
          "required": false,
          "description": "Only places having at least this population"
        },
        {
          "name": "maxPopulation",
          "schema": "integer",
          "required": false,
          "description": "Only places having no more than this population"
        },
        {
          "name": "namePrefix",
          "schema": "string",
          "required": false,
          "description": "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n"
        },
        {
          "name": "namePrefixDefaultLangResults",
          "schema": "boolean",
          "required": false,
          "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n"
        },
        {
          "name": "timeZoneIds",
          "schema": "string",
          "required": false,
          "description": "Only places in these time-zones (comma-delimited)"
        },
        {
          "name": "types",
          "schema": "string",
          "required": false,
          "description": "Only places for these types (comma-delimited): CITY | ADM2"
        },
        {
          "name": "asciiMode",
          "schema": "boolean",
          "required": false,
          "description": "Display results using ASCII characters"
        },
        {
          "name": "hateoasMode",
          "schema": "boolean",
          "required": false,
          "description": "Include HATEOAS-style links in results"
        },
        {
          "name": "languageCode",
          "schema": "string",
          "required": false,
          "description": "Display results in this language"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to retrieve"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The zero-ary offset index into the results"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere SORT_FIELD = countryCode | elevation | name | population\n"
        },
        {
          "name": "includeDeleted",
          "schema": "string",
          "required": false,
          "description": "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of populated places"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        },
        {
          "statusCode": "404",
          "description": "Not Found Response"
        }
      ]
    },
    {
      "url": "/geo/cities/{cityId}/time",
      "method": "getCityTimeUsingGet",
      "httpMethod": "get",
      "tag": "Geo",
      "typeScriptTag": "geo",
      "description": "Get city time",
      "parameters": [
        {
          "name": "cityId",
          "schema": "string",
          "required": true,
          "description": "A city id (either native 'id' or 'wikiDataId')"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An ISO-8601 time response"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        },
        {
          "statusCode": "404",
          "description": "Not Found Response"
        }
      ]
    },
    {
      "url": "/geo/countries",
      "method": "getCountriesUsingGet",
      "httpMethod": "get",
      "tag": "Geo",
      "typeScriptTag": "geo",
      "description": "Find countries",
      "parameters": [
        {
          "name": "currencyCode",
          "schema": "string",
          "required": false,
          "description": "Only countries supporting this currency"
        },
        {
          "name": "namePrefix",
          "schema": "string",
          "required": false,
          "description": "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n"
        },
        {
          "name": "namePrefixDefaultLangResults",
          "schema": "boolean",
          "required": false,
          "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n"
        },
        {
          "name": "asciiMode",
          "schema": "boolean",
          "required": false,
          "description": "Display results using ASCII characters"
        },
        {
          "name": "hateoasMode",
          "schema": "boolean",
          "required": false,
          "description": "Include HATEOAS-style links in results"
        },
        {
          "name": "languageCode",
          "schema": "string",
          "required": false,
          "description": "Display results in this language"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to retrieve"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The zero-ary offset index into the results"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "How to sort countries. \nFormat: ±SORT_FIELD \nwhere SORT_FIELD = code | name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of countries"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        }
      ]
    },
    {
      "url": "/geo/countries/{countryId}",
      "method": "getCountryUsingGet",
      "httpMethod": "get",
      "tag": "Geo",
      "typeScriptTag": "geo",
      "description": "Get country details",
      "parameters": [
        {
          "name": "countryId",
          "schema": "string",
          "required": true,
          "description": "An ISO-3166 country code or WikiData id"
        },
        {
          "name": "asciiMode",
          "schema": "boolean",
          "required": false,
          "description": "Display results using ASCII characters"
        },
        {
          "name": "languageCode",
          "schema": "string",
          "required": false,
          "description": "Display results in this language"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Country details response"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        },
        {
          "statusCode": "404",
          "description": "Not Found Response"
        }
      ]
    },
    {
      "url": "/geo/countries/{countryId}/regions",
      "method": "getRegionsUsingGet",
      "httpMethod": "get",
      "tag": "Geo",
      "typeScriptTag": "geo",
      "description": "Find country regions",
      "parameters": [
        {
          "name": "countryId",
          "schema": "string",
          "required": true,
          "description": "An ISO-3166 country code or WikiData id"
        },
        {
          "name": "namePrefix",
          "schema": "string",
          "required": false,
          "description": "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n"
        },
        {
          "name": "namePrefixDefaultLangResults",
          "schema": "boolean",
          "required": false,
          "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n"
        },
        {
          "name": "asciiMode",
          "schema": "boolean",
          "required": false,
          "description": "Display results using ASCII characters"
        },
        {
          "name": "hateoasMode",
          "schema": "boolean",
          "required": false,
          "description": "Include HATEOAS-style links in results"
        },
        {
          "name": "languageCode",
          "schema": "string",
          "required": false,
          "description": "Display results in this language"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to retrieve"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The zero-ary offset index into the results"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "How to sort regions. \nFormat: ±SORT_FIELD \nwhere SORT_FIELD = fipsCode | isoCode | name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of country regions"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        },
        {
          "statusCode": "404",
          "description": "Not Found Response"
        }
      ]
    },
    {
      "url": "/geo/countries/{countryId}/regions/{regionCode}",
      "method": "getRegionUsingGet",
      "httpMethod": "get",
      "tag": "Geo",
      "typeScriptTag": "geo",
      "description": "Get region details",
      "parameters": [
        {
          "name": "countryId",
          "schema": "string",
          "required": true,
          "description": "An ISO-3166 country code or WikiData id"
        },
        {
          "name": "regionCode",
          "schema": "string",
          "required": true,
          "description": "An ISO-3166 or FIPS region code"
        },
        {
          "name": "asciiMode",
          "schema": "boolean",
          "required": false,
          "description": "Display results using ASCII characters"
        },
        {
          "name": "languageCode",
          "schema": "string",
          "required": false,
          "description": "Display results in this language"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Country region details response"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        },
        {
          "statusCode": "404",
          "description": "Not Found Response"
        }
      ]
    },
    {
      "url": "/geo/countries/{countryId}/regions/{regionCode}/adminDivisions",
      "method": "findRegionDivisionsUsingGet",
      "httpMethod": "get",
      "tag": "Geo",
      "typeScriptTag": "geo",
      "description": "Find country region administrative divisions",
      "parameters": [
        {
          "name": "countryId",
          "schema": "string",
          "required": true,
          "description": "An ISO-3166 country code or WikiData id"
        },
        {
          "name": "regionCode",
          "schema": "string",
          "required": true,
          "description": "An ISO-3166 or FIPS region code"
        },
        {
          "name": "minPopulation",
          "schema": "integer",
          "required": false,
          "description": "Only places having at least this population"
        },
        {
          "name": "maxPopulation",
          "schema": "integer",
          "required": false,
          "description": "Only places having no more than this population"
        },
        {
          "name": "namePrefix",
          "schema": "string",
          "required": false,
          "description": "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n"
        },
        {
          "name": "namePrefixDefaultLangResults",
          "schema": "boolean",
          "required": false,
          "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n"
        },
        {
          "name": "timeZoneIds",
          "schema": "string",
          "required": false,
          "description": "Only places in these time-zones (comma-delimited)"
        },
        {
          "name": "asciiMode",
          "schema": "boolean",
          "required": false,
          "description": "Display results using ASCII characters"
        },
        {
          "name": "hateoasMode",
          "schema": "boolean",
          "required": false,
          "description": "Include HATEOAS-style links in results"
        },
        {
          "name": "languageCode",
          "schema": "string",
          "required": false,
          "description": "Display results in this language"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to retrieve"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The zero-ary offset index into the results"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "How to sort place results. \n'Format: ±SORT_FIELD,±SORT_FIELD' \nwhere SORT_FIELD = elevation | name | population\n"
        },
        {
          "name": "includeDeleted",
          "schema": "string",
          "required": false,
          "description": "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of populated places"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        },
        {
          "statusCode": "404",
          "description": "Not Found Response"
        }
      ]
    },
    {
      "url": "/geo/countries/{countryId}/regions/{regionCode}/cities",
      "method": "findRegionCitiesUsingGet",
      "httpMethod": "get",
      "tag": "Geo",
      "typeScriptTag": "geo",
      "description": "Find country region cities",
      "parameters": [
        {
          "name": "countryId",
          "schema": "string",
          "required": true,
          "description": "An ISO-3166 country code or WikiData id"
        },
        {
          "name": "regionCode",
          "schema": "string",
          "required": true,
          "description": "An ISO-3166 or FIPS region code"
        },
        {
          "name": "minPopulation",
          "schema": "integer",
          "required": false,
          "description": "Only places having at least this population"
        },
        {
          "name": "maxPopulation",
          "schema": "integer",
          "required": false,
          "description": "Only places having no more than this population"
        },
        {
          "name": "namePrefix",
          "schema": "string",
          "required": false,
          "description": "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n"
        },
        {
          "name": "namePrefixDefaultLangResults",
          "schema": "boolean",
          "required": false,
          "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n"
        },
        {
          "name": "timeZoneIds",
          "schema": "string",
          "required": false,
          "description": "Only places in these time-zones (comma-delimited)"
        },
        {
          "name": "types",
          "schema": "string",
          "required": false,
          "description": "Only places for these types (comma-delimited): CITY | ADM2"
        },
        {
          "name": "asciiMode",
          "schema": "boolean",
          "required": false,
          "description": "Display results using ASCII characters"
        },
        {
          "name": "hateoasMode",
          "schema": "boolean",
          "required": false,
          "description": "Include HATEOAS-style links in results"
        },
        {
          "name": "languageCode",
          "schema": "string",
          "required": false,
          "description": "Display results in this language"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to retrieve"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The zero-ary offset index into the results"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "How to sort place results. \n'Format: ±SORT_FIELD,±SORT_FIELD' \nwhere SORT_FIELD = elevation | name | population\n"
        },
        {
          "name": "includeDeleted",
          "schema": "string",
          "required": false,
          "description": "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of populated places"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        },
        {
          "statusCode": "404",
          "description": "Not Found Response"
        }
      ]
    },
    {
      "url": "/geo/locations/{locationId}/nearbyCities",
      "method": "findCitiesNearLocationUsingGet",
      "httpMethod": "get",
      "tag": "Geo",
      "typeScriptTag": "geo",
      "description": "Find cities near location",
      "parameters": [
        {
          "name": "locationId",
          "schema": "string",
          "required": true,
          "description": "A latitude/longitude in ISO-6709 format: ±DD.DDDD±DDD.DDDD"
        },
        {
          "name": "radius",
          "schema": "integer",
          "required": false,
          "description": "The location radius within which to find places"
        },
        {
          "name": "distanceUnit",
          "schema": "string",
          "required": false,
          "description": "The unit of distance: MI | KM"
        },
        {
          "name": "countryIds",
          "schema": "string",
          "required": false,
          "description": "Only places in these countries (comma-delimited country codes or WikiData ids)"
        },
        {
          "name": "excludedCountryIds",
          "schema": "string",
          "required": false,
          "description": "Only places NOT in these countries (comma-delimited country codes or WikiData ids)"
        },
        {
          "name": "minPopulation",
          "schema": "integer",
          "required": false,
          "description": "Only places having at least this population"
        },
        {
          "name": "maxPopulation",
          "schema": "integer",
          "required": false,
          "description": "Only places having no more than this population"
        },
        {
          "name": "namePrefix",
          "schema": "string",
          "required": false,
          "description": "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n"
        },
        {
          "name": "namePrefixDefaultLangResults",
          "schema": "boolean",
          "required": false,
          "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n"
        },
        {
          "name": "timeZoneIds",
          "schema": "string",
          "required": false,
          "description": "Only places in these time-zones (comma-delimited)"
        },
        {
          "name": "types",
          "schema": "string",
          "required": false,
          "description": "Only places for these types (comma-delimited): CITY | ADM2"
        },
        {
          "name": "asciiMode",
          "schema": "boolean",
          "required": false,
          "description": "Display results using ASCII characters"
        },
        {
          "name": "hateoasMode",
          "schema": "boolean",
          "required": false,
          "description": "Include HATEOAS-style links in results"
        },
        {
          "name": "languageCode",
          "schema": "string",
          "required": false,
          "description": "Display results in this language"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to retrieve"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The zero-ary offset index into the results"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere SORT_FIELD = countryCode | elevation | name | population\n"
        },
        {
          "name": "includeDeleted",
          "schema": "string",
          "required": false,
          "description": "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of populated places"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        }
      ]
    },
    {
      "url": "/geo/locations/{locationId}/nearbyDivisions",
      "method": "findDivisionsNearLocationUsingGet",
      "httpMethod": "get",
      "tag": "Geo",
      "typeScriptTag": "geo",
      "description": "Find divisions near location",
      "parameters": [
        {
          "name": "locationId",
          "schema": "string",
          "required": true,
          "description": "A latitude/longitude in ISO-6709 format: ±DD.DDDD±DDD.DDDD"
        },
        {
          "name": "radius",
          "schema": "integer",
          "required": false,
          "description": "The location radius within which to find places"
        },
        {
          "name": "distanceUnit",
          "schema": "string",
          "required": false,
          "description": "The unit of distance: MI | KM"
        },
        {
          "name": "countryIds",
          "schema": "string",
          "required": false,
          "description": "Only places in these countries (comma-delimited country codes or WikiData ids)"
        },
        {
          "name": "excludedCountryIds",
          "schema": "string",
          "required": false,
          "description": "Only places NOT in these countries (comma-delimited country codes or WikiData ids)"
        },
        {
          "name": "minPopulation",
          "schema": "integer",
          "required": false,
          "description": "Only places having at least this population"
        },
        {
          "name": "maxPopulation",
          "schema": "integer",
          "required": false,
          "description": "Only places having no more than this population"
        },
        {
          "name": "namePrefix",
          "schema": "string",
          "required": false,
          "description": "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n"
        },
        {
          "name": "namePrefixDefaultLangResults",
          "schema": "boolean",
          "required": false,
          "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n"
        },
        {
          "name": "timeZoneIds",
          "schema": "string",
          "required": false,
          "description": "Only places in these time-zones (comma-delimited)"
        },
        {
          "name": "asciiMode",
          "schema": "boolean",
          "required": false,
          "description": "Display results using ASCII characters"
        },
        {
          "name": "hateoasMode",
          "schema": "boolean",
          "required": false,
          "description": "Include HATEOAS-style links in results"
        },
        {
          "name": "languageCode",
          "schema": "string",
          "required": false,
          "description": "Display results in this language"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to retrieve"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The zero-ary offset index into the results"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere SORT_FIELD = countryCode | elevation | name | population\n"
        },
        {
          "name": "includeDeleted",
          "schema": "string",
          "required": false,
          "description": "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of populated places"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        }
      ]
    },
    {
      "url": "/locale/currencies",
      "method": "getCurrenciesUsingGet",
      "httpMethod": "get",
      "tag": "Locale",
      "typeScriptTag": "locale",
      "description": "Find currencies",
      "parameters": [
        {
          "name": "countryId",
          "schema": "string",
          "required": true,
          "description": "Currencies for this country id"
        },
        {
          "name": "hateoasMode",
          "schema": "boolean",
          "required": false,
          "description": "Include HATEOAS-style links in results"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to retrieve"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The zero-ary offset index into the results"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of currencies"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        }
      ]
    },
    {
      "url": "/locale/languages",
      "method": "getLanguagesUsingGet",
      "httpMethod": "get",
      "tag": "Locale",
      "typeScriptTag": "locale",
      "description": "Get languages",
      "parameters": [
        {
          "name": "hateoasMode",
          "schema": "boolean",
          "required": false,
          "description": "Include HATEOAS-style links in results"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to retrieve"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The zero-ary offset index into the results"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of languages supported by the system"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        }
      ]
    },
    {
      "url": "/locale/locales",
      "method": "getLocalesUsingGet",
      "httpMethod": "get",
      "tag": "Locale",
      "typeScriptTag": "locale",
      "description": "Get locales",
      "parameters": [
        {
          "name": "hateoasMode",
          "schema": "boolean",
          "required": false,
          "description": "Include HATEOAS-style links in results"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to retrieve"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The zero-ary offset index into the results"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of locales"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        }
      ]
    },
    {
      "url": "/locale/timezones",
      "method": "getTimezonesUsingGet",
      "httpMethod": "get",
      "tag": "Locale",
      "typeScriptTag": "locale",
      "description": "Get time-zones",
      "parameters": [
        {
          "name": "hateoasMode",
          "schema": "boolean",
          "required": false,
          "description": "Include HATEOAS-style links in results"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to retrieve"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The zero-ary offset index into the results"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of time-zones"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        }
      ]
    },
    {
      "url": "/locale/timezones/{zoneId}",
      "method": "getTimeZoneUsingGet",
      "httpMethod": "get",
      "tag": "Locale",
      "typeScriptTag": "locale",
      "description": "Get time-zone",
      "parameters": [
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": "A time-zone id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A time-zone"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        },
        {
          "statusCode": "404",
          "description": "Not Found Response"
        }
      ]
    },
    {
      "url": "/locale/timezones/{zoneId}/dateTime",
      "method": "getTimeZoneDateTimeUsingGet",
      "httpMethod": "get",
      "tag": "Locale",
      "typeScriptTag": "locale",
      "description": "Get time-zone date-time",
      "parameters": [
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": "A time-zone id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An ISO-6801 date-time response"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        },
        {
          "statusCode": "404",
          "description": "Not Found Response"
        }
      ]
    },
    {
      "url": "/locale/timezones/{zoneId}/time",
      "method": "getTimeZoneTimeUsingGet",
      "httpMethod": "get",
      "tag": "Locale",
      "typeScriptTag": "locale",
      "description": "Get time-zone time",
      "parameters": [
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": "A time-zone id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An ISO-8601 time response"
        },
        {
          "statusCode": "400",
          "description": "Bad Request Response"
        },
        {
          "statusCode": "403",
          "description": "Forbidden Response"
        },
        {
          "statusCode": "404",
          "description": "Not Found Response"
        }
      ]
    }
  ],
  "apiBaseUrl": "https://wft-geo-db.p.rapidapi.com/v1",
  "apiDescription": "The GeoDB API focuses on getting global city and region data. Easily obtain country, region, and city data for use\nin your apps! \n<ul>\n  <li>Filter cities by name prefix, country, location, time-zone, and even minimum population.</li>\n  <li>Sort cities by name, country code, elevation, and population - or any combination of these.</li> \n  <li>Get all country regions.</li> <li>Get all cities in a given region.</li>\n  <li>\n    Display results in multiple languages.</li> <li>RESTful API adheres to industry best-practices, including\n    HATEOAS-style links to facilitate paging results.\n  </li> \n  <li>Backed by cloud-based load-balanced infrastructure for resiliency and performance!</li>\n  <li>Data is periodically refreshed from GeoNames and WikiData.</li>\n</ul>\n<p>Notes:\n<ul>\n  <li>\n    Since the database is periodically updated, this may <strong>very rarely</strong> result in certain cities\n    being marked deleted (e.g., duplicates removed). By default, endpoints returning city data will exclude\n    cities marked deleted. However, in the unlikely event that this occurs while your app is paging through a set\n    of affected results - and you care about the paged results suddenly changing underneath - specify \n    <tt>includeDeleted=SINCE_YESTERDAY</tt> (or <tt>SINCE_LAST_WEEK</tt> if you're really paranoid!).\n  </li>\n</ul>\n<hr/>\n<h3>Useful Resources</h3>\n<ul>\n  <li>\n    SDKs\n    <ul>\n      <li>\n        <a href='https://www.npmjs.com/package/wft-geodb-angular-client'>Angular</a>, \n        <a href='https://github.com/wirefreethought/geodb-sample-angular-app'>Sample App</a>\n      </li>\n      <li><a href='https://github.com/wirefreethought/geodb-java-client'>Java</a></li>\n      <li><a href='https://www.npmjs.com/package/wft-geodb-js-client'>JavaScript</a></li>\n    </ul>\n    <li><a href='swagger.json'>Swagger Docs</a></li>\n    <li><a href='http://creativecommons.org/licenses/by/3.0/'>Usage License</a></li>\n  </li>      \n</ul>\n",
  "apiTitle": "GeoDB Cities API",
  "endpoints": 26,
  "sdkMethods": 26,
  "schemas": 34,
  "parameters": 207,
  "difficultyScore": 94.75,
  "difficulty": "Medium"
}