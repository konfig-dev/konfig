{
  "providerName": "wiremock.org",
  "openApiRaw": "http://wiremock.org/assets/js/wiremock-admin-api.json",
  "homepage": "wiremock.org",
  "serviceName": "admin",
  "apiVersion": "2.35.0",
  "methods": [
    {
      "url": "/__admin/mappings",
      "method": "/Admin/mappingsDelete",
      "httpMethod": "delete",
      "tag": "Stub Mappings",
      "description": "Delete all stub mappings",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/__admin/mappings",
      "method": "/Admin/mappingsGet",
      "httpMethod": "get",
      "tag": "Stub Mappings",
      "description": "Get all stub mappings",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The start index of the results to return"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/__admin/mappings",
      "method": "/Admin/mappingsPost",
      "httpMethod": "post",
      "tag": "Stub Mappings",
      "description": "Create a new stub mapping",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "newScenarioState",
          "schema": "string",
          "description": ""
        },
        {
          "name": "persistent",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "postServeActions",
          "schema": "object",
          "description": ""
        },
        {
          "name": "priority",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "request",
          "schema": "object",
          "description": ""
        },
        {
          "name": "requiredScenarioState",
          "schema": "string",
          "description": ""
        },
        {
          "name": "response",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "scenarioName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "uuid",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/__admin/mappings/find-by-metadata",
      "method": "/Admin/mappings/findByMetadataPost",
      "httpMethod": "post",
      "tag": "Stub Mappings",
      "description": "Find stubs by matching on their metadata",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/__admin/mappings/import",
      "method": "/Admin/mappings/importPost",
      "httpMethod": "post",
      "tag": "Stub Mappings",
      "description": "Import stub mappings",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/__admin/mappings/remove-by-metadata",
      "method": "/Admin/mappings/removeByMetadataPost",
      "httpMethod": "post",
      "tag": "Stub Mappings",
      "description": "Delete stub mappings matching metadata",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/__admin/mappings/reset",
      "method": "/Admin/mappings/resetPost",
      "httpMethod": "post",
      "tag": "Stub Mappings",
      "description": "Reset stub mappings",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/__admin/mappings/save",
      "method": "/Admin/mappings/savePost",
      "httpMethod": "post",
      "tag": "Stub Mappings",
      "description": "Persist stub mappings",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/__admin/mappings/{stubMappingId}",
      "method": "/Admin/mappings/{stubMappingId}Delete",
      "httpMethod": "delete",
      "tag": "Stub Mappings",
      "description": "Delete a stub mapping",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/__admin/mappings/{stubMappingId}",
      "method": "/Admin/mappings/{stubMappingId}Get",
      "httpMethod": "get",
      "tag": "Stub Mappings",
      "description": "Get stub mapping by ID",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/__admin/mappings/{stubMappingId}",
      "method": "/Admin/mappings/{stubMappingId}Put",
      "httpMethod": "put",
      "tag": "Stub Mappings",
      "description": "Update a stub mapping",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "newScenarioState",
          "schema": "string",
          "description": ""
        },
        {
          "name": "persistent",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "postServeActions",
          "schema": "object",
          "description": ""
        },
        {
          "name": "priority",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "request",
          "schema": "object",
          "description": ""
        },
        {
          "name": "requiredScenarioState",
          "schema": "string",
          "description": ""
        },
        {
          "name": "response",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "scenarioName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "uuid",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/__admin/near-misses/request",
      "method": "/Admin/nearMisses/requestPost",
      "httpMethod": "post",
      "tag": "Near Misses",
      "description": "Find near misses matching specific request",
      "parameters": [
        {
          "name": "absoluteUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "body",
          "schema": "string",
          "description": ""
        },
        {
          "name": "cookies",
          "schema": "object",
          "description": ""
        },
        {
          "name": "headers",
          "schema": "object",
          "description": ""
        },
        {
          "name": "method",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/__admin/near-misses/request-pattern",
      "method": "/Admin/nearMisses/requestPatternPost",
      "httpMethod": "post",
      "tag": "Near Misses",
      "description": "Find near misses matching request pattern",
      "parameters": [
        {
          "name": "basicAuthCredentials",
          "schema": "object",
          "description": ""
        },
        {
          "name": "bodyPatterns",
          "schema": "array",
          "description": ""
        },
        {
          "name": "cookies",
          "schema": "object",
          "description": ""
        },
        {
          "name": "headers",
          "schema": "object",
          "description": ""
        },
        {
          "name": "method",
          "schema": "string",
          "description": ""
        },
        {
          "name": "queryParameters",
          "schema": "object",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "urlPath",
          "schema": "string",
          "description": ""
        },
        {
          "name": "urlPathPattern",
          "schema": "string",
          "description": ""
        },
        {
          "name": "urlPattern",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/__admin/recordings/snapshot",
      "method": "/Admin/recordings/snapshotPost",
      "httpMethod": "post",
      "tag": "Recordings",
      "description": "Take a snapshot recording",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/__admin/recordings/start",
      "method": "/Admin/recordings/startPost",
      "httpMethod": "post",
      "tag": "Recordings",
      "description": "Start recording",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/__admin/recordings/status",
      "method": "/Admin/recordings/statusGet",
      "httpMethod": "get",
      "tag": "Recordings",
      "description": "Get recording status",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/__admin/recordings/stop",
      "method": "/Admin/recordings/stopPost",
      "httpMethod": "post",
      "tag": "Recordings",
      "description": "Stop recording",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/__admin/requests",
      "method": "/Admin/requestsDelete",
      "httpMethod": "delete",
      "tag": "Requests",
      "description": "Delete all requests in journal",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/__admin/requests",
      "method": "/Admin/requestsGet",
      "httpMethod": "get",
      "tag": "Requests",
      "description": "Get all requests in journal",
      "parameters": [
        {
          "name": "limit",
          "schema": "string",
          "description": "The maximum number of results to return"
        },
        {
          "name": "since",
          "schema": "string",
          "description": "Only return logged requests after this date"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/__admin/requests/count",
      "method": "/Admin/requests/countPost",
      "httpMethod": "post",
      "tag": "Requests",
      "description": "Count requests by criteria",
      "parameters": [
        {
          "name": "basicAuthCredentials",
          "schema": "object",
          "description": ""
        },
        {
          "name": "bodyPatterns",
          "schema": "array",
          "description": ""
        },
        {
          "name": "cookies",
          "schema": "object",
          "description": ""
        },
        {
          "name": "headers",
          "schema": "object",
          "description": ""
        },
        {
          "name": "method",
          "schema": "string",
          "description": ""
        },
        {
          "name": "queryParameters",
          "schema": "object",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "urlPath",
          "schema": "string",
          "description": ""
        },
        {
          "name": "urlPathPattern",
          "schema": "string",
          "description": ""
        },
        {
          "name": "urlPattern",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/__admin/requests/find",
      "method": "/Admin/requests/findPost",
      "httpMethod": "post",
      "tag": "Requests",
      "description": "Find requests by criteria",
      "parameters": [
        {
          "name": "basicAuthCredentials",
          "schema": "object",
          "description": ""
        },
        {
          "name": "bodyPatterns",
          "schema": "array",
          "description": ""
        },
        {
          "name": "cookies",
          "schema": "object",
          "description": ""
        },
        {
          "name": "headers",
          "schema": "object",
          "description": ""
        },
        {
          "name": "method",
          "schema": "string",
          "description": ""
        },
        {
          "name": "queryParameters",
          "schema": "object",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "urlPath",
          "schema": "string",
          "description": ""
        },
        {
          "name": "urlPathPattern",
          "schema": "string",
          "description": ""
        },
        {
          "name": "urlPattern",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/__admin/requests/remove",
      "method": "/Admin/requests/removePost",
      "httpMethod": "post",
      "tag": "Requests",
      "description": "Remove requests by criteria",
      "parameters": [
        {
          "name": "basicAuthCredentials",
          "schema": "object",
          "description": ""
        },
        {
          "name": "bodyPatterns",
          "schema": "array",
          "description": ""
        },
        {
          "name": "cookies",
          "schema": "object",
          "description": ""
        },
        {
          "name": "headers",
          "schema": "object",
          "description": ""
        },
        {
          "name": "method",
          "schema": "string",
          "description": ""
        },
        {
          "name": "queryParameters",
          "schema": "object",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "urlPath",
          "schema": "string",
          "description": ""
        },
        {
          "name": "urlPathPattern",
          "schema": "string",
          "description": ""
        },
        {
          "name": "urlPattern",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/__admin/requests/remove-by-metadata",
      "method": "/Admin/requests/removeByMetadataPost",
      "httpMethod": "post",
      "tag": "Requests",
      "description": "Delete requests mappings matching metadata",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/__admin/requests/reset",
      "method": "/Admin/requests/resetPost",
      "httpMethod": "post",
      "tag": "Requests",
      "description": "Empty the request journal",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/__admin/requests/unmatched",
      "method": "/Admin/requests/unmatchedGet",
      "httpMethod": "get",
      "tag": "Requests",
      "description": "Find unmatched requests",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/__admin/requests/unmatched/near-misses",
      "method": "/Admin/requests/unmatched/nearMissesGet",
      "httpMethod": "get",
      "tag": "Near Misses",
      "description": "Retrieve near-misses for all unmatched requests",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/__admin/requests/{requestId}",
      "method": "/Admin/requests/{requestId}Delete",
      "httpMethod": "delete",
      "tag": "Requests",
      "description": "Delete request by ID",
      "parameters": [
        {
          "name": "requestId",
          "schema": "string",
          "required": true,
          "description": "The UUID of the logged request"
        }
      ],
      "responses": []
    },
    {
      "url": "/__admin/requests/{requestId}",
      "method": "/Admin/requests/{requestId}Get",
      "httpMethod": "get",
      "tag": "Requests",
      "description": "Get request by ID",
      "parameters": [
        {
          "name": "requestId",
          "schema": "string",
          "required": true,
          "description": "The UUID of the logged request"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/__admin/reset",
      "method": "/Admin/resetPost",
      "httpMethod": "post",
      "tag": "System",
      "description": "Reset mappings and request journal",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/__admin/scenarios",
      "method": "/Admin/scenariosGet",
      "httpMethod": "get",
      "tag": "Scenarios",
      "description": "Get all scenarios",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/__admin/scenarios/reset",
      "method": "/Admin/scenarios/resetPost",
      "httpMethod": "post",
      "tag": "Scenarios",
      "description": "Reset the state of all scenarios",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/__admin/settings",
      "method": "/Admin/settingsPost",
      "httpMethod": "post",
      "tag": "System",
      "description": "Update global settings",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/__admin/shutdown",
      "method": "/Admin/shutdownPost",
      "httpMethod": "post",
      "tag": "System",
      "description": "Shutdown the WireMock server",
      "parameters": [],
      "responses": []
    }
  ],
  "apiBaseUrl": "/",
  "apiTitle": "WireMock",
  "endpoints": 27,
  "sdkMethods": 34,
  "schemas": 0,
  "parameters": 76,
  "difficultyScore": 53,
  "difficulty": "Easy"
}