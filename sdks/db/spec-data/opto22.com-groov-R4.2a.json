{
  "providerName": "opto22.com",
  "openApiRaw": "http://developer.opto22.com/static/generated/groov-rest-api/swagger.yaml",
  "homepage": "opto22.com",
  "serviceName": "groov",
  "apiVersion": "R4.2a",
  "methods": [
    {
      "url": "/info",
      "method": "groovInfo",
      "httpMethod": "get",
      "tag": "info",
      "description": "Get information about groov View. No authorization required.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/data-store/devices",
      "method": "listDevices",
      "httpMethod": "get",
      "tag": "data-store",
      "description": "List devices available in the data store. Authorized for admins and editors.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/data-store/devices/{id}/tags",
      "method": "listDeviceTags",
      "httpMethod": "get",
      "tag": "data-store",
      "description": "List tags of the given device. Authorized for admins and editors.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/data-store/read",
      "method": "batchReadTags",
      "httpMethod": "post",
      "tag": "data-store",
      "description": "Read selected tags from the data store. Authorized for admins and editors.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/data-store/read/{id}",
      "method": "readTag",
      "httpMethod": "get",
      "tag": "data-store",
      "description": "Read the current value of a single tag. Authorized for admins and editors.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/data-store/tags",
      "method": "listAllTags",
      "httpMethod": "get",
      "tag": "data-store",
      "description": "List all data store tags defined in the project. Authorized for admins and editors.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/data-store/write/{id}",
      "method": "writeTag",
      "httpMethod": "post",
      "tag": "data-store",
      "description": "Writes a new value to the given tag. Authorized for admins and editors.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/logging/groovLogs.json",
      "method": "downloadLogJson",
      "httpMethod": "get",
      "tag": "logging",
      "description": "Downloads the complete groov View log in JSON format. Added in groov View R4.2a.",
      "parameters": [
        {
          "name": "minimum-log-level",
          "schema": "string",
          "required": false,
          "description": "How verbose the log should be."
        },
        {
          "name": "last-timestamp",
          "schema": "number",
          "required": false,
          "description": "The earliest time to include in the log. Value is milliseconds since January 1, 1970 UTC."
        },
        {
          "name": "filter",
          "schema": "string",
          "description": "Optional string to search for in the log."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/logging/groovLogs.txt",
      "method": "downloadLogText",
      "httpMethod": "get",
      "tag": "logging",
      "description": "Downloads the complete groov View log. Added in groov View R4.2a.",
      "parameters": [
        {
          "name": "minimum-log-level",
          "schema": "string",
          "required": false,
          "description": "How verbose the log should be."
        },
        {
          "name": "last-timestamp",
          "schema": "number",
          "required": false,
          "description": "The earliest time to include in the log. Value is milliseconds since January 1, 1970 UTC."
        },
        {
          "name": "filter",
          "schema": "string",
          "description": "Optional string to search for in the log."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/whoami",
      "method": "whoAmI",
      "httpMethod": "get",
      "tag": "whoami",
      "description": "Get information about the user you are authenticated as. Authorized for admins, editors, operators, and kiosk.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "/api",
  "apiDescription": "#### Revised: 2019-11-21\n\n### Overview\ngroov View Public API revision 1.\n",
  "apiTitle": "groov View Public API",
  "endpoints": 10,
  "sdkMethods": 14,
  "schemas": 16,
  "parameters": 6,
  "contactUrl": "http://developer.opto22.com",
  "contactEmail": "developer@opto22.com",
  "difficultyScore": 23.5,
  "difficulty": "Easy"
}