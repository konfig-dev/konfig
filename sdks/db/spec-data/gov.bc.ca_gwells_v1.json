{
  "providerName": "gov.bc.ca",
  "openApiRaw": "https://raw.githubusercontent.com/bcgov/api-specs/master/gwells/gwells.json",
  "securitySchemes": {
    "Bearer": {
      "in": "header",
      "name": "JWT",
      "type": "apiKey"
    }
  },
  "categories": [
    "open_data"
  ],
  "homepage": "gov.bc.ca",
  "serviceName": "gwells",
  "apiVersion": "v1",
  "methods": [
    {
      "url": "/aquifer-codes/demand/",
      "method": "aquiferCodesDemandList",
      "httpMethod": "get",
      "tag": "aquifer-codes",
      "typeScriptTag": "aquiferCodes",
      "description": "return a list of aquifer demand codes",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The initial index from which to return the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/aquifer-codes/materials/",
      "method": "aquiferCodesMaterialsList",
      "httpMethod": "get",
      "tag": "aquifer-codes",
      "typeScriptTag": "aquiferCodes",
      "description": "return a list of aquifer material codes",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The initial index from which to return the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/aquifer-codes/productivity/",
      "method": "aquiferCodesProductivityList",
      "httpMethod": "get",
      "tag": "aquifer-codes",
      "typeScriptTag": "aquiferCodes",
      "description": "return a list of aquifer productivity codes",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The initial index from which to return the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/aquifer-codes/quality-concerns/",
      "method": "aquiferCodesQualityConcernsList",
      "httpMethod": "get",
      "tag": "aquifer-codes",
      "typeScriptTag": "aquiferCodes",
      "description": "return a list of quality concern codes",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The initial index from which to return the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/aquifer-codes/subtypes/",
      "method": "aquiferCodesSubtypesList",
      "httpMethod": "get",
      "tag": "aquifer-codes",
      "typeScriptTag": "aquiferCodes",
      "description": "return a list of aquifer subtype codes",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The initial index from which to return the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/aquifer-codes/vulnerability/",
      "method": "aquiferCodesVulnerabilityList",
      "httpMethod": "get",
      "tag": "aquifer-codes",
      "typeScriptTag": "aquiferCodes",
      "description": "return a list of aquifer vulnerability codes",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The initial index from which to return the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/aquifer-codes/water-use/",
      "method": "aquiferCodesWaterUseList",
      "httpMethod": "get",
      "tag": "aquifer-codes",
      "typeScriptTag": "aquiferCodes",
      "description": "return a list of water use codes",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The initial index from which to return the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/aquifers/",
      "method": "aquifersList",
      "httpMethod": "get",
      "tag": "aquifers",
      "typeScriptTag": "aquifers",
      "description": "return a list of aquifers",
      "parameters": [
        {
          "name": "aquiferId",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "ordering",
          "schema": "string",
          "required": false,
          "description": "Which field to use when ordering the results."
        },
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "A search term."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The initial index from which to return the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/aquifers/names/",
      "method": "aquifersNamesList",
      "httpMethod": "get",
      "tag": "aquifers",
      "typeScriptTag": "aquifers",
      "description": "List all aquifers in a simplified format",
      "parameters": [
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "A search term."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/aquifers/{aquifer_id}/",
      "method": "aquifersRead",
      "httpMethod": "get",
      "tag": "aquifers",
      "typeScriptTag": "aquifers",
      "description": "return details of aquifers",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/aquifers/{aquifer_id}/files",
      "method": "aquifersFilesList",
      "httpMethod": "get",
      "tag": "aquifers",
      "typeScriptTag": "aquifers",
      "description": "list files found for the aquifer identified in the uri",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cities/drillers/",
      "method": "citiesDrillersList",
      "httpMethod": "get",
      "tag": "cities",
      "typeScriptTag": "cities",
      "description": "returns a list of cities with a qualified, registered operator (driller or installer)",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cities/installers/",
      "method": "citiesInstallersList",
      "httpMethod": "get",
      "tag": "cities",
      "typeScriptTag": "cities",
      "description": "returns a list of cities with a qualified, registered operator (driller or installer)",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/config",
      "method": "configList",
      "httpMethod": "get",
      "tag": "config",
      "typeScriptTag": "config",
      "description": "serves general configuration",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/drillers/",
      "method": "drillersList",
      "httpMethod": "get",
      "tag": "drillers",
      "typeScriptTag": "drillers",
      "description": "Returns a list of all person records",
      "parameters": [
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "A search term."
        },
        {
          "name": "ordering",
          "schema": "string",
          "required": false,
          "description": "Which field to use when ordering the results."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The initial index from which to return the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/drillers/names/",
      "method": "drillersNamesList",
      "httpMethod": "get",
      "tag": "drillers",
      "typeScriptTag": "drillers",
      "description": "Search for a person in the Register",
      "parameters": [
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "A search term."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/drillers/{person_guid}/files/",
      "method": "drillersFilesList",
      "httpMethod": "get",
      "tag": "drillers",
      "typeScriptTag": "drillers",
      "description": "list files found for the aquifer identified in the uri",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/keycloak",
      "method": "keycloakList",
      "httpMethod": "get",
      "tag": "keycloak",
      "typeScriptTag": "keycloak",
      "description": "serves keycloak config",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/submissions/options/",
      "method": "submissionsOptionsList",
      "httpMethod": "get",
      "tag": "submissions",
      "typeScriptTag": "submissions",
      "description": "Options required for submitting activity report forms",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/surveys/",
      "method": "surveysList",
      "httpMethod": "get",
      "tag": "surveys",
      "typeScriptTag": "surveys",
      "description": "returns a list of active surveys",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/wells/",
      "method": "wellsList",
      "httpMethod": "get",
      "tag": "wells",
      "typeScriptTag": "wells",
      "description": "returns a list of wells",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The initial index from which to return the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/wells/tags/",
      "method": "wellsTagsList",
      "httpMethod": "get",
      "tag": "wells",
      "typeScriptTag": "wells",
      "description": "seach for wells by tag or owner",
      "parameters": [
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "A search term."
        },
        {
          "name": "ordering",
          "schema": "string",
          "required": false,
          "description": "Which field to use when ordering the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/wells/{tag}/files",
      "method": "wellsFilesList",
      "httpMethod": "get",
      "tag": "wells",
      "typeScriptTag": "wells",
      "description": "list files found for the well identified in the uri",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/wells/{well_tag_number}",
      "method": "wellsRead",
      "httpMethod": "get",
      "tag": "wells",
      "typeScriptTag": "wells",
      "description": "Return well detail.\nThis view is open to all, and has no permissions.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://apps.nrs.gov.bc.ca/gwells/api/v1/",
  "apiDescription": "The groundwater wells, aquifers and registry API contains information related to groundwater wells and aquifers as well as a register of qualified well drillers and well pump installers registered to operate in B.C.",
  "apiTitle": "Groundwater Wells, Aquifers and Registry API",
  "endpoints": 27,
  "sdkMethods": 51,
  "schemas": 31,
  "parameters": 29,
  "contactEmail": "groundwater@gov.bc.ca",
  "difficultyScore": 73.75,
  "difficulty": "Easy"
}