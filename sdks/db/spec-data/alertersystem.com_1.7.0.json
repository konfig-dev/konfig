{
  "providerName": "alertersystem.com",
  "openApiRaw": "https://www.alertersystem.com/api/docs.json",
  "securitySchemes": {
    "oauth": {
      "description": "OAuth 2.0 client credentials Grant",
      "flows": {
        "clientCredentials": {
          "scopes": {
            "full": "Full access",
            "read": "Read-only access"
          },
          "tokenUrl": "/oauth/v2/access-token/"
        }
      },
      "type": "oauth2"
    }
  },
  "homepage": "alertersystem.com",
  "apiVersion": "1.7.0",
  "methods": [
    {
      "url": "/api/alert-log",
      "method": "apiAlertLogGetCollection",
      "httpMethod": "get",
      "tag": "AlertLog",
      "typeScriptTag": "alertLog",
      "description": "Retrieves the collection of AlertLog resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "monitor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "monitor[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "alertService",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertService[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "alertLogStatusCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertLogStatusCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/alert-log-status-code",
      "method": "apiAlertLogStatusCodeGetCollection",
      "httpMethod": "get",
      "tag": "AlertLogStatusCode",
      "typeScriptTag": "alertLogStatusCode",
      "description": "Retrieves the collection of AlertLogStatusCode resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/alert-log-status-code/{id}",
      "method": "apiAlertLogStatusCodeIdGet",
      "httpMethod": "get",
      "tag": "AlertLogStatusCode",
      "typeScriptTag": "alertLogStatusCode",
      "description": "Retrieves a AlertLogStatusCode resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "AlertLogStatusCode identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The AlertLogStatusCode resource is a set of codes that describes the outcomes of the dispatching of an alert."
        }
      ]
    },
    {
      "url": "/api/alert-log/{id}",
      "method": "apiAlertLogIdGet",
      "httpMethod": "get",
      "tag": "AlertLog",
      "typeScriptTag": "alertLog",
      "description": "Retrieves a AlertLog resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "AlertLog identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The AlertLog resource is a chronological record of all the alerts that have been triggered, including the status of each alert."
        }
      ]
    },
    {
      "url": "/api/alert-service",
      "method": "apiAlertServiceGetCollection",
      "httpMethod": "get",
      "tag": "AlertService",
      "typeScriptTag": "alertService",
      "description": "Retrieves the collection of AlertService resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/alert-service",
      "method": "apiAlertServicePost",
      "httpMethod": "post",
      "tag": "AlertService",
      "typeScriptTag": "alertService",
      "description": "Creates a AlertService resource.",
      "parameters": [
        {
          "name": "alertServiceName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "alertServiceNotes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertServiceTransportCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mediaObjects",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "recipientEmailAddress",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "recipientPhoneNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportAlerta",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportAllMySms",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportAmazonSns",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportBandwidth",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportChatwork",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportClickSend",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportClickatell",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportContactEveryone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportDiscord",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportEmail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportEngagespot",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportEsendex",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportExpo",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportFirebase",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportFortySixElks",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportFreeMobile",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportFreshdesk",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportGatewayApi",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportGitter",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportGoogleChat",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportGotify",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportHelpScout",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportInfobip",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportIqsms",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportKazInfoTeh",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportLightSms",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportLineNotify",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportLinkedIn",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMailjet",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMastodon",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMattermost",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMercure",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMessageBird",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMessageMedia",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMicrosoftTeams",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMobyt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportOctopush",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportOneSignal",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportOpsgenie",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportOrangeSms",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportOvhCloud",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportPagerDuty",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportPagerTree",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportPlivo",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportPushbullet",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportPushover",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportPushy",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportRingCentral",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportRocketChat",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSendberry",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSendinblue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSimpleTextin",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSinch",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSlack",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSms77",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSmsBiuras",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSmsFactor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSmsapi",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSmsc",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSmsmode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSpotHit",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportTelegram",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportTelnyx",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportTermii",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportTrello",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportTurboSms",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportTwilio",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportTwitter",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportVonage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportWebhook",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportYunpian",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportZendesk",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportZulip",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The AlertService resource is a collection of services that can be used to dispatch an alert. Each alert service uses a distinct message transport."
        }
      ]
    },
    {
      "url": "/api/alert-service-transport-code",
      "method": "apiAlertServiceTransportCodeGetCollection",
      "httpMethod": "get",
      "tag": "AlertServiceTransportCode",
      "typeScriptTag": "alertServiceTransportCode",
      "description": "Retrieves the collection of AlertServiceTransportCode resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/alert-service-transport-code/{id}",
      "method": "apiAlertServiceTransportCodeIdGet",
      "httpMethod": "get",
      "tag": "AlertServiceTransportCode",
      "typeScriptTag": "alertServiceTransportCode",
      "description": "Retrieves a AlertServiceTransportCode resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "AlertServiceTransportCode identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The AlertServiceTransportCode resource is a set of codes that describes the type of transport that is used by an alert service."
        }
      ]
    },
    {
      "url": "/api/alert-service/{id}",
      "method": "apiAlertServiceIdDelete",
      "httpMethod": "delete",
      "tag": "AlertService",
      "typeScriptTag": "alertService",
      "description": "Removes the AlertService resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "AlertService identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/alert-service/{id}",
      "method": "apiAlertServiceIdGet",
      "httpMethod": "get",
      "tag": "AlertService",
      "typeScriptTag": "alertService",
      "description": "Retrieves a AlertService resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "AlertService identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The AlertService resource is a collection of services that can be used to dispatch an alert. Each alert service uses a distinct message transport."
        }
      ]
    },
    {
      "url": "/api/alert-service/{id}",
      "method": "apiAlertServiceIdPatch",
      "httpMethod": "patch",
      "tag": "AlertService",
      "typeScriptTag": "alertService",
      "description": "Updates the AlertService resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "AlertService identifier"
        },
        {
          "name": "alertServiceName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "alertServiceNotes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mediaObjects",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "recipientEmailAddress",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "recipientPhoneNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportAlerta",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportAllMySms",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportAmazonSns",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportBandwidth",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportChatwork",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportClickSend",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportClickatell",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportContactEveryone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportDiscord",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportEmail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportEngagespot",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportEsendex",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportExpo",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportFirebase",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportFortySixElks",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportFreeMobile",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportFreshdesk",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportGatewayApi",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportGitter",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportGoogleChat",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportGotify",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportHelpScout",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportInfobip",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportIqsms",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportKazInfoTeh",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportLightSms",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportLineNotify",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportLinkedIn",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMailjet",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMastodon",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMattermost",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMercure",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMessageBird",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMessageMedia",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMicrosoftTeams",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMobyt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportOctopush",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportOneSignal",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportOpsgenie",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportOrangeSms",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportOvhCloud",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportPagerDuty",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportPagerTree",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportPlivo",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportPushbullet",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportPushover",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportPushy",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportRingCentral",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportRocketChat",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSendberry",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSendinblue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSimpleTextin",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSinch",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSlack",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSms77",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSmsBiuras",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSmsFactor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSmsapi",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSmsc",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSmsmode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSpotHit",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportTelegram",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportTelnyx",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportTermii",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportTrello",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportTurboSms",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportTwilio",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportTwitter",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportVonage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportWebhook",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportYunpian",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportZendesk",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportZulip",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The AlertService resource is a collection of services that can be used to dispatch an alert. Each alert service uses a distinct message transport."
        }
      ]
    },
    {
      "url": "/api/alert-service/{id}",
      "method": "apiAlertServiceIdPut",
      "httpMethod": "put",
      "tag": "AlertService",
      "typeScriptTag": "alertService",
      "description": "Replaces the AlertService resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "AlertService identifier"
        },
        {
          "name": "alertServiceName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "alertServiceNotes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mediaObjects",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "recipientEmailAddress",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "recipientPhoneNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportAlerta",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportAllMySms",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportAmazonSns",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportBandwidth",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportChatwork",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportClickSend",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportClickatell",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportContactEveryone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportDiscord",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportEmail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportEngagespot",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportEsendex",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportExpo",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportFirebase",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportFortySixElks",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportFreeMobile",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportFreshdesk",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportGatewayApi",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportGitter",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportGoogleChat",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportGotify",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportHelpScout",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportInfobip",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportIqsms",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportKazInfoTeh",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportLightSms",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportLineNotify",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportLinkedIn",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMailjet",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMastodon",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMattermost",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMercure",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMessageBird",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMessageMedia",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMicrosoftTeams",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportMobyt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportOctopush",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportOneSignal",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportOpsgenie",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportOrangeSms",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportOvhCloud",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportPagerDuty",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportPagerTree",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportPlivo",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportPushbullet",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportPushover",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportPushy",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportRingCentral",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportRocketChat",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSendberry",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSendinblue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSimpleTextin",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSinch",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSlack",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSms77",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSmsBiuras",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSmsFactor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSmsapi",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSmsc",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSmsmode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportSpotHit",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportTelegram",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportTelnyx",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportTermii",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportTrello",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportTurboSms",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportTwilio",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportTwitter",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportVonage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportWebhook",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportYunpian",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportZendesk",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportZulip",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The AlertService resource is a collection of services that can be used to dispatch an alert. Each alert service uses a distinct message transport."
        }
      ]
    },
    {
      "url": "/api/credits-consumption",
      "method": "apiCreditsConsumptionGetCollection",
      "httpMethod": "get",
      "tag": "CreditsConsumption",
      "typeScriptTag": "creditsConsumption",
      "description": "Retrieves the collection of CreditsConsumption resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/credits-consumption/{id}",
      "method": "apiCreditsConsumptionIdGet",
      "httpMethod": "get",
      "tag": "CreditsConsumption",
      "typeScriptTag": "creditsConsumption",
      "description": "Retrieves a CreditsConsumption resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "CreditsConsumption identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The CreditsConsumption resource is a chronological record of all the credits that have been consumed, including the reason for the consumption."
        }
      ]
    },
    {
      "url": "/api/http-method-code",
      "method": "apiHttpMethodCodeGetCollection",
      "httpMethod": "get",
      "tag": "HttpMethodCode",
      "typeScriptTag": "httpMethodCode",
      "description": "Retrieves the collection of HttpMethodCode resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/http-method-code/{id}",
      "method": "apiHttpMethodCodeIdGet",
      "httpMethod": "get",
      "tag": "HttpMethodCode",
      "typeScriptTag": "httpMethodCode",
      "description": "Retrieves a HttpMethodCode resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "HttpMethodCode identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The HttpMethodCode resource is a set of codes that describes the possible methods that can used used when making an HTTP request."
        }
      ]
    },
    {
      "url": "/api/media-object",
      "method": "apiMediaObjectGetCollection",
      "httpMethod": "get",
      "tag": "MediaObject",
      "typeScriptTag": "mediaObject",
      "description": "Retrieves the collection of MediaObject resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/media-object",
      "method": "apiMediaObjectPost",
      "httpMethod": "post",
      "tag": "MediaObject",
      "typeScriptTag": "mediaObject",
      "description": "Creates a MediaObject resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "file",
          "schema": "string",
          "description": ""
        },
        {
          "name": "keywords",
          "schema": "string",
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The MediaObject resource is a collection of media objects that can be attached to alerts that are dispatched via an email transport."
        }
      ]
    },
    {
      "url": "/api/media-object/{id}",
      "method": "apiMediaObjectIdDelete",
      "httpMethod": "delete",
      "tag": "MediaObject",
      "typeScriptTag": "mediaObject",
      "description": "Removes the MediaObject resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "MediaObject identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/media-object/{id}",
      "method": "apiMediaObjectIdGet",
      "httpMethod": "get",
      "tag": "MediaObject",
      "typeScriptTag": "mediaObject",
      "description": "Retrieves a MediaObject resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "MediaObject identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The MediaObject resource is a collection of media objects that can be attached to alerts that are dispatched via an email transport."
        }
      ]
    },
    {
      "url": "/api/monitor",
      "method": "apiMonitorGetCollection",
      "httpMethod": "get",
      "tag": "Monitor",
      "typeScriptTag": "monitor",
      "description": "Retrieves the collection of Monitor resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/monitor",
      "method": "apiMonitorPost",
      "httpMethod": "post",
      "tag": "Monitor",
      "typeScriptTag": "monitor",
      "description": "Creates a Monitor resource.",
      "parameters": [
        {
          "name": "alertPayloadExtended",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertPayloadShort",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertServices",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "allowUnauthenticatedPings",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "contentCheckMustNotExist",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "contentCheckText",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "contentCheckUrl",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "contentCheckXpathFilter",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "graceSeconds",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "intervalDays",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "intervalHours",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "intervalMinutes",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "intervalMonths",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "intervalSeconds",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "intervalYears",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "isMonitorPaused",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "monitorName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "monitorNotes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "monitorTypeCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "publicDescription",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "startMonitorAt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "timezoneCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "webResponseSecondsLimit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "webResponseUrl",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The Monitor resource is a collection of services that monitor the presence and/or absence of pings, and follow sets of rules to dispatch or not dispatch alerts."
        }
      ]
    },
    {
      "url": "/api/monitor-status-code",
      "method": "apiMonitorStatusCodeGetCollection",
      "httpMethod": "get",
      "tag": "MonitorStatusCode",
      "typeScriptTag": "monitorStatusCode",
      "description": "Retrieves the collection of MonitorStatusCode resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/monitor-status-code/{id}",
      "method": "apiMonitorStatusCodeIdGet",
      "httpMethod": "get",
      "tag": "MonitorStatusCode",
      "typeScriptTag": "monitorStatusCode",
      "description": "Retrieves a MonitorStatusCode resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "MonitorStatusCode identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The MonitorStatusCode resource is a set of codes that describes the possible statuses of a monitor."
        }
      ]
    },
    {
      "url": "/api/monitor-status-log",
      "method": "apiMonitorStatusLogGetCollection",
      "httpMethod": "get",
      "tag": "MonitorStatusLog",
      "typeScriptTag": "monitorStatusLog",
      "description": "Retrieves the collection of MonitorStatusLog resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "monitor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "monitor[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "monitorStatusCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "monitorStatusCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/monitor-status-log/{id}",
      "method": "apiMonitorStatusLogIdGet",
      "httpMethod": "get",
      "tag": "MonitorStatusLog",
      "typeScriptTag": "monitorStatusLog",
      "description": "Retrieves a MonitorStatusLog resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "MonitorStatusLog identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The MonitorStatusLog resource is a chronological record of all the changes in status that monitors have undergone."
        }
      ]
    },
    {
      "url": "/api/monitor-type-code",
      "method": "apiMonitorTypeCodeGetCollection",
      "httpMethod": "get",
      "tag": "MonitorTypeCode",
      "typeScriptTag": "monitorTypeCode",
      "description": "Retrieves the collection of MonitorTypeCode resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/monitor-type-code/{id}",
      "method": "apiMonitorTypeCodeIdGet",
      "httpMethod": "get",
      "tag": "MonitorTypeCode",
      "typeScriptTag": "monitorTypeCode",
      "description": "Retrieves a MonitorTypeCode resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "MonitorTypeCode identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The MonitorTypeCode resource is a set of codes that describes the different types of monitors that are available."
        }
      ]
    },
    {
      "url": "/api/monitor/{id}",
      "method": "apiMonitorIdDelete",
      "httpMethod": "delete",
      "tag": "Monitor",
      "typeScriptTag": "monitor",
      "description": "Removes the Monitor resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Monitor identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/monitor/{id}",
      "method": "apiMonitorIdGet",
      "httpMethod": "get",
      "tag": "Monitor",
      "typeScriptTag": "monitor",
      "description": "Retrieves a Monitor resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Monitor identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The Monitor resource is a collection of services that monitor the presence and/or absence of pings, and follow sets of rules to dispatch or not dispatch alerts."
        }
      ]
    },
    {
      "url": "/api/monitor/{id}",
      "method": "apiMonitorIdPatch",
      "httpMethod": "patch",
      "tag": "Monitor",
      "typeScriptTag": "monitor",
      "description": "Updates the Monitor resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Monitor identifier"
        },
        {
          "name": "alertPayloadExtended",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertPayloadShort",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertServices",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "allowUnauthenticatedPings",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "contentCheckMustNotExist",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "contentCheckText",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "contentCheckUrl",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "contentCheckXpathFilter",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "graceSeconds",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "intervalDays",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "intervalHours",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "intervalMinutes",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "intervalMonths",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "intervalSeconds",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "intervalYears",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "isMonitorPaused",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "monitorName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "monitorNotes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "publicDescription",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "startMonitorAt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "timezoneCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "webResponseSecondsLimit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "webResponseUrl",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The Monitor resource is a collection of services that monitor the presence and/or absence of pings, and follow sets of rules to dispatch or not dispatch alerts."
        }
      ]
    },
    {
      "url": "/api/monitor/{id}",
      "method": "apiMonitorIdPut",
      "httpMethod": "put",
      "tag": "Monitor",
      "typeScriptTag": "monitor",
      "description": "Replaces the Monitor resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Monitor identifier"
        },
        {
          "name": "alertPayloadExtended",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertPayloadShort",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertServices",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "allowUnauthenticatedPings",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "contentCheckMustNotExist",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "contentCheckText",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "contentCheckUrl",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "contentCheckXpathFilter",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "graceSeconds",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "intervalDays",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "intervalHours",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "intervalMinutes",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "intervalMonths",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "intervalSeconds",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "intervalYears",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "isMonitorPaused",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "monitorName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "monitorNotes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "publicDescription",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "startMonitorAt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "timezoneCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "webResponseSecondsLimit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "webResponseUrl",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The Monitor resource is a collection of services that monitor the presence and/or absence of pings, and follow sets of rules to dispatch or not dispatch alerts."
        }
      ]
    },
    {
      "url": "/api/partition",
      "method": "apiPartitionGetCollection",
      "httpMethod": "get",
      "tag": "Partition",
      "typeScriptTag": "partition",
      "description": "Retrieves the collection of Partition resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/partition",
      "method": "apiPartitionPost",
      "httpMethod": "post",
      "tag": "Partition",
      "typeScriptTag": "partition",
      "description": "Creates a Partition resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partitionName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partitionNotes",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The Partition resource is a collection of siloed monitor and alert environments in the user account."
        }
      ]
    },
    {
      "url": "/api/partition/{id}",
      "method": "apiPartitionIdDelete",
      "httpMethod": "delete",
      "tag": "Partition",
      "typeScriptTag": "partition",
      "description": "Removes the Partition resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Partition identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/partition/{id}",
      "method": "apiPartitionIdGet",
      "httpMethod": "get",
      "tag": "Partition",
      "typeScriptTag": "partition",
      "description": "Retrieves a Partition resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Partition identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The Partition resource is a collection of siloed monitor and alert environments in the user account."
        }
      ]
    },
    {
      "url": "/api/partition/{id}",
      "method": "apiPartitionIdPatch",
      "httpMethod": "patch",
      "tag": "Partition",
      "typeScriptTag": "partition",
      "description": "Updates the Partition resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Partition identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partitionName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partitionNotes",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The Partition resource is a collection of siloed monitor and alert environments in the user account."
        }
      ]
    },
    {
      "url": "/api/partition/{id}",
      "method": "apiPartitionIdPut",
      "httpMethod": "put",
      "tag": "Partition",
      "typeScriptTag": "partition",
      "description": "Replaces the Partition resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Partition identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partitionName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partitionNotes",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The Partition resource is a collection of siloed monitor and alert environments in the user account."
        }
      ]
    },
    {
      "url": "/api/ping",
      "method": "apiPingGetCollection",
      "httpMethod": "get",
      "tag": "Ping",
      "typeScriptTag": "ping",
      "description": "Retrieves the collection of Ping resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "monitor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "monitor[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/ping",
      "method": "apiPingPost",
      "httpMethod": "post",
      "tag": "Ping",
      "typeScriptTag": "ping",
      "description": "Creates a Ping resource.",
      "parameters": [
        {
          "name": "expectNextPingAt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "expectNextPingAtEpoch",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "monitor",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pingCustomCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pingCustomPayload",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The Ping resource is a collection of pings that have been sent to monitors in the user account."
        }
      ]
    },
    {
      "url": "/api/ping-method-code",
      "method": "apiPingMethodCodeGetCollection",
      "httpMethod": "get",
      "tag": "PingMethodCode",
      "typeScriptTag": "pingMethodCode",
      "description": "Retrieves the collection of PingMethodCode resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/ping-method-code/{id}",
      "method": "apiPingMethodCodeIdGet",
      "httpMethod": "get",
      "tag": "PingMethodCode",
      "typeScriptTag": "pingMethodCode",
      "description": "Retrieves a PingMethodCode resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "PingMethodCode identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The PingMethodCode resource is a set of codes that describes the different methods of sending pings."
        }
      ]
    },
    {
      "url": "/api/ping/{id}",
      "method": "apiPingIdGet",
      "httpMethod": "get",
      "tag": "Ping",
      "typeScriptTag": "ping",
      "description": "Retrieves a Ping resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Ping identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The Ping resource is a collection of pings that have been sent to monitors in the user account."
        }
      ]
    },
    {
      "url": "/api/team-invitation",
      "method": "apiTeamInvitationGetCollection",
      "httpMethod": "get",
      "tag": "TeamInvitation",
      "typeScriptTag": "teamInvitation",
      "description": "Retrieves the collection of TeamInvitation resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "inviteeEmail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "inviteeEmail[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/team-invitation",
      "method": "apiTeamInvitationPost",
      "httpMethod": "post",
      "tag": "TeamInvitation",
      "typeScriptTag": "teamInvitation",
      "description": "Creates a TeamInvitation resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "inviteeEmail",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "inviteeFirstName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "inviteeLastName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "teamMemberRoleCode",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TeamInvitation resource is a collection of invitations that have been sent to people to become team members of partitions."
        }
      ]
    },
    {
      "url": "/api/team-invitation/{id}",
      "method": "apiTeamInvitationIdDelete",
      "httpMethod": "delete",
      "tag": "TeamInvitation",
      "typeScriptTag": "teamInvitation",
      "description": "Removes the TeamInvitation resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TeamInvitation identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/team-invitation/{id}",
      "method": "apiTeamInvitationIdGet",
      "httpMethod": "get",
      "tag": "TeamInvitation",
      "typeScriptTag": "teamInvitation",
      "description": "Retrieves a TeamInvitation resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TeamInvitation identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TeamInvitation resource is a collection of invitations that have been sent to people to become team members of partitions."
        }
      ]
    },
    {
      "url": "/api/team-member",
      "method": "apiTeamMemberGetCollection",
      "httpMethod": "get",
      "tag": "TeamMember",
      "typeScriptTag": "teamMember",
      "description": "Retrieves the collection of TeamMember resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "userAccount",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "userAccount[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/team-member-role-code",
      "method": "apiTeamMemberRoleCodeGetCollection",
      "httpMethod": "get",
      "tag": "TeamMemberRoleCode",
      "typeScriptTag": "teamMemberRoleCode",
      "description": "Retrieves the collection of TeamMemberRoleCode resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/team-member-role-code/{id}",
      "method": "apiTeamMemberRoleCodeIdGet",
      "httpMethod": "get",
      "tag": "TeamMemberRoleCode",
      "typeScriptTag": "teamMemberRoleCode",
      "description": "Retrieves a TeamMemberRoleCode resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TeamMemberRoleCode identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TeamMemberRoleCode resource is a set of codes that describes the different roles that can be assigned to team members of partitions."
        }
      ]
    },
    {
      "url": "/api/team-member/{id}",
      "method": "apiTeamMemberIdDelete",
      "httpMethod": "delete",
      "tag": "TeamMember",
      "typeScriptTag": "teamMember",
      "description": "Removes the TeamMember resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TeamMember identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/team-member/{id}",
      "method": "apiTeamMemberIdGet",
      "httpMethod": "get",
      "tag": "TeamMember",
      "typeScriptTag": "teamMember",
      "description": "Retrieves a TeamMember resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TeamMember identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TeamMember resource is a collection of active team members of the partitions in a user account."
        }
      ]
    },
    {
      "url": "/api/team-member/{id}",
      "method": "apiTeamMemberIdPatch",
      "httpMethod": "patch",
      "tag": "TeamMember",
      "typeScriptTag": "teamMember",
      "description": "Updates the TeamMember resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TeamMember identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "teamMemberRoleCode",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TeamMember resource is a collection of active team members of the partitions in a user account."
        }
      ]
    },
    {
      "url": "/api/team-member/{id}",
      "method": "apiTeamMemberIdPut",
      "httpMethod": "put",
      "tag": "TeamMember",
      "typeScriptTag": "teamMember",
      "description": "Replaces the TeamMember resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TeamMember identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "teamMemberRoleCode",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TeamMember resource is a collection of active team members of the partitions in a user account."
        }
      ]
    },
    {
      "url": "/api/timezone-code",
      "method": "apiTimezoneCodeGetCollection",
      "httpMethod": "get",
      "tag": "TimezoneCode",
      "typeScriptTag": "timezoneCode",
      "description": "Retrieves the collection of TimezoneCode resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/timezone-code/{id}",
      "method": "apiTimezoneCodeIdGet",
      "httpMethod": "get",
      "tag": "TimezoneCode",
      "typeScriptTag": "timezoneCode",
      "description": "Retrieves a TimezoneCode resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TimezoneCode identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TimezoneCode resource is a set of codes that describes the different international timezones."
        }
      ]
    },
    {
      "url": "/api/transport-alerta",
      "method": "apiTransportAlertaGetCollection",
      "httpMethod": "get",
      "tag": "TransportAlerta",
      "typeScriptTag": "transportAlerta",
      "description": "Retrieves the collection of TransportAlerta resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-alerta",
      "method": "apiTransportAlertaPost",
      "httpMethod": "post",
      "tag": "TransportAlerta",
      "typeScriptTag": "transportAlerta",
      "description": "Creates a TransportAlerta resource.",
      "parameters": [
        {
          "name": "alertaApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "alertaCorrelate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaEnvironment",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaEvent",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "alertaGroup",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaHost",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "alertaOrigin",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaResource",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "alertaService",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaSeverity",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaStatus",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaTags",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportAlerta resource is a collection of transports that carry dispatched alerts to the external Alerta service."
        }
      ]
    },
    {
      "url": "/api/transport-alerta/{id}",
      "method": "apiTransportAlertaIdDelete",
      "httpMethod": "delete",
      "tag": "TransportAlerta",
      "typeScriptTag": "transportAlerta",
      "description": "Removes the TransportAlerta resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportAlerta identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-alerta/{id}",
      "method": "apiTransportAlertaIdGet",
      "httpMethod": "get",
      "tag": "TransportAlerta",
      "typeScriptTag": "transportAlerta",
      "description": "Retrieves a TransportAlerta resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportAlerta identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportAlerta resource is a collection of transports that carry dispatched alerts to the external Alerta service."
        }
      ]
    },
    {
      "url": "/api/transport-alerta/{id}",
      "method": "apiTransportAlertaIdPatch",
      "httpMethod": "patch",
      "tag": "TransportAlerta",
      "typeScriptTag": "transportAlerta",
      "description": "Updates the TransportAlerta resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportAlerta identifier"
        },
        {
          "name": "alertaApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "alertaCorrelate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaEnvironment",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaEvent",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "alertaGroup",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaHost",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "alertaOrigin",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaResource",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "alertaService",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaSeverity",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaStatus",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaTags",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportAlerta resource is a collection of transports that carry dispatched alerts to the external Alerta service."
        }
      ]
    },
    {
      "url": "/api/transport-alerta/{id}",
      "method": "apiTransportAlertaIdPut",
      "httpMethod": "put",
      "tag": "TransportAlerta",
      "typeScriptTag": "transportAlerta",
      "description": "Replaces the TransportAlerta resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportAlerta identifier"
        },
        {
          "name": "alertaApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "alertaCorrelate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaEnvironment",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaEvent",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "alertaGroup",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaHost",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "alertaOrigin",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaResource",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "alertaService",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaSeverity",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaStatus",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaTags",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alertaType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportAlerta resource is a collection of transports that carry dispatched alerts to the external Alerta service."
        }
      ]
    },
    {
      "url": "/api/transport-all-my-sms",
      "method": "apiTransportAllMySmsGetCollection",
      "httpMethod": "get",
      "tag": "TransportAllMySms",
      "typeScriptTag": "transportAllMySms",
      "description": "Retrieves the collection of TransportAllMySms resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-all-my-sms",
      "method": "apiTransportAllMySmsPost",
      "httpMethod": "post",
      "tag": "TransportAllMySms",
      "typeScriptTag": "transportAllMySms",
      "description": "Creates a TransportAllMySms resource.",
      "parameters": [
        {
          "name": "allMySmsApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "allMySmsFrom",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "allMySmsLogin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportAllMySms resource is a collection of transports that carry dispatched alerts to the external Allmysms service."
        }
      ]
    },
    {
      "url": "/api/transport-all-my-sms/{id}",
      "method": "apiTransportAllMySmsIdDelete",
      "httpMethod": "delete",
      "tag": "TransportAllMySms",
      "typeScriptTag": "transportAllMySms",
      "description": "Removes the TransportAllMySms resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportAllMySms identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-all-my-sms/{id}",
      "method": "apiTransportAllMySmsIdGet",
      "httpMethod": "get",
      "tag": "TransportAllMySms",
      "typeScriptTag": "transportAllMySms",
      "description": "Retrieves a TransportAllMySms resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportAllMySms identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportAllMySms resource is a collection of transports that carry dispatched alerts to the external Allmysms service."
        }
      ]
    },
    {
      "url": "/api/transport-all-my-sms/{id}",
      "method": "apiTransportAllMySmsIdPatch",
      "httpMethod": "patch",
      "tag": "TransportAllMySms",
      "typeScriptTag": "transportAllMySms",
      "description": "Updates the TransportAllMySms resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportAllMySms identifier"
        },
        {
          "name": "allMySmsApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "allMySmsFrom",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "allMySmsLogin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportAllMySms resource is a collection of transports that carry dispatched alerts to the external Allmysms service."
        }
      ]
    },
    {
      "url": "/api/transport-all-my-sms/{id}",
      "method": "apiTransportAllMySmsIdPut",
      "httpMethod": "put",
      "tag": "TransportAllMySms",
      "typeScriptTag": "transportAllMySms",
      "description": "Replaces the TransportAllMySms resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportAllMySms identifier"
        },
        {
          "name": "allMySmsApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "allMySmsFrom",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "allMySmsLogin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportAllMySms resource is a collection of transports that carry dispatched alerts to the external Allmysms service."
        }
      ]
    },
    {
      "url": "/api/transport-amazon-sns",
      "method": "apiTransportAmazonSnsGetCollection",
      "httpMethod": "get",
      "tag": "TransportAmazonSns",
      "typeScriptTag": "transportAmazonSns",
      "description": "Retrieves the collection of TransportAmazonSns resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-amazon-sns",
      "method": "apiTransportAmazonSnsPost",
      "httpMethod": "post",
      "tag": "TransportAmazonSns",
      "typeScriptTag": "transportAmazonSns",
      "description": "Creates a TransportAmazonSns resource.",
      "parameters": [
        {
          "name": "amazonSnsAccessKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "amazonSnsRegion",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "amazonSnsSecretKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportAmazonSns resource is a collection of transports that carry dispatched alerts to the external Amazon SNS service."
        }
      ]
    },
    {
      "url": "/api/transport-amazon-sns/{id}",
      "method": "apiTransportAmazonSnsIdDelete",
      "httpMethod": "delete",
      "tag": "TransportAmazonSns",
      "typeScriptTag": "transportAmazonSns",
      "description": "Removes the TransportAmazonSns resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportAmazonSns identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-amazon-sns/{id}",
      "method": "apiTransportAmazonSnsIdGet",
      "httpMethod": "get",
      "tag": "TransportAmazonSns",
      "typeScriptTag": "transportAmazonSns",
      "description": "Retrieves a TransportAmazonSns resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportAmazonSns identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportAmazonSns resource is a collection of transports that carry dispatched alerts to the external Amazon SNS service."
        }
      ]
    },
    {
      "url": "/api/transport-amazon-sns/{id}",
      "method": "apiTransportAmazonSnsIdPatch",
      "httpMethod": "patch",
      "tag": "TransportAmazonSns",
      "typeScriptTag": "transportAmazonSns",
      "description": "Updates the TransportAmazonSns resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportAmazonSns identifier"
        },
        {
          "name": "amazonSnsAccessKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "amazonSnsRegion",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "amazonSnsSecretKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportAmazonSns resource is a collection of transports that carry dispatched alerts to the external Amazon SNS service."
        }
      ]
    },
    {
      "url": "/api/transport-amazon-sns/{id}",
      "method": "apiTransportAmazonSnsIdPut",
      "httpMethod": "put",
      "tag": "TransportAmazonSns",
      "typeScriptTag": "transportAmazonSns",
      "description": "Replaces the TransportAmazonSns resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportAmazonSns identifier"
        },
        {
          "name": "amazonSnsAccessKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "amazonSnsRegion",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "amazonSnsSecretKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportAmazonSns resource is a collection of transports that carry dispatched alerts to the external Amazon SNS service."
        }
      ]
    },
    {
      "url": "/api/transport-bandwidth",
      "method": "apiTransportBandwidthGetCollection",
      "httpMethod": "get",
      "tag": "TransportBandwidth",
      "typeScriptTag": "transportBandwidth",
      "description": "Retrieves the collection of TransportBandwidth resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-bandwidth",
      "method": "apiTransportBandwidthPost",
      "httpMethod": "post",
      "tag": "TransportBandwidth",
      "typeScriptTag": "transportBandwidth",
      "description": "Creates a TransportBandwidth resource.",
      "parameters": [
        {
          "name": "bandwidthAccountId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "bandwidthApplicationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "bandwidthFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "bandwidthPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "bandwidthUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportBandwidth resource is a collection of transports that carry dispatched alerts to the external Bandwidth service."
        }
      ]
    },
    {
      "url": "/api/transport-bandwidth/{id}",
      "method": "apiTransportBandwidthIdDelete",
      "httpMethod": "delete",
      "tag": "TransportBandwidth",
      "typeScriptTag": "transportBandwidth",
      "description": "Removes the TransportBandwidth resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportBandwidth identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-bandwidth/{id}",
      "method": "apiTransportBandwidthIdGet",
      "httpMethod": "get",
      "tag": "TransportBandwidth",
      "typeScriptTag": "transportBandwidth",
      "description": "Retrieves a TransportBandwidth resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportBandwidth identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportBandwidth resource is a collection of transports that carry dispatched alerts to the external Bandwidth service."
        }
      ]
    },
    {
      "url": "/api/transport-bandwidth/{id}",
      "method": "apiTransportBandwidthIdPatch",
      "httpMethod": "patch",
      "tag": "TransportBandwidth",
      "typeScriptTag": "transportBandwidth",
      "description": "Updates the TransportBandwidth resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportBandwidth identifier"
        },
        {
          "name": "bandwidthAccountId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "bandwidthApplicationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "bandwidthFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "bandwidthPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "bandwidthUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportBandwidth resource is a collection of transports that carry dispatched alerts to the external Bandwidth service."
        }
      ]
    },
    {
      "url": "/api/transport-bandwidth/{id}",
      "method": "apiTransportBandwidthIdPut",
      "httpMethod": "put",
      "tag": "TransportBandwidth",
      "typeScriptTag": "transportBandwidth",
      "description": "Replaces the TransportBandwidth resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportBandwidth identifier"
        },
        {
          "name": "bandwidthAccountId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "bandwidthApplicationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "bandwidthFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "bandwidthPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "bandwidthUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportBandwidth resource is a collection of transports that carry dispatched alerts to the external Bandwidth service."
        }
      ]
    },
    {
      "url": "/api/transport-chatwork",
      "method": "apiTransportChatworkGetCollection",
      "httpMethod": "get",
      "tag": "TransportChatwork",
      "typeScriptTag": "transportChatwork",
      "description": "Retrieves the collection of TransportChatwork resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-chatwork",
      "method": "apiTransportChatworkPost",
      "httpMethod": "post",
      "tag": "TransportChatwork",
      "typeScriptTag": "transportChatwork",
      "description": "Creates a TransportChatwork resource.",
      "parameters": [
        {
          "name": "chatworkApiToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "chatworkRoomId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportChatwork resource is a collection of transports that carry dispatched alerts to the external Chatwork service."
        }
      ]
    },
    {
      "url": "/api/transport-chatwork/{id}",
      "method": "apiTransportChatworkIdDelete",
      "httpMethod": "delete",
      "tag": "TransportChatwork",
      "typeScriptTag": "transportChatwork",
      "description": "Removes the TransportChatwork resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportChatwork identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-chatwork/{id}",
      "method": "apiTransportChatworkIdGet",
      "httpMethod": "get",
      "tag": "TransportChatwork",
      "typeScriptTag": "transportChatwork",
      "description": "Retrieves a TransportChatwork resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportChatwork identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportChatwork resource is a collection of transports that carry dispatched alerts to the external Chatwork service."
        }
      ]
    },
    {
      "url": "/api/transport-chatwork/{id}",
      "method": "apiTransportChatworkIdPatch",
      "httpMethod": "patch",
      "tag": "TransportChatwork",
      "typeScriptTag": "transportChatwork",
      "description": "Updates the TransportChatwork resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportChatwork identifier"
        },
        {
          "name": "chatworkApiToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "chatworkRoomId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportChatwork resource is a collection of transports that carry dispatched alerts to the external Chatwork service."
        }
      ]
    },
    {
      "url": "/api/transport-chatwork/{id}",
      "method": "apiTransportChatworkIdPut",
      "httpMethod": "put",
      "tag": "TransportChatwork",
      "typeScriptTag": "transportChatwork",
      "description": "Replaces the TransportChatwork resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportChatwork identifier"
        },
        {
          "name": "chatworkApiToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "chatworkRoomId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportChatwork resource is a collection of transports that carry dispatched alerts to the external Chatwork service."
        }
      ]
    },
    {
      "url": "/api/transport-click-send",
      "method": "apiTransportClickSendGetCollection",
      "httpMethod": "get",
      "tag": "TransportClickSend",
      "typeScriptTag": "transportClickSend",
      "description": "Retrieves the collection of TransportClickSend resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-click-send",
      "method": "apiTransportClickSendPost",
      "httpMethod": "post",
      "tag": "TransportClickSend",
      "typeScriptTag": "transportClickSend",
      "description": "Creates a TransportClickSend resource.",
      "parameters": [
        {
          "name": "clickSendApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clickSendApiUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clickSendFrom",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "clickSendFromEmail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "clickSendListId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "clickSendSource",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportClickSend resource is a collection of transports that carry dispatched alerts to the external ClickSend service."
        }
      ]
    },
    {
      "url": "/api/transport-click-send/{id}",
      "method": "apiTransportClickSendIdDelete",
      "httpMethod": "delete",
      "tag": "TransportClickSend",
      "typeScriptTag": "transportClickSend",
      "description": "Removes the TransportClickSend resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportClickSend identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-click-send/{id}",
      "method": "apiTransportClickSendIdGet",
      "httpMethod": "get",
      "tag": "TransportClickSend",
      "typeScriptTag": "transportClickSend",
      "description": "Retrieves a TransportClickSend resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportClickSend identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportClickSend resource is a collection of transports that carry dispatched alerts to the external ClickSend service."
        }
      ]
    },
    {
      "url": "/api/transport-click-send/{id}",
      "method": "apiTransportClickSendIdPatch",
      "httpMethod": "patch",
      "tag": "TransportClickSend",
      "typeScriptTag": "transportClickSend",
      "description": "Updates the TransportClickSend resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportClickSend identifier"
        },
        {
          "name": "clickSendApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clickSendApiUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clickSendFrom",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "clickSendFromEmail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "clickSendListId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "clickSendSource",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportClickSend resource is a collection of transports that carry dispatched alerts to the external ClickSend service."
        }
      ]
    },
    {
      "url": "/api/transport-click-send/{id}",
      "method": "apiTransportClickSendIdPut",
      "httpMethod": "put",
      "tag": "TransportClickSend",
      "typeScriptTag": "transportClickSend",
      "description": "Replaces the TransportClickSend resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportClickSend identifier"
        },
        {
          "name": "clickSendApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clickSendApiUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clickSendFrom",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "clickSendFromEmail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "clickSendListId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "clickSendSource",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportClickSend resource is a collection of transports that carry dispatched alerts to the external ClickSend service."
        }
      ]
    },
    {
      "url": "/api/transport-clickatell",
      "method": "apiTransportClickatellGetCollection",
      "httpMethod": "get",
      "tag": "TransportClickatell",
      "typeScriptTag": "transportClickatell",
      "description": "Retrieves the collection of TransportClickatell resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-clickatell",
      "method": "apiTransportClickatellPost",
      "httpMethod": "post",
      "tag": "TransportClickatell",
      "typeScriptTag": "transportClickatell",
      "description": "Creates a TransportClickatell resource.",
      "parameters": [
        {
          "name": "clickatellAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clickatellFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportClickatell resource is a collection of transports that carry dispatched alerts to the external Clickatell service."
        }
      ]
    },
    {
      "url": "/api/transport-clickatell/{id}",
      "method": "apiTransportClickatellIdDelete",
      "httpMethod": "delete",
      "tag": "TransportClickatell",
      "typeScriptTag": "transportClickatell",
      "description": "Removes the TransportClickatell resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportClickatell identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-clickatell/{id}",
      "method": "apiTransportClickatellIdGet",
      "httpMethod": "get",
      "tag": "TransportClickatell",
      "typeScriptTag": "transportClickatell",
      "description": "Retrieves a TransportClickatell resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportClickatell identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportClickatell resource is a collection of transports that carry dispatched alerts to the external Clickatell service."
        }
      ]
    },
    {
      "url": "/api/transport-clickatell/{id}",
      "method": "apiTransportClickatellIdPatch",
      "httpMethod": "patch",
      "tag": "TransportClickatell",
      "typeScriptTag": "transportClickatell",
      "description": "Updates the TransportClickatell resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportClickatell identifier"
        },
        {
          "name": "clickatellAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clickatellFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportClickatell resource is a collection of transports that carry dispatched alerts to the external Clickatell service."
        }
      ]
    },
    {
      "url": "/api/transport-clickatell/{id}",
      "method": "apiTransportClickatellIdPut",
      "httpMethod": "put",
      "tag": "TransportClickatell",
      "typeScriptTag": "transportClickatell",
      "description": "Replaces the TransportClickatell resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportClickatell identifier"
        },
        {
          "name": "clickatellAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clickatellFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportClickatell resource is a collection of transports that carry dispatched alerts to the external Clickatell service."
        }
      ]
    },
    {
      "url": "/api/transport-contact-everyone",
      "method": "apiTransportContactEveryoneGetCollection",
      "httpMethod": "get",
      "tag": "TransportContactEveryone",
      "typeScriptTag": "transportContactEveryone",
      "description": "Retrieves the collection of TransportContactEveryone resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-contact-everyone",
      "method": "apiTransportContactEveryonePost",
      "httpMethod": "post",
      "tag": "TransportContactEveryone",
      "typeScriptTag": "transportContactEveryone",
      "description": "Creates a TransportContactEveryone resource.",
      "parameters": [
        {
          "name": "contactEveryoneCategory",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "contactEveryoneDiffusionName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "contactEveryoneToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportContactEveryone resource is a collection of transports that carry dispatched alerts to the external Contact Everyone service."
        }
      ]
    },
    {
      "url": "/api/transport-contact-everyone/{id}",
      "method": "apiTransportContactEveryoneIdDelete",
      "httpMethod": "delete",
      "tag": "TransportContactEveryone",
      "typeScriptTag": "transportContactEveryone",
      "description": "Removes the TransportContactEveryone resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportContactEveryone identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-contact-everyone/{id}",
      "method": "apiTransportContactEveryoneIdGet",
      "httpMethod": "get",
      "tag": "TransportContactEveryone",
      "typeScriptTag": "transportContactEveryone",
      "description": "Retrieves a TransportContactEveryone resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportContactEveryone identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportContactEveryone resource is a collection of transports that carry dispatched alerts to the external Contact Everyone service."
        }
      ]
    },
    {
      "url": "/api/transport-contact-everyone/{id}",
      "method": "apiTransportContactEveryoneIdPatch",
      "httpMethod": "patch",
      "tag": "TransportContactEveryone",
      "typeScriptTag": "transportContactEveryone",
      "description": "Updates the TransportContactEveryone resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportContactEveryone identifier"
        },
        {
          "name": "contactEveryoneCategory",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "contactEveryoneDiffusionName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "contactEveryoneToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportContactEveryone resource is a collection of transports that carry dispatched alerts to the external Contact Everyone service."
        }
      ]
    },
    {
      "url": "/api/transport-contact-everyone/{id}",
      "method": "apiTransportContactEveryoneIdPut",
      "httpMethod": "put",
      "tag": "TransportContactEveryone",
      "typeScriptTag": "transportContactEveryone",
      "description": "Replaces the TransportContactEveryone resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportContactEveryone identifier"
        },
        {
          "name": "contactEveryoneCategory",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "contactEveryoneDiffusionName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "contactEveryoneToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportContactEveryone resource is a collection of transports that carry dispatched alerts to the external Contact Everyone service."
        }
      ]
    },
    {
      "url": "/api/transport-discord",
      "method": "apiTransportDiscordGetCollection",
      "httpMethod": "get",
      "tag": "TransportDiscord",
      "typeScriptTag": "transportDiscord",
      "description": "Retrieves the collection of TransportDiscord resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-discord",
      "method": "apiTransportDiscordPost",
      "httpMethod": "post",
      "tag": "TransportDiscord",
      "typeScriptTag": "transportDiscord",
      "description": "Creates a TransportDiscord resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "discordToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "discordWebhookId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportDiscord resource is a collection of transports that carry dispatched alerts to the external Discord service."
        }
      ]
    },
    {
      "url": "/api/transport-discord/{id}",
      "method": "apiTransportDiscordIdDelete",
      "httpMethod": "delete",
      "tag": "TransportDiscord",
      "typeScriptTag": "transportDiscord",
      "description": "Removes the TransportDiscord resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportDiscord identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-discord/{id}",
      "method": "apiTransportDiscordIdGet",
      "httpMethod": "get",
      "tag": "TransportDiscord",
      "typeScriptTag": "transportDiscord",
      "description": "Retrieves a TransportDiscord resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportDiscord identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportDiscord resource is a collection of transports that carry dispatched alerts to the external Discord service."
        }
      ]
    },
    {
      "url": "/api/transport-discord/{id}",
      "method": "apiTransportDiscordIdPatch",
      "httpMethod": "patch",
      "tag": "TransportDiscord",
      "typeScriptTag": "transportDiscord",
      "description": "Updates the TransportDiscord resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportDiscord identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "discordToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "discordWebhookId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportDiscord resource is a collection of transports that carry dispatched alerts to the external Discord service."
        }
      ]
    },
    {
      "url": "/api/transport-discord/{id}",
      "method": "apiTransportDiscordIdPut",
      "httpMethod": "put",
      "tag": "TransportDiscord",
      "typeScriptTag": "transportDiscord",
      "description": "Replaces the TransportDiscord resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportDiscord identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "discordToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "discordWebhookId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportDiscord resource is a collection of transports that carry dispatched alerts to the external Discord service."
        }
      ]
    },
    {
      "url": "/api/transport-email",
      "method": "apiTransportEmailGetCollection",
      "httpMethod": "get",
      "tag": "TransportEmail",
      "typeScriptTag": "transportEmail",
      "description": "Retrieves the collection of TransportEmail resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-email",
      "method": "apiTransportEmailPost",
      "httpMethod": "post",
      "tag": "TransportEmail",
      "typeScriptTag": "transportEmail",
      "description": "Creates a TransportEmail resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailFromAddress",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "emailFromName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "emailPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "emailPort",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "emailServer",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "emailUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportEmail resource is a collection of transports that carry dispatched alerts to external SMTP email services."
        }
      ]
    },
    {
      "url": "/api/transport-email/{id}",
      "method": "apiTransportEmailIdDelete",
      "httpMethod": "delete",
      "tag": "TransportEmail",
      "typeScriptTag": "transportEmail",
      "description": "Removes the TransportEmail resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportEmail identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-email/{id}",
      "method": "apiTransportEmailIdGet",
      "httpMethod": "get",
      "tag": "TransportEmail",
      "typeScriptTag": "transportEmail",
      "description": "Retrieves a TransportEmail resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportEmail identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportEmail resource is a collection of transports that carry dispatched alerts to external SMTP email services."
        }
      ]
    },
    {
      "url": "/api/transport-email/{id}",
      "method": "apiTransportEmailIdPatch",
      "httpMethod": "patch",
      "tag": "TransportEmail",
      "typeScriptTag": "transportEmail",
      "description": "Updates the TransportEmail resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportEmail identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailFromAddress",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "emailFromName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "emailPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "emailPort",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "emailServer",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "emailUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportEmail resource is a collection of transports that carry dispatched alerts to external SMTP email services."
        }
      ]
    },
    {
      "url": "/api/transport-email/{id}",
      "method": "apiTransportEmailIdPut",
      "httpMethod": "put",
      "tag": "TransportEmail",
      "typeScriptTag": "transportEmail",
      "description": "Replaces the TransportEmail resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportEmail identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailFromAddress",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "emailFromName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "emailPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "emailPort",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "emailServer",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "emailUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportEmail resource is a collection of transports that carry dispatched alerts to external SMTP email services."
        }
      ]
    },
    {
      "url": "/api/transport-engagespot",
      "method": "apiTransportEngagespotGetCollection",
      "httpMethod": "get",
      "tag": "TransportEngagespot",
      "typeScriptTag": "transportEngagespot",
      "description": "Retrieves the collection of TransportEngagespot resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-engagespot",
      "method": "apiTransportEngagespotPost",
      "httpMethod": "post",
      "tag": "TransportEngagespot",
      "typeScriptTag": "transportEngagespot",
      "description": "Creates a TransportEngagespot resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "engagespotApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "engagespotCampaignName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportEngagespot resource is a collection of transports that carry dispatched alerts to the external EngageSpot service."
        }
      ]
    },
    {
      "url": "/api/transport-engagespot/{id}",
      "method": "apiTransportEngagespotIdDelete",
      "httpMethod": "delete",
      "tag": "TransportEngagespot",
      "typeScriptTag": "transportEngagespot",
      "description": "Removes the TransportEngagespot resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportEngagespot identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-engagespot/{id}",
      "method": "apiTransportEngagespotIdGet",
      "httpMethod": "get",
      "tag": "TransportEngagespot",
      "typeScriptTag": "transportEngagespot",
      "description": "Retrieves a TransportEngagespot resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportEngagespot identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportEngagespot resource is a collection of transports that carry dispatched alerts to the external EngageSpot service."
        }
      ]
    },
    {
      "url": "/api/transport-engagespot/{id}",
      "method": "apiTransportEngagespotIdPatch",
      "httpMethod": "patch",
      "tag": "TransportEngagespot",
      "typeScriptTag": "transportEngagespot",
      "description": "Updates the TransportEngagespot resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportEngagespot identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "engagespotApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "engagespotCampaignName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportEngagespot resource is a collection of transports that carry dispatched alerts to the external EngageSpot service."
        }
      ]
    },
    {
      "url": "/api/transport-engagespot/{id}",
      "method": "apiTransportEngagespotIdPut",
      "httpMethod": "put",
      "tag": "TransportEngagespot",
      "typeScriptTag": "transportEngagespot",
      "description": "Replaces the TransportEngagespot resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportEngagespot identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "engagespotApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "engagespotCampaignName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportEngagespot resource is a collection of transports that carry dispatched alerts to the external EngageSpot service."
        }
      ]
    },
    {
      "url": "/api/transport-esendex",
      "method": "apiTransportEsendexGetCollection",
      "httpMethod": "get",
      "tag": "TransportEsendex",
      "typeScriptTag": "transportEsendex",
      "description": "Retrieves the collection of TransportEsendex resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-esendex",
      "method": "apiTransportEsendexPost",
      "httpMethod": "post",
      "tag": "TransportEsendex",
      "typeScriptTag": "transportEsendex",
      "description": "Creates a TransportEsendex resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "esendexAccountReference",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "esendexFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "esendexPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "esendexUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportEsendex resource is a collection of transports that carry dispatched alerts to the external Esendex service."
        }
      ]
    },
    {
      "url": "/api/transport-esendex/{id}",
      "method": "apiTransportEsendexIdDelete",
      "httpMethod": "delete",
      "tag": "TransportEsendex",
      "typeScriptTag": "transportEsendex",
      "description": "Removes the TransportEsendex resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportEsendex identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-esendex/{id}",
      "method": "apiTransportEsendexIdGet",
      "httpMethod": "get",
      "tag": "TransportEsendex",
      "typeScriptTag": "transportEsendex",
      "description": "Retrieves a TransportEsendex resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportEsendex identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportEsendex resource is a collection of transports that carry dispatched alerts to the external Esendex service."
        }
      ]
    },
    {
      "url": "/api/transport-esendex/{id}",
      "method": "apiTransportEsendexIdPatch",
      "httpMethod": "patch",
      "tag": "TransportEsendex",
      "typeScriptTag": "transportEsendex",
      "description": "Updates the TransportEsendex resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportEsendex identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "esendexAccountReference",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "esendexFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "esendexPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "esendexUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportEsendex resource is a collection of transports that carry dispatched alerts to the external Esendex service."
        }
      ]
    },
    {
      "url": "/api/transport-esendex/{id}",
      "method": "apiTransportEsendexIdPut",
      "httpMethod": "put",
      "tag": "TransportEsendex",
      "typeScriptTag": "transportEsendex",
      "description": "Replaces the TransportEsendex resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportEsendex identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "esendexAccountReference",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "esendexFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "esendexPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "esendexUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportEsendex resource is a collection of transports that carry dispatched alerts to the external Esendex service."
        }
      ]
    },
    {
      "url": "/api/transport-expo",
      "method": "apiTransportExpoGetCollection",
      "httpMethod": "get",
      "tag": "TransportExpo",
      "typeScriptTag": "transportExpo",
      "description": "Retrieves the collection of TransportExpo resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-expo",
      "method": "apiTransportExpoPost",
      "httpMethod": "post",
      "tag": "TransportExpo",
      "typeScriptTag": "transportExpo",
      "description": "Creates a TransportExpo resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "expoToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportExpo resource is a collection of transports that carry dispatched alerts to the external Expo service."
        }
      ]
    },
    {
      "url": "/api/transport-expo/{id}",
      "method": "apiTransportExpoIdDelete",
      "httpMethod": "delete",
      "tag": "TransportExpo",
      "typeScriptTag": "transportExpo",
      "description": "Removes the TransportExpo resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportExpo identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-expo/{id}",
      "method": "apiTransportExpoIdGet",
      "httpMethod": "get",
      "tag": "TransportExpo",
      "typeScriptTag": "transportExpo",
      "description": "Retrieves a TransportExpo resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportExpo identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportExpo resource is a collection of transports that carry dispatched alerts to the external Expo service."
        }
      ]
    },
    {
      "url": "/api/transport-expo/{id}",
      "method": "apiTransportExpoIdPatch",
      "httpMethod": "patch",
      "tag": "TransportExpo",
      "typeScriptTag": "transportExpo",
      "description": "Updates the TransportExpo resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportExpo identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "expoToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportExpo resource is a collection of transports that carry dispatched alerts to the external Expo service."
        }
      ]
    },
    {
      "url": "/api/transport-expo/{id}",
      "method": "apiTransportExpoIdPut",
      "httpMethod": "put",
      "tag": "TransportExpo",
      "typeScriptTag": "transportExpo",
      "description": "Replaces the TransportExpo resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportExpo identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "expoToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportExpo resource is a collection of transports that carry dispatched alerts to the external Expo service."
        }
      ]
    },
    {
      "url": "/api/transport-firebase",
      "method": "apiTransportFirebaseGetCollection",
      "httpMethod": "get",
      "tag": "TransportFirebase",
      "typeScriptTag": "transportFirebase",
      "description": "Retrieves the collection of TransportFirebase resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-firebase",
      "method": "apiTransportFirebasePost",
      "httpMethod": "post",
      "tag": "TransportFirebase",
      "typeScriptTag": "transportFirebase",
      "description": "Creates a TransportFirebase resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "firebasePassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firebaseUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportFirebase resource is a collection of transports that carry dispatched alerts to the external Firebase service."
        }
      ]
    },
    {
      "url": "/api/transport-firebase/{id}",
      "method": "apiTransportFirebaseIdDelete",
      "httpMethod": "delete",
      "tag": "TransportFirebase",
      "typeScriptTag": "transportFirebase",
      "description": "Removes the TransportFirebase resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportFirebase identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-firebase/{id}",
      "method": "apiTransportFirebaseIdGet",
      "httpMethod": "get",
      "tag": "TransportFirebase",
      "typeScriptTag": "transportFirebase",
      "description": "Retrieves a TransportFirebase resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportFirebase identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportFirebase resource is a collection of transports that carry dispatched alerts to the external Firebase service."
        }
      ]
    },
    {
      "url": "/api/transport-firebase/{id}",
      "method": "apiTransportFirebaseIdPatch",
      "httpMethod": "patch",
      "tag": "TransportFirebase",
      "typeScriptTag": "transportFirebase",
      "description": "Updates the TransportFirebase resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportFirebase identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "firebasePassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firebaseUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportFirebase resource is a collection of transports that carry dispatched alerts to the external Firebase service."
        }
      ]
    },
    {
      "url": "/api/transport-firebase/{id}",
      "method": "apiTransportFirebaseIdPut",
      "httpMethod": "put",
      "tag": "TransportFirebase",
      "typeScriptTag": "transportFirebase",
      "description": "Replaces the TransportFirebase resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportFirebase identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "firebasePassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firebaseUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportFirebase resource is a collection of transports that carry dispatched alerts to the external Firebase service."
        }
      ]
    },
    {
      "url": "/api/transport-forty-six-elks",
      "method": "apiTransportFortySixElksGetCollection",
      "httpMethod": "get",
      "tag": "TransportFortySixElks",
      "typeScriptTag": "transportFortySixElks",
      "description": "Retrieves the collection of TransportFortySixElks resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-forty-six-elks",
      "method": "apiTransportFortySixElksPost",
      "httpMethod": "post",
      "tag": "TransportFortySixElks",
      "typeScriptTag": "transportFortySixElks",
      "description": "Creates a TransportFortySixElks resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "fortySixElksApiPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "fortySixElksApiUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "fortySixElksFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportFortySixElks resource is a collection of transports that carry dispatched alerts to the external 46elks service."
        }
      ]
    },
    {
      "url": "/api/transport-forty-six-elks/{id}",
      "method": "apiTransportFortySixElksIdDelete",
      "httpMethod": "delete",
      "tag": "TransportFortySixElks",
      "typeScriptTag": "transportFortySixElks",
      "description": "Removes the TransportFortySixElks resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportFortySixElks identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-forty-six-elks/{id}",
      "method": "apiTransportFortySixElksIdGet",
      "httpMethod": "get",
      "tag": "TransportFortySixElks",
      "typeScriptTag": "transportFortySixElks",
      "description": "Retrieves a TransportFortySixElks resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportFortySixElks identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportFortySixElks resource is a collection of transports that carry dispatched alerts to the external 46elks service."
        }
      ]
    },
    {
      "url": "/api/transport-forty-six-elks/{id}",
      "method": "apiTransportFortySixElksIdPatch",
      "httpMethod": "patch",
      "tag": "TransportFortySixElks",
      "typeScriptTag": "transportFortySixElks",
      "description": "Updates the TransportFortySixElks resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportFortySixElks identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "fortySixElksApiPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "fortySixElksApiUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "fortySixElksFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportFortySixElks resource is a collection of transports that carry dispatched alerts to the external 46elks service."
        }
      ]
    },
    {
      "url": "/api/transport-forty-six-elks/{id}",
      "method": "apiTransportFortySixElksIdPut",
      "httpMethod": "put",
      "tag": "TransportFortySixElks",
      "typeScriptTag": "transportFortySixElks",
      "description": "Replaces the TransportFortySixElks resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportFortySixElks identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "fortySixElksApiPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "fortySixElksApiUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "fortySixElksFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportFortySixElks resource is a collection of transports that carry dispatched alerts to the external 46elks service."
        }
      ]
    },
    {
      "url": "/api/transport-free-mobile",
      "method": "apiTransportFreeMobileGetCollection",
      "httpMethod": "get",
      "tag": "TransportFreeMobile",
      "typeScriptTag": "transportFreeMobile",
      "description": "Retrieves the collection of TransportFreeMobile resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-free-mobile",
      "method": "apiTransportFreeMobilePost",
      "httpMethod": "post",
      "tag": "TransportFreeMobile",
      "typeScriptTag": "transportFreeMobile",
      "description": "Creates a TransportFreeMobile resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "freeMobileApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "freeMobileLogin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "freeMobilePhone",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportFreeMobile resource is a collection of transports that carry dispatched alerts to the external Free Mobile service."
        }
      ]
    },
    {
      "url": "/api/transport-free-mobile/{id}",
      "method": "apiTransportFreeMobileIdDelete",
      "httpMethod": "delete",
      "tag": "TransportFreeMobile",
      "typeScriptTag": "transportFreeMobile",
      "description": "Removes the TransportFreeMobile resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportFreeMobile identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-free-mobile/{id}",
      "method": "apiTransportFreeMobileIdGet",
      "httpMethod": "get",
      "tag": "TransportFreeMobile",
      "typeScriptTag": "transportFreeMobile",
      "description": "Retrieves a TransportFreeMobile resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportFreeMobile identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportFreeMobile resource is a collection of transports that carry dispatched alerts to the external Free Mobile service."
        }
      ]
    },
    {
      "url": "/api/transport-free-mobile/{id}",
      "method": "apiTransportFreeMobileIdPatch",
      "httpMethod": "patch",
      "tag": "TransportFreeMobile",
      "typeScriptTag": "transportFreeMobile",
      "description": "Updates the TransportFreeMobile resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportFreeMobile identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "freeMobileApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "freeMobileLogin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "freeMobilePhone",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportFreeMobile resource is a collection of transports that carry dispatched alerts to the external Free Mobile service."
        }
      ]
    },
    {
      "url": "/api/transport-free-mobile/{id}",
      "method": "apiTransportFreeMobileIdPut",
      "httpMethod": "put",
      "tag": "TransportFreeMobile",
      "typeScriptTag": "transportFreeMobile",
      "description": "Replaces the TransportFreeMobile resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportFreeMobile identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "freeMobileApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "freeMobileLogin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "freeMobilePhone",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportFreeMobile resource is a collection of transports that carry dispatched alerts to the external Free Mobile service."
        }
      ]
    },
    {
      "url": "/api/transport-freshdesk",
      "method": "apiTransportFreshdeskGetCollection",
      "httpMethod": "get",
      "tag": "TransportFreshdesk",
      "typeScriptTag": "transportFreshdesk",
      "description": "Retrieves the collection of TransportFreshdesk resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-freshdesk",
      "method": "apiTransportFreshdeskPost",
      "httpMethod": "post",
      "tag": "TransportFreshdesk",
      "typeScriptTag": "transportFreshdesk",
      "description": "Creates a TransportFreshdesk resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "freshdeskApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "freshdeskEmail",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "freshdeskHost",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "freshdeskPriority",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "freshdeskType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportFreshdesk resource is a collection of transports that carry dispatched alerts to the external Freshdesk service."
        }
      ]
    },
    {
      "url": "/api/transport-freshdesk/{id}",
      "method": "apiTransportFreshdeskIdDelete",
      "httpMethod": "delete",
      "tag": "TransportFreshdesk",
      "typeScriptTag": "transportFreshdesk",
      "description": "Removes the TransportFreshdesk resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportFreshdesk identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-freshdesk/{id}",
      "method": "apiTransportFreshdeskIdGet",
      "httpMethod": "get",
      "tag": "TransportFreshdesk",
      "typeScriptTag": "transportFreshdesk",
      "description": "Retrieves a TransportFreshdesk resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportFreshdesk identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportFreshdesk resource is a collection of transports that carry dispatched alerts to the external Freshdesk service."
        }
      ]
    },
    {
      "url": "/api/transport-freshdesk/{id}",
      "method": "apiTransportFreshdeskIdPatch",
      "httpMethod": "patch",
      "tag": "TransportFreshdesk",
      "typeScriptTag": "transportFreshdesk",
      "description": "Updates the TransportFreshdesk resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportFreshdesk identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "freshdeskApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "freshdeskEmail",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "freshdeskHost",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "freshdeskPriority",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "freshdeskType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportFreshdesk resource is a collection of transports that carry dispatched alerts to the external Freshdesk service."
        }
      ]
    },
    {
      "url": "/api/transport-freshdesk/{id}",
      "method": "apiTransportFreshdeskIdPut",
      "httpMethod": "put",
      "tag": "TransportFreshdesk",
      "typeScriptTag": "transportFreshdesk",
      "description": "Replaces the TransportFreshdesk resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportFreshdesk identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "freshdeskApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "freshdeskEmail",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "freshdeskHost",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "freshdeskPriority",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "freshdeskType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportFreshdesk resource is a collection of transports that carry dispatched alerts to the external Freshdesk service."
        }
      ]
    },
    {
      "url": "/api/transport-gateway-api",
      "method": "apiTransportGatewayApiGetCollection",
      "httpMethod": "get",
      "tag": "TransportGatewayApi",
      "typeScriptTag": "transportGatewayApi",
      "description": "Retrieves the collection of TransportGatewayApi resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-gateway-api",
      "method": "apiTransportGatewayApiPost",
      "httpMethod": "post",
      "tag": "TransportGatewayApi",
      "typeScriptTag": "transportGatewayApi",
      "description": "Creates a TransportGatewayApi resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "gatewayApiFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "gatewayApiToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportGatewayApi resource is a collection of transports that carry dispatched alerts to the external GatewayAPI service."
        }
      ]
    },
    {
      "url": "/api/transport-gateway-api/{id}",
      "method": "apiTransportGatewayApiIdDelete",
      "httpMethod": "delete",
      "tag": "TransportGatewayApi",
      "typeScriptTag": "transportGatewayApi",
      "description": "Removes the TransportGatewayApi resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportGatewayApi identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-gateway-api/{id}",
      "method": "apiTransportGatewayApiIdGet",
      "httpMethod": "get",
      "tag": "TransportGatewayApi",
      "typeScriptTag": "transportGatewayApi",
      "description": "Retrieves a TransportGatewayApi resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportGatewayApi identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportGatewayApi resource is a collection of transports that carry dispatched alerts to the external GatewayAPI service."
        }
      ]
    },
    {
      "url": "/api/transport-gateway-api/{id}",
      "method": "apiTransportGatewayApiIdPatch",
      "httpMethod": "patch",
      "tag": "TransportGatewayApi",
      "typeScriptTag": "transportGatewayApi",
      "description": "Updates the TransportGatewayApi resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportGatewayApi identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "gatewayApiFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "gatewayApiToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportGatewayApi resource is a collection of transports that carry dispatched alerts to the external GatewayAPI service."
        }
      ]
    },
    {
      "url": "/api/transport-gateway-api/{id}",
      "method": "apiTransportGatewayApiIdPut",
      "httpMethod": "put",
      "tag": "TransportGatewayApi",
      "typeScriptTag": "transportGatewayApi",
      "description": "Replaces the TransportGatewayApi resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportGatewayApi identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "gatewayApiFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "gatewayApiToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportGatewayApi resource is a collection of transports that carry dispatched alerts to the external GatewayAPI service."
        }
      ]
    },
    {
      "url": "/api/transport-gitter",
      "method": "apiTransportGitterGetCollection",
      "httpMethod": "get",
      "tag": "TransportGitter",
      "typeScriptTag": "transportGitter",
      "description": "Retrieves the collection of TransportGitter resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-gitter",
      "method": "apiTransportGitterPost",
      "httpMethod": "post",
      "tag": "TransportGitter",
      "typeScriptTag": "transportGitter",
      "description": "Creates a TransportGitter resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "gitterRoomId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "gitterToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportGitter resource is a collection of transports that carry dispatched alerts to the external Gitter service."
        }
      ]
    },
    {
      "url": "/api/transport-gitter/{id}",
      "method": "apiTransportGitterIdDelete",
      "httpMethod": "delete",
      "tag": "TransportGitter",
      "typeScriptTag": "transportGitter",
      "description": "Removes the TransportGitter resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportGitter identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-gitter/{id}",
      "method": "apiTransportGitterIdGet",
      "httpMethod": "get",
      "tag": "TransportGitter",
      "typeScriptTag": "transportGitter",
      "description": "Retrieves a TransportGitter resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportGitter identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportGitter resource is a collection of transports that carry dispatched alerts to the external Gitter service."
        }
      ]
    },
    {
      "url": "/api/transport-gitter/{id}",
      "method": "apiTransportGitterIdPatch",
      "httpMethod": "patch",
      "tag": "TransportGitter",
      "typeScriptTag": "transportGitter",
      "description": "Updates the TransportGitter resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportGitter identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "gitterRoomId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "gitterToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportGitter resource is a collection of transports that carry dispatched alerts to the external Gitter service."
        }
      ]
    },
    {
      "url": "/api/transport-gitter/{id}",
      "method": "apiTransportGitterIdPut",
      "httpMethod": "put",
      "tag": "TransportGitter",
      "typeScriptTag": "transportGitter",
      "description": "Replaces the TransportGitter resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportGitter identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "gitterRoomId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "gitterToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportGitter resource is a collection of transports that carry dispatched alerts to the external Gitter service."
        }
      ]
    },
    {
      "url": "/api/transport-google-chat",
      "method": "apiTransportGoogleChatGetCollection",
      "httpMethod": "get",
      "tag": "TransportGoogleChat",
      "typeScriptTag": "transportGoogleChat",
      "description": "Retrieves the collection of TransportGoogleChat resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-google-chat",
      "method": "apiTransportGoogleChatPost",
      "httpMethod": "post",
      "tag": "TransportGoogleChat",
      "typeScriptTag": "transportGoogleChat",
      "description": "Creates a TransportGoogleChat resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "googleChatAccessKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "googleChatAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "googleChatSpace",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "googleChatThreadKey",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportGoogleChat resource is a collection of transports that carry dispatched alerts to the external Google Chat service."
        }
      ]
    },
    {
      "url": "/api/transport-google-chat/{id}",
      "method": "apiTransportGoogleChatIdDelete",
      "httpMethod": "delete",
      "tag": "TransportGoogleChat",
      "typeScriptTag": "transportGoogleChat",
      "description": "Removes the TransportGoogleChat resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportGoogleChat identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-google-chat/{id}",
      "method": "apiTransportGoogleChatIdGet",
      "httpMethod": "get",
      "tag": "TransportGoogleChat",
      "typeScriptTag": "transportGoogleChat",
      "description": "Retrieves a TransportGoogleChat resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportGoogleChat identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportGoogleChat resource is a collection of transports that carry dispatched alerts to the external Google Chat service."
        }
      ]
    },
    {
      "url": "/api/transport-google-chat/{id}",
      "method": "apiTransportGoogleChatIdPatch",
      "httpMethod": "patch",
      "tag": "TransportGoogleChat",
      "typeScriptTag": "transportGoogleChat",
      "description": "Updates the TransportGoogleChat resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportGoogleChat identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "googleChatAccessKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "googleChatAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "googleChatSpace",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "googleChatThreadKey",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportGoogleChat resource is a collection of transports that carry dispatched alerts to the external Google Chat service."
        }
      ]
    },
    {
      "url": "/api/transport-google-chat/{id}",
      "method": "apiTransportGoogleChatIdPut",
      "httpMethod": "put",
      "tag": "TransportGoogleChat",
      "typeScriptTag": "transportGoogleChat",
      "description": "Replaces the TransportGoogleChat resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportGoogleChat identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "googleChatAccessKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "googleChatAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "googleChatSpace",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "googleChatThreadKey",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportGoogleChat resource is a collection of transports that carry dispatched alerts to the external Google Chat service."
        }
      ]
    },
    {
      "url": "/api/transport-gotify",
      "method": "apiTransportGotifyGetCollection",
      "httpMethod": "get",
      "tag": "TransportGotify",
      "typeScriptTag": "transportGotify",
      "description": "Retrieves the collection of TransportGotify resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-gotify",
      "method": "apiTransportGotifyPost",
      "httpMethod": "post",
      "tag": "TransportGotify",
      "typeScriptTag": "transportGotify",
      "description": "Creates a TransportGotify resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "gotifyApiUrl",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "gotifyAppToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "gotifyPriority",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportGotify resource is a collection of transports that carry dispatched alerts to the external Gotify service."
        }
      ]
    },
    {
      "url": "/api/transport-gotify/{id}",
      "method": "apiTransportGotifyIdDelete",
      "httpMethod": "delete",
      "tag": "TransportGotify",
      "typeScriptTag": "transportGotify",
      "description": "Removes the TransportGotify resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportGotify identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-gotify/{id}",
      "method": "apiTransportGotifyIdGet",
      "httpMethod": "get",
      "tag": "TransportGotify",
      "typeScriptTag": "transportGotify",
      "description": "Retrieves a TransportGotify resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportGotify identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportGotify resource is a collection of transports that carry dispatched alerts to the external Gotify service."
        }
      ]
    },
    {
      "url": "/api/transport-gotify/{id}",
      "method": "apiTransportGotifyIdPatch",
      "httpMethod": "patch",
      "tag": "TransportGotify",
      "typeScriptTag": "transportGotify",
      "description": "Updates the TransportGotify resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportGotify identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "gotifyApiUrl",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "gotifyAppToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "gotifyPriority",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportGotify resource is a collection of transports that carry dispatched alerts to the external Gotify service."
        }
      ]
    },
    {
      "url": "/api/transport-gotify/{id}",
      "method": "apiTransportGotifyIdPut",
      "httpMethod": "put",
      "tag": "TransportGotify",
      "typeScriptTag": "transportGotify",
      "description": "Replaces the TransportGotify resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportGotify identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "gotifyApiUrl",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "gotifyAppToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "gotifyPriority",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportGotify resource is a collection of transports that carry dispatched alerts to the external Gotify service."
        }
      ]
    },
    {
      "url": "/api/transport-help-scout",
      "method": "apiTransportHelpScoutGetCollection",
      "httpMethod": "get",
      "tag": "TransportHelpScout",
      "typeScriptTag": "transportHelpScout",
      "description": "Retrieves the collection of TransportHelpScout resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-help-scout",
      "method": "apiTransportHelpScoutPost",
      "httpMethod": "post",
      "tag": "TransportHelpScout",
      "typeScriptTag": "transportHelpScout",
      "description": "Creates a TransportHelpScout resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "helpScoutCustomerEmail",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "helpScoutMailboxId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "helpScoutOauthToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportHelpScout resource is a collection of transports that carry dispatched alerts to the external HelpScout service."
        }
      ]
    },
    {
      "url": "/api/transport-help-scout/{id}",
      "method": "apiTransportHelpScoutIdDelete",
      "httpMethod": "delete",
      "tag": "TransportHelpScout",
      "typeScriptTag": "transportHelpScout",
      "description": "Removes the TransportHelpScout resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportHelpScout identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-help-scout/{id}",
      "method": "apiTransportHelpScoutIdGet",
      "httpMethod": "get",
      "tag": "TransportHelpScout",
      "typeScriptTag": "transportHelpScout",
      "description": "Retrieves a TransportHelpScout resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportHelpScout identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportHelpScout resource is a collection of transports that carry dispatched alerts to the external HelpScout service."
        }
      ]
    },
    {
      "url": "/api/transport-help-scout/{id}",
      "method": "apiTransportHelpScoutIdPatch",
      "httpMethod": "patch",
      "tag": "TransportHelpScout",
      "typeScriptTag": "transportHelpScout",
      "description": "Updates the TransportHelpScout resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportHelpScout identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "helpScoutCustomerEmail",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "helpScoutMailboxId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "helpScoutOauthToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportHelpScout resource is a collection of transports that carry dispatched alerts to the external HelpScout service."
        }
      ]
    },
    {
      "url": "/api/transport-help-scout/{id}",
      "method": "apiTransportHelpScoutIdPut",
      "httpMethod": "put",
      "tag": "TransportHelpScout",
      "typeScriptTag": "transportHelpScout",
      "description": "Replaces the TransportHelpScout resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportHelpScout identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "helpScoutCustomerEmail",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "helpScoutMailboxId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "helpScoutOauthToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportHelpScout resource is a collection of transports that carry dispatched alerts to the external HelpScout service."
        }
      ]
    },
    {
      "url": "/api/transport-infobip",
      "method": "apiTransportInfobipGetCollection",
      "httpMethod": "get",
      "tag": "TransportInfobip",
      "typeScriptTag": "transportInfobip",
      "description": "Retrieves the collection of TransportInfobip resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-infobip",
      "method": "apiTransportInfobipPost",
      "httpMethod": "post",
      "tag": "TransportInfobip",
      "typeScriptTag": "transportInfobip",
      "description": "Creates a TransportInfobip resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "infobipAuthToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "infobipFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "infobipHost",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportInfobip resource is a collection of transports that carry dispatched alerts to the external Infobip service."
        }
      ]
    },
    {
      "url": "/api/transport-infobip/{id}",
      "method": "apiTransportInfobipIdDelete",
      "httpMethod": "delete",
      "tag": "TransportInfobip",
      "typeScriptTag": "transportInfobip",
      "description": "Removes the TransportInfobip resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportInfobip identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-infobip/{id}",
      "method": "apiTransportInfobipIdGet",
      "httpMethod": "get",
      "tag": "TransportInfobip",
      "typeScriptTag": "transportInfobip",
      "description": "Retrieves a TransportInfobip resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportInfobip identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportInfobip resource is a collection of transports that carry dispatched alerts to the external Infobip service."
        }
      ]
    },
    {
      "url": "/api/transport-infobip/{id}",
      "method": "apiTransportInfobipIdPatch",
      "httpMethod": "patch",
      "tag": "TransportInfobip",
      "typeScriptTag": "transportInfobip",
      "description": "Updates the TransportInfobip resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportInfobip identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "infobipAuthToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "infobipFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "infobipHost",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportInfobip resource is a collection of transports that carry dispatched alerts to the external Infobip service."
        }
      ]
    },
    {
      "url": "/api/transport-infobip/{id}",
      "method": "apiTransportInfobipIdPut",
      "httpMethod": "put",
      "tag": "TransportInfobip",
      "typeScriptTag": "transportInfobip",
      "description": "Replaces the TransportInfobip resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportInfobip identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "infobipAuthToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "infobipFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "infobipHost",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportInfobip resource is a collection of transports that carry dispatched alerts to the external Infobip service."
        }
      ]
    },
    {
      "url": "/api/transport-iqsms",
      "method": "apiTransportIqsmsGetCollection",
      "httpMethod": "get",
      "tag": "TransportIqsms",
      "typeScriptTag": "transportIqsms",
      "description": "Retrieves the collection of TransportIqsms resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-iqsms",
      "method": "apiTransportIqsmsPost",
      "httpMethod": "post",
      "tag": "TransportIqsms",
      "typeScriptTag": "transportIqsms",
      "description": "Creates a TransportIqsms resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "iqsmsFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "iqsmsLogin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "iqsmsPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportIqsms resource is a collection of transports that carry dispatched alerts to the external Iqsms service."
        }
      ]
    },
    {
      "url": "/api/transport-iqsms/{id}",
      "method": "apiTransportIqsmsIdDelete",
      "httpMethod": "delete",
      "tag": "TransportIqsms",
      "typeScriptTag": "transportIqsms",
      "description": "Removes the TransportIqsms resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportIqsms identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-iqsms/{id}",
      "method": "apiTransportIqsmsIdGet",
      "httpMethod": "get",
      "tag": "TransportIqsms",
      "typeScriptTag": "transportIqsms",
      "description": "Retrieves a TransportIqsms resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportIqsms identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportIqsms resource is a collection of transports that carry dispatched alerts to the external Iqsms service."
        }
      ]
    },
    {
      "url": "/api/transport-iqsms/{id}",
      "method": "apiTransportIqsmsIdPatch",
      "httpMethod": "patch",
      "tag": "TransportIqsms",
      "typeScriptTag": "transportIqsms",
      "description": "Updates the TransportIqsms resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportIqsms identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "iqsmsFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "iqsmsLogin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "iqsmsPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportIqsms resource is a collection of transports that carry dispatched alerts to the external Iqsms service."
        }
      ]
    },
    {
      "url": "/api/transport-iqsms/{id}",
      "method": "apiTransportIqsmsIdPut",
      "httpMethod": "put",
      "tag": "TransportIqsms",
      "typeScriptTag": "transportIqsms",
      "description": "Replaces the TransportIqsms resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportIqsms identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "iqsmsFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "iqsmsLogin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "iqsmsPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportIqsms resource is a collection of transports that carry dispatched alerts to the external Iqsms service."
        }
      ]
    },
    {
      "url": "/api/transport-kaz-info-teh",
      "method": "apiTransportKazInfoTehGetCollection",
      "httpMethod": "get",
      "tag": "TransportKazInfoTeh",
      "typeScriptTag": "transportKazInfoTeh",
      "description": "Retrieves the collection of TransportKazInfoTeh resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-kaz-info-teh",
      "method": "apiTransportKazInfoTehPost",
      "httpMethod": "post",
      "tag": "TransportKazInfoTeh",
      "typeScriptTag": "transportKazInfoTeh",
      "description": "Creates a TransportKazInfoTeh resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "kazInfoTehFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "kazInfoTehPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "kazInfoTehUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportKazInfoTeh resource is a collection of transports that carry dispatched alerts to the external KazInfoTeh service."
        }
      ]
    },
    {
      "url": "/api/transport-kaz-info-teh/{id}",
      "method": "apiTransportKazInfoTehIdDelete",
      "httpMethod": "delete",
      "tag": "TransportKazInfoTeh",
      "typeScriptTag": "transportKazInfoTeh",
      "description": "Removes the TransportKazInfoTeh resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportKazInfoTeh identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-kaz-info-teh/{id}",
      "method": "apiTransportKazInfoTehIdGet",
      "httpMethod": "get",
      "tag": "TransportKazInfoTeh",
      "typeScriptTag": "transportKazInfoTeh",
      "description": "Retrieves a TransportKazInfoTeh resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportKazInfoTeh identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportKazInfoTeh resource is a collection of transports that carry dispatched alerts to the external KazInfoTeh service."
        }
      ]
    },
    {
      "url": "/api/transport-kaz-info-teh/{id}",
      "method": "apiTransportKazInfoTehIdPatch",
      "httpMethod": "patch",
      "tag": "TransportKazInfoTeh",
      "typeScriptTag": "transportKazInfoTeh",
      "description": "Updates the TransportKazInfoTeh resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportKazInfoTeh identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "kazInfoTehFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "kazInfoTehPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "kazInfoTehUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportKazInfoTeh resource is a collection of transports that carry dispatched alerts to the external KazInfoTeh service."
        }
      ]
    },
    {
      "url": "/api/transport-kaz-info-teh/{id}",
      "method": "apiTransportKazInfoTehIdPut",
      "httpMethod": "put",
      "tag": "TransportKazInfoTeh",
      "typeScriptTag": "transportKazInfoTeh",
      "description": "Replaces the TransportKazInfoTeh resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportKazInfoTeh identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "kazInfoTehFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "kazInfoTehPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "kazInfoTehUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportKazInfoTeh resource is a collection of transports that carry dispatched alerts to the external KazInfoTeh service."
        }
      ]
    },
    {
      "url": "/api/transport-light-sms",
      "method": "apiTransportLightSmsGetCollection",
      "httpMethod": "get",
      "tag": "TransportLightSms",
      "typeScriptTag": "transportLightSms",
      "description": "Retrieves the collection of TransportLightSms resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-light-sms",
      "method": "apiTransportLightSmsPost",
      "httpMethod": "post",
      "tag": "TransportLightSms",
      "typeScriptTag": "transportLightSms",
      "description": "Creates a TransportLightSms resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lightSmsLogin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lightSmsPhone",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lightSmsToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportLightSms resource is a collection of transports that carry dispatched alerts to the external LightSMS service."
        }
      ]
    },
    {
      "url": "/api/transport-light-sms/{id}",
      "method": "apiTransportLightSmsIdDelete",
      "httpMethod": "delete",
      "tag": "TransportLightSms",
      "typeScriptTag": "transportLightSms",
      "description": "Removes the TransportLightSms resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportLightSms identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-light-sms/{id}",
      "method": "apiTransportLightSmsIdGet",
      "httpMethod": "get",
      "tag": "TransportLightSms",
      "typeScriptTag": "transportLightSms",
      "description": "Retrieves a TransportLightSms resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportLightSms identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportLightSms resource is a collection of transports that carry dispatched alerts to the external LightSMS service."
        }
      ]
    },
    {
      "url": "/api/transport-light-sms/{id}",
      "method": "apiTransportLightSmsIdPatch",
      "httpMethod": "patch",
      "tag": "TransportLightSms",
      "typeScriptTag": "transportLightSms",
      "description": "Updates the TransportLightSms resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportLightSms identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lightSmsLogin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lightSmsPhone",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lightSmsToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportLightSms resource is a collection of transports that carry dispatched alerts to the external LightSMS service."
        }
      ]
    },
    {
      "url": "/api/transport-light-sms/{id}",
      "method": "apiTransportLightSmsIdPut",
      "httpMethod": "put",
      "tag": "TransportLightSms",
      "typeScriptTag": "transportLightSms",
      "description": "Replaces the TransportLightSms resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportLightSms identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lightSmsLogin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lightSmsPhone",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lightSmsToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportLightSms resource is a collection of transports that carry dispatched alerts to the external LightSMS service."
        }
      ]
    },
    {
      "url": "/api/transport-line-notify",
      "method": "apiTransportLineNotifyGetCollection",
      "httpMethod": "get",
      "tag": "TransportLineNotify",
      "typeScriptTag": "transportLineNotify",
      "description": "Retrieves the collection of TransportLineNotify resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-line-notify",
      "method": "apiTransportLineNotifyPost",
      "httpMethod": "post",
      "tag": "TransportLineNotify",
      "typeScriptTag": "transportLineNotify",
      "description": "Creates a TransportLineNotify resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lineNotifyAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lineNotifyStickerId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lineNotifyStickerPackageId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportLineNotify resource is a collection of transports that carry dispatched alerts to the external LINE Notify service."
        }
      ]
    },
    {
      "url": "/api/transport-line-notify/{id}",
      "method": "apiTransportLineNotifyIdDelete",
      "httpMethod": "delete",
      "tag": "TransportLineNotify",
      "typeScriptTag": "transportLineNotify",
      "description": "Removes the TransportLineNotify resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportLineNotify identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-line-notify/{id}",
      "method": "apiTransportLineNotifyIdGet",
      "httpMethod": "get",
      "tag": "TransportLineNotify",
      "typeScriptTag": "transportLineNotify",
      "description": "Retrieves a TransportLineNotify resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportLineNotify identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportLineNotify resource is a collection of transports that carry dispatched alerts to the external LINE Notify service."
        }
      ]
    },
    {
      "url": "/api/transport-line-notify/{id}",
      "method": "apiTransportLineNotifyIdPatch",
      "httpMethod": "patch",
      "tag": "TransportLineNotify",
      "typeScriptTag": "transportLineNotify",
      "description": "Updates the TransportLineNotify resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportLineNotify identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lineNotifyAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lineNotifyStickerId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lineNotifyStickerPackageId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportLineNotify resource is a collection of transports that carry dispatched alerts to the external LINE Notify service."
        }
      ]
    },
    {
      "url": "/api/transport-line-notify/{id}",
      "method": "apiTransportLineNotifyIdPut",
      "httpMethod": "put",
      "tag": "TransportLineNotify",
      "typeScriptTag": "transportLineNotify",
      "description": "Replaces the TransportLineNotify resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportLineNotify identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lineNotifyAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lineNotifyStickerId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lineNotifyStickerPackageId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportLineNotify resource is a collection of transports that carry dispatched alerts to the external LINE Notify service."
        }
      ]
    },
    {
      "url": "/api/transport-linked-in",
      "method": "apiTransportLinkedInGetCollection",
      "httpMethod": "get",
      "tag": "TransportLinkedIn",
      "typeScriptTag": "transportLinkedIn",
      "description": "Retrieves the collection of TransportLinkedIn resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-linked-in",
      "method": "apiTransportLinkedInPost",
      "httpMethod": "post",
      "tag": "TransportLinkedIn",
      "typeScriptTag": "transportLinkedIn",
      "description": "Creates a TransportLinkedIn resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "linkedInToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "linkedInUserId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportLinkedIn resource is a collection of transports that carry dispatched alerts to the external LinkedIn service."
        }
      ]
    },
    {
      "url": "/api/transport-linked-in/{id}",
      "method": "apiTransportLinkedInIdDelete",
      "httpMethod": "delete",
      "tag": "TransportLinkedIn",
      "typeScriptTag": "transportLinkedIn",
      "description": "Removes the TransportLinkedIn resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportLinkedIn identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-linked-in/{id}",
      "method": "apiTransportLinkedInIdGet",
      "httpMethod": "get",
      "tag": "TransportLinkedIn",
      "typeScriptTag": "transportLinkedIn",
      "description": "Retrieves a TransportLinkedIn resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportLinkedIn identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportLinkedIn resource is a collection of transports that carry dispatched alerts to the external LinkedIn service."
        }
      ]
    },
    {
      "url": "/api/transport-linked-in/{id}",
      "method": "apiTransportLinkedInIdPatch",
      "httpMethod": "patch",
      "tag": "TransportLinkedIn",
      "typeScriptTag": "transportLinkedIn",
      "description": "Updates the TransportLinkedIn resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportLinkedIn identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "linkedInToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "linkedInUserId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportLinkedIn resource is a collection of transports that carry dispatched alerts to the external LinkedIn service."
        }
      ]
    },
    {
      "url": "/api/transport-linked-in/{id}",
      "method": "apiTransportLinkedInIdPut",
      "httpMethod": "put",
      "tag": "TransportLinkedIn",
      "typeScriptTag": "transportLinkedIn",
      "description": "Replaces the TransportLinkedIn resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportLinkedIn identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "linkedInToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "linkedInUserId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportLinkedIn resource is a collection of transports that carry dispatched alerts to the external LinkedIn service."
        }
      ]
    },
    {
      "url": "/api/transport-mailjet",
      "method": "apiTransportMailjetGetCollection",
      "httpMethod": "get",
      "tag": "TransportMailjet",
      "typeScriptTag": "transportMailjet",
      "description": "Retrieves the collection of TransportMailjet resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-mailjet",
      "method": "apiTransportMailjetPost",
      "httpMethod": "post",
      "tag": "TransportMailjet",
      "typeScriptTag": "transportMailjet",
      "description": "Creates a TransportMailjet resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mailjetFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mailjetToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportMailjet resource is a collection of transports that carry dispatched alerts to the external MailJet service."
        }
      ]
    },
    {
      "url": "/api/transport-mailjet/{id}",
      "method": "apiTransportMailjetIdDelete",
      "httpMethod": "delete",
      "tag": "TransportMailjet",
      "typeScriptTag": "transportMailjet",
      "description": "Removes the TransportMailjet resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMailjet identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-mailjet/{id}",
      "method": "apiTransportMailjetIdGet",
      "httpMethod": "get",
      "tag": "TransportMailjet",
      "typeScriptTag": "transportMailjet",
      "description": "Retrieves a TransportMailjet resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMailjet identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMailjet resource is a collection of transports that carry dispatched alerts to the external MailJet service."
        }
      ]
    },
    {
      "url": "/api/transport-mailjet/{id}",
      "method": "apiTransportMailjetIdPatch",
      "httpMethod": "patch",
      "tag": "TransportMailjet",
      "typeScriptTag": "transportMailjet",
      "description": "Updates the TransportMailjet resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMailjet identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mailjetFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mailjetToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMailjet resource is a collection of transports that carry dispatched alerts to the external MailJet service."
        }
      ]
    },
    {
      "url": "/api/transport-mailjet/{id}",
      "method": "apiTransportMailjetIdPut",
      "httpMethod": "put",
      "tag": "TransportMailjet",
      "typeScriptTag": "transportMailjet",
      "description": "Replaces the TransportMailjet resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMailjet identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mailjetFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mailjetToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMailjet resource is a collection of transports that carry dispatched alerts to the external MailJet service."
        }
      ]
    },
    {
      "url": "/api/transport-mastodon",
      "method": "apiTransportMastodonGetCollection",
      "httpMethod": "get",
      "tag": "TransportMastodon",
      "typeScriptTag": "transportMastodon",
      "description": "Retrieves the collection of TransportMastodon resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-mastodon",
      "method": "apiTransportMastodonPost",
      "httpMethod": "post",
      "tag": "TransportMastodon",
      "typeScriptTag": "transportMastodon",
      "description": "Creates a TransportMastodon resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mastodonAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mastodonHost",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportMastodon resource is a collection of transports that carry dispatched alerts to the external Mastodon service."
        }
      ]
    },
    {
      "url": "/api/transport-mastodon/{id}",
      "method": "apiTransportMastodonIdDelete",
      "httpMethod": "delete",
      "tag": "TransportMastodon",
      "typeScriptTag": "transportMastodon",
      "description": "Removes the TransportMastodon resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMastodon identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-mastodon/{id}",
      "method": "apiTransportMastodonIdGet",
      "httpMethod": "get",
      "tag": "TransportMastodon",
      "typeScriptTag": "transportMastodon",
      "description": "Retrieves a TransportMastodon resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMastodon identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMastodon resource is a collection of transports that carry dispatched alerts to the external Mastodon service."
        }
      ]
    },
    {
      "url": "/api/transport-mastodon/{id}",
      "method": "apiTransportMastodonIdPatch",
      "httpMethod": "patch",
      "tag": "TransportMastodon",
      "typeScriptTag": "transportMastodon",
      "description": "Updates the TransportMastodon resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMastodon identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mastodonAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mastodonHost",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMastodon resource is a collection of transports that carry dispatched alerts to the external Mastodon service."
        }
      ]
    },
    {
      "url": "/api/transport-mastodon/{id}",
      "method": "apiTransportMastodonIdPut",
      "httpMethod": "put",
      "tag": "TransportMastodon",
      "typeScriptTag": "transportMastodon",
      "description": "Replaces the TransportMastodon resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMastodon identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mastodonAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mastodonHost",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMastodon resource is a collection of transports that carry dispatched alerts to the external Mastodon service."
        }
      ]
    },
    {
      "url": "/api/transport-mattermost",
      "method": "apiTransportMattermostGetCollection",
      "httpMethod": "get",
      "tag": "TransportMattermost",
      "typeScriptTag": "transportMattermost",
      "description": "Retrieves the collection of TransportMattermost resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-mattermost",
      "method": "apiTransportMattermostPost",
      "httpMethod": "post",
      "tag": "TransportMattermost",
      "typeScriptTag": "transportMattermost",
      "description": "Creates a TransportMattermost resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mattermostAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mattermostChannel",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mattermostHost",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mattermostPath",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportMattermost resource is a collection of transports that carry dispatched alerts to the external Mattermost service."
        }
      ]
    },
    {
      "url": "/api/transport-mattermost/{id}",
      "method": "apiTransportMattermostIdDelete",
      "httpMethod": "delete",
      "tag": "TransportMattermost",
      "typeScriptTag": "transportMattermost",
      "description": "Removes the TransportMattermost resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMattermost identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-mattermost/{id}",
      "method": "apiTransportMattermostIdGet",
      "httpMethod": "get",
      "tag": "TransportMattermost",
      "typeScriptTag": "transportMattermost",
      "description": "Retrieves a TransportMattermost resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMattermost identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMattermost resource is a collection of transports that carry dispatched alerts to the external Mattermost service."
        }
      ]
    },
    {
      "url": "/api/transport-mattermost/{id}",
      "method": "apiTransportMattermostIdPatch",
      "httpMethod": "patch",
      "tag": "TransportMattermost",
      "typeScriptTag": "transportMattermost",
      "description": "Updates the TransportMattermost resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMattermost identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mattermostAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mattermostChannel",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mattermostHost",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mattermostPath",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMattermost resource is a collection of transports that carry dispatched alerts to the external Mattermost service."
        }
      ]
    },
    {
      "url": "/api/transport-mattermost/{id}",
      "method": "apiTransportMattermostIdPut",
      "httpMethod": "put",
      "tag": "TransportMattermost",
      "typeScriptTag": "transportMattermost",
      "description": "Replaces the TransportMattermost resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMattermost identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mattermostAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mattermostChannel",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mattermostHost",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mattermostPath",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMattermost resource is a collection of transports that carry dispatched alerts to the external Mattermost service."
        }
      ]
    },
    {
      "url": "/api/transport-mercure",
      "method": "apiTransportMercureGetCollection",
      "httpMethod": "get",
      "tag": "TransportMercure",
      "typeScriptTag": "transportMercure",
      "description": "Retrieves the collection of TransportMercure resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-mercure",
      "method": "apiTransportMercurePost",
      "httpMethod": "post",
      "tag": "TransportMercure",
      "typeScriptTag": "transportMercure",
      "description": "Creates a TransportMercure resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mercureHubJwtToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mercureHubUrl",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mercureTopic",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportMercure resource is a collection of transports that carry dispatched alerts to the external Mercure service."
        }
      ]
    },
    {
      "url": "/api/transport-mercure/{id}",
      "method": "apiTransportMercureIdDelete",
      "httpMethod": "delete",
      "tag": "TransportMercure",
      "typeScriptTag": "transportMercure",
      "description": "Removes the TransportMercure resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMercure identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-mercure/{id}",
      "method": "apiTransportMercureIdGet",
      "httpMethod": "get",
      "tag": "TransportMercure",
      "typeScriptTag": "transportMercure",
      "description": "Retrieves a TransportMercure resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMercure identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMercure resource is a collection of transports that carry dispatched alerts to the external Mercure service."
        }
      ]
    },
    {
      "url": "/api/transport-mercure/{id}",
      "method": "apiTransportMercureIdPatch",
      "httpMethod": "patch",
      "tag": "TransportMercure",
      "typeScriptTag": "transportMercure",
      "description": "Updates the TransportMercure resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMercure identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mercureHubJwtToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mercureHubUrl",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mercureTopic",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMercure resource is a collection of transports that carry dispatched alerts to the external Mercure service."
        }
      ]
    },
    {
      "url": "/api/transport-mercure/{id}",
      "method": "apiTransportMercureIdPut",
      "httpMethod": "put",
      "tag": "TransportMercure",
      "typeScriptTag": "transportMercure",
      "description": "Replaces the TransportMercure resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMercure identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mercureHubJwtToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mercureHubUrl",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mercureTopic",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMercure resource is a collection of transports that carry dispatched alerts to the external Mercure service."
        }
      ]
    },
    {
      "url": "/api/transport-message-bird",
      "method": "apiTransportMessageBirdGetCollection",
      "httpMethod": "get",
      "tag": "TransportMessageBird",
      "typeScriptTag": "transportMessageBird",
      "description": "Retrieves the collection of TransportMessageBird resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-message-bird",
      "method": "apiTransportMessageBirdPost",
      "httpMethod": "post",
      "tag": "TransportMessageBird",
      "typeScriptTag": "transportMessageBird",
      "description": "Creates a TransportMessageBird resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "messageBirdFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "messageBirdToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportMessageBird resource is a collection of transports that carry dispatched alerts to the external MessageBird service."
        }
      ]
    },
    {
      "url": "/api/transport-message-bird/{id}",
      "method": "apiTransportMessageBirdIdDelete",
      "httpMethod": "delete",
      "tag": "TransportMessageBird",
      "typeScriptTag": "transportMessageBird",
      "description": "Removes the TransportMessageBird resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMessageBird identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-message-bird/{id}",
      "method": "apiTransportMessageBirdIdGet",
      "httpMethod": "get",
      "tag": "TransportMessageBird",
      "typeScriptTag": "transportMessageBird",
      "description": "Retrieves a TransportMessageBird resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMessageBird identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMessageBird resource is a collection of transports that carry dispatched alerts to the external MessageBird service."
        }
      ]
    },
    {
      "url": "/api/transport-message-bird/{id}",
      "method": "apiTransportMessageBirdIdPatch",
      "httpMethod": "patch",
      "tag": "TransportMessageBird",
      "typeScriptTag": "transportMessageBird",
      "description": "Updates the TransportMessageBird resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMessageBird identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "messageBirdFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "messageBirdToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMessageBird resource is a collection of transports that carry dispatched alerts to the external MessageBird service."
        }
      ]
    },
    {
      "url": "/api/transport-message-bird/{id}",
      "method": "apiTransportMessageBirdIdPut",
      "httpMethod": "put",
      "tag": "TransportMessageBird",
      "typeScriptTag": "transportMessageBird",
      "description": "Replaces the TransportMessageBird resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMessageBird identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "messageBirdFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "messageBirdToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMessageBird resource is a collection of transports that carry dispatched alerts to the external MessageBird service."
        }
      ]
    },
    {
      "url": "/api/transport-message-media",
      "method": "apiTransportMessageMediaGetCollection",
      "httpMethod": "get",
      "tag": "TransportMessageMedia",
      "typeScriptTag": "transportMessageMedia",
      "description": "Retrieves the collection of TransportMessageMedia resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-message-media",
      "method": "apiTransportMessageMediaPost",
      "httpMethod": "post",
      "tag": "TransportMessageMedia",
      "typeScriptTag": "transportMessageMedia",
      "description": "Creates a TransportMessageMedia resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "messageMediaApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "messageMediaApiSecret",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "messageMediaFrom",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportMessageMedia resource is a collection of transports that carry dispatched alerts to the external MessageMedia service."
        }
      ]
    },
    {
      "url": "/api/transport-message-media/{id}",
      "method": "apiTransportMessageMediaIdDelete",
      "httpMethod": "delete",
      "tag": "TransportMessageMedia",
      "typeScriptTag": "transportMessageMedia",
      "description": "Removes the TransportMessageMedia resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMessageMedia identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-message-media/{id}",
      "method": "apiTransportMessageMediaIdGet",
      "httpMethod": "get",
      "tag": "TransportMessageMedia",
      "typeScriptTag": "transportMessageMedia",
      "description": "Retrieves a TransportMessageMedia resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMessageMedia identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMessageMedia resource is a collection of transports that carry dispatched alerts to the external MessageMedia service."
        }
      ]
    },
    {
      "url": "/api/transport-message-media/{id}",
      "method": "apiTransportMessageMediaIdPatch",
      "httpMethod": "patch",
      "tag": "TransportMessageMedia",
      "typeScriptTag": "transportMessageMedia",
      "description": "Updates the TransportMessageMedia resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMessageMedia identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "messageMediaApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "messageMediaApiSecret",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "messageMediaFrom",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMessageMedia resource is a collection of transports that carry dispatched alerts to the external MessageMedia service."
        }
      ]
    },
    {
      "url": "/api/transport-message-media/{id}",
      "method": "apiTransportMessageMediaIdPut",
      "httpMethod": "put",
      "tag": "TransportMessageMedia",
      "typeScriptTag": "transportMessageMedia",
      "description": "Replaces the TransportMessageMedia resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMessageMedia identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "messageMediaApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "messageMediaApiSecret",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "messageMediaFrom",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMessageMedia resource is a collection of transports that carry dispatched alerts to the external MessageMedia service."
        }
      ]
    },
    {
      "url": "/api/transport-microsoft-teams",
      "method": "apiTransportMicrosoftTeamsGetCollection",
      "httpMethod": "get",
      "tag": "TransportMicrosoftTeams",
      "typeScriptTag": "transportMicrosoftTeams",
      "description": "Retrieves the collection of TransportMicrosoftTeams resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-microsoft-teams",
      "method": "apiTransportMicrosoftTeamsPost",
      "httpMethod": "post",
      "tag": "TransportMicrosoftTeams",
      "typeScriptTag": "transportMicrosoftTeams",
      "description": "Creates a TransportMicrosoftTeams resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "microsoftTeamsPath",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportMicrosoftTeams resource is a collection of transports that carry dispatched alerts to the external Microsoft Teams service."
        }
      ]
    },
    {
      "url": "/api/transport-microsoft-teams/{id}",
      "method": "apiTransportMicrosoftTeamsIdDelete",
      "httpMethod": "delete",
      "tag": "TransportMicrosoftTeams",
      "typeScriptTag": "transportMicrosoftTeams",
      "description": "Removes the TransportMicrosoftTeams resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMicrosoftTeams identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-microsoft-teams/{id}",
      "method": "apiTransportMicrosoftTeamsIdGet",
      "httpMethod": "get",
      "tag": "TransportMicrosoftTeams",
      "typeScriptTag": "transportMicrosoftTeams",
      "description": "Retrieves a TransportMicrosoftTeams resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMicrosoftTeams identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMicrosoftTeams resource is a collection of transports that carry dispatched alerts to the external Microsoft Teams service."
        }
      ]
    },
    {
      "url": "/api/transport-microsoft-teams/{id}",
      "method": "apiTransportMicrosoftTeamsIdPatch",
      "httpMethod": "patch",
      "tag": "TransportMicrosoftTeams",
      "typeScriptTag": "transportMicrosoftTeams",
      "description": "Updates the TransportMicrosoftTeams resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMicrosoftTeams identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "microsoftTeamsPath",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMicrosoftTeams resource is a collection of transports that carry dispatched alerts to the external Microsoft Teams service."
        }
      ]
    },
    {
      "url": "/api/transport-microsoft-teams/{id}",
      "method": "apiTransportMicrosoftTeamsIdPut",
      "httpMethod": "put",
      "tag": "TransportMicrosoftTeams",
      "typeScriptTag": "transportMicrosoftTeams",
      "description": "Replaces the TransportMicrosoftTeams resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMicrosoftTeams identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "microsoftTeamsPath",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMicrosoftTeams resource is a collection of transports that carry dispatched alerts to the external Microsoft Teams service."
        }
      ]
    },
    {
      "url": "/api/transport-mobyt",
      "method": "apiTransportMobytGetCollection",
      "httpMethod": "get",
      "tag": "TransportMobyt",
      "typeScriptTag": "transportMobyt",
      "description": "Retrieves the collection of TransportMobyt resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-mobyt",
      "method": "apiTransportMobytPost",
      "httpMethod": "post",
      "tag": "TransportMobyt",
      "typeScriptTag": "transportMobyt",
      "description": "Creates a TransportMobyt resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mobytAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mobytFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mobytTypeQuality",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mobytUserKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportMobyt resource is a collection of transports that carry dispatched alerts to the external Mobyt service."
        }
      ]
    },
    {
      "url": "/api/transport-mobyt/{id}",
      "method": "apiTransportMobytIdDelete",
      "httpMethod": "delete",
      "tag": "TransportMobyt",
      "typeScriptTag": "transportMobyt",
      "description": "Removes the TransportMobyt resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMobyt identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-mobyt/{id}",
      "method": "apiTransportMobytIdGet",
      "httpMethod": "get",
      "tag": "TransportMobyt",
      "typeScriptTag": "transportMobyt",
      "description": "Retrieves a TransportMobyt resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMobyt identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMobyt resource is a collection of transports that carry dispatched alerts to the external Mobyt service."
        }
      ]
    },
    {
      "url": "/api/transport-mobyt/{id}",
      "method": "apiTransportMobytIdPatch",
      "httpMethod": "patch",
      "tag": "TransportMobyt",
      "typeScriptTag": "transportMobyt",
      "description": "Updates the TransportMobyt resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMobyt identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mobytAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mobytFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mobytTypeQuality",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mobytUserKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMobyt resource is a collection of transports that carry dispatched alerts to the external Mobyt service."
        }
      ]
    },
    {
      "url": "/api/transport-mobyt/{id}",
      "method": "apiTransportMobytIdPut",
      "httpMethod": "put",
      "tag": "TransportMobyt",
      "typeScriptTag": "transportMobyt",
      "description": "Replaces the TransportMobyt resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportMobyt identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mobytAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mobytFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mobytTypeQuality",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mobytUserKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportMobyt resource is a collection of transports that carry dispatched alerts to the external Mobyt service."
        }
      ]
    },
    {
      "url": "/api/transport-octopush",
      "method": "apiTransportOctopushGetCollection",
      "httpMethod": "get",
      "tag": "TransportOctopush",
      "typeScriptTag": "transportOctopush",
      "description": "Retrieves the collection of TransportOctopush resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-octopush",
      "method": "apiTransportOctopushPost",
      "httpMethod": "post",
      "tag": "TransportOctopush",
      "typeScriptTag": "transportOctopush",
      "description": "Creates a TransportOctopush resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "octopushApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "octopushFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "octopushType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "octopushUserLogin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportOctopush resource is a collection of transports that carry dispatched alerts to the external Octopush service."
        }
      ]
    },
    {
      "url": "/api/transport-octopush/{id}",
      "method": "apiTransportOctopushIdDelete",
      "httpMethod": "delete",
      "tag": "TransportOctopush",
      "typeScriptTag": "transportOctopush",
      "description": "Removes the TransportOctopush resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportOctopush identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-octopush/{id}",
      "method": "apiTransportOctopushIdGet",
      "httpMethod": "get",
      "tag": "TransportOctopush",
      "typeScriptTag": "transportOctopush",
      "description": "Retrieves a TransportOctopush resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportOctopush identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportOctopush resource is a collection of transports that carry dispatched alerts to the external Octopush service."
        }
      ]
    },
    {
      "url": "/api/transport-octopush/{id}",
      "method": "apiTransportOctopushIdPatch",
      "httpMethod": "patch",
      "tag": "TransportOctopush",
      "typeScriptTag": "transportOctopush",
      "description": "Updates the TransportOctopush resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportOctopush identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "octopushApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "octopushFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "octopushType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "octopushUserLogin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportOctopush resource is a collection of transports that carry dispatched alerts to the external Octopush service."
        }
      ]
    },
    {
      "url": "/api/transport-octopush/{id}",
      "method": "apiTransportOctopushIdPut",
      "httpMethod": "put",
      "tag": "TransportOctopush",
      "typeScriptTag": "transportOctopush",
      "description": "Replaces the TransportOctopush resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportOctopush identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "octopushApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "octopushFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "octopushType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "octopushUserLogin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportOctopush resource is a collection of transports that carry dispatched alerts to the external Octopush service."
        }
      ]
    },
    {
      "url": "/api/transport-one-signal",
      "method": "apiTransportOneSignalGetCollection",
      "httpMethod": "get",
      "tag": "TransportOneSignal",
      "typeScriptTag": "transportOneSignal",
      "description": "Retrieves the collection of TransportOneSignal resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-one-signal",
      "method": "apiTransportOneSignalPost",
      "httpMethod": "post",
      "tag": "TransportOneSignal",
      "typeScriptTag": "transportOneSignal",
      "description": "Creates a TransportOneSignal resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oneSignalApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "oneSignalAppId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "oneSignalDefaultRecipientId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportOneSignal resource is a collection of transports that carry dispatched alerts to the external One Signal service."
        }
      ]
    },
    {
      "url": "/api/transport-one-signal/{id}",
      "method": "apiTransportOneSignalIdDelete",
      "httpMethod": "delete",
      "tag": "TransportOneSignal",
      "typeScriptTag": "transportOneSignal",
      "description": "Removes the TransportOneSignal resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportOneSignal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-one-signal/{id}",
      "method": "apiTransportOneSignalIdGet",
      "httpMethod": "get",
      "tag": "TransportOneSignal",
      "typeScriptTag": "transportOneSignal",
      "description": "Retrieves a TransportOneSignal resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportOneSignal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportOneSignal resource is a collection of transports that carry dispatched alerts to the external One Signal service."
        }
      ]
    },
    {
      "url": "/api/transport-one-signal/{id}",
      "method": "apiTransportOneSignalIdPatch",
      "httpMethod": "patch",
      "tag": "TransportOneSignal",
      "typeScriptTag": "transportOneSignal",
      "description": "Updates the TransportOneSignal resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportOneSignal identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oneSignalApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "oneSignalAppId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "oneSignalDefaultRecipientId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportOneSignal resource is a collection of transports that carry dispatched alerts to the external One Signal service."
        }
      ]
    },
    {
      "url": "/api/transport-one-signal/{id}",
      "method": "apiTransportOneSignalIdPut",
      "httpMethod": "put",
      "tag": "TransportOneSignal",
      "typeScriptTag": "transportOneSignal",
      "description": "Replaces the TransportOneSignal resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportOneSignal identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oneSignalApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "oneSignalAppId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "oneSignalDefaultRecipientId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportOneSignal resource is a collection of transports that carry dispatched alerts to the external One Signal service."
        }
      ]
    },
    {
      "url": "/api/transport-opsgenie",
      "method": "apiTransportOpsgenieGetCollection",
      "httpMethod": "get",
      "tag": "TransportOpsgenie",
      "typeScriptTag": "transportOpsgenie",
      "description": "Retrieves the collection of TransportOpsgenie resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-opsgenie",
      "method": "apiTransportOpsgeniePost",
      "httpMethod": "post",
      "tag": "TransportOpsgenie",
      "typeScriptTag": "transportOpsgenie",
      "description": "Creates a TransportOpsgenie resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "opsgenieAlias",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "opsgenieApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "opsgenieEntity",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "opsgenieNote",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "opsgeniePriority",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "opsgenieUser",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportOpsgenie resource is a collection of transports that carry dispatched alerts to the external Opsgenie service."
        }
      ]
    },
    {
      "url": "/api/transport-opsgenie/{id}",
      "method": "apiTransportOpsgenieIdDelete",
      "httpMethod": "delete",
      "tag": "TransportOpsgenie",
      "typeScriptTag": "transportOpsgenie",
      "description": "Removes the TransportOpsgenie resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportOpsgenie identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-opsgenie/{id}",
      "method": "apiTransportOpsgenieIdGet",
      "httpMethod": "get",
      "tag": "TransportOpsgenie",
      "typeScriptTag": "transportOpsgenie",
      "description": "Retrieves a TransportOpsgenie resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportOpsgenie identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportOpsgenie resource is a collection of transports that carry dispatched alerts to the external Opsgenie service."
        }
      ]
    },
    {
      "url": "/api/transport-opsgenie/{id}",
      "method": "apiTransportOpsgenieIdPatch",
      "httpMethod": "patch",
      "tag": "TransportOpsgenie",
      "typeScriptTag": "transportOpsgenie",
      "description": "Updates the TransportOpsgenie resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportOpsgenie identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "opsgenieAlias",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "opsgenieApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "opsgenieEntity",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "opsgenieNote",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "opsgeniePriority",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "opsgenieUser",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportOpsgenie resource is a collection of transports that carry dispatched alerts to the external Opsgenie service."
        }
      ]
    },
    {
      "url": "/api/transport-opsgenie/{id}",
      "method": "apiTransportOpsgenieIdPut",
      "httpMethod": "put",
      "tag": "TransportOpsgenie",
      "typeScriptTag": "transportOpsgenie",
      "description": "Replaces the TransportOpsgenie resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportOpsgenie identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "opsgenieAlias",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "opsgenieApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "opsgenieEntity",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "opsgenieNote",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "opsgeniePriority",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "opsgenieUser",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportOpsgenie resource is a collection of transports that carry dispatched alerts to the external Opsgenie service."
        }
      ]
    },
    {
      "url": "/api/transport-orange-sms",
      "method": "apiTransportOrangeSmsGetCollection",
      "httpMethod": "get",
      "tag": "TransportOrangeSms",
      "typeScriptTag": "transportOrangeSms",
      "description": "Retrieves the collection of TransportOrangeSms resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-orange-sms",
      "method": "apiTransportOrangeSmsPost",
      "httpMethod": "post",
      "tag": "TransportOrangeSms",
      "typeScriptTag": "transportOrangeSms",
      "description": "Creates a TransportOrangeSms resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "orangeSmsClientId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orangeSmsClientSecret",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orangeSmsFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orangeSmsSenderName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportOrangeSms resource is a collection of transports that carry dispatched alerts to the external Orange SMS service."
        }
      ]
    },
    {
      "url": "/api/transport-orange-sms/{id}",
      "method": "apiTransportOrangeSmsIdDelete",
      "httpMethod": "delete",
      "tag": "TransportOrangeSms",
      "typeScriptTag": "transportOrangeSms",
      "description": "Removes the TransportOrangeSms resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportOrangeSms identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-orange-sms/{id}",
      "method": "apiTransportOrangeSmsIdGet",
      "httpMethod": "get",
      "tag": "TransportOrangeSms",
      "typeScriptTag": "transportOrangeSms",
      "description": "Retrieves a TransportOrangeSms resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportOrangeSms identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportOrangeSms resource is a collection of transports that carry dispatched alerts to the external Orange SMS service."
        }
      ]
    },
    {
      "url": "/api/transport-orange-sms/{id}",
      "method": "apiTransportOrangeSmsIdPatch",
      "httpMethod": "patch",
      "tag": "TransportOrangeSms",
      "typeScriptTag": "transportOrangeSms",
      "description": "Updates the TransportOrangeSms resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportOrangeSms identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "orangeSmsClientId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orangeSmsClientSecret",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orangeSmsFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orangeSmsSenderName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportOrangeSms resource is a collection of transports that carry dispatched alerts to the external Orange SMS service."
        }
      ]
    },
    {
      "url": "/api/transport-orange-sms/{id}",
      "method": "apiTransportOrangeSmsIdPut",
      "httpMethod": "put",
      "tag": "TransportOrangeSms",
      "typeScriptTag": "transportOrangeSms",
      "description": "Replaces the TransportOrangeSms resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportOrangeSms identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "orangeSmsClientId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orangeSmsClientSecret",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orangeSmsFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orangeSmsSenderName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportOrangeSms resource is a collection of transports that carry dispatched alerts to the external Orange SMS service."
        }
      ]
    },
    {
      "url": "/api/transport-ovh-cloud",
      "method": "apiTransportOvhCloudGetCollection",
      "httpMethod": "get",
      "tag": "TransportOvhCloud",
      "typeScriptTag": "transportOvhCloud",
      "description": "Retrieves the collection of TransportOvhCloud resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-ovh-cloud",
      "method": "apiTransportOvhCloudPost",
      "httpMethod": "post",
      "tag": "TransportOvhCloud",
      "typeScriptTag": "transportOvhCloud",
      "description": "Creates a TransportOvhCloud resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ovhCloudApplicationKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ovhCloudApplicationSecret",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ovhCloudConsumerKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ovhCloudSender",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ovhCloudServiceName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportOvhCloud resource is a collection of transports that carry dispatched alerts to the external OVHcloud service."
        }
      ]
    },
    {
      "url": "/api/transport-ovh-cloud/{id}",
      "method": "apiTransportOvhCloudIdDelete",
      "httpMethod": "delete",
      "tag": "TransportOvhCloud",
      "typeScriptTag": "transportOvhCloud",
      "description": "Removes the TransportOvhCloud resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportOvhCloud identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-ovh-cloud/{id}",
      "method": "apiTransportOvhCloudIdGet",
      "httpMethod": "get",
      "tag": "TransportOvhCloud",
      "typeScriptTag": "transportOvhCloud",
      "description": "Retrieves a TransportOvhCloud resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportOvhCloud identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportOvhCloud resource is a collection of transports that carry dispatched alerts to the external OVHcloud service."
        }
      ]
    },
    {
      "url": "/api/transport-ovh-cloud/{id}",
      "method": "apiTransportOvhCloudIdPatch",
      "httpMethod": "patch",
      "tag": "TransportOvhCloud",
      "typeScriptTag": "transportOvhCloud",
      "description": "Updates the TransportOvhCloud resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportOvhCloud identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ovhCloudApplicationKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ovhCloudApplicationSecret",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ovhCloudConsumerKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ovhCloudSender",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ovhCloudServiceName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportOvhCloud resource is a collection of transports that carry dispatched alerts to the external OVHcloud service."
        }
      ]
    },
    {
      "url": "/api/transport-ovh-cloud/{id}",
      "method": "apiTransportOvhCloudIdPut",
      "httpMethod": "put",
      "tag": "TransportOvhCloud",
      "typeScriptTag": "transportOvhCloud",
      "description": "Replaces the TransportOvhCloud resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportOvhCloud identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ovhCloudApplicationKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ovhCloudApplicationSecret",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ovhCloudConsumerKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ovhCloudSender",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ovhCloudServiceName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportOvhCloud resource is a collection of transports that carry dispatched alerts to the external OVHcloud service."
        }
      ]
    },
    {
      "url": "/api/transport-pager-duty",
      "method": "apiTransportPagerDutyGetCollection",
      "httpMethod": "get",
      "tag": "TransportPagerDuty",
      "typeScriptTag": "transportPagerDuty",
      "description": "Retrieves the collection of TransportPagerDuty resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-pager-duty",
      "method": "apiTransportPagerDutyPost",
      "httpMethod": "post",
      "tag": "TransportPagerDuty",
      "typeScriptTag": "transportPagerDuty",
      "description": "Creates a TransportPagerDuty resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerDutyApiToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pagerDutyDedupKey",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerDutyEventAction",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pagerDutyPayloadClass",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerDutyPayloadComponent",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerDutyPayloadGroup",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerDutyPayloadSeverity",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerDutyPayloadSource",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerDutyRoutingKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportPagerDuty resource is a collection of transports that carry dispatched alerts to the external Pager Duty service."
        }
      ]
    },
    {
      "url": "/api/transport-pager-duty/{id}",
      "method": "apiTransportPagerDutyIdDelete",
      "httpMethod": "delete",
      "tag": "TransportPagerDuty",
      "typeScriptTag": "transportPagerDuty",
      "description": "Removes the TransportPagerDuty resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPagerDuty identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-pager-duty/{id}",
      "method": "apiTransportPagerDutyIdGet",
      "httpMethod": "get",
      "tag": "TransportPagerDuty",
      "typeScriptTag": "transportPagerDuty",
      "description": "Retrieves a TransportPagerDuty resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPagerDuty identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportPagerDuty resource is a collection of transports that carry dispatched alerts to the external Pager Duty service."
        }
      ]
    },
    {
      "url": "/api/transport-pager-duty/{id}",
      "method": "apiTransportPagerDutyIdPatch",
      "httpMethod": "patch",
      "tag": "TransportPagerDuty",
      "typeScriptTag": "transportPagerDuty",
      "description": "Updates the TransportPagerDuty resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPagerDuty identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerDutyApiToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pagerDutyDedupKey",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerDutyEventAction",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pagerDutyPayloadClass",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerDutyPayloadComponent",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerDutyPayloadGroup",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerDutyPayloadSeverity",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerDutyPayloadSource",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerDutyRoutingKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportPagerDuty resource is a collection of transports that carry dispatched alerts to the external Pager Duty service."
        }
      ]
    },
    {
      "url": "/api/transport-pager-duty/{id}",
      "method": "apiTransportPagerDutyIdPut",
      "httpMethod": "put",
      "tag": "TransportPagerDuty",
      "typeScriptTag": "transportPagerDuty",
      "description": "Replaces the TransportPagerDuty resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPagerDuty identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerDutyApiToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pagerDutyDedupKey",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerDutyEventAction",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pagerDutyPayloadClass",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerDutyPayloadComponent",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerDutyPayloadGroup",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerDutyPayloadSeverity",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerDutyPayloadSource",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerDutyRoutingKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportPagerDuty resource is a collection of transports that carry dispatched alerts to the external Pager Duty service."
        }
      ]
    },
    {
      "url": "/api/transport-pager-tree",
      "method": "apiTransportPagerTreeGetCollection",
      "httpMethod": "get",
      "tag": "TransportPagerTree",
      "typeScriptTag": "transportPagerTree",
      "description": "Retrieves the collection of TransportPagerTree resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-pager-tree",
      "method": "apiTransportPagerTreePost",
      "httpMethod": "post",
      "tag": "TransportPagerTree",
      "typeScriptTag": "transportPagerTree",
      "description": "Creates a TransportPagerTree resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerTreeAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pagerTreeAccountUserId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerTreeRouterId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerTreeTeamId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerTreeUrgency",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportPagerTree resource is a collection of transports that carry dispatched alerts to the external Pager Tree service."
        }
      ]
    },
    {
      "url": "/api/transport-pager-tree/{id}",
      "method": "apiTransportPagerTreeIdDelete",
      "httpMethod": "delete",
      "tag": "TransportPagerTree",
      "typeScriptTag": "transportPagerTree",
      "description": "Removes the TransportPagerTree resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPagerTree identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-pager-tree/{id}",
      "method": "apiTransportPagerTreeIdGet",
      "httpMethod": "get",
      "tag": "TransportPagerTree",
      "typeScriptTag": "transportPagerTree",
      "description": "Retrieves a TransportPagerTree resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPagerTree identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportPagerTree resource is a collection of transports that carry dispatched alerts to the external Pager Tree service."
        }
      ]
    },
    {
      "url": "/api/transport-pager-tree/{id}",
      "method": "apiTransportPagerTreeIdPatch",
      "httpMethod": "patch",
      "tag": "TransportPagerTree",
      "typeScriptTag": "transportPagerTree",
      "description": "Updates the TransportPagerTree resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPagerTree identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerTreeAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pagerTreeAccountUserId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerTreeRouterId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerTreeTeamId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerTreeUrgency",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportPagerTree resource is a collection of transports that carry dispatched alerts to the external Pager Tree service."
        }
      ]
    },
    {
      "url": "/api/transport-pager-tree/{id}",
      "method": "apiTransportPagerTreeIdPut",
      "httpMethod": "put",
      "tag": "TransportPagerTree",
      "typeScriptTag": "transportPagerTree",
      "description": "Replaces the TransportPagerTree resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPagerTree identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerTreeAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pagerTreeAccountUserId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerTreeRouterId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerTreeTeamId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pagerTreeUrgency",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportPagerTree resource is a collection of transports that carry dispatched alerts to the external Pager Tree service."
        }
      ]
    },
    {
      "url": "/api/transport-plivo",
      "method": "apiTransportPlivoGetCollection",
      "httpMethod": "get",
      "tag": "TransportPlivo",
      "typeScriptTag": "transportPlivo",
      "description": "Retrieves the collection of TransportPlivo resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-plivo",
      "method": "apiTransportPlivoPost",
      "httpMethod": "post",
      "tag": "TransportPlivo",
      "typeScriptTag": "transportPlivo",
      "description": "Creates a TransportPlivo resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "plivoAuthId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "plivoAuthToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "plivoFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportPlivo resource is a collection of transports that carry dispatched alerts to the external Plivo service."
        }
      ]
    },
    {
      "url": "/api/transport-plivo/{id}",
      "method": "apiTransportPlivoIdDelete",
      "httpMethod": "delete",
      "tag": "TransportPlivo",
      "typeScriptTag": "transportPlivo",
      "description": "Removes the TransportPlivo resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPlivo identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-plivo/{id}",
      "method": "apiTransportPlivoIdGet",
      "httpMethod": "get",
      "tag": "TransportPlivo",
      "typeScriptTag": "transportPlivo",
      "description": "Retrieves a TransportPlivo resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPlivo identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportPlivo resource is a collection of transports that carry dispatched alerts to the external Plivo service."
        }
      ]
    },
    {
      "url": "/api/transport-plivo/{id}",
      "method": "apiTransportPlivoIdPatch",
      "httpMethod": "patch",
      "tag": "TransportPlivo",
      "typeScriptTag": "transportPlivo",
      "description": "Updates the TransportPlivo resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPlivo identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "plivoAuthId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "plivoAuthToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "plivoFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportPlivo resource is a collection of transports that carry dispatched alerts to the external Plivo service."
        }
      ]
    },
    {
      "url": "/api/transport-plivo/{id}",
      "method": "apiTransportPlivoIdPut",
      "httpMethod": "put",
      "tag": "TransportPlivo",
      "typeScriptTag": "transportPlivo",
      "description": "Replaces the TransportPlivo resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPlivo identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "plivoAuthId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "plivoAuthToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "plivoFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportPlivo resource is a collection of transports that carry dispatched alerts to the external Plivo service."
        }
      ]
    },
    {
      "url": "/api/transport-pushbullet",
      "method": "apiTransportPushbulletGetCollection",
      "httpMethod": "get",
      "tag": "TransportPushbullet",
      "typeScriptTag": "transportPushbullet",
      "description": "Retrieves the collection of TransportPushbullet resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-pushbullet",
      "method": "apiTransportPushbulletPost",
      "httpMethod": "post",
      "tag": "TransportPushbullet",
      "typeScriptTag": "transportPushbullet",
      "description": "Creates a TransportPushbullet resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pushbulletAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pushbulletEmail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportPushbullet resource is a collection of transports that carry dispatched alerts to the external Pushbullet service."
        }
      ]
    },
    {
      "url": "/api/transport-pushbullet/{id}",
      "method": "apiTransportPushbulletIdDelete",
      "httpMethod": "delete",
      "tag": "TransportPushbullet",
      "typeScriptTag": "transportPushbullet",
      "description": "Removes the TransportPushbullet resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPushbullet identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-pushbullet/{id}",
      "method": "apiTransportPushbulletIdGet",
      "httpMethod": "get",
      "tag": "TransportPushbullet",
      "typeScriptTag": "transportPushbullet",
      "description": "Retrieves a TransportPushbullet resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPushbullet identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportPushbullet resource is a collection of transports that carry dispatched alerts to the external Pushbullet service."
        }
      ]
    },
    {
      "url": "/api/transport-pushbullet/{id}",
      "method": "apiTransportPushbulletIdPatch",
      "httpMethod": "patch",
      "tag": "TransportPushbullet",
      "typeScriptTag": "transportPushbullet",
      "description": "Updates the TransportPushbullet resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPushbullet identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pushbulletAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pushbulletEmail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportPushbullet resource is a collection of transports that carry dispatched alerts to the external Pushbullet service."
        }
      ]
    },
    {
      "url": "/api/transport-pushbullet/{id}",
      "method": "apiTransportPushbulletIdPut",
      "httpMethod": "put",
      "tag": "TransportPushbullet",
      "typeScriptTag": "transportPushbullet",
      "description": "Replaces the TransportPushbullet resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPushbullet identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pushbulletAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pushbulletEmail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportPushbullet resource is a collection of transports that carry dispatched alerts to the external Pushbullet service."
        }
      ]
    },
    {
      "url": "/api/transport-pushover",
      "method": "apiTransportPushoverGetCollection",
      "httpMethod": "get",
      "tag": "TransportPushover",
      "typeScriptTag": "transportPushover",
      "description": "Retrieves the collection of TransportPushover resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-pushover",
      "method": "apiTransportPushoverPost",
      "httpMethod": "post",
      "tag": "TransportPushover",
      "typeScriptTag": "transportPushover",
      "description": "Creates a TransportPushover resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pushoverAppToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pushoverUserKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportPushover resource is a collection of transports that carry dispatched alerts to the external Pushover service."
        }
      ]
    },
    {
      "url": "/api/transport-pushover/{id}",
      "method": "apiTransportPushoverIdDelete",
      "httpMethod": "delete",
      "tag": "TransportPushover",
      "typeScriptTag": "transportPushover",
      "description": "Removes the TransportPushover resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPushover identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-pushover/{id}",
      "method": "apiTransportPushoverIdGet",
      "httpMethod": "get",
      "tag": "TransportPushover",
      "typeScriptTag": "transportPushover",
      "description": "Retrieves a TransportPushover resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPushover identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportPushover resource is a collection of transports that carry dispatched alerts to the external Pushover service."
        }
      ]
    },
    {
      "url": "/api/transport-pushover/{id}",
      "method": "apiTransportPushoverIdPatch",
      "httpMethod": "patch",
      "tag": "TransportPushover",
      "typeScriptTag": "transportPushover",
      "description": "Updates the TransportPushover resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPushover identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pushoverAppToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pushoverUserKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportPushover resource is a collection of transports that carry dispatched alerts to the external Pushover service."
        }
      ]
    },
    {
      "url": "/api/transport-pushover/{id}",
      "method": "apiTransportPushoverIdPut",
      "httpMethod": "put",
      "tag": "TransportPushover",
      "typeScriptTag": "transportPushover",
      "description": "Replaces the TransportPushover resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPushover identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pushoverAppToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pushoverUserKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportPushover resource is a collection of transports that carry dispatched alerts to the external Pushover service."
        }
      ]
    },
    {
      "url": "/api/transport-pushy",
      "method": "apiTransportPushyGetCollection",
      "httpMethod": "get",
      "tag": "TransportPushy",
      "typeScriptTag": "transportPushy",
      "description": "Retrieves the collection of TransportPushy resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-pushy",
      "method": "apiTransportPushyPost",
      "httpMethod": "post",
      "tag": "TransportPushy",
      "typeScriptTag": "transportPushy",
      "description": "Creates a TransportPushy resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pushyApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pushyTo",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportPushy resource is a collection of transports that carry dispatched alerts to the external Pushy service."
        }
      ]
    },
    {
      "url": "/api/transport-pushy/{id}",
      "method": "apiTransportPushyIdDelete",
      "httpMethod": "delete",
      "tag": "TransportPushy",
      "typeScriptTag": "transportPushy",
      "description": "Removes the TransportPushy resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPushy identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-pushy/{id}",
      "method": "apiTransportPushyIdGet",
      "httpMethod": "get",
      "tag": "TransportPushy",
      "typeScriptTag": "transportPushy",
      "description": "Retrieves a TransportPushy resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPushy identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportPushy resource is a collection of transports that carry dispatched alerts to the external Pushy service."
        }
      ]
    },
    {
      "url": "/api/transport-pushy/{id}",
      "method": "apiTransportPushyIdPatch",
      "httpMethod": "patch",
      "tag": "TransportPushy",
      "typeScriptTag": "transportPushy",
      "description": "Updates the TransportPushy resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPushy identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pushyApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pushyTo",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportPushy resource is a collection of transports that carry dispatched alerts to the external Pushy service."
        }
      ]
    },
    {
      "url": "/api/transport-pushy/{id}",
      "method": "apiTransportPushyIdPut",
      "httpMethod": "put",
      "tag": "TransportPushy",
      "typeScriptTag": "transportPushy",
      "description": "Replaces the TransportPushy resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportPushy identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pushyApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pushyTo",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportPushy resource is a collection of transports that carry dispatched alerts to the external Pushy service."
        }
      ]
    },
    {
      "url": "/api/transport-ring-central",
      "method": "apiTransportRingCentralGetCollection",
      "httpMethod": "get",
      "tag": "TransportRingCentral",
      "typeScriptTag": "transportRingCentral",
      "description": "Retrieves the collection of TransportRingCentral resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-ring-central",
      "method": "apiTransportRingCentralPost",
      "httpMethod": "post",
      "tag": "TransportRingCentral",
      "typeScriptTag": "transportRingCentral",
      "description": "Creates a TransportRingCentral resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ringCentralApiToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ringCentralFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportRingCentral resource is a collection of transports that carry dispatched alerts to the external Ring Central service."
        }
      ]
    },
    {
      "url": "/api/transport-ring-central/{id}",
      "method": "apiTransportRingCentralIdDelete",
      "httpMethod": "delete",
      "tag": "TransportRingCentral",
      "typeScriptTag": "transportRingCentral",
      "description": "Removes the TransportRingCentral resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportRingCentral identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-ring-central/{id}",
      "method": "apiTransportRingCentralIdGet",
      "httpMethod": "get",
      "tag": "TransportRingCentral",
      "typeScriptTag": "transportRingCentral",
      "description": "Retrieves a TransportRingCentral resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportRingCentral identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportRingCentral resource is a collection of transports that carry dispatched alerts to the external Ring Central service."
        }
      ]
    },
    {
      "url": "/api/transport-ring-central/{id}",
      "method": "apiTransportRingCentralIdPatch",
      "httpMethod": "patch",
      "tag": "TransportRingCentral",
      "typeScriptTag": "transportRingCentral",
      "description": "Updates the TransportRingCentral resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportRingCentral identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ringCentralApiToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ringCentralFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportRingCentral resource is a collection of transports that carry dispatched alerts to the external Ring Central service."
        }
      ]
    },
    {
      "url": "/api/transport-ring-central/{id}",
      "method": "apiTransportRingCentralIdPut",
      "httpMethod": "put",
      "tag": "TransportRingCentral",
      "typeScriptTag": "transportRingCentral",
      "description": "Replaces the TransportRingCentral resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportRingCentral identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ringCentralApiToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ringCentralFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportRingCentral resource is a collection of transports that carry dispatched alerts to the external Ring Central service."
        }
      ]
    },
    {
      "url": "/api/transport-rocket-chat",
      "method": "apiTransportRocketChatGetCollection",
      "httpMethod": "get",
      "tag": "TransportRocketChat",
      "typeScriptTag": "transportRocketChat",
      "description": "Retrieves the collection of TransportRocketChat resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-rocket-chat",
      "method": "apiTransportRocketChatPost",
      "httpMethod": "post",
      "tag": "TransportRocketChat",
      "typeScriptTag": "transportRocketChat",
      "description": "Creates a TransportRocketChat resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "rocketChatChannel",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "rocketChatToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportRocketChat resource is a collection of transports that carry dispatched alerts to the external Rocket Chat service."
        }
      ]
    },
    {
      "url": "/api/transport-rocket-chat/{id}",
      "method": "apiTransportRocketChatIdDelete",
      "httpMethod": "delete",
      "tag": "TransportRocketChat",
      "typeScriptTag": "transportRocketChat",
      "description": "Removes the TransportRocketChat resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportRocketChat identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-rocket-chat/{id}",
      "method": "apiTransportRocketChatIdGet",
      "httpMethod": "get",
      "tag": "TransportRocketChat",
      "typeScriptTag": "transportRocketChat",
      "description": "Retrieves a TransportRocketChat resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportRocketChat identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportRocketChat resource is a collection of transports that carry dispatched alerts to the external Rocket Chat service."
        }
      ]
    },
    {
      "url": "/api/transport-rocket-chat/{id}",
      "method": "apiTransportRocketChatIdPatch",
      "httpMethod": "patch",
      "tag": "TransportRocketChat",
      "typeScriptTag": "transportRocketChat",
      "description": "Updates the TransportRocketChat resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportRocketChat identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "rocketChatChannel",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "rocketChatToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportRocketChat resource is a collection of transports that carry dispatched alerts to the external Rocket Chat service."
        }
      ]
    },
    {
      "url": "/api/transport-rocket-chat/{id}",
      "method": "apiTransportRocketChatIdPut",
      "httpMethod": "put",
      "tag": "TransportRocketChat",
      "typeScriptTag": "transportRocketChat",
      "description": "Replaces the TransportRocketChat resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportRocketChat identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "rocketChatChannel",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "rocketChatToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportRocketChat resource is a collection of transports that carry dispatched alerts to the external Rocket Chat service."
        }
      ]
    },
    {
      "url": "/api/transport-sendberry",
      "method": "apiTransportSendberryGetCollection",
      "httpMethod": "get",
      "tag": "TransportSendberry",
      "typeScriptTag": "transportSendberry",
      "description": "Retrieves the collection of TransportSendberry resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-sendberry",
      "method": "apiTransportSendberryPost",
      "httpMethod": "post",
      "tag": "TransportSendberry",
      "typeScriptTag": "transportSendberry",
      "description": "Creates a TransportSendberry resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sendberryAuthKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sendberryFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sendberryPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sendberryUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportSendberry resource is a collection of transports that carry dispatched alerts to the external Sendberry service."
        }
      ]
    },
    {
      "url": "/api/transport-sendberry/{id}",
      "method": "apiTransportSendberryIdDelete",
      "httpMethod": "delete",
      "tag": "TransportSendberry",
      "typeScriptTag": "transportSendberry",
      "description": "Removes the TransportSendberry resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSendberry identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-sendberry/{id}",
      "method": "apiTransportSendberryIdGet",
      "httpMethod": "get",
      "tag": "TransportSendberry",
      "typeScriptTag": "transportSendberry",
      "description": "Retrieves a TransportSendberry resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSendberry identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSendberry resource is a collection of transports that carry dispatched alerts to the external Sendberry service."
        }
      ]
    },
    {
      "url": "/api/transport-sendberry/{id}",
      "method": "apiTransportSendberryIdPatch",
      "httpMethod": "patch",
      "tag": "TransportSendberry",
      "typeScriptTag": "transportSendberry",
      "description": "Updates the TransportSendberry resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSendberry identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sendberryAuthKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sendberryFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sendberryPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sendberryUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSendberry resource is a collection of transports that carry dispatched alerts to the external Sendberry service."
        }
      ]
    },
    {
      "url": "/api/transport-sendberry/{id}",
      "method": "apiTransportSendberryIdPut",
      "httpMethod": "put",
      "tag": "TransportSendberry",
      "typeScriptTag": "transportSendberry",
      "description": "Replaces the TransportSendberry resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSendberry identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sendberryAuthKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sendberryFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sendberryPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sendberryUsername",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSendberry resource is a collection of transports that carry dispatched alerts to the external Sendberry service."
        }
      ]
    },
    {
      "url": "/api/transport-sendinblue",
      "method": "apiTransportSendinblueGetCollection",
      "httpMethod": "get",
      "tag": "TransportSendinblue",
      "typeScriptTag": "transportSendinblue",
      "description": "Retrieves the collection of TransportSendinblue resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-sendinblue",
      "method": "apiTransportSendinbluePost",
      "httpMethod": "post",
      "tag": "TransportSendinblue",
      "typeScriptTag": "transportSendinblue",
      "description": "Creates a TransportSendinblue resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sendinblueApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sendinblueSenderPhone",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportSendinblue resource is a collection of transports that carry dispatched alerts to the external Sendinblue service."
        }
      ]
    },
    {
      "url": "/api/transport-sendinblue/{id}",
      "method": "apiTransportSendinblueIdDelete",
      "httpMethod": "delete",
      "tag": "TransportSendinblue",
      "typeScriptTag": "transportSendinblue",
      "description": "Removes the TransportSendinblue resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSendinblue identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-sendinblue/{id}",
      "method": "apiTransportSendinblueIdGet",
      "httpMethod": "get",
      "tag": "TransportSendinblue",
      "typeScriptTag": "transportSendinblue",
      "description": "Retrieves a TransportSendinblue resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSendinblue identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSendinblue resource is a collection of transports that carry dispatched alerts to the external Sendinblue service."
        }
      ]
    },
    {
      "url": "/api/transport-sendinblue/{id}",
      "method": "apiTransportSendinblueIdPatch",
      "httpMethod": "patch",
      "tag": "TransportSendinblue",
      "typeScriptTag": "transportSendinblue",
      "description": "Updates the TransportSendinblue resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSendinblue identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sendinblueApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sendinblueSenderPhone",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSendinblue resource is a collection of transports that carry dispatched alerts to the external Sendinblue service."
        }
      ]
    },
    {
      "url": "/api/transport-sendinblue/{id}",
      "method": "apiTransportSendinblueIdPut",
      "httpMethod": "put",
      "tag": "TransportSendinblue",
      "typeScriptTag": "transportSendinblue",
      "description": "Replaces the TransportSendinblue resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSendinblue identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sendinblueApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sendinblueSenderPhone",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSendinblue resource is a collection of transports that carry dispatched alerts to the external Sendinblue service."
        }
      ]
    },
    {
      "url": "/api/transport-simple-textin",
      "method": "apiTransportSimpleTextinGetCollection",
      "httpMethod": "get",
      "tag": "TransportSimpleTextin",
      "typeScriptTag": "transportSimpleTextin",
      "description": "Retrieves the collection of TransportSimpleTextin resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-simple-textin",
      "method": "apiTransportSimpleTextinPost",
      "httpMethod": "post",
      "tag": "TransportSimpleTextin",
      "typeScriptTag": "transportSimpleTextin",
      "description": "Creates a TransportSimpleTextin resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "simpleTextinApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "simpleTextinFrom",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportSimpleTextin resource is a collection of transports that carry dispatched alerts to the external SimpleTextin service."
        }
      ]
    },
    {
      "url": "/api/transport-simple-textin/{id}",
      "method": "apiTransportSimpleTextinIdDelete",
      "httpMethod": "delete",
      "tag": "TransportSimpleTextin",
      "typeScriptTag": "transportSimpleTextin",
      "description": "Removes the TransportSimpleTextin resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSimpleTextin identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-simple-textin/{id}",
      "method": "apiTransportSimpleTextinIdGet",
      "httpMethod": "get",
      "tag": "TransportSimpleTextin",
      "typeScriptTag": "transportSimpleTextin",
      "description": "Retrieves a TransportSimpleTextin resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSimpleTextin identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSimpleTextin resource is a collection of transports that carry dispatched alerts to the external SimpleTextin service."
        }
      ]
    },
    {
      "url": "/api/transport-simple-textin/{id}",
      "method": "apiTransportSimpleTextinIdPatch",
      "httpMethod": "patch",
      "tag": "TransportSimpleTextin",
      "typeScriptTag": "transportSimpleTextin",
      "description": "Updates the TransportSimpleTextin resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSimpleTextin identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "simpleTextinApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "simpleTextinFrom",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSimpleTextin resource is a collection of transports that carry dispatched alerts to the external SimpleTextin service."
        }
      ]
    },
    {
      "url": "/api/transport-simple-textin/{id}",
      "method": "apiTransportSimpleTextinIdPut",
      "httpMethod": "put",
      "tag": "TransportSimpleTextin",
      "typeScriptTag": "transportSimpleTextin",
      "description": "Replaces the TransportSimpleTextin resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSimpleTextin identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "simpleTextinApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "simpleTextinFrom",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSimpleTextin resource is a collection of transports that carry dispatched alerts to the external SimpleTextin service."
        }
      ]
    },
    {
      "url": "/api/transport-sinch",
      "method": "apiTransportSinchGetCollection",
      "httpMethod": "get",
      "tag": "TransportSinch",
      "typeScriptTag": "transportSinch",
      "description": "Retrieves the collection of TransportSinch resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-sinch",
      "method": "apiTransportSinchPost",
      "httpMethod": "post",
      "tag": "TransportSinch",
      "typeScriptTag": "transportSinch",
      "description": "Creates a TransportSinch resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sinchAuthToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sinchFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sinchServicePlanId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportSinch resource is a collection of transports that carry dispatched alerts to the external Sinch service."
        }
      ]
    },
    {
      "url": "/api/transport-sinch/{id}",
      "method": "apiTransportSinchIdDelete",
      "httpMethod": "delete",
      "tag": "TransportSinch",
      "typeScriptTag": "transportSinch",
      "description": "Removes the TransportSinch resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSinch identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-sinch/{id}",
      "method": "apiTransportSinchIdGet",
      "httpMethod": "get",
      "tag": "TransportSinch",
      "typeScriptTag": "transportSinch",
      "description": "Retrieves a TransportSinch resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSinch identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSinch resource is a collection of transports that carry dispatched alerts to the external Sinch service."
        }
      ]
    },
    {
      "url": "/api/transport-sinch/{id}",
      "method": "apiTransportSinchIdPatch",
      "httpMethod": "patch",
      "tag": "TransportSinch",
      "typeScriptTag": "transportSinch",
      "description": "Updates the TransportSinch resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSinch identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sinchAuthToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sinchFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sinchServicePlanId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSinch resource is a collection of transports that carry dispatched alerts to the external Sinch service."
        }
      ]
    },
    {
      "url": "/api/transport-sinch/{id}",
      "method": "apiTransportSinchIdPut",
      "httpMethod": "put",
      "tag": "TransportSinch",
      "typeScriptTag": "transportSinch",
      "description": "Replaces the TransportSinch resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSinch identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sinchAuthToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sinchFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sinchServicePlanId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSinch resource is a collection of transports that carry dispatched alerts to the external Sinch service."
        }
      ]
    },
    {
      "url": "/api/transport-slack",
      "method": "apiTransportSlackGetCollection",
      "httpMethod": "get",
      "tag": "TransportSlack",
      "typeScriptTag": "transportSlack",
      "description": "Retrieves the collection of TransportSlack resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-slack",
      "method": "apiTransportSlackPost",
      "httpMethod": "post",
      "tag": "TransportSlack",
      "typeScriptTag": "transportSlack",
      "description": "Creates a TransportSlack resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "slackChannel",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "slackToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportSlack resource is a collection of transports that carry dispatched alerts to the external Slack service."
        }
      ]
    },
    {
      "url": "/api/transport-slack/{id}",
      "method": "apiTransportSlackIdDelete",
      "httpMethod": "delete",
      "tag": "TransportSlack",
      "typeScriptTag": "transportSlack",
      "description": "Removes the TransportSlack resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSlack identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-slack/{id}",
      "method": "apiTransportSlackIdGet",
      "httpMethod": "get",
      "tag": "TransportSlack",
      "typeScriptTag": "transportSlack",
      "description": "Retrieves a TransportSlack resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSlack identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSlack resource is a collection of transports that carry dispatched alerts to the external Slack service."
        }
      ]
    },
    {
      "url": "/api/transport-slack/{id}",
      "method": "apiTransportSlackIdPatch",
      "httpMethod": "patch",
      "tag": "TransportSlack",
      "typeScriptTag": "transportSlack",
      "description": "Updates the TransportSlack resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSlack identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "slackChannel",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "slackToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSlack resource is a collection of transports that carry dispatched alerts to the external Slack service."
        }
      ]
    },
    {
      "url": "/api/transport-slack/{id}",
      "method": "apiTransportSlackIdPut",
      "httpMethod": "put",
      "tag": "TransportSlack",
      "typeScriptTag": "transportSlack",
      "description": "Replaces the TransportSlack resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSlack identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "slackChannel",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "slackToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSlack resource is a collection of transports that carry dispatched alerts to the external Slack service."
        }
      ]
    },
    {
      "url": "/api/transport-sms-biuras",
      "method": "apiTransportSmsBiurasGetCollection",
      "httpMethod": "get",
      "tag": "TransportSmsBiuras",
      "typeScriptTag": "transportSmsBiuras",
      "description": "Retrieves the collection of TransportSmsBiuras resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-sms-biuras",
      "method": "apiTransportSmsBiurasPost",
      "httpMethod": "post",
      "tag": "TransportSmsBiuras",
      "typeScriptTag": "transportSmsBiuras",
      "description": "Creates a TransportSmsBiuras resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsBiurasApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsBiurasFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsBiurasUid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportSmsBiuras resource is a collection of transports that carry dispatched alerts to the external SMSBIURAS service."
        }
      ]
    },
    {
      "url": "/api/transport-sms-biuras/{id}",
      "method": "apiTransportSmsBiurasIdDelete",
      "httpMethod": "delete",
      "tag": "TransportSmsBiuras",
      "typeScriptTag": "transportSmsBiuras",
      "description": "Removes the TransportSmsBiuras resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSmsBiuras identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-sms-biuras/{id}",
      "method": "apiTransportSmsBiurasIdGet",
      "httpMethod": "get",
      "tag": "TransportSmsBiuras",
      "typeScriptTag": "transportSmsBiuras",
      "description": "Retrieves a TransportSmsBiuras resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSmsBiuras identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSmsBiuras resource is a collection of transports that carry dispatched alerts to the external SMSBIURAS service."
        }
      ]
    },
    {
      "url": "/api/transport-sms-biuras/{id}",
      "method": "apiTransportSmsBiurasIdPatch",
      "httpMethod": "patch",
      "tag": "TransportSmsBiuras",
      "typeScriptTag": "transportSmsBiuras",
      "description": "Updates the TransportSmsBiuras resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSmsBiuras identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsBiurasApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsBiurasFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsBiurasUid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSmsBiuras resource is a collection of transports that carry dispatched alerts to the external SMSBIURAS service."
        }
      ]
    },
    {
      "url": "/api/transport-sms-biuras/{id}",
      "method": "apiTransportSmsBiurasIdPut",
      "httpMethod": "put",
      "tag": "TransportSmsBiuras",
      "typeScriptTag": "transportSmsBiuras",
      "description": "Replaces the TransportSmsBiuras resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSmsBiuras identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsBiurasApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsBiurasFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsBiurasUid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSmsBiuras resource is a collection of transports that carry dispatched alerts to the external SMSBIURAS service."
        }
      ]
    },
    {
      "url": "/api/transport-sms-factor",
      "method": "apiTransportSmsFactorGetCollection",
      "httpMethod": "get",
      "tag": "TransportSmsFactor",
      "typeScriptTag": "transportSmsFactor",
      "description": "Retrieves the collection of TransportSmsFactor resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-sms-factor",
      "method": "apiTransportSmsFactorPost",
      "httpMethod": "post",
      "tag": "TransportSmsFactor",
      "typeScriptTag": "transportSmsFactor",
      "description": "Creates a TransportSmsFactor resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsFactorPushType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsFactorSender",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsFactorToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportSmsFactor resource is a collection of transports that carry dispatched alerts to the external SMSFactor service."
        }
      ]
    },
    {
      "url": "/api/transport-sms-factor/{id}",
      "method": "apiTransportSmsFactorIdDelete",
      "httpMethod": "delete",
      "tag": "TransportSmsFactor",
      "typeScriptTag": "transportSmsFactor",
      "description": "Removes the TransportSmsFactor resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSmsFactor identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-sms-factor/{id}",
      "method": "apiTransportSmsFactorIdGet",
      "httpMethod": "get",
      "tag": "TransportSmsFactor",
      "typeScriptTag": "transportSmsFactor",
      "description": "Retrieves a TransportSmsFactor resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSmsFactor identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSmsFactor resource is a collection of transports that carry dispatched alerts to the external SMSFactor service."
        }
      ]
    },
    {
      "url": "/api/transport-sms-factor/{id}",
      "method": "apiTransportSmsFactorIdPatch",
      "httpMethod": "patch",
      "tag": "TransportSmsFactor",
      "typeScriptTag": "transportSmsFactor",
      "description": "Updates the TransportSmsFactor resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSmsFactor identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsFactorPushType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsFactorSender",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsFactorToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSmsFactor resource is a collection of transports that carry dispatched alerts to the external SMSFactor service."
        }
      ]
    },
    {
      "url": "/api/transport-sms-factor/{id}",
      "method": "apiTransportSmsFactorIdPut",
      "httpMethod": "put",
      "tag": "TransportSmsFactor",
      "typeScriptTag": "transportSmsFactor",
      "description": "Replaces the TransportSmsFactor resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSmsFactor identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsFactorPushType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsFactorSender",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsFactorToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSmsFactor resource is a collection of transports that carry dispatched alerts to the external SMSFactor service."
        }
      ]
    },
    {
      "url": "/api/transport-sms77",
      "method": "apiTransportSms77GetCollection",
      "httpMethod": "get",
      "tag": "TransportSms77",
      "typeScriptTag": "transportSms77",
      "description": "Retrieves the collection of TransportSms77 resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-sms77",
      "method": "apiTransportSms77Post",
      "httpMethod": "post",
      "tag": "TransportSms77",
      "typeScriptTag": "transportSms77",
      "description": "Creates a TransportSms77 resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sms77ApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sms77From",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportSms77 resource is a collection of transports that carry dispatched alerts to the external sms77 service."
        }
      ]
    },
    {
      "url": "/api/transport-sms77/{id}",
      "method": "apiTransportSms77IdDelete",
      "httpMethod": "delete",
      "tag": "TransportSms77",
      "typeScriptTag": "transportSms77",
      "description": "Removes the TransportSms77 resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSms77 identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-sms77/{id}",
      "method": "apiTransportSms77IdGet",
      "httpMethod": "get",
      "tag": "TransportSms77",
      "typeScriptTag": "transportSms77",
      "description": "Retrieves a TransportSms77 resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSms77 identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSms77 resource is a collection of transports that carry dispatched alerts to the external sms77 service."
        }
      ]
    },
    {
      "url": "/api/transport-sms77/{id}",
      "method": "apiTransportSms77IdPatch",
      "httpMethod": "patch",
      "tag": "TransportSms77",
      "typeScriptTag": "transportSms77",
      "description": "Updates the TransportSms77 resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSms77 identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sms77ApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sms77From",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSms77 resource is a collection of transports that carry dispatched alerts to the external sms77 service."
        }
      ]
    },
    {
      "url": "/api/transport-sms77/{id}",
      "method": "apiTransportSms77IdPut",
      "httpMethod": "put",
      "tag": "TransportSms77",
      "typeScriptTag": "transportSms77",
      "description": "Replaces the TransportSms77 resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSms77 identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sms77ApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sms77From",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSms77 resource is a collection of transports that carry dispatched alerts to the external sms77 service."
        }
      ]
    },
    {
      "url": "/api/transport-smsapi",
      "method": "apiTransportSmsapiGetCollection",
      "httpMethod": "get",
      "tag": "TransportSmsapi",
      "typeScriptTag": "transportSmsapi",
      "description": "Retrieves the collection of TransportSmsapi resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-smsapi",
      "method": "apiTransportSmsapiPost",
      "httpMethod": "post",
      "tag": "TransportSmsapi",
      "typeScriptTag": "transportSmsapi",
      "description": "Creates a TransportSmsapi resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsapiFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsapiToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportSmsapi resource is a collection of transports that carry dispatched alerts to the external SMS API service."
        }
      ]
    },
    {
      "url": "/api/transport-smsapi/{id}",
      "method": "apiTransportSmsapiIdDelete",
      "httpMethod": "delete",
      "tag": "TransportSmsapi",
      "typeScriptTag": "transportSmsapi",
      "description": "Removes the TransportSmsapi resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSmsapi identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-smsapi/{id}",
      "method": "apiTransportSmsapiIdGet",
      "httpMethod": "get",
      "tag": "TransportSmsapi",
      "typeScriptTag": "transportSmsapi",
      "description": "Retrieves a TransportSmsapi resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSmsapi identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSmsapi resource is a collection of transports that carry dispatched alerts to the external SMS API service."
        }
      ]
    },
    {
      "url": "/api/transport-smsapi/{id}",
      "method": "apiTransportSmsapiIdPatch",
      "httpMethod": "patch",
      "tag": "TransportSmsapi",
      "typeScriptTag": "transportSmsapi",
      "description": "Updates the TransportSmsapi resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSmsapi identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsapiFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsapiToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSmsapi resource is a collection of transports that carry dispatched alerts to the external SMS API service."
        }
      ]
    },
    {
      "url": "/api/transport-smsapi/{id}",
      "method": "apiTransportSmsapiIdPut",
      "httpMethod": "put",
      "tag": "TransportSmsapi",
      "typeScriptTag": "transportSmsapi",
      "description": "Replaces the TransportSmsapi resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSmsapi identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsapiFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsapiToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSmsapi resource is a collection of transports that carry dispatched alerts to the external SMS API service."
        }
      ]
    },
    {
      "url": "/api/transport-smsc",
      "method": "apiTransportSmscGetCollection",
      "httpMethod": "get",
      "tag": "TransportSmsc",
      "typeScriptTag": "transportSmsc",
      "description": "Retrieves the collection of TransportSmsc resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-smsc",
      "method": "apiTransportSmscPost",
      "httpMethod": "post",
      "tag": "TransportSmsc",
      "typeScriptTag": "transportSmsc",
      "description": "Creates a TransportSmsc resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smscFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smscLogin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smscPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportSmsc resource is a collection of transports that carry dispatched alerts to the external Smsc service."
        }
      ]
    },
    {
      "url": "/api/transport-smsc/{id}",
      "method": "apiTransportSmscIdDelete",
      "httpMethod": "delete",
      "tag": "TransportSmsc",
      "typeScriptTag": "transportSmsc",
      "description": "Removes the TransportSmsc resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSmsc identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-smsc/{id}",
      "method": "apiTransportSmscIdGet",
      "httpMethod": "get",
      "tag": "TransportSmsc",
      "typeScriptTag": "transportSmsc",
      "description": "Retrieves a TransportSmsc resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSmsc identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSmsc resource is a collection of transports that carry dispatched alerts to the external Smsc service."
        }
      ]
    },
    {
      "url": "/api/transport-smsc/{id}",
      "method": "apiTransportSmscIdPatch",
      "httpMethod": "patch",
      "tag": "TransportSmsc",
      "typeScriptTag": "transportSmsc",
      "description": "Updates the TransportSmsc resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSmsc identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smscFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smscLogin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smscPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSmsc resource is a collection of transports that carry dispatched alerts to the external Smsc service."
        }
      ]
    },
    {
      "url": "/api/transport-smsc/{id}",
      "method": "apiTransportSmscIdPut",
      "httpMethod": "put",
      "tag": "TransportSmsc",
      "typeScriptTag": "transportSmsc",
      "description": "Replaces the TransportSmsc resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSmsc identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smscFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smscLogin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smscPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSmsc resource is a collection of transports that carry dispatched alerts to the external Smsc service."
        }
      ]
    },
    {
      "url": "/api/transport-smsmode",
      "method": "apiTransportSmsmodeGetCollection",
      "httpMethod": "get",
      "tag": "TransportSmsmode",
      "typeScriptTag": "transportSmsmode",
      "description": "Retrieves the collection of TransportSmsmode resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-smsmode",
      "method": "apiTransportSmsmodePost",
      "httpMethod": "post",
      "tag": "TransportSmsmode",
      "typeScriptTag": "transportSmsmode",
      "description": "Creates a TransportSmsmode resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsmodeApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsmodeFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportSmsmode resource is a collection of transports that carry dispatched alerts to the external Smsmode service."
        }
      ]
    },
    {
      "url": "/api/transport-smsmode/{id}",
      "method": "apiTransportSmsmodeIdDelete",
      "httpMethod": "delete",
      "tag": "TransportSmsmode",
      "typeScriptTag": "transportSmsmode",
      "description": "Removes the TransportSmsmode resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSmsmode identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-smsmode/{id}",
      "method": "apiTransportSmsmodeIdGet",
      "httpMethod": "get",
      "tag": "TransportSmsmode",
      "typeScriptTag": "transportSmsmode",
      "description": "Retrieves a TransportSmsmode resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSmsmode identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSmsmode resource is a collection of transports that carry dispatched alerts to the external Smsmode service."
        }
      ]
    },
    {
      "url": "/api/transport-smsmode/{id}",
      "method": "apiTransportSmsmodeIdPatch",
      "httpMethod": "patch",
      "tag": "TransportSmsmode",
      "typeScriptTag": "transportSmsmode",
      "description": "Updates the TransportSmsmode resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSmsmode identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsmodeApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsmodeFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSmsmode resource is a collection of transports that carry dispatched alerts to the external Smsmode service."
        }
      ]
    },
    {
      "url": "/api/transport-smsmode/{id}",
      "method": "apiTransportSmsmodeIdPut",
      "httpMethod": "put",
      "tag": "TransportSmsmode",
      "typeScriptTag": "transportSmsmode",
      "description": "Replaces the TransportSmsmode resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSmsmode identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsmodeApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smsmodeFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSmsmode resource is a collection of transports that carry dispatched alerts to the external Smsmode service."
        }
      ]
    },
    {
      "url": "/api/transport-spot-hit",
      "method": "apiTransportSpotHitGetCollection",
      "httpMethod": "get",
      "tag": "TransportSpotHit",
      "typeScriptTag": "transportSpotHit",
      "description": "Retrieves the collection of TransportSpotHit resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-spot-hit",
      "method": "apiTransportSpotHitPost",
      "httpMethod": "post",
      "tag": "TransportSpotHit",
      "typeScriptTag": "transportSpotHit",
      "description": "Creates a TransportSpotHit resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "spotHitFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "spotHitToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportSpotHit resource is a collection of transports that carry dispatched alerts to the external Spot-Hit service."
        }
      ]
    },
    {
      "url": "/api/transport-spot-hit/{id}",
      "method": "apiTransportSpotHitIdDelete",
      "httpMethod": "delete",
      "tag": "TransportSpotHit",
      "typeScriptTag": "transportSpotHit",
      "description": "Removes the TransportSpotHit resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSpotHit identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-spot-hit/{id}",
      "method": "apiTransportSpotHitIdGet",
      "httpMethod": "get",
      "tag": "TransportSpotHit",
      "typeScriptTag": "transportSpotHit",
      "description": "Retrieves a TransportSpotHit resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSpotHit identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSpotHit resource is a collection of transports that carry dispatched alerts to the external Spot-Hit service."
        }
      ]
    },
    {
      "url": "/api/transport-spot-hit/{id}",
      "method": "apiTransportSpotHitIdPatch",
      "httpMethod": "patch",
      "tag": "TransportSpotHit",
      "typeScriptTag": "transportSpotHit",
      "description": "Updates the TransportSpotHit resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSpotHit identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "spotHitFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "spotHitToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSpotHit resource is a collection of transports that carry dispatched alerts to the external Spot-Hit service."
        }
      ]
    },
    {
      "url": "/api/transport-spot-hit/{id}",
      "method": "apiTransportSpotHitIdPut",
      "httpMethod": "put",
      "tag": "TransportSpotHit",
      "typeScriptTag": "transportSpotHit",
      "description": "Replaces the TransportSpotHit resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportSpotHit identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "spotHitFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "spotHitToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportSpotHit resource is a collection of transports that carry dispatched alerts to the external Spot-Hit service."
        }
      ]
    },
    {
      "url": "/api/transport-telegram",
      "method": "apiTransportTelegramGetCollection",
      "httpMethod": "get",
      "tag": "TransportTelegram",
      "typeScriptTag": "transportTelegram",
      "description": "Retrieves the collection of TransportTelegram resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-telegram",
      "method": "apiTransportTelegramPost",
      "httpMethod": "post",
      "tag": "TransportTelegram",
      "typeScriptTag": "transportTelegram",
      "description": "Creates a TransportTelegram resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "telegramChatId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "telegramToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportTelegram resource is a collection of transports that carry dispatched alerts to the external Telegram service."
        }
      ]
    },
    {
      "url": "/api/transport-telegram/{id}",
      "method": "apiTransportTelegramIdDelete",
      "httpMethod": "delete",
      "tag": "TransportTelegram",
      "typeScriptTag": "transportTelegram",
      "description": "Removes the TransportTelegram resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTelegram identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-telegram/{id}",
      "method": "apiTransportTelegramIdGet",
      "httpMethod": "get",
      "tag": "TransportTelegram",
      "typeScriptTag": "transportTelegram",
      "description": "Retrieves a TransportTelegram resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTelegram identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportTelegram resource is a collection of transports that carry dispatched alerts to the external Telegram service."
        }
      ]
    },
    {
      "url": "/api/transport-telegram/{id}",
      "method": "apiTransportTelegramIdPatch",
      "httpMethod": "patch",
      "tag": "TransportTelegram",
      "typeScriptTag": "transportTelegram",
      "description": "Updates the TransportTelegram resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTelegram identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "telegramChatId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "telegramToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportTelegram resource is a collection of transports that carry dispatched alerts to the external Telegram service."
        }
      ]
    },
    {
      "url": "/api/transport-telegram/{id}",
      "method": "apiTransportTelegramIdPut",
      "httpMethod": "put",
      "tag": "TransportTelegram",
      "typeScriptTag": "transportTelegram",
      "description": "Replaces the TransportTelegram resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTelegram identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "telegramChatId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "telegramToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportTelegram resource is a collection of transports that carry dispatched alerts to the external Telegram service."
        }
      ]
    },
    {
      "url": "/api/transport-telnyx",
      "method": "apiTransportTelnyxGetCollection",
      "httpMethod": "get",
      "tag": "TransportTelnyx",
      "typeScriptTag": "transportTelnyx",
      "description": "Retrieves the collection of TransportTelnyx resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-telnyx",
      "method": "apiTransportTelnyxPost",
      "httpMethod": "post",
      "tag": "TransportTelnyx",
      "typeScriptTag": "transportTelnyx",
      "description": "Creates a TransportTelnyx resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "telnyxApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "telnyxFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "telnyxMessagingProfileId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportTelnyx resource is a collection of transports that carry dispatched alerts to the external Telnyx service."
        }
      ]
    },
    {
      "url": "/api/transport-telnyx/{id}",
      "method": "apiTransportTelnyxIdDelete",
      "httpMethod": "delete",
      "tag": "TransportTelnyx",
      "typeScriptTag": "transportTelnyx",
      "description": "Removes the TransportTelnyx resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTelnyx identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-telnyx/{id}",
      "method": "apiTransportTelnyxIdGet",
      "httpMethod": "get",
      "tag": "TransportTelnyx",
      "typeScriptTag": "transportTelnyx",
      "description": "Retrieves a TransportTelnyx resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTelnyx identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportTelnyx resource is a collection of transports that carry dispatched alerts to the external Telnyx service."
        }
      ]
    },
    {
      "url": "/api/transport-telnyx/{id}",
      "method": "apiTransportTelnyxIdPatch",
      "httpMethod": "patch",
      "tag": "TransportTelnyx",
      "typeScriptTag": "transportTelnyx",
      "description": "Updates the TransportTelnyx resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTelnyx identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "telnyxApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "telnyxFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "telnyxMessagingProfileId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportTelnyx resource is a collection of transports that carry dispatched alerts to the external Telnyx service."
        }
      ]
    },
    {
      "url": "/api/transport-telnyx/{id}",
      "method": "apiTransportTelnyxIdPut",
      "httpMethod": "put",
      "tag": "TransportTelnyx",
      "typeScriptTag": "transportTelnyx",
      "description": "Replaces the TransportTelnyx resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTelnyx identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "telnyxApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "telnyxFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "telnyxMessagingProfileId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportTelnyx resource is a collection of transports that carry dispatched alerts to the external Telnyx service."
        }
      ]
    },
    {
      "url": "/api/transport-termii",
      "method": "apiTransportTermiiGetCollection",
      "httpMethod": "get",
      "tag": "TransportTermii",
      "typeScriptTag": "transportTermii",
      "description": "Retrieves the collection of TransportTermii resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-termii",
      "method": "apiTransportTermiiPost",
      "httpMethod": "post",
      "tag": "TransportTermii",
      "typeScriptTag": "transportTermii",
      "description": "Creates a TransportTermii resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "termiiApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "termiiChannel",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "termiiFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportTermii resource is a collection of transports that carry dispatched alerts to the external Termii service."
        }
      ]
    },
    {
      "url": "/api/transport-termii/{id}",
      "method": "apiTransportTermiiIdDelete",
      "httpMethod": "delete",
      "tag": "TransportTermii",
      "typeScriptTag": "transportTermii",
      "description": "Removes the TransportTermii resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTermii identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-termii/{id}",
      "method": "apiTransportTermiiIdGet",
      "httpMethod": "get",
      "tag": "TransportTermii",
      "typeScriptTag": "transportTermii",
      "description": "Retrieves a TransportTermii resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTermii identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportTermii resource is a collection of transports that carry dispatched alerts to the external Termii service."
        }
      ]
    },
    {
      "url": "/api/transport-termii/{id}",
      "method": "apiTransportTermiiIdPatch",
      "httpMethod": "patch",
      "tag": "TransportTermii",
      "typeScriptTag": "transportTermii",
      "description": "Updates the TransportTermii resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTermii identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "termiiApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "termiiChannel",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "termiiFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportTermii resource is a collection of transports that carry dispatched alerts to the external Termii service."
        }
      ]
    },
    {
      "url": "/api/transport-termii/{id}",
      "method": "apiTransportTermiiIdPut",
      "httpMethod": "put",
      "tag": "TransportTermii",
      "typeScriptTag": "transportTermii",
      "description": "Replaces the TransportTermii resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTermii identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "termiiApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "termiiChannel",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "termiiFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportTermii resource is a collection of transports that carry dispatched alerts to the external Termii service."
        }
      ]
    },
    {
      "url": "/api/transport-trello",
      "method": "apiTransportTrelloGetCollection",
      "httpMethod": "get",
      "tag": "TransportTrello",
      "typeScriptTag": "transportTrello",
      "description": "Retrieves the collection of TransportTrello resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-trello",
      "method": "apiTransportTrelloPost",
      "httpMethod": "post",
      "tag": "TransportTrello",
      "typeScriptTag": "transportTrello",
      "description": "Creates a TransportTrello resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "trelloApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "trelloApiToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "trelloListId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportTrello resource is a collection of transports that carry dispatched alerts to the external Trello service."
        }
      ]
    },
    {
      "url": "/api/transport-trello/{id}",
      "method": "apiTransportTrelloIdDelete",
      "httpMethod": "delete",
      "tag": "TransportTrello",
      "typeScriptTag": "transportTrello",
      "description": "Removes the TransportTrello resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTrello identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-trello/{id}",
      "method": "apiTransportTrelloIdGet",
      "httpMethod": "get",
      "tag": "TransportTrello",
      "typeScriptTag": "transportTrello",
      "description": "Retrieves a TransportTrello resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTrello identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportTrello resource is a collection of transports that carry dispatched alerts to the external Trello service."
        }
      ]
    },
    {
      "url": "/api/transport-trello/{id}",
      "method": "apiTransportTrelloIdPatch",
      "httpMethod": "patch",
      "tag": "TransportTrello",
      "typeScriptTag": "transportTrello",
      "description": "Updates the TransportTrello resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTrello identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "trelloApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "trelloApiToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "trelloListId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportTrello resource is a collection of transports that carry dispatched alerts to the external Trello service."
        }
      ]
    },
    {
      "url": "/api/transport-trello/{id}",
      "method": "apiTransportTrelloIdPut",
      "httpMethod": "put",
      "tag": "TransportTrello",
      "typeScriptTag": "transportTrello",
      "description": "Replaces the TransportTrello resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTrello identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "trelloApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "trelloApiToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "trelloListId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportTrello resource is a collection of transports that carry dispatched alerts to the external Trello service."
        }
      ]
    },
    {
      "url": "/api/transport-turbo-sms",
      "method": "apiTransportTurboSmsGetCollection",
      "httpMethod": "get",
      "tag": "TransportTurboSms",
      "typeScriptTag": "transportTurboSms",
      "description": "Retrieves the collection of TransportTurboSms resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-turbo-sms",
      "method": "apiTransportTurboSmsPost",
      "httpMethod": "post",
      "tag": "TransportTurboSms",
      "typeScriptTag": "transportTurboSms",
      "description": "Creates a TransportTurboSms resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "turboSmsAuthToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "turboSmsFrom",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportTurboSms resource is a collection of transports that carry dispatched alerts to the external TurboSms service."
        }
      ]
    },
    {
      "url": "/api/transport-turbo-sms/{id}",
      "method": "apiTransportTurboSmsIdDelete",
      "httpMethod": "delete",
      "tag": "TransportTurboSms",
      "typeScriptTag": "transportTurboSms",
      "description": "Removes the TransportTurboSms resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTurboSms identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-turbo-sms/{id}",
      "method": "apiTransportTurboSmsIdGet",
      "httpMethod": "get",
      "tag": "TransportTurboSms",
      "typeScriptTag": "transportTurboSms",
      "description": "Retrieves a TransportTurboSms resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTurboSms identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportTurboSms resource is a collection of transports that carry dispatched alerts to the external TurboSms service."
        }
      ]
    },
    {
      "url": "/api/transport-turbo-sms/{id}",
      "method": "apiTransportTurboSmsIdPatch",
      "httpMethod": "patch",
      "tag": "TransportTurboSms",
      "typeScriptTag": "transportTurboSms",
      "description": "Updates the TransportTurboSms resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTurboSms identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "turboSmsAuthToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "turboSmsFrom",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportTurboSms resource is a collection of transports that carry dispatched alerts to the external TurboSms service."
        }
      ]
    },
    {
      "url": "/api/transport-turbo-sms/{id}",
      "method": "apiTransportTurboSmsIdPut",
      "httpMethod": "put",
      "tag": "TransportTurboSms",
      "typeScriptTag": "transportTurboSms",
      "description": "Replaces the TransportTurboSms resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTurboSms identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "turboSmsAuthToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "turboSmsFrom",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportTurboSms resource is a collection of transports that carry dispatched alerts to the external TurboSms service."
        }
      ]
    },
    {
      "url": "/api/transport-twilio",
      "method": "apiTransportTwilioGetCollection",
      "httpMethod": "get",
      "tag": "TransportTwilio",
      "typeScriptTag": "transportTwilio",
      "description": "Retrieves the collection of TransportTwilio resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-twilio",
      "method": "apiTransportTwilioPost",
      "httpMethod": "post",
      "tag": "TransportTwilio",
      "typeScriptTag": "transportTwilio",
      "description": "Creates a TransportTwilio resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "twilioFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "twilioSid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "twilioToken",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportTwilio resource is a collection of transports that carry dispatched alerts to the external Twilio service."
        }
      ]
    },
    {
      "url": "/api/transport-twilio/{id}",
      "method": "apiTransportTwilioIdDelete",
      "httpMethod": "delete",
      "tag": "TransportTwilio",
      "typeScriptTag": "transportTwilio",
      "description": "Removes the TransportTwilio resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTwilio identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-twilio/{id}",
      "method": "apiTransportTwilioIdGet",
      "httpMethod": "get",
      "tag": "TransportTwilio",
      "typeScriptTag": "transportTwilio",
      "description": "Retrieves a TransportTwilio resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTwilio identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportTwilio resource is a collection of transports that carry dispatched alerts to the external Twilio service."
        }
      ]
    },
    {
      "url": "/api/transport-twilio/{id}",
      "method": "apiTransportTwilioIdPatch",
      "httpMethod": "patch",
      "tag": "TransportTwilio",
      "typeScriptTag": "transportTwilio",
      "description": "Updates the TransportTwilio resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTwilio identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "twilioFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "twilioSid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "twilioToken",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportTwilio resource is a collection of transports that carry dispatched alerts to the external Twilio service."
        }
      ]
    },
    {
      "url": "/api/transport-twilio/{id}",
      "method": "apiTransportTwilioIdPut",
      "httpMethod": "put",
      "tag": "TransportTwilio",
      "typeScriptTag": "transportTwilio",
      "description": "Replaces the TransportTwilio resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTwilio identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "twilioFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "twilioSid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "twilioToken",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportTwilio resource is a collection of transports that carry dispatched alerts to the external Twilio service."
        }
      ]
    },
    {
      "url": "/api/transport-twitter",
      "method": "apiTransportTwitterGetCollection",
      "httpMethod": "get",
      "tag": "TransportTwitter",
      "typeScriptTag": "transportTwitter",
      "description": "Retrieves the collection of TransportTwitter resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-twitter",
      "method": "apiTransportTwitterPost",
      "httpMethod": "post",
      "tag": "TransportTwitter",
      "typeScriptTag": "transportTwitter",
      "description": "Creates a TransportTwitter resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "twitterAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportTwitter resource is a collection of transports that carry dispatched alerts to the external Twitter service."
        }
      ]
    },
    {
      "url": "/api/transport-twitter/{id}",
      "method": "apiTransportTwitterIdDelete",
      "httpMethod": "delete",
      "tag": "TransportTwitter",
      "typeScriptTag": "transportTwitter",
      "description": "Removes the TransportTwitter resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTwitter identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-twitter/{id}",
      "method": "apiTransportTwitterIdGet",
      "httpMethod": "get",
      "tag": "TransportTwitter",
      "typeScriptTag": "transportTwitter",
      "description": "Retrieves a TransportTwitter resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTwitter identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportTwitter resource is a collection of transports that carry dispatched alerts to the external Twitter service."
        }
      ]
    },
    {
      "url": "/api/transport-twitter/{id}",
      "method": "apiTransportTwitterIdPatch",
      "httpMethod": "patch",
      "tag": "TransportTwitter",
      "typeScriptTag": "transportTwitter",
      "description": "Updates the TransportTwitter resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTwitter identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "twitterAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportTwitter resource is a collection of transports that carry dispatched alerts to the external Twitter service."
        }
      ]
    },
    {
      "url": "/api/transport-twitter/{id}",
      "method": "apiTransportTwitterIdPut",
      "httpMethod": "put",
      "tag": "TransportTwitter",
      "typeScriptTag": "transportTwitter",
      "description": "Replaces the TransportTwitter resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportTwitter identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "twitterAccessToken",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportTwitter resource is a collection of transports that carry dispatched alerts to the external Twitter service."
        }
      ]
    },
    {
      "url": "/api/transport-vonage",
      "method": "apiTransportVonageGetCollection",
      "httpMethod": "get",
      "tag": "TransportVonage",
      "typeScriptTag": "transportVonage",
      "description": "Retrieves the collection of TransportVonage resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-vonage",
      "method": "apiTransportVonagePost",
      "httpMethod": "post",
      "tag": "TransportVonage",
      "typeScriptTag": "transportVonage",
      "description": "Creates a TransportVonage resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "vonageFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "vonageKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "vonageSecret",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportVonage resource is a collection of transports that carry dispatched alerts to the external Vonage service."
        }
      ]
    },
    {
      "url": "/api/transport-vonage/{id}",
      "method": "apiTransportVonageIdDelete",
      "httpMethod": "delete",
      "tag": "TransportVonage",
      "typeScriptTag": "transportVonage",
      "description": "Removes the TransportVonage resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportVonage identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-vonage/{id}",
      "method": "apiTransportVonageIdGet",
      "httpMethod": "get",
      "tag": "TransportVonage",
      "typeScriptTag": "transportVonage",
      "description": "Retrieves a TransportVonage resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportVonage identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportVonage resource is a collection of transports that carry dispatched alerts to the external Vonage service."
        }
      ]
    },
    {
      "url": "/api/transport-vonage/{id}",
      "method": "apiTransportVonageIdPatch",
      "httpMethod": "patch",
      "tag": "TransportVonage",
      "typeScriptTag": "transportVonage",
      "description": "Updates the TransportVonage resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportVonage identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "vonageFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "vonageKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "vonageSecret",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportVonage resource is a collection of transports that carry dispatched alerts to the external Vonage service."
        }
      ]
    },
    {
      "url": "/api/transport-vonage/{id}",
      "method": "apiTransportVonageIdPut",
      "httpMethod": "put",
      "tag": "TransportVonage",
      "typeScriptTag": "transportVonage",
      "description": "Replaces the TransportVonage resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportVonage identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "vonageFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "vonageKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "vonageSecret",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportVonage resource is a collection of transports that carry dispatched alerts to the external Vonage service."
        }
      ]
    },
    {
      "url": "/api/transport-webhook",
      "method": "apiTransportWebhookGetCollection",
      "httpMethod": "get",
      "tag": "TransportWebhook",
      "typeScriptTag": "transportWebhook",
      "description": "Retrieves the collection of TransportWebhook resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-webhook",
      "method": "apiTransportWebhookPost",
      "httpMethod": "post",
      "tag": "TransportWebhook",
      "typeScriptTag": "transportWebhook",
      "description": "Creates a TransportWebhook resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "httpMethodCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mustBeEncryptedValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "webhookHeaders",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "webhookUrl",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportWebhook resource is a collection of transports that carry dispatched alerts to any external webhook destination."
        }
      ]
    },
    {
      "url": "/api/transport-webhook/{id}",
      "method": "apiTransportWebhookIdDelete",
      "httpMethod": "delete",
      "tag": "TransportWebhook",
      "typeScriptTag": "transportWebhook",
      "description": "Removes the TransportWebhook resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportWebhook identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-webhook/{id}",
      "method": "apiTransportWebhookIdGet",
      "httpMethod": "get",
      "tag": "TransportWebhook",
      "typeScriptTag": "transportWebhook",
      "description": "Retrieves a TransportWebhook resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportWebhook identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportWebhook resource is a collection of transports that carry dispatched alerts to any external webhook destination."
        }
      ]
    },
    {
      "url": "/api/transport-webhook/{id}",
      "method": "apiTransportWebhookIdPatch",
      "httpMethod": "patch",
      "tag": "TransportWebhook",
      "typeScriptTag": "transportWebhook",
      "description": "Updates the TransportWebhook resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportWebhook identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "httpMethodCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mustBeEncryptedValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "webhookHeaders",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "webhookUrl",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportWebhook resource is a collection of transports that carry dispatched alerts to any external webhook destination."
        }
      ]
    },
    {
      "url": "/api/transport-webhook/{id}",
      "method": "apiTransportWebhookIdPut",
      "httpMethod": "put",
      "tag": "TransportWebhook",
      "typeScriptTag": "transportWebhook",
      "description": "Replaces the TransportWebhook resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportWebhook identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "httpMethodCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mustBeEncryptedValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "webhookHeaders",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "webhookUrl",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportWebhook resource is a collection of transports that carry dispatched alerts to any external webhook destination."
        }
      ]
    },
    {
      "url": "/api/transport-yunpian",
      "method": "apiTransportYunpianGetCollection",
      "httpMethod": "get",
      "tag": "TransportYunpian",
      "typeScriptTag": "transportYunpian",
      "description": "Retrieves the collection of TransportYunpian resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-yunpian",
      "method": "apiTransportYunpianPost",
      "httpMethod": "post",
      "tag": "TransportYunpian",
      "typeScriptTag": "transportYunpian",
      "description": "Creates a TransportYunpian resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "yunpianApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportYunpian resource is a collection of transports that carry dispatched alerts to the external Yunpian service."
        }
      ]
    },
    {
      "url": "/api/transport-yunpian/{id}",
      "method": "apiTransportYunpianIdDelete",
      "httpMethod": "delete",
      "tag": "TransportYunpian",
      "typeScriptTag": "transportYunpian",
      "description": "Removes the TransportYunpian resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportYunpian identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-yunpian/{id}",
      "method": "apiTransportYunpianIdGet",
      "httpMethod": "get",
      "tag": "TransportYunpian",
      "typeScriptTag": "transportYunpian",
      "description": "Retrieves a TransportYunpian resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportYunpian identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportYunpian resource is a collection of transports that carry dispatched alerts to the external Yunpian service."
        }
      ]
    },
    {
      "url": "/api/transport-yunpian/{id}",
      "method": "apiTransportYunpianIdPatch",
      "httpMethod": "patch",
      "tag": "TransportYunpian",
      "typeScriptTag": "transportYunpian",
      "description": "Updates the TransportYunpian resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportYunpian identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "yunpianApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportYunpian resource is a collection of transports that carry dispatched alerts to the external Yunpian service."
        }
      ]
    },
    {
      "url": "/api/transport-yunpian/{id}",
      "method": "apiTransportYunpianIdPut",
      "httpMethod": "put",
      "tag": "TransportYunpian",
      "typeScriptTag": "transportYunpian",
      "description": "Replaces the TransportYunpian resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportYunpian identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "yunpianApiKey",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportYunpian resource is a collection of transports that carry dispatched alerts to the external Yunpian service."
        }
      ]
    },
    {
      "url": "/api/transport-zendesk",
      "method": "apiTransportZendeskGetCollection",
      "httpMethod": "get",
      "tag": "TransportZendesk",
      "typeScriptTag": "transportZendesk",
      "description": "Retrieves the collection of TransportZendesk resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-zendesk",
      "method": "apiTransportZendeskPost",
      "httpMethod": "post",
      "tag": "TransportZendesk",
      "typeScriptTag": "transportZendesk",
      "description": "Creates a TransportZendesk resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zendeskEmail",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zendeskHost",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zendeskToken",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportZendesk resource is a collection of transports that carry dispatched alerts to the external Zendesk service."
        }
      ]
    },
    {
      "url": "/api/transport-zendesk/{id}",
      "method": "apiTransportZendeskIdDelete",
      "httpMethod": "delete",
      "tag": "TransportZendesk",
      "typeScriptTag": "transportZendesk",
      "description": "Removes the TransportZendesk resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportZendesk identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-zendesk/{id}",
      "method": "apiTransportZendeskIdGet",
      "httpMethod": "get",
      "tag": "TransportZendesk",
      "typeScriptTag": "transportZendesk",
      "description": "Retrieves a TransportZendesk resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportZendesk identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportZendesk resource is a collection of transports that carry dispatched alerts to the external Zendesk service."
        }
      ]
    },
    {
      "url": "/api/transport-zendesk/{id}",
      "method": "apiTransportZendeskIdPatch",
      "httpMethod": "patch",
      "tag": "TransportZendesk",
      "typeScriptTag": "transportZendesk",
      "description": "Updates the TransportZendesk resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportZendesk identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zendeskEmail",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zendeskHost",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zendeskToken",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportZendesk resource is a collection of transports that carry dispatched alerts to the external Zendesk service."
        }
      ]
    },
    {
      "url": "/api/transport-zendesk/{id}",
      "method": "apiTransportZendeskIdPut",
      "httpMethod": "put",
      "tag": "TransportZendesk",
      "typeScriptTag": "transportZendesk",
      "description": "Replaces the TransportZendesk resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportZendesk identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zendeskEmail",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zendeskHost",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zendeskToken",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportZendesk resource is a collection of transports that carry dispatched alerts to the external Zendesk service."
        }
      ]
    },
    {
      "url": "/api/transport-zulip",
      "method": "apiTransportZulipGetCollection",
      "httpMethod": "get",
      "tag": "TransportZulip",
      "typeScriptTag": "transportZulip",
      "description": "Retrieves the collection of TransportZulip resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataSegmentCode[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition[]",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/transport-zulip",
      "method": "apiTransportZulipPost",
      "httpMethod": "post",
      "tag": "TransportZulip",
      "typeScriptTag": "transportZulip",
      "description": "Creates a TransportZulip resource.",
      "parameters": [
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "partition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zulipChannel",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zulipEmail",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zulipHost",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zulipToken",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The TransportZulip resource is a collection of transports that carry dispatched alerts to the external Zulip service."
        }
      ]
    },
    {
      "url": "/api/transport-zulip/{id}",
      "method": "apiTransportZulipIdDelete",
      "httpMethod": "delete",
      "tag": "TransportZulip",
      "typeScriptTag": "transportZulip",
      "description": "Removes the TransportZulip resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportZulip identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transport-zulip/{id}",
      "method": "apiTransportZulipIdGet",
      "httpMethod": "get",
      "tag": "TransportZulip",
      "typeScriptTag": "transportZulip",
      "description": "Retrieves a TransportZulip resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportZulip identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportZulip resource is a collection of transports that carry dispatched alerts to the external Zulip service."
        }
      ]
    },
    {
      "url": "/api/transport-zulip/{id}",
      "method": "apiTransportZulipIdPatch",
      "httpMethod": "patch",
      "tag": "TransportZulip",
      "typeScriptTag": "transportZulip",
      "description": "Updates the TransportZulip resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportZulip identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zulipChannel",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zulipEmail",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zulipHost",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zulipToken",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportZulip resource is a collection of transports that carry dispatched alerts to the external Zulip service."
        }
      ]
    },
    {
      "url": "/api/transport-zulip/{id}",
      "method": "apiTransportZulipIdPut",
      "httpMethod": "put",
      "tag": "TransportZulip",
      "typeScriptTag": "transportZulip",
      "description": "Replaces the TransportZulip resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "TransportZulip identifier"
        },
        {
          "name": "dataSegmentCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transportName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zulipChannel",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zulipEmail",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zulipHost",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zulipToken",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TransportZulip resource is a collection of transports that carry dispatched alerts to the external Zulip service."
        }
      ]
    },
    {
      "url": "/api/user-account",
      "method": "apiUserAccountGetCollection",
      "httpMethod": "get",
      "tag": "UserAccount",
      "typeScriptTag": "userAccount",
      "description": "Retrieves the collection of UserAccount resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/user-account-level-code",
      "method": "apiUserAccountLevelCodeGetCollection",
      "httpMethod": "get",
      "tag": "UserAccountLevelCode",
      "typeScriptTag": "userAccountLevelCode",
      "description": "Retrieves the collection of UserAccountLevelCode resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "properties[]",
          "schema": "array",
          "required": false,
          "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/user-account-level-code/{id}",
      "method": "apiUserAccountLevelCodeIdGet",
      "httpMethod": "get",
      "tag": "UserAccountLevelCode",
      "typeScriptTag": "userAccountLevelCode",
      "description": "Retrieves a UserAccountLevelCode resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "UserAccountLevelCode identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The UserAccountLevelCode resource is a set of codes that describes the different levels that can be assigned to user accounts."
        }
      ]
    },
    {
      "url": "/api/user-account/{id}",
      "method": "apiUserAccountIdGet",
      "httpMethod": "get",
      "tag": "UserAccount",
      "typeScriptTag": "userAccount",
      "description": "Retrieves a UserAccount resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "UserAccount identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The UserAccount resource contains basic information regarding the authenticated user account."
        }
      ]
    },
    {
      "url": "/api/user-account/{id}",
      "method": "apiUserAccountIdPatch",
      "httpMethod": "patch",
      "tag": "UserAccount",
      "typeScriptTag": "userAccount",
      "description": "Updates the UserAccount resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "UserAccount identifier"
        },
        {
          "name": "creditsOveragePercentTripSwitch",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The UserAccount resource contains basic information regarding the authenticated user account."
        }
      ]
    },
    {
      "url": "/api/user-account/{id}",
      "method": "apiUserAccountIdPut",
      "httpMethod": "put",
      "tag": "UserAccount",
      "typeScriptTag": "userAccount",
      "description": "Replaces the UserAccount resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "UserAccount identifier"
        },
        {
          "name": "creditsOveragePercentTripSwitch",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The UserAccount resource contains basic information regarding the authenticated user account."
        }
      ]
    }
  ],
  "apiBaseUrl": "/",
  "apiDescription": "<p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>",
  "apiTitle": "Alerter System API",
  "endpoints": 186,
  "sdkMethods": 686,
  "schemas": 576,
  "parameters": 2395,
  "difficultyScore": 1572.75,
  "difficulty": "Very Hard"
}