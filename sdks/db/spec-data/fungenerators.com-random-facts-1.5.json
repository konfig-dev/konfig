{
  "providerName": "fungenerators.com",
  "openApiRaw": "https://fungenerators.com/yaml/facts.yaml",
  "securitySchemes": {
    "X-Fungenerators-Api-Secret": {
      "in": "header",
      "name": "X-Fungenerators-Api-Secret",
      "type": "apiKey"
    }
  },
  "homepage": "fungenerators.com",
  "serviceName": "random-facts",
  "apiVersion": "1.5",
  "methods": [
    {
      "url": "/fact",
      "method": "/factDelete",
      "httpMethod": "delete",
      "tag": "Private Facts",
      "description": "Delete a Fact entry identified by the id.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Fact ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/fact",
      "method": "/factGet",
      "httpMethod": "get",
      "tag": "Random Facts",
      "description": "Get a Fact belonging to the id.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": "ID of the fact to fetch"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/fact",
      "method": "/factPut",
      "httpMethod": "put",
      "tag": "Private Facts",
      "description": "Add a Fact entry to the database (private collection).",
      "parameters": [
        {
          "name": "fact",
          "schema": "string",
          "required": true,
          "description": "Fact Text"
        },
        {
          "name": "category",
          "schema": "string",
          "required": true,
          "description": "Category of the fact"
        },
        {
          "name": "subcategory",
          "schema": "string",
          "required": true,
          "description": "Sub Category of the fact"
        },
        {
          "name": "tags",
          "schema": "string",
          "required": true,
          "description": "Tags"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/fact/categories",
      "method": "/fact/categoriesGet",
      "httpMethod": "get",
      "tag": "Random Facts",
      "description": "Get a random Fact.",
      "parameters": [
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "start"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/fact/fod",
      "method": "/fact/fodGet",
      "httpMethod": "get",
      "tag": "Fact of the day",
      "description": "Get fact of the day for the given category.",
      "parameters": [
        {
          "name": "category",
          "schema": "string",
          "required": false,
          "description": "Category to get the fact of the day from. Must be one from the list returned from /fact/fod/categories"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/fact/fod/categories",
      "method": "/fact/fod/categoriesGet",
      "httpMethod": "get",
      "tag": "Fact of the day",
      "description": "Get the list of supported fact of the day categories.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/fact/numbers",
      "method": "/fact/numbersGet",
      "httpMethod": "get",
      "tag": "Number Facts",
      "description": "Get a random fact about a number",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": true,
          "description": "Number value"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/fact/onthisday/born",
      "method": "/fact/onthisday/bornGet",
      "httpMethod": "get",
      "tag": "On this day",
      "description": "Returns a random ( famous/ relatively famous ) person born on a given day and month",
      "parameters": [
        {
          "name": "month",
          "schema": "string",
          "required": false,
          "description": "Optional month (1-12). Defaults to current month"
        },
        {
          "name": "day",
          "schema": "string",
          "required": false,
          "description": "Optional day of the month (1- 28/30/31 based on the month). Defaults to current day of the month."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/fact/onthisday/died",
      "method": "/fact/onthisday/diedGet",
      "httpMethod": "get",
      "tag": "On this day",
      "description": "Returns a random ( famous/ relatively famous ) person died on a given day and month",
      "parameters": [
        {
          "name": "month",
          "schema": "string",
          "required": false,
          "description": "Optional month (1-12). Defaults to current month"
        },
        {
          "name": "day",
          "schema": "string",
          "required": false,
          "description": "Optional day of the month (1- 28/30/31 based on the month). Defaults to current day of the month."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/fact/onthisday/event",
      "method": "/fact/onthisday/eventGet",
      "httpMethod": "get",
      "tag": "On this day",
      "description": "Returns a random ( famous/ relatively famous ) historic event on a given day and month",
      "parameters": [
        {
          "name": "month",
          "schema": "string",
          "required": false,
          "description": "Optional month (1-12). Defaults to current month"
        },
        {
          "name": "day",
          "schema": "string",
          "required": false,
          "description": "Optional day of the month (1- 28/30/31 based on the month). Defaults to current day of the month."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/fact/random",
      "method": "/fact/randomGet",
      "httpMethod": "get",
      "tag": "Random Facts",
      "description": "Get a random Fact for a given category(optional) and subcategory(optional).",
      "parameters": [
        {
          "name": "category",
          "schema": "string",
          "required": false,
          "description": "Category to get the fact from"
        },
        {
          "name": "subcategory",
          "schema": "string",
          "required": false,
          "description": "Sub Category to get the fact from"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/fact/search",
      "method": "/fact/searchGet",
      "httpMethod": "get",
      "tag": "Random Facts",
      "description": "Search for random Fact which has the text in the query, for a given category(optional) and subcategory(optional).",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "Text to search for in the facts"
        },
        {
          "name": "category",
          "schema": "string",
          "required": false,
          "description": "Category to get the fact from"
        },
        {
          "name": "subcategory",
          "schema": "string",
          "required": false,
          "description": "Sub Category to get the fact from"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.fungenerators.com",
  "apiDescription": "A full featured Facts API. REST access with json/xml/jsonp result support. On this day birth and death support, random fact, keyword search support etc. Below is the documentation for the Random Facts API calls. You can try them out right here. [Click here to subscribe](http://fungenerators.com/api/facts/)\n",
  "apiTitle": "Facts API",
  "endpoints": 10,
  "sdkMethods": 12,
  "schemas": 0,
  "parameters": 20,
  "contactUrl": "http://fungenerators.com/",
  "difficultyScore": 17,
  "difficulty": "Easy"
}