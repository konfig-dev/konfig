{
  "providerName": "adyen.com",
  "openApiRaw": "https://raw.githubusercontent.com/Adyen/adyen-openapi/main/json/StoredValueService-v46.json",
  "homepage": "adyen.com",
  "serviceName": "StoredValueService",
  "apiVersion": "46",
  "methods": [
    {
      "url": "/changeStatus",
      "method": "postChangeStatus",
      "httpMethod": "post",
      "tag": "General",
      "description": "Changes the status of the payment method.",
      "parameters": [
        {
          "name": "amount",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "merchantAccount",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "paymentMethod",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "recurringDetailReference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "shopperInteraction",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "shopperReference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "store",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/checkBalance",
      "method": "postCheckBalance",
      "httpMethod": "post",
      "tag": "General",
      "description": "Checks the balance.",
      "parameters": [
        {
          "name": "amount",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "merchantAccount",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "paymentMethod",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "recurringDetailReference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "shopperInteraction",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "shopperReference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "store",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/issue",
      "method": "postIssue",
      "httpMethod": "post",
      "tag": "General",
      "description": "Issues a new card.",
      "parameters": [
        {
          "name": "amount",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "merchantAccount",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "paymentMethod",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "recurringDetailReference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "shopperInteraction",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "shopperReference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "store",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/load",
      "method": "postLoad",
      "httpMethod": "post",
      "tag": "General",
      "description": "Loads the payment method.",
      "parameters": [
        {
          "name": "amount",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "loadType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "merchantAccount",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "paymentMethod",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "recurringDetailReference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "shopperInteraction",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "shopperReference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "store",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/mergeBalance",
      "method": "postMergeBalance",
      "httpMethod": "post",
      "tag": "General",
      "description": "Merge the balance of two cards.",
      "parameters": [
        {
          "name": "amount",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "merchantAccount",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "paymentMethod",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "recurringDetailReference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "shopperInteraction",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "shopperReference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sourcePaymentMethod",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "store",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/voidTransaction",
      "method": "postVoidTransaction",
      "httpMethod": "post",
      "tag": "General",
      "description": "Voids a transaction.",
      "parameters": [
        {
          "name": "merchantAccount",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "originalReference",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "store",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tenderReference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "uniqueTerminalId",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://pal-test.adyen.com/pal/servlet/StoredValue/v46",
  "apiDescription": "A set of API endpoints to manage stored value products.",
  "apiTitle": "Adyen Stored Value API",
  "endpoints": 6,
  "sdkMethods": 6,
  "schemas": 14,
  "parameters": 49,
  "contactUrl": "https://github.com/Adyen/adyen-openapi",
  "difficultyScore": 25.25,
  "difficulty": "Easy"
}