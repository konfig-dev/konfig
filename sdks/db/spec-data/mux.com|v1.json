{
  "providerName": "mux.com",
  "openApiRaw": "https://docs.mux.com/api-spec.json",
  "securitySchemes": {
    "accessToken": {
      "description": "The Mux Video API uses an Access Token and Secret Key for authentication. If you haven't already, [generate a new Access Token](https://dashboard.mux.com/settings/access-tokens) in the Access Token settings of your Mux account dashboard.\n\nOnce you have an Access Token ID and Secret, you can then simply include those as the username (id) and password (secret) in the same way you use traditional basic auth.\n",
      "scheme": "basic",
      "type": "http"
    }
  },
  "homepage": "mux.com",
  "apiVersion": "v1",
  "methods": [
    {
      "url": "/data/v1/dimensions",
      "method": "listDimensions",
      "httpMethod": "get",
      "tag": "Dimensions",
      "description": "List Dimensions",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/dimensions/{DIMENSION_ID}",
      "method": "listDimensionValues",
      "httpMethod": "get",
      "tag": "Dimensions",
      "description": "Lists the values for a specific dimension",
      "parameters": [
        {
          "name": "dimensionId",
          "schema": "string",
          "required": true,
          "description": "ID of the Dimension"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to include in the response"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Offset by this many pages, of the size of `limit`"
        },
        {
          "name": "filters[]",
          "schema": "array",
          "required": false,
          "description": "Limit the results to rows that match conditions from provided key:value pairs. Must be provided as an array query string parameter.\n\nTo exclude rows that match a certain condition, prepend a `!` character to the dimension.\n\nPossible filter names are the same as returned by the List Filters endpoint.\n\nExample:\n\n  * `filters[]=operating_system:windows&filters[]=!country:US`\n"
        },
        {
          "name": "timeframe[]",
          "schema": "array",
          "required": false,
          "description": "Timeframe window to limit results by. Must be provided as an array query string parameter (e.g. timeframe[]=).\n\nAccepted formats are...\n\n  * array of epoch timestamps e.g. `timeframe[]=1498867200&timeframe[]=1498953600`\n  * duration string e.g. `timeframe[]=24:hours or timeframe[]=7:days`\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/errors",
      "method": "listErrors",
      "httpMethod": "get",
      "tag": "Errors",
      "description": "List Errors",
      "parameters": [
        {
          "name": "filters[]",
          "schema": "array",
          "required": false,
          "description": "Limit the results to rows that match conditions from provided key:value pairs. Must be provided as an array query string parameter.\n\nTo exclude rows that match a certain condition, prepend a `!` character to the dimension.\n\nPossible filter names are the same as returned by the List Filters endpoint.\n\nExample:\n\n  * `filters[]=operating_system:windows&filters[]=!country:US`\n"
        },
        {
          "name": "timeframe[]",
          "schema": "array",
          "required": false,
          "description": "Timeframe window to limit results by. Must be provided as an array query string parameter (e.g. timeframe[]=).\n\nAccepted formats are...\n\n  * array of epoch timestamps e.g. `timeframe[]=1498867200&timeframe[]=1498953600`\n  * duration string e.g. `timeframe[]=24:hours or timeframe[]=7:days`\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/exports",
      "method": "listExports",
      "httpMethod": "get",
      "tag": "Exports",
      "description": "List property video view export links",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/exports/views",
      "method": "listExportsViews",
      "httpMethod": "get",
      "tag": "Exports",
      "description": "List available property view exports",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/filters",
      "method": "listFilters",
      "httpMethod": "get",
      "tag": "Filters",
      "description": "List Filters",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/filters/{FILTER_ID}",
      "method": "listFilterValues",
      "httpMethod": "get",
      "tag": "Filters",
      "description": "Lists values for a specific filter",
      "parameters": [
        {
          "name": "filterId",
          "schema": "string",
          "required": true,
          "description": "ID of the Filter"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to include in the response"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Offset by this many pages, of the size of `limit`"
        },
        {
          "name": "filters[]",
          "schema": "array",
          "required": false,
          "description": "Limit the results to rows that match conditions from provided key:value pairs. Must be provided as an array query string parameter.\n\nTo exclude rows that match a certain condition, prepend a `!` character to the dimension.\n\nPossible filter names are the same as returned by the List Filters endpoint.\n\nExample:\n\n  * `filters[]=operating_system:windows&filters[]=!country:US`\n"
        },
        {
          "name": "timeframe[]",
          "schema": "array",
          "required": false,
          "description": "Timeframe window to limit results by. Must be provided as an array query string parameter (e.g. timeframe[]=).\n\nAccepted formats are...\n\n  * array of epoch timestamps e.g. `timeframe[]=1498867200&timeframe[]=1498953600`\n  * duration string e.g. `timeframe[]=24:hours or timeframe[]=7:days`\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/incidents",
      "method": "listIncidents",
      "httpMethod": "get",
      "tag": "Incidents",
      "description": "List Incidents",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to include in the response"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Offset by this many pages, of the size of `limit`"
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Value to order the results by"
        },
        {
          "name": "orderDirection",
          "schema": "string",
          "required": false,
          "description": "Sort order."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Status to filter incidents by"
        },
        {
          "name": "severity",
          "schema": "string",
          "required": false,
          "description": "Severity to filter incidents by"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/incidents/{INCIDENT_ID}",
      "method": "getIncident",
      "httpMethod": "get",
      "tag": "Incidents",
      "description": "Get an Incident",
      "parameters": [
        {
          "name": "incidentId",
          "schema": "string",
          "required": true,
          "description": "ID of the Incident"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/incidents/{INCIDENT_ID}/related",
      "method": "listRelatedIncidents",
      "httpMethod": "get",
      "tag": "Incidents",
      "description": "List Related Incidents",
      "parameters": [
        {
          "name": "incidentId",
          "schema": "string",
          "required": true,
          "description": "ID of the Incident"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to include in the response"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Offset by this many pages, of the size of `limit`"
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Value to order the results by"
        },
        {
          "name": "orderDirection",
          "schema": "string",
          "required": false,
          "description": "Sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/metrics/comparison",
      "method": "listAllMetricValues",
      "httpMethod": "get",
      "tag": "Metrics",
      "description": "List all metric values",
      "parameters": [
        {
          "name": "timeframe[]",
          "schema": "array",
          "required": false,
          "description": "Timeframe window to limit results by. Must be provided as an array query string parameter (e.g. timeframe[]=).\n\nAccepted formats are...\n\n  * array of epoch timestamps e.g. `timeframe[]=1498867200&timeframe[]=1498953600`\n  * duration string e.g. `timeframe[]=24:hours or timeframe[]=7:days`\n"
        },
        {
          "name": "filters[]",
          "schema": "array",
          "required": false,
          "description": "Limit the results to rows that match conditions from provided key:value pairs. Must be provided as an array query string parameter.\n\nTo exclude rows that match a certain condition, prepend a `!` character to the dimension.\n\nPossible filter names are the same as returned by the List Filters endpoint.\n\nExample:\n\n  * `filters[]=operating_system:windows&filters[]=!country:US`\n"
        },
        {
          "name": "dimension",
          "schema": "string",
          "required": false,
          "description": "Dimension the specified value belongs to"
        },
        {
          "name": "value",
          "schema": "string",
          "required": false,
          "description": "Value to show all available metrics for"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/metrics/{METRIC_ID}/breakdown",
      "method": "listBreakdownValues",
      "httpMethod": "get",
      "tag": "Metrics",
      "description": "List breakdown values",
      "parameters": [
        {
          "name": "metricId",
          "schema": "string",
          "required": true,
          "description": "ID of the Metric"
        },
        {
          "name": "groupBy",
          "schema": "string",
          "required": false,
          "description": "Breakdown value to group the results by"
        },
        {
          "name": "measurement",
          "schema": "string",
          "required": false,
          "description": "Measurement for the provided metric. If omitted, the default for the metric will be used."
        },
        {
          "name": "filters[]",
          "schema": "array",
          "required": false,
          "description": "Limit the results to rows that match conditions from provided key:value pairs. Must be provided as an array query string parameter.\n\nTo exclude rows that match a certain condition, prepend a `!` character to the dimension.\n\nPossible filter names are the same as returned by the List Filters endpoint.\n\nExample:\n\n  * `filters[]=operating_system:windows&filters[]=!country:US`\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to include in the response"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Offset by this many pages, of the size of `limit`"
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Value to order the results by"
        },
        {
          "name": "orderDirection",
          "schema": "string",
          "required": false,
          "description": "Sort order."
        },
        {
          "name": "timeframe[]",
          "schema": "array",
          "required": false,
          "description": "Timeframe window to limit results by. Must be provided as an array query string parameter (e.g. timeframe[]=).\n\nAccepted formats are...\n\n  * array of epoch timestamps e.g. `timeframe[]=1498867200&timeframe[]=1498953600`\n  * duration string e.g. `timeframe[]=24:hours or timeframe[]=7:days`\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/metrics/{METRIC_ID}/insights",
      "method": "listInsights",
      "httpMethod": "get",
      "tag": "Metrics",
      "description": "List Insights",
      "parameters": [
        {
          "name": "metricId",
          "schema": "string",
          "required": true,
          "description": "ID of the Metric"
        },
        {
          "name": "measurement",
          "schema": "string",
          "required": false,
          "description": "Measurement for the provided metric. If omitted, the default for the metric will be used."
        },
        {
          "name": "orderDirection",
          "schema": "string",
          "required": false,
          "description": "Sort order."
        },
        {
          "name": "timeframe[]",
          "schema": "array",
          "required": false,
          "description": "Timeframe window to limit results by. Must be provided as an array query string parameter (e.g. timeframe[]=).\n\nAccepted formats are...\n\n  * array of epoch timestamps e.g. `timeframe[]=1498867200&timeframe[]=1498953600`\n  * duration string e.g. `timeframe[]=24:hours or timeframe[]=7:days`\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/metrics/{METRIC_ID}/overall",
      "method": "getOverallValues",
      "httpMethod": "get",
      "tag": "Metrics",
      "description": "Get Overall values",
      "parameters": [
        {
          "name": "metricId",
          "schema": "string",
          "required": true,
          "description": "ID of the Metric"
        },
        {
          "name": "timeframe[]",
          "schema": "array",
          "required": false,
          "description": "Timeframe window to limit results by. Must be provided as an array query string parameter (e.g. timeframe[]=).\n\nAccepted formats are...\n\n  * array of epoch timestamps e.g. `timeframe[]=1498867200&timeframe[]=1498953600`\n  * duration string e.g. `timeframe[]=24:hours or timeframe[]=7:days`\n"
        },
        {
          "name": "filters[]",
          "schema": "array",
          "required": false,
          "description": "Limit the results to rows that match conditions from provided key:value pairs. Must be provided as an array query string parameter.\n\nTo exclude rows that match a certain condition, prepend a `!` character to the dimension.\n\nPossible filter names are the same as returned by the List Filters endpoint.\n\nExample:\n\n  * `filters[]=operating_system:windows&filters[]=!country:US`\n"
        },
        {
          "name": "measurement",
          "schema": "string",
          "required": false,
          "description": "Measurement for the provided metric. If omitted, the default for the metric will be used."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/metrics/{METRIC_ID}/timeseries",
      "method": "getMetricTimeseriesData",
      "httpMethod": "get",
      "tag": "Metrics",
      "description": "Get metric timeseries data",
      "parameters": [
        {
          "name": "metricId",
          "schema": "string",
          "required": true,
          "description": "ID of the Metric"
        },
        {
          "name": "timeframe[]",
          "schema": "array",
          "required": false,
          "description": "Timeframe window to limit results by. Must be provided as an array query string parameter (e.g. timeframe[]=).\n\nAccepted formats are...\n\n  * array of epoch timestamps e.g. `timeframe[]=1498867200&timeframe[]=1498953600`\n  * duration string e.g. `timeframe[]=24:hours or timeframe[]=7:days`\n"
        },
        {
          "name": "filters[]",
          "schema": "array",
          "required": false,
          "description": "Limit the results to rows that match conditions from provided key:value pairs. Must be provided as an array query string parameter.\n\nTo exclude rows that match a certain condition, prepend a `!` character to the dimension.\n\nPossible filter names are the same as returned by the List Filters endpoint.\n\nExample:\n\n  * `filters[]=operating_system:windows&filters[]=!country:US`\n"
        },
        {
          "name": "measurement",
          "schema": "string",
          "required": false,
          "description": "Measurement for the provided metric. If omitted, the default for the metric will be used."
        },
        {
          "name": "orderDirection",
          "schema": "string",
          "required": false,
          "description": "Sort order."
        },
        {
          "name": "groupBy",
          "schema": "string",
          "required": false,
          "description": "Time granularity to group results by. If this value is omitted, a default granularity is chosen based on the timeframe.\n\nFor timeframes of less than 90 minutes, the default granularity is `minute`. Between 90 minutes and 6 hours, the default granularity is `ten_minutes`. Between 6 hours and 15 days inclusive, the default granularity is `hour`. The granularity of timeframes that exceed 15 days is `day`. This default behavior is subject to change; it is strongly suggested that you explicitly specify the granularity.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/monitoring/dimensions",
      "method": "listMonitoringDimensions",
      "httpMethod": "get",
      "tag": "Monitoring",
      "description": "List Monitoring Dimensions",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/monitoring/metrics",
      "method": "listMonitoringMetrics",
      "httpMethod": "get",
      "tag": "Monitoring",
      "description": "List Monitoring Metrics",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/monitoring/metrics/{MONITORING_HISTOGRAM_METRIC_ID}/histogram-timeseries",
      "method": "getMonitoringHistogramTimeseries",
      "httpMethod": "get",
      "tag": "Monitoring",
      "description": "Get Monitoring Histogram Timeseries",
      "parameters": [
        {
          "name": "monitoringHistogramMetricId",
          "schema": "string",
          "required": true,
          "description": "ID of the Monitoring Histogram Metric"
        },
        {
          "name": "filters[]",
          "schema": "array",
          "required": false,
          "description": "Limit the results to rows that match conditions from provided key:value pairs. Must be provided as an array query string parameter.\n\nTo exclude rows that match a certain condition, prepend a `!` character to the dimension.\n\nPossible filter names are the same as returned by the List Monitoring Dimensions endpoint.\n\nExample:\n\n  * `filters[]=operating_system:windows&filters[]=!country:US`\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/monitoring/metrics/{MONITORING_METRIC_ID}/breakdown",
      "method": "getMonitoringBreakdown",
      "httpMethod": "get",
      "tag": "Monitoring",
      "description": "Get Monitoring Breakdown",
      "parameters": [
        {
          "name": "monitoringMetricId",
          "schema": "string",
          "required": true,
          "description": "ID of the Monitoring Metric"
        },
        {
          "name": "dimension",
          "schema": "string",
          "required": false,
          "description": "Dimension the specified value belongs to"
        },
        {
          "name": "timestamp",
          "schema": "integer",
          "required": false,
          "description": "Timestamp to limit results by. This value must be provided as a unix timestamp. Defaults to the current unix timestamp."
        },
        {
          "name": "filters[]",
          "schema": "array",
          "required": false,
          "description": "Limit the results to rows that match conditions from provided key:value pairs. Must be provided as an array query string parameter.\n\nTo exclude rows that match a certain condition, prepend a `!` character to the dimension.\n\nPossible filter names are the same as returned by the List Monitoring Dimensions endpoint.\n\nExample:\n\n  * `filters[]=operating_system:windows&filters[]=!country:US`\n"
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Value to order the results by"
        },
        {
          "name": "orderDirection",
          "schema": "string",
          "required": false,
          "description": "Sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/monitoring/metrics/{MONITORING_METRIC_ID}/breakdown-timeseries",
      "method": "getMonitoringBreakdownTimeseries",
      "httpMethod": "get",
      "tag": "Monitoring",
      "description": "Get Monitoring Breakdown Timeseries",
      "parameters": [
        {
          "name": "monitoringMetricId",
          "schema": "string",
          "required": true,
          "description": "ID of the Monitoring Metric"
        },
        {
          "name": "dimension",
          "schema": "string",
          "required": false,
          "description": "Dimension the specified value belongs to"
        },
        {
          "name": "timeframe[]",
          "schema": "array",
          "required": false,
          "description": "Timeframe window to limit results by. Must be provided as an array query string parameter (e.g. timeframe[]=).\n\nThe default for this is the last 60 seconds of available data. Timeframes larger than 10 minutes are not allowed, and must be within the last 24 hours.\n"
        },
        {
          "name": "filters[]",
          "schema": "array",
          "required": false,
          "description": "Limit the results to rows that match conditions from provided key:value pairs. Must be provided as an array query string parameter.\n\nTo exclude rows that match a certain condition, prepend a `!` character to the dimension.\n\nPossible filter names are the same as returned by the List Monitoring Dimensions endpoint.\n\nExample:\n\n  * `filters[]=operating_system:windows&filters[]=!country:US`\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to include in each timestamp's `value` list.\n\nThe default is 10, and the maximum is 100.\n"
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Value to order the results by"
        },
        {
          "name": "orderDirection",
          "schema": "string",
          "required": false,
          "description": "Sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/monitoring/metrics/{MONITORING_METRIC_ID}/timeseries",
      "method": "getMonitoringTimeseries",
      "httpMethod": "get",
      "tag": "Monitoring",
      "description": "Get Monitoring Timeseries",
      "parameters": [
        {
          "name": "monitoringMetricId",
          "schema": "string",
          "required": true,
          "description": "ID of the Monitoring Metric"
        },
        {
          "name": "filters[]",
          "schema": "array",
          "required": false,
          "description": "Limit the results to rows that match conditions from provided key:value pairs. Must be provided as an array query string parameter.\n\nTo exclude rows that match a certain condition, prepend a `!` character to the dimension.\n\nPossible filter names are the same as returned by the List Monitoring Dimensions endpoint.\n\nExample:\n\n  * `filters[]=operating_system:windows&filters[]=!country:US`\n"
        },
        {
          "name": "timestamp",
          "schema": "integer",
          "required": false,
          "description": "Timestamp to use as the start of the timeseries data. This value must be provided as a unix timestamp. Defaults to 30 minutes ago."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/realtime/dimensions",
      "method": "listRealtimeDimensions",
      "httpMethod": "get",
      "tag": "Real-Time",
      "description": "List Real-Time Dimensions",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/realtime/metrics",
      "method": "listRealtimeMetrics",
      "httpMethod": "get",
      "tag": "Real-Time",
      "description": "List Real-Time Metrics",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/realtime/metrics/{REALTIME_HISTOGRAM_METRIC_ID}/histogram-timeseries",
      "method": "getRealtimeHistogramTimeseries",
      "httpMethod": "get",
      "tag": "Real-Time",
      "description": "Get Real-Time Histogram Timeseries",
      "parameters": [
        {
          "name": "realtimeHistogramMetricId",
          "schema": "string",
          "required": true,
          "description": "ID of the Realtime Histogram Metric"
        },
        {
          "name": "filters[]",
          "schema": "array",
          "required": false,
          "description": "Limit the results to rows that match conditions from provided key:value pairs. Must be provided as an array query string parameter.\n\nTo exclude rows that match a certain condition, prepend a `!` character to the dimension.\n\nPossible filter names are the same as returned by the List Monitoring Dimensions endpoint.\n\nExample:\n\n  * `filters[]=operating_system:windows&filters[]=!country:US`\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/realtime/metrics/{REALTIME_METRIC_ID}/breakdown",
      "method": "getRealtimeBreakdown",
      "httpMethod": "get",
      "tag": "Real-Time",
      "description": "Get Real-Time Breakdown",
      "parameters": [
        {
          "name": "realtimeMetricId",
          "schema": "string",
          "required": true,
          "description": "ID of the Realtime Metric"
        },
        {
          "name": "dimension",
          "schema": "string",
          "required": false,
          "description": "Dimension the specified value belongs to"
        },
        {
          "name": "timestamp",
          "schema": "integer",
          "required": false,
          "description": "Timestamp to limit results by. This value must be provided as a unix timestamp. Defaults to the current unix timestamp."
        },
        {
          "name": "filters[]",
          "schema": "array",
          "required": false,
          "description": "Limit the results to rows that match conditions from provided key:value pairs. Must be provided as an array query string parameter.\n\nTo exclude rows that match a certain condition, prepend a `!` character to the dimension.\n\nPossible filter names are the same as returned by the List Monitoring Dimensions endpoint.\n\nExample:\n\n  * `filters[]=operating_system:windows&filters[]=!country:US`\n"
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Value to order the results by"
        },
        {
          "name": "orderDirection",
          "schema": "string",
          "required": false,
          "description": "Sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/realtime/metrics/{REALTIME_METRIC_ID}/timeseries",
      "method": "getRealtimeTimeseries",
      "httpMethod": "get",
      "tag": "Real-Time",
      "description": "Get Real-Time Timeseries",
      "parameters": [
        {
          "name": "realtimeMetricId",
          "schema": "string",
          "required": true,
          "description": "ID of the Realtime Metric"
        },
        {
          "name": "filters[]",
          "schema": "array",
          "required": false,
          "description": "Limit the results to rows that match conditions from provided key:value pairs. Must be provided as an array query string parameter.\n\nTo exclude rows that match a certain condition, prepend a `!` character to the dimension.\n\nPossible filter names are the same as returned by the List Monitoring Dimensions endpoint.\n\nExample:\n\n  * `filters[]=operating_system:windows&filters[]=!country:US`\n"
        },
        {
          "name": "timestamp",
          "schema": "integer",
          "required": false,
          "description": "Timestamp to use as the start of the timeseries data. This value must be provided as a unix timestamp. Defaults to 30 minutes ago."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/video-views",
      "method": "listVideoViews",
      "httpMethod": "get",
      "tag": "Video Views",
      "description": "List Video Views",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to include in the response"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Offset by this many pages, of the size of `limit`"
        },
        {
          "name": "viewerId",
          "schema": "string",
          "required": false,
          "description": "Viewer ID to filter results by. This value may be provided by the integration, or may be created by Mux."
        },
        {
          "name": "errorId",
          "schema": "integer",
          "required": false,
          "description": "Filter video views by the provided error ID (as returned in the error_type_id field in the list video views endpoint). If you provide any as the error ID, this will filter the results to those with any error."
        },
        {
          "name": "orderDirection",
          "schema": "string",
          "required": false,
          "description": "Sort order."
        },
        {
          "name": "filters[]",
          "schema": "array",
          "required": false,
          "description": "Limit the results to rows that match conditions from provided key:value pairs. Must be provided as an array query string parameter.\n\nTo exclude rows that match a certain condition, prepend a `!` character to the dimension.\n\nPossible filter names are the same as returned by the List Filters endpoint.\n\nExample:\n\n  * `filters[]=operating_system:windows&filters[]=!country:US`\n"
        },
        {
          "name": "timeframe[]",
          "schema": "array",
          "required": false,
          "description": "Timeframe window to limit results by. Must be provided as an array query string parameter (e.g. timeframe[]=).\n\nAccepted formats are...\n\n  * array of epoch timestamps e.g. `timeframe[]=1498867200&timeframe[]=1498953600`\n  * duration string e.g. `timeframe[]=24:hours or timeframe[]=7:days`\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data/v1/video-views/{VIDEO_VIEW_ID}",
      "method": "getVideoView",
      "httpMethod": "get",
      "tag": "Video Views",
      "description": "Get a Video View",
      "parameters": [
        {
          "name": "videoViewId",
          "schema": "string",
          "required": true,
          "description": "ID of the Video View"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/system/v1/signing-keys",
      "method": "listSigningKeys",
      "httpMethod": "get",
      "tag": "Signing Keys",
      "description": "List signing keys",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to include in the response"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Offset by this many pages, of the size of `limit`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/system/v1/signing-keys",
      "method": "createSigningKey",
      "httpMethod": "post",
      "tag": "Signing Keys",
      "description": "Create a signing key",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/system/v1/signing-keys/{SIGNING_KEY_ID}",
      "method": "deleteSigningKey",
      "httpMethod": "delete",
      "tag": "Signing Keys",
      "description": "Delete a signing key",
      "parameters": [
        {
          "name": "signingKeyId",
          "schema": "string",
          "required": true,
          "description": "The ID of the signing key."
        }
      ],
      "responses": []
    },
    {
      "url": "/system/v1/signing-keys/{SIGNING_KEY_ID}",
      "method": "getSigningKey",
      "httpMethod": "get",
      "tag": "Signing Keys",
      "description": "Retrieve a signing key",
      "parameters": [
        {
          "name": "signingKeyId",
          "schema": "string",
          "required": true,
          "description": "The ID of the signing key."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/assets",
      "method": "listAssets",
      "httpMethod": "get",
      "tag": "Assets",
      "description": "List assets",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to include in the response"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Offset by this many pages, of the size of `limit`"
        },
        {
          "name": "liveStreamId",
          "schema": "string",
          "required": false,
          "description": "Filter response to return all the assets for this live stream only"
        },
        {
          "name": "uploadId",
          "schema": "string",
          "required": false,
          "description": "Filter response to return an asset created from this direct upload only"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/assets",
      "method": "createAsset",
      "httpMethod": "post",
      "tag": "Assets",
      "description": "Create an asset",
      "parameters": [
        {
          "name": "encoding_tier",
          "schema": "string",
          "description": ""
        },
        {
          "name": "input",
          "schema": "array",
          "description": ""
        },
        {
          "name": "master_access",
          "schema": "string",
          "description": ""
        },
        {
          "name": "max_resolution_tier",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mp4_support",
          "schema": "string",
          "description": ""
        },
        {
          "name": "normalize_audio",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "passthrough",
          "schema": "string",
          "description": ""
        },
        {
          "name": "per_title_encode",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "playback_policy",
          "schema": "array",
          "description": ""
        },
        {
          "name": "test",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/assets/{ASSET_ID}",
      "method": "deleteAsset",
      "httpMethod": "delete",
      "tag": "Assets",
      "description": "Delete an asset",
      "parameters": [
        {
          "name": "assetId",
          "schema": "string",
          "required": true,
          "description": "The asset ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/video/v1/assets/{ASSET_ID}",
      "method": "getAsset",
      "httpMethod": "get",
      "tag": "Assets",
      "description": "Retrieve an asset",
      "parameters": [
        {
          "name": "assetId",
          "schema": "string",
          "required": true,
          "description": "The asset ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/assets/{ASSET_ID}",
      "method": "updateAsset",
      "httpMethod": "patch",
      "tag": "Assets",
      "description": "Update an Asset",
      "parameters": [
        {
          "name": "assetId",
          "schema": "string",
          "required": true,
          "description": "The asset ID."
        },
        {
          "name": "passthrough",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/assets/{ASSET_ID}/input-info",
      "method": "getAssetInputInfo",
      "httpMethod": "get",
      "tag": "Assets",
      "description": "Retrieve asset input info",
      "parameters": [
        {
          "name": "assetId",
          "schema": "string",
          "required": true,
          "description": "The asset ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/assets/{ASSET_ID}/master-access",
      "method": "updateAssetMasterAccess",
      "httpMethod": "put",
      "tag": "Assets",
      "description": "Update master access",
      "parameters": [
        {
          "name": "assetId",
          "schema": "string",
          "required": true,
          "description": "The asset ID."
        },
        {
          "name": "master_access",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/assets/{ASSET_ID}/mp4-support",
      "method": "updateAssetMp4Support",
      "httpMethod": "put",
      "tag": "Assets",
      "description": "Update MP4 support",
      "parameters": [
        {
          "name": "assetId",
          "schema": "string",
          "required": true,
          "description": "The asset ID."
        },
        {
          "name": "mp4_support",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/assets/{ASSET_ID}/playback-ids",
      "method": "createAssetPlaybackId",
      "httpMethod": "post",
      "tag": "Assets",
      "description": "Create a playback ID",
      "parameters": [
        {
          "name": "assetId",
          "schema": "string",
          "required": true,
          "description": "The asset ID."
        },
        {
          "name": "policy",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/assets/{ASSET_ID}/playback-ids/{PLAYBACK_ID}",
      "method": "deleteAssetPlaybackId",
      "httpMethod": "delete",
      "tag": "Assets",
      "description": "Delete a playback ID",
      "parameters": [
        {
          "name": "assetId",
          "schema": "string",
          "required": true,
          "description": "The asset ID."
        },
        {
          "name": "playbackId",
          "schema": "string",
          "required": true,
          "description": "The live stream's playback ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/video/v1/assets/{ASSET_ID}/playback-ids/{PLAYBACK_ID}",
      "method": "getAssetPlaybackId",
      "httpMethod": "get",
      "tag": "Assets",
      "description": "Retrieve a playback ID",
      "parameters": [
        {
          "name": "assetId",
          "schema": "string",
          "required": true,
          "description": "The asset ID."
        },
        {
          "name": "playbackId",
          "schema": "string",
          "required": true,
          "description": "The live stream's playback ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/assets/{ASSET_ID}/tracks",
      "method": "createAssetTrack",
      "httpMethod": "post",
      "tag": "Assets",
      "description": "Create an asset track",
      "parameters": [
        {
          "name": "assetId",
          "schema": "string",
          "required": true,
          "description": "The asset ID."
        },
        {
          "name": "closed_captions",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "language_code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "passthrough",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "text_type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/assets/{ASSET_ID}/tracks/{TRACK_ID}",
      "method": "deleteAssetTrack",
      "httpMethod": "delete",
      "tag": "Assets",
      "description": "Delete an asset track",
      "parameters": [
        {
          "name": "assetId",
          "schema": "string",
          "required": true,
          "description": "The asset ID."
        },
        {
          "name": "trackId",
          "schema": "string",
          "required": true,
          "description": "The track ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/video/v1/delivery-usage",
      "method": "listDeliveryUsage",
      "httpMethod": "get",
      "tag": "Delivery Usage",
      "description": "List Usage",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Offset by this many pages, of the size of `limit`"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to include in the response"
        },
        {
          "name": "assetId",
          "schema": "string",
          "required": false,
          "description": "Filter response to return delivery usage for this asset only. You cannot specify both the `asset_id` and `live_stream_id` parameters together."
        },
        {
          "name": "liveStreamId",
          "schema": "string",
          "required": false,
          "description": "Filter response to return delivery usage for assets for this live stream. You cannot specify both the `asset_id` and `live_stream_id` parameters together."
        },
        {
          "name": "timeframe[]",
          "schema": "array",
          "required": false,
          "description": "Time window to get delivery usage information. timeframe[0] indicates the start time, timeframe[1] indicates the end time in seconds since the Unix epoch. Default time window is 1 hour representing usage from 13th to 12th hour from when the request is made."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/live-streams",
      "method": "listLiveStreams",
      "httpMethod": "get",
      "tag": "Live Streams",
      "description": "List live streams",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to include in the response"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Offset by this many pages, of the size of `limit`"
        },
        {
          "name": "streamKey",
          "schema": "string",
          "required": false,
          "description": "Filter response to return live stream for this stream key only"
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Filter response to return live streams with the specified status only"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/live-streams",
      "method": "createLiveStream",
      "httpMethod": "post",
      "tag": "Live Streams",
      "description": "Create a live stream",
      "parameters": [
        {
          "name": "audio_only",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "embedded_subtitles",
          "schema": "array",
          "description": ""
        },
        {
          "name": "generated_subtitles",
          "schema": "array",
          "description": ""
        },
        {
          "name": "latency_mode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "low_latency",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "max_continuous_duration",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "new_asset_settings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "passthrough",
          "schema": "string",
          "description": ""
        },
        {
          "name": "playback_policy",
          "schema": "array",
          "description": ""
        },
        {
          "name": "reconnect_slate_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reconnect_window",
          "schema": "number",
          "description": ""
        },
        {
          "name": "reduced_latency",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "simulcast_targets",
          "schema": "array",
          "description": ""
        },
        {
          "name": "test",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "use_slate_for_standard_latency",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/live-streams/{LIVE_STREAM_ID}",
      "method": "deleteLiveStream",
      "httpMethod": "delete",
      "tag": "Live Streams",
      "description": "Delete a live stream",
      "parameters": [
        {
          "name": "liveStreamId",
          "schema": "string",
          "required": true,
          "description": "The live stream ID"
        }
      ],
      "responses": []
    },
    {
      "url": "/video/v1/live-streams/{LIVE_STREAM_ID}",
      "method": "getLiveStream",
      "httpMethod": "get",
      "tag": "Live Streams",
      "description": "Retrieve a live stream",
      "parameters": [
        {
          "name": "liveStreamId",
          "schema": "string",
          "required": true,
          "description": "The live stream ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/live-streams/{LIVE_STREAM_ID}",
      "method": "updateLiveStream",
      "httpMethod": "patch",
      "tag": "Live Streams",
      "description": "Update a live stream",
      "parameters": [
        {
          "name": "liveStreamId",
          "schema": "string",
          "required": true,
          "description": "The live stream ID"
        },
        {
          "name": "latency_mode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "max_continuous_duration",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "passthrough",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reconnect_slate_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reconnect_window",
          "schema": "number",
          "description": ""
        },
        {
          "name": "use_slate_for_standard_latency",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/live-streams/{LIVE_STREAM_ID}/complete",
      "method": "signalLiveStreamComplete",
      "httpMethod": "put",
      "tag": "Live Streams",
      "description": "Signal a live stream is finished",
      "parameters": [
        {
          "name": "liveStreamId",
          "schema": "string",
          "required": true,
          "description": "The live stream ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/live-streams/{LIVE_STREAM_ID}/disable",
      "method": "disableLiveStream",
      "httpMethod": "put",
      "tag": "Live Streams",
      "description": "Disable a live stream",
      "parameters": [
        {
          "name": "liveStreamId",
          "schema": "string",
          "required": true,
          "description": "The live stream ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/live-streams/{LIVE_STREAM_ID}/embedded-subtitles",
      "method": "updateLiveStreamEmbeddedSubtitles",
      "httpMethod": "put",
      "tag": "Live Streams",
      "description": "Update a live stream's embedded subtitles",
      "parameters": [
        {
          "name": "liveStreamId",
          "schema": "string",
          "required": true,
          "description": "The live stream ID"
        },
        {
          "name": "embedded_subtitles",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/live-streams/{LIVE_STREAM_ID}/enable",
      "method": "enableLiveStream",
      "httpMethod": "put",
      "tag": "Live Streams",
      "description": "Enable a live stream",
      "parameters": [
        {
          "name": "liveStreamId",
          "schema": "string",
          "required": true,
          "description": "The live stream ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/live-streams/{LIVE_STREAM_ID}/generated-subtitles",
      "method": "updateLiveStreamGeneratedSubtitles",
      "httpMethod": "put",
      "tag": "Live Streams",
      "description": "Update a live stream's generated subtitles",
      "parameters": [
        {
          "name": "liveStreamId",
          "schema": "string",
          "required": true,
          "description": "The live stream ID"
        },
        {
          "name": "generated_subtitles",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/live-streams/{LIVE_STREAM_ID}/playback-ids",
      "method": "createLiveStreamPlaybackId",
      "httpMethod": "post",
      "tag": "Live Streams",
      "description": "Create a live stream playback ID",
      "parameters": [
        {
          "name": "liveStreamId",
          "schema": "string",
          "required": true,
          "description": "The live stream ID"
        },
        {
          "name": "policy",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/live-streams/{LIVE_STREAM_ID}/playback-ids/{PLAYBACK_ID}",
      "method": "deleteLiveStreamPlaybackId",
      "httpMethod": "delete",
      "tag": "Live Streams",
      "description": "Delete a live stream playback ID",
      "parameters": [
        {
          "name": "liveStreamId",
          "schema": "string",
          "required": true,
          "description": "The live stream ID"
        },
        {
          "name": "playbackId",
          "schema": "string",
          "required": true,
          "description": "The live stream's playback ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/video/v1/live-streams/{LIVE_STREAM_ID}/playback-ids/{PLAYBACK_ID}",
      "method": "getLiveStreamPlaybackId",
      "httpMethod": "get",
      "tag": "Live Streams",
      "description": "Retrieve a live stream playback ID",
      "parameters": [
        {
          "name": "liveStreamId",
          "schema": "string",
          "required": true,
          "description": "The live stream ID"
        },
        {
          "name": "playbackId",
          "schema": "string",
          "required": true,
          "description": "The live stream's playback ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/live-streams/{LIVE_STREAM_ID}/reset-stream-key",
      "method": "resetStreamKey",
      "httpMethod": "post",
      "tag": "Live Streams",
      "description": "Reset a live stream's stream key",
      "parameters": [
        {
          "name": "liveStreamId",
          "schema": "string",
          "required": true,
          "description": "The live stream ID"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/live-streams/{LIVE_STREAM_ID}/simulcast-targets",
      "method": "createLiveStreamSimulcastTarget",
      "httpMethod": "post",
      "tag": "Live Streams",
      "description": "Create a live stream simulcast target",
      "parameters": [
        {
          "name": "liveStreamId",
          "schema": "string",
          "required": true,
          "description": "The live stream ID"
        },
        {
          "name": "passthrough",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "stream_key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/live-streams/{LIVE_STREAM_ID}/simulcast-targets/{SIMULCAST_TARGET_ID}",
      "method": "deleteLiveStreamSimulcastTarget",
      "httpMethod": "delete",
      "tag": "Live Streams",
      "description": "Delete a Live Stream Simulcast Target",
      "parameters": [
        {
          "name": "liveStreamId",
          "schema": "string",
          "required": true,
          "description": "The live stream ID"
        },
        {
          "name": "simulcastTargetId",
          "schema": "string",
          "required": true,
          "description": "The ID of the simulcast target."
        }
      ],
      "responses": []
    },
    {
      "url": "/video/v1/live-streams/{LIVE_STREAM_ID}/simulcast-targets/{SIMULCAST_TARGET_ID}",
      "method": "getLiveStreamSimulcastTarget",
      "httpMethod": "get",
      "tag": "Live Streams",
      "description": "Retrieve a Live Stream Simulcast Target",
      "parameters": [
        {
          "name": "liveStreamId",
          "schema": "string",
          "required": true,
          "description": "The live stream ID"
        },
        {
          "name": "simulcastTargetId",
          "schema": "string",
          "required": true,
          "description": "The ID of the simulcast target."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/playback-ids/{PLAYBACK_ID}",
      "method": "getAssetOrLivestreamId",
      "httpMethod": "get",
      "tag": "Playback ID",
      "description": "Retrieve an Asset or Live Stream ID",
      "parameters": [
        {
          "name": "playbackId",
          "schema": "string",
          "required": true,
          "description": "The live stream's playback ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/playback-restrictions",
      "method": "listPlaybackRestrictions",
      "httpMethod": "get",
      "tag": "Playback Restrictions",
      "description": "List Playback Restrictions",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Offset by this many pages, of the size of `limit`"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to include in the response"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/playback-restrictions",
      "method": "createPlaybackRestriction",
      "httpMethod": "post",
      "tag": "Playback Restrictions",
      "description": "Create a Playback Restriction",
      "parameters": [
        {
          "name": "referrer",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/playback-restrictions/{PLAYBACK_RESTRICTION_ID}",
      "method": "deletePlaybackRestriction",
      "httpMethod": "delete",
      "tag": "Playback Restrictions",
      "description": "Delete a Playback Restriction",
      "parameters": [
        {
          "name": "playbackRestrictionId",
          "schema": "string",
          "required": true,
          "description": "ID of the Playback Restriction."
        }
      ],
      "responses": []
    },
    {
      "url": "/video/v1/playback-restrictions/{PLAYBACK_RESTRICTION_ID}",
      "method": "getPlaybackRestriction",
      "httpMethod": "get",
      "tag": "Playback Restrictions",
      "description": "Retrieve a Playback Restriction",
      "parameters": [
        {
          "name": "playbackRestrictionId",
          "schema": "string",
          "required": true,
          "description": "ID of the Playback Restriction."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/playback-restrictions/{PLAYBACK_RESTRICTION_ID}/referrer",
      "method": "updateReferrerDomainRestriction",
      "httpMethod": "put",
      "tag": "Playback Restrictions",
      "description": "Update the Referrer Playback Restriction",
      "parameters": [
        {
          "name": "playbackRestrictionId",
          "schema": "string",
          "required": true,
          "description": "ID of the Playback Restriction."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/signing-keys",
      "method": "listUrlSigningKeys",
      "httpMethod": "get",
      "tag": "URL Signing Keys",
      "description": "List URL signing keys",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to include in the response"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Offset by this many pages, of the size of `limit`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/signing-keys",
      "method": "createUrlSigningKey",
      "httpMethod": "post",
      "tag": "URL Signing Keys",
      "description": "Create a URL signing key",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/signing-keys/{SIGNING_KEY_ID}",
      "method": "deleteUrlSigningKey",
      "httpMethod": "delete",
      "tag": "URL Signing Keys",
      "description": "Delete a URL signing key",
      "parameters": [
        {
          "name": "signingKeyId",
          "schema": "string",
          "required": true,
          "description": "The ID of the signing key."
        }
      ],
      "responses": []
    },
    {
      "url": "/video/v1/signing-keys/{SIGNING_KEY_ID}",
      "method": "getUrlSigningKey",
      "httpMethod": "get",
      "tag": "URL Signing Keys",
      "description": "Retrieve a URL signing key",
      "parameters": [
        {
          "name": "signingKeyId",
          "schema": "string",
          "required": true,
          "description": "The ID of the signing key."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/spaces",
      "method": "listSpaces",
      "httpMethod": "get",
      "tag": "Spaces",
      "description": "List spaces",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to include in the response"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Offset by this many pages, of the size of `limit`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/spaces",
      "method": "createSpace",
      "httpMethod": "post",
      "tag": "Spaces",
      "description": "Create a space",
      "parameters": [
        {
          "name": "broadcasts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "passthrough",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/spaces/{SPACE_ID}",
      "method": "deleteSpace",
      "httpMethod": "delete",
      "tag": "Spaces",
      "description": "Delete a space",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "The space ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/video/v1/spaces/{SPACE_ID}",
      "method": "getSpace",
      "httpMethod": "get",
      "tag": "Spaces",
      "description": "Retrieve a space",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "The space ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/spaces/{SPACE_ID}/broadcasts",
      "method": "createSpaceBroadcast",
      "httpMethod": "post",
      "tag": "Spaces",
      "description": "Create a space broadcast",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "The space ID."
        },
        {
          "name": "background",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "layout",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "live_stream_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "passthrough",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "resolution",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/spaces/{SPACE_ID}/broadcasts/{BROADCAST_ID}",
      "method": "deleteSpaceBroadcast",
      "httpMethod": "delete",
      "tag": "Spaces",
      "description": "Delete a space broadcast",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "The space ID."
        },
        {
          "name": "broadcastId",
          "schema": "string",
          "required": true,
          "description": "The broadcast ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/video/v1/spaces/{SPACE_ID}/broadcasts/{BROADCAST_ID}",
      "method": "getSpaceBroadcast",
      "httpMethod": "get",
      "tag": "Spaces",
      "description": "Retrieve space broadcast",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "The space ID."
        },
        {
          "name": "broadcastId",
          "schema": "string",
          "required": true,
          "description": "The broadcast ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/spaces/{SPACE_ID}/broadcasts/{BROADCAST_ID}/start",
      "method": "startSpaceBroadcast",
      "httpMethod": "post",
      "tag": "Spaces",
      "description": "Start a space broadcast",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "The space ID."
        },
        {
          "name": "broadcastId",
          "schema": "string",
          "required": true,
          "description": "The broadcast ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/spaces/{SPACE_ID}/broadcasts/{BROADCAST_ID}/stop",
      "method": "stopSpaceBroadcast",
      "httpMethod": "post",
      "tag": "Spaces",
      "description": "Stop a space broadcast",
      "parameters": [
        {
          "name": "spaceId",
          "schema": "string",
          "required": true,
          "description": "The space ID."
        },
        {
          "name": "broadcastId",
          "schema": "string",
          "required": true,
          "description": "The broadcast ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/transcription-vocabularies",
      "method": "listTranscriptionVocabularies",
      "httpMethod": "get",
      "tag": "Transcription Vocabularies",
      "description": "List Transcription Vocabularies",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to include in the response"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Offset by this many pages, of the size of `limit`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/transcription-vocabularies",
      "method": "createTranscriptionVocabulary",
      "httpMethod": "post",
      "tag": "Transcription Vocabularies",
      "description": "Create a Transcription Vocabulary",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "passthrough",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "phrases",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/transcription-vocabularies/{TRANSCRIPTION_VOCABULARY_ID}",
      "method": "deleteTranscriptionVocabulary",
      "httpMethod": "delete",
      "tag": "Transcription Vocabularies",
      "description": "Delete a Transcription Vocabulary",
      "parameters": [
        {
          "name": "transcriptionVocabularyId",
          "schema": "string",
          "required": true,
          "description": "The ID of the Transcription Vocabulary."
        }
      ],
      "responses": []
    },
    {
      "url": "/video/v1/transcription-vocabularies/{TRANSCRIPTION_VOCABULARY_ID}",
      "method": "getTranscriptionVocabulary",
      "httpMethod": "get",
      "tag": "Transcription Vocabularies",
      "description": "Retrieve a Transcription Vocabulary",
      "parameters": [
        {
          "name": "transcriptionVocabularyId",
          "schema": "string",
          "required": true,
          "description": "The ID of the Transcription Vocabulary."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/transcription-vocabularies/{TRANSCRIPTION_VOCABULARY_ID}",
      "method": "updateTranscriptionVocabulary",
      "httpMethod": "put",
      "tag": "Transcription Vocabularies",
      "description": "Update a Transcription Vocabulary",
      "parameters": [
        {
          "name": "transcriptionVocabularyId",
          "schema": "string",
          "required": true,
          "description": "The ID of the Transcription Vocabulary."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "passthrough",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "phrases",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/uploads",
      "method": "listDirectUploads",
      "httpMethod": "get",
      "tag": "Direct Uploads",
      "description": "List direct uploads",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to include in the response"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Offset by this many pages, of the size of `limit`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/uploads",
      "method": "createDirectUpload",
      "httpMethod": "post",
      "tag": "Direct Uploads",
      "description": "Create a new direct upload URL",
      "parameters": [
        {
          "name": "cors_origin",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "new_asset_settings",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "test",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "timeout",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/uploads/{UPLOAD_ID}",
      "method": "getDirectUpload",
      "httpMethod": "get",
      "tag": "Direct Uploads",
      "description": "Retrieve a single direct upload's info",
      "parameters": [
        {
          "name": "uploadId",
          "schema": "string",
          "required": true,
          "description": "ID of the Upload"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/video/v1/uploads/{UPLOAD_ID}/cancel",
      "method": "cancelDirectUpload",
      "httpMethod": "put",
      "tag": "Direct Uploads",
      "description": "Cancel a direct upload",
      "parameters": [
        {
          "name": "uploadId",
          "schema": "string",
          "required": true,
          "description": "ID of the Upload"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.mux.com",
  "apiDescription": "Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.",
  "apiTitle": "Mux API",
  "endpoints": 69,
  "sdkMethods": 91,
  "schemas": 133,
  "parameters": 237,
  "contactUrl": "https://docs.mux.com",
  "contactEmail": "devex@mux.com",
  "difficultyScore": 216.75,
  "difficulty": "Hard"
}