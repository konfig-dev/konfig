{
  "providerName": "amadeus.com",
  "openApiRaw": "https://raw.githubusercontent.com/amadeus4dev/amadeus-open-api-specification/main/spec/json/PointsOfInterest_v1_swagger_specification.json",
  "homepage": "amadeus.com",
  "serviceName": "amadeus-points-of-interest",
  "apiVersion": "1.1.1",
  "methods": [
    {
      "url": "/reference-data/locations/pois",
      "method": "getPointsOfInterest",
      "httpMethod": "get",
      "tag": "Search",
      "description": "Returns points of interest for a given location and radius.",
      "parameters": [
        {
          "name": "latitude",
          "schema": "number",
          "required": true,
          "description": "Latitude (decimal coordinates)"
        },
        {
          "name": "longitude",
          "schema": "number",
          "required": true,
          "description": "Longitude (decimal coordinates)"
        },
        {
          "name": "radius",
          "schema": "integer",
          "required": false,
          "description": "radius of the search in Kilometer. Can be from 0 to 20, default value is 1 Km."
        },
        {
          "name": "page[limit]",
          "schema": "integer",
          "required": false,
          "description": "maximum items in one page"
        },
        {
          "name": "page[offset]",
          "schema": "integer",
          "required": false,
          "description": "start index of the requested page"
        },
        {
          "name": "categories",
          "schema": "array",
          "required": false,
          "description": "category of the location. \n\nMultiple value can be selected using a comma i.e. SIGHTS, SHOPPING\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/reference-data/locations/pois/by-square",
      "method": "getPointsOfInterestBySquare",
      "httpMethod": "get",
      "tag": "Search",
      "description": "Returns points of interest for a given area",
      "parameters": [
        {
          "name": "north",
          "schema": "number",
          "required": true,
          "description": "Latitude north of bounding box (decimal coordinates)"
        },
        {
          "name": "west",
          "schema": "number",
          "required": true,
          "description": "Longitude west of bounding box (decimal coordinates)"
        },
        {
          "name": "south",
          "schema": "number",
          "required": true,
          "description": "Latitude south of bounding box (decimal coordinates)"
        },
        {
          "name": "east",
          "schema": "number",
          "required": true,
          "description": "Longitude east of bounding box (decimal coordinates)"
        },
        {
          "name": "page[limit]",
          "schema": "integer",
          "required": false,
          "description": "maximum items in one page"
        },
        {
          "name": "page[offset]",
          "schema": "integer",
          "required": false,
          "description": "start index of the requested page"
        },
        {
          "name": "categories",
          "schema": "array",
          "required": false,
          "description": "category of the location. \n\nMultiple value can be selected using a comma i.e. SIGHTS, SHOPPING\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/reference-data/locations/pois/{poisId}",
      "method": "getPointOfInterest",
      "httpMethod": "get",
      "tag": "Retrieve",
      "description": "Retieve one point of interest by its Id.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://test.api.amadeus.com/v1",
  "apiDescription": "\nBefore using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.\n\nPlease also be aware that our test environment is based on a subset of the production, this API in test only returns a few selected cities. You can find the list in our **[data collection](https://github.com/amadeus4dev/data-collection)**.\n",
  "apiTitle": "Points of Interest",
  "endpoints": 3,
  "sdkMethods": 4,
  "schemas": 8,
  "parameters": 13,
  "difficultyScore": 11.25,
  "difficulty": "Easy"
}