{
  "providerName": "apacta.com",
  "openApiRaw": "http://apidoc.apacta.com/swagger.yaml",
  "securitySchemes": {
    "X-Auth-Token": {
      "in": "header",
      "name": "X-Auth-Token",
      "type": "apiKey"
    },
    "api_key": {
      "description": "Uses the user's API token found from within the control panel in \"settings\" -> \"additional settings\"",
      "in": "query",
      "name": "api_token",
      "type": "apiKey"
    }
  },
  "homepage": "apacta.com",
  "apiVersion": "0.0.42",
  "methods": [
    {
      "url": "/activities",
      "method": "/activitiesGet",
      "httpMethod": "get",
      "tag": "Activities",
      "typeScriptTag": "activities",
      "description": "Get a list of activities",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/activities",
      "method": "/activitiesPost",
      "httpMethod": "post",
      "tag": "Activities",
      "typeScriptTag": "activities",
      "description": "Create an activity",
      "parameters": [
        {
          "name": "hex_code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/activities/bulkDelete",
      "method": "/activities/bulkDeleteDelete",
      "httpMethod": "delete",
      "tag": "Activities",
      "typeScriptTag": "activities",
      "description": "Bulk delete activities",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/activities/{activity_id}",
      "method": "/activities/{activityId}Delete",
      "httpMethod": "delete",
      "tag": "Activities",
      "typeScriptTag": "activities",
      "description": "Delete an activity",
      "parameters": [
        {
          "name": "activityId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/activities/{activity_id}",
      "method": "/activities/{activityId}Put",
      "httpMethod": "put",
      "tag": "Activities",
      "typeScriptTag": "activities",
      "description": "Edit an activity",
      "parameters": [
        {
          "name": "activityId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "hex_code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/cities",
      "method": "/citiesGet",
      "httpMethod": "get",
      "tag": "Cities",
      "typeScriptTag": "cities",
      "description": "Get list of cities supported in Apacta",
      "parameters": [
        {
          "name": "zipCode",
          "schema": "string",
          "required": false,
          "description": "Used to search for a city with specific zip code"
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Used to search for a city by name"
        },
        {
          "name": "includeAll",
          "schema": "boolean",
          "required": false,
          "description": "Used to search for a city without filtering by country"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/cities/{city_id}",
      "method": "/cities/{cityId}Get",
      "httpMethod": "get",
      "tag": "Cities",
      "typeScriptTag": "cities",
      "description": "Get details about one city",
      "parameters": [
        {
          "name": "cityId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/clocking_records",
      "method": "/clockingRecordsGet",
      "httpMethod": "get",
      "tag": "ClockingRecords",
      "typeScriptTag": "clockingRecords",
      "description": "Get a list of clocking records",
      "parameters": [
        {
          "name": "active",
          "schema": "boolean",
          "required": false,
          "description": "Used to search for active clocking records"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/clocking_records",
      "method": "/clockingRecordsPost",
      "httpMethod": "post",
      "tag": "ClockingRecords",
      "typeScriptTag": "clockingRecords",
      "description": "Create clocking record for authenticated user",
      "parameters": [
        {
          "name": "checkin_latitude",
          "schema": "string",
          "description": ""
        },
        {
          "name": "checkin_longitude",
          "schema": "string",
          "description": ""
        },
        {
          "name": "checkout_latitude",
          "schema": "string",
          "description": ""
        },
        {
          "name": "checkout_longitude",
          "schema": "string",
          "description": ""
        },
        {
          "name": "project_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/clocking_records/checkout",
      "method": "/clockingRecords/checkoutPost",
      "httpMethod": "post",
      "tag": "ClockingRecords",
      "typeScriptTag": "clockingRecords",
      "description": "Checkout active clocking record for authenticated user",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/clocking_records/{clocking_record_id}",
      "method": "/clockingRecords/{clockingRecordId}Delete",
      "httpMethod": "delete",
      "tag": "ClockingRecords",
      "typeScriptTag": "clockingRecords",
      "description": "Delete a clocking record",
      "parameters": [
        {
          "name": "clockingRecordId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/clocking_records/{clocking_record_id}",
      "method": "/clockingRecords/{clockingRecordId}Get",
      "httpMethod": "get",
      "tag": "ClockingRecords",
      "typeScriptTag": "clockingRecords",
      "description": "Details of 1 clocking_record",
      "parameters": [
        {
          "name": "clockingRecordId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/clocking_records/{clocking_record_id}",
      "method": "/clockingRecords/{clockingRecordId}Put",
      "httpMethod": "put",
      "tag": "ClockingRecords",
      "typeScriptTag": "clockingRecords",
      "description": "Edit a clocking record",
      "parameters": [
        {
          "name": "clockingRecordId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies",
      "method": "/companiesGet",
      "httpMethod": "get",
      "tag": "Companies",
      "typeScriptTag": "companies",
      "description": "Get a list of companies",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/subscription_self_service",
      "method": "/companies/subscriptionSelfServiceGet",
      "httpMethod": "get",
      "tag": "Companies",
      "typeScriptTag": "companies",
      "description": "URL for subscription selfservice",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{company_id}",
      "method": "/companies/{companyId}Get",
      "httpMethod": "get",
      "tag": "Companies",
      "typeScriptTag": "companies",
      "description": "Details of 1 company",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{company_id}/companies_integration_feature_settings",
      "method": "/companies/{companyId}/companiesIntegrationFeatureSettingsGet",
      "httpMethod": "get",
      "tag": "Companies",
      "typeScriptTag": "companies",
      "description": "List a company integration feature settings",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{company_id}/companies_integration_feature_settings",
      "method": "/companies/{companyId}/companiesIntegrationFeatureSettingsPost",
      "httpMethod": "post",
      "tag": "Companies",
      "typeScriptTag": "companies",
      "description": "Add a company integration feature setting",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "integration_feature_setting_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "value",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{company_id}/companies_integration_feature_settings/{c_integration_feature_setting_id}",
      "method": "/companies/{companyId}/companiesIntegrationFeatureSettings/{cIntegrationFeatureSettingId}Get",
      "httpMethod": "get",
      "tag": "Companies",
      "typeScriptTag": "companies",
      "description": "View a company integration feature setting",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "cIntegrationFeatureSettingId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{company_id}/companies_integration_feature_settings/{c_integration_feature_setting_id}",
      "method": "/companies/{companyId}/companiesIntegrationFeatureSettings/{cIntegrationFeatureSettingId}Put",
      "httpMethod": "put",
      "tag": "Companies",
      "typeScriptTag": "companies",
      "description": "Edit a company integration feature setting",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "cIntegrationFeatureSettingId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{company_id}/form_templates/",
      "method": "/companies/{companyId}/formTemplates/Get",
      "httpMethod": "get",
      "tag": "Companies",
      "typeScriptTag": "companies",
      "description": "Get a list of company form templates",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "formTemplateId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{company_id}/form_templates/{form_template_id}",
      "method": "/companies/{companyId}/formTemplates/{formTemplateId}Delete",
      "httpMethod": "delete",
      "tag": "Companies",
      "typeScriptTag": "companies",
      "description": "Delete a form template company",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "formTemplateId",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{company_id}/form_templates/{form_template_id}",
      "method": "/companies/{companyId}/formTemplates/{formTemplateId}Get",
      "httpMethod": "get",
      "tag": "Companies",
      "typeScriptTag": "companies",
      "description": "Get a company form template",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "formTemplateId",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{company_id}/integration_feature_settings",
      "method": "/companies/{companyId}/integrationFeatureSettingsGet",
      "httpMethod": "get",
      "tag": "Companies",
      "typeScriptTag": "companies",
      "description": "Get a list of integration feature settings",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{company_id}/integration_feature_settings/{integration_feature_setting_id}",
      "method": "/companies/{companyId}/integrationFeatureSettings/{integrationFeatureSettingId}Get",
      "httpMethod": "get",
      "tag": "Companies",
      "typeScriptTag": "companies",
      "description": "Show details of 1 integration feature setting",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "integrationFeatureSettingId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{company_id}/integration_settings",
      "method": "/companies/{companyId}/integrationSettingsGet",
      "httpMethod": "get",
      "tag": "Companies",
      "typeScriptTag": "companies",
      "description": "Get a list of company integration settings",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "identifier",
          "schema": "string",
          "description": "The identifier of an ERP integration"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{company_id}/integration_settings",
      "method": "/companies/{companyId}/integrationSettingsPost",
      "httpMethod": "post",
      "tag": "Companies",
      "typeScriptTag": "companies",
      "description": "Add a company integration setting",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "integration_setting_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "value",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{company_id}/integration_settings/{companies_integration_setting_id}",
      "method": "/companies/{companyId}/integrationSettings/{companiesIntegrationSettingId}Delete",
      "httpMethod": "delete",
      "tag": "Companies",
      "typeScriptTag": "companies",
      "description": "Delete a company integration setting",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "companiesIntegrationSettingId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{company_id}/integration_settings/{companies_integration_setting_id}",
      "method": "/companies/{companyId}/integrationSettings/{companiesIntegrationSettingId}Get",
      "httpMethod": "get",
      "tag": "Companies",
      "typeScriptTag": "companies",
      "description": "Get a company integration setting",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "companiesIntegrationSettingId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{company_id}/integration_settings/{companies_integration_setting_id}",
      "method": "/companies/{companyId}/integrationSettings/{companiesIntegrationSettingId}Put",
      "httpMethod": "put",
      "tag": "Companies",
      "typeScriptTag": "companies",
      "description": "Edit a company integration setting",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "companiesIntegrationSettingId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{company_id}/price_margins/{price_margins_id}",
      "method": "/companies/{companyId}/priceMargins/{priceMarginsId}Delete",
      "httpMethod": "delete",
      "tag": "Companies",
      "typeScriptTag": "companies",
      "description": "Delete a company price margin",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "priceMarginId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "priceMarginsId",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{company_id}/price_margins/{price_margins_id}",
      "method": "/companies/{companyId}/priceMargins/{priceMarginsId}Get",
      "httpMethod": "get",
      "tag": "Companies",
      "typeScriptTag": "companies",
      "description": "Get a list of company price margins",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "priceMarginsId",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{company_id}/price_margins/{price_margins_id}",
      "method": "/companies/{companyId}/priceMargins/{priceMarginsId}Post",
      "httpMethod": "post",
      "tag": "Companies",
      "typeScriptTag": "companies",
      "description": "Add a company price margin",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "priceMarginsId",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "value",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies_vendors",
      "method": "getCompaiesVendorsList",
      "httpMethod": "get",
      "tag": "CompaniesVendors",
      "typeScriptTag": "companiesVendors",
      "description": "Get a list of companies vendors",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies_vendors",
      "method": "addCompaniesVendor",
      "httpMethod": "post",
      "tag": "CompaniesVendors",
      "typeScriptTag": "companiesVendors",
      "description": "Add a new companies vendor",
      "parameters": [
        {
          "name": "company_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "delivery_price",
          "schema": "number",
          "description": ""
        },
        {
          "name": "free_delivery_price",
          "schema": "number",
          "description": ""
        },
        {
          "name": "is_active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "receive_automatic_price_files",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "receive_invoice_mails",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "reviewed",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "use_price_files",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vendor_account_reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vendor_department_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vendor_email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vendor_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vendor_name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies_vendors/bulkDelete",
      "method": "bulkCompaniesVendors",
      "httpMethod": "delete",
      "tag": "CompaniesVendors",
      "typeScriptTag": "companiesVendors",
      "description": "Bulk delete companies vendors",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies_vendors/{companies_vendor_id}",
      "method": "/companiesVendors/{companiesVendorId}Delete",
      "httpMethod": "delete",
      "tag": "CompaniesVendors",
      "typeScriptTag": "companiesVendors",
      "description": "Delete a companies vendor",
      "parameters": [
        {
          "name": "companiesVendorId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies_vendors/{companies_vendor_id}",
      "method": "getCompaniesVendor",
      "httpMethod": "get",
      "tag": "CompaniesVendors",
      "typeScriptTag": "companiesVendors",
      "description": "Get a companies vendor",
      "parameters": [
        {
          "name": "companiesVendorId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies_vendors/{companies_vendor_id}",
      "method": "editCompaniesVendor",
      "httpMethod": "put",
      "tag": "CompaniesVendors",
      "typeScriptTag": "companiesVendors",
      "description": "Edit a companies vendor",
      "parameters": [
        {
          "name": "companiesVendorId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "company_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "delivery_price",
          "schema": "number",
          "description": ""
        },
        {
          "name": "free_delivery_price",
          "schema": "number",
          "description": ""
        },
        {
          "name": "is_active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "receive_automatic_price_files",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "receive_invoice_mails",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "reviewed",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "use_price_files",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vendor_account_reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vendor_department_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vendor_email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vendor_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vendor_name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies_vendors/{companies_vendor_id}/expense_statistics",
      "method": "getCompaniesVendorsExpenseStatistics",
      "httpMethod": "get",
      "tag": "CompaniesVendors",
      "typeScriptTag": "companiesVendors",
      "description": "Get companies vendor expense statistics",
      "parameters": [
        {
          "name": "companiesVendorId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/company_settings",
      "method": "getCompaySettingsList",
      "httpMethod": "get",
      "tag": "CompanySettings",
      "typeScriptTag": "companySettings",
      "description": "Get a list of company settings",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": "Filter by name"
        },
        {
          "name": "description",
          "schema": "string",
          "description": "Filter by description"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/contact_custom_field_attributes",
      "method": "/contactCustomFieldAttributesGet",
      "httpMethod": "get",
      "tag": "ContactCustomFieldAttributes",
      "typeScriptTag": "contactCustomFieldAttributes",
      "description": "Get a list of contact custom field attributes",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/contact_custom_field_attributes/{contact_custom_field_attribute_id}",
      "method": "/contactCustomFieldAttributes/{contactCustomFieldAttributeId}Get",
      "httpMethod": "get",
      "tag": "ContactCustomFieldAttributes",
      "typeScriptTag": "contactCustomFieldAttributes",
      "description": "Details of 1 contact custom field attribute",
      "parameters": [
        {
          "name": "contactCustomFieldAttributeId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/contact_types",
      "method": "/contactTypesGet",
      "httpMethod": "get",
      "tag": "ContactTypes",
      "typeScriptTag": "contactTypes",
      "description": "Get list of contact types supported in Apacta",
      "parameters": [
        {
          "name": "identifier",
          "schema": "string",
          "description": "Search for specific identifier value"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/contact_types/{contact_type_id}",
      "method": "/contactTypes/{contactTypeId}Get",
      "httpMethod": "get",
      "tag": "ContactTypes",
      "typeScriptTag": "contactTypes",
      "description": "Get details about one contact type",
      "parameters": [
        {
          "name": "contactTypeId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts",
      "method": "/contactsGet",
      "httpMethod": "get",
      "tag": "Contacts",
      "typeScriptTag": "contacts",
      "description": "Get a list of contacts",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Used to search for a contact with a specific name"
        },
        {
          "name": "cvr",
          "schema": "string",
          "description": "Search for values in CVR field"
        },
        {
          "name": "ean",
          "schema": "string",
          "description": "Search for values in EAN field"
        },
        {
          "name": "erpId",
          "schema": "string",
          "description": "Search for values in ERP id field"
        },
        {
          "name": "contactType",
          "schema": "string",
          "description": "Used to show only contacts with with one specific `ContactType`"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "Used to show only contacts with with one specific `City`"
        },
        {
          "name": "modifiedGte",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts",
      "method": "/contactsPost",
      "httpMethod": "post",
      "tag": "Contacts",
      "typeScriptTag": "contacts",
      "description": "Add a new contact",
      "parameters": [
        {
          "name": "address",
          "schema": "string",
          "description": ""
        },
        {
          "name": "city_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "contact_types",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cvr",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "erp_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "website",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts/bulkDelete",
      "method": "bulkDeleteContacts",
      "httpMethod": "delete",
      "tag": "Contacts",
      "typeScriptTag": "contacts",
      "description": "Bulk delete contacts",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts/{contact_id}",
      "method": "/contacts/{contactId}Delete",
      "httpMethod": "delete",
      "tag": "Contacts",
      "typeScriptTag": "contacts",
      "description": "Delete a contact",
      "parameters": [
        {
          "name": "contactId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts/{contact_id}",
      "method": "/contacts/{contactId}Get",
      "httpMethod": "get",
      "tag": "Contacts",
      "typeScriptTag": "contacts",
      "description": "Details of 1 contact",
      "parameters": [
        {
          "name": "contactId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts/{contact_id}",
      "method": "/contacts/{contactId}Put",
      "httpMethod": "put",
      "tag": "Contacts",
      "typeScriptTag": "contacts",
      "description": "Edit a contact",
      "parameters": [
        {
          "name": "contactId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "address",
          "schema": "string",
          "description": ""
        },
        {
          "name": "city_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "contact_types",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cvr",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "erp_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "website",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts/{contact_id}/contact_custom_field_values",
      "method": "/contacts/{contactId}/contactCustomFieldValuesGet",
      "httpMethod": "get",
      "tag": "ContactCustomFieldValue",
      "typeScriptTag": "contactCustomFieldValue",
      "description": "Get a list of contact custom field values",
      "parameters": [
        {
          "name": "contactId",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts/{contact_id}/contact_persons",
      "method": "getContactPersonsList",
      "httpMethod": "get",
      "tag": "ContactPersons",
      "typeScriptTag": "contactPersons",
      "description": "Get a list of contact people",
      "parameters": [
        {
          "name": "contactId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "string",
          "description": ""
        },
        {
          "name": "createdGte",
          "schema": "string",
          "description": ""
        },
        {
          "name": "createdLte",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts/{contact_id}/contact_persons",
      "method": "addContactPerson",
      "httpMethod": "post",
      "tag": "ContactPersons",
      "typeScriptTag": "contactPersons",
      "description": "Add a new contact person to a contact",
      "parameters": [
        {
          "name": "contactId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts/{contact_id}/contact_persons/{contact_person_id}",
      "method": "/contacts/{contactId}/contactPersons/{contactPersonId}Delete",
      "httpMethod": "delete",
      "tag": "ContactPersons",
      "typeScriptTag": "contactPersons",
      "description": "Delete a contact person",
      "parameters": [
        {
          "name": "contactId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "contactPersonId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts/{contact_id}/contact_persons/{contact_person_id}",
      "method": "getContactPerson",
      "httpMethod": "get",
      "tag": "ContactPersons",
      "typeScriptTag": "contactPersons",
      "description": "Get a contact person",
      "parameters": [
        {
          "name": "contactId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "contactPersonId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts/{contact_id}/contact_persons/{contact_person_id}",
      "method": "editContactPerson",
      "httpMethod": "put",
      "tag": "ContactPersons",
      "typeScriptTag": "contactPersons",
      "description": "Edit a contact person",
      "parameters": [
        {
          "name": "contactId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "contactPersonId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/countries",
      "method": "/countriesGet",
      "httpMethod": "get",
      "tag": "Countries",
      "typeScriptTag": "countries",
      "description": "Get list of countries supported in Apacta",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/countries/{country_id}",
      "method": "/countries/{countryId}Get",
      "httpMethod": "get",
      "tag": "Countries",
      "typeScriptTag": "countries",
      "description": "Get details about one country",
      "parameters": [
        {
          "name": "countryId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/currencies",
      "method": "/currenciesGet",
      "httpMethod": "get",
      "tag": "Currencies",
      "typeScriptTag": "currencies",
      "description": "Get list of currencies supported in Apacta",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/currencies/{currency_id}",
      "method": "/currencies/{currencyId}Get",
      "httpMethod": "get",
      "tag": "Currencies",
      "typeScriptTag": "currencies",
      "description": "Get details about one currency",
      "parameters": [
        {
          "name": "currencyId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/driving_types",
      "method": "getDrivingTypes",
      "httpMethod": "get",
      "tag": "DrivingTypes",
      "typeScriptTag": "drivingTypes",
      "description": "List the driving types of the company",
      "parameters": [
        {
          "name": "q",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sort",
          "schema": "string",
          "description": ""
        },
        {
          "name": "direction",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/driving_types",
      "method": "postDrivingTypes",
      "httpMethod": "post",
      "tag": "DrivingTypes",
      "typeScriptTag": "drivingTypes",
      "description": "Create driving type",
      "parameters": [
        {
          "name": "company_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "employee_price",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "erp_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "invoice_price",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "salary_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/driving_types/bulkDelete",
      "method": "bulkDeleteDrivingTypes",
      "httpMethod": "delete",
      "tag": "DrivingTypes",
      "typeScriptTag": "drivingTypes",
      "description": "Bulk delete driving types",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/driving_types/{driving_type_id}",
      "method": "deleteDrivingTypesDrivingTypeId",
      "httpMethod": "delete",
      "tag": "DrivingTypes",
      "typeScriptTag": "drivingTypes",
      "description": "Delete driving type",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/driving_types/{driving_type_id}",
      "method": "getDrivingTypesDrivingTypeId",
      "httpMethod": "get",
      "tag": "DrivingTypes",
      "typeScriptTag": "drivingTypes",
      "description": "View driving type",
      "parameters": [
        {
          "name": "drivingTypeId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/driving_types/{driving_type_id}",
      "method": "putDrivingTypesDrivingTypeId",
      "httpMethod": "put",
      "tag": "DrivingTypes",
      "typeScriptTag": "drivingTypes",
      "description": "Edit driving type",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/employee_hours",
      "method": "/employeeHoursGet",
      "httpMethod": "get",
      "tag": "EmployeeHours",
      "typeScriptTag": "employeeHours",
      "description": "Used to retrieve details about the logged in user's hours",
      "parameters": [
        {
          "name": "dateFrom",
          "schema": "string",
          "required": true,
          "description": "Date formatted as Y-m-d (2016-06-28)"
        },
        {
          "name": "dateTo",
          "schema": "string",
          "required": true,
          "description": "Date formatted as Y-m-d (2016-06-28)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/events",
      "method": "/eventsGet",
      "httpMethod": "get",
      "tag": "Events",
      "typeScriptTag": "events",
      "description": "Show list of events",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "projectId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "start[][gt]",
          "schema": "string",
          "description": ""
        },
        {
          "name": "start[][lt]",
          "schema": "string",
          "description": ""
        },
        {
          "name": "start[][eq]",
          "schema": "string",
          "description": ""
        },
        {
          "name": "end[][gt]",
          "schema": "string",
          "description": ""
        },
        {
          "name": "end[][lt]",
          "schema": "string",
          "description": ""
        },
        {
          "name": "end[][eq]",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tags",
          "schema": "string",
          "description": "List events with given tag ids separated by comma. Example tags=0377d6ce-db5e-4b1e-ac3a-8ca39ea3142e,8cec327e-a559-4b40-9ed6-316b9de46743"
        },
        {
          "name": "withoutUsers",
          "schema": "boolean",
          "description": "List events without attached user"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/events",
      "method": "/eventsPost",
      "httpMethod": "post",
      "tag": "Events",
      "typeScriptTag": "events",
      "description": "Create event",
      "parameters": [
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "end",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "project_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "start",
          "schema": "string",
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/events/is_user_free",
      "method": "/events/isUserFreeGet",
      "httpMethod": "get",
      "tag": "Events",
      "typeScriptTag": "events",
      "description": "Check if user is available at given datetime range",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "end",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/events/{event_id}",
      "method": "/events/{eventId}Delete",
      "httpMethod": "delete",
      "tag": "Events",
      "typeScriptTag": "events",
      "description": "Delete event",
      "parameters": [
        {
          "name": "eventId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/events/{event_id}",
      "method": "/events/{eventId}Get",
      "httpMethod": "get",
      "tag": "Events",
      "typeScriptTag": "events",
      "description": "Show event",
      "parameters": [
        {
          "name": "eventId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/events/{event_id}",
      "method": "/events/{eventId}Put",
      "httpMethod": "put",
      "tag": "Events",
      "typeScriptTag": "events",
      "description": "Edit event",
      "parameters": [
        {
          "name": "eventId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/expense_files",
      "method": "/expenseFilesGet",
      "httpMethod": "get",
      "tag": "ExpenseFiles",
      "typeScriptTag": "expenseFiles",
      "description": "Show list of expense files",
      "parameters": [
        {
          "name": "createdById",
          "schema": "string",
          "description": ""
        },
        {
          "name": "expenseId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/expense_files",
      "method": "/expenseFilesPost",
      "httpMethod": "post",
      "tag": "ExpenseFiles",
      "typeScriptTag": "expenseFiles",
      "description": "Add file to expense",
      "parameters": [
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "file",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/expense_files/{expense_file_id}",
      "method": "/expenseFiles/{expenseFileId}Delete",
      "httpMethod": "delete",
      "tag": "ExpenseFiles",
      "typeScriptTag": "expenseFiles",
      "description": "Delete file",
      "parameters": [
        {
          "name": "expenseFileId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/expense_files/{expense_file_id}",
      "method": "/expenseFiles/{expenseFileId}Get",
      "httpMethod": "get",
      "tag": "ExpenseFiles",
      "typeScriptTag": "expenseFiles",
      "description": "Show file",
      "parameters": [
        {
          "name": "expenseFileId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/expense_files/{expense_file_id}",
      "method": "/expenseFiles/{expenseFileId}Put",
      "httpMethod": "put",
      "tag": "ExpenseFiles",
      "typeScriptTag": "expenseFiles",
      "description": "Edit file",
      "parameters": [
        {
          "name": "expenseFileId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/expense_lines",
      "method": "/expenseLinesGet",
      "httpMethod": "get",
      "tag": "ExpenseLines",
      "typeScriptTag": "expenseLines",
      "description": "Show list of expense lines",
      "parameters": [
        {
          "name": "createdById",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "expenseId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/expense_lines",
      "method": "/expenseLinesPost",
      "httpMethod": "post",
      "tag": "ExpenseLines",
      "typeScriptTag": "expenseLines",
      "description": "Add line to expense",
      "parameters": [
        {
          "name": "buying_price",
          "schema": "number",
          "description": ""
        },
        {
          "name": "currency_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "expense_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "selling_price",
          "schema": "number",
          "description": ""
        },
        {
          "name": "text",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/expense_lines/{expense_line_id}",
      "method": "/expenseLines/{expenseLineId}Delete",
      "httpMethod": "delete",
      "tag": "ExpenseLines",
      "typeScriptTag": "expenseLines",
      "description": "Delete expense line",
      "parameters": [
        {
          "name": "expenseLineId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/expense_lines/{expense_line_id}",
      "method": "/expenseLines/{expenseLineId}Get",
      "httpMethod": "get",
      "tag": "ExpenseLines",
      "typeScriptTag": "expenseLines",
      "description": "Show expense line",
      "parameters": [
        {
          "name": "expenseLineId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/expense_lines/{expense_line_id}",
      "method": "/expenseLines/{expenseLineId}Put",
      "httpMethod": "put",
      "tag": "ExpenseLines",
      "typeScriptTag": "expenseLines",
      "description": "Edit expense line",
      "parameters": [
        {
          "name": "expenseLineId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/expenses",
      "method": "/expensesGet",
      "httpMethod": "get",
      "tag": "Expenses",
      "typeScriptTag": "expenses",
      "description": "Show list of expenses",
      "parameters": [
        {
          "name": "createdById",
          "schema": "string",
          "description": ""
        },
        {
          "name": "companyId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "contactId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "projectId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dueDate",
          "schema": "string",
          "description": "Filter by [valid=records in future including today], [exceeded=records in past] or [null=all records]"
        },
        {
          "name": "gtCreated",
          "schema": "string",
          "description": "Created after date"
        },
        {
          "name": "ltCreated",
          "schema": "string",
          "description": "Created before date"
        },
        {
          "name": "status",
          "schema": "string",
          "description": "Filter by status identifier. [null=all records]"
        },
        {
          "name": "isImported",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "minAmount",
          "schema": "number",
          "description": "Expenses `total_selling_price` > `min_amount`"
        },
        {
          "name": "maxAmount",
          "schema": "number",
          "description": "Expenses `total_selling_price` < `max_amount`"
        },
        {
          "name": "projects",
          "schema": "string",
          "description": "You can select `all projects`, `no projects` or select `multiple projects`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/expenses",
      "method": "/expensesPost",
      "httpMethod": "post",
      "tag": "Expenses",
      "typeScriptTag": "expenses",
      "description": "Add line to expense",
      "parameters": [
        {
          "name": "contact_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "delivery_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "project_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "short_text",
          "schema": "string",
          "description": ""
        },
        {
          "name": "supplier_invoice_number",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/expenses/bulkDelete",
      "method": "bulkDeleteExpenses",
      "httpMethod": "delete",
      "tag": "Expenses",
      "typeScriptTag": "expenses",
      "description": "Bulk delete expenses",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/expenses/highest_amount",
      "method": "/expenses/highestAmountGet",
      "httpMethod": "get",
      "tag": "Expenses",
      "typeScriptTag": "expenses",
      "description": "Show highest Expense amount(`total_selling_price`)",
      "parameters": [
        {
          "name": "gtCreated",
          "schema": "string",
          "required": true,
          "description": "Used to filter time range"
        },
        {
          "name": "ltCreated",
          "schema": "string",
          "required": true,
          "description": "Used to filter time range"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/expenses/sendEmails",
      "method": "sendEmailsExpenses",
      "httpMethod": "delete",
      "tag": "Expenses",
      "typeScriptTag": "expenses",
      "description": "Bulk delete expenses",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/expenses/{expense_id}",
      "method": "/expenses/{expenseId}Delete",
      "httpMethod": "delete",
      "tag": "Expenses",
      "typeScriptTag": "expenses",
      "description": "Delete expense",
      "parameters": [
        {
          "name": "expenseId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/expenses/{expense_id}",
      "method": "/expenses/{expenseId}Get",
      "httpMethod": "get",
      "tag": "Expenses",
      "typeScriptTag": "expenses",
      "description": "Show expense",
      "parameters": [
        {
          "name": "expenseId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/expenses/{expense_id}",
      "method": "/expenses/{expenseId}Put",
      "httpMethod": "put",
      "tag": "Expenses",
      "typeScriptTag": "expenses",
      "description": "Edit expense",
      "parameters": [
        {
          "name": "expenseId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/expenses/{expense_id}/original_files",
      "method": "/expenses/{expenseId}/originalFilesGet",
      "httpMethod": "get",
      "tag": "Expense OIOUBL files",
      "typeScriptTag": "expenseOioublFiles",
      "description": "Show list of all OIOUBL files for the expense",
      "parameters": [
        {
          "name": "expenseId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/expenses/{expense_id}/original_files/{file_id}",
      "method": "/expenses/{expenseId}/originalFiles/{fileId}Get",
      "httpMethod": "get",
      "tag": "Expense OIOUBL files",
      "typeScriptTag": "expenseOioublFiles",
      "description": "Show OIOUBL file",
      "parameters": [
        {
          "name": "expenseId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/financial_statistics",
      "method": "getFinancialStatistics",
      "httpMethod": "get",
      "tag": "Financial Statistics",
      "typeScriptTag": "financialStatistics",
      "description": "Get general statistics",
      "parameters": [
        {
          "name": "dateFrom",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dateTo",
          "schema": "string",
          "description": ""
        },
        {
          "name": "projectId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "projectStatusIds[]",
          "schema": "string",
          "description": ""
        },
        {
          "name": "onlyNotInvoiced",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "details",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/financial_statistics/expensesSalesPrice",
      "method": "getExpensesSalesPrice",
      "httpMethod": "get",
      "tag": "Financial Statistics",
      "typeScriptTag": "financialStatistics",
      "description": "Get expenses sales price",
      "parameters": [
        {
          "name": "dateFrom",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dateTo",
          "schema": "string",
          "description": ""
        },
        {
          "name": "projectId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/financial_statistics/invoicedAmount",
      "method": "getInvoicedAmount",
      "httpMethod": "get",
      "tag": "Financial Statistics",
      "typeScriptTag": "financialStatistics",
      "description": "Get invoiced amount",
      "parameters": [
        {
          "name": "dateFrom",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dateTo",
          "schema": "string",
          "description": ""
        },
        {
          "name": "projectId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/financial_statistics/margin",
      "method": "getMargin",
      "httpMethod": "get",
      "tag": "Financial Statistics",
      "typeScriptTag": "financialStatistics",
      "description": "Get margin",
      "parameters": [
        {
          "name": "dateFrom",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dateTo",
          "schema": "string",
          "description": ""
        },
        {
          "name": "projectId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/financial_statistics/materialRentalsCostPrice",
      "method": "getMaterialRentalsCostPrice",
      "httpMethod": "get",
      "tag": "Financial Statistics",
      "typeScriptTag": "financialStatistics",
      "description": "Get products material rentals cost price",
      "parameters": [
        {
          "name": "dateFrom",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dateTo",
          "schema": "string",
          "description": ""
        },
        {
          "name": "projectId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/financial_statistics/overview",
      "method": "getFinancialStatisticsOverview",
      "httpMethod": "get",
      "tag": "Financial Statistics",
      "typeScriptTag": "financialStatistics",
      "description": "Get statistics overview",
      "parameters": [
        {
          "name": "dateFrom",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dateTo",
          "schema": "string",
          "description": ""
        },
        {
          "name": "projectId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/financial_statistics/productsCostPrice",
      "method": "getProductsCostPrice",
      "httpMethod": "get",
      "tag": "Financial Statistics",
      "typeScriptTag": "financialStatistics",
      "description": "Get products cost price",
      "parameters": [
        {
          "name": "dateFrom",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dateTo",
          "schema": "string",
          "description": ""
        },
        {
          "name": "projectId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/financial_statistics/workingHours",
      "method": "/financialStatistics/workingHoursGet",
      "httpMethod": "get",
      "tag": "FinancialStatistics",
      "typeScriptTag": "financialStatistics",
      "description": "Get Total working hours grouped by time entry type",
      "parameters": [
        {
          "name": "dateFrom",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateTo",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "projectId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/form_field_types",
      "method": "/formFieldTypesGet",
      "httpMethod": "get",
      "tag": "FormFieldTypes",
      "typeScriptTag": "formFieldTypes",
      "description": "Get list of form field types",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Used to filter on the `name` of the form_fields"
        },
        {
          "name": "identifier",
          "schema": "string",
          "description": "Used to filter on the `identifier` of the form_fields"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/form_field_types/{form_field_type_id}",
      "method": "/formFieldTypes/{formFieldTypeId}Get",
      "httpMethod": "get",
      "tag": "FormFieldTypes",
      "typeScriptTag": "formFieldTypes",
      "description": "Get details about single `FormField`",
      "parameters": [
        {
          "name": "formFieldTypeId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/form_fields",
      "method": "/formFieldsPost",
      "httpMethod": "post",
      "tag": "FormFields",
      "typeScriptTag": "formFields",
      "description": "Add a new field to a `Form`",
      "parameters": [
        {
          "name": "comment",
          "schema": "string",
          "description": ""
        },
        {
          "name": "content_value",
          "schema": "string",
          "description": ""
        },
        {
          "name": "file_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "form_field_type_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "form_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "form_template_field_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "placement",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/form_fields/{form_field_id}",
      "method": "/formFields/{formFieldId}Get",
      "httpMethod": "get",
      "tag": "FormFields",
      "typeScriptTag": "formFields",
      "description": "Get details about single `FormField`",
      "parameters": [
        {
          "name": "formFieldId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/form_templates",
      "method": "/formTemplatesGet",
      "httpMethod": "get",
      "tag": "FormTemplates",
      "typeScriptTag": "formTemplates",
      "description": "Get array of form_templates for your company",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": "Used to filter on the `name` of the form_templates"
        },
        {
          "name": "identifier",
          "schema": "string",
          "required": false,
          "description": "Used to filter on the `identifier` of the form_templates"
        },
        {
          "name": "pdfTemplateIdentifier",
          "schema": "string",
          "description": "Used to filter on the `pdf_template_identifier` of the form_templates"
        },
        {
          "name": "description",
          "schema": "string",
          "description": "Used to filter on the `description` of the form_templates"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/form_templates/{form_template_id}",
      "method": "/formTemplates/{formTemplateId}Get",
      "httpMethod": "get",
      "tag": "FormTemplates",
      "typeScriptTag": "formTemplates",
      "description": "View one form template",
      "parameters": [
        {
          "name": "formTemplateId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms",
      "method": "/formsGet",
      "httpMethod": "get",
      "tag": "Forms",
      "typeScriptTag": "forms",
      "description": "Retrieve array of forms",
      "parameters": [
        {
          "name": "extended",
          "schema": "string",
          "description": "Used to have extended details from the forms from the `Form`'s `FormFields`"
        },
        {
          "name": "dateFrom",
          "schema": "string",
          "description": "Used in conjunction with `date_to` to only show forms within these dates - format like `2016-28-05`"
        },
        {
          "name": "dateTo",
          "schema": "string",
          "description": "Used in conjunction with `date_from` to only show forms within these dates - format like `2016-28-30`"
        },
        {
          "name": "show",
          "schema": "string",
          "description": "Used to show forms with trashed"
        },
        {
          "name": "projectId",
          "schema": "string",
          "description": "Used to filter on the `project_id` of the forms"
        },
        {
          "name": "createdById",
          "schema": "string",
          "required": false,
          "description": "Used to filter on the `created_by_id` of the forms"
        },
        {
          "name": "formTemplateId",
          "schema": "array",
          "description": "Used to filter on the `form_template_id` of the forms. Accept single value and array."
        },
        {
          "name": "formTemplateType",
          "schema": "string",
          "description": "Filter by `form_templates.identifier` containing string passed in `form_template_type`. Accept strings like [`qa`, `dagseddel`]"
        },
        {
          "name": "employeeName",
          "schema": "string",
          "required": false,
          "description": "Used to filter forms by user's first or last name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms",
      "method": "/formsPost",
      "httpMethod": "post",
      "tag": "Forms",
      "typeScriptTag": "forms",
      "description": "Add new form",
      "parameters": [
        {
          "name": "form_template_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "project_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/undelete/{form_id}",
      "method": "/forms/undelete/{formId}Get",
      "httpMethod": "get",
      "tag": "Forms",
      "typeScriptTag": "forms",
      "description": "Undelete form and related entities to it",
      "parameters": [
        {
          "name": "formId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/view_time_form_pdf/{form_id}",
      "method": "/forms/viewTimeFormPdf/{formId}Get",
      "httpMethod": "get",
      "tag": "Forms",
      "typeScriptTag": "forms",
      "description": "Generate time form pdf",
      "parameters": [
        {
          "name": "formId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/{form_id}",
      "method": "/forms/{formId}Delete",
      "httpMethod": "delete",
      "tag": "Forms",
      "typeScriptTag": "forms",
      "description": "Delete a form",
      "parameters": [
        {
          "name": "formId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/forms/{form_id}",
      "method": "/forms/{formId}Get",
      "httpMethod": "get",
      "tag": "Forms",
      "typeScriptTag": "forms",
      "description": "View form",
      "parameters": [
        {
          "name": "formId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/{form_id}",
      "method": "/forms/{formId}Put",
      "httpMethod": "put",
      "tag": "Forms",
      "typeScriptTag": "forms",
      "description": "Edit a form",
      "parameters": [
        {
          "name": "formId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/integrations",
      "method": "getIntegrationsList",
      "httpMethod": "get",
      "tag": "Integrations",
      "typeScriptTag": "integrations",
      "description": "Get integrations list",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/integrations/billysAuthenticate",
      "method": "/integrations/billysAuthenticatePost",
      "httpMethod": "post",
      "tag": "Integrations",
      "typeScriptTag": "integrations",
      "description": "Authenticate to Billys",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/integrations/contactsSync",
      "method": "getIntegrationsContactsSync",
      "httpMethod": "get",
      "tag": "Integrations",
      "typeScriptTag": "integrations",
      "description": "Force Synchronization with ERP systems",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/integrations/productsSync",
      "method": "/integrations/productsSyncGet",
      "httpMethod": "get",
      "tag": "Integrations",
      "typeScriptTag": "integrations",
      "description": "Sync products from erp integration",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/integrations/{integration_id}",
      "method": "getIntegrationsView",
      "httpMethod": "get",
      "tag": "Integrations",
      "typeScriptTag": "integrations",
      "description": "View integration details",
      "parameters": [
        {
          "name": "integrationId",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoice_line_text_template",
      "method": "/invoiceLineTextTemplateGet",
      "httpMethod": "get",
      "tag": "InvoiceLineTextTemplates",
      "typeScriptTag": "invoiceLineTextTemplates",
      "description": "Get a list of invoice line text templates",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoice_line_text_template",
      "method": "/invoiceLineTextTemplatePost",
      "httpMethod": "post",
      "tag": "InvoiceLineTextTemplates",
      "typeScriptTag": "invoiceLineTextTemplates",
      "description": "Add a new invoice line text template",
      "parameters": [
        {
          "name": "html",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "image",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoice_line_text_template/{invoice_line_text_template_id}",
      "method": "/invoiceLineTextTemplate/{invoiceLineTextTemplateId}Delete",
      "httpMethod": "delete",
      "tag": "InvoiceLineTextTemplates",
      "typeScriptTag": "invoiceLineTextTemplates",
      "description": "Delete an invoice line text template",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoice_line_text_template/{invoice_line_text_template_id}",
      "method": "/invoiceLineTextTemplate/{invoiceLineTextTemplateId}Get",
      "httpMethod": "get",
      "tag": "InvoiceLineTextTemplates",
      "typeScriptTag": "invoiceLineTextTemplates",
      "description": "Get a single invoice line text template",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoice_line_text_template/{invoice_line_text_template_id}",
      "method": "/invoiceLineTextTemplate/{invoiceLineTextTemplateId}Post",
      "httpMethod": "post",
      "tag": "InvoiceLineTextTemplates",
      "typeScriptTag": "invoiceLineTextTemplates",
      "description": "Edit an invoice line text template",
      "parameters": [
        {
          "name": "html",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "image",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoice_line_texts/",
      "method": "/invoiceLineTexts/Post",
      "httpMethod": "post",
      "tag": "InvoiceLines",
      "typeScriptTag": "invoiceLines",
      "description": "Add invoice line text",
      "parameters": [
        {
          "name": "html",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "image",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "invoice_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "placement",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoice_line_texts/{invoice_line_text_id}",
      "method": "/invoiceLineTexts/{invoiceLineTextId}Post",
      "httpMethod": "post",
      "tag": "InvoiceLines",
      "typeScriptTag": "invoiceLines",
      "description": "Edit invoice line text",
      "parameters": [
        {
          "name": "invoiceLineTextId",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        },
        {
          "name": "html",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "image",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoice_lines",
      "method": "/invoiceLinesGet",
      "httpMethod": "get",
      "tag": "InvoiceLines",
      "typeScriptTag": "invoiceLines",
      "description": "View list of invoice lines",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "productId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "discountText",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoice_lines",
      "method": "/invoiceLinesPost",
      "httpMethod": "post",
      "tag": "InvoiceLines",
      "typeScriptTag": "invoiceLines",
      "description": "Add invoice line",
      "parameters": [
        {
          "name": "child_invoice_lines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "discount_percent",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "discount_text",
          "schema": "string",
          "description": ""
        },
        {
          "name": "invoice_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "product_bundle_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "product_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "selling_price",
          "schema": "number",
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoice_lines/{invoice_line_id}",
      "method": "/invoiceLines/{invoiceLineId}Delete",
      "httpMethod": "delete",
      "tag": "InvoiceLines",
      "typeScriptTag": "invoiceLines",
      "description": "Delete invoice line",
      "parameters": [
        {
          "name": "invoiceLineId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoice_lines/{invoice_line_id}",
      "method": "/invoiceLines/{invoiceLineId}Get",
      "httpMethod": "get",
      "tag": "InvoiceLines",
      "typeScriptTag": "invoiceLines",
      "description": "View invoice line",
      "parameters": [
        {
          "name": "invoiceLineId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoice_lines/{invoice_line_id}",
      "method": "/invoiceLines/{invoiceLineId}Put",
      "httpMethod": "put",
      "tag": "InvoiceLines",
      "typeScriptTag": "invoiceLines",
      "description": "Edit invoice line",
      "parameters": [
        {
          "name": "invoiceLineId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "discount_percent",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "discount_text",
          "schema": "string",
          "description": ""
        },
        {
          "name": "invoice_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "product_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "selling_price",
          "schema": "number",
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoices",
      "method": "/invoicesGet",
      "httpMethod": "get",
      "tag": "Invoices",
      "typeScriptTag": "invoices",
      "description": "View list of invoices",
      "parameters": [
        {
          "name": "contactId",
          "schema": "string",
          "description": "Used to filter on the `contact_id` of the invoices"
        },
        {
          "name": "projectId",
          "schema": "string",
          "required": false,
          "description": "Used to filter on the `project_id` of the invoices"
        },
        {
          "name": "invoiceNumber",
          "schema": "string",
          "description": "Used to filter on the `invoice_number` of the invoices"
        },
        {
          "name": "offerNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "isDraft",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "isOffer",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "isLocked",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "isFixedPrice",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "dateFrom",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dateTo",
          "schema": "string",
          "description": ""
        },
        {
          "name": "issuedDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sentAsDraft",
          "schema": "integer",
          "description": "Used to filter invoices which are sent as draft to integration"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoices",
      "method": "/invoicesPost",
      "httpMethod": "post",
      "tag": "Invoices",
      "typeScriptTag": "invoices",
      "description": "Add invoice",
      "parameters": [
        {
          "name": "contact_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_or_modified_gte",
          "schema": "string",
          "description": ""
        },
        {
          "name": "date_from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "date_to",
          "schema": "string",
          "description": ""
        },
        {
          "name": "erp_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "erp_payment_term_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "invoice_number",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "is_draft",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "is_locked",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "is_offer",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "issued_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "offer_number",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "payment_due_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "payment_term_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "project_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vat_percent",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoices/bulkDelete",
      "method": "bulkDeleteInvoices",
      "httpMethod": "delete",
      "tag": "Invoices",
      "typeScriptTag": "invoices",
      "description": "Bulk delete invoices",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoices/vatOptions",
      "method": "/invoices/vatOptionsGet",
      "httpMethod": "get",
      "tag": "Invoices",
      "typeScriptTag": "invoices",
      "description": "List VAT options",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoices/{invoice_id}",
      "method": "/invoices/{invoiceId}Delete",
      "httpMethod": "delete",
      "tag": "Invoices",
      "typeScriptTag": "invoices",
      "description": "Delete invoice",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoices/{invoice_id}",
      "method": "/invoices/{invoiceId}Get",
      "httpMethod": "get",
      "tag": "Invoices",
      "typeScriptTag": "invoices",
      "description": "View invoice",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoices/{invoice_id}",
      "method": "/invoices/{invoiceId}Put",
      "httpMethod": "put",
      "tag": "Invoices",
      "typeScriptTag": "invoices",
      "description": "Edit invoice",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "contact_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "date_from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "date_to",
          "schema": "string",
          "description": ""
        },
        {
          "name": "erp_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "erp_payment_term_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "invoice_number",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "is_draft",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "is_locked",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "is_offer",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "issued_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "offer_number",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "payment_due_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "payment_term_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "project_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vat_percent",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoices/{invoice_id}/copy",
      "method": "/invoices/{invoiceId}/copyPost",
      "httpMethod": "post",
      "tag": "Invoices",
      "typeScriptTag": "invoices",
      "description": "Create a copy of an invoice",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "projectId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "contactId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoices/{invoice_id}/emails/{email_id}",
      "method": "getOneInvoiceEmails",
      "httpMethod": "get",
      "tag": "InvoiceEmails",
      "typeScriptTag": "invoiceEmails",
      "description": "Get an invoice emails",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoices/{invoice_id}/files",
      "method": "getInvoiceFiles",
      "httpMethod": "get",
      "tag": "InvoiceFiles",
      "typeScriptTag": "invoiceFiles",
      "description": "Get list of invoice files",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoices/{invoice_id}/files",
      "method": "createInvoiceFile",
      "httpMethod": "post",
      "tag": "InvoiceFiles",
      "typeScriptTag": "invoiceFiles",
      "description": "Create a new invoice file",
      "parameters": [
        {
          "name": "file_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "invoice_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoices/{invoice_id}/files/{file_id}",
      "method": "/invoices/{invoiceId}/files/{fileId}Delete",
      "httpMethod": "delete",
      "tag": "InvoiceFiles",
      "typeScriptTag": "invoiceFiles",
      "description": "Delete invoice file",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoices/{invoice_id}/files/{file_id}",
      "method": "getOneInvoiceFiles",
      "httpMethod": "get",
      "tag": "InvoiceFiles",
      "typeScriptTag": "invoiceFiles",
      "description": "Get an invoice files",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoices/{invoice_id}/linkProjectPdf",
      "method": "/invoices/{invoiceId}/linkProjectPdfPost",
      "httpMethod": "post",
      "tag": "Invoices",
      "typeScriptTag": "invoices",
      "description": "Creates an invoice file containing the project's pdf overview",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoices/{invoice_id}/unlinkProjectPdf",
      "method": "/invoices/{invoiceId}/unlinkProjectPdfPost",
      "httpMethod": "post",
      "tag": "Invoices",
      "typeScriptTag": "invoices",
      "description": "Deletes the linked project overview pdf",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/mass_messages_users",
      "method": "/massMessagesUsersGet",
      "httpMethod": "get",
      "tag": "MassMessagesUsers",
      "typeScriptTag": "massMessagesUsers",
      "description": "View list of mass messages for specific user",
      "parameters": [
        {
          "name": "isRead",
          "schema": "boolean",
          "required": false,
          "description": "Used to filter on the `is_read` of the mass messages"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mass_messages_users/{mass_messages_user_id}",
      "method": "/massMessagesUsers/{massMessagesUserId}Get",
      "httpMethod": "get",
      "tag": "MassMessagesUsers",
      "typeScriptTag": "massMessagesUsers",
      "description": "View mass message",
      "parameters": [
        {
          "name": "massMessagesUserId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mass_messages_users/{mass_messages_user_id}",
      "method": "/massMessagesUsers/{massMessagesUserId}Put",
      "httpMethod": "put",
      "tag": "MassMessagesUsers",
      "typeScriptTag": "massMessagesUsers",
      "description": "Edit mass message",
      "parameters": [
        {
          "name": "massMessagesUserId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/materials",
      "method": "/materialsGet",
      "httpMethod": "get",
      "tag": "Materials",
      "typeScriptTag": "materials",
      "description": "View list of all materials",
      "parameters": [
        {
          "name": "barcode",
          "schema": "string",
          "required": false,
          "description": "Used to filter on the `barcode` of the materials"
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Used to filter on the `name` of the materials"
        },
        {
          "name": "projectId",
          "schema": "string",
          "required": false,
          "description": "Used to find materials used in specific project by `project_id`"
        },
        {
          "name": "currentlyRented",
          "schema": "boolean",
          "required": false,
          "description": "Used to find currently rented materials"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/materials",
      "method": "/materialsPost",
      "httpMethod": "post",
      "tag": "Materials",
      "typeScriptTag": "materials",
      "description": "Add material",
      "parameters": [
        {
          "name": "barcode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "billing_cysle",
          "schema": "string",
          "description": ""
        },
        {
          "name": "cost_price",
          "schema": "number",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "is_single_usage",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "selling_price",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/materials/{material_id}",
      "method": "/materials/{materialId}Delete",
      "httpMethod": "delete",
      "tag": "Materials",
      "typeScriptTag": "materials",
      "description": "Delete material",
      "parameters": [
        {
          "name": "materialId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/materials/{material_id}",
      "method": "/materials/{materialId}Get",
      "httpMethod": "get",
      "tag": "Materials",
      "typeScriptTag": "materials",
      "description": "View material",
      "parameters": [
        {
          "name": "materialId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/materials/{material_id}",
      "method": "/materials/{materialId}Put",
      "httpMethod": "put",
      "tag": "Materials",
      "typeScriptTag": "materials",
      "description": "Edit material",
      "parameters": [
        {
          "name": "materialId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/materials/{material_id}/rentals/",
      "method": "/materials/{materialId}/rentals/Get",
      "httpMethod": "get",
      "tag": "MaterialRentals",
      "typeScriptTag": "materialRentals",
      "description": "Show list of rentals for specific material",
      "parameters": [
        {
          "name": "materialId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/materials/{material_id}/rentals/",
      "method": "/materials/{materialId}/rentals/Post",
      "httpMethod": "post",
      "tag": "MaterialRentals",
      "typeScriptTag": "materialRentals",
      "description": "Add material rental",
      "parameters": [
        {
          "name": "materialId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "form_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "from_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "is_invoiced",
          "schema": "string",
          "description": ""
        },
        {
          "name": "material_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "project_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "number",
          "description": ""
        },
        {
          "name": "to_date",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/materials/{material_id}/rentals/checkout/",
      "method": "/materials/{materialId}/rentals/checkout/Post",
      "httpMethod": "post",
      "tag": "MaterialRentals",
      "typeScriptTag": "materialRentals",
      "description": "Checkout material rental",
      "parameters": [
        {
          "name": "materialId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "form_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "material_rental_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "to_date",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/materials/{material_id}/rentals/{material_rental_id}/",
      "method": "/materials/{materialId}/rentals/{materialRentalId}/Delete",
      "httpMethod": "delete",
      "tag": "MaterialRentals",
      "typeScriptTag": "materialRentals",
      "description": "Delete material rental",
      "parameters": [
        {
          "name": "materialId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "materialRentalId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/materials/{material_id}/rentals/{material_rental_id}/",
      "method": "/materials/{materialId}/rentals/{materialRentalId}/Get",
      "httpMethod": "get",
      "tag": "MaterialRentals",
      "typeScriptTag": "materialRentals",
      "description": "Show rental foor materi",
      "parameters": [
        {
          "name": "materialId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "materialRentalId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/materials/{material_id}/rentals/{material_rental_id}/",
      "method": "/materials/{materialId}/rentals/{materialRentalId}/Put",
      "httpMethod": "put",
      "tag": "MaterialRentals",
      "typeScriptTag": "materialRentals",
      "description": "Edit material rental",
      "parameters": [
        {
          "name": "materialId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "materialRentalId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/offer_statuses",
      "method": "/offerStatusesGet",
      "httpMethod": "get",
      "tag": "OfferStatuses",
      "typeScriptTag": "offerStatuses",
      "description": "Get list of offer statuses",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/offer_statuses",
      "method": "/offerStatusesPost",
      "httpMethod": "post",
      "tag": "OfferStatuses",
      "typeScriptTag": "offerStatuses",
      "description": "Create a new offer status",
      "parameters": [
        {
          "name": "company_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "identifier",
          "schema": "string",
          "description": ""
        },
        {
          "name": "is_custom",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/offer_statuses/bulkDelete",
      "method": "/offerStatuses/bulkDeleteDelete",
      "httpMethod": "delete",
      "tag": "OfferStatuses",
      "typeScriptTag": "offerStatuses",
      "description": "Bulk delete offer statuses",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/offer_statuses/{offer_status_id}",
      "method": "/offerStatuses/{offerStatusId}Delete",
      "httpMethod": "delete",
      "tag": "OfferStatuses",
      "typeScriptTag": "offerStatuses",
      "description": "Delete a offer status",
      "parameters": [
        {
          "name": "offerStatusId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offer_statuses/{offer_status_id}",
      "method": "/offerStatuses/{offerStatusId}Get",
      "httpMethod": "get",
      "tag": "OfferStatuses",
      "typeScriptTag": "offerStatuses",
      "description": "Get a single offer status",
      "parameters": [
        {
          "name": "offerStatusId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offer_statuses/{offer_status_id}",
      "method": "/offerStatuses/{offerStatusId}Put",
      "httpMethod": "put",
      "tag": "OfferStatuses",
      "typeScriptTag": "offerStatuses",
      "description": "Edit a offer status",
      "parameters": [
        {
          "name": "offerStatusId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/offers",
      "method": "/offersGet",
      "httpMethod": "get",
      "tag": "Offers",
      "typeScriptTag": "offers",
      "description": "View list of offers",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/offers",
      "method": "/offersPost",
      "httpMethod": "post",
      "tag": "Offers",
      "typeScriptTag": "offers",
      "description": "Add new offer",
      "parameters": [
        {
          "name": "offer_lines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "project_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/offers/{offer_id}",
      "method": "/offers/{offerId}Delete",
      "httpMethod": "delete",
      "tag": "Offers",
      "typeScriptTag": "offers",
      "description": "Delete an offer",
      "parameters": [
        {
          "name": "offerId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offers/{offer_id}",
      "method": "/offers/{offerId}Get",
      "httpMethod": "get",
      "tag": "Offers",
      "typeScriptTag": "offers",
      "description": "View offer",
      "parameters": [
        {
          "name": "offerId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offers/{offer_id}",
      "method": "/offers/{offerId}Put",
      "httpMethod": "put",
      "tag": "Offers",
      "typeScriptTag": "offers",
      "description": "Edit an offer",
      "parameters": [
        {
          "name": "offerId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offers/{offer_id}/changelog",
      "method": "/offers/{offerId}/changelogGet",
      "httpMethod": "get",
      "tag": "Changelog",
      "typeScriptTag": "changelog",
      "description": "Get list of changelog history for the offer. Returns offer object with contact and user objects if they are provided",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/overview/rejection_reasons",
      "method": "/overview/rejectionReasonsGet",
      "httpMethod": "get",
      "tag": "RejectionReasons",
      "typeScriptTag": "rejectionReasons",
      "description": "Get a statistics data for rejection reasons",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/payment_term_types",
      "method": "/paymentTermTypesGet",
      "httpMethod": "get",
      "tag": "PaymentTermTypes",
      "typeScriptTag": "paymentTermTypes",
      "description": "Get a list of payment term types",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/payment_term_types/{payment_term_type_id}",
      "method": "/paymentTermTypes/{paymentTermTypeId}Get",
      "httpMethod": "get",
      "tag": "PaymentTermTypes",
      "typeScriptTag": "paymentTermTypes",
      "description": "Details of 1 payment term type",
      "parameters": [
        {
          "name": "paymentTermTypeId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/payment_terms",
      "method": "/paymentTermsGet",
      "httpMethod": "get",
      "tag": "PaymentTerms",
      "typeScriptTag": "paymentTerms",
      "description": "Get a list of payment terms",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/payment_terms/erp",
      "method": "/paymentTerms/erpGet",
      "httpMethod": "get",
      "tag": "PaymentTerms",
      "typeScriptTag": "paymentTerms",
      "description": "Get integration payment terms list",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/payment_terms/{payment_term_id}",
      "method": "/paymentTerms/{paymentTermId}Get",
      "httpMethod": "get",
      "tag": "PaymentTerms",
      "typeScriptTag": "paymentTerms",
      "description": "Details of 1 payment term",
      "parameters": [
        {
          "name": "paymentTermId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/ping",
      "method": "/pingGet",
      "httpMethod": "get",
      "tag": "Ping",
      "typeScriptTag": "ping",
      "description": "Check if API is up and API key works",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/products",
      "method": "/productsGet",
      "httpMethod": "get",
      "tag": "Products",
      "typeScriptTag": "products",
      "description": "List products",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": "Used to filter on the `name` of the products"
        },
        {
          "name": "productNumber",
          "schema": "string",
          "description": "Used to filter on the `product_number` of the products"
        },
        {
          "name": "barcode",
          "schema": "string",
          "description": "Used to filter on the `barcode` of the products"
        },
        {
          "name": "modifiedGte",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/products",
      "method": "/productsPost",
      "httpMethod": "post",
      "tag": "Products",
      "typeScriptTag": "products",
      "description": "Add new product",
      "parameters": [
        {
          "name": "barcode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "buying_price",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "erp_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "product_number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "selling_price",
          "schema": "number",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/bulkDelete",
      "method": "bulkDeleteProducts",
      "httpMethod": "delete",
      "tag": "Products",
      "typeScriptTag": "products",
      "description": "Bulk delete products",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/undelete/{product_id}",
      "method": "/products/undelete/{productId}Post",
      "httpMethod": "post",
      "tag": "Products",
      "typeScriptTag": "products",
      "description": "Restore a deleted product",
      "parameters": [
        {
          "name": "productId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{product_id}",
      "method": "/products/{productId}Delete",
      "httpMethod": "delete",
      "tag": "Products",
      "typeScriptTag": "products",
      "description": "Delete a product",
      "parameters": [
        {
          "name": "productId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{product_id}",
      "method": "/products/{productId}Get",
      "httpMethod": "get",
      "tag": "Products",
      "typeScriptTag": "products",
      "description": "View single product",
      "parameters": [
        {
          "name": "productId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{product_id}",
      "method": "/products/{productId}Put",
      "httpMethod": "put",
      "tag": "Products",
      "typeScriptTag": "products",
      "description": "Edit a product",
      "parameters": [
        {
          "name": "productId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{product_id}/uploadImage",
      "method": "uploadOrDeleteProductImage",
      "httpMethod": "post",
      "tag": "Products",
      "typeScriptTag": "products",
      "description": "",
      "parameters": [
        {
          "name": "image",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/products/{product_id}/variants",
      "method": "/products/{productId}/variantsGet",
      "httpMethod": "get",
      "tag": "ProductVariants",
      "typeScriptTag": "productVariants",
      "description": "Get a product's variants",
      "parameters": [
        {
          "name": "productId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{product_id}/variants",
      "method": "/products/{productId}/variantsPost",
      "httpMethod": "post",
      "tag": "ProductVariants",
      "typeScriptTag": "productVariants",
      "description": "Add a new variant to a product",
      "parameters": [
        {
          "name": "productId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": "Filters by name"
        },
        {
          "name": "ratio",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "variant_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "variant_type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{product_id}/variants/{variant_type}/{variant_id}",
      "method": "/products/{productId}/variants/{variantType}/{variantId}Delete",
      "httpMethod": "delete",
      "tag": "ProductVariants",
      "typeScriptTag": "productVariants",
      "description": "Delete a product variant",
      "parameters": [
        {
          "name": "productId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "variantType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "variantId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/project_custom_field_attributes",
      "method": "/projectCustomFieldAttributesGet",
      "httpMethod": "get",
      "tag": "ProjectCustomFieldAttributes",
      "typeScriptTag": "projectCustomFieldAttributes",
      "description": "Get a list of project custom field attributes",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/project_custom_field_attributes/{project_custom_field_attribute_id}",
      "method": "/projectCustomFieldAttributes/{projectCustomFieldAttributeId}Get",
      "httpMethod": "get",
      "tag": "ProjectCustomFieldAttributes",
      "typeScriptTag": "projectCustomFieldAttributes",
      "description": "Details of 1 project custom field attribute",
      "parameters": [
        {
          "name": "projectCustomFieldAttributeId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/project_status_types",
      "method": "/projectStatusTypesGet",
      "httpMethod": "get",
      "tag": "ProjectStatusTypes",
      "typeScriptTag": "projectStatusTypes",
      "description": "Get a list of project status types",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/project_statuses",
      "method": "/projectStatusesGet",
      "httpMethod": "get",
      "tag": "ProjectStatuses",
      "typeScriptTag": "projectStatuses",
      "description": "Get list of project statuses",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/project_statuses",
      "method": "/projectStatusesPost",
      "httpMethod": "post",
      "tag": "ProjectStatuses",
      "typeScriptTag": "projectStatuses",
      "description": "Create a new project status",
      "parameters": [
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "project_status_type_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/project_statuses/add_default",
      "method": "/projectStatuses/addDefaultPost",
      "httpMethod": "post",
      "tag": "DefaultProjectStatuses",
      "typeScriptTag": "defaultProjectStatuses",
      "description": "Add default project statuses to company",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/project_statuses/bulkDelete",
      "method": "/projectStatuses/bulkDeleteDelete",
      "httpMethod": "delete",
      "tag": "ProjectStatuses",
      "typeScriptTag": "projectStatuses",
      "description": "Bulk delete project statuses",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/project_statuses/{project_status_id}",
      "method": "/projectStatuses/{projectStatusId}Delete",
      "httpMethod": "delete",
      "tag": "ProjectStatuses",
      "typeScriptTag": "projectStatuses",
      "description": "Delete a project status",
      "parameters": [
        {
          "name": "projectStatusId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/project_statuses/{project_status_id}",
      "method": "/projectStatuses/{projectStatusId}Get",
      "httpMethod": "get",
      "tag": "ProjectStatuses",
      "typeScriptTag": "projectStatuses",
      "description": "Get a single project status",
      "parameters": [
        {
          "name": "projectStatusId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/project_statuses/{project_status_id}",
      "method": "/projectStatuses/{projectStatusId}Put",
      "httpMethod": "put",
      "tag": "ProjectStatuses",
      "typeScriptTag": "projectStatuses",
      "description": "Edit a project status",
      "parameters": [
        {
          "name": "projectStatusId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects",
      "method": "/projectsGet",
      "httpMethod": "get",
      "tag": "Projects",
      "typeScriptTag": "projects",
      "description": "View list of projects",
      "parameters": [
        {
          "name": "showAll",
          "schema": "boolean",
          "required": false,
          "description": "Unless this is set to `true` only open projects will be shown"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort projects by `not_invoiced_amount`"
        },
        {
          "name": "direction",
          "schema": "string",
          "description": ""
        },
        {
          "name": "contactId",
          "schema": "string",
          "description": "Used to filter on the `contact_id` of the projects"
        },
        {
          "name": "companyId",
          "schema": "string",
          "description": "Used to filter on the `company_id` of the projects"
        },
        {
          "name": "projectStatusId",
          "schema": "string",
          "description": "Used to filter on the `project_status_id` of the projects"
        },
        {
          "name": "projectStatusIds",
          "schema": "array",
          "description": "Used to filter on the `project_status_id` of the projects (match any of the provided values)"
        },
        {
          "name": "name",
          "schema": "string",
          "description": "Used to search on the `name` of the projects"
        },
        {
          "name": "erpProjectId",
          "schema": "string",
          "description": "Used to search on the `erp_project_id` of the projects"
        },
        {
          "name": "erpTaskId",
          "schema": "string",
          "description": "Used to search on the `erp_task_id` of the projects"
        },
        {
          "name": "startTimeGte",
          "schema": "string",
          "description": "Show projects with start time after than this value"
        },
        {
          "name": "startTimeLte",
          "schema": "string",
          "description": "Show projects with start time before this value"
        },
        {
          "name": "startTimeEq",
          "schema": "string",
          "description": "Show only projects with start time on specific date"
        },
        {
          "name": "eventStart[][gt]",
          "schema": "string",
          "description": ""
        },
        {
          "name": "eventStart[][lt]",
          "schema": "string",
          "description": ""
        },
        {
          "name": "eventStart[][eq]",
          "schema": "string",
          "description": ""
        },
        {
          "name": "eventEnd[][gt]",
          "schema": "string",
          "description": ""
        },
        {
          "name": "eventEnd[][lt]",
          "schema": "string",
          "description": ""
        },
        {
          "name": "eventEnd[][eq]",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects",
      "method": "/projectsPost",
      "httpMethod": "post",
      "tag": "Projects",
      "typeScriptTag": "projects",
      "description": "Add a project",
      "parameters": [
        {
          "name": "child_projects",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "city_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "contact_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "erp_project_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "erp_task_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "parent_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "project_status_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "start_time",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "street_name",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/has_projects_with_custom_statuses",
      "method": "/projects/hasProjectsWithCustomStatusesGet",
      "httpMethod": "get",
      "tag": "ProjectStatuses",
      "typeScriptTag": "projectStatuses",
      "description": "Check if the company has projects with custom statuses",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{project_id}",
      "method": "/projects/{projectId}Delete",
      "httpMethod": "delete",
      "tag": "Projects",
      "typeScriptTag": "projects",
      "description": "Delete a project",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{project_id}",
      "method": "/projects/{projectId}Get",
      "httpMethod": "get",
      "tag": "Projects",
      "typeScriptTag": "projects",
      "description": "View specific project",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{project_id}",
      "method": "/projects/{projectId}Put",
      "httpMethod": "put",
      "tag": "Projects",
      "typeScriptTag": "projects",
      "description": "Edit a project",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "contact_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "erp_project_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "erp_task_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "project_status_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "start_time",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "street_name",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{project_id}/all_files",
      "method": "/projects/{projectId}/allFilesGet",
      "httpMethod": "get",
      "tag": "Projects",
      "typeScriptTag": "projects",
      "description": "Show list of all files uploaded to project",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{project_id}/files",
      "method": "/projects/{projectId}/filesGet",
      "httpMethod": "get",
      "tag": "Projects",
      "typeScriptTag": "projects",
      "description": "Show list of files uploaded to project",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{project_id}/files/{file_id}/",
      "method": "/projects/{projectId}/files/{fileId}/Delete",
      "httpMethod": "delete",
      "tag": "Projects",
      "typeScriptTag": "projects",
      "description": "Delete file",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{project_id}/files/{file_id}/",
      "method": "/projects/{projectId}/files/{fileId}/Get",
      "httpMethod": "get",
      "tag": "Projects",
      "typeScriptTag": "projects",
      "description": "Show file",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{project_id}/files/{file_id}/",
      "method": "/projects/{projectId}/files/{fileId}/Put",
      "httpMethod": "put",
      "tag": "Projects",
      "typeScriptTag": "projects",
      "description": "Edit file",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{project_id}/project_files",
      "method": "/projects/{projectId}/projectFilesGet",
      "httpMethod": "get",
      "tag": "Projects",
      "typeScriptTag": "projects",
      "description": "Show list of project files uploaded to project",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{project_id}/project_files",
      "method": "/projects/{projectId}/projectFilesPost",
      "httpMethod": "post",
      "tag": "Projects",
      "typeScriptTag": "projects",
      "description": "Add project file to projects",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "file",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{project_id}/project_files/{project_file_id}/",
      "method": "/projects/{projectId}/projectFiles/{projectFileId}/Delete",
      "httpMethod": "delete",
      "tag": "Projects",
      "typeScriptTag": "projects",
      "description": "Delete project file",
      "parameters": [
        {
          "name": "projectFileId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{project_id}/project_files/{project_file_id}/",
      "method": "/projects/{projectId}/projectFiles/{projectFileId}/Get",
      "httpMethod": "get",
      "tag": "Projects",
      "typeScriptTag": "projects",
      "description": "Show project file",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "projectFileId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{project_id}/project_files/{project_file_id}/",
      "method": "/projects/{projectId}/projectFiles/{projectFileId}/Put",
      "httpMethod": "put",
      "tag": "Projects",
      "typeScriptTag": "projects",
      "description": "Edit project file",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "projectFileId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{project_id}/send_bulk_pdf",
      "method": "/projects/{projectId}/sendBulkPdfPost",
      "httpMethod": "post",
      "tag": "Projects",
      "typeScriptTag": "projects",
      "description": "Send bulk forms pdf by email",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "form_id",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{project_id}/users/",
      "method": "/projects/{projectId}/users/Get",
      "httpMethod": "get",
      "tag": "Projects",
      "typeScriptTag": "projects",
      "description": "Show list of users added to project",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{project_id}/users/",
      "method": "/projects/{projectId}/users/Post",
      "httpMethod": "post",
      "tag": "Projects",
      "typeScriptTag": "projects",
      "description": "Add user to project",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{project_id}/users/{user_id}",
      "method": "/projects/{projectId}/users/{userId}Delete",
      "httpMethod": "delete",
      "tag": "Projects",
      "typeScriptTag": "projects",
      "description": "Delete user from project",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{project_id}/users/{user_id}",
      "method": "/projects/{projectId}/users/{userId}Get",
      "httpMethod": "get",
      "tag": "Projects",
      "typeScriptTag": "projects",
      "description": "View specific user assigned to project",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/reports",
      "method": "",
      "httpMethod": "get",
      "tag": "Reports",
      "typeScriptTag": "reports",
      "description": "",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/roles",
      "method": "/rolesGet",
      "httpMethod": "get",
      "tag": "Roles",
      "typeScriptTag": "roles",
      "description": "Get a list of roles",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/stock_locations",
      "method": "/stockLocationsGet",
      "httpMethod": "get",
      "tag": "StockLocations",
      "typeScriptTag": "stockLocations",
      "description": "List stock_locations",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": "Used to filter on the `name` of the stock_locations"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/stock_locations",
      "method": "/stockLocationsPost",
      "httpMethod": "post",
      "tag": "StockLocations",
      "typeScriptTag": "stockLocations",
      "description": "Add new stock_locations",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/stock_locations/{location_id}",
      "method": "/stockLocations/{locationId}Delete",
      "httpMethod": "delete",
      "tag": "StockLocations",
      "typeScriptTag": "stockLocations",
      "description": "Delete location",
      "parameters": [
        {
          "name": "locationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/stock_locations/{location_id}",
      "method": "/stockLocations/{locationId}Get",
      "httpMethod": "get",
      "tag": "StockLocations",
      "typeScriptTag": "stockLocations",
      "description": "View single location",
      "parameters": [
        {
          "name": "locationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/stock_locations/{location_id}",
      "method": "/stockLocations/{locationId}Put",
      "httpMethod": "put",
      "tag": "StockLocations",
      "typeScriptTag": "stockLocations",
      "description": "Edit location",
      "parameters": [
        {
          "name": "locationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entries",
      "method": "/timeEntriesGet",
      "httpMethod": "get",
      "tag": "TimeEntries",
      "typeScriptTag": "timeEntries",
      "description": "List time entries",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "formId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "projectId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "gtFromTime",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ltFromTime",
          "schema": "string",
          "description": ""
        },
        {
          "name": "gtToTime",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ltToTime",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ltSum",
          "schema": "string",
          "description": ""
        },
        {
          "name": "gtSum",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entries",
      "method": "/timeEntriesPost",
      "httpMethod": "post",
      "tag": "TimeEntries",
      "typeScriptTag": "timeEntries",
      "description": "Add new time entry",
      "parameters": [
        {
          "name": "form_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "from_time",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "is_all_day",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "project_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sum",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "time_entry_type_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "to_time",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entries/{time_entry_id}",
      "method": "/timeEntries/{timeEntryId}Delete",
      "httpMethod": "delete",
      "tag": "TimeEntries",
      "typeScriptTag": "timeEntries",
      "description": "Delete time entry",
      "parameters": [
        {
          "name": "timeEntryId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entries/{time_entry_id}",
      "method": "/timeEntries/{timeEntryId}Get",
      "httpMethod": "get",
      "tag": "TimeEntries",
      "typeScriptTag": "timeEntries",
      "description": "View time entry",
      "parameters": [
        {
          "name": "timeEntryId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entries/{time_entry_id}",
      "method": "/timeEntries/{timeEntryId}Put",
      "httpMethod": "put",
      "tag": "TimeEntries",
      "typeScriptTag": "timeEntries",
      "description": "Edit time entry",
      "parameters": [
        {
          "name": "timeEntryId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entry_intervals",
      "method": "/timeEntryIntervalsGet",
      "httpMethod": "get",
      "tag": "TimeEntryIntervals",
      "typeScriptTag": "timeEntryIntervals",
      "description": "List possible time entry intervals",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entry_intervals/{time_entry_interval_id}",
      "method": "/timeEntryIntervals/{timeEntryIntervalId}Get",
      "httpMethod": "get",
      "tag": "TimeEntryIntervals",
      "typeScriptTag": "timeEntryIntervals",
      "description": "View time entry interval",
      "parameters": [
        {
          "name": "timeEntryIntervalId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entry_rates",
      "method": "/timeEntryRatesGet",
      "httpMethod": "get",
      "tag": "TimeEntryRates",
      "typeScriptTag": "timeEntryRates",
      "description": "List time entry rates",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entry_rates",
      "method": "/timeEntryRatesPost",
      "httpMethod": "post",
      "tag": "TimeEntryRates",
      "typeScriptTag": "timeEntryRates",
      "description": "Add new time entry rate",
      "parameters": [
        {
          "name": "form_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "from_time",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "is_all_day",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "project_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sum",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "time_entry_type_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "to_time",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entry_rates/{time_entry_rate_id}",
      "method": "/timeEntryRates/{timeEntryRateId}Delete",
      "httpMethod": "delete",
      "tag": "TimeEntryRate",
      "typeScriptTag": "timeEntryRate",
      "description": "Delete time entry rate",
      "parameters": [
        {
          "name": "timeEntryRateId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entry_rates/{time_entry_rate_id}",
      "method": "/timeEntryRates/{timeEntryRateId}Get",
      "httpMethod": "get",
      "tag": "TimeEntryRates",
      "typeScriptTag": "timeEntryRates",
      "description": "View time entry rate",
      "parameters": [
        {
          "name": "timeEntryRateId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entry_rates/{time_entry_rate_id}",
      "method": "/timeEntryRates/{timeEntryRateId}Put",
      "httpMethod": "put",
      "tag": "TimeEntryRates",
      "typeScriptTag": "timeEntryRates",
      "description": "Edit time entry rate",
      "parameters": [
        {
          "name": "timeEntryRateId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entry_rule_groups",
      "method": "/timeEntryRuleGroupsGet",
      "httpMethod": "get",
      "tag": "TimeEntryRuleGroups",
      "typeScriptTag": "timeEntryRuleGroups",
      "description": "List time entry rule groups",
      "parameters": [
        {
          "name": "q",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entry_types",
      "method": "/timeEntryTypesGet",
      "httpMethod": "get",
      "tag": "TimeEntryTypes",
      "typeScriptTag": "timeEntryTypes",
      "description": "List time entries types",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entry_types",
      "method": "/timeEntryTypesPost",
      "httpMethod": "post",
      "tag": "TimeEntryTypes",
      "typeScriptTag": "timeEntryTypes",
      "description": "Add new time entry type",
      "parameters": [
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "time_entry_interval_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "time_entry_value_type_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entry_types/bulkActivate",
      "method": "bulkActivateTimeEntryTypes",
      "httpMethod": "post",
      "tag": "TimeEntryTypes",
      "typeScriptTag": "timeEntryTypes",
      "description": "Bulk activate time entry types",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entry_types/bulkDeactivate",
      "method": "bulkDeactivateTimeEntryTypes",
      "httpMethod": "post",
      "tag": "TimeEntryTypes",
      "typeScriptTag": "timeEntryTypes",
      "description": "Bulk deactivate time entry types",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entry_types/bulkDelete",
      "method": "bulkDeleteTimeEntryTypes",
      "httpMethod": "delete",
      "tag": "TimeEntryTypes",
      "typeScriptTag": "timeEntryTypes",
      "description": "Bulk delete time entry types",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entry_types/{time_entry_type_id}",
      "method": "/timeEntryTypes/{timeEntryTypeId}Delete",
      "httpMethod": "delete",
      "tag": "TimeEntryTypes",
      "typeScriptTag": "timeEntryTypes",
      "description": "Delete time entry type",
      "parameters": [
        {
          "name": "timeEntryTypeId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entry_types/{time_entry_type_id}",
      "method": "/timeEntryTypes/{timeEntryTypeId}Get",
      "httpMethod": "get",
      "tag": "TimeEntryTypes",
      "typeScriptTag": "timeEntryTypes",
      "description": "View time entry type",
      "parameters": [
        {
          "name": "timeEntryTypeId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entry_types/{time_entry_type_id}",
      "method": "/timeEntryTypes/{timeEntryTypeId}Put",
      "httpMethod": "put",
      "tag": "TimeEntryTypes",
      "typeScriptTag": "timeEntryTypes",
      "description": "Edit time entry type",
      "parameters": [
        {
          "name": "timeEntryTypeId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entry_unit_types",
      "method": "/timeEntryUnitTypesGet",
      "httpMethod": "get",
      "tag": "TimeEntryUnitTypes",
      "typeScriptTag": "timeEntryUnitTypes",
      "description": "List possible time entry unit types",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entry_unit_types/{time_entry_unit_type_id}",
      "method": "/timeEntryUnitTypes/{timeEntryUnitTypeId}Get",
      "httpMethod": "get",
      "tag": "TimeEntryUnitTypes",
      "typeScriptTag": "timeEntryUnitTypes",
      "description": "View time entry unit type",
      "parameters": [
        {
          "name": "timeEntryUnitTypeId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entry_value_types",
      "method": "/timeEntryValueTypesGet",
      "httpMethod": "get",
      "tag": "TimeEntryValueTypes",
      "typeScriptTag": "timeEntryValueTypes",
      "description": "List possible time entry value types",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/time_entry_value_types/{time_entry_value_type_id}",
      "method": "/timeEntryValueTypes/{timeEntryValueTypeId}Get",
      "httpMethod": "get",
      "tag": "TimeEntryValueTypes",
      "typeScriptTag": "timeEntryValueTypes",
      "description": "View time entry value type",
      "parameters": [
        {
          "name": "timeEntryValueTypeId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/user_custom_field_attributes",
      "method": "/userCustomFieldAttributesGet",
      "httpMethod": "get",
      "tag": "UserCustomFieldAttributes",
      "typeScriptTag": "userCustomFieldAttributes",
      "description": "Get a list of user custom field attributes",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/user_custom_field_attributes/{user_custom_field_attribute_id}",
      "method": "/userCustomFieldAttributes/{userCustomFieldAttributeId}Get",
      "httpMethod": "get",
      "tag": "UserCustomFieldAttributes",
      "typeScriptTag": "userCustomFieldAttributes",
      "description": "Details of 1 user custom field attribute",
      "parameters": [
        {
          "name": "userCustomFieldAttributeId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/users",
      "method": "/usersGet",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Get list of users in company",
      "parameters": [
        {
          "name": "firstName",
          "schema": "string",
          "required": false,
          "description": "Used to filter on the `first_name` of the users"
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": false,
          "description": "Used to filter on the `last_name` of the users"
        },
        {
          "name": "email",
          "schema": "string",
          "description": "Used to filter on the `email` of the users"
        },
        {
          "name": "stockLocationId",
          "schema": "string",
          "description": "Used to filter on the `stock_location_id` of the users"
        },
        {
          "name": "isActive",
          "schema": "boolean",
          "description": "Filters active/inactive users"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users",
      "method": "/usersPost",
      "httpMethod": "post",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Add user to company",
      "parameters": [
        {
          "name": "city_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "cost_price",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "expected_billable_hours",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "extra_price",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "hide_address",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hide_phone",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "initials",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "is_active",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "language_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mobile",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mobile_countrycode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "phone_countrycode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "receive_form_mails",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "roles",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "sale_price",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "street_name",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/bulkActivate",
      "method": "usersBulkActivate",
      "httpMethod": "post",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Activate multiple users",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/bulkDeactivate",
      "method": "usersBulkDeactivate",
      "httpMethod": "post",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Deactivate multiple users",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/resendWelcomeSms",
      "method": "/users/resendWelcomeSmsGet",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Resend Welcome SMS to the user",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}",
      "method": "/users/{userId}Delete",
      "httpMethod": "delete",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Delete user",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}",
      "method": "/users/{userId}Get",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "View user",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}",
      "method": "/users/{userId}Put",
      "httpMethod": "put",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Edit user",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/integration_settings",
      "method": "/users/{userId}/integrationSettingsGet",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Get a list of user integration settings",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/integration_settings",
      "method": "/users/{userId}/integrationSettingsPost",
      "httpMethod": "post",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Add a user integration setting",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "integration_setting_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "value",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/integration_settings/{integration_settings_user_id}",
      "method": "/users/{userId}/integrationSettings/{integrationSettingsUserId}Delete",
      "httpMethod": "delete",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Delete a user integration setting",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "integrationSettingsUserId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/integration_settings/{integration_settings_user_id}",
      "method": "/users/{userId}/integrationSettings/{integrationSettingsUserId}Get",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Get a user integration setting",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "integrationSettingsUserId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/integration_settings/{integration_settings_user_id}",
      "method": "/users/{userId}/integrationSettings/{integrationSettingsUserId}Put",
      "httpMethod": "put",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Edit a user integration setting",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "integrationSettingsUserId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/uploadImage",
      "method": "/users/{userId}/uploadImagePost",
      "httpMethod": "post",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Upload a new image to a user",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "image",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/user_custom_field_value",
      "method": "/users/{userId}/userCustomFieldValueGet",
      "httpMethod": "get",
      "tag": "UserCustomFieldValue",
      "typeScriptTag": "userCustomFieldValue",
      "description": "Get a list of user custom field values",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/user_custom_field_value/{user_custom_field_value_id}",
      "method": "/users/{userId}/userCustomFieldValue/{userCustomFieldValueId}Get",
      "httpMethod": "get",
      "tag": "UserCustomFieldValue",
      "typeScriptTag": "userCustomFieldValue",
      "description": "Get a single record of user custom field value",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        },
        {
          "name": "userCustomFieldValueId",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/user_custom_field_value/{user_custom_field_value_id}",
      "method": "/users/{userId}/userCustomFieldValue/{userCustomFieldValueId}Put",
      "httpMethod": "put",
      "tag": "UserCustomFieldValue",
      "typeScriptTag": "userCustomFieldValue",
      "description": "Update a single record of user custom field value",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        },
        {
          "name": "userCustomFieldValueId",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vendor_product_price_files",
      "method": "/vendorProductPriceFilesGet",
      "httpMethod": "get",
      "tag": "VendorProductPriceFiles",
      "typeScriptTag": "vendorProductPriceFiles",
      "description": "Get a list of price files",
      "parameters": [
        {
          "name": "fileName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vendorName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vendorIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vendor_product_price_files",
      "method": "/vendorProductPriceFilesPost",
      "httpMethod": "post",
      "tag": "VendorProductPriceFiles",
      "typeScriptTag": "vendorProductPriceFiles",
      "description": "Upload a vendor price file",
      "parameters": [
        {
          "name": "companies_vendor_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "file",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/vendor_product_price_files/{vendor_product_price_file_id}",
      "method": "/vendorProductPriceFiles/{vendorProductPriceFileId}Get",
      "httpMethod": "get",
      "tag": "VendorProductPriceFiles",
      "typeScriptTag": "vendorProductPriceFiles",
      "description": "Get a single price file",
      "parameters": [
        {
          "name": "vendorProductPriceFileId",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/vendor_products",
      "method": "/vendorProductsGet",
      "httpMethod": "get",
      "tag": "VendorProducts",
      "typeScriptTag": "vendorProducts",
      "description": "List vendor products",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": "Used to filter on the `name` of the vendor products"
        },
        {
          "name": "productNumber",
          "schema": "string",
          "description": "Used to filter on the `product_number` of the vendor products"
        },
        {
          "name": "barcode",
          "schema": "string",
          "description": "Used to filter on the `barcode` of the vendor products"
        },
        {
          "name": "vendorId",
          "schema": "string",
          "description": "Used to filter on the `vendor_id` of the vendor products"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vendor_products/{vendor_product_id}",
      "method": "/vendorProducts/{vendorProductId}Get",
      "httpMethod": "get",
      "tag": "VendorProducts",
      "typeScriptTag": "vendorProducts",
      "description": "View single vendor product",
      "parameters": [
        {
          "name": "vendorProductId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vendors",
      "method": "getVendorsList",
      "httpMethod": "get",
      "tag": "Vendors",
      "typeScriptTag": "vendors",
      "description": "Get a list of vendors",
      "parameters": [
        {
          "name": "withCustom",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "cvr",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vendors",
      "method": "addVendor",
      "httpMethod": "post",
      "tag": "Vendors",
      "typeScriptTag": "vendors",
      "description": "Add a new vendor",
      "parameters": [
        {
          "name": "country_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "cvr",
          "schema": "string",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "identifier",
          "schema": "string",
          "description": ""
        },
        {
          "name": "is_custom",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/vendors/{vendor_id}",
      "method": "/vendors/{vendorId}Delete",
      "httpMethod": "delete",
      "tag": "Vendors",
      "typeScriptTag": "vendors",
      "description": "Delete a vendor",
      "parameters": [
        {
          "name": "vendorId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/vendors/{vendor_id}",
      "method": "getVendor",
      "httpMethod": "get",
      "tag": "Vendors",
      "typeScriptTag": "vendors",
      "description": "Get a vendor",
      "parameters": [
        {
          "name": "vendorId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/vendors/{vendor_id}",
      "method": "editVendor",
      "httpMethod": "put",
      "tag": "Vendors",
      "typeScriptTag": "vendors",
      "description": "Edit a vendor",
      "parameters": [
        {
          "name": "vendorId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "country_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "cvr",
          "schema": "string",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "identifier",
          "schema": "string",
          "description": ""
        },
        {
          "name": "is_custom",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/wages/downloadSalaryFile",
      "method": "/wages/downloadSalaryFileGet",
      "httpMethod": "get",
      "tag": "Wages",
      "typeScriptTag": "wages",
      "description": "Download salary file",
      "parameters": [
        {
          "name": "dateFrom",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateTo",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "companyId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/wall_comments",
      "method": "/wallCommentsPost",
      "httpMethod": "post",
      "tag": "WallComments",
      "typeScriptTag": "wallComments",
      "description": "Add wall comment",
      "parameters": [
        {
          "name": "message",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "wall_post_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/wall_comments/{wall_comment_id}",
      "method": "/wallComments/{wallCommentId}Get",
      "httpMethod": "get",
      "tag": "WallComments",
      "typeScriptTag": "wallComments",
      "description": "View wall comment",
      "parameters": [
        {
          "name": "wallCommentId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/wall_posts",
      "method": "/wallPostsGet",
      "httpMethod": "get",
      "tag": "WallPosts",
      "typeScriptTag": "wallPosts",
      "description": "View list of wall posts",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/wall_posts",
      "method": "/wallPostsPost",
      "httpMethod": "post",
      "tag": "WallPosts",
      "typeScriptTag": "wallPosts",
      "description": "Add a wall post",
      "parameters": [
        {
          "name": "message",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "project_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/wall_posts/{wall_post_id}",
      "method": "/wallPosts/{wallPostId}Get",
      "httpMethod": "get",
      "tag": "WallPosts",
      "typeScriptTag": "wallPosts",
      "description": "View wall post",
      "parameters": [
        {
          "name": "wallPostId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/wall_posts/{wall_post_id}/wall_comments",
      "method": "/wallPosts/{wallPostId}/wallCommentsGet",
      "httpMethod": "get",
      "tag": "WallPosts",
      "typeScriptTag": "wallPosts",
      "description": "See wall comments to a wall post",
      "parameters": [
        {
          "name": "wallPostId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://app.apacta.com/api/v1",
  "apiDescription": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.\n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number&direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n\n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n\n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse<String> response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n\n  var xhr = new XMLHttpRequest();\n\n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n\n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n\n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n\n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs:\n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers:\n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n\n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n\n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n\n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n\n  payload = \"\"\n\n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n\n  conn.request(\"GET\", \"/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5\", payload, headers)\n\n  res = conn.getresponse()\n  data = res.read()\n\n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);\n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n\n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5\")\n\n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n\n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  <?php\n\n  $request = new HttpRequest();\n  $request->setUrl('https://app.apacta.com/api/v1/forms');\n  $request->setMethod(HTTP_METH_GET);\n\n  $request->setQueryData(array(\n    'extended' => 'true',\n    'sort' => 'Forms.created',\n    'direction' => 'DESC',\n    'include' => 'Products,CreatedBy',\n    'limit' => '5'\n  ));\n\n  $request->setHeaders(array(\n    'accept' => 'application/json',\n    'x-auth-token' => '{INSERT_YOUR_TOKEN}'\n  ));\n\n  try {\n    $response = $request->send();\n\n    echo $response->getBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n\n```",
  "apiTitle": "Apacta",
  "endpoints": 185,
  "sdkMethods": 299,
  "schemas": 90,
  "parameters": 693,
  "difficultyScore": 517.25,
  "difficulty": "Hard"
}