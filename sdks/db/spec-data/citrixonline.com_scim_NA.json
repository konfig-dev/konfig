{
  "providerName": "citrixonline.com",
  "openApiRaw": "https://developer.citrixonline.com/sites/default/files/citrix/citrix-apis/scim.json",
  "securitySchemes": {},
  "homepage": "citrixonline.com",
  "serviceName": "scim",
  "apiVersion": "N/A",
  "methods": [
    {
      "url": "/Groups",
      "method": "getGroups",
      "httpMethod": "get",
      "tag": "Groups",
      "typeScriptTag": "groups",
      "description": "Get Groups",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Access token prefixed with 'Bearer ', e.g. 'Bearer 123456abcdef'"
        },
        {
          "name": "filter",
          "schema": "string",
          "description": " Without a filter, all groups are returned. The filter parameter must be a properly formed SCIM filter using the operator \"eq\" (equals), \"sw\" (starts with), or \"co\" (contains). The filter works for the displayName attribute. Sorting and pagination are supported. For example, GET /Groups?filter=displayName%20eq%20%22Engineering%22&sortBy=displayName&sortOrder=ascending&count=50&startIndex=51"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Class describing a collection of groups"
        }
      ]
    },
    {
      "url": "/Groups",
      "method": "createGroup",
      "httpMethod": "post",
      "tag": "Groups",
      "typeScriptTag": "groups",
      "description": "Create Group",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Access token prefixed with 'Bearer ', e.g. 'Bearer 123456abcdef'"
        },
        {
          "name": "displayName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "members",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Describes a group belonging to an organization"
        }
      ]
    },
    {
      "url": "/Groups/{groupKey}",
      "method": "deleteGroup",
      "httpMethod": "delete",
      "tag": "Groups",
      "typeScriptTag": "groups",
      "description": "Delete Group",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Access token prefixed with 'Bearer ', e.g. 'Bearer 123456abcdef'"
        },
        {
          "name": "groupKey",
          "schema": "integer",
          "required": true,
          "description": "The key of the group to query. The group must be in the organization domain"
        }
      ],
      "responses": []
    },
    {
      "url": "/Groups/{groupKey}",
      "method": "getGroup",
      "httpMethod": "get",
      "tag": "Groups",
      "typeScriptTag": "groups",
      "description": "Get Group",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Access token prefixed with 'Bearer ', e.g. 'Bearer 123456abcdef'"
        },
        {
          "name": "groupKey",
          "schema": "integer",
          "required": true,
          "description": "The key of the group to query. The group must be in the organization domain"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describes a group belonging to an organization"
        }
      ]
    },
    {
      "url": "/Groups/{groupKey}",
      "method": "updateGroup",
      "httpMethod": "patch",
      "tag": "Groups",
      "typeScriptTag": "groups",
      "description": "Update Group",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Access token prefixed with 'Bearer ', e.g. 'Bearer 123456abcdef'"
        },
        {
          "name": "groupKey",
          "schema": "integer",
          "required": true,
          "description": "The key of the group to query. The group must be in the organization domain"
        },
        {
          "name": "displayName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "members",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describes a group belonging to an organization"
        }
      ]
    },
    {
      "url": "/Groups/{groupKey}",
      "method": "replaceGroup",
      "httpMethod": "put",
      "tag": "Groups",
      "typeScriptTag": "groups",
      "description": "Replace Group",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Access token prefixed with 'Bearer ', e.g. 'Bearer 123456abcdef'"
        },
        {
          "name": "groupKey",
          "schema": "integer",
          "required": true,
          "description": "The key of the group to query. The group must be in the organization domain"
        },
        {
          "name": "displayName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "members",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describes a group belonging to an organization"
        }
      ]
    },
    {
      "url": "/Schemas/Users",
      "method": "getUserSchema",
      "httpMethod": "get",
      "tag": "Schemas",
      "typeScriptTag": "schemas",
      "description": "Get User Schema",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Access token prefixed with 'Bearer ', e.g. 'Bearer 123456abcdef'"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describes the attributes and metadata constituting a resource such as a user."
        }
      ]
    },
    {
      "url": "/ServiceProviderConfigs",
      "method": "getServiceProviderConfigs",
      "httpMethod": "get",
      "tag": "Schemas",
      "typeScriptTag": "schemas",
      "description": "Get Service Provider Configurations",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Access token prefixed with 'Bearer ', e.g. 'Bearer 123456abcdef'"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the Service Provider's configuration"
        }
      ]
    },
    {
      "url": "/Users",
      "method": "getUsers",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Get Users",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Access token prefixed with 'Bearer ', e.g. 'Bearer 123456abcdef'"
        },
        {
          "name": "filter",
          "schema": "string",
          "description": " Without a filter, all users in a user domain are returned. The filter parameter must be a properly formed SCIM filter using either the operator eq (equals) or the operator sw (starts with). The filter works for userName, displayName, name.givenName, and name.familyName attributes. For example, /Users?filter=name.familyName%20eq%20%%22Smith%22"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Class describing a collection of users"
        }
      ]
    },
    {
      "url": "/Users",
      "method": "createUsers",
      "httpMethod": "post",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Create User",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Access token prefixed with 'Bearer ', e.g. 'Bearer 123456abcdef'"
        },
        {
          "name": "displayName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "locale",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userName",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Describes a user belonging to an organization"
        }
      ]
    },
    {
      "url": "/Users/me",
      "method": "getMe",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Get Current User",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Access token prefixed with 'Bearer ', e.g. 'Bearer 123456abcdef'"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describes a user belonging to an organization"
        }
      ]
    },
    {
      "url": "/Users/me",
      "method": "updateMe",
      "httpMethod": "patch",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Update Current User",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Access token prefixed with 'Bearer ', e.g. 'Bearer 123456abcdef'"
        },
        {
          "name": "displayName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "locale",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userName",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describes a user belonging to an organization"
        }
      ]
    },
    {
      "url": "/Users/me",
      "method": "replaceMe",
      "httpMethod": "put",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Replace Current User",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Access token prefixed with 'Bearer ', e.g. 'Bearer 123456abcdef'"
        },
        {
          "name": "displayName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "locale",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userName",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describes a user belonging to an organization"
        }
      ]
    },
    {
      "url": "/Users/{userKey}",
      "method": "deleteUser",
      "httpMethod": "delete",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Delete User",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Access token prefixed with 'Bearer ', e.g. 'Bearer 123456abcdef'"
        },
        {
          "name": "userKey",
          "schema": "integer",
          "required": true,
          "description": "The key of the user to query. The user must be in the organization domain"
        }
      ],
      "responses": []
    },
    {
      "url": "/Users/{userKey}",
      "method": "getUser",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Get User",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Access token prefixed with 'Bearer ', e.g. 'Bearer 123456abcdef'"
        },
        {
          "name": "userKey",
          "schema": "integer",
          "required": true,
          "description": "The key of the user to query. The user must be in the organization domain"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describes a user belonging to an organization"
        }
      ]
    },
    {
      "url": "/Users/{userKey}",
      "method": "updateUser",
      "httpMethod": "patch",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Update User",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Access token prefixed with 'Bearer ', e.g. 'Bearer 123456abcdef'"
        },
        {
          "name": "userKey",
          "schema": "integer",
          "required": true,
          "description": "The key of the user to query. The user must be in the organization domain"
        },
        {
          "name": "displayName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "locale",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userName",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describes a user belonging to an organization"
        }
      ]
    },
    {
      "url": "/Users/{userKey}",
      "method": "replaceUser",
      "httpMethod": "put",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Replace User",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Access token prefixed with 'Bearer ', e.g. 'Bearer 123456abcdef'"
        },
        {
          "name": "userKey",
          "schema": "integer",
          "required": true,
          "description": "The key of the user to query. The user must be in the organization domain"
        },
        {
          "name": "displayName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "locale",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userName",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describes a user belonging to an organization"
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.citrixonline.com/identity/v1",
  "apiDescription": "The SCIM API lets you manage users in your organization. You can then automate the provisioning of product licenses for these users, and they can use your company's Single Sign-On solution through an Identity Provider.",
  "apiTitle": "SCIM",
  "endpoints": 7,
  "sdkMethods": 17,
  "schemas": 22,
  "parameters": 63,
  "contactUrl": "https://developer.citrixonline.com",
  "contactEmail": "developer-support@citrixonline.com",
  "difficultyScore": 43.75,
  "difficulty": "Easy"
}