{
  "providerName": "bikewise.org",
  "openApiRaw": "https://bikewise.org/api/v2/swagger_doc",
  "securitySchemes": {},
  "categories": [
    "open_data"
  ],
  "homepage": "bikewise.org",
  "apiVersion": "v2",
  "methods": [
    {
      "url": "/v2/incidents",
      "method": "getVersionIncidentsFormat",
      "httpMethod": "get",
      "tag": "incidents",
      "typeScriptTag": "incidents",
      "description": "Paginated incidents matching parameters",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "<p>Page of results to fetch.</p>\n"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "<p>Number of results to return per page.</p>\n"
        },
        {
          "name": "occurredBefore",
          "schema": "integer",
          "required": false,
          "description": "<p>End of period</p>\n"
        },
        {
          "name": "occurredAfter",
          "schema": "integer",
          "required": false,
          "description": "<p>Start of period</p>\n"
        },
        {
          "name": "incidentType",
          "schema": "string",
          "required": false,
          "description": "<p>Only incidents of specific type</p>\n"
        },
        {
          "name": "proximity",
          "schema": "string",
          "required": false,
          "description": "<p>Center of location for proximity search</p>\n"
        },
        {
          "name": "proximitySquare",
          "schema": "integer",
          "required": false,
          "description": "<p>Size of the proximity search</p>\n"
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "<p>Full text search of incidents</p>\n"
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/incidents/{id}",
      "method": "getVersionIncidentsIdFormat",
      "httpMethod": "get",
      "tag": "incidents",
      "typeScriptTag": "incidents",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "<p>Incident ID</p>\n"
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/locations",
      "method": "getVersionLocationsFormat",
      "httpMethod": "get",
      "tag": "locations",
      "typeScriptTag": "locations",
      "description": "Unpaginated geojson response",
      "parameters": [
        {
          "name": "occurredBefore",
          "schema": "integer",
          "required": false,
          "description": "<p>End of period</p>\n"
        },
        {
          "name": "occurredAfter",
          "schema": "integer",
          "required": false,
          "description": "<p>Start of period</p>\n"
        },
        {
          "name": "incidentType",
          "schema": "string",
          "required": false,
          "description": "<p>Only incidents of specific type</p>\n"
        },
        {
          "name": "proximity",
          "schema": "string",
          "required": false,
          "description": "<p>Center of location for proximity search</p>\n"
        },
        {
          "name": "proximitySquare",
          "schema": "integer",
          "required": false,
          "description": "<p>Size of the proximity search</p>\n"
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "<p>Full text search of incidents</p>\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "<p>Max number of results to return. Defaults to 100</p>\n"
        },
        {
          "name": "all",
          "schema": "boolean",
          "required": false,
          "description": "<p>Give ‘em all to me. Will ignore limit</p>\n"
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/locations/markers",
      "method": "getVersionLocationsMarkersFormat",
      "httpMethod": "get",
      "tag": "locations",
      "typeScriptTag": "locations",
      "description": "Unpaginated geojson response with simplestyled markers",
      "parameters": [
        {
          "name": "occurredBefore",
          "schema": "integer",
          "required": false,
          "description": "<p>End of period</p>\n"
        },
        {
          "name": "occurredAfter",
          "schema": "integer",
          "required": false,
          "description": "<p>Start of period</p>\n"
        },
        {
          "name": "incidentType",
          "schema": "string",
          "required": false,
          "description": "<p>Only incidents of specific type</p>\n"
        },
        {
          "name": "proximity",
          "schema": "string",
          "required": false,
          "description": "<p>Center of location for proximity search</p>\n"
        },
        {
          "name": "proximitySquare",
          "schema": "integer",
          "required": false,
          "description": "<p>Size of the proximity search</p>\n"
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "<p>Full text search of incidents</p>\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "<p>Max number of results to return. Defaults to 100</p>\n"
        },
        {
          "name": "all",
          "schema": "boolean",
          "required": false,
          "description": "<p>Give ‘em all to me. Will ignore limit</p>\n"
        }
      ],
      "responses": []
    }
  ],
  "apiBaseUrl": "https://bikewise.org/api",
  "apiDescription": "<p>This is an API for accessing information about bicycling related incidents. You can find the source code on <a href=\"https://github.com/bikeindex/bikewise\">GitHub</a>.</p>\n",
  "apiTitle": "BikeWise API v2",
  "endpoints": 4,
  "sdkMethods": 4,
  "schemas": 0,
  "parameters": 25,
  "contactEmail": "support@bikeindex.org",
  "difficultyScore": 10.25,
  "difficulty": "Easy"
}