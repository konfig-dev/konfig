{
  "providerName": "drchrono.com",
  "openApiRaw": "https://drchrono.com/openapi-schema",
  "securitySchemes": {
    "drchrono_oauth2": {
      "description": "",
      "flows": {
        "authorizationCode": {
          "authorizationUrl": "https://drchrono.com/o/authorize/",
          "scopes": {
            "billing:patient-payment:read": "View patient payment information",
            "billing:patient-payment:write": "Modify patient payment information",
            "billing:read": "View billing information.",
            "billing:write": "Modify billing information.",
            "calendar:read": "View your appointments.",
            "calendar:write": "Schedule appointments and modify the data associated with them.",
            "clinical:read": "View clinical information, such as vitals, clinical notes, medications and diagnoses.",
            "clinical:write": "Create and modify clinical information, such as vitals, clinical notes, medications and diagnoses.",
            "labs:read": "View patient lab orders and results.",
            "labs:write": "Create and modify patient lab orders and results.",
            "messages:read": "View messages in your message center.",
            "messages:write": "Create and modify messages in your message center.",
            "patients:read": "View detailed patient information.",
            "patients:summary:read": "View summary information about your patients. This includes patients' name, chart_id, age, and gender.",
            "patients:summary:write": "Create new patients and set their name, chart_id, age, and gender.",
            "patients:write": "Create patients and modify detailed patient information.",
            "settings:read": "View resources that requires Settings permission, such as custom fields.",
            "settings:write": "Create resources that requires Settings permission, such as custom fields.",
            "tasks:read": "View tasks in your tasks center",
            "tasks:write": "Create and modify tasks in your tasks center",
            "user:read": "View your basic information.",
            "user:write": "Edit select account information, such as creating new exam rooms."
          },
          "tokenUrl": "https://drchrono.com/o/token/"
        }
      },
      "type": "oauth2"
    }
  },
  "homepage": "drchrono.com",
  "apiVersion": "v4 (Hunt Valley)",
  "methods": [
    {
      "url": "/api/allergies",
      "method": "allergiesList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search patient allergies",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/allergies",
      "method": "allergiesCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create patient allergy",
      "parameters": [
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/allergies/{id}",
      "method": "allergiesRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing patient allergy",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/allergies/{id}",
      "method": "allergiesPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient allergy",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/allergies/{id}",
      "method": "allergiesUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient allergy",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/amendments",
      "method": "amendmentsList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search patient amendments. You can only interact with amendments created by your API application",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/amendments",
      "method": "amendmentsCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create patient amendments to a patient's clinical records",
      "parameters": [
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/amendments/{id}",
      "method": "amendmentsDelete",
      "httpMethod": "delete",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Delete an existing patient amendment, you can only interact with amendments created by your API application",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/amendments/{id}",
      "method": "amendmentsRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing patient amendment, you can only interact with amendments created by your API application",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/amendments/{id}",
      "method": "amendmentsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient amendment, you can only interact with amendments created by your API application",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/amendments/{id}",
      "method": "amendmentsUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient amendment, you can only interact with amendments created by your API application",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/appointment_profiles",
      "method": "appointmentProfilesList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search appointment profiles for a doctor's calendar",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/appointment_profiles",
      "method": "appointmentProfilesCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create appointment profiles for a doctor's calendar",
      "parameters": [
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Appointment profiles are for common kinds of appointments a doctor might have, such as \"physical exam\", which have a standard duration and should show up as the same color on the calendar."
        }
      ]
    },
    {
      "url": "/api/appointment_profiles/{id}",
      "method": "appointmentProfilesDelete",
      "httpMethod": "delete",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Delete an existing appointment profile",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/appointment_profiles/{id}",
      "method": "appointmentProfilesRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing appointment profile",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Appointment profiles are for common kinds of appointments a doctor might have, such as \"physical exam\", which have a standard duration and should show up as the same color on the calendar."
        }
      ]
    },
    {
      "url": "/api/appointment_profiles/{id}",
      "method": "appointmentProfilesPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing appointment profile",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/appointment_profiles/{id}",
      "method": "appointmentProfilesUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing appointment profile",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/appointment_templates",
      "method": "appointmentTemplatesList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search appointment templates for a doctor's calendar",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "profile",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/appointment_templates",
      "method": "appointmentTemplatesCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create appointment templates for a doctor's calendar",
      "parameters": [
        {
          "name": "profile",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Appointment templates are blocks of time during which a doctor usually sees appointments with the same profile. These may have a longer duration then the corresponding profile, in which case they may allow multiple appointments to be booked during that period."
        }
      ]
    },
    {
      "url": "/api/appointment_templates/{id}",
      "method": "appointmentTemplatesDelete",
      "httpMethod": "delete",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Delete an existing appointment template",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "profile",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/appointment_templates/{id}",
      "method": "appointmentTemplatesRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing appointment template",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "profile",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Appointment templates are blocks of time during which a doctor usually sees appointments with the same profile. These may have a longer duration then the corresponding profile, in which case they may allow multiple appointments to be booked during that period."
        }
      ]
    },
    {
      "url": "/api/appointment_templates/{id}",
      "method": "appointmentTemplatesPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing appointment template",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "profile",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/appointment_templates/{id}",
      "method": "appointmentTemplatesUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing appointment template",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "profile",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/appointments",
      "method": "appointmentsList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search appointment or breaks.\n<b>Note:</b> Either `since`, `date` or `date_range` parameter must be specified.\n            ",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateRange",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "date",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/appointments",
      "method": "appointmentsCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create a new appointment or break on doctor's calendar",
      "parameters": [
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateRange",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "date",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/appointments/{id}",
      "method": "appointmentsDelete",
      "httpMethod": "delete",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Delete an existing appointment or break",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateRange",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "date",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/appointments/{id}",
      "method": "appointmentsRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing appointment or break",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateRange",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "date",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/appointments/{id}",
      "method": "appointmentsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing appointment or break",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateRange",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "date",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/appointments/{id}",
      "method": "appointmentsUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing appointment or break",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateRange",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "date",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/billing_profiles",
      "method": "billingProfilesList",
      "httpMethod": "get",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "Retrieve or search billing profiles",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/billing_profiles/{id}",
      "method": "billingProfilesRead",
      "httpMethod": "get",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "Retrieve an existing billing profiles",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/care_plans",
      "method": "carePlansList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search care plans",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "planType",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/care_plans/{id}",
      "method": "carePlansRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing care plan",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "planType",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/care_team_members",
      "method": "careTeamMembersList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/care_team_members/{id}",
      "method": "careTeamMembersRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/claim_billing_notes",
      "method": "claimBillingNotesList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search billing notes",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/claim_billing_notes",
      "method": "claimBillingNotesCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create a new billing note",
      "parameters": [
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/claim_billing_notes/{id}",
      "method": "claimBillingNotesRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing billing note",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/clinical_note_field_types",
      "method": "clinicalNoteFieldTypesList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search clinical note field types",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "clinicalNoteTemplate",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/clinical_note_field_types/{id}",
      "method": "clinicalNoteFieldTypesRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing clinial note field type",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clinicalNoteTemplate",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/clinical_note_field_values",
      "method": "clinicalNoteFieldValuesList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search clinical note field values",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "clinicalNoteField",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "clinicalNoteTemplate",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/clinical_note_field_values",
      "method": "clinicalNoteFieldValuesCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create clinical note field value",
      "parameters": [
        {
          "name": "clinicalNoteField",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "clinicalNoteTemplate",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Values entered by doctor when charting a particular appointment"
        }
      ]
    },
    {
      "url": "/api/clinical_note_field_values/{id}",
      "method": "clinicalNoteFieldValuesRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing clinical note field value",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clinicalNoteField",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "clinicalNoteTemplate",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Values entered by doctor when charting a particular appointment"
        }
      ]
    },
    {
      "url": "/api/clinical_note_field_values/{id}",
      "method": "clinicalNoteFieldValuesPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing clinical note field value",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clinicalNoteField",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "clinicalNoteTemplate",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/clinical_note_field_values/{id}",
      "method": "clinicalNoteFieldValuesUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing clinical note field value",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clinicalNoteField",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "clinicalNoteTemplate",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/clinical_note_templates",
      "method": "clinicalNoteTemplatesList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search clinical note templates",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/clinical_note_templates/{id}",
      "method": "clinicalNoteTemplatesRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing clinical note tempalte",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/clinical_notes",
      "method": "clinicalNotesList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateRange",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "date",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/clinical_notes/{id}",
      "method": "clinicalNotesRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateRange",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "date",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/comm_logs",
      "method": "commLogsList",
      "httpMethod": "get",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "Retrieve or search communicatioin (phone call) logs",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/comm_logs",
      "method": "commLogsCreate",
      "httpMethod": "post",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "Create communication (phone call) logs",
      "parameters": [
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/comm_logs/{id}",
      "method": "commLogsRead",
      "httpMethod": "get",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "Retrieve an existing communication (phone call) logs",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/comm_logs/{id}",
      "method": "commLogsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "Update an existing communication (phone call) logs",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/comm_logs/{id}",
      "method": "commLogsUpdate",
      "httpMethod": "put",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "Update an existing communication (phone call) logs",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/consent_forms",
      "method": "consentFormsList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search patient consent forms",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/consent_forms",
      "method": "consentFormsCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create a patient consent form",
      "parameters": [
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/consent_forms/{id}",
      "method": "consentFormsRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing patient consent form",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/consent_forms/{id}",
      "method": "consentFormsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient consent form",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/consent_forms/{id}",
      "method": "consentFormsUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient consent form",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/consent_forms/{id}/apply_to_appointment",
      "method": "consentFormsApplyToAppointment",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Assign (apply) a consent form to appointment",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/consent_forms/{id}/unapply_from_appointment",
      "method": "consentFormsUnapplyFromAppointment",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Unassign (unapply) a consent form from appointment",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/custom_appointment_fields",
      "method": "customAppointmentFieldsList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search custom appointment fields",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/custom_appointment_fields",
      "method": "customAppointmentFieldsCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create custom appointment fields",
      "parameters": [
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/custom_appointment_fields/{id}",
      "method": "customAppointmentFieldsRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing custom appointment field",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/custom_appointment_fields/{id}",
      "method": "customAppointmentFieldsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing custom appointment field",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/custom_appointment_fields/{id}",
      "method": "customAppointmentFieldsUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing custom appointment field",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/custom_demographics",
      "method": "customDemographicsList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search custom demographics fields",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/custom_demographics",
      "method": "customDemographicsCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create custom demographics fields",
      "parameters": [
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/custom_demographics/{id}",
      "method": "customDemographicsRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing custom demographics field",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/custom_demographics/{id}",
      "method": "customDemographicsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing custom demographics field",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/custom_demographics/{id}",
      "method": "customDemographicsUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing custom demographics field",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/custom_insurance_plan_names",
      "method": "customInsurancePlanNamesList",
      "httpMethod": "get",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "Retrieve or search custom insurance plan names",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "user",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/custom_insurance_plan_names/{id}",
      "method": "customInsurancePlanNamesRead",
      "httpMethod": "get",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "Retrieve an existing custom insurance plan name",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "user",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/custom_vitals",
      "method": "customVitalsList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search custom vital types",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/custom_vitals/{id}",
      "method": "customVitalsRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing custom vital type",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/doctors",
      "method": "doctorsList",
      "httpMethod": "get",
      "tag": "Administrative",
      "typeScriptTag": "administrative",
      "description": "Retrieve or search doctors within practice group",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/doctors/{id}",
      "method": "doctorsRead",
      "httpMethod": "get",
      "tag": "Administrative",
      "typeScriptTag": "administrative",
      "description": "Retrieve an existing dcotor",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/documents",
      "method": "documentsList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search documents",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/documents",
      "method": "documentsCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create documents",
      "parameters": [
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/documents/{id}",
      "method": "documentsDelete",
      "httpMethod": "delete",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Delete an existing appointment template",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/documents/{id}",
      "method": "documentsRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing appointment template",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/documents/{id}",
      "method": "documentsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing appointment template",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/documents/{id}",
      "method": "documentsUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing appointment template",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/eligibility_checks",
      "method": "eligibilityChecksList",
      "httpMethod": "get",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "Retrieve or search past eligibility checks for patient",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "appointmentDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "queryDateRange",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "appointmentDateRange",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "queryDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/eligibility_checks/{id}",
      "method": "eligibilityChecksRead",
      "httpMethod": "get",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "Retrieve an existing past eligibility check",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "appointmentDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "queryDateRange",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "appointmentDateRange",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "queryDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/eobs",
      "method": "eobsList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search EOB objects",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/eobs",
      "method": "eobsCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create EOB object",
      "parameters": [
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/eobs/{id}",
      "method": "eobsRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing EOB object",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/fee_schedules",
      "method": "feeSchedulesList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "codeType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "payerId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/fee_schedules/{id}",
      "method": "feeSchedulesRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "codeType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "payerId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/implantable_devices",
      "method": "implantableDevicesList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search implantable devices",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "muDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "muDateRange",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/implantable_devices/{id}",
      "method": "implantableDevicesRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing implantable device",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "muDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "muDateRange",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/insurances",
      "method": "insurancesList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "payerType",
          "schema": "string",
          "required": true,
          "description": "One of `\"emdeon\"`, `\"gateway\"`, `\"ihcfa\"`"
        },
        {
          "name": "term",
          "schema": "string",
          "required": false,
          "description": "Search term, which can be either a partial name, partial ID or the state."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/insurances/{id}",
      "method": "insurancesRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "payerType",
          "schema": "string",
          "required": true,
          "description": "One of `\"emdeon\"`, `\"gateway\"`, `\"ihcfa\"`"
        },
        {
          "name": "term",
          "schema": "string",
          "required": false,
          "description": "Search term, which can be either a partial name, partial ID or the state."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/inventory_categories",
      "method": "inventoryCategoriesList",
      "httpMethod": "get",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Retrieve or search inventory categories",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/inventory_categories/{id}",
      "method": "inventoryCategoriesRead",
      "httpMethod": "get",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Retrieve an existing inventory category",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/inventory_vaccines",
      "method": "inventoryVaccinesList",
      "httpMethod": "get",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Retrieve or search vaccine inventories",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "cvxCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/inventory_vaccines",
      "method": "inventoryVaccinesCreate",
      "httpMethod": "post",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Create vaccine inventory",
      "parameters": [
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "cvxCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/inventory_vaccines/{id}",
      "method": "inventoryVaccinesRead",
      "httpMethod": "get",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Retrieve an existing vaccine inventory",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "cvxCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/lab_documents",
      "method": "labDocumentsList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search lab order documents",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/lab_documents",
      "method": "labDocumentsCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create lab order documents. An example lab workflow is as following:\n\n- When you get orders, submit them via `/api/lab_orders`, such that doctors can see them in drchrono.\n\n- When results come in, submit the result document PDF via `/api/lab_documents` and submit the results data via `/api/lab_results`\n\n- Update `/api/lab_orders` status\n",
      "parameters": [
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/lab_documents/{id}",
      "method": "labDocumentsDelete",
      "httpMethod": "delete",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Delete an existing lab order document",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/lab_documents/{id}",
      "method": "labDocumentsRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing lab order document",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/lab_documents/{id}",
      "method": "labDocumentsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing lab order document",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/lab_documents/{id}",
      "method": "labDocumentsUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing lab order document",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/lab_orders",
      "method": "labOrdersList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search lab orders",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/lab_orders",
      "method": "labOrdersCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create lab orders. An example lab workflow is as following:\n\n- When you get orders, submit them via `/api/lab_orders`, such that doctors can see them in drchrono.\n\n- When results come in, submit the result document PDF via `/api/lab_documents` and submit the results data via `/api/lab_results`\n\n- Update `/api/lab_orders` status\n",
      "parameters": [
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/lab_orders/{id}",
      "method": "labOrdersDelete",
      "httpMethod": "delete",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Delete an existing lab order",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/lab_orders/{id}",
      "method": "labOrdersRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing lab order",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/lab_orders/{id}",
      "method": "labOrdersPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing lab order",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/lab_orders/{id}",
      "method": "labOrdersUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing lab order",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/lab_orders_summary",
      "method": "labOrdersSummaryList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/lab_orders_summary/{id}",
      "method": "labOrdersSummaryRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/lab_results",
      "method": "labResultsList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search lab results",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "order",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/lab_results",
      "method": "labResultsCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create lab results. An example lab workflow is as following:\n\n- When you get orders, submit them via `/api/lab_orders`, such that doctors can see them in drchrono.\n\n- When results come in, submit the result document PDF via `/api/lab_documents` and submit the results data via `/api/lab_results`\n\n- Update `/api/lab_orders` status\n",
      "parameters": [
        {
          "name": "order",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/lab_results/{id}",
      "method": "labResultsDelete",
      "httpMethod": "delete",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Delete an existing lab result",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "order",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/lab_results/{id}",
      "method": "labResultsRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing lab result",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "order",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/lab_results/{id}",
      "method": "labResultsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing lab result",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "order",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/lab_results/{id}",
      "method": "labResultsUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing lab result",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "order",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/lab_tests",
      "method": "labTestsList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search lab tests",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "order",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/lab_tests",
      "method": "labTestsCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create lab tests. An example lab workflow is as following:\n\n- When you get orders, submit them via `/api/lab_orders`, such that doctors can see them in drchrono.\n\n- When results come in, submit the result document PDF via `/api/lab_documents` and submit the results data via `/api/lab_results`\n\n- Update `/api/lab_orders` status\n",
      "parameters": [
        {
          "name": "order",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/lab_tests/{id}",
      "method": "labTestsDelete",
      "httpMethod": "delete",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Delete an existing lab test",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "order",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/lab_tests/{id}",
      "method": "labTestsRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing lab test",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "order",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/lab_tests/{id}",
      "method": "labTestsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing lab test",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "order",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/lab_tests/{id}",
      "method": "labTestsUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing lab test",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "order",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/line_items",
      "method": "lineItemsList",
      "httpMethod": "get",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "Retrieve or search billing line items",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "postedDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "serviceDate",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/line_items",
      "method": "lineItemsCreate",
      "httpMethod": "post",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "Create billing line item for appointments",
      "parameters": [
        {
          "name": "postedDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "serviceDate",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/line_items/{id}",
      "method": "lineItemsDelete",
      "httpMethod": "delete",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "postedDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "serviceDate",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/line_items/{id}",
      "method": "lineItemsRead",
      "httpMethod": "get",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "Retrieve an existing billing line item",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "postedDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "serviceDate",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/line_items/{id}",
      "method": "lineItemsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "postedDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "serviceDate",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/line_items/{id}",
      "method": "lineItemsUpdate",
      "httpMethod": "put",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "postedDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "serviceDate",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/medications",
      "method": "medicationsList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search patient medications",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/medications",
      "method": "medicationsCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create patient medications",
      "parameters": [
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/medications/{id}",
      "method": "medicationsRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing patient medications",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/medications/{id}",
      "method": "medicationsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient medications",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/medications/{id}",
      "method": "medicationsUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient medications",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/medications/{id}/append_to_pharmacy_note",
      "method": "medicationsAppendToPharmacyNote",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Append a message to the \"pharmacy_note\" section of the prescription, in a new paragraph",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/messages",
      "method": "messagesList",
      "httpMethod": "get",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Retrieve or search messages in doctor's message center",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "responsibleUser",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "updatedSince",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "receivedSince",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "owner",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/messages",
      "method": "messagesCreate",
      "httpMethod": "post",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Create messages in doctor's message center",
      "parameters": [
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "responsibleUser",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "updatedSince",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "receivedSince",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "owner",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/messages/{id}",
      "method": "messagesDelete",
      "httpMethod": "delete",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Delete an existing message in doctor's message center",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "responsibleUser",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "updatedSince",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "receivedSince",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "owner",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/messages/{id}",
      "method": "messagesRead",
      "httpMethod": "get",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Retrieve an existing message in doctor's message center",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "responsibleUser",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "updatedSince",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "receivedSince",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "owner",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/messages/{id}",
      "method": "messagesPartialUpdate",
      "httpMethod": "patch",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Update an existing message in doctor's message center",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "responsibleUser",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "updatedSince",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "receivedSince",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "owner",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/messages/{id}",
      "method": "messagesUpdate",
      "httpMethod": "put",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Update an existing message in doctor's message center",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "responsibleUser",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "updatedSince",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "receivedSince",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "owner",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/offices",
      "method": "officesList",
      "httpMethod": "get",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Retrieve or search offices",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/offices/{id}",
      "method": "officesRead",
      "httpMethod": "get",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Retrieve an existing office",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/offices/{id}",
      "method": "officesPartialUpdate",
      "httpMethod": "patch",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Update an existing office",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/offices/{id}",
      "method": "officesUpdate",
      "httpMethod": "put",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Update an existing office",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/offices/{id}/add_exam_room",
      "method": "officesAddExamRoom",
      "httpMethod": "post",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Add an exam room to the office",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patient_communications",
      "method": "patientCommunicationsList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search patient communications for CQM",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/patient_communications",
      "method": "patientCommunicationsCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create patient communication for CQM",
      "parameters": [
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patient_communications/{id}",
      "method": "patientCommunicationsRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing patient communication for CQM",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patient_communications/{id}",
      "method": "patientCommunicationsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient communication for CQM",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patient_communications/{id}",
      "method": "patientCommunicationsUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient communication for CQM",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patient_flag_types",
      "method": "patientFlagTypesList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search patient flag types",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/patient_flag_types",
      "method": "patientFlagTypesCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create patient flag types",
      "parameters": [
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patient_flag_types/{id}",
      "method": "patientFlagTypesRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing patient flag type",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patient_flag_types/{id}",
      "method": "patientFlagTypesPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient flag type",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patient_flag_types/{id}",
      "method": "patientFlagTypesUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient flag type",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patient_interventions",
      "method": "patientInterventionsList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search patient interventions for CQM",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/patient_interventions",
      "method": "patientInterventionsCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create patient intervention for CQM",
      "parameters": [
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patient_interventions/{id}",
      "method": "patientInterventionsRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing patient intervention for CQM",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patient_interventions/{id}",
      "method": "patientInterventionsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient intervention for CQM",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patient_interventions/{id}",
      "method": "patientInterventionsUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient intervention for CQM",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patient_lab_results",
      "method": "patientLabResultsList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "orderingDoctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/patient_lab_results",
      "method": "patientLabResultsCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "orderingDoctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patient_lab_results/{id}",
      "method": "patientLabResultsDelete",
      "httpMethod": "delete",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orderingDoctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patient_lab_results/{id}",
      "method": "patientLabResultsRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orderingDoctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patient_lab_results/{id}",
      "method": "patientLabResultsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orderingDoctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patient_lab_results/{id}",
      "method": "patientLabResultsUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orderingDoctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patient_messages",
      "method": "patientMessagesList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/patient_messages",
      "method": "patientMessagesCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patient_messages/{id}",
      "method": "patientMessagesRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patient_messages/{id}",
      "method": "patientMessagesPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patient_messages/{id}",
      "method": "patientMessagesUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patient_payment_log",
      "method": "patientPaymentLogList",
      "httpMethod": "get",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "Retrieve or search patient payment logs",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/patient_payment_log/{id}",
      "method": "patientPaymentLogRead",
      "httpMethod": "get",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "Retrieve an existing patient payment log",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "office",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patient_payments",
      "method": "patientPaymentsList",
      "httpMethod": "get",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "Retrieve or search patient payments",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/patient_payments",
      "method": "patientPaymentsCreate",
      "httpMethod": "post",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "Create patient payment",
      "parameters": [
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patient_payments/{id}",
      "method": "patientPaymentsRead",
      "httpMethod": "get",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "Retrieve an existing patient payment",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patient_physical_exams",
      "method": "patientPhysicalExamsList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search patient physical exams for CQM",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/patient_physical_exams",
      "method": "patientPhysicalExamsCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create patient physical exam for CQM",
      "parameters": [
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patient_physical_exams/{id}",
      "method": "patientPhysicalExamsRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing patient physical exam for CQM",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patient_physical_exams/{id}",
      "method": "patientPhysicalExamsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient physical exam for CQM",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patient_physical_exams/{id}",
      "method": "patientPhysicalExamsUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient physical exam for CQM",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patient_risk_assessments",
      "method": "patientRiskAssessmentsList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/patient_risk_assessments",
      "method": "patientRiskAssessmentsCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patient_risk_assessments/{id}",
      "method": "patientRiskAssessmentsRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patient_risk_assessments/{id}",
      "method": "patientRiskAssessmentsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patient_risk_assessments/{id}",
      "method": "patientRiskAssessmentsUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patient_vaccine_records",
      "method": "patientVaccineRecordsList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search patient vaccine records",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "cvxCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/patient_vaccine_records",
      "method": "patientVaccineRecordsCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create patient vaccine records",
      "parameters": [
        {
          "name": "cvxCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patient_vaccine_records/{id}",
      "method": "patientVaccineRecordsRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing patient vaccine records",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "cvxCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patient_vaccine_records/{id}",
      "method": "patientVaccineRecordsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient vaccine records",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "cvxCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patient_vaccine_records/{id}",
      "method": "patientVaccineRecordsUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient vaccine records",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "cvxCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patients",
      "method": "patientsList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search patients",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "preferredLanguage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateOfBirth",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "race",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "chartId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ethnicity",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/patients",
      "method": "patientsCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create patient",
      "parameters": [
        {
          "name": "firstName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "preferredLanguage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateOfBirth",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "race",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "chartId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ethnicity",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patients/{id}",
      "method": "patientsDelete",
      "httpMethod": "delete",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Delete an existing patient",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "preferredLanguage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateOfBirth",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "race",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "chartId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ethnicity",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patients/{id}",
      "method": "patientsRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing patient",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "preferredLanguage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateOfBirth",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "race",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "chartId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ethnicity",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patients/{id}",
      "method": "patientsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "preferredLanguage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateOfBirth",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "race",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "chartId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ethnicity",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patients/{id}",
      "method": "patientsUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "preferredLanguage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateOfBirth",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "race",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "chartId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ethnicity",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patients/{id}/ccda",
      "method": "patientsCcda",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve patient CCDA",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "preferredLanguage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateOfBirth",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "race",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "chartId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ethnicity",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patients/{id}/onpatient_access",
      "method": "patientsOnpatientAccessDelete",
      "httpMethod": "delete",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Revoke sent onpatient invites",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "preferredLanguage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateOfBirth",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "race",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "chartId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ethnicity",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patients/{id}/onpatient_access",
      "method": "patientsOnpatientAccessRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search existing onpatient access invites",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "preferredLanguage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateOfBirth",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "race",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "chartId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ethnicity",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patients/{id}/onpatient_access",
      "method": "patientsOnpatientAccessCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Send new onpatient invite to patient",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "preferredLanguage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateOfBirth",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "race",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "chartId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ethnicity",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patients/{id}/qrda1",
      "method": "patientsQrda1",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve patient QRDA1",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "preferredLanguage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateOfBirth",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "race",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "chartId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ethnicity",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patients_summary",
      "method": "patientsSummaryList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateOfBirth",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/patients_summary",
      "method": "patientsSummaryCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "firstName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateOfBirth",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patients_summary/{id}",
      "method": "patientsSummaryDelete",
      "httpMethod": "delete",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateOfBirth",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patients_summary/{id}",
      "method": "patientsSummaryRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateOfBirth",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/patients_summary/{id}",
      "method": "patientsSummaryPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateOfBirth",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/patients_summary/{id}",
      "method": "patientsSummaryUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateOfBirth",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/prescription_messages",
      "method": "prescriptionMessagesList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search prescription messages",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "parentMessage",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/prescription_messages/{id}",
      "method": "prescriptionMessagesRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing prescription message",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "parentMessage",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/problems",
      "method": "problemsList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search patient problems",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/problems",
      "method": "problemsCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create patient problems",
      "parameters": [
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/problems/{id}",
      "method": "problemsRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing patient problems",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/problems/{id}",
      "method": "problemsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient problems",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/problems/{id}",
      "method": "problemsUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing patient problems",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/procedures",
      "method": "proceduresList",
      "httpMethod": "get",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "muDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "muDateRange",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "serviceDate",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/procedures/{id}",
      "method": "proceduresRead",
      "httpMethod": "get",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "muDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "patient",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "muDateRange",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "serviceDate",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/reminder_profiles",
      "method": "reminderProfilesList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search reminder profiles",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/reminder_profiles",
      "method": "reminderProfilesCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create reminder profile",
      "parameters": [
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/reminder_profiles/{id}",
      "method": "reminderProfilesDelete",
      "httpMethod": "delete",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Delete an existing reminder profile",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/reminder_profiles/{id}",
      "method": "reminderProfilesRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing reminder profile",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/reminder_profiles/{id}",
      "method": "reminderProfilesPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing reminder profile",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/reminder_profiles/{id}",
      "method": "reminderProfilesUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing reminder profile",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/sublabs",
      "method": "sublabsList",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve or search sub vendors",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/sublabs",
      "method": "sublabsCreate",
      "httpMethod": "post",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Create sub-vendors\n\n- When you get orders, submit them via `/api/lab_orders`, such that doctors can see them in drchrono.\n\n- When results come in, submit the result document PDF via `/api/lab_documents` and submit the results data via `/api/lab_results`\n\n- Update `/api/lab_orders` status\n",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/sublabs/{id}",
      "method": "sublabsDelete",
      "httpMethod": "delete",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Delete an existing sub vendor",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/sublabs/{id}",
      "method": "sublabsRead",
      "httpMethod": "get",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Retrieve an existing sub vendor",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/sublabs/{id}",
      "method": "sublabsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing sub vendor",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/sublabs/{id}",
      "method": "sublabsUpdate",
      "httpMethod": "put",
      "tag": "Clinical",
      "typeScriptTag": "clinical",
      "description": "Update an existing sub vendor",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/task_categories",
      "method": "taskCategoriesList",
      "httpMethod": "get",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Retrieve or search task categories",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/task_categories",
      "method": "taskCategoriesCreate",
      "httpMethod": "post",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Create a task category",
      "parameters": [
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/task_categories/{id}",
      "method": "taskCategoriesRead",
      "httpMethod": "get",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Retrieve an existing task category",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/task_categories/{id}",
      "method": "taskCategoriesPartialUpdate",
      "httpMethod": "patch",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Update an existing task category",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/task_categories/{id}",
      "method": "taskCategoriesUpdate",
      "httpMethod": "put",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Update an existing task category",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/task_notes",
      "method": "taskNotesList",
      "httpMethod": "get",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Retrieve or search task notes",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "task",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/task_notes",
      "method": "taskNotesCreate",
      "httpMethod": "post",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Create a task note",
      "parameters": [
        {
          "name": "task",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/task_notes/{id}",
      "method": "taskNotesRead",
      "httpMethod": "get",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Retrieve an existing task note",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "task",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/task_notes/{id}",
      "method": "taskNotesPartialUpdate",
      "httpMethod": "patch",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Update an existing task note",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "task",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/task_notes/{id}",
      "method": "taskNotesUpdate",
      "httpMethod": "put",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Update an existing task note",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "task",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/task_statuses",
      "method": "taskStatusesList",
      "httpMethod": "get",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Retrieve or search task statuses",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/task_statuses",
      "method": "taskStatusesCreate",
      "httpMethod": "post",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Create a task status",
      "parameters": [
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/task_statuses/{id}",
      "method": "taskStatusesRead",
      "httpMethod": "get",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Retrieve an existing task status",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/task_statuses/{id}",
      "method": "taskStatusesPartialUpdate",
      "httpMethod": "patch",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Update an existing task status",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/task_statuses/{id}",
      "method": "taskStatusesUpdate",
      "httpMethod": "put",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Update an existing task status",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/task_templates",
      "method": "taskTemplatesList",
      "httpMethod": "get",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Retrieve or search task templates",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "assigneeUser",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "assigneeGroup",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "category",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/task_templates",
      "method": "taskTemplatesCreate",
      "httpMethod": "post",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Create a task template",
      "parameters": [
        {
          "name": "assigneeUser",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "assigneeGroup",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "category",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/task_templates/{id}",
      "method": "taskTemplatesRead",
      "httpMethod": "get",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Retrieve an existing task template",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "assigneeUser",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "assigneeGroup",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "category",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/task_templates/{id}",
      "method": "taskTemplatesPartialUpdate",
      "httpMethod": "patch",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Update an existing task template",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "assigneeUser",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "assigneeGroup",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "category",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/task_templates/{id}",
      "method": "taskTemplatesUpdate",
      "httpMethod": "put",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Update an existing task template",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "assigneeUser",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "assigneeGroup",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "category",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/tasks",
      "method": "tasksList",
      "httpMethod": "get",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Retrieve or search tasks",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "category",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "dueAtDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dueAtUnknown",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dueAtSince",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "assigneeUser",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "assigneeGroup",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "dueAtRange",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/tasks",
      "method": "tasksCreate",
      "httpMethod": "post",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Create a task",
      "parameters": [
        {
          "name": "status",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "category",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "dueAtDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dueAtUnknown",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dueAtSince",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "assigneeUser",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "assigneeGroup",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "dueAtRange",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/tasks/{id}",
      "method": "tasksRead",
      "httpMethod": "get",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Retrieve an existing task",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "status",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "category",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "dueAtDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dueAtUnknown",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dueAtSince",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "assigneeUser",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "assigneeGroup",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "dueAtRange",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/tasks/{id}",
      "method": "tasksPartialUpdate",
      "httpMethod": "patch",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Update an existing task",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "status",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "category",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "dueAtDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dueAtUnknown",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dueAtSince",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "assigneeUser",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "assigneeGroup",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "dueAtRange",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/tasks/{id}",
      "method": "tasksUpdate",
      "httpMethod": "put",
      "tag": "PracticeManagement",
      "typeScriptTag": "practiceManagement",
      "description": "Update an existing task",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "status",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "category",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "dueAtDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dueAtUnknown",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dueAtSince",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "assigneeUser",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "assigneeGroup",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "dueAtRange",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/transactions",
      "method": "transactionsList",
      "httpMethod": "get",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "Retrieve or search insurance transactions associated with billing line items",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "lineItem",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "postedDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/transactions/{id}",
      "method": "transactionsRead",
      "httpMethod": "get",
      "tag": "Billing",
      "typeScriptTag": "billing",
      "description": "Retrieve an existing insurance transaction",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lineItem",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "postedDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "appointment",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/user_groups",
      "method": "userGroupsList",
      "httpMethod": "get",
      "tag": "Administrative",
      "typeScriptTag": "administrative",
      "description": "Retrieve or search user groups",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/user_groups/{id}",
      "method": "userGroupsRead",
      "httpMethod": "get",
      "tag": "Administrative",
      "typeScriptTag": "administrative",
      "description": "Retrieve an existing user group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/users",
      "method": "usersList",
      "httpMethod": "get",
      "tag": "Administrative",
      "typeScriptTag": "administrative",
      "description": "Retrieve or search users, `/api/users/current` can be used to identify logged in user, it will redirect to `/api/users/{current_user_id}`",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Paginated Result"
        }
      ]
    },
    {
      "url": "/api/users/{id}",
      "method": "usersRead",
      "httpMethod": "get",
      "tag": "Administrative",
      "typeScriptTag": "administrative",
      "description": "Retrieve an existing user, `/api/users/current` can be used to identify logged in user, it will redirect to `/api/users/{current_user_id}`",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "doctor",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://app.drchrono.com",
  "apiDescription": "This document is intended as a detailed reference for the precise behavior of\nthe drchrono API. If this is your first time using the API, start with our <a href=\"/api-docs-old/tutorial\">tutorial</a>. If you are upgrading from a previous version, take a look at the changelog section.\n\n# Authorization\n\n## Initial authorization\n\nThere are three main steps in the OAuth 2.0 authentication workflow:\n\n1. Redirect the provider to the authorization page.\n2. The provider authorizes your application and is redirected back to\n   your web application.\n3. Your application exchanges the `authorization_code` that came with\n   the redirect for an `access_token` and `refresh_token`.\n\n### Step 1: Redirect to drchrono\n\nThe first step is redirecting your user to drchrono, typically with a button\nlabeled \"Connect to drchrono\" or \"Login with drchrono\".  This is just a link that\ntakes your user to the following URL:\n\n    https://drchrono.com/o/authorize/?redirect_uri=REDIRECT_URI_ENCODED&response_type=code&client_id=CLIENT_ID_ENCODED&scope=SCOPES_ENCODED\n\n- `REDIRECT_URI_ENCODED` is the URL-encoded version of the redirect URI (as registered for your application and used in later steps).\n- `CLIENT_ID_ENCODED` is the URL-encoded version of your application's client ID.\n- `SCOPES_ENCODED` is a URL-encoded version of a space-separated list of scopes, which can be found in each endpoint or omitted to default to all scopes.\n\nThe `scope` parameter consists of an optional, space-separated list of scopes your application is requesting.\nIf omitted, all scopes will be requested.\n\nScopes are of the form `BASE_SCOPE:[read|write]` where `BASE_SCOPE` is any of `user`, `calendar`, `patients`, `patients:summary`, `billing`, `clinical` and `labs`.\nYou should request only the scopes you need.\nFor instance, an application which sends \"Happy Birthday!\" emails to a doctor's patients on their birthdays would use the scope parameter `\"patients:summary:read\"`,\nwhile one that allows patients to schedule appointments online would need at least\n`\"patients:summary:read patients:summary:write calendar:read calendar:write clinical:read clinical:write\"`.\n\n### Step 2: Provider authorization\n\nAfter logging in (if necessary), the provider will be presented with a screen\nwith your application's name and the list of permissions you requested (via the\n`scope` parameter).\n\nWhen they click the \"Authorize\" button, they will be redirected to your redirect\nURI with a `code` query parameter appended, which contains an authorization code to be\nused in step 3.  If they click the \"Cancel\" button, they will be redirected to\nyour redirect URI with `error=access_denied` instead.\n\nNote: This authorization code expires extremely quickly, so you must perform\nstep 3 immediately, ideally before rendering the resulting page for the end\nuser.\n\n### Step 3: Token exchange\n\nThe `code` obtained from step 2 is usable exactly once to obtain an access token\nand refresh token.  Here is an example token exchange in Python:\n\n    import datetime, pytz, requests\n\n    if 'error' in get_params:\n        raise ValueError('Error authorizing application: %s' % get_params[error])\n\n    response = requests.post('https://drchrono.com/o/token/', data={\n        'code': get_params['code'],\n        'grant_type': 'authorization_code',\n        'redirect_uri': 'http://mytestapp.com/redirect_uri',\n        'client_id': 'abcdefg12345',\n        'client_secret': 'abcdefg12345',\n    })\n    response.raise_for_status()\n    data = response.json()\n\n    # Save these in your database associated with the user\n    access_token = data['access_token']\n    refresh_token = data['refresh_token']\n    expires_timestamp = datetime.datetime.now(pytz.utc) + datetime.timedelta(seconds=data['expires_in'])\n\nYou now have all you need to make API requests authenticated as that provider.\nWhen using this access token, you'll only be able to access the data that the\nuser has access to and that you have been granted permissions for.\n\n## Refreshing an access token\n\nAccess tokens only last 48 hours (given in seconds in the `'expires_in'` key in\nthe token exchange step above), so they occasionally need to be refreshed.  It\nwould be inconvenient to ask the user to re-authorize every time, so instead you\ncan use the refresh token like the original authorization to obtain a new access\ntoken.  Replace the `code` parameter with `refresh_token`, change the value\n`grant_type` from `authorization_code` to `refresh_token`, and omit the\n`redirect_uri` parameter.\n\nExample in Python:\n\n    ...\n    response = requests.post('https://drchrono.com/o/token/', data={\n        'refresh_token': get_refresh_token(),\n        'grant_type': 'refresh_token',\n        'client_id': 'abcdefg12345',\n        'client_secret': 'abcdefg12345',\n    })\n    ...\n\n# Webhooks\n\nIn order to use drchrono API webhooks, you first need to have an API application on file\n(even if it is in Test Model).\nEach API webhook is associated with one API application, go to\n<a href=\"/api-management/\" target=\"_blank\">here</a> to set up both API applications and webhooks!\n\nOnce you registered an API application, you will see webhook section in each saved API applications.\nCreate a webhook and register some events there and save all the changes, then you are good to go!\n\n## Webhooks setup\n\nAll fields under webhooks section are required.\n\n**Callback URL**\nCallback URl is used to receive all hooks when subscribed events are triggered. This should be an URL under your control.\n\n**Secret token**\nSecret token is used to verify webhooks, this is very important, please set something with high entropy. Also we will\ntalk more about this later.\n\n**Events**\n\nEvents is used to register events you want to receiver notification when they happen. Currently we support following events.\n\nEvent name | Event description\n---------- | -----------------\n`APPOINTMENT_CREATE` | We will deliver a hook any time an appointment is created\n`APPOINTMENT_MODIFY` | We will deliver a hook any time an appointment is modified\n`PATIENT_CREATE` | We will deliver a hook any time a patient is created\n`PATIENT_MODIFY` | We will deliver a hook any time a patient is modified\n`PATIENT_PROBLEM_CREATE` | We will deliver a hook any time a patient problem is created\n`PATIENT_PROBLEM_MODIFY` | We will deliver a hook any time a patient problem is modified\n`PATIENT_ALLERGY_CREATE` | We will deliver a hook any time a patient allergy is created\n`PATIENT_ALLERGY_MODIFY` | We will deliver a hook any time a patient allergy is modified\n`PATIENT_MEDICATION_CREATE` | We will deliver a hook any time a patient medication is created\n`PATIENT_MEDICATION_MODIFY` | We will deliver a hook any time a patient medication is modified\n`CLINICAL_NOTE_LOCK` | We will deliver a hook any time a clinical note is locked\n`CLINICAL_NOTE_UNLOCK` | We will deliver a hook any time a clinical note is unlocked\n`TASK_CREATE` | We will deliver a hook any time a task is created\n`TASK_MODIFY` | We will deliver a hook any time a task is modified and any time creation, modification and deletion of task notes, associated task item\n`TASK_DELETE` | We will deliver a hook any time a task is deleted\n\n\n## Webhooks verification\n\nIn order to make sure the callback URL in webhook is under your control, we added a verification\nstep before we send any hooks out to you.\n\nVerification can be done by clicking \"Verify webhook\" button in webhooks setup page. After you click\nthe button, we will send a `GET` request to the callback URL, along with a parameter called `msg`.\n\nPlease use your webhook's secret token as hash key and SHA-256 as digest constructor, hash the `msg` value with\n<a href=\"https://tools.ietf.org/html/rfc2104.html\">HMAC algorithm</a>.\nAnd we expect a `200` JSON response, in JSON response body, there should be a key called `secret_token` existing, and its value should be\nequal to the <strong>hashed</strong> `msg`. Otherwise, verification will fail.\n\nHere is an example webhook verification in Python:\n\n    import hashlib, hmac\n\n    def webhook_verify(request):\n        secret_token = hmac.new(WEBHOOK_SECRET_TOKEN, request.GET['msg'], hashlib.sha256).hexdigest()\n        return json_response({\n            'secret_token': secret_token\n        })\n\n<div class=\"alert alert-warning\">\n<b>Note:</b> Verification will be needed when webhook is first created and anytime callback URl is changed.\n</div>\n\n\n## Webhooks header and body\n\n**Header**\n\nKey | Value\n--- | -----\n`X-drchrono-event` | Event that triggered this hook, could be any one event above or `PING`\n`X-drchrono-signature` | Secret token associated with this webhook\n`X-drchrono-delivery` | ID of this delivery\n\n**Body**\n\nKey | Value\n--- | -----\n`receiver` | This will be an JSON representation of the webhook\n`object` | This will be an JSON representation of the object related to the triggered event, this would share same serializer as drchrono API\n\n## Webhooks ping and deliveries\n\nWebhooks ping and deliveries will be sent as `POST` requests.\n\n**PING**:\n\nYou can always ping your webhook to check things, by clicking the \"Ping webhook\" button in webhook setup page. And a hook with header `X-drchrono-event: PING` would be sent to the callback URL.\n\n**Deliveries**:\n\nYou can check recent deliveries by clicking the \"deliveries\" link in webhook setup page. And you can resend a hook by clicking \"redeliver\" button after select a specific delivery.\n\n## Webhooks delivery mechanism\n\nWe will delivery a hook the moment a subscribed event is triggered. We will not record any response header or body you send back after you receive the hook.\nHowever we only consider the response status code. We will consider any `2xx` responses as successfully delivered.\nAny other responses, like `302` would be considered failing.\nAnd we will try to redeliver unsuccessfully delivered hooks 3 times, first redeliver happens at 1 hour after the initial event,\nsecond receliver happens 3 hours after the initial event, and the third redeliver happens 7 hours after the initial event.\nAfter these redeliveries, if the delivery is still unsuccessful, you have to redeliver it by hand.\n\n\n## Webhooks security\n\nYou may want to secure your webhooks to only consider requests send out from drchrono. And this is where <code>secret_token</code> is needed in\nrequest header.\nTry to set the <code>secret_token</code> to something with high entropy, a good example could be taking the output of\n<code>ruby -rsecurerandom -e 'puts SecureRandom.hex(20)'</code>.\nAfter this, you might want to verify all request headers you received on your server with this token.\n\n\n# iframe integration\n\nSome API apps provide additional functionality for interacting with patient data\nnot offered by drchrono, and can benefit by being incorporated into drchrono's\npatient information page via iframe.  We have created a simple API to make this\npossible.\n\nTo make an existing API application accessible via an iframe on the patient\npage, you need to update either \"Patient iframe\" or \"Clinical note iframe\" section in API management page,\nto make the iframe to appear on (either the patient page or the clinical note page),\nwith the URL that the iframe will use for each page, and the height it should\nhave. The application will be reviewed before it is approved to ensure that it\nis functional and secure.\n\n## Register a Doctor\n\niframe applications will appear as choices on the left-hand menu of the patient\npage for doctors registered with your application.  To register a doctor with\nyour application, make a `POST` request to the `/api/iframe_integration`\nendpoint using the access token for the corresponding doctor. This endpoint does not\nexpect any payload.\n\nTo disable your iframe application for a doctor, make a `DELETE` request to the\nsame endpoint.\n\n## Populating the iframe\n\nThere are two places where the iframe can be displayed, either within the\npatient detail page or the clinical note page, shown below respectively:\n\n<img src=\"{% asset 'public/images/iframe_patient_page.png' %}\" alt=\"Iframe on the patient page\"/>\n\n<img src=\"{% asset 'public/images/iframe_clinical_note.png' %}\" alt=\"Iframe on the clinical note page\"/>\n\nWhen requesting approval for your iframe app, you must specify a URL for one or\nboth of these pages which will serve as the base URL for your IFrame\ncontents. When a doctor views your iframe, the source URL will have various\nquery parameters appended to it, for example for the patient page the `src`\nparameter of the IFrame will be:\n\n```\n<iframe_url>?doctor_id=<doctor_id>&patient_id=<patient_id>&practice_id=<practice_id>&iat=<iat>&jwt=<jwt>\n```\n\nThe `jwt` parameter is crucial if your application transfers any sort of PHI and\ndoes not implement its own login system.  It encapsulates the other parameters\nin a [JSON web token (JWT)](http://jwt.io) and signs them using SHA-256 HMAC\nwith your `client_secret` as the key.  This verifies that the iframe is being\nloaded within one of drchrono's pages by an authorized user.  In production, you\nshould validate the JWT using an approved library (which are listed on the\n[official site](http://jwt.io)), and only use the parameters extracted from the\nJWT.  Using Python and Django, this might look like:\n\n    import jwt\n\n    CLIENT_SECRET = <client_secret>\n    MAX_TIME_DRIFT_SECONDS = 60\n\n    def validate_parameters(request):\n        token = request.GET['jwt']\n\n        return jwt.decode(token, CLIENT_SECRET, algorithms=['HS256'], leeway=MAX_TIME_DRIFT_SECONDS)\n\nModern browsers' same-origin policy means that data cannot be passed between\nyour application and drchrono's page through the iframe.  Therefore, interaction\nmust happen through the API, using information provided in JWT.\n\n# Versions and deprecation\n\n## Stability Policy\n\nChanges to this API version will be limited to adding endpoints, or adding fields to existing\nendpoints, or adding optional query parameters. Any new fields which are not read-only will be optional.\n\n## Deprecation Policy\n\nThe drchrono API is versioned. Versions can be in the following states:\n\n* **Active:** This is our latest and greatest version of the API. It is actively supported by\nour API team and is improved upon with new features, bug fixes and optimizations that do\nnot break backwards compatibility.\n\n* **Deprecated:** A deprecated API version is considered second best--having been\nsurpassed by our active API version. An API version remains in this state for one year,\nafter which time it falls to the not supported state. A deprecated API version is passively supported;\nwhile it won't be removed until becoming unsupported, it may not receive new features but will likely\nbe subject to security updates and performance improvements.\n\n* **Unsupported:** An API version in the not supported state may be deactivated at any\ntime. An application using an unsupported API version should migrate to an active API version.\n\n## Version Map\n| Version Name | Previous Name | Start Date | Deprecation Date |\n|--------------|---------------|------------|------------------|\n| v2           | v2015_08      | 08/2015    | TBA              |\n| v3           | v2016_06      | 06/2016    |                  |\n| v4           | N/A           | 09/2018    |                  |\n\nIf you are looking for documentation for an older version\n\n- [V4(Hunt Valley)](/api-docs-old/v4/documentation) (old V4 documentation)\n- [V3(Sunnyvale)](/api-docs-old/v3/documentation)\n- [V2(Mountain View)](/api-docs-old/v2/documentation)\n\n# Changelog\n\nHere's changelog for different versions\n\n- [V4 Changelog](/api-docs-old/v4/changelog)\n- [V3 changelog](/api-docs-old/v3/changelog)\n\n",
  "apiTitle": "",
  "endpoints": 131,
  "sdkMethods": 263,
  "schemas": 59,
  "parameters": 1130,
  "difficultyScore": 575,
  "difficulty": "Very Hard"
}