{
  "providerName": "mailchimp.com",
  "openApiRaw": "https://api.mailchimp.com/schema/3.0/Swagger.json?expand",
  "homepage": "mailchimp.com",
  "apiVersion": "3.0.55",
  "methods": [
    {
      "url": "/",
      "method": "getRoot",
      "httpMethod": "get",
      "tag": "root",
      "description": "List api root resources",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The API root resource links to all other resources available in the API."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/account-exports",
      "method": "getAccountExports",
      "httpMethod": "get",
      "tag": "accountExports",
      "description": "List account exports",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An array of objects, each representing an account export."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/account-exports",
      "method": "postAccountExport",
      "httpMethod": "post",
      "tag": "accountExports",
      "description": "Add export",
      "parameters": [
        {
          "name": "include_stages",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "since_timestamp",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An account export."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/account-exports/{export_id}",
      "method": "getAccountExportId",
      "httpMethod": "get",
      "tag": "accountExport",
      "description": "Get account export info",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "export_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the account export."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An account export."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/activity-feed/chimp-chatter",
      "method": "getActivityFeedChimpChatter",
      "httpMethod": "get",
      "tag": "activityFeed",
      "description": "Get latest chimp chatter",
      "parameters": [
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An array of Chimp Chatter messages. There's a maximum of 200 messages present for an account."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/authorized-apps",
      "method": "getAuthorizedApps",
      "httpMethod": "get",
      "tag": "authorizedApps",
      "description": "List authorized apps",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An array of objects, each representing an authorized application."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/authorized-apps/{app_id}",
      "method": "getAuthorizedAppsId",
      "httpMethod": "get",
      "tag": "authorizedApps",
      "description": "Get authorized app info",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "app_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the connected authorized application."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An authorized app."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/automations",
      "method": "getAutomations",
      "httpMethod": "get",
      "tag": "automations",
      "description": "List automations",
      "parameters": [
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "before_create_time",
          "schema": "string",
          "required": false,
          "description": "Restrict the response to automations created before this time. Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "since_create_time",
          "schema": "string",
          "required": false,
          "description": "Restrict the response to automations created after this time. Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "before_start_time",
          "schema": "string",
          "required": false,
          "description": "Restrict the response to automations started before this time. Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "since_start_time",
          "schema": "string",
          "required": false,
          "description": "Restrict the response to automations started after this time. Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Restrict the results to automations with the specified status."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An array of objects, each representing an Automation workflow."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/automations",
      "method": "postAutomations",
      "httpMethod": "post",
      "tag": "automations",
      "description": "Add automation",
      "parameters": [
        {
          "name": "recipients",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "settings",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "trigger_settings",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of an individual Automation workflow's settings and content."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/automations/{workflow_id}",
      "method": "getAutomationsId",
      "httpMethod": "get",
      "tag": "automations",
      "description": "Get automation info",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "workflow_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of an individual Automation workflow's settings and content."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/automations/{workflow_id}/actions/archive",
      "method": "archiveAutomations",
      "httpMethod": "post",
      "tag": "automations",
      "description": "Archive automation",
      "parameters": [
        {
          "name": "workflow_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/automations/{workflow_id}/actions/pause-all-emails",
      "method": "postAutomationsIdActionsPauseAllEmails",
      "httpMethod": "post",
      "tag": "automations",
      "description": "Pause automation emails",
      "parameters": [
        {
          "name": "workflow_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/automations/{workflow_id}/actions/start-all-emails",
      "method": "postAutomationsIdActionsStartAllEmails",
      "httpMethod": "post",
      "tag": "automations",
      "description": "Start automation emails",
      "parameters": [
        {
          "name": "workflow_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/automations/{workflow_id}/emails",
      "method": "getAutomationsIdEmails",
      "httpMethod": "get",
      "tag": "automations",
      "description": "List automated emails",
      "parameters": [
        {
          "name": "workflow_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of the emails in an Automation workflow."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/automations/{workflow_id}/emails/{workflow_email_id}",
      "method": "deleteAutomationsIdEmailsId",
      "httpMethod": "delete",
      "tag": "automations",
      "description": "Delete workflow email",
      "parameters": [
        {
          "name": "workflow_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow."
        },
        {
          "name": "workflow_email_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow email."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/automations/{workflow_id}/emails/{workflow_email_id}",
      "method": "getAutomationsIdEmailsId",
      "httpMethod": "get",
      "tag": "automations",
      "description": "Get workflow email info",
      "parameters": [
        {
          "name": "workflow_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow."
        },
        {
          "name": "workflow_email_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow email."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of an individual Automation workflow email."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/automations/{workflow_id}/emails/{workflow_email_id}",
      "method": "patchAutomationEmailWorkflowId",
      "httpMethod": "patch",
      "tag": "automations",
      "description": "Update workflow email",
      "parameters": [
        {
          "name": "workflow_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow."
        },
        {
          "name": "workflow_email_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow email."
        },
        {
          "name": "delay",
          "schema": "object",
          "description": ""
        },
        {
          "name": "settings",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of an individual Automation workflow email."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/automations/{workflow_id}/emails/{workflow_email_id}/actions/pause",
      "method": "postAutomationsIdEmailsIdActionsPause",
      "httpMethod": "post",
      "tag": "automations",
      "description": "Pause automated email",
      "parameters": [
        {
          "name": "workflow_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow."
        },
        {
          "name": "workflow_email_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow email."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/automations/{workflow_id}/emails/{workflow_email_id}/actions/start",
      "method": "postAutomationsIdEmailsIdActionsStart",
      "httpMethod": "post",
      "tag": "automations",
      "description": "Start automated email",
      "parameters": [
        {
          "name": "workflow_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow."
        },
        {
          "name": "workflow_email_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow email."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/automations/{workflow_id}/emails/{workflow_email_id}/queue",
      "method": "getAutomationsIdEmailsIdQueue",
      "httpMethod": "get",
      "tag": "automations",
      "description": "List automated email subscribers",
      "parameters": [
        {
          "name": "workflow_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow."
        },
        {
          "name": "workflow_email_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow email."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An automation workflow"
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/automations/{workflow_id}/emails/{workflow_email_id}/queue",
      "method": "postAutomationsIdEmailsIdQueue",
      "httpMethod": "post",
      "tag": "automations",
      "description": "Add subscriber to workflow email",
      "parameters": [
        {
          "name": "workflow_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow."
        },
        {
          "name": "workflow_email_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow email."
        },
        {
          "name": "email_address",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about subscribers in an Automation email queue."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/automations/{workflow_id}/emails/{workflow_email_id}/queue/{subscriber_hash}",
      "method": "getAutomationsIdEmailsIdQueueId",
      "httpMethod": "get",
      "tag": "automations",
      "description": "Get automated email subscriber",
      "parameters": [
        {
          "name": "workflow_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow."
        },
        {
          "name": "workflow_email_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow email."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about subscribers in an Automation email queue."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/automations/{workflow_id}/removed-subscribers",
      "method": "getAutomationsIdRemovedSubscribers",
      "httpMethod": "get",
      "tag": "automations",
      "description": "List subscribers removed from workflow",
      "parameters": [
        {
          "name": "workflow_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of the subscribers who were removed from an Automation workflow."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/automations/{workflow_id}/removed-subscribers",
      "method": "postAutomationsIdRemovedSubscribers",
      "httpMethod": "post",
      "tag": "automations",
      "description": "Remove subscriber from workflow",
      "parameters": [
        {
          "name": "workflow_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow."
        },
        {
          "name": "email_address",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of a subscriber removed from an Automation workflow."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/automations/{workflow_id}/removed-subscribers/{subscriber_hash}",
      "method": "getAutomationsIdRemovedSubscribersId",
      "httpMethod": "get",
      "tag": "automations",
      "description": "Get subscriber removed from workflow",
      "parameters": [
        {
          "name": "workflow_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the Automation workflow."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of a subscriber removed from an Automation workflow."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/batch-webhooks",
      "method": "getBatchWebhooks",
      "httpMethod": "get",
      "tag": "batchWebhooks",
      "description": "List batch webhooks",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Manage webhooks for batch requests."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/batch-webhooks",
      "method": "postBatchWebhooks",
      "httpMethod": "post",
      "tag": "batchWebhooks",
      "description": "Add batch webhook",
      "parameters": [
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A webhook configured for batch status updates."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/batch-webhooks/{batch_webhook_id}",
      "method": "deleteBatchWebhookId",
      "httpMethod": "delete",
      "tag": "batchWebhooks",
      "description": "Delete batch webhook",
      "parameters": [
        {
          "name": "batch_webhook_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the batch webhook."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/batch-webhooks/{batch_webhook_id}",
      "method": "getBatchWebhook",
      "httpMethod": "get",
      "tag": "batchWebhooks",
      "description": "Get batch webhook info",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "batch_webhook_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the batch webhook."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A webhook configured for batch status updates."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/batch-webhooks/{batch_webhook_id}",
      "method": "patchBatchWebhooks",
      "httpMethod": "patch",
      "tag": "batchWebhooks",
      "description": "Update batch webhook",
      "parameters": [
        {
          "name": "batch_webhook_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the batch webhook."
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A webhook configured for batch status updates."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/batches",
      "method": "getBatches",
      "httpMethod": "get",
      "tag": "batches",
      "description": "List batch requests",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of batch requests that have been made."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/batches",
      "method": "postBatches",
      "httpMethod": "post",
      "tag": "batches",
      "description": "Start batch operation",
      "parameters": [
        {
          "name": "operations",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The status of a batch request"
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/batches/{batch_id}",
      "method": "deleteBatchesId",
      "httpMethod": "delete",
      "tag": "batches",
      "description": "Delete batch request",
      "parameters": [
        {
          "name": "batch_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the batch operation."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/batches/{batch_id}",
      "method": "getBatchesId",
      "httpMethod": "get",
      "tag": "batches",
      "description": "Get batch operation status",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "batch_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the batch operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The status of a batch request"
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaign-folders",
      "method": "getCampaignFolders",
      "httpMethod": "get",
      "tag": "campaignFolders",
      "description": "List campaign folders",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of campaign folders"
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaign-folders",
      "method": "postCampaignFolders",
      "httpMethod": "post",
      "tag": "campaignFolders",
      "description": "Add campaign folder",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A folder used to organize campaigns."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaign-folders/{folder_id}",
      "method": "deleteCampaignFoldersId",
      "httpMethod": "delete",
      "tag": "campaignFolders",
      "description": "Delete campaign folder",
      "parameters": [
        {
          "name": "folder_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign folder."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaign-folders/{folder_id}",
      "method": "getCampaignFoldersId",
      "httpMethod": "get",
      "tag": "campaignFolders",
      "description": "Get campaign folder",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "folder_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign folder."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A folder used to organize campaigns."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaign-folders/{folder_id}",
      "method": "patchCampaignFoldersId",
      "httpMethod": "patch",
      "tag": "campaignFolders",
      "description": "Update campaign folder",
      "parameters": [
        {
          "name": "folder_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign folder."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A folder used to organize campaigns."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns",
      "method": "getCampaigns",
      "httpMethod": "get",
      "tag": "campaigns",
      "description": "List campaigns",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "The campaign type."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the campaign."
        },
        {
          "name": "before_send_time",
          "schema": "string",
          "required": false,
          "description": "Restrict the response to campaigns sent before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "since_send_time",
          "schema": "string",
          "required": false,
          "description": "Restrict the response to campaigns sent after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "before_create_time",
          "schema": "string",
          "required": false,
          "description": "Restrict the response to campaigns created before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "since_create_time",
          "schema": "string",
          "required": false,
          "description": "Restrict the response to campaigns created after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "list_id",
          "schema": "string",
          "required": false,
          "description": "The unique id for the list."
        },
        {
          "name": "folder_id",
          "schema": "string",
          "required": false,
          "description": "The unique folder id."
        },
        {
          "name": "member_id",
          "schema": "string",
          "required": false,
          "description": "Retrieve campaigns sent to a particular list member. Member ID is The MD5 hash of the lowercase version of the list member’s email address."
        },
        {
          "name": "sort_field",
          "schema": "string",
          "required": false,
          "description": "Returns files sorted by the specified field."
        },
        {
          "name": "sort_dir",
          "schema": "string",
          "required": false,
          "description": "Determines the order direction for sorted results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An array of campaigns."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns",
      "method": "postCampaigns",
      "httpMethod": "post",
      "tag": "campaigns",
      "description": "Add campaign",
      "parameters": [
        {
          "name": "content_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "recipients",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "rss_opts",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "settings",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "social_card",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tracking",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "variate_settings",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of an individual campaign's settings and content."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns/{campaign_id}",
      "method": "deleteCampaignsId",
      "httpMethod": "delete",
      "tag": "campaigns",
      "description": "Delete campaign",
      "parameters": [
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns/{campaign_id}",
      "method": "getCampaignsId",
      "httpMethod": "get",
      "tag": "campaigns",
      "description": "Get campaign info",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of an individual campaign's settings and content."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns/{campaign_id}",
      "method": "patchCampaignsId",
      "httpMethod": "patch",
      "tag": "campaigns",
      "description": "Update campaign settings",
      "parameters": [
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        },
        {
          "name": "recipients",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "rss_opts",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "settings",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "social_card",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tracking",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "variate_settings",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of an individual campaign's settings and content."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns/{campaign_id}/actions/cancel-send",
      "method": "postCampaignsIdActionsCancelSend",
      "httpMethod": "post",
      "tag": "campaigns",
      "description": "Cancel campaign",
      "parameters": [
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns/{campaign_id}/actions/create-resend",
      "method": "postCampaignsIdActionsCreateResend",
      "httpMethod": "post",
      "tag": "campaigns",
      "description": "Resend campaign",
      "parameters": [
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of an individual campaign's settings and content."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns/{campaign_id}/actions/pause",
      "method": "postCampaignsIdActionsPause",
      "httpMethod": "post",
      "tag": "campaigns",
      "description": "Pause rss campaign",
      "parameters": [
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns/{campaign_id}/actions/replicate",
      "method": "postCampaignsIdActionsReplicate",
      "httpMethod": "post",
      "tag": "campaigns",
      "description": "Replicate campaign",
      "parameters": [
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of an individual campaign's settings and content."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns/{campaign_id}/actions/resume",
      "method": "postCampaignsIdActionsResume",
      "httpMethod": "post",
      "tag": "campaigns",
      "description": "Resume rss campaign",
      "parameters": [
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns/{campaign_id}/actions/schedule",
      "method": "postCampaignsIdActionsSchedule",
      "httpMethod": "post",
      "tag": "campaigns",
      "description": "Schedule campaign",
      "parameters": [
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        },
        {
          "name": "batch_delivery",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "schedule_time",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "timewarp",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns/{campaign_id}/actions/send",
      "method": "postCampaignsIdActionsSend",
      "httpMethod": "post",
      "tag": "campaigns",
      "description": "Send campaign",
      "parameters": [
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns/{campaign_id}/actions/test",
      "method": "postCampaignsIdActionsTest",
      "httpMethod": "post",
      "tag": "campaigns",
      "description": "Send test email",
      "parameters": [
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        },
        {
          "name": "send_type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "test_emails",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns/{campaign_id}/actions/unschedule",
      "method": "postCampaignsIdActionsUnschedule",
      "httpMethod": "post",
      "tag": "campaigns",
      "description": "Unschedule campaign",
      "parameters": [
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns/{campaign_id}/content",
      "method": "getCampaignsIdContent",
      "httpMethod": "get",
      "tag": "campaigns",
      "description": "Get campaign content",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The HTML and plain-text content for a campaign."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns/{campaign_id}/content",
      "method": "putCampaignsIdContent",
      "httpMethod": "put",
      "tag": "campaigns",
      "description": "Set campaign content",
      "parameters": [
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        },
        {
          "name": "archive",
          "schema": "object",
          "description": ""
        },
        {
          "name": "html",
          "schema": "string",
          "description": ""
        },
        {
          "name": "plain_text",
          "schema": "string",
          "description": ""
        },
        {
          "name": "template",
          "schema": "object",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "variate_contents",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The HTML and plain-text content for a campaign."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns/{campaign_id}/feedback",
      "method": "getCampaignsIdFeedback",
      "httpMethod": "get",
      "tag": "campaigns",
      "description": "List campaign feedback",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of the comment feedback for a specific campaign."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns/{campaign_id}/feedback",
      "method": "postCampaignsIdFeedback",
      "httpMethod": "post",
      "tag": "campaigns",
      "description": "Add campaign feedback",
      "parameters": [
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        },
        {
          "name": "block_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "is_complete",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "message",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A specific feedback message from a specific campaign."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns/{campaign_id}/feedback/{feedback_id}",
      "method": "deleteCampaignsIdFeedbackId",
      "httpMethod": "delete",
      "tag": "campaigns",
      "description": "Delete campaign feedback message",
      "parameters": [
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        },
        {
          "name": "feedback_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the feedback message."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns/{campaign_id}/feedback/{feedback_id}",
      "method": "getCampaignsIdFeedbackId",
      "httpMethod": "get",
      "tag": "campaigns",
      "description": "Get campaign feedback message",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        },
        {
          "name": "feedback_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the feedback message."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A specific feedback message from a specific campaign."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns/{campaign_id}/feedback/{feedback_id}",
      "method": "patchCampaignsIdFeedbackId",
      "httpMethod": "patch",
      "tag": "campaigns",
      "description": "Update campaign feedback message",
      "parameters": [
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        },
        {
          "name": "feedback_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the feedback message."
        },
        {
          "name": "block_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "is_complete",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "message",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A specific feedback message from a specific campaign."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/campaigns/{campaign_id}/send-checklist",
      "method": "getCampaignsIdSendChecklist",
      "httpMethod": "get",
      "tag": "campaigns",
      "description": "Get campaign send checklist",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The send checklist for the campaign."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/connected-sites",
      "method": "getConnectedSites",
      "httpMethod": "get",
      "tag": "connectedSites",
      "description": "List connected sites",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of connected sites in the account."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/connected-sites",
      "method": "postConnectedSites",
      "httpMethod": "post",
      "tag": "connectedSites",
      "description": "Add connected site",
      "parameters": [
        {
          "name": "domain",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "foreign_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific connected site."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/connected-sites/{connected_site_id}",
      "method": "deleteConnectedSitesId",
      "httpMethod": "delete",
      "tag": "connectedSites",
      "description": "Delete connected site",
      "parameters": [
        {
          "name": "connected_site_id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier for the site."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/connected-sites/{connected_site_id}",
      "method": "getConnectedSitesId",
      "httpMethod": "get",
      "tag": "connectedSites",
      "description": "Get connected site",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "connected_site_id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier for the site."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific connected site."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/connected-sites/{connected_site_id}/actions/verify-script-installation",
      "method": "postConnectedSitesIdActionsVerifyScriptInstallation",
      "httpMethod": "post",
      "tag": "connectedSites",
      "description": "Verify connected site script",
      "parameters": [
        {
          "name": "connected_site_id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier for the site."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/conversations",
      "method": "getConversations",
      "httpMethod": "get",
      "tag": "conversations",
      "description": "List conversations",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "has_unread_messages",
          "schema": "string",
          "required": false,
          "description": "Whether the conversation has any unread messages."
        },
        {
          "name": "list_id",
          "schema": "string",
          "required": false,
          "description": "The unique id for the list."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": false,
          "description": "The unique id for the campaign."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of this account's tracked conversations."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/conversations/{conversation_id}",
      "method": "getConversationsId",
      "httpMethod": "get",
      "tag": "conversations",
      "description": "Get conversation",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "conversation_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the conversation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Details about an individual conversation. Conversation tracking is a feature available to paid accounts that lets you view replies to your campaigns in your Mailchimp account."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/conversations/{conversation_id}/messages",
      "method": "getConversationsIdMessages",
      "httpMethod": "get",
      "tag": "conversations",
      "description": "List messages",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "conversation_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the conversation."
        },
        {
          "name": "is_read",
          "schema": "string",
          "required": false,
          "description": "Whether a conversation message has been marked as read."
        },
        {
          "name": "before_timestamp",
          "schema": "string",
          "required": false,
          "description": "Restrict the response to messages created before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "since_timestamp",
          "schema": "string",
          "required": false,
          "description": "Restrict the response to messages created after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Messages from a specific conversation."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/conversations/{conversation_id}/messages/{message_id}",
      "method": "getConversationsIdMessagesId",
      "httpMethod": "get",
      "tag": "conversations",
      "description": "Get message",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "conversation_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the conversation."
        },
        {
          "name": "message_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the conversation message."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An individual message in a conversation. Conversation tracking is a feature available to paid accounts that lets you view replies to your campaigns in your Mailchimp account."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/customer-journeys/journeys/{journey_id}/steps/{step_id}/actions/trigger",
      "method": "postCustomerJourneysJourneysIdStepsIdActionsTrigger",
      "httpMethod": "post",
      "tag": "customerJourneys",
      "description": "Customer Journeys API trigger for a contact",
      "parameters": [
        {
          "name": "journey_id",
          "schema": "integer",
          "required": true,
          "description": "The id for the Journey."
        },
        {
          "name": "step_id",
          "schema": "integer",
          "required": true,
          "description": "The id for the Step."
        },
        {
          "name": "email_address",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "Empty Response"
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/orders",
      "method": "getEcommerceOrders",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "List account orders",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": false,
          "description": "Restrict results to orders with a specific `campaign_id` value."
        },
        {
          "name": "outreach_id",
          "schema": "string",
          "required": false,
          "description": "Restrict results to orders with a specific `outreach_id` value."
        },
        {
          "name": "customer_id",
          "schema": "string",
          "required": false,
          "description": "Restrict results to orders made by a specific customer."
        },
        {
          "name": "has_outreach",
          "schema": "boolean",
          "required": false,
          "description": "Restrict results to orders that have an outreach attached. For example, an email campaign or Facebook ad."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of orders in an account."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores",
      "method": "getEcommerceStores",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "List stores",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of stores in the account."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores",
      "method": "postEcommerceStores",
      "httpMethod": "post",
      "tag": "ecommerce",
      "description": "Add store",
      "parameters": [
        {
          "name": "address",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "currency_code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "domain",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email_address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "is_syncing",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "money_format",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "platform",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "primary_locale",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "timezone",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An individual store in an account."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}",
      "method": "deleteEcommerceStoresId",
      "httpMethod": "delete",
      "tag": "ecommerce",
      "description": "Delete store",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "Empty Response"
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}",
      "method": "getEcommerceStoresId",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "Get store info",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An individual store in an account."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}",
      "method": "patchEcommerceStoresId",
      "httpMethod": "patch",
      "tag": "ecommerce",
      "description": "Update store",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currency_code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "domain",
          "schema": "string",
          "description": ""
        },
        {
          "name": "email_address",
          "schema": "string",
          "description": ""
        },
        {
          "name": "is_syncing",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "money_format",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "platform",
          "schema": "string",
          "description": ""
        },
        {
          "name": "primary_locale",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An individual store in an account."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/carts",
      "method": "getEcommerceStoresIdCarts",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "List carts",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of a store's carts."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/carts",
      "method": "postEcommerceStoresIdCarts",
      "httpMethod": "post",
      "tag": "ecommerce",
      "description": "Add cart",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "checkout_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currency_code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "customer",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "order_total",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "tax_total",
          "schema": "number",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific cart."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/carts/{cart_id}",
      "method": "deleteEcommerceStoresIdCartsId",
      "httpMethod": "delete",
      "tag": "ecommerce",
      "description": "Delete cart",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "cart_id",
          "schema": "string",
          "required": true,
          "description": "The id for the cart."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/carts/{cart_id}",
      "method": "getEcommerceStoresIdCartsId",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "Get cart info",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "cart_id",
          "schema": "string",
          "required": true,
          "description": "The id for the cart."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific cart."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/carts/{cart_id}",
      "method": "patchEcommerceStoresIdCartsId",
      "httpMethod": "patch",
      "tag": "ecommerce",
      "description": "Update cart",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "cart_id",
          "schema": "string",
          "required": true,
          "description": "The id for the cart."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "checkout_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency_code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "customer",
          "schema": "object",
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "order_total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "tax_total",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific cart."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/carts/{cart_id}/lines",
      "method": "getEcommerceStoresIdCartsIdLines",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "List cart line items",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "cart_id",
          "schema": "string",
          "required": true,
          "description": "The id for the cart."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of a cart's line items."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/carts/{cart_id}/lines",
      "method": "postEcommerceStoresIdCartsIdLines",
      "httpMethod": "post",
      "tag": "ecommerce",
      "description": "Add cart line item",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "cart_id",
          "schema": "string",
          "required": true,
          "description": "The id for the cart."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "price",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "product_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "product_variant_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific cart line item."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/carts/{cart_id}/lines/{line_id}",
      "method": "deleteEcommerceStoresIdCartsLinesId",
      "httpMethod": "delete",
      "tag": "ecommerce",
      "description": "Delete cart line item",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "cart_id",
          "schema": "string",
          "required": true,
          "description": "The id for the cart."
        },
        {
          "name": "line_id",
          "schema": "string",
          "required": true,
          "description": "The id for the line item of a cart."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/carts/{cart_id}/lines/{line_id}",
      "method": "getEcommerceStoresIdCartsIdLinesId",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "Get cart line item",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "cart_id",
          "schema": "string",
          "required": true,
          "description": "The id for the cart."
        },
        {
          "name": "line_id",
          "schema": "string",
          "required": true,
          "description": "The id for the line item of a cart."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific cart line item."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/carts/{cart_id}/lines/{line_id}",
      "method": "patchEcommerceStoresIdCartsIdLinesId",
      "httpMethod": "patch",
      "tag": "ecommerce",
      "description": "Update cart line item",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "cart_id",
          "schema": "string",
          "required": true,
          "description": "The id for the cart."
        },
        {
          "name": "line_id",
          "schema": "string",
          "required": true,
          "description": "The id for the line item of a cart."
        },
        {
          "name": "price",
          "schema": "number",
          "description": ""
        },
        {
          "name": "product_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "product_variant_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific cart line item."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/customers",
      "method": "getEcommerceStoresIdCustomers",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "List customers",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "email_address",
          "schema": "string",
          "required": false,
          "description": "Restrict the response to customers with the email address."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of the store's customers."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/customers",
      "method": "postEcommerceStoresIdCustomers",
      "httpMethod": "post",
      "tag": "ecommerce",
      "description": "Add customer",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "address",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "company",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email_address",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "opt_in_status",
          "schema": "boolean",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific customer."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/customers/{customer_id}",
      "method": "deleteEcommerceStoresIdCustomersId",
      "httpMethod": "delete",
      "tag": "ecommerce",
      "description": "Delete customer",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "customer_id",
          "schema": "string",
          "required": true,
          "description": "The id for the customer of a store."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/customers/{customer_id}",
      "method": "getEcommerceStoresIdCustomersId",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "Get customer info",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "customer_id",
          "schema": "string",
          "required": true,
          "description": "The id for the customer of a store."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific customer."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/customers/{customer_id}",
      "method": "patchEcommerceStoresIdCustomersId",
      "httpMethod": "patch",
      "tag": "ecommerce",
      "description": "Update customer",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "customer_id",
          "schema": "string",
          "required": true,
          "description": "The id for the customer of a store."
        },
        {
          "name": "address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "company",
          "schema": "string",
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "opt_in_status",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific customer."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/customers/{customer_id}",
      "method": "putEcommerceStoresIdCustomersId",
      "httpMethod": "put",
      "tag": "ecommerce",
      "description": "Add or update customer",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "customer_id",
          "schema": "string",
          "required": true,
          "description": "The id for the customer of a store."
        },
        {
          "name": "address",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "company",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email_address",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "opt_in_status",
          "schema": "boolean",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific customer."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/orders",
      "method": "getEcommerceStoresIdOrders",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "List orders",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "customer_id",
          "schema": "string",
          "required": false,
          "description": "Restrict results to orders made by a specific customer."
        },
        {
          "name": "has_outreach",
          "schema": "boolean",
          "required": false,
          "description": "Restrict results to orders that have an outreach attached. For example, an email campaign or Facebook ad."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": false,
          "description": "Restrict results to orders with a specific `campaign_id` value."
        },
        {
          "name": "outreach_id",
          "schema": "string",
          "required": false,
          "description": "Restrict results to orders with a specific `outreach_id` value."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of orders in a store."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/orders",
      "method": "postEcommerceStoresIdOrders",
      "httpMethod": "post",
      "tag": "ecommerce",
      "description": "Add order",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "billing_address",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "cancelled_at_foreign",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currency_code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "customer",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "discount_total",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "financial_status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "fulfillment_status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "landing_site",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "order_total",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "order_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "outreach",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "processed_at_foreign",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "promos",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "shipping_address",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "shipping_total",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "tax_total",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "tracking_carrier",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tracking_code",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tracking_number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tracking_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated_at_foreign",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific order."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/orders/{order_id}",
      "method": "deleteEcommerceStoresIdOrdersId",
      "httpMethod": "delete",
      "tag": "ecommerce",
      "description": "Delete order",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "order_id",
          "schema": "string",
          "required": true,
          "description": "The id for the order in a store."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/orders/{order_id}",
      "method": "getEcommerceStoresIdOrdersId",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "Get order info",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "order_id",
          "schema": "string",
          "required": true,
          "description": "The id for the order in a store."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific order."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/orders/{order_id}",
      "method": "patchEcommerceStoresIdOrdersId",
      "httpMethod": "patch",
      "tag": "ecommerce",
      "description": "Update order",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "order_id",
          "schema": "string",
          "required": true,
          "description": "The id for the order in a store."
        },
        {
          "name": "billing_address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "cancelled_at_foreign",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency_code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "customer",
          "schema": "object",
          "description": ""
        },
        {
          "name": "discount_total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "financial_status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "fulfillment_status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "landing_site",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "order_total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "order_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "outreach",
          "schema": "object",
          "description": ""
        },
        {
          "name": "processed_at_foreign",
          "schema": "string",
          "description": ""
        },
        {
          "name": "promos",
          "schema": "array",
          "description": ""
        },
        {
          "name": "shipping_address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shipping_total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "tax_total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "tracking_carrier",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tracking_code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tracking_number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tracking_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at_foreign",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific order."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/orders/{order_id}/lines",
      "method": "getEcommerceStoresIdOrdersIdLines",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "List order line items",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "order_id",
          "schema": "string",
          "required": true,
          "description": "The id for the order in a store."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of an order's line items."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/orders/{order_id}/lines",
      "method": "postEcommerceStoresIdOrdersIdLines",
      "httpMethod": "post",
      "tag": "ecommerce",
      "description": "Add order line item",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "order_id",
          "schema": "string",
          "required": true,
          "description": "The id for the order in a store."
        },
        {
          "name": "discount",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "price",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "product_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "product_variant_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific order line."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/orders/{order_id}/lines/{line_id}",
      "method": "deleteEcommerceStoresIdOrdersIdLinesId",
      "httpMethod": "delete",
      "tag": "ecommerce",
      "description": "Delete order line item",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "order_id",
          "schema": "string",
          "required": true,
          "description": "The id for the order in a store."
        },
        {
          "name": "line_id",
          "schema": "string",
          "required": true,
          "description": "The id for the line item of an order."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/orders/{order_id}/lines/{line_id}",
      "method": "getEcommerceStoresIdOrdersIdLinesId",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "Get order line item",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "order_id",
          "schema": "string",
          "required": true,
          "description": "The id for the order in a store."
        },
        {
          "name": "line_id",
          "schema": "string",
          "required": true,
          "description": "The id for the line item of an order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific order line."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/orders/{order_id}/lines/{line_id}",
      "method": "patchEcommerceStoresIdOrdersIdLinesId",
      "httpMethod": "patch",
      "tag": "ecommerce",
      "description": "Update order line item",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "order_id",
          "schema": "string",
          "required": true,
          "description": "The id for the order in a store."
        },
        {
          "name": "line_id",
          "schema": "string",
          "required": true,
          "description": "The id for the line item of an order."
        },
        {
          "name": "discount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "price",
          "schema": "number",
          "description": ""
        },
        {
          "name": "product_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "product_variant_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific order line."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/products",
      "method": "getEcommerceStoresIdProducts",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "List product",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of a store's products."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/products",
      "method": "postEcommerceStoresIdProducts",
      "httpMethod": "post",
      "tag": "ecommerce",
      "description": "Add product",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "handle",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "image_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "images",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "published_at_foreign",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "variants",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "vendor",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific product."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/products/{product_id}",
      "method": "deleteEcommerceStoresIdProductsId",
      "httpMethod": "delete",
      "tag": "ecommerce",
      "description": "Delete product",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "product_id",
          "schema": "string",
          "required": true,
          "description": "The id for the product of a store."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/products/{product_id}",
      "method": "getEcommerceStoresIdProductsId",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "Get product info",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "product_id",
          "schema": "string",
          "required": true,
          "description": "The id for the product of a store."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific product."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/products/{product_id}",
      "method": "patchEcommerceStoresIdProductsId",
      "httpMethod": "patch",
      "tag": "ecommerce",
      "description": "Update product",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "product_id",
          "schema": "string",
          "required": true,
          "description": "The id for the product of a store."
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "handle",
          "schema": "string",
          "description": ""
        },
        {
          "name": "image_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "images",
          "schema": "array",
          "description": ""
        },
        {
          "name": "published_at_foreign",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "variants",
          "schema": "array",
          "description": ""
        },
        {
          "name": "vendor",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific product."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/products/{product_id}/images",
      "method": "getEcommerceStoresIdProductsIdImages",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "List product images",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "product_id",
          "schema": "string",
          "required": true,
          "description": "The id for the product of a store."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of a product's images."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/products/{product_id}/images",
      "method": "postEcommerceStoresIdProductsIdImages",
      "httpMethod": "post",
      "tag": "ecommerce",
      "description": "Add product image",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "product_id",
          "schema": "string",
          "required": true,
          "description": "The id for the product of a store."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "variant_ids",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific product image."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/products/{product_id}/images/{image_id}",
      "method": "deleteEcommerceStoresIdProductsIdImagesId",
      "httpMethod": "delete",
      "tag": "ecommerce",
      "description": "Delete product image",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "product_id",
          "schema": "string",
          "required": true,
          "description": "The id for the product of a store."
        },
        {
          "name": "image_id",
          "schema": "string",
          "required": true,
          "description": "The id for the product image."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/products/{product_id}/images/{image_id}",
      "method": "getEcommerceStoresIdProductsIdImagesId",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "Get product image info",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "product_id",
          "schema": "string",
          "required": true,
          "description": "The id for the product of a store."
        },
        {
          "name": "image_id",
          "schema": "string",
          "required": true,
          "description": "The id for the product image."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific product image."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/products/{product_id}/images/{image_id}",
      "method": "patchEcommerceStoresIdProductsIdImagesId",
      "httpMethod": "patch",
      "tag": "ecommerce",
      "description": "Update product image",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "product_id",
          "schema": "string",
          "required": true,
          "description": "The id for the product of a store."
        },
        {
          "name": "image_id",
          "schema": "string",
          "required": true,
          "description": "The id for the product image."
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "variant_ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific product image."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/products/{product_id}/variants",
      "method": "getEcommerceStoresIdProductsIdVariants",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "List product variants",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "product_id",
          "schema": "string",
          "required": true,
          "description": "The id for the product of a store."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of a product's variants."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/products/{product_id}/variants",
      "method": "postEcommerceStoresIdProductsIdVariants",
      "httpMethod": "post",
      "tag": "ecommerce",
      "description": "Add product variant",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "product_id",
          "schema": "string",
          "required": true,
          "description": "The id for the product of a store."
        },
        {
          "name": "backorders",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "image_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "inventory_quantity",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "price",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "sku",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "visibility",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific product variant."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}",
      "method": "deleteEcommerceStoresIdProductsIdVariantsId",
      "httpMethod": "delete",
      "tag": "ecommerce",
      "description": "Delete product variant",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "product_id",
          "schema": "string",
          "required": true,
          "description": "The id for the product of a store."
        },
        {
          "name": "variant_id",
          "schema": "string",
          "required": true,
          "description": "The id for the product variant."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}",
      "method": "getEcommerceStoresIdProductsIdVariantsId",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "Get product variant info",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "product_id",
          "schema": "string",
          "required": true,
          "description": "The id for the product of a store."
        },
        {
          "name": "variant_id",
          "schema": "string",
          "required": true,
          "description": "The id for the product variant."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific product variant."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}",
      "method": "patchEcommerceStoresIdProductsIdVariantsId",
      "httpMethod": "patch",
      "tag": "ecommerce",
      "description": "Update product variant",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "product_id",
          "schema": "string",
          "required": true,
          "description": "The id for the product of a store."
        },
        {
          "name": "variant_id",
          "schema": "string",
          "required": true,
          "description": "The id for the product variant."
        },
        {
          "name": "backorders",
          "schema": "string",
          "description": ""
        },
        {
          "name": "image_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "inventory_quantity",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "price",
          "schema": "number",
          "description": ""
        },
        {
          "name": "sku",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "visibility",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific product variant."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}",
      "method": "putEcommerceStoresIdProductsIdVariantsId",
      "httpMethod": "put",
      "tag": "ecommerce",
      "description": "Add or update product variant",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "product_id",
          "schema": "string",
          "required": true,
          "description": "The id for the product of a store."
        },
        {
          "name": "variant_id",
          "schema": "string",
          "required": true,
          "description": "The id for the product variant."
        },
        {
          "name": "backorders",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "image_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "inventory_quantity",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "price",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "sku",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "visibility",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific product variant."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/promo-rules",
      "method": "getEcommerceStoresIdPromorules",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "List promo rules",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of the store's promo rules."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/promo-rules",
      "method": "postEcommerceStoresIdPromorules",
      "httpMethod": "post",
      "tag": "ecommerce",
      "description": "Add promo rule",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "amount",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "created_at_foreign",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "ends_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "starts_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "target",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "updated_at_foreign",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about an Ecommerce Store's specific Promo Rule"
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}",
      "method": "deleteEcommerceStoresIdPromorulesId",
      "httpMethod": "delete",
      "tag": "ecommerce",
      "description": "Delete promo rule",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "promo_rule_id",
          "schema": "string",
          "required": true,
          "description": "The id for the promo rule of a store."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}",
      "method": "getEcommerceStoresIdPromorulesId",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "Get promo rule",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "promo_rule_id",
          "schema": "string",
          "required": true,
          "description": "The id for the promo rule of a store."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about an Ecommerce Store's specific Promo Rule"
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}",
      "method": "patchEcommerceStoresIdPromorulesId",
      "httpMethod": "patch",
      "tag": "ecommerce",
      "description": "Update promo rule",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "promo_rule_id",
          "schema": "string",
          "required": true,
          "description": "The id for the promo rule of a store."
        },
        {
          "name": "amount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "created_at_foreign",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "ends_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "starts_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "target",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at_foreign",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about an Ecommerce Store's specific Promo Rule"
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes",
      "method": "getEcommerceStoresIdPromocodes",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "List promo codes",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "promo_rule_id",
          "schema": "string",
          "required": true,
          "description": "The id for the promo rule of a store."
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of the store's promo codes."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes",
      "method": "postEcommerceStoresIdPromocodes",
      "httpMethod": "post",
      "tag": "ecommerce",
      "description": "Add promo code",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "promo_rule_id",
          "schema": "string",
          "required": true,
          "description": "The id for the promo rule of a store."
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "created_at_foreign",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "redemption_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "updated_at_foreign",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "usage_count",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about an Ecommerce Store's specific Promo Code"
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes/{promo_code_id}",
      "method": "deleteEcommerceStoresIdPromocodesId",
      "httpMethod": "delete",
      "tag": "ecommerce",
      "description": "Delete promo code",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "promo_rule_id",
          "schema": "string",
          "required": true,
          "description": "The id for the promo rule of a store."
        },
        {
          "name": "promo_code_id",
          "schema": "string",
          "required": true,
          "description": "The id for the promo code of a store."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes/{promo_code_id}",
      "method": "getEcommerceStoresIdPromocodesId",
      "httpMethod": "get",
      "tag": "ecommerce",
      "description": "Get promo code",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "promo_rule_id",
          "schema": "string",
          "required": true,
          "description": "The id for the promo rule of a store."
        },
        {
          "name": "promo_code_id",
          "schema": "string",
          "required": true,
          "description": "The id for the promo code of a store."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about an Ecommerce Store's specific Promo Code"
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes/{promo_code_id}",
      "method": "patchEcommerceStoresIdPromocodesId",
      "httpMethod": "patch",
      "tag": "ecommerce",
      "description": "Update promo code",
      "parameters": [
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The store id."
        },
        {
          "name": "promo_rule_id",
          "schema": "string",
          "required": true,
          "description": "The id for the promo rule of a store."
        },
        {
          "name": "promo_code_id",
          "schema": "string",
          "required": true,
          "description": "The id for the promo code of a store."
        },
        {
          "name": "code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_at_foreign",
          "schema": "string",
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "redemption_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at_foreign",
          "schema": "string",
          "description": ""
        },
        {
          "name": "usage_count",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about an Ecommerce Store's specific Promo Code"
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/facebook-ads",
      "method": "getAllFacebookAds",
      "httpMethod": "get",
      "tag": "facebookAds",
      "description": "List facebook ads",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "sort_field",
          "schema": "string",
          "required": false,
          "description": "Returns files sorted by the specified field."
        },
        {
          "name": "sort_dir",
          "schema": "string",
          "required": false,
          "description": "Determines the order direction for sorted results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Contains an array of facebook ads."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/facebook-ads/{outreach_id}",
      "method": "getFacebookAdsId",
      "httpMethod": "get",
      "tag": "facebookAds",
      "description": "Get facebook ad info",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "outreach_id",
          "schema": "string",
          "required": true,
          "description": "The outreach id."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/file-manager/files",
      "method": "getFileManagerFiles",
      "httpMethod": "get",
      "tag": "fileManager",
      "description": "List stored files",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "The file type for the File Manager file."
        },
        {
          "name": "created_by",
          "schema": "string",
          "required": false,
          "description": "The Mailchimp account user who created the File Manager file."
        },
        {
          "name": "before_created_at",
          "schema": "string",
          "required": false,
          "description": "Restrict the response to files created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "since_created_at",
          "schema": "string",
          "required": false,
          "description": "Restrict the response to files created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "sort_field",
          "schema": "string",
          "required": false,
          "description": "Returns files sorted by the specified field."
        },
        {
          "name": "sort_dir",
          "schema": "string",
          "required": false,
          "description": "Determines the order direction for sorted results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of available images and files stored in the File Manager for the account."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/file-manager/files",
      "method": "postFileManagerFiles",
      "httpMethod": "post",
      "tag": "fileManager",
      "description": "Add file",
      "parameters": [
        {
          "name": "file_data",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "folder_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An individual file listed in the File Manager."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/file-manager/files/{file_id}",
      "method": "deleteFileManagerFilesId",
      "httpMethod": "delete",
      "tag": "fileManager",
      "description": "Delete file",
      "parameters": [
        {
          "name": "file_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the File Manager file."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/file-manager/files/{file_id}",
      "method": "getFileManagerFilesId",
      "httpMethod": "get",
      "tag": "fileManager",
      "description": "Get file",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "file_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the File Manager file."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An individual file listed in the File Manager."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/file-manager/files/{file_id}",
      "method": "patchFileManagerFilesId",
      "httpMethod": "patch",
      "tag": "fileManager",
      "description": "Update file",
      "parameters": [
        {
          "name": "file_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the File Manager file."
        },
        {
          "name": "folder_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An individual file listed in the File Manager."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/file-manager/folders",
      "method": "getFileManagerFolders",
      "httpMethod": "get",
      "tag": "fileManager",
      "description": "List folders",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "created_by",
          "schema": "string",
          "required": false,
          "description": "The Mailchimp account user who created the File Manager file."
        },
        {
          "name": "before_created_at",
          "schema": "string",
          "required": false,
          "description": "Restrict the response to files created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "since_created_at",
          "schema": "string",
          "required": false,
          "description": "Restrict the response to files created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of all folders in the File Manager."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/file-manager/folders",
      "method": "postFileManagerFolders",
      "httpMethod": "post",
      "tag": "fileManager",
      "description": "Add folder",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An individual folder listed in the File Manager."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/file-manager/folders/{folder_id}",
      "method": "deleteFileManagerFoldersId",
      "httpMethod": "delete",
      "tag": "fileManager",
      "description": "Delete folder",
      "parameters": [
        {
          "name": "folder_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the File Manager folder."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/file-manager/folders/{folder_id}",
      "method": "getFileManagerFoldersId",
      "httpMethod": "get",
      "tag": "fileManager",
      "description": "Get folder",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "folder_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the File Manager folder."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An individual folder listed in the File Manager."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/file-manager/folders/{folder_id}",
      "method": "patchFileManagerFoldersId",
      "httpMethod": "patch",
      "tag": "fileManager",
      "description": "Update folder",
      "parameters": [
        {
          "name": "folder_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the File Manager folder."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An individual folder listed in the File Manager."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/file-manager/folders/{folder_id}/files",
      "method": "getFileManagerFoldersFiles",
      "httpMethod": "get",
      "tag": "fileManager",
      "description": "List stored files",
      "parameters": [
        {
          "name": "folder_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the File Manager folder."
        },
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "The file type for the File Manager file."
        },
        {
          "name": "created_by",
          "schema": "string",
          "required": false,
          "description": "The Mailchimp account user who created the File Manager file."
        },
        {
          "name": "before_created_at",
          "schema": "string",
          "required": false,
          "description": "Restrict the response to files created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "since_created_at",
          "schema": "string",
          "required": false,
          "description": "Restrict the response to files created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "sort_field",
          "schema": "string",
          "required": false,
          "description": "Returns files sorted by the specified field."
        },
        {
          "name": "sort_dir",
          "schema": "string",
          "required": false,
          "description": "Determines the order direction for sorted results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of available images and files stored in the File Manager for the account."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/landing-pages",
      "method": "getAllLandingPages",
      "httpMethod": "get",
      "tag": "landingPages",
      "description": "List landing pages",
      "parameters": [
        {
          "name": "sort_dir",
          "schema": "string",
          "required": false,
          "description": "Determines the order direction for sorted results."
        },
        {
          "name": "sort_field",
          "schema": "string",
          "required": false,
          "description": "Returns files sorted by the specified field."
        },
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of landing pages."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/landing-pages",
      "method": "postAllLandingPages",
      "httpMethod": "post",
      "tag": "landingPages",
      "description": "Add landing page",
      "parameters": [
        {
          "name": "use_default_list",
          "schema": "boolean",
          "required": false,
          "description": "Will create the Landing Page using the account's Default List instead of requiring a list_id."
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "list_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "store_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "template_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tracking",
          "schema": "object",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of an individual landing page's settings and content."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/landing-pages/{page_id}",
      "method": "deleteLandingPageId",
      "httpMethod": "delete",
      "tag": "landingPages",
      "description": "Delete landing page",
      "parameters": [
        {
          "name": "page_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the page."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/landing-pages/{page_id}",
      "method": "getLandingPageId",
      "httpMethod": "get",
      "tag": "landingPages",
      "description": "Get landing page info",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "page_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of an individual landing page's settings and content."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/landing-pages/{page_id}",
      "method": "patchLandingPageId",
      "httpMethod": "patch",
      "tag": "landingPages",
      "description": "Update landing page",
      "parameters": [
        {
          "name": "page_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the page."
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "list_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "store_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tracking",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of an individual landing page's settings and content."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/landing-pages/{page_id}/actions/publish",
      "method": "postLandingPageIdActionsPublish",
      "httpMethod": "post",
      "tag": "landingPages",
      "description": "Publish landing page",
      "parameters": [
        {
          "name": "page_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the page."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/landing-pages/{page_id}/actions/unpublish",
      "method": "postLandingPageIdActionsUnpublish",
      "httpMethod": "post",
      "tag": "landingPages",
      "description": "Unpublish landing page",
      "parameters": [
        {
          "name": "page_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the page."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/landing-pages/{page_id}/content",
      "method": "getLandingPageIdContent",
      "httpMethod": "get",
      "tag": "landingPages",
      "description": "Get landing page content",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "page_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The HTML content for a landing page."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists",
      "method": "getLists",
      "httpMethod": "get",
      "tag": "lists",
      "description": "Get lists info",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "before_date_created",
          "schema": "string",
          "required": false,
          "description": "Restrict response to lists created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "since_date_created",
          "schema": "string",
          "required": false,
          "description": "Restrict results to lists created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "before_campaign_last_sent",
          "schema": "string",
          "required": false,
          "description": "Restrict results to lists created before the last campaign send date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "since_campaign_last_sent",
          "schema": "string",
          "required": false,
          "description": "Restrict results to lists created after the last campaign send date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": "Restrict results to lists that include a specific subscriber's email address."
        },
        {
          "name": "sort_field",
          "schema": "string",
          "required": false,
          "description": "Returns files sorted by the specified field."
        },
        {
          "name": "sort_dir",
          "schema": "string",
          "required": false,
          "description": "Determines the order direction for sorted results."
        },
        {
          "name": "has_ecommerce_store",
          "schema": "boolean",
          "required": false,
          "description": "Restrict results to lists that contain an active, connected, undeleted ecommerce store."
        },
        {
          "name": "include_total_contacts",
          "schema": "boolean",
          "required": false,
          "description": "Return the total_contacts field in the stats response, which contains an approximate count of all contacts in any state."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of subscriber lists for this account. Lists contain subscribers who have opted-in to receive correspondence from you or your organization."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists",
      "method": "postLists",
      "httpMethod": "post",
      "tag": "lists",
      "description": "Add list",
      "parameters": [
        {
          "name": "campaign_defaults",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "double_optin",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "email_type_option",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "marketing_permissions",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "notify_on_subscribe",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notify_on_unsubscribe",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "permission_reminder",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "use_archive_bar",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific list."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}",
      "method": "deleteListsId",
      "httpMethod": "delete",
      "tag": "lists",
      "description": "Delete list",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}",
      "method": "getListsId",
      "httpMethod": "get",
      "tag": "lists",
      "description": "Get list info",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "include_total_contacts",
          "schema": "boolean",
          "required": false,
          "description": "Return the total_contacts field in the stats response, which contains an approximate count of all contacts in any state."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific list."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}",
      "method": "patchListsId",
      "httpMethod": "patch",
      "tag": "lists",
      "description": "Update lists",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "campaign_defaults",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "double_optin",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "email_type_option",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "marketing_permissions",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "notify_on_subscribe",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notify_on_unsubscribe",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "permission_reminder",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "use_archive_bar",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific list."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}",
      "method": "postListsId",
      "httpMethod": "post",
      "tag": "lists",
      "description": "Batch subscribe or unsubscribe",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "skip_merge_validation",
          "schema": "boolean",
          "required": false,
          "description": "If skip_merge_validation is true, member data will be accepted without merge field values, even if the merge field is usually required. This defaults to false."
        },
        {
          "name": "skip_duplicate_check",
          "schema": "boolean",
          "required": false,
          "description": "If skip_duplicate_check is true, we will ignore duplicates sent in the request when using the batch sub/unsub on the lists endpoint. The status of the first appearance in the request will be saved. This defaults to false."
        },
        {
          "name": "members",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "sync_tags",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "update_existing",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Batch update list members."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/abuse-reports",
      "method": "getListsIdAbuseReports",
      "httpMethod": "get",
      "tag": "lists",
      "description": "List abuse reports",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of abuse complaints for a specific list. An abuse complaint occurs when your recipient clicks to 'report spam' in their email program."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/abuse-reports/{report_id}",
      "method": "getListsIdAbuseReportsId",
      "httpMethod": "get",
      "tag": "lists",
      "description": "Get abuse report",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "report_id",
          "schema": "string",
          "required": true,
          "description": "The id for the abuse report."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Details of abuse complaints for a specific list. An abuse complaint occurs when your recipient clicks to 'report spam' in their email program."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/activity",
      "method": "getListsIdActivity",
      "httpMethod": "get",
      "tag": "lists",
      "description": "List recent activity",
      "parameters": [
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Up to the previous 180 days of daily detailed aggregated activity stats for a specific list. Does not include AutoResponder or Automation activity."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/clients",
      "method": "getListsIdClients",
      "httpMethod": "get",
      "tag": "lists",
      "description": "List top email clients",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The top email clients based on user-agent strings."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/growth-history",
      "method": "getListsIdGrowthHistory",
      "httpMethod": "get",
      "tag": "lists",
      "description": "List growth history data",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "sort_field",
          "schema": "string",
          "required": false,
          "description": "Returns files sorted by the specified field."
        },
        {
          "name": "sort_dir",
          "schema": "string",
          "required": false,
          "description": "Determines the order direction for sorted results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A month-by-month summary of a specific list's growth activity."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/growth-history/{month}",
      "method": "getListsIdGrowthHistoryId",
      "httpMethod": "get",
      "tag": "lists",
      "description": "Get growth history by month",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "month",
          "schema": "string",
          "required": true,
          "description": "A specific month of list growth history."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of a specific list's growth activity for a specific month and year."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/interest-categories",
      "method": "getListsIdInterestCategories",
      "httpMethod": "get",
      "tag": "lists",
      "description": "List interest categories",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "Restrict results a type of interest group"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about this list's interest categories."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/interest-categories",
      "method": "postListsIdInterestCategories",
      "httpMethod": "post",
      "tag": "lists",
      "description": "Add interest category",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "display_order",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Interest categories organize interests, which are used to group subscribers based on their preferences. These correspond to Group Titles the application."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/interest-categories/{interest_category_id}",
      "method": "deleteListsIdInterestCategoriesId",
      "httpMethod": "delete",
      "tag": "lists",
      "description": "Delete interest category",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "interest_category_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the interest category."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/interest-categories/{interest_category_id}",
      "method": "getListsIdInterestCategoriesId",
      "httpMethod": "get",
      "tag": "lists",
      "description": "Get interest category info",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "interest_category_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the interest category."
        },
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Interest categories organize interests, which are used to group subscribers based on their preferences. These correspond to Group Titles the application."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/interest-categories/{interest_category_id}",
      "method": "patchListsIdInterestCategoriesId",
      "httpMethod": "patch",
      "tag": "lists",
      "description": "Update interest category",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "interest_category_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the interest category."
        },
        {
          "name": "display_order",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Interest categories organize interests, which are used to group subscribers based on their preferences. These correspond to Group Titles the application."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/interest-categories/{interest_category_id}/interests",
      "method": "getListsIdInterestCategoriesIdInterests",
      "httpMethod": "get",
      "tag": "lists",
      "description": "List interests in category",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "interest_category_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the interest category."
        },
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of this category's interests"
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/interest-categories/{interest_category_id}/interests",
      "method": "postListsIdInterestCategoriesIdInterests",
      "httpMethod": "post",
      "tag": "lists",
      "description": "Add interest in category",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "interest_category_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the interest category."
        },
        {
          "name": "display_order",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Assign subscribers to interests to group them together. Interests are referred to as 'group names' in the Mailchimp application."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/interest-categories/{interest_category_id}/interests/{interest_id}",
      "method": "deleteListsIdInterestCategoriesIdInterestsId",
      "httpMethod": "delete",
      "tag": "lists",
      "description": "Delete interest in category",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "interest_category_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the interest category."
        },
        {
          "name": "interest_id",
          "schema": "string",
          "required": true,
          "description": "The specific interest or 'group name'."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/interest-categories/{interest_category_id}/interests/{interest_id}",
      "method": "getListsIdInterestCategoriesIdInterestsId",
      "httpMethod": "get",
      "tag": "lists",
      "description": "Get interest in category",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "interest_category_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the interest category."
        },
        {
          "name": "interest_id",
          "schema": "string",
          "required": true,
          "description": "The specific interest or 'group name'."
        },
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Assign subscribers to interests to group them together. Interests are referred to as 'group names' in the Mailchimp application."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/interest-categories/{interest_category_id}/interests/{interest_id}",
      "method": "patchListsIdInterestCategoriesIdInterestsId",
      "httpMethod": "patch",
      "tag": "lists",
      "description": "Update interest in category",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "interest_category_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the interest category."
        },
        {
          "name": "interest_id",
          "schema": "string",
          "required": true,
          "description": "The specific interest or 'group name'."
        },
        {
          "name": "display_order",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Assign subscribers to interests to group them together. Interests are referred to as 'group names' in the Mailchimp application."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/locations",
      "method": "getListsIdLocations",
      "httpMethod": "get",
      "tag": "lists",
      "description": "List locations",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of List's locations."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/members",
      "method": "getListsIdMembers",
      "httpMethod": "get",
      "tag": "lists",
      "description": "List members info",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "email_type",
          "schema": "string",
          "required": false,
          "description": "The email type."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The subscriber's status."
        },
        {
          "name": "since_timestamp_opt",
          "schema": "string",
          "required": false,
          "description": "Restrict results to subscribers who opted-in after the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "before_timestamp_opt",
          "schema": "string",
          "required": false,
          "description": "Restrict results to subscribers who opted-in before the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "since_last_changed",
          "schema": "string",
          "required": false,
          "description": "Restrict results to subscribers whose information changed after the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "before_last_changed",
          "schema": "string",
          "required": false,
          "description": "Restrict results to subscribers whose information changed before the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "unique_email_id",
          "schema": "string",
          "required": false,
          "description": "A unique identifier for the email address across all Mailchimp lists."
        },
        {
          "name": "vip_only",
          "schema": "boolean",
          "required": false,
          "description": "A filter to return only the list's VIP members. Passing `true` will restrict results to VIP list members, passing `false` will return all list members."
        },
        {
          "name": "interest_category_id",
          "schema": "string",
          "required": false,
          "description": "The unique id for the interest category."
        },
        {
          "name": "interest_ids",
          "schema": "string",
          "required": false,
          "description": "Used to filter list members by interests. Must be accompanied by interest_category_id and interest_match. The value must be a comma separated list of interest ids present for any supplied interest categories."
        },
        {
          "name": "interest_match",
          "schema": "string",
          "required": false,
          "description": "Used to filter list members by interests. Must be accompanied by interest_category_id and interest_ids. \"any\" will match a member with any of the interest supplied, \"all\" will only match members with every interest supplied, and \"none\" will match members without any of the interest supplied."
        },
        {
          "name": "sort_field",
          "schema": "string",
          "required": false,
          "description": "Returns files sorted by the specified field."
        },
        {
          "name": "sort_dir",
          "schema": "string",
          "required": false,
          "description": "Determines the order direction for sorted results."
        },
        {
          "name": "since_last_campaign",
          "schema": "boolean",
          "required": false,
          "description": "Filter subscribers by those subscribed/unsubscribed/pending/cleaned since last email campaign send. Member status is required to use this filter."
        },
        {
          "name": "unsubscribed_since",
          "schema": "string",
          "required": false,
          "description": "Filter subscribers by those unsubscribed since a specific date. Using any status other than unsubscribed with this filter will result in an error."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Manage members of a specific Mailchimp list, including currently subscribed, unsubscribed, and bounced members."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/members",
      "method": "postListsIdMembers",
      "httpMethod": "post",
      "tag": "lists",
      "description": "Add member to list",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "skip_merge_validation",
          "schema": "boolean",
          "required": false,
          "description": "If skip_merge_validation is true, member data will be accepted without merge field values, even if the merge field is usually required. This defaults to false."
        },
        {
          "name": "email_address",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "email_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "interests",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "ip_opt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ip_signup",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "marketing_permissions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "merge_fields",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "timestamp_opt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "timestamp_signup",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "vip",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/members/{subscriber_hash}",
      "method": "deleteListsIdMembersId",
      "httpMethod": "delete",
      "tag": "lists",
      "description": "Archive list member",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/members/{subscriber_hash}",
      "method": "getListsIdMembersId",
      "httpMethod": "get",
      "tag": "lists",
      "description": "Get member info",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/members/{subscriber_hash}",
      "method": "patchListsIdMembersId",
      "httpMethod": "patch",
      "tag": "lists",
      "description": "Update list member",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
        },
        {
          "name": "skip_merge_validation",
          "schema": "boolean",
          "required": false,
          "description": "If skip_merge_validation is true, member data will be accepted without merge field values, even if the merge field is usually required. This defaults to false."
        },
        {
          "name": "email_address",
          "schema": "string",
          "description": ""
        },
        {
          "name": "email_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "interests",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ip_opt",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ip_signup",
          "schema": "string",
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "description": ""
        },
        {
          "name": "marketing_permissions",
          "schema": "array",
          "description": ""
        },
        {
          "name": "merge_fields",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timestamp_opt",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timestamp_signup",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vip",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/members/{subscriber_hash}",
      "method": "putListsIdMembersId",
      "httpMethod": "put",
      "tag": "lists",
      "description": "Add or update list member",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
        },
        {
          "name": "skip_merge_validation",
          "schema": "boolean",
          "required": false,
          "description": "If skip_merge_validation is true, member data will be accepted without merge field values, even if the merge field is usually required. This defaults to false."
        },
        {
          "name": "email_address",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "email_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "interests",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "ip_opt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ip_signup",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "marketing_permissions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "merge_fields",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status_if_new",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "timestamp_opt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "timestamp_signup",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "vip",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/members/{subscriber_hash}/actions/delete-permanent",
      "method": "postListsIdMembersHashActionsDeletePermanent",
      "httpMethod": "post",
      "tag": "lists",
      "description": "Delete list member",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/members/{subscriber_hash}/activity",
      "method": "getListsIdMembersIdActivity",
      "httpMethod": "get",
      "tag": "lists",
      "description": "View recent activity 50",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
        },
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "action",
          "schema": "array",
          "required": false,
          "description": "A comma seperated list of actions to return."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The last 50 member events for a list."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/members/{subscriber_hash}/activity-feed",
      "method": "getListsIdMembersIdActivityFeed",
      "httpMethod": "get",
      "tag": "lists",
      "description": "View recent activity",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address."
        },
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "activity_filters",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of activity filters that correspond to a set of activity types, e.g \"?activity_filters=open,bounce,click\"."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The member activity events for a given member."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/members/{subscriber_hash}/events",
      "method": "getListsIdMembersIdEvents",
      "httpMethod": "get",
      "tag": "lists",
      "description": "List member events",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of events for a given contact"
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/members/{subscriber_hash}/events",
      "method": "postListMemberEvents",
      "httpMethod": "post",
      "tag": "lists",
      "description": "Add event",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
        },
        {
          "name": "is_syncing",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "occurred_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "properties",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/members/{subscriber_hash}/goals",
      "method": "getListsIdMembersIdGoals",
      "httpMethod": "get",
      "tag": "lists",
      "description": "List member goal events",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
        },
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The last 50 Goal events for a member on a specific list."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/members/{subscriber_hash}/notes",
      "method": "getListsIdMembersIdNotes",
      "httpMethod": "get",
      "tag": "lists",
      "description": "List recent member notes",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address."
        },
        {
          "name": "sort_field",
          "schema": "string",
          "required": false,
          "description": "Returns notes sorted by the specified field."
        },
        {
          "name": "sort_dir",
          "schema": "string",
          "required": false,
          "description": "Determines the order direction for sorted results."
        },
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The last 10 notes for a specific list member, based on date created."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/members/{subscriber_hash}/notes",
      "method": "postListsIdMembersIdNotes",
      "httpMethod": "post",
      "tag": "lists",
      "description": "Add member note",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address."
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A specific note for a specific member."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/members/{subscriber_hash}/notes/{note_id}",
      "method": "deleteListsIdMembersIdNotesId",
      "httpMethod": "delete",
      "tag": "lists",
      "description": "Delete note",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
        },
        {
          "name": "note_id",
          "schema": "string",
          "required": true,
          "description": "The id for the note."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/members/{subscriber_hash}/notes/{note_id}",
      "method": "getListsIdMembersIdNotesId",
      "httpMethod": "get",
      "tag": "lists",
      "description": "Get member note",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
        },
        {
          "name": "note_id",
          "schema": "string",
          "required": true,
          "description": "The id for the note."
        },
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A specific note for a specific member."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/members/{subscriber_hash}/notes/{note_id}",
      "method": "patchListsIdMembersIdNotesId",
      "httpMethod": "patch",
      "tag": "lists",
      "description": "Update note",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
        },
        {
          "name": "note_id",
          "schema": "string",
          "required": true,
          "description": "The id for the note."
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A specific note for a specific member."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/members/{subscriber_hash}/tags",
      "method": "getListMemberTags",
      "httpMethod": "get",
      "tag": "lists",
      "description": "List member tags",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
        },
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of tags assigned to a list member."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/members/{subscriber_hash}/tags",
      "method": "postListMemberTags",
      "httpMethod": "post",
      "tag": "lists",
      "description": "Add or remove member tags",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address."
        },
        {
          "name": "is_syncing",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/merge-fields",
      "method": "getListsIdMergeFields",
      "httpMethod": "get",
      "tag": "lists",
      "description": "List merge fields",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "The merge field type."
        },
        {
          "name": "required",
          "schema": "boolean",
          "required": false,
          "description": "Whether it's a required merge field."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The [merge fields](https://mailchimp.com/developer/marketing/docs/merge-fields/) for an audience."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/merge-fields",
      "method": "postListsIdMergeFields",
      "httpMethod": "post",
      "tag": "lists",
      "description": "Add merge field",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "default_value",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "display_order",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "help_text",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "options",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "public",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "required",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "tag",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A [merge field](https://mailchimp.com/developer/marketing/docs/merge-fields/) for an audience."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/merge-fields/{merge_id}",
      "method": "deleteListsIdMergeFieldsId",
      "httpMethod": "delete",
      "tag": "lists",
      "description": "Delete merge field",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "merge_id",
          "schema": "string",
          "required": true,
          "description": "The id for the merge field."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/merge-fields/{merge_id}",
      "method": "getListsIdMergeFieldsId",
      "httpMethod": "get",
      "tag": "lists",
      "description": "Get merge field",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "merge_id",
          "schema": "string",
          "required": true,
          "description": "The id for the merge field."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A [merge field](https://mailchimp.com/developer/marketing/docs/merge-fields/) for an audience."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/merge-fields/{merge_id}",
      "method": "patchListsIdMergeFieldsId",
      "httpMethod": "patch",
      "tag": "lists",
      "description": "Update merge field",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "merge_id",
          "schema": "string",
          "required": true,
          "description": "The id for the merge field."
        },
        {
          "name": "default_value",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "display_order",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "help_text",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "options",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "public",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "required",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "tag",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A [merge field](https://mailchimp.com/developer/marketing/docs/merge-fields/) for an audience."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/segments",
      "method": "previewASegment",
      "httpMethod": "get",
      "tag": "lists",
      "description": "List segments",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "Limit results based on segment type."
        },
        {
          "name": "since_created_at",
          "schema": "string",
          "required": false,
          "description": "Restrict results to segments created after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "before_created_at",
          "schema": "string",
          "required": false,
          "description": "Restrict results to segments created before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "include_cleaned",
          "schema": "boolean",
          "required": false,
          "description": "Include cleaned members in response"
        },
        {
          "name": "include_transactional",
          "schema": "boolean",
          "required": false,
          "description": "Include transactional members in response"
        },
        {
          "name": "include_unsubscribed",
          "schema": "boolean",
          "required": false,
          "description": "Include unsubscribed members in response"
        },
        {
          "name": "since_updated_at",
          "schema": "string",
          "required": false,
          "description": "Restrict results to segments update after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "before_updated_at",
          "schema": "string",
          "required": false,
          "description": "Restrict results to segments update before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of available segments."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/segments",
      "method": "postListsIdSegments",
      "httpMethod": "post",
      "tag": "lists",
      "description": "Add segment",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "options",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "static_segment",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific segment."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/segments/{segment_id}",
      "method": "deleteListsIdSegmentsId",
      "httpMethod": "delete",
      "tag": "lists",
      "description": "Delete segment",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "segment_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the segment."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/segments/{segment_id}",
      "method": "getListsIdSegmentsId",
      "httpMethod": "get",
      "tag": "lists",
      "description": "Get segment info",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "segment_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the segment."
        },
        {
          "name": "include_cleaned",
          "schema": "boolean",
          "required": false,
          "description": "Include cleaned members in response"
        },
        {
          "name": "include_transactional",
          "schema": "boolean",
          "required": false,
          "description": "Include transactional members in response"
        },
        {
          "name": "include_unsubscribed",
          "schema": "boolean",
          "required": false,
          "description": "Include unsubscribed members in response"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific segment."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/segments/{segment_id}",
      "method": "patchListsIdSegmentsId",
      "httpMethod": "patch",
      "tag": "lists",
      "description": "Update segment",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "segment_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the segment."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "options",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "static_segment",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific segment."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/segments/{segment_id}",
      "method": "postListsIdSegmentsId",
      "httpMethod": "post",
      "tag": "lists",
      "description": "Batch add or remove members",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "segment_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the segment."
        },
        {
          "name": "members_to_add",
          "schema": "array",
          "description": ""
        },
        {
          "name": "members_to_remove",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Batch add/remove List members to/from static segment"
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/segments/{segment_id}/members",
      "method": "getListsIdSegmentsIdMembers",
      "httpMethod": "get",
      "tag": "lists",
      "description": "List members in segment",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "segment_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the segment."
        },
        {
          "name": "include_cleaned",
          "schema": "boolean",
          "required": false,
          "description": "Include cleaned members in response"
        },
        {
          "name": "include_transactional",
          "schema": "boolean",
          "required": false,
          "description": "Include transactional members in response"
        },
        {
          "name": "include_unsubscribed",
          "schema": "boolean",
          "required": false,
          "description": "Include unsubscribed members in response"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "View members in a specific list segment."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/segments/{segment_id}/members",
      "method": "postListsIdSegmentsIdMembers",
      "httpMethod": "post",
      "tag": "lists",
      "description": "Add member to segment",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "segment_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the segment."
        },
        {
          "name": "email_address",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/segments/{segment_id}/members/{subscriber_hash}",
      "method": "deleteListsIdSegmentsIdMembersId",
      "httpMethod": "delete",
      "tag": "lists",
      "description": "Remove list member from segment",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "segment_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the segment."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/signup-forms",
      "method": "getListsIdSignupForms",
      "httpMethod": "get",
      "tag": "lists",
      "description": "List signup forms",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Signup Forms."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/signup-forms",
      "method": "postListsIdSignupForms",
      "httpMethod": "post",
      "tag": "lists",
      "description": "Customize signup form",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "contents",
          "schema": "array",
          "description": ""
        },
        {
          "name": "header",
          "schema": "object",
          "description": ""
        },
        {
          "name": "styles",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List signup form."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/surveys",
      "method": "getListsIdSurveys",
      "httpMethod": "get",
      "tag": "lists",
      "description": "Get information about all surveys for a list",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/surveys/{survey_id}",
      "method": "getListsIdSurveysId",
      "httpMethod": "get",
      "tag": "lists",
      "description": "Get survey",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "survey_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the survey."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/surveys/{survey_id}/actions/create-email",
      "method": "postListsIdSurveysIdActionsCreateEmail",
      "httpMethod": "post",
      "tag": "Surveys",
      "description": "Create a Survey Campaign",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "survey_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the survey."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of an individual campaign's settings and content."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/surveys/{survey_id}/actions/publish",
      "method": "postListsIdSurveysIdActionsPublish",
      "httpMethod": "post",
      "tag": "Surveys",
      "description": "Publish a Survey",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "survey_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the survey."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/surveys/{survey_id}/actions/unpublish",
      "method": "postListsIdSurveysIdActionsUnpublish",
      "httpMethod": "post",
      "tag": "Surveys",
      "description": "Unpublish a Survey",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "survey_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the survey."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/tag-search",
      "method": "searchTagsByName",
      "httpMethod": "get",
      "tag": "lists",
      "description": "Search for tags on a list by name.",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "The search query used to filter tags.  The search query will be compared to each tag as a prefix, so all tags that have a name starting with this field will be returned."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of tags matching the input query."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/webhooks",
      "method": "getListsIdWebhooks",
      "httpMethod": "get",
      "tag": "lists",
      "description": "List webhooks",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Manage webhooks for a specific list."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/webhooks",
      "method": "postListsIdWebhooks",
      "httpMethod": "post",
      "tag": "lists",
      "description": "Add webhook",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "events",
          "schema": "object",
          "description": ""
        },
        {
          "name": "sources",
          "schema": "object",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Webhook configured for the given list."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/webhooks/{webhook_id}",
      "method": "deleteListsIdWebhooksId",
      "httpMethod": "delete",
      "tag": "lists",
      "description": "Delete webhook",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "webhook_id",
          "schema": "string",
          "required": true,
          "description": "The webhook's id."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/webhooks/{webhook_id}",
      "method": "getListsIdWebhooksId",
      "httpMethod": "get",
      "tag": "lists",
      "description": "Get webhook info",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "webhook_id",
          "schema": "string",
          "required": true,
          "description": "The webhook's id."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Webhook configured for the given list."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/lists/{list_id}/webhooks/{webhook_id}",
      "method": "patchListsIdWebhooksId",
      "httpMethod": "patch",
      "tag": "lists",
      "description": "Update webhook",
      "parameters": [
        {
          "name": "list_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the list."
        },
        {
          "name": "webhook_id",
          "schema": "string",
          "required": true,
          "description": "The webhook's id."
        },
        {
          "name": "events",
          "schema": "object",
          "description": ""
        },
        {
          "name": "sources",
          "schema": "object",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Webhook configured for the given list."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/ping",
      "method": "getPing",
      "httpMethod": "get",
      "tag": "ping",
      "description": "Ping",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "API health status."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reporting/facebook-ads",
      "method": "getReportingFacebookAds",
      "httpMethod": "get",
      "tag": "reporting",
      "description": "List facebook ads reports",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "sort_field",
          "schema": "string",
          "required": false,
          "description": "Returns files sorted by the specified field."
        },
        {
          "name": "sort_dir",
          "schema": "string",
          "required": false,
          "description": "Determines the order direction for sorted results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of Facebook ads."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reporting/facebook-ads/{outreach_id}",
      "method": "getReportingFacebookAdsId",
      "httpMethod": "get",
      "tag": "reporting",
      "description": "Get facebook ad report",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "outreach_id",
          "schema": "string",
          "required": true,
          "description": "The outreach id."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reporting/facebook-ads/{outreach_id}/ecommerce-product-activity",
      "method": "getReportingFacebookAdsIdEcommerceProductActivity",
      "httpMethod": "get",
      "tag": "reporting",
      "description": "List facebook ecommerce report",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "outreach_id",
          "schema": "string",
          "required": true,
          "description": "The outreach id."
        },
        {
          "name": "sort_field",
          "schema": "string",
          "required": false,
          "description": "Returns files sorted by the specified field."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of ecommerce products."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reporting/landing-pages",
      "method": "getReportingLandingPages",
      "httpMethod": "get",
      "tag": "reporting",
      "description": "List landing pages reports",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of landing pages."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reporting/landing-pages/{outreach_id}",
      "method": "getReportingLandingPagesId",
      "httpMethod": "get",
      "tag": "reporting",
      "description": "Get landing page report",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "outreach_id",
          "schema": "string",
          "required": true,
          "description": "The outreach id."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of an individual landing page's settings and content."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reporting/surveys",
      "method": "getReportingSurveys",
      "httpMethod": "get",
      "tag": "reporting",
      "description": "List survey reports",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reporting/surveys/{outreach_id}",
      "method": "getReportingSurveysId",
      "httpMethod": "get",
      "tag": "reporting",
      "description": "Get survey report",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "outreach_id",
          "schema": "string",
          "required": true,
          "description": "The outreach id."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The report for a survey."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reporting/surveys/{outreach_id}/questions",
      "method": "getReportingSurveysIdQuestions",
      "httpMethod": "get",
      "tag": "reporting",
      "description": "List survey question reports",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "outreach_id",
          "schema": "string",
          "required": true,
          "description": "The outreach id."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reporting/surveys/{outreach_id}/questions/{question_id}",
      "method": "getReportingSurveysIdQuestionsId",
      "httpMethod": "get",
      "tag": "reporting",
      "description": "Get survey question report",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "outreach_id",
          "schema": "string",
          "required": true,
          "description": "The outreach id."
        },
        {
          "name": "question_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the survey question."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The details of a survey question's report."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reporting/surveys/{outreach_id}/questions/{question_id}/answers",
      "method": "getReportingSurveysIdQuestionsIdAnswers",
      "httpMethod": "get",
      "tag": "reporting",
      "description": "List answers for question",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "outreach_id",
          "schema": "string",
          "required": true,
          "description": "The outreach id."
        },
        {
          "name": "question_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the survey question."
        },
        {
          "name": "respondent_familiarity_is",
          "schema": "string",
          "required": false,
          "description": "Filter survey responses by familiarity of the respondents."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reporting/surveys/{outreach_id}/responses",
      "method": "getReportingSurveysIdResponses",
      "httpMethod": "get",
      "tag": "reporting",
      "description": "List survey responses",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "outreach_id",
          "schema": "string",
          "required": true,
          "description": "The outreach id."
        },
        {
          "name": "answered_question",
          "schema": "integer",
          "required": false,
          "description": "The ID of the question that was answered."
        },
        {
          "name": "chose_answer",
          "schema": "string",
          "required": false,
          "description": "The ID of the option chosen to filter responses on."
        },
        {
          "name": "respondent_familiarity_is",
          "schema": "string",
          "required": false,
          "description": "Filter survey responses by familiarity of the respondents."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reporting/surveys/{outreach_id}/responses/{response_id}",
      "method": "getReportingSurveysIdResponsesId",
      "httpMethod": "get",
      "tag": "reporting",
      "description": "Get survey response",
      "parameters": [
        {
          "name": "outreach_id",
          "schema": "string",
          "required": true,
          "description": "The outreach id."
        },
        {
          "name": "response_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the survey response."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A single survey response."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports",
      "method": "getReports",
      "httpMethod": "get",
      "tag": "reports",
      "description": "List campaign reports",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "The campaign type."
        },
        {
          "name": "before_send_time",
          "schema": "string",
          "required": false,
          "description": "Restrict the response to campaigns sent before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "since_send_time",
          "schema": "string",
          "required": false,
          "description": "Restrict the response to campaigns sent after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of reports containing campaigns marked as Sent."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports/{campaign_id}",
      "method": "getReportsId",
      "httpMethod": "get",
      "tag": "reports",
      "description": "Get campaign report",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Report details about a sent campaign."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports/{campaign_id}/abuse-reports",
      "method": "getReportsIdAbuseReportsId",
      "httpMethod": "get",
      "tag": "reports",
      "description": "List abuse reports",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of abuse complaints for a specific list."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports/{campaign_id}/abuse-reports/{report_id}",
      "method": "getReportsIdAbuseReportsIdId",
      "httpMethod": "get",
      "tag": "reports",
      "description": "Get abuse report",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        },
        {
          "name": "report_id",
          "schema": "string",
          "required": true,
          "description": "The id for the abuse report."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Details of abuse complaints for a specific list. An abuse complaint occurs when your recipient clicks to 'report spam' in their email program."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports/{campaign_id}/advice",
      "method": "getReportsIdAdvice",
      "httpMethod": "get",
      "tag": "reports",
      "description": "List campaign feedback",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of feedback based on a campaign's statistics."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports/{campaign_id}/click-details",
      "method": "getReportsIdClickDetails",
      "httpMethod": "get",
      "tag": "reports",
      "description": "List campaign details",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        },
        {
          "name": "sort_field",
          "schema": "string",
          "required": false,
          "description": "Returns click reports sorted by the specified field."
        },
        {
          "name": "sort_dir",
          "schema": "string",
          "required": false,
          "description": "Determines the order direction for sorted results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of URLs and unique IDs included in HTML and plain-text versions of a campaign."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports/{campaign_id}/click-details/{link_id}",
      "method": "getReportsIdClickDetailsId",
      "httpMethod": "get",
      "tag": "reports",
      "description": "Get campaign link details",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        },
        {
          "name": "link_id",
          "schema": "string",
          "required": true,
          "description": "The id for the link."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A report of links clicked in a specific campaign."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports/{campaign_id}/click-details/{link_id}/members",
      "method": "getReportsIdClickDetailsIdMembers",
      "httpMethod": "get",
      "tag": "reports",
      "description": "List clicked link subscribers",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        },
        {
          "name": "link_id",
          "schema": "string",
          "required": true,
          "description": "The id for the link."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of members who clicked on a specific link within a campaign."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports/{campaign_id}/click-details/{link_id}/members/{subscriber_hash}",
      "method": "getReportsIdClickDetailsIdMembersId",
      "httpMethod": "get",
      "tag": "reports",
      "description": "Get clicked link subscriber",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        },
        {
          "name": "link_id",
          "schema": "string",
          "required": true,
          "description": "The id for the link."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A subscriber who clicked a specific URL in a specific campaign."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports/{campaign_id}/domain-performance",
      "method": "getReportsIdDomainPerformance",
      "httpMethod": "get",
      "tag": "reports",
      "description": "List domain performance stats",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Statistics for the top-performing email domains in a campaign."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports/{campaign_id}/ecommerce-product-activity",
      "method": "getReportsIdEcommerceProductActivity",
      "httpMethod": "get",
      "tag": "reports",
      "description": "List campaign product activity",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        },
        {
          "name": "sort_field",
          "schema": "string",
          "required": false,
          "description": "Returns files sorted by the specified field."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of ecommerce products."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports/{campaign_id}/eepurl",
      "method": "getReportsIdEepurl",
      "httpMethod": "get",
      "tag": "reports",
      "description": "List EepURL activity",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A summary of social activity for the campaign, tracked by EepURL."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports/{campaign_id}/email-activity",
      "method": "getReportsIdEmailActivity",
      "httpMethod": "get",
      "tag": "reports",
      "description": "List email activity",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": "Restrict results to email activity events that occur after a specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of member's subscriber activity in a specific campaign."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports/{campaign_id}/email-activity/{subscriber_hash}",
      "method": "getReportsIdEmailActivityId",
      "httpMethod": "get",
      "tag": "reports",
      "description": "Get subscriber email activity",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address."
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": "Restrict results to email activity events that occur after a specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of a member's subscriber activity in a specific campaign, including opens, clicks, and bounces."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports/{campaign_id}/locations",
      "method": "getReportsIdLocations",
      "httpMethod": "get",
      "tag": "reports",
      "description": "List top open activities",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Top open locations for a specific campaign."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports/{campaign_id}/open-details",
      "method": "getReportsIdOpenDetails",
      "httpMethod": "get",
      "tag": "reports",
      "description": "List campaign open details",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": "Restrict results to campaign open events that occur after a specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "sort_field",
          "schema": "string",
          "required": false,
          "description": "Returns open reports sorted by the specified field."
        },
        {
          "name": "sort_dir",
          "schema": "string",
          "required": false,
          "description": "Determines the order direction for sorted results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A detailed report of any campaign emails that were opened by a list member."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports/{campaign_id}/open-details/{subscriber_hash}",
      "method": "getReportsIdOpenDetailsIdMembersId",
      "httpMethod": "get",
      "tag": "reports",
      "description": "Get opened campaign subscriber",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of a member's opens activity in a specific campaign."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports/{campaign_id}/sent-to",
      "method": "getReportsIdSentTo",
      "httpMethod": "get",
      "tag": "reports",
      "description": "List campaign recipients",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of subscribers who were sent a specific campaign."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports/{campaign_id}/sent-to/{subscriber_hash}",
      "method": "getReportsIdSentToId",
      "httpMethod": "get",
      "tag": "reports",
      "description": "Get campaign recipient info",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A subscriber's status for a specific campaign."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports/{campaign_id}/sub-reports",
      "method": "getReportsIdSubReportsId",
      "httpMethod": "get",
      "tag": "reports",
      "description": "List child campaign reports",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of reports containing child campaigns for a specific campaign."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports/{campaign_id}/unsubscribed",
      "method": "getReportsIdUnsubscribed",
      "httpMethod": "get",
      "tag": "reports",
      "description": "List unsubscribed members",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of members who have unsubscribed from a specific campaign."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/reports/{campaign_id}/unsubscribed/{subscriber_hash}",
      "method": "getReportsIdUnsubscribedId",
      "httpMethod": "get",
      "tag": "reports",
      "description": "Get unsubscribed member",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "campaign_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the campaign."
        },
        {
          "name": "subscriber_hash",
          "schema": "string",
          "required": true,
          "description": "The MD5 hash of the lowercase version of the list member's email address."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A member who unsubscribed from a specific campaign."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/search-campaigns",
      "method": "getSearchCampaigns",
      "httpMethod": "get",
      "tag": "searchCampaigns",
      "description": "Search campaigns",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "query",
          "schema": "string",
          "required": true,
          "description": "The search query used to filter results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Campaigns and Snippets found for given search term."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/search-members",
      "method": "getSearchMembers",
      "httpMethod": "get",
      "tag": "searchMembers",
      "description": "Search members",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "query",
          "schema": "string",
          "required": true,
          "description": "The search query used to filter results. Query should be a valid email, or a string representing a contact's first or last name."
        },
        {
          "name": "list_id",
          "schema": "string",
          "required": false,
          "description": "The unique id for the list."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Members found for given search term"
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/template-folders",
      "method": "getTemplateFolders",
      "httpMethod": "get",
      "tag": "templateFolders",
      "description": "List template folders",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of template folders"
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/template-folders",
      "method": "postTemplateFolders",
      "httpMethod": "post",
      "tag": "templateFolders",
      "description": "Add template folder",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A folder used to organize templates."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/template-folders/{folder_id}",
      "method": "deleteTemplateFoldersId",
      "httpMethod": "delete",
      "tag": "templateFolders",
      "description": "Delete template folder",
      "parameters": [
        {
          "name": "folder_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the template folder."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/template-folders/{folder_id}",
      "method": "getTemplateFoldersId",
      "httpMethod": "get",
      "tag": "templateFolders",
      "description": "Get template folder",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "folder_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the template folder."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A folder used to organize templates."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/template-folders/{folder_id}",
      "method": "patchTemplateFoldersId",
      "httpMethod": "patch",
      "tag": "templateFolders",
      "description": "Update template folder",
      "parameters": [
        {
          "name": "folder_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the template folder."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A folder used to organize templates."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/templates",
      "method": "getTemplates",
      "httpMethod": "get",
      "tag": "templates",
      "description": "List templates",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The number of records to return. Default value is 10. Maximum value is 1000"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
        },
        {
          "name": "created_by",
          "schema": "string",
          "required": false,
          "description": "The Mailchimp account user who created the template."
        },
        {
          "name": "since_date_created",
          "schema": "string",
          "required": false,
          "description": "Restrict the response to templates created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "before_date_created",
          "schema": "string",
          "required": false,
          "description": "Restrict the response to templates created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "Limit results based on template type."
        },
        {
          "name": "category",
          "schema": "string",
          "required": false,
          "description": "Limit results based on category."
        },
        {
          "name": "folder_id",
          "schema": "string",
          "required": false,
          "description": "The unique folder id."
        },
        {
          "name": "sort_field",
          "schema": "string",
          "required": false,
          "description": "Returns user templates sorted by the specified field."
        },
        {
          "name": "content_type",
          "schema": "string",
          "required": false,
          "description": "Limit results based on how the template's content is put together. Only templates of type `user` can be filtered by `content_type`. If you want to retrieve saved templates created with the legacy email editor, then filter `content_type` to `template`. If you'd rather pull your saved templates for the new editor, filter to `multichannel`. For code your own templates, filter to `html`."
        },
        {
          "name": "sort_dir",
          "schema": "string",
          "required": false,
          "description": "Determines the order direction for sorted results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list an account's available templates."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/templates",
      "method": "postTemplates",
      "httpMethod": "post",
      "tag": "templates",
      "description": "Add template",
      "parameters": [
        {
          "name": "folder_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "html",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific template."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/templates/{template_id}",
      "method": "deleteTemplatesId",
      "httpMethod": "delete",
      "tag": "templates",
      "description": "Delete template",
      "parameters": [
        {
          "name": "template_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the template."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/templates/{template_id}",
      "method": "getTemplatesId",
      "httpMethod": "get",
      "tag": "templates",
      "description": "Get template info",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "template_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the template."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific template."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/templates/{template_id}",
      "method": "patchTemplatesId",
      "httpMethod": "patch",
      "tag": "templates",
      "description": "Update template",
      "parameters": [
        {
          "name": "template_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the template."
        },
        {
          "name": "folder_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "html",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a specific template."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/templates/{template_id}/default-content",
      "method": "getTemplatesIdDefaultContent",
      "httpMethod": "get",
      "tag": "templates",
      "description": "View default content",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "exclude_fields",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
        },
        {
          "name": "template_id",
          "schema": "string",
          "required": true,
          "description": "The unique id for the template."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Default content for a template."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/verified-domains",
      "method": "getVerifiedDomains",
      "httpMethod": "get",
      "tag": "verifiedDomains",
      "description": "List sending domains",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "The verified domains currently on the account."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/verified-domains",
      "method": "createVerifiedDomain",
      "httpMethod": "post",
      "tag": "verifiedDomains",
      "description": "Add domain to account",
      "parameters": [
        {
          "name": "verification_email",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The verified domains currently on the account."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/verified-domains/{domain_name}",
      "method": "deleteVerifiedDomain",
      "httpMethod": "delete",
      "tag": "verifiedDomains",
      "description": "Delete domain",
      "parameters": [
        {
          "name": "domain_name",
          "schema": "string",
          "required": true,
          "description": "The domain name."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/verified-domains/{domain_name}",
      "method": "getVerifiedDomain",
      "httpMethod": "get",
      "tag": "verifiedDomains",
      "description": "Get domain info",
      "parameters": [
        {
          "name": "domain_name",
          "schema": "string",
          "required": true,
          "description": "The domain name."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The verified domains currently on the account."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    },
    {
      "url": "/verified-domains/{domain_name}/actions/verify",
      "method": "verifyDomain",
      "httpMethod": "post",
      "tag": "verifiedDomains",
      "description": "Verify domain",
      "parameters": [
        {
          "name": "domain_name",
          "schema": "string",
          "required": true,
          "description": "The domain name."
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The verified domains currently on the account."
        },
        {
          "statusCode": "default",
          "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
        }
      ]
    }
  ],
  "apiBaseUrl": "https://server.api.mailchimp.com/3.0",
  "apiTitle": "Mailchimp Marketing API",
  "endpoints": 166,
  "sdkMethods": 272,
  "schemas": 0,
  "parameters": 1273,
  "contactEmail": "apihelp@mailchimp.com",
  "difficultyScore": 590.25,
  "difficulty": "Very Hard"
}