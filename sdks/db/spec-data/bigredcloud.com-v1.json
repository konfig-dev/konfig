{
  "providerName": "bigredcloud.com",
  "openApiRaw": "https://app.bigredcloud.com/api/swagger/docs/v1",
  "securitySchemes": {},
  "homepage": "bigredcloud.com",
  "apiVersion": "v1",
  "methods": [
    {
      "url": "/v1/accounts",
      "method": "accountsGet",
      "httpMethod": "get",
      "tag": "Accounts",
      "description": "Returns a list of company's Accounts. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" and \"code\" fields.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/analysisCategories",
      "method": "analysisCategoriesGet",
      "httpMethod": "get",
      "tag": "AnalysisCategories",
      "description": "Returns a list of company's Analysis Categories. Supports OData querying protocol.\r\nFiltering is allowed by \"categoryTypeId\" field.\r\nOrdering is allowed by \"id\" and \"orderIndex\" fields.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/bankAccounts",
      "method": "bankAccountsGet",
      "httpMethod": "get",
      "tag": "BankAccounts",
      "description": "Returns a list of company's Bank Account. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" and \"acCode\" fields.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/bankAccounts",
      "method": "bankAccountsPost",
      "httpMethod": "post",
      "tag": "BankAccounts",
      "description": "Creates a new Bank Account.",
      "parameters": [
        {
          "name": "acCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "accountName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "accountNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "address",
          "schema": "array",
          "description": ""
        },
        {
          "name": "bankFeedSource",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "businessIdentifierCodes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "categoryId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "creditorScheme",
          "schema": "string",
          "description": ""
        },
        {
          "name": "details",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "internationalBankAccountNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "isDefaultBank",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "lastChq",
          "schema": "string",
          "description": ""
        },
        {
          "name": "nominalAcCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "oBalance",
          "schema": "number",
          "description": ""
        },
        {
          "name": "sortCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/bankAccounts/batch",
      "method": "bankAccountsProcessBatch",
      "httpMethod": "put",
      "tag": "BankAccounts",
      "description": "Processes a batch of Bank Accounts.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/bankAccounts/{id}",
      "method": "bankAccountsDelete",
      "httpMethod": "delete",
      "tag": "BankAccounts",
      "description": "Removes an existing Bank Account.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Bank Account to remove."
        },
        {
          "name": "timestamp",
          "schema": "string",
          "required": true,
          "description": "Timestamp of Bank Account to remove. Should be encoded in Base64."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/bankAccounts/{id}",
      "method": "/v1/bankAccounts/{id}Get",
      "httpMethod": "get",
      "tag": "BankAccounts",
      "description": "Returns information about a single Bank Account.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Bank Account to return."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/bankAccounts/{id}",
      "method": "bankAccountsPut",
      "httpMethod": "put",
      "tag": "BankAccounts",
      "description": "Updates an existing Bank Account.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Bank Account to update."
        },
        {
          "name": "acCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "accountName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "accountNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "address",
          "schema": "array",
          "description": ""
        },
        {
          "name": "bankFeedSource",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "businessIdentifierCodes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "categoryId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "creditorScheme",
          "schema": "string",
          "description": ""
        },
        {
          "name": "details",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "internationalBankAccountNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "isDefaultBank",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "lastChq",
          "schema": "string",
          "description": ""
        },
        {
          "name": "nominalAcCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "oBalance",
          "schema": "number",
          "description": ""
        },
        {
          "name": "sortCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/bookTranTypes",
      "method": "bookTranTypesGet",
      "httpMethod": "get",
      "tag": "BookTranTypes",
      "description": "Returns a list of global Book Transactions' Types. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/cashPayments",
      "method": "cashPaymentsGet",
      "httpMethod": "get",
      "tag": "CashPayments",
      "description": "Returns a list of company's Cash Payments. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/cashPayments",
      "method": "cashPaymentsPost",
      "httpMethod": "post",
      "tag": "CashPayments",
      "description": "Creates a new Cash Payment.",
      "parameters": [
        {
          "name": "acCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "acEntries",
          "schema": "array",
          "description": ""
        },
        {
          "name": "bankAccountCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bankAccountId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "bookTranTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "detailCollection",
          "schema": "array",
          "description": ""
        },
        {
          "name": "discount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "entryDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ledger",
          "schema": "number",
          "description": ""
        },
        {
          "name": "lodgement",
          "schema": "number",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "plaidTransactionId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "procDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "supplierId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/cashPayments/batch",
      "method": "cashPaymentsProcessBatch",
      "httpMethod": "put",
      "tag": "CashPayments",
      "description": "Processes a batch of Cash Payments.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/cashPayments/{id}",
      "method": "cashPaymentsDelete",
      "httpMethod": "delete",
      "tag": "CashPayments",
      "description": "Removes an existing Cash Payment.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Cash Receipt to remove."
        },
        {
          "name": "timestamp",
          "schema": "string",
          "required": true,
          "description": "Timestamp of Cash Receipt to remove. Should be encoded in Base64."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/cashPayments/{id}",
      "method": "/v1/cashPayments/{id}Get",
      "httpMethod": "get",
      "tag": "CashPayments",
      "description": "Returns information about a single Cash Payment.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Cash Receipt to return."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/cashPayments/{id}",
      "method": "cashPaymentsPut",
      "httpMethod": "put",
      "tag": "CashPayments",
      "description": "Updates an existing Cash Payment.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Cash Receipt to update."
        },
        {
          "name": "acCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "acEntries",
          "schema": "array",
          "description": ""
        },
        {
          "name": "bankAccountCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bankAccountId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "bookTranTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "detailCollection",
          "schema": "array",
          "description": ""
        },
        {
          "name": "discount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "entryDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ledger",
          "schema": "number",
          "description": ""
        },
        {
          "name": "lodgement",
          "schema": "number",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "plaidTransactionId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "procDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "supplierId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/cashReceipts",
      "method": "cashReceiptsGet",
      "httpMethod": "get",
      "tag": "CashReceipts",
      "description": "Returns a list of company's Cash Receipts. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/cashReceipts",
      "method": "cashReceiptsPost",
      "httpMethod": "post",
      "tag": "CashReceipts",
      "description": "Creates a new Cash Receipt.",
      "parameters": [
        {
          "name": "acCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "acEntries",
          "schema": "array",
          "description": ""
        },
        {
          "name": "bookTranTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customerId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "detailCollection",
          "schema": "array",
          "description": ""
        },
        {
          "name": "discount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "entryDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ledger",
          "schema": "number",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "plaidTransactionId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "procDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "unallocated",
          "schema": "number",
          "description": ""
        },
        {
          "name": "vatEntries",
          "schema": "array",
          "description": ""
        },
        {
          "name": "vatTypeId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/cashReceipts/batch",
      "method": "cashReceiptsProcessBatch",
      "httpMethod": "put",
      "tag": "CashReceipts",
      "description": "Processes a batch of Cash Receipts.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/cashReceipts/{id}",
      "method": "cashReceiptsDelete",
      "httpMethod": "delete",
      "tag": "CashReceipts",
      "description": "Removes an existing Cash Receipt.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Cash Receipt to remove."
        },
        {
          "name": "timestamp",
          "schema": "string",
          "required": true,
          "description": "Timestamp of Cash Receipt to remove. Should be encoded in Base64."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/cashReceipts/{id}",
      "method": "/v1/cashReceipts/{id}Get",
      "httpMethod": "get",
      "tag": "CashReceipts",
      "description": "Returns information about a single Cash Receipt.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Cash Receipt to return."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/cashReceipts/{id}",
      "method": "cashReceiptsPut",
      "httpMethod": "put",
      "tag": "CashReceipts",
      "description": "Updates an existing Cash Receipt.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Cash Receipt to update."
        },
        {
          "name": "acCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "acEntries",
          "schema": "array",
          "description": ""
        },
        {
          "name": "bookTranTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customerId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "detailCollection",
          "schema": "array",
          "description": ""
        },
        {
          "name": "discount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "entryDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ledger",
          "schema": "number",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "plaidTransactionId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "procDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "unallocated",
          "schema": "number",
          "description": ""
        },
        {
          "name": "vatEntries",
          "schema": "array",
          "description": ""
        },
        {
          "name": "vatTypeId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/categoryTypes",
      "method": "categoryTypesGet",
      "httpMethod": "get",
      "tag": "CategoryTypes",
      "description": "Returns a list of company's Category Types. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/companySettings",
      "method": "companySettingsGet",
      "httpMethod": "get",
      "tag": "CompanySettings",
      "description": "Returns a list of company settings. Supports OData querying protocol.\r\nFiltering is forbidden.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/companySetupConfig",
      "method": "companySetupConfigGet",
      "httpMethod": "get",
      "tag": "CompanySetupConfig",
      "description": "Returns the company configuration settings.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/companySetupConfig/getCompanyOptions",
      "method": "companySetupConfigGetCompanyOptions",
      "httpMethod": "get",
      "tag": "CompanySetupConfig",
      "description": "Returns the company option setting.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/companySetupConfig/getFinancialYear",
      "method": "companySetupConfigGetFinancialYear",
      "httpMethod": "get",
      "tag": "CompanySetupConfig",
      "description": "Returns the financial year.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/customers",
      "method": "customersGet",
      "httpMethod": "get",
      "tag": "Customers",
      "description": "Returns a list of company's Customers. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" and \"code\" fields.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/customers",
      "method": "customersPost",
      "httpMethod": "post",
      "tag": "Customers",
      "description": "Creates a new Customer.",
      "parameters": [
        {
          "name": "accountName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "accountNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "additionalEmails",
          "schema": "array",
          "description": ""
        },
        {
          "name": "address",
          "schema": "array",
          "description": ""
        },
        {
          "name": "authCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bank",
          "schema": "object",
          "description": ""
        },
        {
          "name": "businessIdentifierCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "string",
          "description": ""
        },
        {
          "name": "delivery",
          "schema": "array",
          "description": ""
        },
        {
          "name": "eFTReference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "fax",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "internationalBankAccountNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ledgerBalance",
          "schema": "number",
          "description": ""
        },
        {
          "name": "mobile",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "openingBalance",
          "schema": "object",
          "description": ""
        },
        {
          "name": "openingBalances",
          "schema": "array",
          "description": ""
        },
        {
          "name": "ourCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ownerTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vatAnalysisTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "vatReg",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vatType",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/customers/batch",
      "method": "customersProcessBatch",
      "httpMethod": "put",
      "tag": "Customers",
      "description": "Processes a batch of Customers.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/customers/{id}",
      "method": "customersDelete",
      "httpMethod": "delete",
      "tag": "Customers",
      "description": "Removes an existing Customer.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Customer to remove."
        },
        {
          "name": "timestamp",
          "schema": "string",
          "required": true,
          "description": "Timestamp of Customer to remove. Should be encoded in Base64."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/customers/{id}",
      "method": "/v1/customers/{id}Get",
      "httpMethod": "get",
      "tag": "Customers",
      "description": "Returns information about a single Customer. You may specify that Customer's ledger balance should be calculated.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Customer to return."
        },
        {
          "name": "needBalance",
          "schema": "boolean",
          "required": false,
          "description": "If \"true\" then Customer's ledger balance will be calculated; otherwise balance will be returned as 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/customers/{id}",
      "method": "customersPut",
      "httpMethod": "put",
      "tag": "Customers",
      "description": "Updates an existing Customer.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Customer to update."
        },
        {
          "name": "accountName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "accountNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "additionalEmails",
          "schema": "array",
          "description": ""
        },
        {
          "name": "address",
          "schema": "array",
          "description": ""
        },
        {
          "name": "authCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bank",
          "schema": "object",
          "description": ""
        },
        {
          "name": "businessIdentifierCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "string",
          "description": ""
        },
        {
          "name": "delivery",
          "schema": "array",
          "description": ""
        },
        {
          "name": "eFTReference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "fax",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "internationalBankAccountNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ledgerBalance",
          "schema": "number",
          "description": ""
        },
        {
          "name": "mobile",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "openingBalance",
          "schema": "object",
          "description": ""
        },
        {
          "name": "openingBalances",
          "schema": "array",
          "description": ""
        },
        {
          "name": "ourCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ownerTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vatAnalysisTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "vatReg",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vatType",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/customers/{itemId}/accountTrans",
      "method": "customersGetAccountTrans",
      "httpMethod": "get",
      "tag": "Customers",
      "description": "Returns a list of Customer's account transactions.",
      "parameters": [
        {
          "name": "itemId",
          "schema": "integer",
          "required": true,
          "description": "Id of Customer to return account transaction."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/customers/{itemId}/openingBalance",
      "method": "customersGetOpeningBalance",
      "httpMethod": "get",
      "tag": "Customers",
      "description": "Returns a Customer's opening balances, calculated for the next periods: current month, one month old, two months old, three and more months old.",
      "parameters": [
        {
          "name": "itemId",
          "schema": "integer",
          "required": true,
          "description": "Id of Customer to return opening balances."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/customers/{itemId}/openingBalanceList",
      "method": "customersGetOpeningBalanceList",
      "httpMethod": "get",
      "tag": "Customers",
      "description": "Returns a list of Customer's opening balance transactions.",
      "parameters": [
        {
          "name": "itemId",
          "schema": "integer",
          "required": true,
          "description": "Id of Customer to return opening balances transaction."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/customers/{itemId}/quotes",
      "method": "customersGetQuotes",
      "httpMethod": "get",
      "tag": "Customers",
      "description": "Returns a list of Customer's quotes.",
      "parameters": [
        {
          "name": "itemId",
          "schema": "integer",
          "required": true,
          "description": "Id of Customer to return quotes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/email/sendEmailStatement",
      "method": "emailSendEmailStatement",
      "httpMethod": "post",
      "tag": "Email",
      "description": "Sends a Statement email.\r\nIf \"toAddress\" is not empty then email will be sent to this address. Otherwise email will be sent to Statement Customer's address.",
      "parameters": [
        {
          "name": "bccAddresses",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customerId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "fromPeriod",
          "schema": "string",
          "description": ""
        },
        {
          "name": "messageBody",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minimumBalance",
          "schema": "number",
          "description": ""
        },
        {
          "name": "toAddress",
          "schema": "string",
          "description": ""
        },
        {
          "name": "toPeriod",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/email/sendQuote",
      "method": "emailSendQuote",
      "httpMethod": "post",
      "tag": "Email",
      "description": "Sends a Quote email.\r\nIf \"toAddress\" is not empty then email will be sent to this address. Otherwise email will be sent to Statement Customer's address.",
      "parameters": [
        {
          "name": "bccAddresses",
          "schema": "array",
          "description": ""
        },
        {
          "name": "messageBody",
          "schema": "string",
          "description": ""
        },
        {
          "name": "quoteId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "toAddress",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/email/sendSalesInvoice",
      "method": "emailSendSalesInvoice",
      "httpMethod": "post",
      "tag": "Email",
      "description": "Sends a Sales Invoice email.\r\nIf \"toAddress\" is not empty then email will be sent to this address. Otherwise email will be sent to Sales Invoice Customer's address.",
      "parameters": [
        {
          "name": "bccAddresses",
          "schema": "array",
          "description": ""
        },
        {
          "name": "messageBody",
          "schema": "string",
          "description": ""
        },
        {
          "name": "salesInvoiceId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "toAddress",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/ownerTypeGroups",
      "method": "ownerTypeGroupsGet",
      "httpMethod": "get",
      "tag": "OwnerTypeGroups",
      "description": "Returns a list of global Owner Type Groups. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/ownerTypes",
      "method": "ownerTypesGet",
      "httpMethod": "get",
      "tag": "OwnerTypes",
      "description": "Returns a list of global Owner Types. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/payments",
      "method": "paymentsGet",
      "httpMethod": "get",
      "tag": "Payments",
      "description": "Returns a list of company's Payments. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/payments",
      "method": "paymentsPost",
      "httpMethod": "post",
      "tag": "Payments",
      "description": "Creates a new Payment.",
      "parameters": [
        {
          "name": "acCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "acEntries",
          "schema": "array",
          "description": ""
        },
        {
          "name": "bankAccountCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bankAccountId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "bookTranTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "detailCollection",
          "schema": "array",
          "description": ""
        },
        {
          "name": "discount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "entryDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "plaidTransactionId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "procDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "supplierId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "transferBankCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "transferBankId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "unallocated",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/payments/batch",
      "method": "paymentsProcessBatch",
      "httpMethod": "put",
      "tag": "Payments",
      "description": "Processes a batch of Payments.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/payments/{id}",
      "method": "paymentsDelete",
      "httpMethod": "delete",
      "tag": "Payments",
      "description": "Removes an existing Payment.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Payment to remove."
        },
        {
          "name": "timestamp",
          "schema": "string",
          "required": true,
          "description": "Timestamp of Payment to remove. Should be encoded in Base64."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/payments/{id}",
      "method": "/v1/payments/{id}Get",
      "httpMethod": "get",
      "tag": "Payments",
      "description": "Returns information about a single Payments.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Payment to return."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/payments/{id}",
      "method": "paymentsPut",
      "httpMethod": "put",
      "tag": "Payments",
      "description": "Updates an existing Payment.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Payment to update."
        },
        {
          "name": "acCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "acEntries",
          "schema": "array",
          "description": ""
        },
        {
          "name": "bankAccountCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bankAccountId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "bookTranTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "detailCollection",
          "schema": "array",
          "description": ""
        },
        {
          "name": "discount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "entryDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "plaidTransactionId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "procDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "supplierId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "transferBankCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "transferBankId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "unallocated",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/productTypes",
      "method": "productTypesGet",
      "httpMethod": "get",
      "tag": "ProductTypes",
      "description": "Returns a list of global Product Types. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/products",
      "method": "productsGet",
      "httpMethod": "get",
      "tag": "Products",
      "description": "Returns a list of company's Products. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" and \"stockCode\" fields.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/products",
      "method": "productsPost",
      "httpMethod": "post",
      "tag": "Products",
      "description": "Creates a new Product.",
      "parameters": [
        {
          "name": "details",
          "schema": "array",
          "description": ""
        },
        {
          "name": "grossUnitPrice",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "hasDefaultVatRate",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "productTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "stockCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "unitPrice",
          "schema": "number",
          "description": ""
        },
        {
          "name": "vatAnalysisTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "vatRateId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/products/batch",
      "method": "productsProcessBatch",
      "httpMethod": "put",
      "tag": "Products",
      "description": "Processes a batch of Products.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/products/{id}",
      "method": "productsDelete",
      "httpMethod": "delete",
      "tag": "Products",
      "description": "Removes an existing Product.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Product to remove."
        },
        {
          "name": "timestamp",
          "schema": "string",
          "required": true,
          "description": "Timestamp of Product to remove. Should be encoded in Base64."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/products/{id}",
      "method": "/v1/products/{id}Get",
      "httpMethod": "get",
      "tag": "Products",
      "description": "Returns information about a single Product.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Product to return."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/products/{id}",
      "method": "productsPut",
      "httpMethod": "put",
      "tag": "Products",
      "description": "Updates an existing Product.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Product to update."
        },
        {
          "name": "details",
          "schema": "array",
          "description": ""
        },
        {
          "name": "grossUnitPrice",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "hasDefaultVatRate",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "productTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "stockCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "unitPrice",
          "schema": "number",
          "description": ""
        },
        {
          "name": "vatAnalysisTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "vatRateId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/purchases",
      "method": "purchasesGet",
      "httpMethod": "get",
      "tag": "Purchases",
      "description": "Returns a list of company's Purchases. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/purchases",
      "method": "purchasesPost",
      "httpMethod": "post",
      "tag": "Purchases",
      "description": "Creates a new Purchase.",
      "parameters": [
        {
          "name": "acCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "acEntries",
          "schema": "array",
          "description": ""
        },
        {
          "name": "bookTranTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "detailCollection",
          "schema": "array",
          "description": ""
        },
        {
          "name": "entryDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "isDiscrepancyAccepted",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "netGoods",
          "schema": "number",
          "description": ""
        },
        {
          "name": "netServices",
          "schema": "number",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "postponedAccounting",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "procDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "supplierId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalNet",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalVAT",
          "schema": "number",
          "description": ""
        },
        {
          "name": "unallocated",
          "schema": "number",
          "description": ""
        },
        {
          "name": "unpaid",
          "schema": "number",
          "description": ""
        },
        {
          "name": "vatEntries",
          "schema": "array",
          "description": ""
        },
        {
          "name": "vatTypeId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/purchases/batch",
      "method": "purchasesProcessBatch",
      "httpMethod": "put",
      "tag": "Purchases",
      "description": "Processes a batch of Purchases.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/purchases/{id}",
      "method": "purchasesDelete",
      "httpMethod": "delete",
      "tag": "Purchases",
      "description": "Removes an existing Purchase.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Purchase to remove."
        },
        {
          "name": "timestamp",
          "schema": "string",
          "required": true,
          "description": "Timestamp of Purchase to remove. Should be encoded in Base64."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/purchases/{id}",
      "method": "/v1/purchases/{id}Get",
      "httpMethod": "get",
      "tag": "Purchases",
      "description": "Returns information about a single Purchases.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Purchase to return."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/purchases/{id}",
      "method": "purchasesPut",
      "httpMethod": "put",
      "tag": "Purchases",
      "description": "Updates an existing Purchase.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Purchase to update."
        },
        {
          "name": "acCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "acEntries",
          "schema": "array",
          "description": ""
        },
        {
          "name": "bookTranTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "detailCollection",
          "schema": "array",
          "description": ""
        },
        {
          "name": "entryDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "isDiscrepancyAccepted",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "netGoods",
          "schema": "number",
          "description": ""
        },
        {
          "name": "netServices",
          "schema": "number",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "postponedAccounting",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "procDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "supplierId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalNet",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalVAT",
          "schema": "number",
          "description": ""
        },
        {
          "name": "unallocated",
          "schema": "number",
          "description": ""
        },
        {
          "name": "unpaid",
          "schema": "number",
          "description": ""
        },
        {
          "name": "vatEntries",
          "schema": "array",
          "description": ""
        },
        {
          "name": "vatTypeId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/quotes",
      "method": "quoteGet",
      "httpMethod": "get",
      "tag": "Quote",
      "description": "Returns a list of company's Quotes.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\".",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/quotes",
      "method": "quotePost",
      "httpMethod": "post",
      "tag": "Quote",
      "description": "Creates a new Quote.",
      "parameters": [
        {
          "name": "acCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "closedDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "comments",
          "schema": "string",
          "description": ""
        },
        {
          "name": "companyId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customerOwnerId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "customerOwnerName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ddNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "deliveryList",
          "schema": "string",
          "description": ""
        },
        {
          "name": "deliveryTo",
          "schema": "array",
          "description": ""
        },
        {
          "name": "entryDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "layoutType",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "poNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "procDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "productTrans",
          "schema": "array",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "saleInvoiceId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "saleRepCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "saleRepId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "timeStamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalNet",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalVat",
          "schema": "number",
          "description": ""
        },
        {
          "name": "vatTypeId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/quotes/batch",
      "method": "quoteProcessBatch",
      "httpMethod": "put",
      "tag": "Quote",
      "description": "Processes a batch of Quote.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/quotes/close/{id}",
      "method": "quoteClose",
      "httpMethod": "put",
      "tag": "Quote",
      "description": "Close a Quote.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Quote to close"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/quotes/createQuoteWithGeneratingReference",
      "method": "quotePostCreateQuoteWithGeneratingReference",
      "httpMethod": "post",
      "tag": "Quote",
      "description": "Creates a new Quote with auto generating reference.",
      "parameters": [
        {
          "name": "acCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "closedDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "comments",
          "schema": "string",
          "description": ""
        },
        {
          "name": "companyId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customerOwnerId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "customerOwnerName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ddNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "deliveryList",
          "schema": "string",
          "description": ""
        },
        {
          "name": "deliveryTo",
          "schema": "array",
          "description": ""
        },
        {
          "name": "entryDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "layoutType",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "poNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "procDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "productTrans",
          "schema": "array",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "saleInvoiceId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "saleRepCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "saleRepId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "timeStamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalNet",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalVat",
          "schema": "number",
          "description": ""
        },
        {
          "name": "vatTypeId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/quotes/generateSaleInvoice",
      "method": "quotePostGenerateSaleInvoice",
      "httpMethod": "post",
      "tag": "Quote",
      "description": "Generate a sale invoice from a Quote.\r\nWhen sale invoice is empty, new sale invoice will be generated from Quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "saleInvoice",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/quotes/reopen/{id}",
      "method": "quoteReopen",
      "httpMethod": "put",
      "tag": "Quote",
      "description": "Reopen a Quote.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Quote to reopen"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/quotes/{id}",
      "method": "quoteDelete",
      "httpMethod": "delete",
      "tag": "Quote",
      "description": "Removes an existing Quote.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Quote to remove."
        },
        {
          "name": "timestamp",
          "schema": "string",
          "required": true,
          "description": "Timestamp of Quote to remove. Should be encoded in Base64."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/quotes/{id}",
      "method": "/v1/quotes/{id}Get",
      "httpMethod": "get",
      "tag": "Quote",
      "description": "Returns information about a single Quote.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Sale Rep to return."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/quotes/{id}",
      "method": "quotePut",
      "httpMethod": "put",
      "tag": "Quote",
      "description": "Updates an existing Quote.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Quote to update."
        },
        {
          "name": "acCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "closedDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "comments",
          "schema": "string",
          "description": ""
        },
        {
          "name": "companyId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customerOwnerId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "customerOwnerName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ddNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "deliveryList",
          "schema": "string",
          "description": ""
        },
        {
          "name": "deliveryTo",
          "schema": "array",
          "description": ""
        },
        {
          "name": "entryDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "layoutType",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "poNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "procDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "productTrans",
          "schema": "array",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "saleInvoiceId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "saleRepCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "saleRepId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "timeStamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalNet",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalVat",
          "schema": "number",
          "description": ""
        },
        {
          "name": "vatTypeId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/sales",
      "method": "salesGet",
      "httpMethod": "get",
      "tag": "Sales",
      "description": "Returns a list of company's Sales Entries, Sales Invoices and Sales Credit Notes. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesCreditNotes",
      "method": "salesCreditNotesGet",
      "httpMethod": "get",
      "tag": "SalesCreditNotes",
      "description": "Returns a list of company's Sales Credit Notes. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesCreditNotes",
      "method": "salesCreditNotesPost",
      "httpMethod": "post",
      "tag": "SalesCreditNotes",
      "description": "Creates a new Sales Credit Note.",
      "parameters": [
        {
          "name": "acCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bookTranTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customerId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "deliveryTo",
          "schema": "array",
          "description": ""
        },
        {
          "name": "details",
          "schema": "string",
          "description": ""
        },
        {
          "name": "entryDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "loType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "netGoods",
          "schema": "number",
          "description": ""
        },
        {
          "name": "netServices",
          "schema": "number",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ourReference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "procDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "productTrans",
          "schema": "array",
          "description": ""
        },
        {
          "name": "quoteId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "saleRepCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "saleRepId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalNet",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalVAT",
          "schema": "number",
          "description": ""
        },
        {
          "name": "unpaid",
          "schema": "number",
          "description": ""
        },
        {
          "name": "vatTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "yourReference",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesCreditNotes/batch",
      "method": "salesCreditNotesProcessBatch",
      "httpMethod": "put",
      "tag": "SalesCreditNotes",
      "description": "Processes a batch of Sales Credit Notes.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesCreditNotes/{id}",
      "method": "salesCreditNotesDelete",
      "httpMethod": "delete",
      "tag": "SalesCreditNotes",
      "description": "Removes an existing Sales Credit Note.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Sales Credit Note to remove."
        },
        {
          "name": "timestamp",
          "schema": "string",
          "required": true,
          "description": "Timestamp of Sales Credit Note to remove. Should be encoded in Base64."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesCreditNotes/{id}",
      "method": "/v1/salesCreditNotes/{id}Get",
      "httpMethod": "get",
      "tag": "SalesCreditNotes",
      "description": "Returns information about a single Sales Credit Note.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Sales Credit Note to return."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesCreditNotes/{id}",
      "method": "salesCreditNotesPut",
      "httpMethod": "put",
      "tag": "SalesCreditNotes",
      "description": "Updates an existing Sales Credit Note.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Sales Credit Note to update."
        },
        {
          "name": "acCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bookTranTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customerId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "deliveryTo",
          "schema": "array",
          "description": ""
        },
        {
          "name": "details",
          "schema": "string",
          "description": ""
        },
        {
          "name": "entryDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "loType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "netGoods",
          "schema": "number",
          "description": ""
        },
        {
          "name": "netServices",
          "schema": "number",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ourReference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "procDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "productTrans",
          "schema": "array",
          "description": ""
        },
        {
          "name": "quoteId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "saleRepCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "saleRepId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalNet",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalVAT",
          "schema": "number",
          "description": ""
        },
        {
          "name": "unpaid",
          "schema": "number",
          "description": ""
        },
        {
          "name": "vatTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "yourReference",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesEntries",
      "method": "salesEntriesGet",
      "httpMethod": "get",
      "tag": "SalesEntries",
      "description": "Returns a list of company's Sales Entries. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesEntries",
      "method": "salesEntriesPost",
      "httpMethod": "post",
      "tag": "SalesEntries",
      "description": "Creates a new Sales Entry.",
      "parameters": [
        {
          "name": "acCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "acEntries",
          "schema": "array",
          "description": ""
        },
        {
          "name": "bookTranTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customerId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "detailCollection",
          "schema": "array",
          "description": ""
        },
        {
          "name": "details",
          "schema": "string",
          "description": ""
        },
        {
          "name": "entryDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "netGoods",
          "schema": "number",
          "description": ""
        },
        {
          "name": "netServices",
          "schema": "number",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "procDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalNet",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalVAT",
          "schema": "number",
          "description": ""
        },
        {
          "name": "unpaid",
          "schema": "number",
          "description": ""
        },
        {
          "name": "vatEntries",
          "schema": "array",
          "description": ""
        },
        {
          "name": "vatTypeId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesEntries/batch",
      "method": "salesEntriesProcessBatch",
      "httpMethod": "put",
      "tag": "SalesEntries",
      "description": "Processes a batch of Sales Entries.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesEntries/{id}",
      "method": "salesEntriesDelete",
      "httpMethod": "delete",
      "tag": "SalesEntries",
      "description": "Removes an existing Sales Entry.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Sales Entry to remove."
        },
        {
          "name": "timestamp",
          "schema": "string",
          "required": true,
          "description": "Timestamp of Sales Entry to remove. Should be encoded in Base64."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesEntries/{id}",
      "method": "/v1/salesEntries/{id}Get",
      "httpMethod": "get",
      "tag": "SalesEntries",
      "description": "Returns information about a single Sales Entry.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Sales Entry to return."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesEntries/{id}",
      "method": "salesEntriesPut",
      "httpMethod": "put",
      "tag": "SalesEntries",
      "description": "Updates an existing Sales Entry.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Sales Entry to update."
        },
        {
          "name": "acCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "acEntries",
          "schema": "array",
          "description": ""
        },
        {
          "name": "bookTranTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customerId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "detailCollection",
          "schema": "array",
          "description": ""
        },
        {
          "name": "details",
          "schema": "string",
          "description": ""
        },
        {
          "name": "entryDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "netGoods",
          "schema": "number",
          "description": ""
        },
        {
          "name": "netServices",
          "schema": "number",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "procDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalNet",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalVAT",
          "schema": "number",
          "description": ""
        },
        {
          "name": "unpaid",
          "schema": "number",
          "description": ""
        },
        {
          "name": "vatEntries",
          "schema": "array",
          "description": ""
        },
        {
          "name": "vatTypeId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesInvoices",
      "method": "salesInvoicesGet",
      "httpMethod": "get",
      "tag": "SalesInvoices",
      "description": "Returns a list of company's Sales Invoices. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesInvoices",
      "method": "salesInvoicesPost",
      "httpMethod": "post",
      "tag": "SalesInvoices",
      "description": "Creates a new Sales Invoice.",
      "parameters": [
        {
          "name": "acCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bookTranTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customerId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "deliveryTo",
          "schema": "array",
          "description": ""
        },
        {
          "name": "details",
          "schema": "string",
          "description": ""
        },
        {
          "name": "entryDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "loType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "netGoods",
          "schema": "number",
          "description": ""
        },
        {
          "name": "netServices",
          "schema": "number",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ourReference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "procDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "productTrans",
          "schema": "array",
          "description": ""
        },
        {
          "name": "quoteId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "saleRepCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "saleRepId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalNet",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalVAT",
          "schema": "number",
          "description": ""
        },
        {
          "name": "unpaid",
          "schema": "number",
          "description": ""
        },
        {
          "name": "vatTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "yourReference",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesInvoices/batch",
      "method": "salesInvoicesProcessBatch",
      "httpMethod": "put",
      "tag": "SalesInvoices",
      "description": "Processes a batch of Sales Invoices.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesInvoices/createSaleInvoiceWithGeneratingReference",
      "method": "salesInvoicesPostCreateSaleInvoiceWithGeneratingReference",
      "httpMethod": "post",
      "tag": "SalesInvoices",
      "description": "Creates a new Sale Invoice with auto generating reference.",
      "parameters": [
        {
          "name": "acCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bookTranTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customerId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "deliveryTo",
          "schema": "array",
          "description": ""
        },
        {
          "name": "details",
          "schema": "string",
          "description": ""
        },
        {
          "name": "entryDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "loType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "netGoods",
          "schema": "number",
          "description": ""
        },
        {
          "name": "netServices",
          "schema": "number",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ourReference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "procDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "productTrans",
          "schema": "array",
          "description": ""
        },
        {
          "name": "quoteId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "saleRepCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "saleRepId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalNet",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalVAT",
          "schema": "number",
          "description": ""
        },
        {
          "name": "unpaid",
          "schema": "number",
          "description": ""
        },
        {
          "name": "vatTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "yourReference",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesInvoices/{id}",
      "method": "salesInvoicesDelete",
      "httpMethod": "delete",
      "tag": "SalesInvoices",
      "description": "Removes an existing Sales Invoice.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Sales Invoice to remove."
        },
        {
          "name": "timestamp",
          "schema": "string",
          "required": true,
          "description": "Timestamp of Sales Invoice to remove. Should be encoded in Base64."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesInvoices/{id}",
      "method": "/v1/salesInvoices/{id}Get",
      "httpMethod": "get",
      "tag": "SalesInvoices",
      "description": "Returns information about a single Sales Invoice.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Sales Invoice to return."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesInvoices/{id}",
      "method": "salesInvoicesPut",
      "httpMethod": "put",
      "tag": "SalesInvoices",
      "description": "Updates an existing Sales Invoice.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Sales Invoice to update."
        },
        {
          "name": "acCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bookTranTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customerId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "deliveryTo",
          "schema": "array",
          "description": ""
        },
        {
          "name": "details",
          "schema": "string",
          "description": ""
        },
        {
          "name": "entryDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "loType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "netGoods",
          "schema": "number",
          "description": ""
        },
        {
          "name": "netServices",
          "schema": "number",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ourReference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "procDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "productTrans",
          "schema": "array",
          "description": ""
        },
        {
          "name": "quoteId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "saleRepCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "saleRepId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalNet",
          "schema": "number",
          "description": ""
        },
        {
          "name": "totalVAT",
          "schema": "number",
          "description": ""
        },
        {
          "name": "unpaid",
          "schema": "number",
          "description": ""
        },
        {
          "name": "vatTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "yourReference",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesReps",
      "method": "salesRepGet",
      "httpMethod": "get",
      "tag": "SalesRep",
      "description": "Returns a list of company's SaleRep.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\".",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesReps",
      "method": "salesRepPost",
      "httpMethod": "post",
      "tag": "SalesRep",
      "description": "Creates a new SaleRep.",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "companyId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timeStamp",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesReps/batch",
      "method": "salesRepProcessBatch",
      "httpMethod": "put",
      "tag": "SalesRep",
      "description": "Processes a batch of Sale Rep.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesReps/{id}",
      "method": "salesRepDelete",
      "httpMethod": "delete",
      "tag": "SalesRep",
      "description": "Removes an existing Sale Rep.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Sale Rep to remove."
        },
        {
          "name": "timestamp",
          "schema": "string",
          "required": true,
          "description": "Timestamp of Sale Rep to remove. Should be encoded in Base64."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesReps/{id}",
      "method": "/v1/salesReps/{id}Get",
      "httpMethod": "get",
      "tag": "SalesRep",
      "description": "Returns information about a single SaleRep.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Sale Rep to return."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesReps/{id}",
      "method": "salesRepPut",
      "httpMethod": "put",
      "tag": "SalesRep",
      "description": "Updates an existing Sale Rep.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Sale Rep to update."
        },
        {
          "name": "code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "companyId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timeStamp",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/suppliers",
      "method": "suppliersGet",
      "httpMethod": "get",
      "tag": "Suppliers",
      "description": "Returns a list of company's Suppliers. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" and \"code\" fields.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/suppliers",
      "method": "suppliersPost",
      "httpMethod": "post",
      "tag": "Suppliers",
      "description": "Creates a new Supplier.",
      "parameters": [
        {
          "name": "accountName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "accountNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "additionalEmails",
          "schema": "array",
          "description": ""
        },
        {
          "name": "address",
          "schema": "array",
          "description": ""
        },
        {
          "name": "authCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bank",
          "schema": "object",
          "description": ""
        },
        {
          "name": "businessIdentifierCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "string",
          "description": ""
        },
        {
          "name": "eFTReference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "fax",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "internationalBankAccountNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ledgerBalance",
          "schema": "number",
          "description": ""
        },
        {
          "name": "mobile",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "openingBalance",
          "schema": "object",
          "description": ""
        },
        {
          "name": "openingBalances",
          "schema": "array",
          "description": ""
        },
        {
          "name": "ourCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ownerTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "postponedAccounting",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vatAnalysisTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "vatReg",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vatType",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/suppliers/batch",
      "method": "suppliersProcessBatch",
      "httpMethod": "put",
      "tag": "Suppliers",
      "description": "Processes a batch of Suppliers.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/suppliers/{id}",
      "method": "suppliersDelete",
      "httpMethod": "delete",
      "tag": "Suppliers",
      "description": "Removes an existing Supplier.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Supplier to remove."
        },
        {
          "name": "timestamp",
          "schema": "string",
          "required": true,
          "description": "Timestamp of Supplier to remove. Should be encoded in Base64."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/suppliers/{id}",
      "method": "/v1/suppliers/{id}Get",
      "httpMethod": "get",
      "tag": "Suppliers",
      "description": "Returns information about a single Supplier. You may specify that Supplier's ledger balance should be calculated.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Supplier to return."
        },
        {
          "name": "needBalance",
          "schema": "boolean",
          "required": false,
          "description": "If \"true\" then Supplier's ledger balance will be calculated; otherwise balance will be returned as 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/suppliers/{id}",
      "method": "suppliersPut",
      "httpMethod": "put",
      "tag": "Suppliers",
      "description": "Updates an existing Supplier.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Supplier to update."
        },
        {
          "name": "accountName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "accountNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "additionalEmails",
          "schema": "array",
          "description": ""
        },
        {
          "name": "address",
          "schema": "array",
          "description": ""
        },
        {
          "name": "authCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bank",
          "schema": "object",
          "description": ""
        },
        {
          "name": "businessIdentifierCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "string",
          "description": ""
        },
        {
          "name": "eFTReference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "fax",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "internationalBankAccountNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ledgerBalance",
          "schema": "number",
          "description": ""
        },
        {
          "name": "mobile",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "openingBalance",
          "schema": "object",
          "description": ""
        },
        {
          "name": "openingBalances",
          "schema": "array",
          "description": ""
        },
        {
          "name": "ourCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ownerTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "postponedAccounting",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vatAnalysisTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "vatReg",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vatType",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/suppliers/{itemId}/accountTrans",
      "method": "suppliersGetAccountTrans",
      "httpMethod": "get",
      "tag": "Suppliers",
      "description": "Returns a list of Supplier's account transactions.",
      "parameters": [
        {
          "name": "itemId",
          "schema": "integer",
          "required": true,
          "description": "Id of Supplier to return account transaction."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/suppliers/{itemId}/openingBalance",
      "method": "suppliersGetOpeningBalance",
      "httpMethod": "get",
      "tag": "Suppliers",
      "description": "Returns a Supplier's opening balances, calculated for the next periods: current month, one month old, two months old, three and more months old.",
      "parameters": [
        {
          "name": "itemId",
          "schema": "integer",
          "required": true,
          "description": "Id of Supplier to return opening balances."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/suppliers/{itemId}/openingBalanceList",
      "method": "suppliersGetOpeningBalanceList",
      "httpMethod": "get",
      "tag": "Suppliers",
      "description": "Returns a list of Supplier's opening balance transactions.",
      "parameters": [
        {
          "name": "itemId",
          "schema": "integer",
          "required": true,
          "description": "Id of Supplier to return opening balances transaction."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/userDefinedFields",
      "method": "userDefinedFieldsGet",
      "httpMethod": "get",
      "tag": "UserDefinedFields",
      "description": "Returns a list of company's User Defined Fields. Supports OData querying protocol.\r\nFiltering is allowed by \"categoryTypeId\" field.\r\nOrdering is allowed by \"id\" and \"orderIndex\" fields.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/vatAnalysisTypes",
      "method": "vatAnalysisTypesGet",
      "httpMethod": "get",
      "tag": "VatAnalysisTypes",
      "description": "Returns a list of global Vat Analysis Types. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/vatCategories",
      "method": "vatCategoriesGet",
      "httpMethod": "get",
      "tag": "VatCategories",
      "description": "Returns a list of global Vat Categories. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/vatCategories/vatRates",
      "method": "vatCategoriesProcessVatRates",
      "httpMethod": "post",
      "tag": "VatCategories",
      "description": "Process Vat Rates",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/vatRates",
      "method": "vatRatesGet",
      "httpMethod": "get",
      "tag": "VatRates",
      "description": "Returns a list of company's Vat Rates. Supports OData querying protocol.\r\nFiltering is allowed by \"vatCategoryId\" field.\r\nOrdering is allowed by \"id\" and \"orderIndex\" fields.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/vatTypes",
      "method": "vatTypesGet",
      "httpMethod": "get",
      "tag": "VatTypes",
      "description": "Returns a list of global Vat Types. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://app.bigredcloud.com/api",
  "apiDescription": "\r\n<div style='line-height: 30px;'>\r\n    <strong>Welcome to the Big Red Cloud API</strong><br/>\r\n    This API enables programmatic access to Big Red Cloud data.<br/>\r\n    We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>\r\n    To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>\r\n    Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>\r\n    The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>\r\n    For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>\r\n</div>",
  "apiTitle": "Big Red Cloud API",
  "endpoints": 72,
  "sdkMethods": 111,
  "schemas": 152,
  "parameters": 664,
  "difficultyScore": 353,
  "difficulty": "Hard"
}