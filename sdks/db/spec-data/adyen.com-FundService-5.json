{
  "providerName": "adyen.com",
  "openApiRaw": "https://raw.githubusercontent.com/Adyen/adyen-openapi/main/json/FundService-v5.json",
  "securitySchemes": {
    "ApiKeyAuth": {
      "in": "header",
      "name": "X-API-Key",
      "type": "apiKey"
    },
    "BasicAuth": {
      "scheme": "basic",
      "type": "http"
    }
  },
  "homepage": "adyen.com",
  "serviceName": "FundService",
  "apiVersion": "5",
  "methods": [
    {
      "url": "/accountHolderBalance",
      "method": "postAccountHolderBalance",
      "httpMethod": "post",
      "tag": "General",
      "description": "Get the balances of an account holder",
      "parameters": [
        {
          "name": "accountHolderCode",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/accountHolderTransactionList",
      "method": "postAccountHolderTransactionList",
      "httpMethod": "post",
      "tag": "General",
      "description": "Get a list of transactions",
      "parameters": [
        {
          "name": "accountHolderCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transactionListsPerAccount",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "transactionStatuses",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/debitAccountHolder",
      "method": "postDebitAccountHolder",
      "httpMethod": "post",
      "tag": "General",
      "description": "Send a direct debit request",
      "parameters": [
        {
          "name": "accountHolderCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "amount",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "bankAccountUUID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "merchantAccount",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "splits",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/payoutAccountHolder",
      "method": "postPayoutAccountHolder",
      "httpMethod": "post",
      "tag": "General",
      "description": "Pay out from an account to the account holder",
      "parameters": [
        {
          "name": "accountCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "accountHolderCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "amount",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "bankAccountUUID",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "merchantReference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "payoutMethodCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "payoutSpeed",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/refundFundsTransfer",
      "method": "postRefundFundsTransfer",
      "httpMethod": "post",
      "tag": "General",
      "description": "Refund a funds transfer",
      "parameters": [
        {
          "name": "amount",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "merchantReference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "originalReference",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/refundNotPaidOutTransfers",
      "method": "postRefundNotPaidOutTransfers",
      "httpMethod": "post",
      "tag": "General",
      "description": "Refund all transactions of an account since the most recent payout",
      "parameters": [
        {
          "name": "accountCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "accountHolderCode",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/setupBeneficiary",
      "method": "postSetupBeneficiary",
      "httpMethod": "post",
      "tag": "General",
      "description": "Designate a beneficiary account and transfer the benefactor's current balance",
      "parameters": [
        {
          "name": "destinationAccountCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "merchantReference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sourceAccountCode",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/transferFunds",
      "method": "postTransferFunds",
      "httpMethod": "post",
      "tag": "General",
      "description": "Transfer funds between platform accounts",
      "parameters": [
        {
          "name": "amount",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "destinationAccountCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "merchantReference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sourceAccountCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transferCode",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://cal-test.adyen.com/cal/services/Fund/v5",
  "apiDescription": "This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.\n\nThe Fund API provides endpoints for managing the funds in the accounts on your platform. These management operations include, for example, the transfer of funds from one account to another, the payout of funds to an account holder, and the retrieval of balances in an account.\n\nFor more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/).\n## Authentication\nYour Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication. For example:\n\n```\ncurl\n-U \"ws@MarketPlace.YOUR_PLATFORM_ACCOUNT\":\"YOUR_WS_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\nWhen going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).\n\n## Versioning\nThe Fund API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://cal-test.adyen.com/cal/services/Fund/v5/accountHolderBalance\n```",
  "apiTitle": "Fund API",
  "endpoints": 8,
  "sdkMethods": 8,
  "schemas": 28,
  "parameters": 31,
  "contactUrl": "https://github.com/Adyen/adyen-openapi",
  "difficultyScore": 29.75,
  "difficulty": "Easy"
}