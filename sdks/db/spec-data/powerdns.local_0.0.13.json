{
  "providerName": "powerdns.local",
  "openApiRaw": "https://raw.githubusercontent.com/PowerDNS/pdns/master/docs/http-api/swagger/authoritative-api-swagger.yaml",
  "securitySchemes": {
    "APIKeyHeader": {
      "in": "header",
      "name": "X-API-Key",
      "type": "apiKey"
    }
  },
  "categories": [
    "developer_tools"
  ],
  "homepage": "powerdns.local",
  "apiVersion": "0.0.13",
  "methods": [
    {
      "url": "/servers",
      "method": "listServers",
      "httpMethod": "get",
      "tag": "servers",
      "typeScriptTag": "servers",
      "description": "List all servers",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/servers/{server_id}",
      "method": "listServer",
      "httpMethod": "get",
      "tag": "servers",
      "typeScriptTag": "servers",
      "description": "List a server",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/servers/{server_id}/cache/flush",
      "method": "cacheFlushByName",
      "httpMethod": "put",
      "tag": "servers",
      "typeScriptTag": "servers",
      "description": "Flush a cache-entry by name",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "domain",
          "schema": "string",
          "required": true,
          "description": "The domain name to flush from the cache"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The result of a cache-flush"
        }
      ]
    },
    {
      "url": "/servers/{server_id}/config",
      "method": "getConfig",
      "httpMethod": "get",
      "tag": "config",
      "typeScriptTag": "config",
      "description": "Returns all ConfigSettings for a single server",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/servers/{server_id}/config/{config_setting_name}",
      "method": "getConfigSetting",
      "httpMethod": "get",
      "tag": "config",
      "typeScriptTag": "config",
      "description": "Returns a specific ConfigSetting for a single server",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "configSettingName",
          "schema": "string",
          "required": true,
          "description": "The name of the setting to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/servers/{server_id}/search-data",
      "method": "searchData",
      "httpMethod": "get",
      "tag": "search",
      "typeScriptTag": "search",
      "description": "Search the data inside PowerDNS",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "q",
          "schema": "string",
          "required": true,
          "description": "The string to search for"
        },
        {
          "name": "max",
          "schema": "integer",
          "required": true,
          "description": "Maximum number of entries to return"
        },
        {
          "name": "objectType",
          "schema": "string",
          "required": false,
          "description": "Type of data to search for, one of “all”, “zone”, “record”, “comment”"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/servers/{server_id}/statistics",
      "method": "getStats",
      "httpMethod": "get",
      "tag": "stats",
      "typeScriptTag": "stats",
      "description": "Query statistics.",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "statistic",
          "schema": "string",
          "required": false,
          "description": "When set to the name of a specific statistic, only this value is returned.\nIf no statistic with that name exists, the response has a 422 status and an error message.\n"
        },
        {
          "name": "includerings",
          "schema": "boolean",
          "required": false,
          "description": "“true” (default) or “false”, whether to include the Ring items, which can contain thousands of log messages or queried domains. Setting this to ”false” may make the response a lot smaller."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/servers/{server_id}/tsigkeys",
      "method": "listTsigKeys",
      "httpMethod": "get",
      "tag": "tsigkey",
      "typeScriptTag": "tsigkey",
      "description": "Get all TSIGKeys on the server, except the actual key",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": "Returned when the server encounters an error. Either in client input or internally"
        }
      ]
    },
    {
      "url": "/servers/{server_id}/tsigkeys",
      "method": "createTsigKey",
      "httpMethod": "post",
      "tag": "tsigkey",
      "typeScriptTag": "tsigkey",
      "description": "Add a TSIG key",
      "parameters": [
        {
          "name": "algorithm",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "A TSIG key that can be used to authenticate NOTIFY, AXFR, and DNSUPDATE queries."
        },
        {
          "statusCode": "409",
          "description": "Returned when the server encounters an error. Either in client input or internally"
        },
        {
          "statusCode": "422",
          "description": "Returned when the server encounters an error. Either in client input or internally"
        },
        {
          "statusCode": "500",
          "description": "Returned when the server encounters an error. Either in client input or internally"
        }
      ]
    },
    {
      "url": "/servers/{server_id}/tsigkeys/{tsigkey_id}",
      "method": "deleteTsigKey",
      "httpMethod": "delete",
      "tag": "tsigkey",
      "typeScriptTag": "tsigkey",
      "description": "Delete the TSIGKey with tsigkey_id",
      "parameters": [],
      "responses": [
        {
          "statusCode": "404",
          "description": "Returned when the server encounters an error. Either in client input or internally"
        },
        {
          "statusCode": "500",
          "description": "Returned when the server encounters an error. Either in client input or internally"
        }
      ]
    },
    {
      "url": "/servers/{server_id}/tsigkeys/{tsigkey_id}",
      "method": "getTsigKey",
      "httpMethod": "get",
      "tag": "tsigkey",
      "typeScriptTag": "tsigkey",
      "description": "Get a specific TSIGKeys on the server, including the actual key",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "A TSIG key that can be used to authenticate NOTIFY, AXFR, and DNSUPDATE queries."
        },
        {
          "statusCode": "404",
          "description": "Returned when the server encounters an error. Either in client input or internally"
        },
        {
          "statusCode": "500",
          "description": "Returned when the server encounters an error. Either in client input or internally"
        }
      ]
    },
    {
      "url": "/servers/{server_id}/tsigkeys/{tsigkey_id}",
      "method": "putTsigKey",
      "httpMethod": "put",
      "tag": "tsigkey",
      "typeScriptTag": "tsigkey",
      "description": "The TSIGKey at tsigkey_id can be changed in multiple ways:\n * Changing the Name, this will remove the key with tsigkey_id after adding.\n * Changing the Algorithm\n * Changing the Key\n\nOnly the relevant fields have to be provided in the request body.\n",
      "parameters": [
        {
          "name": "algorithm",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A TSIG key that can be used to authenticate NOTIFY, AXFR, and DNSUPDATE queries."
        },
        {
          "statusCode": "404",
          "description": "Returned when the server encounters an error. Either in client input or internally"
        },
        {
          "statusCode": "500",
          "description": "Returned when the server encounters an error. Either in client input or internally"
        }
      ]
    },
    {
      "url": "/servers/{server_id}/zones",
      "method": "listZones",
      "httpMethod": "get",
      "tag": "zones",
      "typeScriptTag": "zones",
      "description": "List all Zones in a server",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "zone",
          "schema": "string",
          "required": false,
          "description": "When set to the name of a zone, only this zone is returned.\nIf no zone with that name exists, the response is an empty array.\nThis can e.g. be used to check if a zone exists in the database without having to guess/encode the zone's id or to check if a zone exists.\n"
        },
        {
          "name": "dnssec",
          "schema": "boolean",
          "required": false,
          "description": "“true” (default) or “false”, whether to include the “dnssec” and ”edited_serial” fields in the Zone objects. Setting this to ”false” will make the query a lot faster."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/servers/{server_id}/zones",
      "method": "createZone",
      "httpMethod": "post",
      "tag": "zones",
      "typeScriptTag": "zones",
      "description": "Creates a new domain, returns the Zone on creation.",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "rrsets",
          "schema": "boolean",
          "description": "“true” (default) or “false”, whether to include the “rrsets” in the response Zone object."
        },
        {
          "name": "account",
          "schema": "string",
          "description": ""
        },
        {
          "name": "api_rectify",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "dnssec",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "edited_serial",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "kind",
          "schema": "string",
          "description": ""
        },
        {
          "name": "master_tsig_key_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "masters",
          "schema": "array",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "nameservers",
          "schema": "array",
          "description": ""
        },
        {
          "name": "notified_serial",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "nsec3narrow",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "nsec3param",
          "schema": "string",
          "description": ""
        },
        {
          "name": "presigned",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "rrsets",
          "schema": "array",
          "description": ""
        },
        {
          "name": "serial",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "slave_tsig_key_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "soa_edit",
          "schema": "string",
          "description": ""
        },
        {
          "name": "soa_edit_api",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "zone",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "This represents an authoritative DNS Zone."
        }
      ]
    },
    {
      "url": "/servers/{server_id}/zones/{zone_id}",
      "method": "deleteZone",
      "httpMethod": "delete",
      "tag": "zones",
      "typeScriptTag": "zones",
      "description": "Deletes this zone, all attached metadata and rrsets.",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": "The id of the zone to retrieve"
        }
      ],
      "responses": []
    },
    {
      "url": "/servers/{server_id}/zones/{zone_id}",
      "method": "listZone",
      "httpMethod": "get",
      "tag": "zones",
      "typeScriptTag": "zones",
      "description": "zone managed by a server",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": "The id of the zone to retrieve"
        },
        {
          "name": "rrsets",
          "schema": "boolean",
          "description": "“true” (default) or “false”, whether to include the “rrsets” in the response Zone object."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This represents an authoritative DNS Zone."
        }
      ]
    },
    {
      "url": "/servers/{server_id}/zones/{zone_id}",
      "method": "patchZone",
      "httpMethod": "patch",
      "tag": "zones",
      "typeScriptTag": "zones",
      "description": "Creates/modifies/deletes RRsets present in the payload and their comments. Returns 204 No Content on success.",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "account",
          "schema": "string",
          "description": ""
        },
        {
          "name": "api_rectify",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "dnssec",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "edited_serial",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "kind",
          "schema": "string",
          "description": ""
        },
        {
          "name": "master_tsig_key_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "masters",
          "schema": "array",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "nameservers",
          "schema": "array",
          "description": ""
        },
        {
          "name": "notified_serial",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "nsec3narrow",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "nsec3param",
          "schema": "string",
          "description": ""
        },
        {
          "name": "presigned",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "rrsets",
          "schema": "array",
          "description": ""
        },
        {
          "name": "serial",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "slave_tsig_key_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "soa_edit",
          "schema": "string",
          "description": ""
        },
        {
          "name": "soa_edit_api",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "zone",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/servers/{server_id}/zones/{zone_id}",
      "method": "putZone",
      "httpMethod": "put",
      "tag": "zones",
      "typeScriptTag": "zones",
      "description": "Modifies basic zone data.",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "account",
          "schema": "string",
          "description": ""
        },
        {
          "name": "api_rectify",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "dnssec",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "edited_serial",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "kind",
          "schema": "string",
          "description": ""
        },
        {
          "name": "master_tsig_key_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "masters",
          "schema": "array",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "nameservers",
          "schema": "array",
          "description": ""
        },
        {
          "name": "notified_serial",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "nsec3narrow",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "nsec3param",
          "schema": "string",
          "description": ""
        },
        {
          "name": "presigned",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "rrsets",
          "schema": "array",
          "description": ""
        },
        {
          "name": "serial",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "slave_tsig_key_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "soa_edit",
          "schema": "string",
          "description": ""
        },
        {
          "name": "soa_edit_api",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "zone",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/servers/{server_id}/zones/{zone_id}/axfr-retrieve",
      "method": "axfrRetrieveZone",
      "httpMethod": "put",
      "tag": "zones",
      "typeScriptTag": "zones",
      "description": "Retrieve slave zone from its master.",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": "The id of the zone to retrieve"
        }
      ],
      "responses": []
    },
    {
      "url": "/servers/{server_id}/zones/{zone_id}/cryptokeys",
      "method": "listCryptokeys",
      "httpMethod": "get",
      "tag": "zonecryptokey",
      "typeScriptTag": "zonecryptokey",
      "description": "Get all CryptoKeys for a zone, except the privatekey",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": "The id of the zone to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/servers/{server_id}/zones/{zone_id}/cryptokeys",
      "method": "createCryptokey",
      "httpMethod": "post",
      "tag": "zonecryptokey",
      "typeScriptTag": "zonecryptokey",
      "description": "Creates a Cryptokey",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "algorithm",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bits",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "dnskey",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "keytype",
          "schema": "string",
          "description": ""
        },
        {
          "name": "privatekey",
          "schema": "string",
          "description": ""
        },
        {
          "name": "published",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Describes a DNSSEC cryptographic key"
        }
      ]
    },
    {
      "url": "/servers/{server_id}/zones/{zone_id}/cryptokeys/{cryptokey_id}",
      "method": "deleteCryptokey",
      "httpMethod": "delete",
      "tag": "zonecryptokey",
      "typeScriptTag": "zonecryptokey",
      "description": "This method deletes a key specified by cryptokey_id.",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": "The id of the zone to retrieve"
        },
        {
          "name": "cryptokeyId",
          "schema": "string",
          "required": true,
          "description": "The id value of the Cryptokey"
        }
      ],
      "responses": []
    },
    {
      "url": "/servers/{server_id}/zones/{zone_id}/cryptokeys/{cryptokey_id}",
      "method": "getCryptokey",
      "httpMethod": "get",
      "tag": "zonecryptokey",
      "typeScriptTag": "zonecryptokey",
      "description": "Returns all data about the CryptoKey, including the privatekey.",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": "The id of the zone to retrieve"
        },
        {
          "name": "cryptokeyId",
          "schema": "string",
          "required": true,
          "description": "The id value of the CryptoKey"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describes a DNSSEC cryptographic key"
        }
      ]
    },
    {
      "url": "/servers/{server_id}/zones/{zone_id}/cryptokeys/{cryptokey_id}",
      "method": "modifyCryptokey",
      "httpMethod": "put",
      "tag": "zonecryptokey",
      "typeScriptTag": "zonecryptokey",
      "description": "This method (de)activates a key from zone_name specified by cryptokey_id",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "cryptokeyId",
          "schema": "string",
          "required": true,
          "description": "Cryptokey to manipulate"
        },
        {
          "name": "active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "algorithm",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bits",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "dnskey",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "keytype",
          "schema": "string",
          "description": ""
        },
        {
          "name": "privatekey",
          "schema": "string",
          "description": ""
        },
        {
          "name": "published",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/servers/{server_id}/zones/{zone_id}/export",
      "method": "axfrExportZone",
      "httpMethod": "get",
      "tag": "zones",
      "typeScriptTag": "zones",
      "description": "Returns the zone in AXFR format.",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": "The id of the zone to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/servers/{server_id}/zones/{zone_id}/metadata",
      "method": "listMetadata",
      "httpMethod": "get",
      "tag": "zonemetadata",
      "typeScriptTag": "zonemetadata",
      "description": "Get all the Metadata associated with the zone.",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": "The id of the zone to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/servers/{server_id}/zones/{zone_id}/metadata",
      "method": "createMetadata",
      "httpMethod": "post",
      "tag": "zonemetadata",
      "typeScriptTag": "zonemetadata",
      "description": "Creates a set of metadata entries",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "kind",
          "schema": "string",
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/servers/{server_id}/zones/{zone_id}/metadata/{metadata_kind}",
      "method": "deleteMetadata",
      "httpMethod": "delete",
      "tag": "zonemetadata",
      "typeScriptTag": "zonemetadata",
      "description": "Delete all items of a single kind of domain metadata.",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": "The id of the zone to retrieve"
        },
        {
          "name": "metadataKind",
          "schema": "string",
          "required": true,
          "description": "The kind of metadata"
        }
      ],
      "responses": []
    },
    {
      "url": "/servers/{server_id}/zones/{zone_id}/metadata/{metadata_kind}",
      "method": "getMetadata",
      "httpMethod": "get",
      "tag": "zonemetadata",
      "typeScriptTag": "zonemetadata",
      "description": "Get the content of a single kind of domain metadata as a Metadata object.",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": "The id of the zone to retrieve"
        },
        {
          "name": "metadataKind",
          "schema": "string",
          "required": true,
          "description": "The kind of metadata"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents zone metadata"
        }
      ]
    },
    {
      "url": "/servers/{server_id}/zones/{zone_id}/metadata/{metadata_kind}",
      "method": "modifyMetadata",
      "httpMethod": "put",
      "tag": "zonemetadata",
      "typeScriptTag": "zonemetadata",
      "description": "Replace the content of a single kind of domain metadata.",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "metadataKind",
          "schema": "string",
          "required": true,
          "description": "The kind of metadata"
        },
        {
          "name": "kind",
          "schema": "string",
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents zone metadata"
        }
      ]
    },
    {
      "url": "/servers/{server_id}/zones/{zone_id}/notify",
      "method": "notifyZone",
      "httpMethod": "put",
      "tag": "zones",
      "typeScriptTag": "zones",
      "description": "Send a DNS NOTIFY to all slaves.",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": "The id of the zone to retrieve"
        }
      ],
      "responses": []
    },
    {
      "url": "/servers/{server_id}/zones/{zone_id}/rectify",
      "method": "rectifyZone",
      "httpMethod": "put",
      "tag": "zones",
      "typeScriptTag": "zones",
      "description": "Rectify the zone data.",
      "parameters": [
        {
          "name": "serverId",
          "schema": "string",
          "required": true,
          "description": "The id of the server to retrieve"
        },
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": "The id of the zone to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "/api/v1",
  "apiTitle": "PowerDNS Authoritative HTTP API",
  "endpoints": 19,
  "sdkMethods": 34,
  "schemas": 22,
  "parameters": 161,
  "difficultyScore": 85.25,
  "difficulty": "Easy"
}