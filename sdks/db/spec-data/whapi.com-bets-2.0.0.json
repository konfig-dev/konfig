{
  "providerName": "whapi.com",
  "openApiRaw": "https://developer.williamhill.com/wh-docs/docs-sdks/bets/swagger/docs",
  "securitySchemes": {},
  "homepage": "whapi.com",
  "serviceName": "bets",
  "apiVersion": "2.0.0",
  "methods": [
    {
      "url": "/bet/complex",
      "method": "placeComplexBet",
      "httpMethod": "post",
      "tag": "Bets",
      "description": "Places a multiple or a complex bet.",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "required": true,
          "description": "A unique identifier of your application that is generated by the API portal."
        },
        {
          "name": "apiSecret",
          "schema": "string",
          "required": true,
          "description": "Another unique identifier for your application."
        },
        {
          "name": "apiTicket",
          "schema": "string",
          "required": true,
          "description": "The ticket obtained from the sessions API"
        },
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "Specify an absolute field list to return (Comma Separated List)"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "Specify fields in addition to the default to return (Comma Separated List)"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "Specify fields from the default to exclude (Comma Separated List)"
        },
        {
          "name": "bets",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/bet/single",
      "method": "placeSingleBet",
      "httpMethod": "post",
      "tag": "Bets",
      "description": "Places a single bet",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "required": true,
          "description": "A unique identifier of your application that is generated by the API portal."
        },
        {
          "name": "apiSecret",
          "schema": "string",
          "required": true,
          "description": "Another unique identifier for your application."
        },
        {
          "name": "apiTicket",
          "schema": "string",
          "required": true,
          "description": "The ticket obtained from the sessions API"
        },
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "Specify an absolute field list to return (Comma Separated List)"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "Specify fields in addition to the default to return (Comma Separated List)"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "Specify fields from the default to exclude (Comma Separated List)"
        },
        {
          "name": "delayedBetId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "freeBetId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "priceDen",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "priceNum",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "priceType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "selectionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "stake",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/betslips",
      "method": "validateBetslip",
      "httpMethod": "post",
      "tag": "Bets",
      "description": "Organises the betslip when one or more selections are made. It returns a bet slip structure organised by betting opportunities.",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "required": true,
          "description": "A unique identifier of your application that is generated by the API portal."
        },
        {
          "name": "apiSecret",
          "schema": "string",
          "required": true,
          "description": "Another unique identifier for your application."
        },
        {
          "name": "expanded",
          "schema": "string",
          "required": false,
          "description": "Allows for all bets for given selections to be returned - not just the specified type"
        },
        {
          "name": "legs",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/freebets",
      "method": "getFreeBets",
      "httpMethod": "get",
      "tag": "Bets",
      "description": "Returns available free bets",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "required": true,
          "description": "A unique identifier of your application that is generated by the API portal."
        },
        {
          "name": "apiSecret",
          "schema": "string",
          "required": true,
          "description": "Another unique identifier for your application."
        },
        {
          "name": "apiTicket",
          "schema": "string",
          "required": true,
          "description": "The ticket obtained from the sessions API"
        },
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "Specify an absolute field list to return (Comma Separated List)"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "Specify fields in addition to the default to return (Comma Separated List)"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "Specify fields from the default to exclude (Comma Separated List)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/history",
      "method": "getBetHistory",
      "httpMethod": "get",
      "tag": "Bets",
      "description": "Retrieves the customerâ€™s bet history.",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "required": true,
          "description": "A unique identifier of your application that is generated by the API portal."
        },
        {
          "name": "apiSecret",
          "schema": "string",
          "required": true,
          "description": "Another unique identifier for your application."
        },
        {
          "name": "apiTicket",
          "schema": "string",
          "required": true,
          "description": "The ticket obtained from the sessions API"
        },
        {
          "name": "dateFrom",
          "schema": "string",
          "required": true,
          "description": "The UTC FROM datetime from bets to be returned. (yyyy-MM-ddTHH:mm:ss)"
        },
        {
          "name": "dateTo",
          "schema": "string",
          "required": true,
          "description": "The UTC TO datetime for bets to be returned. (yyyy-MM-ddTHH:mm:ss)"
        },
        {
          "name": "fields",
          "schema": "array",
          "required": false,
          "description": "Specify an absolute field list to return (Comma Separated List)"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "Specify fields in addition to the default to return (Comma Separated List)"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "Specify fields from the default to exclude (Comma Separated List)"
        },
        {
          "name": "page",
          "schema": "number",
          "description": "The index of the page to return"
        },
        {
          "name": "pageSize",
          "schema": "number",
          "description": "The number of results per page"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "The order the response will be retuned by. i.e. transDateTime,desc. Only transDateTime can be used currently"
        },
        {
          "name": "settled",
          "schema": "boolean",
          "required": false,
          "description": "Filter by settled bets. If omitted, both settled and unsettled will be returned."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/{betId}/cashin",
      "method": "cashin",
      "httpMethod": "put",
      "tag": "Bets",
      "description": "Allows a trusted application to cash in a bet (take a return on a bet) on behalf of the customer",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "required": true,
          "description": "A unique identifier of your application that is generated by the API portal."
        },
        {
          "name": "apiSecret",
          "schema": "string",
          "required": true,
          "description": "Another unique identifier for your application."
        },
        {
          "name": "apiTicket",
          "schema": "string",
          "required": true,
          "description": "The ticket obtained from the sessions API"
        },
        {
          "name": "betId",
          "schema": "string",
          "required": true,
          "description": "The identifier of the bet"
        },
        {
          "name": "cashInValue",
          "schema": "number",
          "required": true,
          "description": "The cash in value of the bet"
        },
        {
          "name": "cashinBetDelayId",
          "schema": "string",
          "required": true,
          "description": "The ID of this bet delay"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://sandbox.whapi.com/v2/bets",
  "apiDescription": "The Bets API methods are used to place single, multiple and complex bets and to retrieve a customerâ€™s bet history. When retrieving a customerâ€™s bet history you can organize the bets from the betting history in terms of date, bet type and whether the bet is settled or not. You can also specify what fields to be included/excluded or return a list of all default fields the method returns. <br /><br /> The Bets API will also generate a bet delay if youâ€™re placing a single/multiple bet in-Play by creating a time margin to negate the effects of major changes to the market (for example, goals during a football match). Note that in version 2 of our APIs, Bets API contains the functionality of both Bets API v1 and the Betslips API v1.",
  "apiTitle": "Bets API",
  "endpoints": 6,
  "sdkMethods": 6,
  "schemas": 26,
  "parameters": 49,
  "contactUrl": "http://developer.williamhill.com",
  "contactEmail": "platform@williamhill.com",
  "difficultyScore": 31.25,
  "difficulty": "Easy"
}