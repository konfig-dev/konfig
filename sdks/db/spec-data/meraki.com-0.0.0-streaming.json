{
  "providerName": "meraki.com",
  "openApiRaw": "https://api.meraki.com/api/v0/openapiSpec",
  "homepage": "meraki.com",
  "apiVersion": "0.0.0-streaming",
  "methods": [
    {
      "url": "/devices/{serial}/camera/analytics/live",
      "method": "getDeviceCameraAnalyticsLive",
      "httpMethod": "get",
      "tag": "MV Sense",
      "description": "Returns live state from camera of analytics zones",
      "parameters": [
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/devices/{serial}/camera/analytics/overview",
      "method": "getDeviceCameraAnalyticsOverview",
      "httpMethod": "get",
      "tag": "MV Sense",
      "description": "Returns an overview of aggregate analytics data for a timespan",
      "parameters": [
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
        },
        {
          "name": "t1",
          "schema": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 1 hour."
        },
        {
          "name": "objectType",
          "schema": "string",
          "description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/devices/{serial}/camera/analytics/recent",
      "method": "getDeviceCameraAnalyticsRecent",
      "httpMethod": "get",
      "tag": "MV Sense",
      "description": "Returns most recent record for analytics zones",
      "parameters": [
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "objectType",
          "schema": "string",
          "description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/devices/{serial}/camera/analytics/zones",
      "method": "getDeviceCameraAnalyticsZones",
      "httpMethod": "get",
      "tag": "MV Sense",
      "description": "Returns all configured analytic zones for this camera",
      "parameters": [
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
      "method": "getDeviceCameraAnalyticsZoneHistory",
      "httpMethod": "get",
      "tag": "MV Sense",
      "description": "Return historical records for analytic zones",
      "parameters": [
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zoneId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
        },
        {
          "name": "t1",
          "schema": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 14 hours after t0."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 hours. The default is 1 hour."
        },
        {
          "name": "resolution",
          "schema": "integer",
          "description": "The time resolution in seconds for returned data. The valid resolutions are: 60. The default is 60."
        },
        {
          "name": "objectType",
          "schema": "string",
          "description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/devices/{serial}/camera/video/settings",
      "method": "getDeviceCameraVideoSettings",
      "httpMethod": "get",
      "tag": "Cameras",
      "description": "Returns video settings for the given camera",
      "parameters": [
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/devices/{serial}/camera/video/settings",
      "method": "updateDeviceCameraVideoSettings",
      "httpMethod": "put",
      "tag": "Cameras",
      "description": "Update video settings for the given camera",
      "parameters": [
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "externalRtspEnabled",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/devices/{serial}/cellularGateway/settings",
      "method": "getDeviceCellularGatewaySettings",
      "httpMethod": "get",
      "tag": "MG LAN settings",
      "description": "Show the LAN Settings of a MG",
      "parameters": [
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/devices/{serial}/cellularGateway/settings",
      "method": "updateDeviceCellularGatewaySettings",
      "httpMethod": "put",
      "tag": "MG LAN settings",
      "description": "Update the LAN Settings for a single MG.",
      "parameters": [
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "fixedIpAssignments",
          "schema": "array",
          "description": ""
        },
        {
          "name": "reservedIpRanges",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/devices/{serial}/cellularGateway/settings/portForwardingRules",
      "method": "getDeviceCellularGatewaySettingsPortForwardingRules",
      "httpMethod": "get",
      "tag": "MG port forwarding rules",
      "description": "Returns the port forwarding rules for a single MG.",
      "parameters": [
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/devices/{serial}/cellularGateway/settings/portForwardingRules",
      "method": "updateDeviceCellularGatewaySettingsPortForwardingRules",
      "httpMethod": "put",
      "tag": "MG port forwarding rules",
      "description": "Updates the port forwarding rules for a single MG.",
      "parameters": [
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "rules",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/devices/{serial}/clients",
      "method": "getDeviceClients",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "List the clients of a device, up to a maximum of a month ago",
      "parameters": [
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/devices/{serial}/switch/ports/cycle",
      "method": "cycleDeviceSwitchPorts",
      "httpMethod": "post",
      "tag": "Devices",
      "description": "Cycle a set of switch ports",
      "parameters": [
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ports",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/devices/{serial}/switchPortStatuses",
      "method": "getDeviceSwitchPortStatuses",
      "httpMethod": "get",
      "tag": "Switch ports",
      "description": "Return the status for all the ports of a switch",
      "parameters": [
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/devices/{serial}/switchPortStatuses/packets",
      "method": "getDeviceSwitchPortStatusesPackets",
      "httpMethod": "get",
      "tag": "Switch ports",
      "description": "Return the packet counters for all the ports of a switch",
      "parameters": [
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 1 day from today."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 1 day. The default is 1 day."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/devices/{serial}/wireless/bluetooth/settings",
      "method": "updateDeviceWirelessBluetoothSettings",
      "httpMethod": "put",
      "tag": "Bluetooth settings",
      "description": "Update the bluetooth settings for a wireless device",
      "parameters": [
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "major",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "minor",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "uuid",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}",
      "method": "deleteNetwork",
      "httpMethod": "delete",
      "tag": "Networks",
      "description": "Delete a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/networks/{networkId}",
      "method": "getNetwork",
      "httpMethod": "get",
      "tag": "Networks",
      "description": "Return a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}",
      "method": "updateNetwork",
      "httpMethod": "put",
      "tag": "Networks",
      "description": "Update a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "disableMyMerakiCom",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "disableRemoteStatusPage",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "enrollmentString",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tags",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timeZone",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/accessPolicies",
      "method": "getNetworkAccessPolicies",
      "httpMethod": "get",
      "tag": "Switch access policies",
      "description": "List the access policies for this network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/airMarshal",
      "method": "getNetworkAirMarshal",
      "httpMethod": "get",
      "tag": "Networks",
      "description": "List Air Marshal scan results from a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/alertSettings",
      "method": "getNetworkAlertSettings",
      "httpMethod": "get",
      "tag": "Alert settings",
      "description": "Return the alert configuration for this network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/alertSettings",
      "method": "updateNetworkAlertSettings",
      "httpMethod": "put",
      "tag": "Alert settings",
      "description": "Update the alert configuration for this network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "alerts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "defaultDestinations",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/appliance/firewall/inboundFirewallRules",
      "method": "getNetworkApplianceFirewallInboundFirewallRules",
      "httpMethod": "get",
      "tag": "MX L3 inbound firewall",
      "description": "Return the inbound firewall rules for an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/appliance/firewall/inboundFirewallRules",
      "method": "updateNetworkApplianceFirewallInboundFirewallRules",
      "httpMethod": "put",
      "tag": "MX L3 inbound firewall",
      "description": "Update the inbound firewall rules of an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "rules",
          "schema": "array",
          "description": ""
        },
        {
          "name": "syslogDefaultRule",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/appliancePorts",
      "method": "getNetworkAppliancePorts",
      "httpMethod": "get",
      "tag": "MX VLAN ports",
      "description": "List per-port VLAN settings for all ports of a MX.",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/appliancePorts/{appliancePortId}",
      "method": "getNetworkAppliancePort",
      "httpMethod": "get",
      "tag": "MX VLAN ports",
      "description": "Return per-port VLAN settings for a single MX port.",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "appliancePortId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/appliancePorts/{appliancePortId}",
      "method": "updateNetworkAppliancePort",
      "httpMethod": "put",
      "tag": "MX VLAN ports",
      "description": "Update the per-port VLAN settings for a single MX port.",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "appliancePortId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "accessPolicy",
          "schema": "string",
          "description": ""
        },
        {
          "name": "allowedVlans",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dropUntaggedTraffic",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vlan",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/bind",
      "method": "bindNetwork",
      "httpMethod": "post",
      "tag": "Networks",
      "description": "Bind a network to a template.",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "autoBind",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "configTemplateId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/networks/{networkId}/bluetoothClients",
      "method": "getNetworkBluetoothClients",
      "httpMethod": "get",
      "tag": "Bluetooth clients",
      "description": "List the Bluetooth clients seen by APs in this network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 7 days from today."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10."
        },
        {
          "name": "startingAfter",
          "schema": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "schema": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "includeConnectivityHistory",
          "schema": "boolean",
          "description": "Include the connectivity history for this client"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/bluetoothClients/{bluetoothClientId}",
      "method": "getNetworkBluetoothClient",
      "httpMethod": "get",
      "tag": "Bluetooth clients",
      "description": "Return a Bluetooth client",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "bluetoothClientId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "includeConnectivityHistory",
          "schema": "boolean",
          "description": "Include the connectivity history for this client"
        },
        {
          "name": "connectivityHistoryTimespan",
          "schema": "integer",
          "description": "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/bluetoothSettings",
      "method": "getNetworkBluetoothSettings",
      "httpMethod": "get",
      "tag": "Bluetooth settings",
      "description": "Return the Bluetooth settings for a network. <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network.",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/bluetoothSettings",
      "method": "updateNetworkBluetoothSettings",
      "httpMethod": "put",
      "tag": "Bluetooth settings",
      "description": "Update the Bluetooth settings for a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "advertisingEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "major",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "majorMinorAssignmentMode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minor",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "scanningEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "uuid",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/camera/qualityRetentionProfiles",
      "method": "getNetworkCameraQualityRetentionProfiles",
      "httpMethod": "get",
      "tag": "Camera quality retention profiles",
      "description": "List the quality retention profiles for this network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/camera/qualityRetentionProfiles",
      "method": "createNetworkCameraQualityRetentionProfile",
      "httpMethod": "post",
      "tag": "Camera quality retention profiles",
      "description": "Creates new quality retention profile for this network.",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "audioRecordingEnabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "cloudArchiveEnabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "maxRetentionDays",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "motionBasedRetentionEnabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "motionDetectorVersion",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "restrictedBandwidthModeEnabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "scheduleId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "videoSettings",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}",
      "method": "deleteNetworkCameraQualityRetentionProfile",
      "httpMethod": "delete",
      "tag": "Camera quality retention profiles",
      "description": "Delete an existing quality retention profile for this network.",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "qualityRetentionProfileId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}",
      "method": "getNetworkCameraQualityRetentionProfile",
      "httpMethod": "get",
      "tag": "Camera quality retention profiles",
      "description": "Retrieve a single quality retention profile",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "qualityRetentionProfileId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}",
      "method": "updateNetworkCameraQualityRetentionProfile",
      "httpMethod": "put",
      "tag": "Camera quality retention profiles",
      "description": "Update an existing quality retention profile for this network.",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "qualityRetentionProfileId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "audioRecordingEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "cloudArchiveEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "maxRetentionDays",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "motionBasedRetentionEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "motionDetectorVersion",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "restrictedBandwidthModeEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "scheduleId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "videoSettings",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/camera/schedules",
      "method": "getNetworkCameraSchedules",
      "httpMethod": "get",
      "tag": "Cameras",
      "description": "Returns a list of all camera recording schedules.",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/cameras/{serial}/snapshot",
      "method": "generateNetworkCameraSnapshot",
      "httpMethod": "post",
      "tag": "Cameras",
      "description": "Generate a snapshot of what the camera sees at the specified time and return a link to that image.",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "fullframe",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/cameras/{serial}/videoLink",
      "method": "getNetworkCameraVideoLink",
      "httpMethod": "get",
      "tag": "Cameras",
      "description": "Returns video link to the specified camera",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": "[optional] The video link will start at this timestamp. The timestamp is in UNIX Epoch time (milliseconds). If no timestamp is specified, we will assume current time."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/cellularFirewallRules",
      "method": "getNetworkCellularFirewallRules",
      "httpMethod": "get",
      "tag": "MX cellular firewall",
      "description": "Return the cellular firewall rules for an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/cellularFirewallRules",
      "method": "updateNetworkCellularFirewallRules",
      "httpMethod": "put",
      "tag": "MX cellular firewall",
      "description": "Update the cellular firewall rules of an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "rules",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/clients",
      "method": "getNetworkClients",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "List the clients that have used this network in the timespan",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10."
        },
        {
          "name": "startingAfter",
          "schema": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "schema": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/clients/connectionStats",
      "method": "getNetworkClientsConnectionStats",
      "httpMethod": "get",
      "tag": "Wireless health",
      "description": "Aggregated connectivity info for this network, grouped by clients",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "schema": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "band",
          "schema": "string",
          "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information."
        },
        {
          "name": "ssid",
          "schema": "integer",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "schema": "integer",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "schema": "string",
          "description": "Filter results by AP Tag"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/clients/latencyStats",
      "method": "getNetworkClientsLatencyStats",
      "httpMethod": "get",
      "tag": "Wireless health",
      "description": "Aggregated latency info for this network, grouped by clients",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "schema": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "band",
          "schema": "string",
          "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information."
        },
        {
          "name": "ssid",
          "schema": "integer",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "schema": "integer",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "schema": "string",
          "description": "Filter results by AP Tag"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/clients/provision",
      "method": "provisionNetworkClients",
      "httpMethod": "post",
      "tag": "Clients",
      "description": "Provisions a client with a name and policy",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "devicePolicy",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "groupPolicyId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "policiesBySecurityAppliance",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "policiesBySsid",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/clients/{clientId}",
      "method": "getNetworkClient",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Return the client associated with the given identifier",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/clients/{clientId}/connectionStats",
      "method": "getNetworkClientConnectionStats",
      "httpMethod": "get",
      "tag": "Wireless health",
      "description": "Aggregated connectivity info for a given client on this network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "schema": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "band",
          "schema": "string",
          "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information."
        },
        {
          "name": "ssid",
          "schema": "integer",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "schema": "integer",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "schema": "string",
          "description": "Filter results by AP Tag"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/clients/{clientId}/events",
      "method": "getNetworkClientEvents",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Return the events associated with this client",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "The number of entries per page returned. Acceptable range is 3 - 100. Default is 100."
        },
        {
          "name": "startingAfter",
          "schema": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "schema": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/clients/{clientId}/latencyHistory",
      "method": "getNetworkClientLatencyHistory",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Return the latency history for a client",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 791 days from today."
        },
        {
          "name": "t1",
          "schema": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 1 day."
        },
        {
          "name": "resolution",
          "schema": "integer",
          "description": "The time resolution in seconds for returned data. The valid resolutions are: 86400. The default is 86400."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/clients/{clientId}/latencyStats",
      "method": "getNetworkClientLatencyStats",
      "httpMethod": "get",
      "tag": "Wireless health",
      "description": "Aggregated latency info for a given client on this network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "schema": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "band",
          "schema": "string",
          "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information."
        },
        {
          "name": "ssid",
          "schema": "integer",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "schema": "integer",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "schema": "string",
          "description": "Filter results by AP Tag"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/clients/{clientId}/policy",
      "method": "getNetworkClientPolicy",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Return the policy assigned to a client on the network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/clients/{clientId}/policy",
      "method": "updateNetworkClientPolicy",
      "httpMethod": "put",
      "tag": "Clients",
      "description": "Update the policy assigned to a client on the network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "devicePolicy",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "groupPolicyId",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
      "method": "getNetworkClientSplashAuthorizationStatus",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Return the splash authorization for a client, for each SSID they've associated with through splash",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
      "method": "updateNetworkClientSplashAuthorizationStatus",
      "httpMethod": "put",
      "tag": "Clients",
      "description": "Update a client's splash authorization",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ssids",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/clients/{clientId}/usageHistory",
      "method": "getNetworkClientUsageHistory",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Return the client's daily usage history",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/connectionStats",
      "method": "getNetworkConnectionStats",
      "httpMethod": "get",
      "tag": "Wireless health",
      "description": "Aggregated connectivity info for this network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "schema": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "band",
          "schema": "string",
          "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information."
        },
        {
          "name": "ssid",
          "schema": "integer",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "schema": "integer",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "schema": "string",
          "description": "Filter results by AP Tag"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/contentFiltering",
      "method": "getNetworkContentFiltering",
      "httpMethod": "get",
      "tag": "Content filtering rules",
      "description": "Return the content filtering settings for an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/contentFiltering",
      "method": "updateNetworkContentFiltering",
      "httpMethod": "put",
      "tag": "Content filtering rules",
      "description": "Update the content filtering settings for an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "allowedUrlPatterns",
          "schema": "array",
          "description": ""
        },
        {
          "name": "blockedUrlCategories",
          "schema": "array",
          "description": ""
        },
        {
          "name": "blockedUrlPatterns",
          "schema": "array",
          "description": ""
        },
        {
          "name": "urlCategoryListSize",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/contentFiltering/categories",
      "method": "getNetworkContentFilteringCategories",
      "httpMethod": "get",
      "tag": "Content filtering categories",
      "description": "List all available content filtering categories for an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/devices",
      "method": "getNetworkDevices",
      "httpMethod": "get",
      "tag": "Devices",
      "description": "List the devices in a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/devices/claim",
      "method": "claimNetworkDevices",
      "httpMethod": "post",
      "tag": "Devices",
      "description": "Claim devices into a network. (Note: for recently claimed devices, it may take a few minutes for API requests against that device to succeed)",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serial",
          "schema": "string",
          "description": ""
        },
        {
          "name": "serials",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/networks/{networkId}/devices/connectionStats",
      "method": "getNetworkDevicesConnectionStats",
      "httpMethod": "get",
      "tag": "Wireless health",
      "description": "Aggregated connectivity info for this network, grouped by node",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "schema": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "band",
          "schema": "string",
          "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information."
        },
        {
          "name": "ssid",
          "schema": "integer",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "schema": "integer",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "schema": "string",
          "description": "Filter results by AP Tag"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/devices/latencyStats",
      "method": "getNetworkDevicesLatencyStats",
      "httpMethod": "get",
      "tag": "Wireless health",
      "description": "Aggregated latency info for this network, grouped by node",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "schema": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "band",
          "schema": "string",
          "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information."
        },
        {
          "name": "ssid",
          "schema": "integer",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "schema": "integer",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "schema": "string",
          "description": "Filter results by AP Tag"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/devices/{serial}",
      "method": "getNetworkDevice",
      "httpMethod": "get",
      "tag": "Devices",
      "description": "Return a single device",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/devices/{serial}",
      "method": "updateNetworkDevice",
      "httpMethod": "put",
      "tag": "Devices",
      "description": "Update the attributes of a device",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "address",
          "schema": "string",
          "description": ""
        },
        {
          "name": "floorPlanId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lat",
          "schema": "number",
          "description": ""
        },
        {
          "name": "lng",
          "schema": "number",
          "description": ""
        },
        {
          "name": "moveMapMarker",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "switchProfileId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tags",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/devices/{serial}/connectionStats",
      "method": "getNetworkDeviceConnectionStats",
      "httpMethod": "get",
      "tag": "Wireless health",
      "description": "Aggregated connectivity info for a given AP on this network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "schema": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "band",
          "schema": "string",
          "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information."
        },
        {
          "name": "ssid",
          "schema": "integer",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "schema": "integer",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "schema": "string",
          "description": "Filter results by AP Tag"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/devices/{serial}/latencyStats",
      "method": "getNetworkDeviceLatencyStats",
      "httpMethod": "get",
      "tag": "Wireless health",
      "description": "Aggregated latency info for a given AP on this network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "schema": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "band",
          "schema": "string",
          "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information."
        },
        {
          "name": "ssid",
          "schema": "integer",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "schema": "integer",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "schema": "string",
          "description": "Filter results by AP Tag"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory",
      "method": "getNetworkDeviceLossAndLatencyHistory",
      "httpMethod": "get",
      "tag": "Devices",
      "description": "Get the uplink loss percentage and latency in milliseconds for a wired network device.",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 60 days from today."
        },
        {
          "name": "t1",
          "schema": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
        },
        {
          "name": "resolution",
          "schema": "integer",
          "description": "The time resolution in seconds for returned data. The valid resolutions are: 60, 600, 3600, 86400. The default is 60."
        },
        {
          "name": "uplink",
          "schema": "string",
          "description": "The WAN uplink used to obtain the requested stats. Valid uplinks are wan1, wan2, cellular. The default is wan1."
        },
        {
          "name": "ip",
          "schema": "string",
          "required": true,
          "description": "The destination IP used to obtain the requested stats. This is required."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/devices/{serial}/performance",
      "method": "getNetworkDevicePerformance",
      "httpMethod": "get",
      "tag": "Devices",
      "description": "Return the performance score for a single MX",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/devices/{serial}/reboot",
      "method": "rebootNetworkDevice",
      "httpMethod": "post",
      "tag": "Devices",
      "description": "Reboot a device",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/devices/{serial}/remove",
      "method": "removeNetworkDevice",
      "httpMethod": "post",
      "tag": "Devices",
      "description": "Remove a single device",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/networks/{networkId}/devices/{serial}/uplink",
      "method": "getNetworkDeviceUplink",
      "httpMethod": "get",
      "tag": "Devices",
      "description": "Return the uplink information for a device.",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/devices/{serial}/wireless/status",
      "method": "getNetworkDeviceWirelessStatus",
      "httpMethod": "get",
      "tag": "SSIDs",
      "description": "Return the SSID statuses of an access point",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serial",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/events",
      "method": "getNetworkEvents",
      "httpMethod": "get",
      "tag": "Events",
      "description": "List the events for the network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "productType",
          "schema": "string",
          "description": "The product type to fetch events for. This parameter is required for networks with multiple device types. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and environmental"
        },
        {
          "name": "includedEventTypes",
          "schema": "array",
          "description": "A list of event types. The returned events will be filtered to only include events with these types."
        },
        {
          "name": "excludedEventTypes",
          "schema": "array",
          "description": "A list of event types. The returned events will be filtered to exclude events with these types."
        },
        {
          "name": "deviceMac",
          "schema": "string",
          "description": "The MAC address of the Meraki device which the list of events will be filtered with"
        },
        {
          "name": "deviceSerial",
          "schema": "string",
          "description": "The serial of the Meraki device which the list of events will be filtered with"
        },
        {
          "name": "deviceName",
          "schema": "string",
          "description": "The name of the Meraki device which the list of events will be filtered with"
        },
        {
          "name": "clientIp",
          "schema": "string",
          "description": "The IP of the client which the list of events will be filtered with. Only supported for track-by-IP networks."
        },
        {
          "name": "clientMac",
          "schema": "string",
          "description": "The MAC address of the client which the list of events will be filtered with. Only supported for track-by-MAC networks."
        },
        {
          "name": "clientName",
          "schema": "string",
          "description": "The name, or partial name, of the client which the list of events will be filtered with"
        },
        {
          "name": "smDeviceMac",
          "schema": "string",
          "description": "The MAC address of the Systems Manager device which the list of events will be filtered with"
        },
        {
          "name": "smDeviceName",
          "schema": "string",
          "description": "The name of the Systems Manager device which the list of events will be filtered with"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10."
        },
        {
          "name": "startingAfter",
          "schema": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "schema": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/events/eventTypes",
      "method": "getNetworkEventsEventTypes",
      "httpMethod": "get",
      "tag": "Events",
      "description": "List the event type to human-readable description",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/failedConnections",
      "method": "getNetworkFailedConnections",
      "httpMethod": "get",
      "tag": "Wireless health",
      "description": "List of all failed client connection events on this network in a given time range",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "schema": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "band",
          "schema": "string",
          "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information."
        },
        {
          "name": "ssid",
          "schema": "integer",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "schema": "integer",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "schema": "string",
          "description": "Filter results by AP Tag"
        },
        {
          "name": "serial",
          "schema": "string",
          "description": "Filter by AP"
        },
        {
          "name": "clientId",
          "schema": "string",
          "description": "Filter by client MAC"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/firewalledServices",
      "method": "getNetworkFirewalledServices",
      "httpMethod": "get",
      "tag": "Firewalled services",
      "description": "List the appliance services and their accessibility rules",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/firewalledServices/{service}",
      "method": "getNetworkFirewalledService",
      "httpMethod": "get",
      "tag": "Firewalled services",
      "description": "Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "service",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/floorPlans",
      "method": "getNetworkFloorPlans",
      "httpMethod": "get",
      "tag": "Floor plans",
      "description": "List the floor plans that belong to your network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/floorPlans",
      "method": "createNetworkFloorPlan",
      "httpMethod": "post",
      "tag": "Floor plans",
      "description": "Upload a floor plan",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "bottomLeftCorner",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "bottomRightCorner",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "center",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "imageContents",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "topLeftCorner",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "topRightCorner",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/floorPlans/{floorPlanId}",
      "method": "deleteNetworkFloorPlan",
      "httpMethod": "delete",
      "tag": "Floor plans",
      "description": "Destroy a floor plan",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "floorPlanId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/networks/{networkId}/floorPlans/{floorPlanId}",
      "method": "getNetworkFloorPlan",
      "httpMethod": "get",
      "tag": "Floor plans",
      "description": "Find a floor plan by ID",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "floorPlanId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/floorPlans/{floorPlanId}",
      "method": "updateNetworkFloorPlan",
      "httpMethod": "put",
      "tag": "Floor plans",
      "description": "Update a floor plan's geolocation and other meta data",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "floorPlanId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "bottomLeftCorner",
          "schema": "object",
          "description": ""
        },
        {
          "name": "bottomRightCorner",
          "schema": "object",
          "description": ""
        },
        {
          "name": "center",
          "schema": "object",
          "description": ""
        },
        {
          "name": "imageContents",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "topLeftCorner",
          "schema": "object",
          "description": ""
        },
        {
          "name": "topRightCorner",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/l3FirewallRules",
      "method": "getNetworkL3FirewallRules",
      "httpMethod": "get",
      "tag": "MX L3 outbound firewall",
      "description": "Return the L3 firewall rules for an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/l3FirewallRules",
      "method": "updateNetworkL3FirewallRules",
      "httpMethod": "put",
      "tag": "MX L3 outbound firewall",
      "description": "Update the L3 firewall rules of an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "rules",
          "schema": "array",
          "description": ""
        },
        {
          "name": "syslogDefaultRule",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/l7FirewallRules",
      "method": "getNetworkL7FirewallRules",
      "httpMethod": "get",
      "tag": "MX L7 firewall",
      "description": "List the MX L7 firewall rules for an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/l7FirewallRules",
      "method": "updateNetworkL7FirewallRules",
      "httpMethod": "put",
      "tag": "MX L7 firewall",
      "description": "Update the MX L7 firewall rules for an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "rules",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/l7FirewallRules/applicationCategories",
      "method": "getNetworkL7FirewallRulesApplicationCategories",
      "httpMethod": "get",
      "tag": "MX L7 application categories",
      "description": "Return the L7 firewall application categories and their associated applications for an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/latencyStats",
      "method": "getNetworkLatencyStats",
      "httpMethod": "get",
      "tag": "Wireless health",
      "description": "Aggregated latency info for this network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "schema": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "band",
          "schema": "string",
          "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information."
        },
        {
          "name": "ssid",
          "schema": "integer",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "schema": "integer",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "schema": "string",
          "description": "Filter results by AP Tag"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/merakiAuthUsers",
      "method": "getNetworkMerakiAuthUsers",
      "httpMethod": "get",
      "tag": "Meraki auth users",
      "description": "List the splash or RADIUS users configured under Meraki Authentication for a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}",
      "method": "getNetworkMerakiAuthUser",
      "httpMethod": "get",
      "tag": "Meraki auth users",
      "description": "Return the Meraki Auth splash or RADIUS user",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "merakiAuthUserId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/oneToManyNatRules",
      "method": "getNetworkOneToManyNatRules",
      "httpMethod": "get",
      "tag": "MX 1:Many NAT rules",
      "description": "Return the 1:Many NAT mapping rules for an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/oneToManyNatRules",
      "method": "updateNetworkOneToManyNatRules",
      "httpMethod": "put",
      "tag": "MX 1:Many NAT rules",
      "description": "Set the 1:Many NAT mapping rules for an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "rules",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/oneToOneNatRules",
      "method": "getNetworkOneToOneNatRules",
      "httpMethod": "get",
      "tag": "MX 1:1 NAT rules",
      "description": "Return the 1:1 NAT mapping rules for an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/oneToOneNatRules",
      "method": "updateNetworkOneToOneNatRules",
      "httpMethod": "put",
      "tag": "MX 1:1 NAT rules",
      "description": "Set the 1:1 NAT mapping rules for an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "rules",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/pii/piiKeys",
      "method": "getNetworkPiiPiiKeys",
      "httpMethod": "get",
      "tag": "PII",
      "description": "List the keys required to access Personally Identifiable Information (PII) for a given identifier",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": "The username of a Systems Manager user"
        },
        {
          "name": "email",
          "schema": "string",
          "description": "The email of a network user account or a Systems Manager device"
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "The MAC of a network client device or a Systems Manager device"
        },
        {
          "name": "serial",
          "schema": "string",
          "description": "The serial of a Systems Manager device"
        },
        {
          "name": "imei",
          "schema": "string",
          "description": "The IMEI of a Systems Manager device"
        },
        {
          "name": "bluetoothMac",
          "schema": "string",
          "description": "The MAC of a Bluetooth client"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/pii/requests",
      "method": "getNetworkPiiRequests",
      "httpMethod": "get",
      "tag": "PII",
      "description": "List the PII requests for this network or organization",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/pii/requests",
      "method": "createNetworkPiiRequest",
      "httpMethod": "post",
      "tag": "PII",
      "description": "Submit a new delete or restrict processing PII request",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "datasets",
          "schema": "array",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "description": ""
        },
        {
          "name": "smDeviceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "smUserId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/pii/requests/{requestId}",
      "method": "deleteNetworkPiiRequest",
      "httpMethod": "delete",
      "tag": "PII",
      "description": "Delete a restrict processing PII request",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "requestId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/networks/{networkId}/pii/requests/{requestId}",
      "method": "getNetworkPiiRequest",
      "httpMethod": "get",
      "tag": "PII",
      "description": "Return a PII request",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "requestId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/pii/smDevicesForKey",
      "method": "getNetworkPiiSmDevicesForKey",
      "httpMethod": "get",
      "tag": "PII",
      "description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": "The username of a Systems Manager user"
        },
        {
          "name": "email",
          "schema": "string",
          "description": "The email of a network user account or a Systems Manager device"
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "The MAC of a network client device or a Systems Manager device"
        },
        {
          "name": "serial",
          "schema": "string",
          "description": "The serial of a Systems Manager device"
        },
        {
          "name": "imei",
          "schema": "string",
          "description": "The IMEI of a Systems Manager device"
        },
        {
          "name": "bluetoothMac",
          "schema": "string",
          "description": "The MAC of a Bluetooth client"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/pii/smOwnersForKey",
      "method": "getNetworkPiiSmOwnersForKey",
      "httpMethod": "get",
      "tag": "PII",
      "description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": "The username of a Systems Manager user"
        },
        {
          "name": "email",
          "schema": "string",
          "description": "The email of a network user account or a Systems Manager device"
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "The MAC of a network client device or a Systems Manager device"
        },
        {
          "name": "serial",
          "schema": "string",
          "description": "The serial of a Systems Manager device"
        },
        {
          "name": "imei",
          "schema": "string",
          "description": "The IMEI of a Systems Manager device"
        },
        {
          "name": "bluetoothMac",
          "schema": "string",
          "description": "The MAC of a Bluetooth client"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/portForwardingRules",
      "method": "getNetworkPortForwardingRules",
      "httpMethod": "get",
      "tag": "MX port forwarding rules",
      "description": "Return the port forwarding rules for an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/portForwardingRules",
      "method": "updateNetworkPortForwardingRules",
      "httpMethod": "put",
      "tag": "MX port forwarding rules",
      "description": "Update the port forwarding rules for an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "rules",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/security/intrusionSettings",
      "method": "getNetworkSecurityIntrusionSettings",
      "httpMethod": "get",
      "tag": "Intrusion settings",
      "description": "Returns all supported intrusion settings for an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/security/intrusionSettings",
      "method": "updateNetworkSecurityIntrusionSettings",
      "httpMethod": "put",
      "tag": "Intrusion settings",
      "description": "Set the supported intrusion settings for an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "idsRulesets",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "protectedNetworks",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/security/malwareSettings",
      "method": "getNetworkSecurityMalwareSettings",
      "httpMethod": "get",
      "tag": "Malware settings",
      "description": "Returns all supported malware settings for an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/security/malwareSettings",
      "method": "updateNetworkSecurityMalwareSettings",
      "httpMethod": "put",
      "tag": "Malware settings",
      "description": "Set the supported malware settings for an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "allowedFiles",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "allowedUrls",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "mode",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/securityEvents",
      "method": "getNetworkSecurityEvents",
      "httpMethod": "get",
      "tag": "Security events",
      "description": "List the security events (intrusion detection only) for a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 365 days from today."
        },
        {
          "name": "t1",
          "schema": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
        },
        {
          "name": "startingAfter",
          "schema": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "schema": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/siteToSiteVpn",
      "method": "getNetworkSiteToSiteVpn",
      "httpMethod": "get",
      "tag": "Networks",
      "description": "Return the site-to-site VPN settings of a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/siteToSiteVpn",
      "method": "updateNetworkSiteToSiteVpn",
      "httpMethod": "put",
      "tag": "Networks",
      "description": "Update the site-to-site VPN settings of a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "hubs",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "mode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "subnets",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/bypassActivationLockAttempts",
      "method": "createNetworkSmBypassActivationLockAttempt",
      "httpMethod": "post",
      "tag": "SM",
      "description": "Bypass activation lock attempt",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/bypassActivationLockAttempts/{attemptId}",
      "method": "getNetworkSmBypassActivationLockAttempt",
      "httpMethod": "get",
      "tag": "SM",
      "description": "Bypass activation lock attempt status",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "attemptId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/device/fields",
      "method": "updateNetworkSmDeviceFields",
      "httpMethod": "put",
      "tag": "SM",
      "description": "Modify the fields of a device",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "deviceFields",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "serial",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "wifiMac",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/device/wipe",
      "method": "wipeNetworkSmDevice",
      "httpMethod": "put",
      "tag": "SM",
      "description": "Wipe a device",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "pin",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "serial",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wifiMac",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/device/{deviceId}/refreshDetails",
      "method": "refreshNetworkSmDeviceDetails",
      "httpMethod": "post",
      "tag": "SM",
      "description": "Refresh the details of a device",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "deviceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/networks/{networkId}/sm/devices",
      "method": "getNetworkSmDevices",
      "httpMethod": "get",
      "tag": "SM",
      "description": "List the devices enrolled in an SM network with various specified fields and filters",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "Additional fields that will be displayed for each device. Multiple fields can be passed in as comma separated values.\n    The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,\n    systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,\n    ownerEmail, ownerUsername, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,\n    simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,\n    isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,\n    hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, and androidSecurityPatchVersion."
        },
        {
          "name": "wifiMacs",
          "schema": "string",
          "description": "Filter devices by wifi mac(s). Multiple wifi macs can be passed in as comma separated values."
        },
        {
          "name": "serials",
          "schema": "string",
          "description": "Filter devices by serial(s). Multiple serials can be passed in as comma separated values."
        },
        {
          "name": "ids",
          "schema": "string",
          "description": "Filter devices by id(s). Multiple ids can be passed in as comma separated values."
        },
        {
          "name": "scope",
          "schema": "string",
          "description": "Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags as comma separated values."
        },
        {
          "name": "batchSize",
          "schema": "integer",
          "description": "Number of devices to return, 1000 is the default as well as the max."
        },
        {
          "name": "batchToken",
          "schema": "string",
          "description": "If the network has more devices than the batch size, a batch token will be returned\n    as a part of the device list. To see the remainder of the devices, pass in the batchToken as a parameter in the next request.\n    Requests made with the batchToken do not require additional parameters as the batchToken includes the parameters passed in\n    with the original request. Additional parameters passed in with the batchToken will be ignored."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/devices/tags",
      "method": "updateNetworkSmDevicesTags",
      "httpMethod": "put",
      "tag": "SM",
      "description": "Add, delete, or update the tags of a set of devices",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ids",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "scope",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "serials",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "updateAction",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "wifiMacs",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/devices/{deviceId}/unenroll",
      "method": "unenrollNetworkSmDevice",
      "httpMethod": "post",
      "tag": "SM",
      "description": "Unenroll a device",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "deviceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/profiles",
      "method": "getNetworkSmProfiles",
      "httpMethod": "get",
      "tag": "SM",
      "description": "List all the profiles in the network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/targetGroups",
      "method": "getNetworkSmTargetGroups",
      "httpMethod": "get",
      "tag": "Named tag scope",
      "description": "List the target groups in this network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "withDetails",
          "schema": "boolean",
          "description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/targetGroups",
      "method": "createNetworkSmTargetGroup",
      "httpMethod": "post",
      "tag": "Named tag scope",
      "description": "Add a target group",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "scope",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "method": "deleteNetworkSmTargetGroup",
      "httpMethod": "delete",
      "tag": "Named tag scope",
      "description": "Delete a target group from a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "targetGroupId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "method": "getNetworkSmTargetGroup",
      "httpMethod": "get",
      "tag": "Named tag scope",
      "description": "Return a target group",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "targetGroupId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "withDetails",
          "schema": "boolean",
          "description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "method": "updateNetworkSmTargetGroup",
      "httpMethod": "put",
      "tag": "Named tag scope",
      "description": "Update a target group",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "targetGroupId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "scope",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/user/{userId}/deviceProfiles",
      "method": "getNetworkSmUserDeviceProfiles",
      "httpMethod": "get",
      "tag": "SM",
      "description": "Get the profiles associated with a user",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/user/{userId}/softwares",
      "method": "getNetworkSmUserSoftwares",
      "httpMethod": "get",
      "tag": "SM",
      "description": "Get a list of softwares associated with a user",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/users",
      "method": "getNetworkSmUsers",
      "httpMethod": "get",
      "tag": "SM",
      "description": "List the owners in an SM network with various specified fields and filters",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ids",
          "schema": "string",
          "description": "Filter users by id(s). Multiple ids can be passed in as comma separated values."
        },
        {
          "name": "usernames",
          "schema": "string",
          "description": "Filter users by username(s). Multiple usernames can be passed in as comma separated values."
        },
        {
          "name": "emails",
          "schema": "string",
          "description": "Filter users by email(s). Multiple emails can be passed in as comma separated values."
        },
        {
          "name": "scope",
          "schema": "string",
          "description": "Specifiy a scope (one of all, none, withAny, withAll, withoutAny, withoutAll) and a set of tags as comma separated values."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/{deviceId}/cellularUsageHistory",
      "method": "getNetworkSmCellularUsageHistory",
      "httpMethod": "get",
      "tag": "SM",
      "description": "Return the client's daily cellular data usage history",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "deviceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/{deviceId}/certs",
      "method": "getNetworkSmCerts",
      "httpMethod": "get",
      "tag": "SM",
      "description": "List the certs on a device",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "deviceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/{deviceId}/deviceProfiles",
      "method": "getNetworkSmDeviceProfiles",
      "httpMethod": "get",
      "tag": "SM",
      "description": "Get the profiles associated with a device",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "deviceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/{deviceId}/networkAdapters",
      "method": "getNetworkSmNetworkAdapters",
      "httpMethod": "get",
      "tag": "SM",
      "description": "List the network adapters of a device",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "deviceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/{deviceId}/restrictions",
      "method": "getNetworkSmRestrictions",
      "httpMethod": "get",
      "tag": "SM",
      "description": "List the restrictions on a device",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "deviceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/{deviceId}/securityCenters",
      "method": "getNetworkSmSecurityCenters",
      "httpMethod": "get",
      "tag": "SM",
      "description": "List the security centers on a device",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "deviceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/{deviceId}/softwares",
      "method": "getNetworkSmSoftwares",
      "httpMethod": "get",
      "tag": "SM",
      "description": "Get a list of softwares associated with a device",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "deviceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/sm/{deviceId}/wlanLists",
      "method": "getNetworkSmWlanLists",
      "httpMethod": "get",
      "tag": "SM",
      "description": "List the saved SSID names on a device",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "deviceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/snmpSettings",
      "method": "getNetworkSnmpSettings",
      "httpMethod": "get",
      "tag": "SNMP settings",
      "description": "Return the SNMP settings for a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/splashLoginAttempts",
      "method": "getNetworkSplashLoginAttempts",
      "httpMethod": "get",
      "tag": "Splash login attempts",
      "description": "List the splash login attempts for a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ssidNumber",
          "schema": "integer",
          "description": "Only return the login attempts for the specified SSID"
        },
        {
          "name": "loginIdentifier",
          "schema": "string",
          "description": "The username, email, or phone number used during login"
        },
        {
          "name": "timespan",
          "schema": "integer",
          "description": "The timespan, in seconds, for the login attempts. The period will be from [timespan] seconds ago until now. The maximum timespan is 3 months"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/split",
      "method": "splitNetwork",
      "httpMethod": "post",
      "tag": "Networks",
      "description": "Split a combined network into individual networks for each type of device",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/ssids",
      "method": "getNetworkSsids",
      "httpMethod": "get",
      "tag": "SSIDs",
      "description": "List the SSIDs in a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/ssids/{number}",
      "method": "getNetworkSsid",
      "httpMethod": "get",
      "tag": "SSIDs",
      "description": "Return a single SSID",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "number",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/ssids/{number}",
      "method": "updateNetworkSsid",
      "httpMethod": "put",
      "tag": "SSIDs",
      "description": "Update the attributes of an SSID",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "number",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "apTagsAndVlanIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "authMode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "availabilityTags",
          "schema": "array",
          "description": ""
        },
        {
          "name": "availableOnAllAps",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "bandSelection",
          "schema": "string",
          "description": ""
        },
        {
          "name": "concentratorNetworkId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "defaultVlanId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "disassociateClientsOnVpnFailover",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "encryptionMode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "enterpriseAdminAccess",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ipAssignmentMode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lanIsolationEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "minBitrate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "perClientBandwidthLimitDown",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "perClientBandwidthLimitUp",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "psk",
          "schema": "string",
          "description": ""
        },
        {
          "name": "radiusAccountingEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "radiusAccountingServers",
          "schema": "array",
          "description": ""
        },
        {
          "name": "radiusAttributeForGroupPolicies",
          "schema": "string",
          "description": ""
        },
        {
          "name": "radiusCoaEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "radiusFailoverPolicy",
          "schema": "string",
          "description": ""
        },
        {
          "name": "radiusLoadBalancingPolicy",
          "schema": "string",
          "description": ""
        },
        {
          "name": "radiusOverride",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "radiusServers",
          "schema": "array",
          "description": ""
        },
        {
          "name": "secondaryConcentratorNetworkId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "splashPage",
          "schema": "string",
          "description": ""
        },
        {
          "name": "useVlanTagging",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "visible",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "vlanId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "walledGardenEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "walledGardenRanges",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wpaEncryptionMode",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/ssids/{number}/l3FirewallRules",
      "method": "getNetworkSsidL3FirewallRules",
      "httpMethod": "get",
      "tag": "MR L3 firewall",
      "description": "Return the L3 firewall rules for an SSID on an MR network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "number",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/ssids/{number}/l3FirewallRules",
      "method": "updateNetworkSsidL3FirewallRules",
      "httpMethod": "put",
      "tag": "MR L3 firewall",
      "description": "Update the L3 firewall rules of an SSID on an MR network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "number",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "allowLanAccess",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "rules",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/ssids/{number}/splashSettings",
      "method": "getNetworkSsidSplashSettings",
      "httpMethod": "get",
      "tag": "Splash settings",
      "description": "Display the splash page settings for the given SSID",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "number",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/ssids/{number}/splashSettings",
      "method": "updateNetworkSsidSplashSettings",
      "httpMethod": "put",
      "tag": "Splash settings",
      "description": "Modify the splash page settings for the given SSID",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "number",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "splashUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "useSplashUrl",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/staticRoutes",
      "method": "getNetworkStaticRoutes",
      "httpMethod": "get",
      "tag": "MX static routes",
      "description": "List the static routes for an MX or teleworker network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/staticRoutes",
      "method": "createNetworkStaticRoute",
      "httpMethod": "post",
      "tag": "MX static routes",
      "description": "Add a static route for an MX or teleworker network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "gatewayIp",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "subnet",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/staticRoutes/{staticRouteId}",
      "method": "deleteNetworkStaticRoute",
      "httpMethod": "delete",
      "tag": "MX static routes",
      "description": "Delete a static route from an MX or teleworker network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "staticRouteId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/networks/{networkId}/staticRoutes/{staticRouteId}",
      "method": "getNetworkStaticRoute",
      "httpMethod": "get",
      "tag": "MX static routes",
      "description": "Return a static route for an MX or teleworker network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "staticRouteId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/staticRoutes/{staticRouteId}",
      "method": "updateNetworkStaticRoute",
      "httpMethod": "put",
      "tag": "MX static routes",
      "description": "Update a static route for an MX or teleworker network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "staticRouteId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "fixedIpAssignments",
          "schema": "object",
          "description": ""
        },
        {
          "name": "gatewayIp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reservedIpRanges",
          "schema": "array",
          "description": ""
        },
        {
          "name": "subnet",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/swapWarmSpare",
      "method": "swapNetworkWarmSpare",
      "httpMethod": "post",
      "tag": "MX warm spare settings",
      "description": "Swap MX primary and warm spare appliances",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/switch/linkAggregations",
      "method": "getNetworkSwitchLinkAggregations",
      "httpMethod": "get",
      "tag": "Link aggregations",
      "description": "List link aggregation groups",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/switch/linkAggregations",
      "method": "createNetworkSwitchLinkAggregation",
      "httpMethod": "post",
      "tag": "Link aggregations",
      "description": "Create a link aggregation group",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "switchPorts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "switchProfilePorts",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/switch/linkAggregations/{linkAggregationId}",
      "method": "deleteNetworkSwitchLinkAggregation",
      "httpMethod": "delete",
      "tag": "Link aggregations",
      "description": "Split a link aggregation group into separate ports",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "linkAggregationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/networks/{networkId}/switch/linkAggregations/{linkAggregationId}",
      "method": "updateNetworkSwitchLinkAggregation",
      "httpMethod": "put",
      "tag": "Link aggregations",
      "description": "Update a link aggregation group",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "linkAggregationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "switchPorts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "switchProfilePorts",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/switch/portSchedules",
      "method": "getNetworkSwitchPortSchedules",
      "httpMethod": "get",
      "tag": "Switch port schedules",
      "description": "List switch port schedules",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/switch/portSchedules",
      "method": "createNetworkSwitchPortSchedule",
      "httpMethod": "post",
      "tag": "Switch port schedules",
      "description": "Add a switch port schedule",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "portSchedule",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/switch/portSchedules/{portScheduleId}",
      "method": "deleteNetworkSwitchPortSchedule",
      "httpMethod": "delete",
      "tag": "Switch port schedules",
      "description": "Delete a switch port schedule",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "portScheduleId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/networks/{networkId}/switch/portSchedules/{portScheduleId}",
      "method": "updateNetworkSwitchPortSchedule",
      "httpMethod": "put",
      "tag": "Switch port schedules",
      "description": "Update a switch port schedule",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "portScheduleId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "portSchedule",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/switch/settings",
      "method": "getNetworkSwitchSettings",
      "httpMethod": "get",
      "tag": "Switch settings",
      "description": "Returns the switch network settings",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/switch/settings",
      "method": "updateNetworkSwitchSettings",
      "httpMethod": "put",
      "tag": "Switch settings",
      "description": "Update switch network settings",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "powerExceptions",
          "schema": "array",
          "description": ""
        },
        {
          "name": "useCombinedPower",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "vlan",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/switch/settings/mtu",
      "method": "getNetworkSwitchSettingsMtu",
      "httpMethod": "get",
      "tag": "Switch settings",
      "description": "Return the MTU configuration",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/switch/settings/multicast",
      "method": "getNetworkSwitchSettingsMulticast",
      "httpMethod": "get",
      "tag": "Switch settings",
      "description": "Return multicast settings for a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/switch/settings/multicast",
      "method": "updateNetworkSwitchSettingsMulticast",
      "httpMethod": "put",
      "tag": "Switch settings",
      "description": "Update multicast settings for a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "defaultSettings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrides",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/switch/settings/qosRules",
      "method": "getNetworkSwitchSettingsQosRules",
      "httpMethod": "get",
      "tag": "Switch settings",
      "description": "List quality of service rules",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/switch/settings/qosRules",
      "method": "createNetworkSwitchSettingsQosRule",
      "httpMethod": "post",
      "tag": "Switch settings",
      "description": "Add a quality of service rule",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dscp",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "dstPort",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "dstPortRange",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "protocol",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "srcPort",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "srcPortRange",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/switch/settings/qosRules/order",
      "method": "getNetworkSwitchSettingsQosRulesOrder",
      "httpMethod": "get",
      "tag": "Switch settings",
      "description": "Return the quality of service rule IDs by order in which they will be processed by the switch",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/switch/settings/qosRules/order",
      "method": "updateNetworkSwitchSettingsQosRulesOrder",
      "httpMethod": "put",
      "tag": "Switch settings",
      "description": "Update the order in which the rules should be processed by the switch",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ruleIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/switch/settings/qosRules/{qosRuleId}",
      "method": "deleteNetworkSwitchSettingsQosRule",
      "httpMethod": "delete",
      "tag": "Switch settings",
      "description": "Delete a quality of service rule",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "qosRuleId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/networks/{networkId}/switch/settings/qosRules/{qosRuleId}",
      "method": "getNetworkSwitchSettingsQosRule",
      "httpMethod": "get",
      "tag": "Switch settings",
      "description": "Return a quality of service rule",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "qosRuleId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/switch/settings/qosRules/{qosRuleId}",
      "method": "updateNetworkSwitchSettingsQosRule",
      "httpMethod": "put",
      "tag": "Switch settings",
      "description": "Update a quality of service rule",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "qosRuleId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dscp",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "dstPort",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "dstPortRange",
          "schema": "string",
          "description": ""
        },
        {
          "name": "protocol",
          "schema": "string",
          "description": ""
        },
        {
          "name": "srcPort",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "srcPortRange",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vlan",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/switch/settings/stormControl",
      "method": "getNetworkSwitchSettingsStormControl",
      "httpMethod": "get",
      "tag": "Switch settings",
      "description": "Return the storm control configuration for a switch network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/switch/settings/stormControl",
      "method": "updateNetworkSwitchSettingsStormControl",
      "httpMethod": "put",
      "tag": "Switch settings",
      "description": "Update the storm control configuration for a switch network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "broadcastThreshold",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "multicastThreshold",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "unknownUnicastThreshold",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/switchStacks",
      "method": "getNetworkSwitchStacks",
      "httpMethod": "get",
      "tag": "Switch stacks",
      "description": "List the switch stacks in a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/syslogServers",
      "method": "getNetworkSyslogServers",
      "httpMethod": "get",
      "tag": "Syslog servers",
      "description": "List the syslog servers for a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/syslogServers",
      "method": "updateNetworkSyslogServers",
      "httpMethod": "put",
      "tag": "Syslog servers",
      "description": "Update the syslog servers for a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "servers",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/traffic",
      "method": "getNetworkTraffic",
      "httpMethod": "get",
      "tag": "Networks",
      "description": "Return the traffic analysis data for this network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 30 days from today."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 30 days."
        },
        {
          "name": "deviceType",
          "schema": "string",
          "description": "Filter the data by device type: 'combined', 'wireless', 'switch' or 'appliance'. Defaults to 'combined'. When using 'combined', for each rule the data will come from the device type with the most usage."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/unbind",
      "method": "unbindNetwork",
      "httpMethod": "post",
      "tag": "Networks",
      "description": "Unbind a network from a template.",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/networks/{networkId}/uplinkSettings",
      "method": "getNetworkUplinkSettings",
      "httpMethod": "get",
      "tag": "Traffic shaping uplink settings",
      "description": "Returns the uplink settings for your MX network.",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/uplinkSettings",
      "method": "updateNetworkUplinkSettings",
      "httpMethod": "put",
      "tag": "Traffic shaping uplink settings",
      "description": "Updates the uplink settings for your MX network.",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "bandwidthLimits",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/vlans",
      "method": "getNetworkVlans",
      "httpMethod": "get",
      "tag": "VLANs",
      "description": "List the VLANs for an MX network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/vlans",
      "method": "createNetworkVlan",
      "httpMethod": "post",
      "tag": "VLANs",
      "description": "Add a VLAN",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "applianceIp",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "groupPolicyId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "subnet",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/vlans/{vlanId}",
      "method": "deleteNetworkVlan",
      "httpMethod": "delete",
      "tag": "VLANs",
      "description": "Delete a VLAN from a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "vlanId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/networks/{networkId}/vlans/{vlanId}",
      "method": "getNetworkVlan",
      "httpMethod": "get",
      "tag": "VLANs",
      "description": "Return a VLAN",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "vlanId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/vlans/{vlanId}",
      "method": "updateNetworkVlan",
      "httpMethod": "put",
      "tag": "VLANs",
      "description": "Update a VLAN",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "vlanId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "applianceIp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dhcpBootFilename",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dhcpBootNextServer",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dhcpBootOptionsEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "dhcpHandling",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dhcpLeaseTime",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dhcpOptions",
          "schema": "array",
          "description": ""
        },
        {
          "name": "dhcpRelayServerIps",
          "schema": "array",
          "description": ""
        },
        {
          "name": "dnsNameservers",
          "schema": "string",
          "description": ""
        },
        {
          "name": "fixedIpAssignments",
          "schema": "object",
          "description": ""
        },
        {
          "name": "groupPolicyId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reservedIpRanges",
          "schema": "array",
          "description": ""
        },
        {
          "name": "subnet",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vpnNatSubnet",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/vlansEnabledState",
      "method": "getNetworkVlansEnabledState",
      "httpMethod": "get",
      "tag": "VLANs",
      "description": "Returns the enabled status of VLANs for the network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/vlansEnabledState",
      "method": "updateNetworkVlansEnabledState",
      "httpMethod": "put",
      "tag": "VLANs",
      "description": "Enable/Disable VLANs for the given network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/warmSpareSettings",
      "method": "getNetworkWarmSpareSettings",
      "httpMethod": "get",
      "tag": "MX warm spare settings",
      "description": "Return MX warm spare settings",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/warmSpareSettings",
      "method": "updateNetworkWarmSpareSettings",
      "httpMethod": "put",
      "tag": "MX warm spare settings",
      "description": "Update MX warm spare settings",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "spareSerial",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "uplinkMode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "virtualIp1",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "virtualIp2",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/wireless/rfProfiles",
      "method": "getNetworkWirelessRfProfiles",
      "httpMethod": "get",
      "tag": "Radio settings",
      "description": "List the non-basic RF profiles for this network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "includeTemplateProfiles",
          "schema": "boolean",
          "description": "If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/wireless/rfProfiles",
      "method": "createNetworkWirelessRfProfile",
      "httpMethod": "post",
      "tag": "Radio settings",
      "description": "Creates new RF profile for this network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "apBandSettings",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "bandSelectionType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clientBalancingEnabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "fiveGhzSettings",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "minBitrateType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "twoFourGhzSettings",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
      "method": "deleteNetworkWirelessRfProfile",
      "httpMethod": "delete",
      "tag": "Radio settings",
      "description": "Delete a RF Profile",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "rfProfileId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
      "method": "getNetworkWirelessRfProfile",
      "httpMethod": "get",
      "tag": "Radio settings",
      "description": "Return a RF profile",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "rfProfileId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
      "method": "updateNetworkWirelessRfProfile",
      "httpMethod": "put",
      "tag": "Radio settings",
      "description": "Updates specified RF profile for this network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "rfProfileId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "apBandSettings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "bandSelectionType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "clientBalancingEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "fiveGhzSettings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "minBitrateType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "twoFourGhzSettings",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/wireless/settings",
      "method": "getNetworkWirelessSettings",
      "httpMethod": "get",
      "tag": "Wireless settings",
      "description": "Return the wireless settings for a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{networkId}/wireless/settings",
      "method": "updateNetworkWirelessSettings",
      "httpMethod": "put",
      "tag": "Wireless settings",
      "description": "Update the wireless settings for a network",
      "parameters": [
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ipv6BridgeEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "ledLightsOn",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "locationAnalyticsEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "meshingEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "upgradeStrategy",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{network_id}/sm/devices/lock",
      "method": "lockNetworkSmDevices",
      "httpMethod": "put",
      "tag": "SM",
      "description": "Lock a set of devices",
      "parameters": [
        {
          "name": "network_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ids",
          "schema": "string",
          "description": ""
        },
        {
          "name": "pin",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "scope",
          "schema": "string",
          "description": ""
        },
        {
          "name": "serials",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wifiMacs",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{network_id}/sm/{id}/connectivity",
      "method": "getNetworkSmConnectivity",
      "httpMethod": "get",
      "tag": "SM",
      "description": "Returns historical connectivity data (whether a device is regularly checking in to Dashboard).",
      "parameters": [
        {
          "name": "network_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
        },
        {
          "name": "startingAfter",
          "schema": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "schema": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{network_id}/sm/{id}/desktopLogs",
      "method": "getNetworkSmDesktopLogs",
      "httpMethod": "get",
      "tag": "SM",
      "description": "Return historical records of various Systems Manager network connection details for desktop devices.",
      "parameters": [
        {
          "name": "network_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
        },
        {
          "name": "startingAfter",
          "schema": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "schema": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{network_id}/sm/{id}/deviceCommandLogs",
      "method": "getNetworkSmDeviceCommandLogs",
      "httpMethod": "get",
      "tag": "SM",
      "description": "Return historical records of commands sent to Systems Manager devices",
      "parameters": [
        {
          "name": "network_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
        },
        {
          "name": "startingAfter",
          "schema": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "schema": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/networks/{network_id}/sm/{id}/performanceHistory",
      "method": "getNetworkSmPerformanceHistory",
      "httpMethod": "get",
      "tag": "SM",
      "description": "Return historical records of various Systems Manager client metrics for desktop devices.",
      "parameters": [
        {
          "name": "network_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
        },
        {
          "name": "startingAfter",
          "schema": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "schema": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations",
      "method": "getOrganizations",
      "httpMethod": "get",
      "tag": "Organizations",
      "description": "List the organizations that the user has privileges on",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}",
      "method": "getOrganization",
      "httpMethod": "get",
      "tag": "Organizations",
      "description": "Return an organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/actionBatches",
      "method": "getOrganizationActionBatches",
      "httpMethod": "get",
      "tag": "Action batches",
      "description": "Return the list of action batches in the organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": "Filter batches by status. Valid types are pending, completed, and failed."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/actionBatches",
      "method": "createOrganizationActionBatch",
      "httpMethod": "post",
      "tag": "Action batches",
      "description": "Create an action batch",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "actions",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "confirmed",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "synchronous",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/actionBatches/{actionBatchId}",
      "method": "deleteOrganizationActionBatch",
      "httpMethod": "delete",
      "tag": "Action batches",
      "description": "Delete an action batch",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "actionBatchId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/organizations/{organizationId}/actionBatches/{actionBatchId}",
      "method": "updateOrganizationActionBatch",
      "httpMethod": "put",
      "tag": "Action batches",
      "description": "Update an action batch",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "actionBatchId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "confirmed",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "synchronous",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/admins",
      "method": "getOrganizationAdmins",
      "httpMethod": "get",
      "tag": "Admins",
      "description": "List the dashboard administrators in this organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/admins",
      "method": "createOrganizationAdmin",
      "httpMethod": "post",
      "tag": "Admins",
      "description": "Create a new dashboard administrator",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "authenticationMethod",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "networks",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "orgAccess",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/admins/{adminId}",
      "method": "deleteOrganizationAdmin",
      "httpMethod": "delete",
      "tag": "Admins",
      "description": "Revoke all access for a dashboard administrator within this organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "adminId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/organizations/{organizationId}/admins/{adminId}",
      "method": "updateOrganizationAdmin",
      "httpMethod": "put",
      "tag": "Admins",
      "description": "Update an administrator",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "adminId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "networks",
          "schema": "array",
          "description": ""
        },
        {
          "name": "orgAccess",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/apiRequests",
      "method": "getOrganizationApiRequests",
      "httpMethod": "get",
      "tag": "API usage",
      "description": "List the API requests made by an organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
        },
        {
          "name": "t1",
          "schema": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50."
        },
        {
          "name": "startingAfter",
          "schema": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "schema": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "adminId",
          "schema": "string",
          "description": "Filter the results by the ID of the admin who made the API requests"
        },
        {
          "name": "path",
          "schema": "string",
          "description": "Filter the results by the path of the API requests"
        },
        {
          "name": "method",
          "schema": "string",
          "description": "Filter the results by the method of the API requests (must be 'GET', 'PUT', 'POST' or 'DELETE')"
        },
        {
          "name": "responseCode",
          "schema": "integer",
          "description": "Filter the results by the response code of the API requests"
        },
        {
          "name": "sourceIp",
          "schema": "string",
          "description": "Filter the results by the IP address of the originating API request"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/apiRequests/overview",
      "method": "getOrganizationApiRequestsOverview",
      "httpMethod": "get",
      "tag": "API usage",
      "description": "Return an aggregated overview of API requests data",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
        },
        {
          "name": "t1",
          "schema": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/claim",
      "method": "claimIntoOrganization",
      "httpMethod": "post",
      "tag": "Organizations",
      "description": "Claim a list of devices, licenses, and/or orders into an organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "licenses",
          "schema": "array",
          "description": ""
        },
        {
          "name": "orders",
          "schema": "array",
          "description": ""
        },
        {
          "name": "serials",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/clone",
      "method": "cloneOrganization",
      "httpMethod": "post",
      "tag": "Organizations",
      "description": "Create a new organization by cloning the addressed organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/configTemplates",
      "method": "getOrganizationConfigTemplates",
      "httpMethod": "get",
      "tag": "Config templates",
      "description": "List the configuration templates for this organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/configTemplates/{configTemplateId}",
      "method": "deleteOrganizationConfigTemplate",
      "httpMethod": "delete",
      "tag": "Config templates",
      "description": "Remove a configuration template",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "configTemplateId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/organizations/{organizationId}/configTemplates/{configTemplateId}/switchProfiles",
      "method": "getOrganizationConfigTemplateSwitchProfiles",
      "httpMethod": "get",
      "tag": "Switch profiles",
      "description": "List the switch profiles for your switch template configuration",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "configTemplateId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/configurationChanges",
      "method": "getOrganizationConfigurationChanges",
      "httpMethod": "get",
      "tag": "Change log",
      "description": "View the Change Log for your organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
        },
        {
          "name": "t1",
          "schema": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 365 days."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "The number of entries per page returned. Acceptable range is 3 - 5000. Default is 5000."
        },
        {
          "name": "startingAfter",
          "schema": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "schema": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "networkId",
          "schema": "string",
          "description": "Filters on the given network"
        },
        {
          "name": "adminId",
          "schema": "string",
          "description": "Filters on the given Admin"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/deviceStatuses",
      "method": "getOrganizationDeviceStatuses",
      "httpMethod": "get",
      "tag": "Organizations",
      "description": "List the status of every Meraki device in the organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/devices",
      "method": "getOrganizationDevices",
      "httpMethod": "get",
      "tag": "Devices",
      "description": "List the devices in an organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
        },
        {
          "name": "startingAfter",
          "schema": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "schema": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "configurationUpdatedAfter",
          "schema": "string",
          "description": "Filter results by whether or not the device's configuration has been updated after the given timestamp"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/inventory",
      "method": "getOrganizationInventory",
      "httpMethod": "get",
      "tag": "Organizations",
      "description": "Return the inventory for an organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "includeLicenseInfo",
          "schema": "boolean",
          "description": "When this parameter is true, each entity in the response will include the license expiration date of the device (if any). Only applies to organizations that are on the per-device licensing model. Defaults to false."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/licenseState",
      "method": "getOrganizationLicenseState",
      "httpMethod": "get",
      "tag": "Licenses",
      "description": "Return an overview of the license state for an organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/licenses",
      "method": "getOrganizationLicenses",
      "httpMethod": "get",
      "tag": "Licenses",
      "description": "List the licenses for an organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
        },
        {
          "name": "startingAfter",
          "schema": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "schema": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "deviceSerial",
          "schema": "string",
          "description": "Filter the licenses to those assigned to a particular device"
        },
        {
          "name": "networkId",
          "schema": "string",
          "description": "Filter the licenses to those assigned in a particular network"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "Filter the licenses to those in a particular state. Can be one of 'active', 'expired', 'expiring', 'recentlyQueued', 'unused' or 'unusedActive'"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/licenses/assignSeats",
      "method": "assignOrganizationLicensesSeats",
      "httpMethod": "post",
      "tag": "Licenses",
      "description": "Assign SM seats to a network",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "licenseId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "networkId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "seatCount",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/licenses/moveSeats",
      "method": "moveOrganizationLicensesSeats",
      "httpMethod": "post",
      "tag": "Licenses",
      "description": "Move SM seats to another organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "destOrganizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "licenseId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "seatCount",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/licenses/renewSeats",
      "method": "renewOrganizationLicensesSeats",
      "httpMethod": "post",
      "tag": "Licenses",
      "description": "Renew SM seats of a license",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "licenseIdToRenew",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "unusedLicenseId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/licenses/{licenseId}",
      "method": "getOrganizationLicense",
      "httpMethod": "get",
      "tag": "Licenses",
      "description": "Display a license",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "licenseId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/networks",
      "method": "getOrganizationNetworks",
      "httpMethod": "get",
      "tag": "Networks",
      "description": "List the networks in an organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "configTemplateId",
          "schema": "string",
          "description": "An optional parameter that is the ID of a config template. Will return all networks bound to that template."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/networks",
      "method": "createOrganizationNetwork",
      "httpMethod": "post",
      "tag": "Networks",
      "description": "Create a network",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "copyFromNetworkId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "disableMyMerakiCom",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "disableRemoteStatusPage",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "timeZone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/networks/combine",
      "method": "combineOrganizationNetworks",
      "httpMethod": "post",
      "tag": "Networks",
      "description": "Combine multiple networks into a single network",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "enrollmentString",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "networkIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/openapiSpec",
      "method": "getOrganizationOpenapiSpec",
      "httpMethod": "get",
      "tag": "OpenAPI Spec",
      "description": "Return the OpenAPI 2.0 Specification of the organization's API documentation in JSON",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/samlRoles",
      "method": "getOrganizationSamlRoles",
      "httpMethod": "get",
      "tag": "SAML roles",
      "description": "List the SAML roles for this organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/samlRoles",
      "method": "createOrganizationSamlRole",
      "httpMethod": "post",
      "tag": "SAML roles",
      "description": "Create a SAML role",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "networks",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "orgAccess",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "role",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/samlRoles/{samlRoleId}",
      "method": "getOrganizationSamlRole",
      "httpMethod": "get",
      "tag": "SAML roles",
      "description": "Return a SAML role",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "samlRoleId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/samlRoles/{samlRoleId}",
      "method": "updateOrganizationSamlRole",
      "httpMethod": "put",
      "tag": "SAML roles",
      "description": "Update a SAML role",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "samlRoleId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "networks",
          "schema": "array",
          "description": ""
        },
        {
          "name": "orgAccess",
          "schema": "string",
          "description": ""
        },
        {
          "name": "role",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/security/intrusionSettings",
      "method": "getOrganizationSecurityIntrusionSettings",
      "httpMethod": "get",
      "tag": "Intrusion settings",
      "description": "Returns all supported intrusion settings for an organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/security/intrusionSettings",
      "method": "updateOrganizationSecurityIntrusionSettings",
      "httpMethod": "put",
      "tag": "Intrusion settings",
      "description": "Sets supported intrusion settings for an organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "whitelistedRules",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/securityEvents",
      "method": "getOrganizationSecurityEvents",
      "httpMethod": "get",
      "tag": "Security events",
      "description": "List the security events (intrusion detection only) for an organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 365 days from today."
        },
        {
          "name": "t1",
          "schema": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
        },
        {
          "name": "startingAfter",
          "schema": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "schema": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/snmp",
      "method": "getOrganizationSnmp",
      "httpMethod": "get",
      "tag": "SNMP settings",
      "description": "Return the SNMP settings for an organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/thirdPartyVPNPeers",
      "method": "getOrganizationThirdPartyVpnPeers",
      "httpMethod": "get",
      "tag": "Organizations",
      "description": "Return the third party VPN peers for an organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/thirdPartyVPNPeers",
      "method": "updateOrganizationThirdPartyVpnPeers",
      "httpMethod": "put",
      "tag": "Organizations",
      "description": "Update the third party VPN peers for an organization",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "peers",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/uplinksLossAndLatency",
      "method": "getOrganizationUplinksLossAndLatency",
      "httpMethod": "get",
      "tag": "Organizations",
      "description": "Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "t0",
          "schema": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 60 days from today."
        },
        {
          "name": "t1",
          "schema": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past."
        },
        {
          "name": "timespan",
          "schema": "number",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes."
        },
        {
          "name": "uplink",
          "schema": "string",
          "description": "Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, cellular. Default will return all uplinks."
        },
        {
          "name": "ip",
          "schema": "string",
          "description": "Optional filter for a specific destination IP. Default will return all destination IPs."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/vpnFirewallRules",
      "method": "getOrganizationVpnFirewallRules",
      "httpMethod": "get",
      "tag": "MX VPN firewall",
      "description": "Return the firewall rules for an organization's site-to-site VPN",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{organizationId}/vpnFirewallRules",
      "method": "updateOrganizationVpnFirewallRules",
      "httpMethod": "put",
      "tag": "MX VPN firewall",
      "description": "Update the firewall rules of an organization's site-to-site VPN",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "rules",
          "schema": "array",
          "description": ""
        },
        {
          "name": "syslogDefaultRule",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.meraki.com/api/v0",
  "apiDescription": "The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.\n\n> Date: 23 April, 2023\n>\n> [Recent Updates](https://meraki.io/whats-new/)\n\n---\n\n[API Documentation](https://meraki.io/api)\n\n[Community Support](https://meraki.io/community)\n\n[Meraki Homepage](https://www.meraki.com)\n",
  "apiTitle": "Meraki Dashboard API",
  "endpoints": 177,
  "sdkMethods": 248,
  "schemas": 0,
  "parameters": 890,
  "contactUrl": "https://meraki.io/community",
  "difficultyScore": 470.5,
  "difficulty": "Hard"
}