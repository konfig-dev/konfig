{
  "securitySchemes": {},
  "apiBaseUrl": "https://localhost:8000",
  "apiVersion": "v1",
  "apiDescription": "Wallester Card API\n\n# Rate limits\n\nWallester has no rate limits and allows sending an unlimited number of requests to API, but we reserve the right to impose such limits if necessary.\n\n# RSA keys\n\nEncrypted card data exchange schema:\n![Encrypted card data exchange schema](img/encrypted-card-data-exchange-schema.png)\nPublic key needed in the request might be programmed to be generated and encrypted on each request or prepared in advance as given in the examples below and updated periodically.\nIt is recommended to use length of at least 3076 bytes when keys are being generated.\n\n## Generating RSA keys\n\nRSA key pair can be generated using following command:\n\n```shell\n\nopenssl genrsa -des3 -out private.pem 4096\nopenssl rsa -in private.pem -outform PEM -pubout -out public.pem\n\n```\n\n## Public key example\n\n### Decoded public key example:\n\n##### -----BEGIN PUBLIC KEY-----\n##### MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA2oHA/IYjo06fRA33tca7\n##### Lgss1OvB8+cv8sTPJ5m4uwm0YChCNQW8lhDe3GP+w2ZUGAK25e8Y3gllF+G9WL0n\n##### khGmYenC9+fNWCdL2npcrucNG82XgU+v8cQQNbTkzombjw4bG1fkuowLoSQir2uK\n##### PE0aDhHmbdm0DebXb8mw/4NthU6dc5PFqaGuv7F9rMdtDo08mH5pOFjhkP1QGqap\n##### S0sL1vrzaQv9QSs6VASiMeCVzovUqqDGS55NSY1bzvRP9zjzbNJeeK5ywadK0apu\n##### y8QUgl2Wa8Xq4PcyiKMYbzpqq9oqnsc8d+WwALJaxfDfa5qMKyL7HvQXuXAZejNQ\n##### L9X1DRKkBvYZEhliV/yoKwD1lwHo28sqXWW/J8ITAZwaG8K4UyERVT4mfO8RHlJU\n##### lZ762KPRy+lqRqTnZkYLgG6jzShhADnfn1GaM5/obr9ZjLw3owqOaevF0NmsJlfy\n##### I2aM8I9XANl+ZyQNJfART9OErfLqruOa2lZg1XebcupYxjEKfyZpiWQvD42I18UM\n##### 6OGx2kpvYq6jggDqiz6BNu6LB/ckv+9z/olnkjr1cmZU3EfrfLuxRYboEBIV2GWG\n##### eo0LLEiFUYP5LD60P7EnGPN4qgJ9epWWVxQKR6wAljVMUXLDzdBEu9lk45X7ILK8\n##### ejP034fViVKHij6jQZPce3cCAwEAAQ==\n##### -----END PUBLIC KEY-----\n\nTest results were received using this website: https://www.base64encode.org/ :\n\n### Base64 encoded public key string (using example above):\n\n```shell\n\nLS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUEyb0hBL0lZam8wNmZSQTMzdGNhNwpMZ3NzMU92QjgrY3Y4c1RQSjVtNHV3bTBZQ2hDTlFXOGxoRGUzR1ArdzJaVUdBSzI1ZThZM2dsbEYrRzlXTDBuCmtoR21ZZW5DOStmTldDZEwybnBjcnVjTkc4MlhnVSt2OGNRUU5iVGt6b21ianc0YkcxZmt1b3dMb1NRaXIydUsKUEUwYURoSG1iZG0wRGViWGI4bXcvNE50aFU2ZGM1UEZxYUd1djdGOXJNZHREbzA4bUg1cE9GamhrUDFRR3FhcApTMHNMMXZyemFRdjlRU3M2VkFTaU1lQ1Z6b3ZVcXFER1M1NU5TWTFienZSUDl6anpiTkplZUs1eXdhZEswYXB1Cnk4UVVnbDJXYThYcTRQY3lpS01ZYnpwcXE5b3Fuc2M4ZCtXd0FMSmF4ZkRmYTVxTUt5TDdIdlFYdVhBWmVqTlEKTDlYMURSS2tCdllaRWhsaVYveW9Ld0QxbHdIbzI4c3FYV1cvSjhJVEFad2FHOEs0VXlFUlZUNG1mTzhSSGxKVQpsWjc2MktQUnkrbHFScVRuWmtZTGdHNmp6U2hoQURuZm4xR2FNNS9vYnI5WmpMdzNvd3FPYWV2RjBObXNKbGZ5CkkyYU04STlYQU5sK1p5UU5KZkFSVDlPRXJmTHFydU9hMmxaZzFYZWJjdXBZeGpFS2Z5WnBpV1F2RDQySTE4VU0KNk9HeDJrcHZZcTZqZ2dEcWl6NkJOdTZMQi9ja3YrOXovb2xua2pyMWNtWlUzRWZyZkx1eFJZYm9FQklWMkdXRwplbzBMTEVpRlVZUDVMRDYwUDdFbkdQTjRxZ0o5ZXBXV1Z4UUtSNndBbGpWTVVYTER6ZEJFdTlsazQ1WDdJTEs4CmVqUDAzNGZWaVZLSGlqNmpRWlBjZTNjQ0F3RUFBUT09Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQ==\n\n```\n\n# Authorization\n\nAuthorization is implemented using [JSON Web Tokens (JWT)](https://jwt.io/). For more information, please see [our repository of integration examples](https://github.com/wallester/integration-examples).",
  "apiTitle": "Wallester",
  "endpoints": 205,
  "sdkMethods": 248,
  "schemas": 557,
  "parameters": 1850,
  "contactUrl": "/v1/doc/#",
  "contactEmail": "operations@wallester.com",
  "originalCustomRequest": {
    "type": "GET",
    "url": "https://api-doc.wallester.com/swagger.json"
  },
  "customRequestSpecFilename": "wallester.com.yaml",
  "difficultyScore": 989,
  "difficulty": "Very Hard"
}