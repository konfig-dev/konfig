{
  "providerName": "airbyte.local",
  "openApiRaw": "https://raw.githubusercontent.com/airbytehq/airbyte/master/airbyte-api/src/main/openapi/config.yaml",
  "securitySchemes": {
    "bearerAuth": {
      "bearerFormat": "JWT",
      "scheme": "bearer",
      "type": "http"
    }
  },
  "homepage": "airbyte.local",
  "serviceName": "config",
  "apiVersion": "1.0.0",
  "methods": [
    {
      "url": "/v1/attempt/save_stats",
      "method": "saveStats",
      "httpMethod": "post",
      "tag": "attempt",
      "description": "For worker to set sync stats of a running attempt.",
      "parameters": [
        {
          "name": "attemptNumber",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "jobId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "stats",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "streamStats",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/attempt/save_sync_config",
      "method": "saveSyncConfig",
      "httpMethod": "post",
      "tag": "attempt",
      "description": "For worker to save the AttemptSyncConfig for an attempt.",
      "parameters": [
        {
          "name": "attemptNumber",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "jobId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "syncConfig",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/attempt/set_workflow_in_attempt",
      "method": "setWorkflowInAttempt",
      "httpMethod": "post",
      "tag": "attempt",
      "description": "For worker to register the workflow id in attempt.",
      "parameters": [
        {
          "name": "attemptNumber",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "jobId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "processingTaskQueue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "workflowId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/connections/create",
      "method": "createConnection",
      "httpMethod": "post",
      "tag": "connection",
      "description": "Create a connection between a source and a destination",
      "parameters": [
        {
          "name": "destinationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "geography",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "namespaceDefinition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "namespaceFormat",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "nonBreakingChangesPreference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notifySchemaChanges",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "operationIds",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "prefix",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "resourceRequirements",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "schedule",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "scheduleData",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "scheduleType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sourceCatalogId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sourceId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "syncCatalog",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/connections/delete",
      "method": "deleteConnection",
      "httpMethod": "post",
      "tag": "connection",
      "description": "Delete a connection",
      "parameters": [
        {
          "name": "connectionId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/connections/get",
      "method": "getConnection",
      "httpMethod": "post",
      "tag": "connection",
      "description": "Get a connection",
      "parameters": [
        {
          "name": "connectionId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/connections/list",
      "method": "listConnectionsForWorkspace",
      "httpMethod": "post",
      "tag": "connection",
      "description": "Returns all connections for a workspace.",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/connections/list_all",
      "method": "listAllConnectionsForWorkspace",
      "httpMethod": "post",
      "tag": "connection",
      "description": "Returns all connections for a workspace, including deleted connections.",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/connections/reset",
      "method": "resetConnection",
      "httpMethod": "post",
      "tag": "connection",
      "description": "Reset the data for the connection. Deletes data generated by the connection in the destination. Resets any cursors back to initial state.",
      "parameters": [
        {
          "name": "connectionId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/connections/search",
      "method": "searchConnections",
      "httpMethod": "post",
      "tag": "connection",
      "description": "Search connections",
      "parameters": [
        {
          "name": "connectionId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "destination",
          "schema": "object",
          "description": ""
        },
        {
          "name": "destinationId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "namespaceDefinition",
          "schema": "string",
          "description": ""
        },
        {
          "name": "namespaceFormat",
          "schema": "string",
          "description": ""
        },
        {
          "name": "prefix",
          "schema": "string",
          "description": ""
        },
        {
          "name": "schedule",
          "schema": "object",
          "description": ""
        },
        {
          "name": "scheduleData",
          "schema": "object",
          "description": ""
        },
        {
          "name": "scheduleType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "source",
          "schema": "object",
          "description": ""
        },
        {
          "name": "sourceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/connections/sync",
      "method": "syncConnection",
      "httpMethod": "post",
      "tag": "connection",
      "description": "Trigger a manual sync of the connection",
      "parameters": [
        {
          "name": "connectionId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/connections/update",
      "method": "updateConnection",
      "httpMethod": "post",
      "tag": "connection",
      "description": "Update a connection",
      "parameters": [
        {
          "name": "breakingChange",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "connectionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "geography",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "namespaceDefinition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "namespaceFormat",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "nonBreakingChangesPreference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notifySchemaChanges",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "operationIds",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "prefix",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "resourceRequirements",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "schedule",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "scheduleData",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "scheduleType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sourceCatalogId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "syncCatalog",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destination_definition_specifications/get",
      "method": "getDestinationDefinitionSpecification",
      "httpMethod": "post",
      "tag": "destination_definition_specification",
      "description": "Get specification for a destinationDefinition",
      "parameters": [
        {
          "name": "destinationDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destination_definitions/create_custom",
      "method": "createCustomDestinationDefinition",
      "httpMethod": "post",
      "tag": "destination_definition",
      "description": "Creates a custom destinationDefinition for the given workspace",
      "parameters": [
        {
          "name": "destinationDefinition",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destination_definitions/delete",
      "method": "deleteDestinationDefinition",
      "httpMethod": "post",
      "tag": "destination_definition",
      "description": "Delete a destination definition",
      "parameters": [
        {
          "name": "destinationDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destination_definitions/get",
      "method": "getDestinationDefinition",
      "httpMethod": "post",
      "tag": "destination_definition",
      "description": "Get destinationDefinition",
      "parameters": [
        {
          "name": "destinationDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destination_definitions/get_for_workspace",
      "method": "getDestinationDefinitionForWorkspace",
      "httpMethod": "post",
      "tag": "destination_definition",
      "description": "Get a destinationDefinition that is configured for the given workspace",
      "parameters": [
        {
          "name": "destinationDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destination_definitions/grant_definition",
      "method": "grantDestinationDefinitionToWorkspace",
      "httpMethod": "post",
      "tag": "destination_definition",
      "description": "grant a private, non-custom destinationDefinition to a given workspace",
      "parameters": [
        {
          "name": "destinationDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destination_definitions/list",
      "method": "listDestinationDefinitions",
      "httpMethod": "post",
      "tag": "destination_definition",
      "description": "List all the destinationDefinitions the current Airbyte deployment is configured to use",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destination_definitions/list_for_workspace",
      "method": "listDestinationDefinitionsForWorkspace",
      "httpMethod": "post",
      "tag": "destination_definition",
      "description": "List all the destinationDefinitions the given workspace is configured to use",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destination_definitions/list_latest",
      "method": "listLatestDestinationDefinitions",
      "httpMethod": "post",
      "tag": "destination_definition",
      "description": "List the latest destinationDefinitions Airbyte supports",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destination_definitions/list_private",
      "method": "listPrivateDestinationDefinitions",
      "httpMethod": "post",
      "tag": "destination_definition",
      "description": "List all private, non-custom destinationDefinitions, and for each indicate whether the given workspace has a grant for using the definition. Used by admins to view and modify a given workspace's grants.",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destination_definitions/revoke_definition",
      "method": "revokeDestinationDefinitionFromWorkspace",
      "httpMethod": "post",
      "tag": "destination_definition",
      "description": "revoke a grant to a private, non-custom destinationDefinition from a given workspace",
      "parameters": [
        {
          "name": "destinationDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destination_definitions/update",
      "method": "updateDestinationDefinition",
      "httpMethod": "post",
      "tag": "destination_definition",
      "description": "Update destinationDefinition",
      "parameters": [
        {
          "name": "destinationDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dockerImageTag",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "resourceRequirements",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destination_oauths/complete_oauth",
      "method": "completeDestinationOAuth",
      "httpMethod": "post",
      "tag": "destination_oauth",
      "description": "Given a destination def ID generate an access/refresh token etc.",
      "parameters": [
        {
          "name": "destinationDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "destinationId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oAuthInputConfiguration",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "queryParams",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "redirectUrl",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destination_oauths/get_consent_url",
      "method": "getDestinationOAuthConsent",
      "httpMethod": "post",
      "tag": "destination_oauth",
      "description": "Given a destination connector definition ID, return the URL to the consent screen where to redirect the user to.",
      "parameters": [
        {
          "name": "destinationDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "destinationId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oAuthInputConfiguration",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "redirectUrl",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destination_oauths/oauth_params/create",
      "method": "setInstancewideDestinationOauthParams",
      "httpMethod": "post",
      "tag": "destination_oauth",
      "description": "Sets instancewide variables to be used for the oauth flow when creating this destination. When set, these variables will be injected into a connector's configuration before any interaction with the connector image itself. This enables running oauth flows with consistent variables e.g: the company's Google Ads developer_token, client_id, and client_secret without the user having to know about these variables.\n",
      "parameters": [
        {
          "name": "destinationDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "params",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destinations/check_connection",
      "method": "checkConnectionToDestination",
      "httpMethod": "post",
      "tag": "destination",
      "description": "Check connection to the destination",
      "parameters": [
        {
          "name": "destinationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destinations/check_connection_for_update",
      "method": "checkConnectionToDestinationForUpdate",
      "httpMethod": "post",
      "tag": "destination",
      "description": "Check connection for a proposed update to a destination",
      "parameters": [
        {
          "name": "connectionConfiguration",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "destinationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destinations/clone",
      "method": "cloneDestination",
      "httpMethod": "post",
      "tag": "destination",
      "description": "Clone destination",
      "parameters": [
        {
          "name": "destinationCloneId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "destinationConfiguration",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destinations/create",
      "method": "createDestination",
      "httpMethod": "post",
      "tag": "destination",
      "description": "Create a destination",
      "parameters": [
        {
          "name": "connectionConfiguration",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "destinationDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destinations/delete",
      "method": "deleteDestination",
      "httpMethod": "post",
      "tag": "destination",
      "description": "Delete the destination",
      "parameters": [
        {
          "name": "destinationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destinations/get",
      "method": "getDestination",
      "httpMethod": "post",
      "tag": "destination",
      "description": "Get configured destination",
      "parameters": [
        {
          "name": "destinationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destinations/list",
      "method": "listDestinationsForWorkspace",
      "httpMethod": "post",
      "tag": "destination",
      "description": "List configured destinations for a workspace",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destinations/search",
      "method": "searchDestinations",
      "httpMethod": "post",
      "tag": "destination",
      "description": "Search destinations",
      "parameters": [
        {
          "name": "connectionConfiguration",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "destinationDefinitionId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "destinationId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "destinationName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/destinations/update",
      "method": "updateDestination",
      "httpMethod": "post",
      "tag": "destination",
      "description": "Update a destination",
      "parameters": [
        {
          "name": "connectionConfiguration",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "destinationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/health",
      "method": "getHealthCheck",
      "httpMethod": "get",
      "tag": "health",
      "description": "Health Check",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/jobs/cancel",
      "method": "cancelJob",
      "httpMethod": "post",
      "tag": "jobs",
      "description": "Cancels a job",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/jobs/get",
      "method": "getJobInfo",
      "httpMethod": "post",
      "tag": "jobs",
      "description": "Get information about a job",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/jobs/get_debug_info",
      "method": "getJobDebugInfo",
      "httpMethod": "post",
      "tag": "jobs",
      "description": "Gets all information needed to debug this job",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/jobs/get_last_replication_job",
      "method": "getLastReplicationJob",
      "httpMethod": "post",
      "tag": "jobs",
      "description": "",
      "parameters": [
        {
          "name": "connectionId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/jobs/get_light",
      "method": "getJobInfoLight",
      "httpMethod": "post",
      "tag": "jobs",
      "description": "Get information about a job excluding attempt info and logs",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/jobs/get_normalization_status",
      "method": "getAttemptNormalizationStatusesForJob",
      "httpMethod": "post",
      "tag": "jobs",
      "description": "Get normalization status to determine if we can bypass normalization phase",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/jobs/list",
      "method": "listJobsFor",
      "httpMethod": "post",
      "tag": "jobs",
      "description": "Returns recent jobs for a connection. Jobs are returned in descending order by createdAt.",
      "parameters": [
        {
          "name": "configId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "configTypes",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "includingJobId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "pagination",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/logs/get",
      "method": "getLogs",
      "httpMethod": "post",
      "tag": "logs",
      "description": "Get logs",
      "parameters": [
        {
          "name": "logType",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/notifications/try",
      "method": "tryNotificationConfig",
      "httpMethod": "post",
      "tag": "notifications",
      "description": "Try sending a notifications",
      "parameters": [
        {
          "name": "customerioConfiguration",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "notificationType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sendOnFailure",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "sendOnSuccess",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "slackConfiguration",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/openapi",
      "method": "getOpenApiSpec",
      "httpMethod": "get",
      "tag": "openapi",
      "description": "Returns the openapi specification",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/operations/check",
      "method": "checkOperation",
      "httpMethod": "post",
      "tag": "operation",
      "description": "Check if an operation to be created is valid",
      "parameters": [
        {
          "name": "dbt",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "normalization",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "operatorType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "webhook",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/operations/create",
      "method": "createOperation",
      "httpMethod": "post",
      "tag": "operation",
      "description": "Create an operation to be applied as part of a connection pipeline",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "operatorConfiguration",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/operations/delete",
      "method": "deleteOperation",
      "httpMethod": "post",
      "tag": "operation",
      "description": "Delete an operation",
      "parameters": [
        {
          "name": "operationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/operations/get",
      "method": "getOperation",
      "httpMethod": "post",
      "tag": "operation",
      "description": "Returns an operation",
      "parameters": [
        {
          "name": "operationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/operations/list",
      "method": "listOperationsForConnection",
      "httpMethod": "post",
      "tag": "operation",
      "description": "Returns all operations for a connection.",
      "parameters": [
        {
          "name": "connectionId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/operations/update",
      "method": "updateOperation",
      "httpMethod": "post",
      "tag": "operation",
      "description": "Update an operation",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "operationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "operatorConfiguration",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/scheduler/destinations/check_connection",
      "method": "executeDestinationCheckConnection",
      "httpMethod": "post",
      "tag": "scheduler",
      "description": "Run check connection for a given destination configuration",
      "parameters": [
        {
          "name": "connectionConfiguration",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "destinationDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "destinationId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/scheduler/sources/check_connection",
      "method": "executeSourceCheckConnection",
      "httpMethod": "post",
      "tag": "scheduler",
      "description": "Run check connection for a given source configuration",
      "parameters": [
        {
          "name": "connectionConfiguration",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "sourceDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sourceId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/scheduler/sources/discover_schema",
      "method": "executeSourceDiscoverSchema",
      "httpMethod": "post",
      "tag": "scheduler",
      "description": "Run discover schema for a given source a source configuration",
      "parameters": [
        {
          "name": "connectionConfiguration",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "sourceDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sourceId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Returns the results of a discover catalog job. If the job was not successful, the catalog field will not be present. jobInfo will aways be present and its status be used to determine if the job was successful or not."
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/source_definition_specifications/get",
      "method": "getSourceDefinitionSpecification",
      "httpMethod": "post",
      "tag": "source_definition_specification",
      "description": "Get specification for a SourceDefinition.",
      "parameters": [
        {
          "name": "sourceDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/source_definitions/create_custom",
      "method": "createCustomSourceDefinition",
      "httpMethod": "post",
      "tag": "source_definition",
      "description": "Creates a custom sourceDefinition for the given workspace",
      "parameters": [
        {
          "name": "sourceDefinition",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/source_definitions/delete",
      "method": "deleteSourceDefinition",
      "httpMethod": "post",
      "tag": "source_definition",
      "description": "Delete a source definition",
      "parameters": [
        {
          "name": "sourceDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/source_definitions/get",
      "method": "getSourceDefinition",
      "httpMethod": "post",
      "tag": "source_definition",
      "description": "Get source",
      "parameters": [
        {
          "name": "sourceDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/source_definitions/get_for_workspace",
      "method": "getSourceDefinitionForWorkspace",
      "httpMethod": "post",
      "tag": "source_definition",
      "description": "Get a sourceDefinition that is configured for the given workspace",
      "parameters": [
        {
          "name": "sourceDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/source_definitions/grant_definition",
      "method": "grantSourceDefinitionToWorkspace",
      "httpMethod": "post",
      "tag": "source_definition",
      "description": "grant a private, non-custom sourceDefinition to a given workspace",
      "parameters": [
        {
          "name": "sourceDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/source_definitions/list",
      "method": "listSourceDefinitions",
      "httpMethod": "post",
      "tag": "source_definition",
      "description": "List all the sourceDefinitions the current Airbyte deployment is configured to use",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/source_definitions/list_for_workspace",
      "method": "listSourceDefinitionsForWorkspace",
      "httpMethod": "post",
      "tag": "source_definition",
      "description": "List all the sourceDefinitions the given workspace is configured to use",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/source_definitions/list_latest",
      "method": "listLatestSourceDefinitions",
      "httpMethod": "post",
      "tag": "source_definition",
      "description": "List the latest sourceDefinitions Airbyte supports",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/source_definitions/list_private",
      "method": "listPrivateSourceDefinitions",
      "httpMethod": "post",
      "tag": "source_definition",
      "description": "List all private, non-custom sourceDefinitions, and for each indicate whether the given workspace has a grant for using the definition. Used by admins to view and modify a given workspace's grants.",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/source_definitions/revoke_definition",
      "method": "revokeSourceDefinitionFromWorkspace",
      "httpMethod": "post",
      "tag": "source_definition",
      "description": "revoke a grant to a private, non-custom sourceDefinition from a given workspace",
      "parameters": [
        {
          "name": "sourceDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/source_definitions/update",
      "method": "updateSourceDefinition",
      "httpMethod": "post",
      "tag": "source_definition",
      "description": "Update a sourceDefinition",
      "parameters": [
        {
          "name": "dockerImageTag",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "resourceRequirements",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "sourceDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/source_oauths/complete_oauth",
      "method": "completeSourceOAuth",
      "httpMethod": "post",
      "tag": "source_oauth",
      "description": "Given a source def ID generate an access/refresh token etc.",
      "parameters": [
        {
          "name": "oAuthInputConfiguration",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "queryParams",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "redirectUrl",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sourceDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sourceId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/source_oauths/get_consent_url",
      "method": "getSourceOAuthConsent",
      "httpMethod": "post",
      "tag": "source_oauth",
      "description": "Given a source connector definition ID, return the URL to the consent screen where to redirect the user to.",
      "parameters": [
        {
          "name": "oAuthInputConfiguration",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "redirectUrl",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sourceDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sourceId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/source_oauths/oauth_params/create",
      "method": "setInstancewideSourceOauthParams",
      "httpMethod": "post",
      "tag": "source_oauth",
      "description": "Sets instancewide variables to be used for the oauth flow when creating this source. When set, these variables will be injected into a connector's configuration before any interaction with the connector image itself. This enables running oauth flows with consistent variables e.g: the company's Google Ads developer_token, client_id, and client_secret without the user having to know about these variables.\n",
      "parameters": [
        {
          "name": "params",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "sourceDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/sources/check_connection",
      "method": "checkConnectionToSource",
      "httpMethod": "post",
      "tag": "source",
      "description": "Check connection to the source",
      "parameters": [
        {
          "name": "sourceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/sources/check_connection_for_update",
      "method": "checkConnectionToSourceForUpdate",
      "httpMethod": "post",
      "tag": "source",
      "description": "Check connection for a proposed update to a source",
      "parameters": [
        {
          "name": "connectionConfiguration",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sourceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/sources/clone",
      "method": "cloneSource",
      "httpMethod": "post",
      "tag": "source",
      "description": "Clone source",
      "parameters": [
        {
          "name": "sourceCloneId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sourceConfiguration",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/sources/create",
      "method": "createSource",
      "httpMethod": "post",
      "tag": "source",
      "description": "Create a source",
      "parameters": [
        {
          "name": "connectionConfiguration",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sourceDefinitionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/sources/delete",
      "method": "deleteSource",
      "httpMethod": "post",
      "tag": "source",
      "description": "Delete a source",
      "parameters": [
        {
          "name": "sourceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/sources/discover_schema",
      "method": "discoverSchemaForSource",
      "httpMethod": "post",
      "tag": "source",
      "description": "Discover the schema catalog of the source",
      "parameters": [
        {
          "name": "connectionId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_cache",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "notifySchemaChange",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "sourceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Returns the results of a discover catalog job. If the job was not successful, the catalog field will not be present. jobInfo will aways be present and its status be used to determine if the job was successful or not."
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/sources/get",
      "method": "getSource",
      "httpMethod": "post",
      "tag": "source",
      "description": "Get source",
      "parameters": [
        {
          "name": "sourceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/sources/list",
      "method": "listSourcesForWorkspace",
      "httpMethod": "post",
      "tag": "source",
      "description": "List sources for workspace",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/sources/most_recent_source_actor_catalog",
      "method": "getMostRecentSourceActorCatalog",
      "httpMethod": "post",
      "tag": "source",
      "description": "Get most recent ActorCatalog for source",
      "parameters": [
        {
          "name": "sourceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A source actor catalog with the timestamp it was mostly recently updated"
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/sources/search",
      "method": "searchSources",
      "httpMethod": "post",
      "tag": "source",
      "description": "Search sources",
      "parameters": [
        {
          "name": "connectionConfiguration",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sourceDefinitionId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sourceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sourceName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/sources/update",
      "method": "updateSource",
      "httpMethod": "post",
      "tag": "source",
      "description": "Update a source",
      "parameters": [
        {
          "name": "connectionConfiguration",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sourceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/sources/write_discover_catalog_result",
      "method": "writeDiscoverCatalogResult",
      "httpMethod": "post",
      "tag": "source",
      "description": "Should only called from worker, to write result from discover activity back to DB.",
      "parameters": [
        {
          "name": "catalog",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "configurationHash",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "connectorVersion",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sourceId",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/state/create_or_update",
      "method": "createOrUpdateState",
      "httpMethod": "post",
      "tag": "state",
      "description": "Create or update the state for a connection.",
      "parameters": [
        {
          "name": "connectionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "connectionState",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Contains the state for a connection. The stateType field identifies what type of state it is. Only the field corresponding to that type will be set, the rest will be null. If stateType=not_set, then none of the fields will be set."
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/state/get",
      "method": "getState",
      "httpMethod": "post",
      "tag": "state",
      "description": "Fetch the current state for a connection.",
      "parameters": [
        {
          "name": "connectionId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Contains the state for a connection. The stateType field identifies what type of state it is. Only the field corresponding to that type will be set, the rest will be null. If stateType=not_set, then none of the fields will be set."
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/web_backend/check_updates",
      "method": "webBackendCheckUpdates",
      "httpMethod": "post",
      "tag": "web_backend",
      "description": "Returns a summary of source and destination definitions that could be updated.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Summary of source and destination definitions that could be updated"
        }
      ]
    },
    {
      "url": "/v1/web_backend/connections/create",
      "method": "webBackendCreateConnection",
      "httpMethod": "post",
      "tag": "web_backend",
      "description": "Create a connection",
      "parameters": [
        {
          "name": "destinationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "geography",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "namespaceDefinition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "namespaceFormat",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "nonBreakingChangesPreference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "operationIds",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "operations",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "prefix",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "resourceRequirements",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "schedule",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "scheduleData",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "scheduleType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sourceCatalogId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sourceId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "syncCatalog",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/web_backend/connections/get",
      "method": "webBackendGetConnection",
      "httpMethod": "post",
      "tag": "web_backend",
      "description": "Get a connection",
      "parameters": [
        {
          "name": "connectionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "withRefreshedCatalog",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/web_backend/connections/list",
      "method": "webBackendListConnectionsForWorkspace",
      "httpMethod": "post",
      "tag": "web_backend",
      "description": "Returns all non-deleted connections for a workspace.",
      "parameters": [
        {
          "name": "destinationId",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "sourceId",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/web_backend/connections/update",
      "method": "webBackendUpdateConnection",
      "httpMethod": "post",
      "tag": "web_backend",
      "description": "Update a connection",
      "parameters": [
        {
          "name": "connectionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "geography",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "namespaceDefinition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "namespaceFormat",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "nonBreakingChangesPreference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notifySchemaChanges",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "operations",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "prefix",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "resourceRequirements",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "schedule",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "scheduleData",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "scheduleType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "skipReset",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "sourceCatalogId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "syncCatalog",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/web_backend/geographies/list",
      "method": "webBackendListGeographies",
      "httpMethod": "post",
      "tag": "web_backend",
      "description": "Returns available geographies can be selected to run data syncs in a particular geography.\nThe 'auto' entry indicates that the sync will be automatically assigned to a geography according\nto the platform default behavior. Entries other than 'auto' are two-letter country codes that\nfollow the ISO 3166-1 alpha-2 standard.\n",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/web_backend/state/get_type",
      "method": "getStateType",
      "httpMethod": "post",
      "tag": "web_backend",
      "description": "Fetch the current state type for a connection.",
      "parameters": [
        {
          "name": "connectionId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/web_backend/workspace/state",
      "method": "webBackendGetWorkspaceState",
      "httpMethod": "post",
      "tag": "web_backend",
      "description": "Returns the current state of a workspace",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/workspaces/create",
      "method": "createWorkspace",
      "httpMethod": "post",
      "tag": "workspace",
      "description": "Creates a workspace",
      "parameters": [
        {
          "name": "anonymousDataCollection",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "defaultGeography",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "displaySetupWizard",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "news",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "notifications",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "securityUpdates",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "webhookConfigs",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/workspaces/delete",
      "method": "deleteWorkspace",
      "httpMethod": "post",
      "tag": "workspace",
      "description": "Deletes a workspace",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/workspaces/get",
      "method": "getWorkspace",
      "httpMethod": "post",
      "tag": "workspace",
      "description": "Find workspace by ID",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/workspaces/get_by_connection_id",
      "method": "getWorkspaceByConnectionId",
      "httpMethod": "post",
      "tag": "workspace",
      "description": "Find workspace by connection id",
      "parameters": [
        {
          "name": "connectionId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/workspaces/get_by_slug",
      "method": "getWorkspaceBySlug",
      "httpMethod": "post",
      "tag": "workspace",
      "description": "Find workspace by slug",
      "parameters": [
        {
          "name": "slug",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/workspaces/list",
      "method": "listWorkspaces",
      "httpMethod": "post",
      "tag": "workspace",
      "description": "List all workspaces registered in the current Airbyte deployment",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/workspaces/tag_feedback_status_as_done",
      "method": "updateWorkspaceFeedback",
      "httpMethod": "post",
      "tag": "workspace",
      "description": "Update workspace feedback state",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/workspaces/update",
      "method": "updateWorkspace",
      "httpMethod": "post",
      "tag": "workspace",
      "description": "Update workspace state",
      "parameters": [
        {
          "name": "anonymousDataCollection",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "defaultGeography",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "displaySetupWizard",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "initialSetupComplete",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "news",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "notifications",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "securityUpdates",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "webhookConfigs",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/workspaces/update_name",
      "method": "updateWorkspaceName",
      "httpMethod": "post",
      "tag": "workspace",
      "description": "Update workspace name",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "http://airbyte.local",
  "apiDescription": "Airbyte Configuration API\n[https://airbyte.io](https://airbyte.io).\n\nThis API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.\n\nHere are some conventions that this API follows:\n* All endpoints are http POST methods.\n* All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params.\n* The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`.\n* For all `update` methods, the whole object must be passed in, even the fields that did not change.\n\nAuthentication (OSS):\n* When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': \"Basic YWlyYnl0ZTpwYXNzd29yZA==\"`\n",
  "apiTitle": "Airbyte Configuration API",
  "endpoints": 102,
  "sdkMethods": 102,
  "schemas": 210,
  "parameters": 288,
  "contactEmail": "contact@airbyte.io",
  "difficultyScore": 279,
  "difficulty": "Hard"
}