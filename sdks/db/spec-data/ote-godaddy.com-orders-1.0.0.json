{
  "providerName": "ote-godaddy.com",
  "openApiRaw": "https://developer.godaddy.com/swagger/swagger_orders.json",
  "homepage": "ote-godaddy.com",
  "serviceName": "orders",
  "apiVersion": "1.0.0",
  "methods": [
    {
      "url": "/v1/orders",
      "method": "list",
      "httpMethod": "get",
      "tag": "v1",
      "description": "Retrieve a list of orders for the authenticated shopper. Only one filter may be used at a time",
      "parameters": [
        {
          "name": "periodStart",
          "schema": "string",
          "required": false,
          "description": "Start of range indicating what time-frame should be returned. Inclusive"
        },
        {
          "name": "periodEnd",
          "schema": "string",
          "required": false,
          "description": "End of range indicating what time-frame should be returned. Inclusive"
        },
        {
          "name": "domain",
          "schema": "string",
          "required": false,
          "description": "Domain name to use as the filter of results"
        },
        {
          "name": "productGroupId",
          "schema": "integer",
          "required": false,
          "description": "Product group id to use as the filter of results"
        },
        {
          "name": "paymentProfileId",
          "schema": "integer",
          "required": false,
          "description": "Payment profile id to use as the filter of results"
        },
        {
          "name": "parentOrderId",
          "schema": "string",
          "required": false,
          "description": "Parent order id to use as the filter of results"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Number of results to skip for pagination"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Maximum number of items to return"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Property name that will be used to sort results. '-' indicates descending"
        },
        {
          "name": "X-Shopper-Id",
          "schema": "string",
          "required": false,
          "description": "Shopper ID to be operated on, if different from JWT<br/><b>Reseller subaccounts are not supported</b>"
        },
        {
          "name": "X-Market-Id",
          "schema": "string",
          "required": false,
          "description": "Unique identifier of the Market in which the request is happening"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        },
        {
          "statusCode": "504",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/orders/{orderId}",
      "method": "get",
      "httpMethod": "get",
      "tag": "v1",
      "description": "Retrieve details for specified order",
      "parameters": [
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "Order id whose details are to be retrieved"
        },
        {
          "name": "X-Shopper-Id",
          "schema": "string",
          "required": false,
          "description": "Shopper ID to be operated on, if different from JWT<br/><b>Reseller subaccounts are not supported</b>"
        },
        {
          "name": "X-Market-Id",
          "schema": "string",
          "required": false,
          "description": "Unique identifier of the Market in which the request is happening"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        },
        {
          "statusCode": "504",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "//api.ote-godaddy.com",
  "apiTitle": "",
  "endpoints": 2,
  "sdkMethods": 2,
  "schemas": 20,
  "parameters": 14,
  "difficultyScore": 15.5,
  "difficulty": "Easy"
}