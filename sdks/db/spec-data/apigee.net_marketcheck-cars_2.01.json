{
  "providerName": "apigee.net",
  "openApiRaw": "https://new-verticals-dot-marketcheck-gcp.uc.r.appspot.com/api-docs",
  "securitySchemes": {
    "authorizeEndpoint": {
      "scheme": "basic",
      "type": "http"
    }
  },
  "homepage": "apigee.net",
  "serviceName": "marketcheck-cars",
  "apiVersion": "2.01",
  "methods": [
    {
      "url": "/car/dealer/inventory/active",
      "method": "/car/dealer/inventory/activeGet",
      "httpMethod": "get",
      "tag": "Car Search",
      "typeScriptTag": "carSearch",
      "description": "Get dealers active inventory",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "appendApiKey",
          "schema": "boolean",
          "description": "Flag on whether to include api_key in response API urls (if any)"
        },
        {
          "name": "latitude",
          "schema": "number",
          "description": "Latitude component of location"
        },
        {
          "name": "longitude",
          "schema": "number",
          "description": "Longitude component of location"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "includeLease",
          "schema": "boolean",
          "required": false,
          "description": "Boolean param to search for listings that include leasing options in them"
        },
        {
          "name": "includeFinance",
          "schema": "boolean",
          "required": false,
          "description": "Boolean param to search for listings that include finance options in them"
        },
        {
          "name": "leaseTerm",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact lease term, or inside a range with min and max seperated by a dash like lease_term=30-60"
        },
        {
          "name": "leaseDownPayment",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment in lease offers, or inside a range with min and max seperated by a dash like lease_down_payment=30-60"
        },
        {
          "name": "leaseEmp",
          "schema": "string",
          "required": false,
          "description": "Search listings with lease offers exactly matching Estimated Monthly Payment(EMI), or inside a range with min and max seperated by a dash like lease_emp=30-60"
        },
        {
          "name": "financeLoanTerm",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact finance loan term, or inside a range with min and max seperated by a dash like finance_loan_term=30-60"
        },
        {
          "name": "financeLoanApr",
          "schema": "string",
          "required": false,
          "description": "Search listings with finance offers exactly matching loans Annual Percentage Rate, or inside a range with min and max seperated by a dash like finance_loan_apr=30-60"
        },
        {
          "name": "financeEmp",
          "schema": "string",
          "required": false,
          "description": "Search listings with finance offers exactly matching Estimated Monthly Payment(EMI), or inside a range with min and max seperated by a dash like finance_emp=30-60"
        },
        {
          "name": "financeDownPayment",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment in finance offers, or inside a range with min and max seperated by a dash like finance_down_payment=30-60"
        },
        {
          "name": "financeDownPaymentPer",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment percentage in finance offers, or inside a range with min and max seperated by a dash like finance_down_payment_per=30-60"
        },
        {
          "name": "carType",
          "schema": "string",
          "required": false,
          "description": "Car type. Allowed values are - new / used / certified"
        },
        {
          "name": "carfax1Owner",
          "schema": "string",
          "required": false,
          "description": "Indicates whether car has had only one owner or not"
        },
        {
          "name": "carfaxCleanTitle",
          "schema": "string",
          "required": false,
          "description": "Indicates whether car has clean ownership records"
        },
        {
          "name": "yearRange",
          "schema": "string",
          "required": false,
          "description": "Year range to filter listings with the year in the range given. Range to be given in the format - min-max e.g. 2019-2021"
        },
        {
          "name": "year",
          "schema": "string",
          "description": "To filter listing on their year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "To filter listings on their make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "To filter listings on their model"
        },
        {
          "name": "trim",
          "schema": "string",
          "description": "To filter listing on their trim"
        },
        {
          "name": "dealerId",
          "schema": "string",
          "required": false,
          "description": "Dealer id to filter the listings."
        },
        {
          "name": "vin",
          "schema": "string",
          "description": "To filter listing on their VIN"
        },
        {
          "name": "source",
          "schema": "string",
          "description": "To filter listing on their source"
        },
        {
          "name": "bodyType",
          "schema": "string",
          "description": "To filter listing on their body type"
        },
        {
          "name": "bodySubtype",
          "schema": "string",
          "required": false,
          "description": "Body subtype to filter the listings on. Valid filter values are those that our Search facets API returns for unique body subtypes. You can pass in multiple body subtype values comma separated"
        },
        {
          "name": "vehicleType",
          "schema": "string",
          "description": "To filter listing on their vehicle type"
        },
        {
          "name": "vins",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of 17 digit vins to search the matching cars for. Only 10 VINs allowed per request. If the request contains more than 10 VINs the first 10 VINs will be considered. Could be used as a More Like This or Similar Vehicles search for the given VINs. Ths vins parameter is an alternative to taxonomy_vins or ymmt parameters available with the search API. vins and taxonomy_vins parameters could be used to filter our cars with the exact build represented by the vins or taxonomy_vins whereas ymmt is a top level filter that does not filter cars by the build attributes like doors, drivetrain, cylinders, body type, body subtype, vehicle type etc"
        },
        {
          "name": "taxonomyVins",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of 10 letters excert from the 17 letter VIN. The 10 letters to be picked up from the 17 letter VIN are - first 8 letters and the 10th and 11th letter. E.g. For a VIN - 1FTFW1EF3EKE57182 the taxonomy vin would be - 1FTFW1EFEK  A taxonomy VIN identified a build of a car and could be used to filter our cars of a particular build. This is an alternative to the vin or ymmt parameters to the search API."
        },
        {
          "name": "mm",
          "schema": "string",
          "required": false,
          "description": "Make-Model concatenated string. To help passing the results of auto-complete API on mm field, use this parameter and pass in the selected value as is"
        },
        {
          "name": "ymm",
          "schema": "string",
          "required": false,
          "description": "Year-Make-Model concatenated string. To help passing the results of auto-complete API on ymm field, use this parameter and pass in the selected value as is"
        },
        {
          "name": "ymmt",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of Year, Make, Model, Trim combinations. Each combination needs to have the year,make,model, trim values separated by a pipe '|' character in the form year|make|model|trim. e.g. 2010|Audi|A5,2014|Nissan|Sentra|S 6MT,|Honda|City|   You could just provide strings of the form - 'year|make||' or 'year|make|model' or '|make|model|' combinations. Individual year / make / model filters provied with the API calls will take precedence over the Year, Make, Model, Trim combinations. The Make, Model, Trim values must be valid values as per the Marketcheck Vin Decoder. If you are using a separate vin decoder then look at using the 'vins' or 'taxonomy_vins' parameter to the search api instead the year|make|model|trim combinations."
        },
        {
          "name": "match",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of Year, Make, Model, Trim fields. For example - year,make,model,trim fields for which user wants to do an exact match"
        },
        {
          "name": "cylinders",
          "schema": "string",
          "description": "To filter listing on their cylinders"
        },
        {
          "name": "transmission",
          "schema": "string",
          "description": "To filter listing on their transmission"
        },
        {
          "name": "doors",
          "schema": "string",
          "required": false,
          "description": "Doors to filter the cars on. Valid filter values are those that our Search facets API returns for unique doors. You can pass in multiple doors values comma separated"
        },
        {
          "name": "drivetrain",
          "schema": "string",
          "description": "To filter listing on their drivetrain"
        },
        {
          "name": "exteriorColor",
          "schema": "string",
          "required": false,
          "description": "Exterior color to match. Valid filter values are those that our Search facets API returns for unique exterior colors. You can pass in multiple exterior color values comma separated"
        },
        {
          "name": "interiorColor",
          "schema": "string",
          "required": false,
          "description": "Interior color to match. Valid filter values are those that our Search facets API returns for unique interior colors. You can pass in multiple interior color values comma separated"
        },
        {
          "name": "baseExteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base exterior color to match. Valid filter values are those that our Search facets API returns for unique base exterior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "baseInteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base interior color to match. Valid filter values are those that our Search facets API returns for unique base interior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "engine",
          "schema": "string",
          "description": "To filter listing on their engine"
        },
        {
          "name": "engineSize",
          "schema": "string",
          "required": false,
          "description": "Engine Size to match. Valid filter values are those that our Search facets API returns for unique engine size. You can pass in multiple engine size values comma separated"
        },
        {
          "name": "engineAspiration",
          "schema": "string",
          "required": false,
          "description": "Engine Aspiration to match. Valid filter values are those that our Search facets API returns for unique Engine Aspirations. You can pass in multiple Engine aspirations values comma separated"
        },
        {
          "name": "engineBlock",
          "schema": "string",
          "required": false,
          "description": "Engine Block to match. Valid filter values are those that our Search facets API returns for unique Engine Block. You can pass in multiple Engine Block values comma separated"
        },
        {
          "name": "highwayMpgRange",
          "schema": "string",
          "required": false,
          "description": "Highway mileage range to filter listings with the mileage in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "cityMpgRange",
          "schema": "string",
          "required": false,
          "description": "City mileage range to filter listings with the mileage in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "milesRange",
          "schema": "string",
          "required": false,
          "description": "Miles range to filter listings with miles in the given range. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "priceRange",
          "schema": "string",
          "required": false,
          "description": "Price range to filter listings with the price in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "msrpRange",
          "schema": "string",
          "required": false,
          "description": "MSRP range to filter listings with the msrp in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "domRange",
          "schema": "string",
          "required": false,
          "description": "Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort by field. Default sort field is distance from the given point"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order - asc or desc. Default sort order is asc"
        },
        {
          "name": "rows",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return. Default is 10. Max is 50"
        },
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 0. Pagination is allowed only till first 10000 results for the search and sort criteria. The page value can be only between 1 to 10000/rows"
        },
        {
          "name": "includeNonVinListings",
          "schema": "boolean",
          "required": false,
          "description": "To include non vin listings. Default is false"
        },
        {
          "name": "msaCode",
          "schema": "string",
          "required": false,
          "description": "To filter listing on msa code in which they are listed"
        },
        {
          "name": "facets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of fields for which facets are requested. Facets could be requested in addition to the listings for the search. Please note - The API calls with lots of facet fields may take longer to respond."
        },
        {
          "name": "rangeFacets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of numeric fields for which range facets are requested. Range facets could be requested in addition to the listings for the search. Please note - The API calls with lots of range facet fields may take longer to respond."
        },
        {
          "name": "facetSort",
          "schema": "string",
          "required": false,
          "description": "Control sort order of facets with this parameter with default sort being on count, Other available sort is alphabetical sort, which can be obtained by using index as value for this param"
        },
        {
          "name": "stats",
          "schema": "string",
          "required": false,
          "description": "The list of fields for which stats need to be generated based on the matching listings for the search criteria. The stats consists of mean, max, average and count of listings based on which the stats are calculated for the field. Stats could be requested in addition to the listings for the search. Please note - The API calls with the stats fields may take longer to respond."
        },
        {
          "name": "country",
          "schema": "string",
          "description": "To filter listing on Country in which they are listed"
        },
        {
          "name": "plot",
          "schema": "boolean",
          "required": false,
          "description": "If plot has value true results in around 25k coordinates with limited fields to plot respective graph"
        },
        {
          "name": "nodedup",
          "schema": "boolean",
          "required": false,
          "description": "If nodedup is set to true then API will give results without is_searchable i.e multiple listings for single vin"
        },
        {
          "name": "dedup",
          "schema": "boolean",
          "required": false,
          "description": "If dedup is set to true then will give results with is_searchable irrespecive of dealer_id or source"
        },
        {
          "name": "owned",
          "schema": "boolean",
          "required": false,
          "description": "Used in combination with dealer_id or source, when true returns the listings actually owned by dealer himself"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "dealerName",
          "schema": "string",
          "required": false,
          "description": "Filter listings on dealer_name"
        },
        {
          "name": "dealershipGroupName",
          "schema": "string",
          "required": false,
          "description": "Name of the dealership group to search for"
        },
        {
          "name": "trimO",
          "schema": "string",
          "required": false,
          "description": "Filter listings on web scraped trim"
        },
        {
          "name": "trimR",
          "schema": "string",
          "required": false,
          "description": "Filter trim on custom possible matches"
        },
        {
          "name": "domActiveRange",
          "schema": "string",
          "required": false,
          "description": "Active Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "dom180Range",
          "schema": "string",
          "required": false,
          "description": "Last 180 Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "excludeCertified",
          "schema": "boolean",
          "required": false,
          "description": "Boolean param to exclude certified cars from search results"
        },
        {
          "name": "fuelType",
          "schema": "string",
          "description": "To filter listing on their fuel type"
        },
        {
          "name": "dealerType",
          "schema": "string",
          "required": false,
          "description": "Filter based on dealer type independant or franchise"
        },
        {
          "name": "photoLinks",
          "schema": "boolean",
          "required": false,
          "description": "A boolean indicating whether to include only those listings that have photo_links in search results, And discard those that don't have them"
        },
        {
          "name": "photoLinksCached",
          "schema": "boolean",
          "required": false,
          "description": "A boolean indicating whether to include only those listings that have photo_links_cached in search results, And discard those that don't have them"
        },
        {
          "name": "stockNo",
          "schema": "string",
          "description": "To filter listing on their stock number on lot"
        },
        {
          "name": "lastSeenRange",
          "schema": "string",
          "required": false,
          "description": "Last seen date range to filter listings with the last seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenRange",
          "schema": "string",
          "required": false,
          "description": "First seen date range to filter listings with the first seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenAtSourceRange",
          "schema": "string",
          "required": false,
          "description": "First seen at source date range to filter listings with the first seen at source in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenAtMcRange",
          "schema": "string",
          "required": false,
          "description": "First seen at MC date range to filter listings with the first seen at MC in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "lastSeenDays",
          "schema": "string",
          "required": false,
          "description": "Last seen days range to filter listings with the last seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenDays",
          "schema": "string",
          "required": false,
          "description": "First seen days range to filter listings with the first seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenAtSourceDays",
          "schema": "string",
          "required": false,
          "description": "First seen at source days range to filter listings with the first seen at source in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenAtMcDays",
          "schema": "string",
          "required": false,
          "description": "First seen at MC days range to filter listings with the first seen at MC in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "includeRelevantLinks",
          "schema": "boolean",
          "required": false,
          "description": "To include_relevant_links. Default is true"
        },
        {
          "name": "inventoryCountRange",
          "schema": "string",
          "required": false,
          "description": "Inventory count range to filter listings with count of total listings in dealers inventory. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "inTransit",
          "schema": "string",
          "required": false,
          "description": "A boolean to filter in transit vehicles"
        },
        {
          "name": "seatingCapacity",
          "schema": "string",
          "required": false,
          "description": "To filter on vehicle seating capacity"
        },
        {
          "name": "engineSizeRange",
          "schema": "string",
          "required": false,
          "description": "Engine size range to filter listings with engine size in the given range. Range to be given in the format - min-max e.g. 1.0-2"
        },
        {
          "name": "powertrainType",
          "schema": "string",
          "required": false,
          "description": "To filter on powertrain_type"
        },
        {
          "name": "minPhotoLinks",
          "schema": "string",
          "required": false,
          "description": "Filter listings based by number of photo links within given range"
        },
        {
          "name": "minPhotoLinksCached",
          "schema": "string",
          "required": false,
          "description": "Filter listings based by number of cached photo links within given range"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Search query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/car/recall/{vin}",
      "method": "getRecallHistory",
      "httpMethod": "get",
      "tag": "Recall Search",
      "typeScriptTag": "recallSearch",
      "description": "Recall info by vin",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "vin",
          "schema": "string",
          "required": true,
          "description": "The VIN to identify the car. Must be a valid 17 char VIN"
        },
        {
          "name": "page",
          "schema": "number",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 1."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Search query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/client/configure/get",
      "method": "get",
      "httpMethod": "get",
      "tag": "client filters",
      "typeScriptTag": "clientFilters",
      "description": "get client filters",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": "To filter listing on Country in which they are listed"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/client/configure/set",
      "method": "set",
      "httpMethod": "post",
      "tag": "client filters",
      "typeScriptTag": "clientFilters",
      "description": "set client filters",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": "To filter listing on Country in which they are listed"
        },
        {
          "name": "csvfile",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/crm_check/car/{vin}",
      "method": "crmCheck",
      "httpMethod": "get",
      "tag": "CRM Cleanse API",
      "typeScriptTag": "crmCleanseApi",
      "description": "CRM check of a particular vin",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "vin",
          "schema": "string",
          "required": true,
          "description": "The VIN to identify the car. Must be a valid 17 char VIN"
        },
        {
          "name": "saleDate",
          "schema": "string",
          "required": true,
          "description": "sale date to check whether after this listing has appeared or not. Must be 8 character long, with YYYYMMDD format"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dealer/car/uk/{id}",
      "method": "/dealer/car/uk/{id}Get",
      "httpMethod": "get",
      "tag": "Dealer API",
      "typeScriptTag": "dealerApi",
      "description": "Dealer by id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Dealer id to get all the dealer info attributes"
        },
        {
          "name": "provider",
          "schema": "boolean",
          "required": false,
          "description": "boolean param to include site providers name in response"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dealer/car/{id}",
      "method": "getDealer",
      "httpMethod": "get",
      "tag": "Dealer API",
      "typeScriptTag": "dealerApi",
      "description": "Dealer by id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Dealer id to get all the dealer info attributes"
        },
        {
          "name": "provider",
          "schema": "boolean",
          "required": false,
          "description": "boolean param to include site providers name in response"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dealer/heavy-equipment/{id}",
      "method": "/dealer/heavyEquipment/{id}Get",
      "httpMethod": "get",
      "tag": "Dealer API",
      "typeScriptTag": "dealerApi",
      "description": "Dealer by id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Dealer id to get all the dealer info attributes"
        },
        {
          "name": "provider",
          "schema": "boolean",
          "required": false,
          "description": "boolean param to include site providers name in response"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dealer/motorcycle/{id}",
      "method": "/dealer/motorcycle/{id}Get",
      "httpMethod": "get",
      "tag": "Dealer API",
      "typeScriptTag": "dealerApi",
      "description": "Dealer by id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Dealer id to get all the dealer info attributes"
        },
        {
          "name": "provider",
          "schema": "boolean",
          "required": false,
          "description": "boolean param to include site providers name in response"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dealer/rv/{id}",
      "method": "/dealer/rv/{id}Get",
      "httpMethod": "get",
      "tag": "Dealer API",
      "typeScriptTag": "dealerApi",
      "description": "Dealer by id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Dealer id to get all the dealer info attributes"
        },
        {
          "name": "provider",
          "schema": "boolean",
          "required": false,
          "description": "boolean param to include site providers name in response"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dealers/car",
      "method": "dealerSearch",
      "httpMethod": "get",
      "tag": "Dealer API",
      "typeScriptTag": "dealerApi",
      "description": "Find car dealers around",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "latitude",
          "schema": "number",
          "description": "Latitude component of location"
        },
        {
          "name": "longitude",
          "schema": "number",
          "description": "Longitude component of location"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "rows",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return. Default is 10. Max is 50"
        },
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 0. Pagination is allowed only till first 10000 results for the search and sort criteria. The page value can be only between 1 to 10000/rows"
        },
        {
          "name": "country",
          "schema": "string",
          "description": "To filter listing on Country in which they are listed"
        },
        {
          "name": "dealerType",
          "schema": "string",
          "required": false,
          "description": "Filter based on dealer type independant or franchise"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "listingCountRange",
          "schema": "string",
          "required": false,
          "description": "To filter dealers based on their inventory size. Range can be given in the format - min-max e.g. 50-100"
        },
        {
          "name": "inventoryUrl",
          "schema": "string",
          "required": false,
          "description": "inventory_url of dealer to be searched"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort by field. Default sort field is distance from the given point"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order - asc or desc. Default sort order is asc"
        },
        {
          "name": "provider",
          "schema": "boolean",
          "required": false,
          "description": "boolean param to include site providers name in response"
        },
        {
          "name": "facets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of fields for which facets are requested. Facets could be requested in addition to the listings for the search. Please note - The API calls with lots of facet fields may take longer to respond."
        },
        {
          "name": "rangeFacets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of numeric fields for which range facets are requested. Range facets could be requested in addition to the listings for the search. Please note - The API calls with lots of range facet fields may take longer to respond."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Dealers Response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dealers/car/uk",
      "method": "/dealers/car/ukGet",
      "httpMethod": "get",
      "tag": "Dealer API",
      "typeScriptTag": "dealerApi",
      "description": "Find car dealers around",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "latitude",
          "schema": "number",
          "description": "Latitude component of location"
        },
        {
          "name": "longitude",
          "schema": "number",
          "description": "Longitude component of location"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "rows",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return. Default is 10. Max is 50"
        },
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 0. Pagination is allowed only till first 10000 results for the search and sort criteria. The page value can be only between 1 to 10000/rows"
        },
        {
          "name": "country",
          "schema": "string",
          "description": "To filter listing on Country in which they are listed"
        },
        {
          "name": "dealerType",
          "schema": "string",
          "required": false,
          "description": "Filter based on dealer type independant or franchise"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "county",
          "schema": "string",
          "description": "To filter listing on county in which they are listed"
        },
        {
          "name": "listingCountRange",
          "schema": "string",
          "required": false,
          "description": "To filter dealers based on their inventory size. Range can be given in the format - min-max e.g. 50-100"
        },
        {
          "name": "inventoryUrl",
          "schema": "string",
          "required": false,
          "description": "inventory_url of dealer to be searched"
        },
        {
          "name": "postalCode",
          "schema": "string",
          "description": "To filter listing on postal code around which they are listed"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort by field. Default sort field is distance from the given point"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order - asc or desc. Default sort order is asc"
        },
        {
          "name": "provider",
          "schema": "boolean",
          "required": false,
          "description": "boolean param to include site providers name in response"
        },
        {
          "name": "facets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of fields for which facets are requested. Facets could be requested in addition to the listings for the search. Please note - The API calls with lots of facet fields may take longer to respond."
        },
        {
          "name": "rangeFacets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of numeric fields for which range facets are requested. Range facets could be requested in addition to the listings for the search. Please note - The API calls with lots of range facet fields may take longer to respond."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Dealers Response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dealers/heavy-equipment",
      "method": "/dealers/heavyEquipmentGet",
      "httpMethod": "get",
      "tag": "Dealer API",
      "typeScriptTag": "dealerApi",
      "description": "Find car dealers around",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "latitude",
          "schema": "number",
          "description": "Latitude component of location"
        },
        {
          "name": "longitude",
          "schema": "number",
          "description": "Longitude component of location"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "rows",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return. Default is 10. Max is 50"
        },
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 0. Pagination is allowed only till first 10000 results for the search and sort criteria. The page value can be only between 1 to 10000/rows"
        },
        {
          "name": "country",
          "schema": "string",
          "description": "To filter listing on Country in which they are listed"
        },
        {
          "name": "dealerType",
          "schema": "string",
          "required": false,
          "description": "Filter based on dealer type independant or franchise"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "listingCountRange",
          "schema": "string",
          "required": false,
          "description": "To filter dealers based on their inventory size. Range can be given in the format - min-max e.g. 50-100"
        },
        {
          "name": "inventoryUrl",
          "schema": "string",
          "required": false,
          "description": "inventory_url of dealer to be searched"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort by field. Default sort field is distance from the given point"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order - asc or desc. Default sort order is asc"
        },
        {
          "name": "provider",
          "schema": "boolean",
          "required": false,
          "description": "boolean param to include site providers name in response"
        },
        {
          "name": "facets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of fields for which facets are requested. Facets could be requested in addition to the listings for the search. Please note - The API calls with lots of facet fields may take longer to respond."
        },
        {
          "name": "rangeFacets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of numeric fields for which range facets are requested. Range facets could be requested in addition to the listings for the search. Please note - The API calls with lots of range facet fields may take longer to respond."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Dealers Response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dealers/motorcycle",
      "method": "/dealers/motorcycleGet",
      "httpMethod": "get",
      "tag": "Dealer API",
      "typeScriptTag": "dealerApi",
      "description": "Find car dealers around",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "latitude",
          "schema": "number",
          "description": "Latitude component of location"
        },
        {
          "name": "longitude",
          "schema": "number",
          "description": "Longitude component of location"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "rows",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return. Default is 10. Max is 50"
        },
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 0. Pagination is allowed only till first 10000 results for the search and sort criteria. The page value can be only between 1 to 10000/rows"
        },
        {
          "name": "country",
          "schema": "string",
          "description": "To filter listing on Country in which they are listed"
        },
        {
          "name": "dealerType",
          "schema": "string",
          "required": false,
          "description": "Filter based on dealer type independant or franchise"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "listingCountRange",
          "schema": "string",
          "required": false,
          "description": "To filter dealers based on their inventory size. Range can be given in the format - min-max e.g. 50-100"
        },
        {
          "name": "inventoryUrl",
          "schema": "string",
          "required": false,
          "description": "inventory_url of dealer to be searched"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort by field. Default sort field is distance from the given point"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order - asc or desc. Default sort order is asc"
        },
        {
          "name": "provider",
          "schema": "boolean",
          "required": false,
          "description": "boolean param to include site providers name in response"
        },
        {
          "name": "facets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of fields for which facets are requested. Facets could be requested in addition to the listings for the search. Please note - The API calls with lots of facet fields may take longer to respond."
        },
        {
          "name": "rangeFacets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of numeric fields for which range facets are requested. Range facets could be requested in addition to the listings for the search. Please note - The API calls with lots of range facet fields may take longer to respond."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Dealers Response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dealers/rv",
      "method": "/dealers/rvGet",
      "httpMethod": "get",
      "tag": "Dealer API",
      "typeScriptTag": "dealerApi",
      "description": "Find car dealers around",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "latitude",
          "schema": "number",
          "description": "Latitude component of location"
        },
        {
          "name": "longitude",
          "schema": "number",
          "description": "Longitude component of location"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "rows",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return. Default is 10. Max is 50"
        },
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 0. Pagination is allowed only till first 10000 results for the search and sort criteria. The page value can be only between 1 to 10000/rows"
        },
        {
          "name": "country",
          "schema": "string",
          "description": "To filter listing on Country in which they are listed"
        },
        {
          "name": "dealerType",
          "schema": "string",
          "required": false,
          "description": "Filter based on dealer type independant or franchise"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "listingCountRange",
          "schema": "string",
          "required": false,
          "description": "To filter dealers based on their inventory size. Range can be given in the format - min-max e.g. 50-100"
        },
        {
          "name": "inventoryUrl",
          "schema": "string",
          "required": false,
          "description": "inventory_url of dealer to be searched"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort by field. Default sort field is distance from the given point"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order - asc or desc. Default sort order is asc"
        },
        {
          "name": "provider",
          "schema": "boolean",
          "required": false,
          "description": "boolean param to include site providers name in response"
        },
        {
          "name": "facets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of fields for which facets are requested. Facets could be requested in addition to the listings for the search. Please note - The API calls with lots of facet fields may take longer to respond."
        },
        {
          "name": "rangeFacets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of numeric fields for which range facets are requested. Range facets could be requested in addition to the listings for the search. Please note - The API calls with lots of range facet fields may take longer to respond."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Dealers Response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/decode/car/epi/{vin}/specs",
      "method": "decodeViaEpi",
      "httpMethod": "get",
      "tag": "VIN Decoder API",
      "typeScriptTag": "vinDecoderApi",
      "description": "EPI VIN Decoder",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "vin",
          "schema": "string",
          "required": true,
          "description": "The VIN to identify the car. Must be a valid 17 char VIN"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describes the Car specification"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/decode/car/neovin/{vin}/specs",
      "method": "decodeViaNeoVin",
      "httpMethod": "get",
      "tag": "VIN Decoder API",
      "typeScriptTag": "vinDecoderApi",
      "description": "NeoVIN Decoder",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "vin",
          "schema": "string",
          "required": true,
          "description": "The VIN to identify the car. Must be a valid 17 char VIN"
        },
        {
          "name": "includeGeneric",
          "schema": "boolean",
          "required": false,
          "description": "Boolean variable to indicate wheather to include generic data as well in response"
        },
        {
          "name": "forceDecode",
          "schema": "boolean",
          "required": false,
          "description": "Decode VIN on the fly instead of cached response"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describes the NeoVIN specification"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/decode/car/{vin}/specs",
      "method": "decode",
      "httpMethod": "get",
      "tag": "VIN Decoder API",
      "typeScriptTag": "vinDecoderApi",
      "description": "VIN Decoder",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "vin",
          "schema": "string",
          "required": true,
          "description": "The VIN to identify the car. Must be a valid 17 char VIN"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describes the Car specification"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/history/car/uk/{vrm}",
      "method": "/history/car/uk/{vrm}Get",
      "httpMethod": "get",
      "tag": "Cars History API",
      "typeScriptTag": "carsHistoryApi",
      "description": "Get a cars online listing history",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "vrm",
          "schema": "string",
          "required": true,
          "description": "The VRM to identify the car."
        },
        {
          "name": "page",
          "schema": "number",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 1."
        },
        {
          "name": "includeDuplicates",
          "schema": "boolean",
          "required": false,
          "description": "Flag to indicate whether to include duplicate historical records as well in the response"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order - asc or desc. Default sort order is asc"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/history/car/{vin}",
      "method": "getCarHistory",
      "httpMethod": "get",
      "tag": "Cars History API",
      "typeScriptTag": "carsHistoryApi",
      "description": "Get a cars online listing history",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "vin",
          "schema": "string",
          "required": true,
          "description": "The VIN to identify the car. Must be a valid 17 char VIN"
        },
        {
          "name": "fields",
          "schema": "string",
          "required": false,
          "description": "List of fields to fetch, in case the default fields list in the response is to be trimmed down"
        },
        {
          "name": "page",
          "schema": "number",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 1."
        },
        {
          "name": "includeDuplicates",
          "schema": "boolean",
          "required": false,
          "description": "Flag to indicate whether to include duplicate historical records as well in the response"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order - asc or desc. Default sort order is asc"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/image/cache/car/{listingID}/{imageID}",
      "method": "getCachedImage",
      "httpMethod": "get",
      "tag": "Car Cached Image",
      "typeScriptTag": "carCachedImage",
      "description": "Fetch cached image",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "listingId",
          "schema": "string",
          "required": true,
          "description": "ID of the listing to fetch cached images for"
        },
        {
          "name": "imageId",
          "schema": "string",
          "required": true,
          "description": "ID of the image to fetch"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Cached JPEG image"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/car/auction/{id}",
      "method": "/listing/car/auction/{id}Get",
      "httpMethod": "get",
      "tag": "Car Search",
      "typeScriptTag": "carSearch",
      "description": "Listing by id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "appendApiKey",
          "schema": "boolean",
          "description": "Flag on whether to include api_key in response API urls (if any)"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        },
        {
          "name": "includeRelevantLinks",
          "schema": "boolean",
          "required": false,
          "description": "To include_relevant_links. Default is true"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents a full list of attributes available with Marketcheck for a car"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/car/auction/{id}/extra",
      "method": "/listing/car/auction/{id}/extraGet",
      "httpMethod": "get",
      "tag": "Car Search",
      "typeScriptTag": "carSearch",
      "description": "Long text Listings attributes for Listing with the given id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/car/auction/{id}/media",
      "method": "/listing/car/auction/{id}/mediaGet",
      "httpMethod": "get",
      "tag": "Car Search",
      "typeScriptTag": "carSearch",
      "description": "Listing media by id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "appendApiKey",
          "schema": "boolean",
          "description": "Flag on whether to include api_key in response API urls (if any)"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/car/fsbo/{id}",
      "method": "/listing/car/fsbo/{id}Get",
      "httpMethod": "get",
      "tag": "Car Search",
      "typeScriptTag": "carSearch",
      "description": "Listing by id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "appendApiKey",
          "schema": "boolean",
          "description": "Flag on whether to include api_key in response API urls (if any)"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        },
        {
          "name": "includeRelevantLinks",
          "schema": "boolean",
          "required": false,
          "description": "To include_relevant_links. Default is true"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents a full list of attributes available with Marketcheck for a car"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/car/fsbo/{id}/extra",
      "method": "/listing/car/fsbo/{id}/extraGet",
      "httpMethod": "get",
      "tag": "Car Search",
      "typeScriptTag": "carSearch",
      "description": "Long text Listings attributes for Listing with the given id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/car/fsbo/{id}/media",
      "method": "/listing/car/fsbo/{id}/mediaGet",
      "httpMethod": "get",
      "tag": "Car Search",
      "typeScriptTag": "carSearch",
      "description": "Listing media by id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "appendApiKey",
          "schema": "boolean",
          "description": "Flag on whether to include api_key in response API urls (if any)"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/car/uk/{id}",
      "method": "/listing/car/uk/{id}Get",
      "httpMethod": "get",
      "tag": "Car Search",
      "typeScriptTag": "carSearch",
      "description": "Listing by id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "appendApiKey",
          "schema": "boolean",
          "description": "Flag on whether to include api_key in response API urls (if any)"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents a full list of attributes available with Marketcheck for a car"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/car/uk/{id}/extra",
      "method": "/listing/car/uk/{id}/extraGet",
      "httpMethod": "get",
      "tag": "Car Search",
      "typeScriptTag": "carSearch",
      "description": "Long text Listings attributes for Listing with the given id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/car/uk/{id}/media",
      "method": "/listing/car/uk/{id}/mediaGet",
      "httpMethod": "get",
      "tag": "Car Search",
      "typeScriptTag": "carSearch",
      "description": "Listing media by id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "appendApiKey",
          "schema": "boolean",
          "description": "Flag on whether to include api_key in response API urls (if any)"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/car/{id}",
      "method": "getListing",
      "httpMethod": "get",
      "tag": "Car Search",
      "typeScriptTag": "carSearch",
      "description": "Listing by id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "appendApiKey",
          "schema": "boolean",
          "description": "Flag on whether to include api_key in response API urls (if any)"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        },
        {
          "name": "includeRelevantLinks",
          "schema": "boolean",
          "required": false,
          "description": "To include_relevant_links. Default is true"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents a full list of attributes available with Marketcheck for a car"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/car/{id}/extra",
      "method": "/listing/car/{id}/extraGet",
      "httpMethod": "get",
      "tag": "Car Search",
      "typeScriptTag": "carSearch",
      "description": "Long text Listings attributes for Listing with the given id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/car/{id}/media",
      "method": "/listing/car/{id}/mediaGet",
      "httpMethod": "get",
      "tag": "Car Search",
      "typeScriptTag": "carSearch",
      "description": "Listing media by id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "appendApiKey",
          "schema": "boolean",
          "description": "Flag on whether to include api_key in response API urls (if any)"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/heavy-equipment/{id}",
      "method": "/listing/heavyEquipment/{id}Get",
      "httpMethod": "get",
      "tag": "Heavy Equipment Search",
      "typeScriptTag": "heavyEquipmentSearch",
      "description": "Heavy equipment listing by id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents a full list of attributes available with Marketcheck for a car"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/heavy-equipment/{id}/extra",
      "method": "/listing/heavyEquipment/{id}/extraGet",
      "httpMethod": "get",
      "tag": "Heavy Equipment Search",
      "typeScriptTag": "heavyEquipmentSearch",
      "description": "Long text Heavy equipment Listings attributes for Listing with the given id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/heavy-equipment/{id}/media",
      "method": "/listing/heavyEquipment/{id}/mediaGet",
      "httpMethod": "get",
      "tag": "Heavy Equipment Search",
      "typeScriptTag": "heavyEquipmentSearch",
      "description": "Listing media by id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/motorcycle/{id}",
      "method": "/listing/motorcycle/{id}Get",
      "httpMethod": "get",
      "tag": "Motorcycle Search",
      "typeScriptTag": "motorcycleSearch",
      "description": "Motorcycle listing by id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents a full list of attributes available with Marketcheck for a car"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/motorcycle/{id}/extra",
      "method": "/listing/motorcycle/{id}/extraGet",
      "httpMethod": "get",
      "tag": "Motorcycle Search",
      "typeScriptTag": "motorcycleSearch",
      "description": "Long text Motorcycle Listings attributes for Listing with the given id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/motorcycle/{id}/media",
      "method": "/listing/motorcycle/{id}/mediaGet",
      "httpMethod": "get",
      "tag": "Motorcycle Search",
      "typeScriptTag": "motorcycleSearch",
      "description": "Motorcycle listing media by id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/rv/uk/{id}",
      "method": "/listing/rv/uk/{id}Get",
      "httpMethod": "get",
      "tag": "RV Search",
      "typeScriptTag": "rvSearch",
      "description": "RV listing by id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents a full list of attributes available with Marketcheck for a car"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/rv/uk/{id}/extra",
      "method": "/listing/rv/uk/{id}/extraGet",
      "httpMethod": "get",
      "tag": "RV Search",
      "typeScriptTag": "rvSearch",
      "description": "Long text RV Listings attributes for Listing with the given id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/rv/uk/{id}/media",
      "method": "/listing/rv/uk/{id}/mediaGet",
      "httpMethod": "get",
      "tag": "RV Search",
      "typeScriptTag": "rvSearch",
      "description": "Listing media by id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/rv/{id}",
      "method": "/listing/rv/{id}Get",
      "httpMethod": "get",
      "tag": "RV Search",
      "typeScriptTag": "rvSearch",
      "description": "RV listing by id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents a full list of attributes available with Marketcheck for a car"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/rv/{id}/extra",
      "method": "/listing/rv/{id}/extraGet",
      "httpMethod": "get",
      "tag": "RV Search",
      "typeScriptTag": "rvSearch",
      "description": "Long text RV Listings attributes for Listing with the given id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/listing/rv/{id}/media",
      "method": "/listing/rv/{id}/mediaGet",
      "httpMethod": "get",
      "tag": "RV Search",
      "typeScriptTag": "rvSearch",
      "description": "Listing media by id",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Listing id to get all the listing attributes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/mds/car",
      "method": "getMds",
      "httpMethod": "get",
      "tag": "Cars Market API",
      "typeScriptTag": "carsMarketApi",
      "description": "Market Days Supply",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "vin",
          "schema": "string",
          "required": false,
          "description": "VIN to decode"
        },
        {
          "name": "exact",
          "schema": "boolean",
          "required": false,
          "description": "Exact parameter"
        },
        {
          "name": "latitude",
          "schema": "number",
          "description": "Latitude component of location"
        },
        {
          "name": "longitude",
          "schema": "number",
          "description": "Longitude component of location"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "msaCode",
          "schema": "string",
          "required": false,
          "description": "To filter listing on msa code in which they are listed"
        },
        {
          "name": "debug",
          "schema": "boolean",
          "required": false,
          "description": "Debug parameter"
        },
        {
          "name": "includeSold",
          "schema": "boolean",
          "required": false,
          "description": "To fetch sold vins"
        },
        {
          "name": "country",
          "schema": "string",
          "description": "To filter listing on Country in which they are listed"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "ymmt",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of Year, Make, Model, Trim combinations. Each combination needs to have the year,make,model, trim values separated by a pipe '|' character in the form year|make|model|trim. e.g. 2010|Audi|A5,2014|Nissan|Sentra|S 6MT,|Honda|City|   You could just provide strings of the form - 'year|make||' or 'year|make|model' or '|make|model|' combinations. Individual year / make / model filters provied with the API calls will take precedence over the Year, Make, Model, Trim combinations. The Make, Model, Trim values must be valid values as per the Marketcheck Vin Decoder. If you are using a separate vin decoder then look at using the 'vins' or 'taxonomy_vins' parameter to the search api instead the year|make|model|trim combinations."
        },
        {
          "name": "carType",
          "schema": "string",
          "required": false,
          "description": "Car type. Allowed values are - new / used / certified"
        },
        {
          "name": "leaseTerm",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact lease term, or inside a range with min and max seperated by a dash like lease_term=30-60"
        },
        {
          "name": "leaseDownPayment",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment in lease offers, or inside a range with min and max seperated by a dash like lease_down_payment=30-60"
        },
        {
          "name": "leaseEmp",
          "schema": "string",
          "required": false,
          "description": "Search listings with lease offers exactly matching Estimated Monthly Payment(EMI), or inside a range with min and max seperated by a dash like lease_emp=30-60"
        },
        {
          "name": "financeLoanTerm",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact finance loan term, or inside a range with min and max seperated by a dash like finance_loan_term=30-60"
        },
        {
          "name": "financeLoanApr",
          "schema": "string",
          "required": false,
          "description": "Search listings with finance offers exactly matching loans Annual Percentage Rate, or inside a range with min and max seperated by a dash like finance_loan_apr=30-60"
        },
        {
          "name": "financeEmp",
          "schema": "string",
          "required": false,
          "description": "Search listings with finance offers exactly matching Estimated Monthly Payment(EMI), or inside a range with min and max seperated by a dash like finance_emp=30-60"
        },
        {
          "name": "financeDownPayment",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment in finance offers, or inside a range with min and max seperated by a dash like finance_down_payment=30-60"
        },
        {
          "name": "financeDownPaymentPer",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment percentage in finance offers, or inside a range with min and max seperated by a dash like finance_down_payment_per=30-60"
        },
        {
          "name": "carfax1Owner",
          "schema": "string",
          "required": false,
          "description": "Indicates whether car has had only one owner or not"
        },
        {
          "name": "carfaxCleanTitle",
          "schema": "string",
          "required": false,
          "description": "Indicates whether car has clean ownership records"
        },
        {
          "name": "year",
          "schema": "string",
          "description": "To filter listing on their year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "To filter listings on their make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "To filter listings on their model"
        },
        {
          "name": "trim",
          "schema": "string",
          "description": "To filter listing on their trim"
        },
        {
          "name": "dealerId",
          "schema": "string",
          "required": false,
          "description": "Dealer id to filter the listings."
        },
        {
          "name": "source",
          "schema": "string",
          "description": "To filter listing on their source"
        },
        {
          "name": "bodyType",
          "schema": "string",
          "description": "To filter listing on their body type"
        },
        {
          "name": "bodySubtype",
          "schema": "string",
          "required": false,
          "description": "Body subtype to filter the listings on. Valid filter values are those that our Search facets API returns for unique body subtypes. You can pass in multiple body subtype values comma separated"
        },
        {
          "name": "vehicleType",
          "schema": "string",
          "description": "To filter listing on their vehicle type"
        },
        {
          "name": "cylinders",
          "schema": "string",
          "description": "To filter listing on their cylinders"
        },
        {
          "name": "transmission",
          "schema": "string",
          "description": "To filter listing on their transmission"
        },
        {
          "name": "doors",
          "schema": "string",
          "required": false,
          "description": "Doors to filter the cars on. Valid filter values are those that our Search facets API returns for unique doors. You can pass in multiple doors values comma separated"
        },
        {
          "name": "drivetrain",
          "schema": "string",
          "description": "To filter listing on their drivetrain"
        },
        {
          "name": "exteriorColor",
          "schema": "string",
          "required": false,
          "description": "Exterior color to match. Valid filter values are those that our Search facets API returns for unique exterior colors. You can pass in multiple exterior color values comma separated"
        },
        {
          "name": "interiorColor",
          "schema": "string",
          "required": false,
          "description": "Interior color to match. Valid filter values are those that our Search facets API returns for unique interior colors. You can pass in multiple interior color values comma separated"
        },
        {
          "name": "baseExteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base exterior color to match. Valid filter values are those that our Search facets API returns for unique base exterior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "baseInteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base interior color to match. Valid filter values are those that our Search facets API returns for unique base interior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "engine",
          "schema": "string",
          "description": "To filter listing on their engine"
        },
        {
          "name": "engineSize",
          "schema": "string",
          "required": false,
          "description": "Engine Size to match. Valid filter values are those that our Search facets API returns for unique engine size. You can pass in multiple engine size values comma separated"
        },
        {
          "name": "engineAspiration",
          "schema": "string",
          "required": false,
          "description": "Engine Aspiration to match. Valid filter values are those that our Search facets API returns for unique Engine Aspirations. You can pass in multiple Engine aspirations values comma separated"
        },
        {
          "name": "engineBlock",
          "schema": "string",
          "required": false,
          "description": "Engine Block to match. Valid filter values are those that our Search facets API returns for unique Engine Block. You can pass in multiple Engine Block values comma separated"
        },
        {
          "name": "highwayMpgRange",
          "schema": "string",
          "required": false,
          "description": "Highway mileage range to filter listings with the mileage in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "cityMpgRange",
          "schema": "string",
          "required": false,
          "description": "City mileage range to filter listings with the mileage in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "milesRange",
          "schema": "string",
          "required": false,
          "description": "Miles range to filter listings with miles in the given range. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "priceRange",
          "schema": "string",
          "required": false,
          "description": "Price range to filter listings with the price in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "msrpRange",
          "schema": "string",
          "required": false,
          "description": "MSRP range to filter listings with the msrp in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "domRange",
          "schema": "string",
          "required": false,
          "description": "Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "dealershipGroupName",
          "schema": "string",
          "required": false,
          "description": "Name of the dealership group to search for"
        },
        {
          "name": "domActiveRange",
          "schema": "string",
          "required": false,
          "description": "Active Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "dom180Range",
          "schema": "string",
          "required": false,
          "description": "Last 180 Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "fuelType",
          "schema": "string",
          "description": "To filter listing on their fuel type"
        },
        {
          "name": "dealerType",
          "schema": "string",
          "required": false,
          "description": "Filter based on dealer type independant or franchise"
        },
        {
          "name": "engineSizeRange",
          "schema": "string",
          "required": false,
          "description": "Engine size range to filter listings with engine size in the given range. Range to be given in the format - min-max e.g. 1.0-2"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describes Market days supply results for year make model trim combination"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/popular/cars",
      "method": "getPopularCars",
      "httpMethod": "get",
      "tag": "Cars Market API",
      "typeScriptTag": "carsMarketApi",
      "description": "Get make model wise top 50 popular cars on national, state, city level",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "state",
          "schema": "string",
          "required": false,
          "description": "State level sales count"
        },
        {
          "name": "cityState",
          "schema": "string",
          "required": false,
          "description": "City level sales count, pipe seperated like city_state=jacksonville|FL"
        },
        {
          "name": "carType",
          "schema": "string",
          "required": true,
          "description": "Inventory type for which popular count is to be searched"
        },
        {
          "name": "country",
          "schema": "string",
          "required": false,
          "description": "Country for which the popular cars are to be searched"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Top 50 popular cars"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/predict/car/price",
      "method": "predictCarPrice",
      "httpMethod": "get",
      "tag": "Cars Market API",
      "typeScriptTag": "carsMarketApi",
      "description": "Predict car price based on it's specifications",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "vin",
          "schema": "string",
          "description": "Predict price for a VIN"
        },
        {
          "name": "carType",
          "schema": "string",
          "required": true,
          "description": "Car condition"
        },
        {
          "name": "year",
          "schema": "integer",
          "description": "Car manufacturing year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "Car's make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "Car's model"
        },
        {
          "name": "trim",
          "schema": "string",
          "description": "Car's trim"
        },
        {
          "name": "isCertified",
          "schema": "boolean",
          "required": false,
          "description": "Boolean to indicate car is certified or not"
        },
        {
          "name": "carfax1Owner",
          "schema": "boolean",
          "required": false,
          "description": "Boolean to indicate car is carfax one owner or not"
        },
        {
          "name": "carfaxCleanTitle",
          "schema": "boolean",
          "required": false,
          "description": "Boolean to indicate car has clean title or not"
        },
        {
          "name": "baseExteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base exterior color of the car"
        },
        {
          "name": "baseInteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base interior color of the car"
        },
        {
          "name": "transmission",
          "schema": "string",
          "description": "Transmission on the car"
        },
        {
          "name": "drivetrain",
          "schema": "string",
          "description": "Drivetrain on the car"
        },
        {
          "name": "engineSize",
          "schema": "number",
          "required": false,
          "description": "Engine Size of the car"
        },
        {
          "name": "engineBlock",
          "schema": "string",
          "required": false,
          "description": "Engine Block of the car"
        },
        {
          "name": "cylinders",
          "schema": "integer",
          "description": "Number of cylinders in the vehicle"
        },
        {
          "name": "doors",
          "schema": "integer",
          "description": "Number of doors in the vehicle"
        },
        {
          "name": "highwayMpg",
          "schema": "integer",
          "description": "Highway mileage"
        },
        {
          "name": "cityMpg",
          "schema": "integer",
          "description": "City mileage of the car"
        },
        {
          "name": "latitude",
          "schema": "number",
          "description": "Latitude component of the location"
        },
        {
          "name": "longitude",
          "schema": "number",
          "description": "Longitude component of the location"
        },
        {
          "name": "miles",
          "schema": "integer",
          "description": "miles vehicle has driven in total"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "Location zip"
        },
        {
          "name": "country",
          "schema": "string",
          "description": "Country for which car price will be predicted"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Predicted price of a car"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/predict/car/uk/fmv",
      "method": "fareValue",
      "httpMethod": "get",
      "tag": "Cars Market API",
      "typeScriptTag": "carsMarketApi",
      "description": "Predict fare value of car for UK based on YMMT & miles",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "vrm",
          "schema": "string",
          "description": "Predict price for a VRM"
        },
        {
          "name": "year",
          "schema": "integer",
          "description": "Car manufacturing year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "Car's make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "Car's model"
        },
        {
          "name": "variant",
          "schema": "string",
          "description": "Car's variant"
        },
        {
          "name": "miles",
          "schema": "integer",
          "description": "miles vehicle has driven in total"
        },
        {
          "name": "postalCode",
          "schema": "string",
          "description": "Postal code of the car"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Fare value of a car"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/predict/car/uk/price",
      "method": "predictUkCarPrice",
      "httpMethod": "get",
      "tag": "Cars Market API",
      "typeScriptTag": "carsMarketApi",
      "description": "Predict car price for UK based on it's specifications",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "vrm",
          "schema": "string",
          "description": "Predict price for a VRM"
        },
        {
          "name": "year",
          "schema": "integer",
          "description": "Car manufacturing year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "Car's make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "Car's model"
        },
        {
          "name": "trim",
          "schema": "string",
          "description": "Car's trim"
        },
        {
          "name": "baseExteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base exterior color of the car"
        },
        {
          "name": "transmission",
          "schema": "string",
          "description": "Transmission on the car"
        },
        {
          "name": "drivetrain",
          "schema": "string",
          "description": "Drivetrain on the car"
        },
        {
          "name": "engineSize",
          "schema": "number",
          "required": false,
          "description": "Engine Size of the car"
        },
        {
          "name": "cylinders",
          "schema": "integer",
          "description": "Number of cylinders in the vehicle"
        },
        {
          "name": "doors",
          "schema": "integer",
          "description": "Number of doors in the vehicle"
        },
        {
          "name": "fuelType",
          "schema": "string",
          "description": "Fuel type of the car"
        },
        {
          "name": "highwayMpg",
          "schema": "number",
          "description": "Highway mileage"
        },
        {
          "name": "cityMpg",
          "schema": "number",
          "description": "City mileage of the car"
        },
        {
          "name": "combinedMpg",
          "schema": "number",
          "description": "Combiined mileage of the car"
        },
        {
          "name": "latitude",
          "schema": "number",
          "description": "Latitude component of the location"
        },
        {
          "name": "longitude",
          "schema": "number",
          "description": "Longitude component of the location"
        },
        {
          "name": "miles",
          "schema": "integer",
          "description": "miles vehicle has driven in total"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "Location zip"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Predicted price of a car"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sales/car",
      "method": "getSalesCount",
      "httpMethod": "get",
      "tag": "Cars Market API",
      "typeScriptTag": "carsMarketApi",
      "description": "Get sales count by make, model, year, trim or taxonomy vin",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "carType",
          "schema": "string",
          "required": false,
          "description": "Inventory type for which sales count is to be searched, default is used"
        },
        {
          "name": "make",
          "schema": "string",
          "required": false,
          "description": "Make for which sales count is to be searched"
        },
        {
          "name": "mm",
          "schema": "string",
          "required": false,
          "description": "Make-Model for which sales count is to be searched, pipe seperated like mm=ford|f-150"
        },
        {
          "name": "ymm",
          "schema": "string",
          "required": false,
          "description": "Year-Make-Model for which sales count is to be searched, pipe seperated like ymm=2015|ford|f-150"
        },
        {
          "name": "ymmt",
          "schema": "string",
          "required": false,
          "description": "Year-Make-Model-Trim for which sales count is to be searched, pipe seperated like ymmt=2015|ford|f-150|platinum"
        },
        {
          "name": "taxonomyVin",
          "schema": "string",
          "required": false,
          "description": "taxonomy_vin for which sales count is to be searched"
        },
        {
          "name": "state",
          "schema": "string",
          "required": false,
          "description": "State level sales count"
        },
        {
          "name": "cityState",
          "schema": "string",
          "required": false,
          "description": "City level sales count, pipe seperated like city_state=jacksonville|FL"
        },
        {
          "name": "vin",
          "schema": "string",
          "required": false,
          "description": "VIN that will be transformed to taxonomy_vin"
        },
        {
          "name": "country",
          "schema": "string",
          "required": false,
          "description": "Country for which the sales records are to be searched"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Sales count query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/search/car/active",
      "method": "/search/car/activeGet",
      "httpMethod": "get",
      "tag": "Car Search",
      "typeScriptTag": "carSearch",
      "description": "Gets active car listings for the given search criteria",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "appendApiKey",
          "schema": "boolean",
          "description": "Flag on whether to include api_key in response API urls (if any)"
        },
        {
          "name": "latitude",
          "schema": "number",
          "description": "Latitude component of location"
        },
        {
          "name": "longitude",
          "schema": "number",
          "description": "Longitude component of location"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "includeLease",
          "schema": "boolean",
          "required": false,
          "description": "Boolean param to search for listings that include leasing options in them"
        },
        {
          "name": "includeFinance",
          "schema": "boolean",
          "required": false,
          "description": "Boolean param to search for listings that include finance options in them"
        },
        {
          "name": "leaseTerm",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact lease term, or inside a range with min and max seperated by a dash like lease_term=30-60"
        },
        {
          "name": "leaseDownPayment",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment in lease offers, or inside a range with min and max seperated by a dash like lease_down_payment=30-60"
        },
        {
          "name": "leaseEmp",
          "schema": "string",
          "required": false,
          "description": "Search listings with lease offers exactly matching Estimated Monthly Payment(EMI), or inside a range with min and max seperated by a dash like lease_emp=30-60"
        },
        {
          "name": "financeLoanTerm",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact finance loan term, or inside a range with min and max seperated by a dash like finance_loan_term=30-60"
        },
        {
          "name": "financeLoanApr",
          "schema": "string",
          "required": false,
          "description": "Search listings with finance offers exactly matching loans Annual Percentage Rate, or inside a range with min and max seperated by a dash like finance_loan_apr=30-60"
        },
        {
          "name": "financeEmp",
          "schema": "string",
          "required": false,
          "description": "Search listings with finance offers exactly matching Estimated Monthly Payment(EMI), or inside a range with min and max seperated by a dash like finance_emp=30-60"
        },
        {
          "name": "financeDownPayment",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment in finance offers, or inside a range with min and max seperated by a dash like finance_down_payment=30-60"
        },
        {
          "name": "financeDownPaymentPer",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment percentage in finance offers, or inside a range with min and max seperated by a dash like finance_down_payment_per=30-60"
        },
        {
          "name": "carType",
          "schema": "string",
          "required": false,
          "description": "Car type. Allowed values are - new / used / certified"
        },
        {
          "name": "carfax1Owner",
          "schema": "string",
          "required": false,
          "description": "Indicates whether car has had only one owner or not"
        },
        {
          "name": "carfaxCleanTitle",
          "schema": "string",
          "required": false,
          "description": "Indicates whether car has clean ownership records"
        },
        {
          "name": "yearRange",
          "schema": "string",
          "required": false,
          "description": "Year range to filter listings with the year in the range given. Range to be given in the format - min-max e.g. 2019-2021"
        },
        {
          "name": "year",
          "schema": "string",
          "description": "To filter listing on their year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "To filter listings on their make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "To filter listings on their model"
        },
        {
          "name": "trim",
          "schema": "string",
          "description": "To filter listing on their trim"
        },
        {
          "name": "vin",
          "schema": "string",
          "description": "To filter listing on their VIN"
        },
        {
          "name": "bodyType",
          "schema": "string",
          "description": "To filter listing on their body type"
        },
        {
          "name": "bodySubtype",
          "schema": "string",
          "required": false,
          "description": "Body subtype to filter the listings on. Valid filter values are those that our Search facets API returns for unique body subtypes. You can pass in multiple body subtype values comma separated"
        },
        {
          "name": "vehicleType",
          "schema": "string",
          "description": "To filter listing on their vehicle type"
        },
        {
          "name": "vins",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of 17 digit vins to search the matching cars for. Only 10 VINs allowed per request. If the request contains more than 10 VINs the first 10 VINs will be considered. Could be used as a More Like This or Similar Vehicles search for the given VINs. Ths vins parameter is an alternative to taxonomy_vins or ymmt parameters available with the search API. vins and taxonomy_vins parameters could be used to filter our cars with the exact build represented by the vins or taxonomy_vins whereas ymmt is a top level filter that does not filter cars by the build attributes like doors, drivetrain, cylinders, body type, body subtype, vehicle type etc"
        },
        {
          "name": "taxonomyVins",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of 10 letters excert from the 17 letter VIN. The 10 letters to be picked up from the 17 letter VIN are - first 8 letters and the 10th and 11th letter. E.g. For a VIN - 1FTFW1EF3EKE57182 the taxonomy vin would be - 1FTFW1EFEK  A taxonomy VIN identified a build of a car and could be used to filter our cars of a particular build. This is an alternative to the vin or ymmt parameters to the search API."
        },
        {
          "name": "mm",
          "schema": "string",
          "required": false,
          "description": "Make-Model concatenated string. To help passing the results of auto-complete API on mm field, use this parameter and pass in the selected value as is"
        },
        {
          "name": "ymm",
          "schema": "string",
          "required": false,
          "description": "Year-Make-Model concatenated string. To help passing the results of auto-complete API on ymm field, use this parameter and pass in the selected value as is"
        },
        {
          "name": "ymmt",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of Year, Make, Model, Trim combinations. Each combination needs to have the year,make,model, trim values separated by a pipe '|' character in the form year|make|model|trim. e.g. 2010|Audi|A5,2014|Nissan|Sentra|S 6MT,|Honda|City|   You could just provide strings of the form - 'year|make||' or 'year|make|model' or '|make|model|' combinations. Individual year / make / model filters provied with the API calls will take precedence over the Year, Make, Model, Trim combinations. The Make, Model, Trim values must be valid values as per the Marketcheck Vin Decoder. If you are using a separate vin decoder then look at using the 'vins' or 'taxonomy_vins' parameter to the search api instead the year|make|model|trim combinations."
        },
        {
          "name": "match",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of Year, Make, Model, Trim fields. For example - year,make,model,trim fields for which user wants to do an exact match"
        },
        {
          "name": "cylinders",
          "schema": "string",
          "description": "To filter listing on their cylinders"
        },
        {
          "name": "transmission",
          "schema": "string",
          "description": "To filter listing on their transmission"
        },
        {
          "name": "doors",
          "schema": "string",
          "required": false,
          "description": "Doors to filter the cars on. Valid filter values are those that our Search facets API returns for unique doors. You can pass in multiple doors values comma separated"
        },
        {
          "name": "drivetrain",
          "schema": "string",
          "description": "To filter listing on their drivetrain"
        },
        {
          "name": "exteriorColor",
          "schema": "string",
          "required": false,
          "description": "Exterior color to match. Valid filter values are those that our Search facets API returns for unique exterior colors. You can pass in multiple exterior color values comma separated"
        },
        {
          "name": "interiorColor",
          "schema": "string",
          "required": false,
          "description": "Interior color to match. Valid filter values are those that our Search facets API returns for unique interior colors. You can pass in multiple interior color values comma separated"
        },
        {
          "name": "baseExteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base exterior color to match. Valid filter values are those that our Search facets API returns for unique base exterior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "baseInteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base interior color to match. Valid filter values are those that our Search facets API returns for unique base interior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "engine",
          "schema": "string",
          "description": "To filter listing on their engine"
        },
        {
          "name": "engineSize",
          "schema": "string",
          "required": false,
          "description": "Engine Size to match. Valid filter values are those that our Search facets API returns for unique engine size. You can pass in multiple engine size values comma separated"
        },
        {
          "name": "engineAspiration",
          "schema": "string",
          "required": false,
          "description": "Engine Aspiration to match. Valid filter values are those that our Search facets API returns for unique Engine Aspirations. You can pass in multiple Engine aspirations values comma separated"
        },
        {
          "name": "engineBlock",
          "schema": "string",
          "required": false,
          "description": "Engine Block to match. Valid filter values are those that our Search facets API returns for unique Engine Block. You can pass in multiple Engine Block values comma separated"
        },
        {
          "name": "highwayMpgRange",
          "schema": "string",
          "required": false,
          "description": "Highway mileage range to filter listings with the mileage in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "cityMpgRange",
          "schema": "string",
          "required": false,
          "description": "City mileage range to filter listings with the mileage in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "milesRange",
          "schema": "string",
          "required": false,
          "description": "Miles range to filter listings with miles in the given range. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "priceRange",
          "schema": "string",
          "required": false,
          "description": "Price range to filter listings with the price in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "msrpRange",
          "schema": "string",
          "required": false,
          "description": "MSRP range to filter listings with the msrp in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "domRange",
          "schema": "string",
          "required": false,
          "description": "Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort by field. Default sort field is distance from the given point"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order - asc or desc. Default sort order is asc"
        },
        {
          "name": "rows",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return. Default is 10. Max is 50"
        },
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 0. Pagination is allowed only till first 10000 results for the search and sort criteria. The page value can be only between 1 to 10000/rows"
        },
        {
          "name": "includeNonVinListings",
          "schema": "boolean",
          "required": false,
          "description": "To include non vin listings. Default is false"
        },
        {
          "name": "msaCode",
          "schema": "string",
          "required": false,
          "description": "To filter listing on msa code in which they are listed"
        },
        {
          "name": "facets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of fields for which facets are requested. Facets could be requested in addition to the listings for the search. Please note - The API calls with lots of facet fields may take longer to respond."
        },
        {
          "name": "rangeFacets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of numeric fields for which range facets are requested. Range facets could be requested in addition to the listings for the search. Please note - The API calls with lots of range facet fields may take longer to respond."
        },
        {
          "name": "facetSort",
          "schema": "string",
          "required": false,
          "description": "Control sort order of facets with this parameter with default sort being on count, Other available sort is alphabetical sort, which can be obtained by using index as value for this param"
        },
        {
          "name": "stats",
          "schema": "string",
          "required": false,
          "description": "The list of fields for which stats need to be generated based on the matching listings for the search criteria. The stats consists of mean, max, average and count of listings based on which the stats are calculated for the field. Stats could be requested in addition to the listings for the search. Please note - The API calls with the stats fields may take longer to respond."
        },
        {
          "name": "country",
          "schema": "string",
          "description": "To filter listing on Country in which they are listed"
        },
        {
          "name": "plot",
          "schema": "boolean",
          "required": false,
          "description": "If plot has value true results in around 25k coordinates with limited fields to plot respective graph"
        },
        {
          "name": "nodedup",
          "schema": "boolean",
          "required": false,
          "description": "If nodedup is set to true then API will give results without is_searchable i.e multiple listings for single vin"
        },
        {
          "name": "dedup",
          "schema": "boolean",
          "required": false,
          "description": "If dedup is set to true then will give results with is_searchable irrespecive of dealer_id or source"
        },
        {
          "name": "owned",
          "schema": "boolean",
          "required": false,
          "description": "Used in combination with dealer_id or source, when true returns the listings actually owned by dealer himself"
        },
        {
          "name": "source",
          "schema": "string",
          "description": "To filter listing on their source only for widget requests"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "trimO",
          "schema": "string",
          "required": false,
          "description": "Filter listings on web scraped trim"
        },
        {
          "name": "trimR",
          "schema": "string",
          "required": false,
          "description": "Filter trim on custom possible matches"
        },
        {
          "name": "domActiveRange",
          "schema": "string",
          "required": false,
          "description": "Active Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "dom180Range",
          "schema": "string",
          "required": false,
          "description": "Last 180 Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "excludeCertified",
          "schema": "boolean",
          "required": false,
          "description": "Boolean param to exclude certified cars from search results"
        },
        {
          "name": "fuelType",
          "schema": "string",
          "description": "To filter listing on their fuel type"
        },
        {
          "name": "dealerType",
          "schema": "string",
          "required": false,
          "description": "Filter based on dealer type independant or franchise"
        },
        {
          "name": "photoLinks",
          "schema": "boolean",
          "required": false,
          "description": "A boolean indicating whether to include only those listings that have photo_links in search results, And discard those that don't have them"
        },
        {
          "name": "photoLinksCached",
          "schema": "boolean",
          "required": false,
          "description": "A boolean indicating whether to include only those listings that have photo_links_cached in search results, And discard those that don't have them"
        },
        {
          "name": "stockNo",
          "schema": "string",
          "description": "To filter listing on their stock number on lot"
        },
        {
          "name": "lastSeenRange",
          "schema": "string",
          "required": false,
          "description": "Last seen date range to filter listings with the last seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenRange",
          "schema": "string",
          "required": false,
          "description": "First seen date range to filter listings with the first seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenAtSourceRange",
          "schema": "string",
          "required": false,
          "description": "First seen at source date range to filter listings with the first seen at source in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenAtMcRange",
          "schema": "string",
          "required": false,
          "description": "First seen at MC date range to filter listings with the first seen at MC in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "lastSeenDays",
          "schema": "string",
          "required": false,
          "description": "Last seen days range to filter listings with the last seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenDays",
          "schema": "string",
          "required": false,
          "description": "First seen days range to filter listings with the first seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenAtSourceDays",
          "schema": "string",
          "required": false,
          "description": "First seen at source days range to filter listings with the first seen at source in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenAtMcDays",
          "schema": "string",
          "required": false,
          "description": "First seen at MC days range to filter listings with the first seen at MC in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "includeRelevantLinks",
          "schema": "boolean",
          "required": false,
          "description": "To include_relevant_links. Default is true"
        },
        {
          "name": "inventoryCountRange",
          "schema": "string",
          "required": false,
          "description": "Inventory count range to filter listings with count of total listings in dealers inventory. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "dealerId",
          "schema": "string",
          "required": false,
          "description": "Dealer id to filter the listings."
        },
        {
          "name": "excludeDealerIds",
          "schema": "string",
          "required": false,
          "description": "A list of dealer ids to exclude from result"
        },
        {
          "name": "excludeSources",
          "schema": "string",
          "required": false,
          "description": "A list of sources to exclude from result"
        },
        {
          "name": "inTransit",
          "schema": "string",
          "required": false,
          "description": "A boolean to filter in transit vehicles"
        },
        {
          "name": "seatingCapacity",
          "schema": "string",
          "required": false,
          "description": "To filter on vehicle seating capacity"
        },
        {
          "name": "powertrainType",
          "schema": "string",
          "required": false,
          "description": "To filter on powertrain_type"
        },
        {
          "name": "priceChange",
          "schema": "string",
          "required": false,
          "description": "Query to filter listings based on their positive and negative price change"
        },
        {
          "name": "priceChangeRange",
          "schema": "string",
          "required": false,
          "description": "Price change range to filter listings with price change within given price_change_range. Range to be given in the format - min-max e.g. 10-500"
        },
        {
          "name": "activeInventoryDateRange",
          "schema": "string",
          "required": false,
          "description": "date range to filter listings that were active within given date range. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "engineSizeRange",
          "schema": "string",
          "required": false,
          "description": "Engine size range to filter listings with engine size in the given range. Range to be given in the format - min-max e.g. 1.0-2"
        },
        {
          "name": "highValueFeatures",
          "schema": "string",
          "description": "To filter listings on their high_value_features. Results will be intersection of provided HVFs"
        },
        {
          "name": "minPhotoLinks",
          "schema": "string",
          "required": false,
          "description": "Filter listings based by number of photo links within given range"
        },
        {
          "name": "minPhotoLinksCached",
          "schema": "string",
          "required": false,
          "description": "Filter listings based by number of cached photo links within given range"
        },
        {
          "name": "clientFilters",
          "schema": "boolean",
          "required": false,
          "description": "Flag to add explicit filters set on client level in solr"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Search query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/search/car/active/rank",
      "method": "searchAndRankCar",
      "httpMethod": "post",
      "tag": "Rank Car Listings",
      "typeScriptTag": "rankCarListings",
      "description": "Compute relative rank for car listings.",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "appendApiKey",
          "schema": "boolean",
          "description": "Flag on whether to include api_key in response API urls (if any)"
        },
        {
          "name": "latitude",
          "schema": "number",
          "description": "Latitude component of location"
        },
        {
          "name": "longitude",
          "schema": "number",
          "description": "Longitude component of location"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "includeLease",
          "schema": "boolean",
          "required": false,
          "description": "Boolean param to search for listings that include leasing options in them"
        },
        {
          "name": "includeFinance",
          "schema": "boolean",
          "required": false,
          "description": "Boolean param to search for listings that include finance options in them"
        },
        {
          "name": "leaseTerm",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact lease term, or inside a range with min and max seperated by a dash like lease_term=30-60"
        },
        {
          "name": "leaseDownPayment",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment in lease offers, or inside a range with min and max seperated by a dash like lease_down_payment=30-60"
        },
        {
          "name": "leaseEmp",
          "schema": "string",
          "required": false,
          "description": "Search listings with lease offers exactly matching Estimated Monthly Payment(EMI), or inside a range with min and max seperated by a dash like lease_emp=30-60"
        },
        {
          "name": "financeLoanTerm",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact finance loan term, or inside a range with min and max seperated by a dash like finance_loan_term=30-60"
        },
        {
          "name": "financeLoanApr",
          "schema": "string",
          "required": false,
          "description": "Search listings with finance offers exactly matching loans Annual Percentage Rate, or inside a range with min and max seperated by a dash like finance_loan_apr=30-60"
        },
        {
          "name": "financeEmp",
          "schema": "string",
          "required": false,
          "description": "Search listings with finance offers exactly matching Estimated Monthly Payment(EMI), or inside a range with min and max seperated by a dash like finance_emp=30-60"
        },
        {
          "name": "financeDownPayment",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment in finance offers, or inside a range with min and max seperated by a dash like finance_down_payment=30-60"
        },
        {
          "name": "financeDownPaymentPer",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment percentage in finance offers, or inside a range with min and max seperated by a dash like finance_down_payment_per=30-60"
        },
        {
          "name": "carType",
          "schema": "string",
          "required": false,
          "description": "Car type. Allowed values are - new / used / certified"
        },
        {
          "name": "carfax1Owner",
          "schema": "string",
          "required": false,
          "description": "Indicates whether car has had only one owner or not"
        },
        {
          "name": "carfaxCleanTitle",
          "schema": "string",
          "required": false,
          "description": "Indicates whether car has clean ownership records"
        },
        {
          "name": "year",
          "schema": "string",
          "description": "To filter listing on their year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "To filter listings on their make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "To filter listings on their model"
        },
        {
          "name": "trim",
          "schema": "string",
          "description": "To filter listing on their trim"
        },
        {
          "name": "vin",
          "schema": "string",
          "description": "To filter listing on their VIN"
        },
        {
          "name": "bodyType",
          "schema": "string",
          "description": "To filter listing on their body type"
        },
        {
          "name": "bodySubtype",
          "schema": "string",
          "required": false,
          "description": "Body subtype to filter the listings on. Valid filter values are those that our Search facets API returns for unique body subtypes. You can pass in multiple body subtype values comma separated"
        },
        {
          "name": "vehicleType",
          "schema": "string",
          "description": "To filter listing on their vehicle type"
        },
        {
          "name": "vins",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of 17 digit vins to search the matching cars for. Only 10 VINs allowed per request. If the request contains more than 10 VINs the first 10 VINs will be considered. Could be used as a More Like This or Similar Vehicles search for the given VINs. Ths vins parameter is an alternative to taxonomy_vins or ymmt parameters available with the search API. vins and taxonomy_vins parameters could be used to filter our cars with the exact build represented by the vins or taxonomy_vins whereas ymmt is a top level filter that does not filter cars by the build attributes like doors, drivetrain, cylinders, body type, body subtype, vehicle type etc"
        },
        {
          "name": "taxonomyVins",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of 10 letters excert from the 17 letter VIN. The 10 letters to be picked up from the 17 letter VIN are - first 8 letters and the 10th and 11th letter. E.g. For a VIN - 1FTFW1EF3EKE57182 the taxonomy vin would be - 1FTFW1EFEK  A taxonomy VIN identified a build of a car and could be used to filter our cars of a particular build. This is an alternative to the vin or ymmt parameters to the search API."
        },
        {
          "name": "ymmt",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of Year, Make, Model, Trim combinations. Each combination needs to have the year,make,model, trim values separated by a pipe '|' character in the form year|make|model|trim. e.g. 2010|Audi|A5,2014|Nissan|Sentra|S 6MT,|Honda|City|   You could just provide strings of the form - 'year|make||' or 'year|make|model' or '|make|model|' combinations. Individual year / make / model filters provied with the API calls will take precedence over the Year, Make, Model, Trim combinations. The Make, Model, Trim values must be valid values as per the Marketcheck Vin Decoder. If you are using a separate vin decoder then look at using the 'vins' or 'taxonomy_vins' parameter to the search api instead the year|make|model|trim combinations."
        },
        {
          "name": "match",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of Year, Make, Model, Trim fields. For example - year,make,model,trim fields for which user wants to do an exact match"
        },
        {
          "name": "cylinders",
          "schema": "string",
          "description": "To filter listing on their cylinders"
        },
        {
          "name": "transmission",
          "schema": "string",
          "description": "To filter listing on their transmission"
        },
        {
          "name": "doors",
          "schema": "string",
          "required": false,
          "description": "Doors to filter the cars on. Valid filter values are those that our Search facets API returns for unique doors. You can pass in multiple doors values comma separated"
        },
        {
          "name": "drivetrain",
          "schema": "string",
          "description": "To filter listing on their drivetrain"
        },
        {
          "name": "exteriorColor",
          "schema": "string",
          "required": false,
          "description": "Exterior color to match. Valid filter values are those that our Search facets API returns for unique exterior colors. You can pass in multiple exterior color values comma separated"
        },
        {
          "name": "interiorColor",
          "schema": "string",
          "required": false,
          "description": "Interior color to match. Valid filter values are those that our Search facets API returns for unique interior colors. You can pass in multiple interior color values comma separated"
        },
        {
          "name": "baseExteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base exterior color to match. Valid filter values are those that our Search facets API returns for unique base exterior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "baseInteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base interior color to match. Valid filter values are those that our Search facets API returns for unique base interior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "engine",
          "schema": "string",
          "description": "To filter listing on their engine"
        },
        {
          "name": "engineSize",
          "schema": "string",
          "required": false,
          "description": "Engine Size to match. Valid filter values are those that our Search facets API returns for unique engine size. You can pass in multiple engine size values comma separated"
        },
        {
          "name": "engineAspiration",
          "schema": "string",
          "required": false,
          "description": "Engine Aspiration to match. Valid filter values are those that our Search facets API returns for unique Engine Aspirations. You can pass in multiple Engine aspirations values comma separated"
        },
        {
          "name": "engineBlock",
          "schema": "string",
          "required": false,
          "description": "Engine Block to match. Valid filter values are those that our Search facets API returns for unique Engine Block. You can pass in multiple Engine Block values comma separated"
        },
        {
          "name": "highwayMpgRange",
          "schema": "string",
          "required": false,
          "description": "Highway mileage range to filter listings with the mileage in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "cityMpgRange",
          "schema": "string",
          "required": false,
          "description": "City mileage range to filter listings with the mileage in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "milesRange",
          "schema": "string",
          "required": false,
          "description": "Miles range to filter listings with miles in the given range. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "priceRange",
          "schema": "string",
          "required": false,
          "description": "Price range to filter listings with the price in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "msrpRange",
          "schema": "string",
          "required": false,
          "description": "MSRP range to filter listings with the msrp in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "domRange",
          "schema": "string",
          "required": false,
          "description": "Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort by field. Default sort field is distance from the given point"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order - asc or desc. Default sort order is asc"
        },
        {
          "name": "rows",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return. Default is 10. Max is 50"
        },
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 0. Pagination is allowed only till first 10000 results for the search and sort criteria. The page value can be only between 1 to 10000/rows"
        },
        {
          "name": "includeNonVinListings",
          "schema": "boolean",
          "required": false,
          "description": "To include non vin listings. Default is false"
        },
        {
          "name": "msaCode",
          "schema": "string",
          "required": false,
          "description": "To filter listing on msa code in which they are listed"
        },
        {
          "name": "facets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of fields for which facets are requested. Facets could be requested in addition to the listings for the search. Please note - The API calls with lots of facet fields may take longer to respond."
        },
        {
          "name": "rangeFacets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of numeric fields for which range facets are requested. Range facets could be requested in addition to the listings for the search. Please note - The API calls with lots of range facet fields may take longer to respond."
        },
        {
          "name": "facetSort",
          "schema": "string",
          "required": false,
          "description": "Control sort order of facets with this parameter with default sort being on count, Other available sort is alphabetical sort, which can be obtained by using index as value for this param"
        },
        {
          "name": "stats",
          "schema": "string",
          "required": false,
          "description": "The list of fields for which stats need to be generated based on the matching listings for the search criteria. The stats consists of mean, max, average and count of listings based on which the stats are calculated for the field. Stats could be requested in addition to the listings for the search. Please note - The API calls with the stats fields may take longer to respond."
        },
        {
          "name": "country",
          "schema": "string",
          "description": "To filter listing on Country in which they are listed"
        },
        {
          "name": "plot",
          "schema": "boolean",
          "required": false,
          "description": "If plot has value true results in around 25k coordinates with limited fields to plot respective graph"
        },
        {
          "name": "nodedup",
          "schema": "boolean",
          "required": false,
          "description": "If nodedup is set to true then API will give results without is_searchable i.e multiple listings for single vin"
        },
        {
          "name": "dedup",
          "schema": "boolean",
          "required": false,
          "description": "If dedup is set to true then will give results with is_searchable irrespecive of dealer_id or source"
        },
        {
          "name": "owned",
          "schema": "boolean",
          "required": false,
          "description": "Used in combination with dealer_id or source, when true returns the listings actually owned by dealer himself"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "trimO",
          "schema": "string",
          "required": false,
          "description": "Filter listings on web scraped trim"
        },
        {
          "name": "trimR",
          "schema": "string",
          "required": false,
          "description": "Filter trim on custom possible matches"
        },
        {
          "name": "domActiveRange",
          "schema": "string",
          "required": false,
          "description": "Active Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "dom180Range",
          "schema": "string",
          "required": false,
          "description": "Last 180 Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "excludeCertified",
          "schema": "boolean",
          "required": false,
          "description": "Boolean param to exclude certified cars from search results"
        },
        {
          "name": "fuelType",
          "schema": "string",
          "description": "To filter listing on their fuel type"
        },
        {
          "name": "dealerType",
          "schema": "string",
          "required": false,
          "description": "Filter based on dealer type independant or franchise"
        },
        {
          "name": "photoLinks",
          "schema": "boolean",
          "required": false,
          "description": "A boolean indicating whether to include only those listings that have photo_links in search results, And discard those that don't have them"
        },
        {
          "name": "photoLinksCached",
          "schema": "boolean",
          "required": false,
          "description": "A boolean indicating whether to include only those listings that have photo_links_cached in search results, And discard those that don't have them"
        },
        {
          "name": "stockNo",
          "schema": "string",
          "description": "To filter listing on their stock number on lot"
        },
        {
          "name": "lastSeenRange",
          "schema": "string",
          "required": false,
          "description": "Last seen date range to filter listings with the last seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenRange",
          "schema": "string",
          "required": false,
          "description": "First seen date range to filter listings with the first seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenAtSourceRange",
          "schema": "string",
          "required": false,
          "description": "First seen at source date range to filter listings with the first seen at source in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenAtMcRange",
          "schema": "string",
          "required": false,
          "description": "First seen at MC date range to filter listings with the first seen at MC in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "lastSeenDays",
          "schema": "string",
          "required": false,
          "description": "Last seen days range to filter listings with the last seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenDays",
          "schema": "string",
          "required": false,
          "description": "First seen days range to filter listings with the first seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenAtSourceDays",
          "schema": "string",
          "required": false,
          "description": "First seen at source days range to filter listings with the first seen at source in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenAtMcDays",
          "schema": "string",
          "required": false,
          "description": "First seen at MC days range to filter listings with the first seen at MC in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "inventoryType",
          "schema": "string",
          "description": "To filter listing on their condition. Either used or new"
        },
        {
          "name": "page",
          "schema": "number",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 1."
        },
        {
          "name": "listing_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "ranking_criteria",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Ranking query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/search/car/active/rank/listings",
      "method": "rankCar",
      "httpMethod": "post",
      "tag": "Rank Car Listings",
      "typeScriptTag": "rankCarListings",
      "description": "Compute relative rank for car listings.",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "appendApiKey",
          "schema": "boolean",
          "description": "Flag on whether to include api_key in response API urls (if any)"
        },
        {
          "name": "listing_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "ranking_criteria",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Ranking query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/search/car/auction/active",
      "method": "/search/car/auction/activeGet",
      "httpMethod": "get",
      "tag": "Car Search",
      "typeScriptTag": "carSearch",
      "description": "Gets active auction car listings for the given search criteria",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "appendApiKey",
          "schema": "boolean",
          "description": "Flag on whether to include api_key in response API urls (if any)"
        },
        {
          "name": "latitude",
          "schema": "number",
          "description": "Latitude component of location"
        },
        {
          "name": "longitude",
          "schema": "number",
          "description": "Longitude component of location"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "includeLease",
          "schema": "boolean",
          "required": false,
          "description": "Boolean param to search for listings that include leasing options in them"
        },
        {
          "name": "includeFinance",
          "schema": "boolean",
          "required": false,
          "description": "Boolean param to search for listings that include finance options in them"
        },
        {
          "name": "leaseTerm",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact lease term, or inside a range with min and max seperated by a dash like lease_term=30-60"
        },
        {
          "name": "leaseDownPayment",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment in lease offers, or inside a range with min and max seperated by a dash like lease_down_payment=30-60"
        },
        {
          "name": "leaseEmp",
          "schema": "string",
          "required": false,
          "description": "Search listings with lease offers exactly matching Estimated Monthly Payment(EMI), or inside a range with min and max seperated by a dash like lease_emp=30-60"
        },
        {
          "name": "financeLoanTerm",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact finance loan term, or inside a range with min and max seperated by a dash like finance_loan_term=30-60"
        },
        {
          "name": "financeLoanApr",
          "schema": "string",
          "required": false,
          "description": "Search listings with finance offers exactly matching loans Annual Percentage Rate, or inside a range with min and max seperated by a dash like finance_loan_apr=30-60"
        },
        {
          "name": "financeEmp",
          "schema": "string",
          "required": false,
          "description": "Search listings with finance offers exactly matching Estimated Monthly Payment(EMI), or inside a range with min and max seperated by a dash like finance_emp=30-60"
        },
        {
          "name": "financeDownPayment",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment in finance offers, or inside a range with min and max seperated by a dash like finance_down_payment=30-60"
        },
        {
          "name": "financeDownPaymentPer",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment percentage in finance offers, or inside a range with min and max seperated by a dash like finance_down_payment_per=30-60"
        },
        {
          "name": "carType",
          "schema": "string",
          "required": false,
          "description": "Car type. Allowed values are - new / used / certified"
        },
        {
          "name": "carfax1Owner",
          "schema": "string",
          "required": false,
          "description": "Indicates whether car has had only one owner or not"
        },
        {
          "name": "carfaxCleanTitle",
          "schema": "string",
          "required": false,
          "description": "Indicates whether car has clean ownership records"
        },
        {
          "name": "yearRange",
          "schema": "string",
          "required": false,
          "description": "Year range to filter listings with the year in the range given. Range to be given in the format - min-max e.g. 2019-2021"
        },
        {
          "name": "year",
          "schema": "string",
          "description": "To filter listing on their year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "To filter listings on their make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "To filter listings on their model"
        },
        {
          "name": "trim",
          "schema": "string",
          "description": "To filter listing on their trim"
        },
        {
          "name": "vin",
          "schema": "string",
          "description": "To filter listing on their VIN"
        },
        {
          "name": "bodyType",
          "schema": "string",
          "description": "To filter listing on their body type"
        },
        {
          "name": "bodySubtype",
          "schema": "string",
          "required": false,
          "description": "Body subtype to filter the listings on. Valid filter values are those that our Search facets API returns for unique body subtypes. You can pass in multiple body subtype values comma separated"
        },
        {
          "name": "vehicleType",
          "schema": "string",
          "description": "To filter listing on their vehicle type"
        },
        {
          "name": "vins",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of 17 digit vins to search the matching cars for. Only 10 VINs allowed per request. If the request contains more than 10 VINs the first 10 VINs will be considered. Could be used as a More Like This or Similar Vehicles search for the given VINs. Ths vins parameter is an alternative to taxonomy_vins or ymmt parameters available with the search API. vins and taxonomy_vins parameters could be used to filter our cars with the exact build represented by the vins or taxonomy_vins whereas ymmt is a top level filter that does not filter cars by the build attributes like doors, drivetrain, cylinders, body type, body subtype, vehicle type etc"
        },
        {
          "name": "taxonomyVins",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of 10 letters excert from the 17 letter VIN. The 10 letters to be picked up from the 17 letter VIN are - first 8 letters and the 10th and 11th letter. E.g. For a VIN - 1FTFW1EF3EKE57182 the taxonomy vin would be - 1FTFW1EFEK  A taxonomy VIN identified a build of a car and could be used to filter our cars of a particular build. This is an alternative to the vin or ymmt parameters to the search API."
        },
        {
          "name": "mm",
          "schema": "string",
          "required": false,
          "description": "Make-Model concatenated string. To help passing the results of auto-complete API on mm field, use this parameter and pass in the selected value as is"
        },
        {
          "name": "ymm",
          "schema": "string",
          "required": false,
          "description": "Year-Make-Model concatenated string. To help passing the results of auto-complete API on ymm field, use this parameter and pass in the selected value as is"
        },
        {
          "name": "ymmt",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of Year, Make, Model, Trim combinations. Each combination needs to have the year,make,model, trim values separated by a pipe '|' character in the form year|make|model|trim. e.g. 2010|Audi|A5,2014|Nissan|Sentra|S 6MT,|Honda|City|   You could just provide strings of the form - 'year|make||' or 'year|make|model' or '|make|model|' combinations. Individual year / make / model filters provied with the API calls will take precedence over the Year, Make, Model, Trim combinations. The Make, Model, Trim values must be valid values as per the Marketcheck Vin Decoder. If you are using a separate vin decoder then look at using the 'vins' or 'taxonomy_vins' parameter to the search api instead the year|make|model|trim combinations."
        },
        {
          "name": "match",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of Year, Make, Model, Trim fields. For example - year,make,model,trim fields for which user wants to do an exact match"
        },
        {
          "name": "cylinders",
          "schema": "string",
          "description": "To filter listing on their cylinders"
        },
        {
          "name": "transmission",
          "schema": "string",
          "description": "To filter listing on their transmission"
        },
        {
          "name": "doors",
          "schema": "string",
          "required": false,
          "description": "Doors to filter the cars on. Valid filter values are those that our Search facets API returns for unique doors. You can pass in multiple doors values comma separated"
        },
        {
          "name": "drivetrain",
          "schema": "string",
          "description": "To filter listing on their drivetrain"
        },
        {
          "name": "exteriorColor",
          "schema": "string",
          "required": false,
          "description": "Exterior color to match. Valid filter values are those that our Search facets API returns for unique exterior colors. You can pass in multiple exterior color values comma separated"
        },
        {
          "name": "interiorColor",
          "schema": "string",
          "required": false,
          "description": "Interior color to match. Valid filter values are those that our Search facets API returns for unique interior colors. You can pass in multiple interior color values comma separated"
        },
        {
          "name": "baseExteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base exterior color to match. Valid filter values are those that our Search facets API returns for unique base exterior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "baseInteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base interior color to match. Valid filter values are those that our Search facets API returns for unique base interior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "engine",
          "schema": "string",
          "description": "To filter listing on their engine"
        },
        {
          "name": "engineSize",
          "schema": "string",
          "required": false,
          "description": "Engine Size to match. Valid filter values are those that our Search facets API returns for unique engine size. You can pass in multiple engine size values comma separated"
        },
        {
          "name": "engineAspiration",
          "schema": "string",
          "required": false,
          "description": "Engine Aspiration to match. Valid filter values are those that our Search facets API returns for unique Engine Aspirations. You can pass in multiple Engine aspirations values comma separated"
        },
        {
          "name": "engineBlock",
          "schema": "string",
          "required": false,
          "description": "Engine Block to match. Valid filter values are those that our Search facets API returns for unique Engine Block. You can pass in multiple Engine Block values comma separated"
        },
        {
          "name": "highwayMpgRange",
          "schema": "string",
          "required": false,
          "description": "Highway mileage range to filter listings with the mileage in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "cityMpgRange",
          "schema": "string",
          "required": false,
          "description": "City mileage range to filter listings with the mileage in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "milesRange",
          "schema": "string",
          "required": false,
          "description": "Miles range to filter listings with miles in the given range. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "priceRange",
          "schema": "string",
          "required": false,
          "description": "Price range to filter listings with the price in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "msrpRange",
          "schema": "string",
          "required": false,
          "description": "MSRP range to filter listings with the msrp in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "domRange",
          "schema": "string",
          "required": false,
          "description": "Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort by field. Default sort field is distance from the given point"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order - asc or desc. Default sort order is asc"
        },
        {
          "name": "rows",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return. Default is 10. Max is 50"
        },
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 0. Pagination is allowed only till first 10000 results for the search and sort criteria. The page value can be only between 1 to 10000/rows"
        },
        {
          "name": "includeNonVinListings",
          "schema": "boolean",
          "required": false,
          "description": "To include non vin listings. Default is false"
        },
        {
          "name": "msaCode",
          "schema": "string",
          "required": false,
          "description": "To filter listing on msa code in which they are listed"
        },
        {
          "name": "facets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of fields for which facets are requested. Facets could be requested in addition to the listings for the search. Please note - The API calls with lots of facet fields may take longer to respond."
        },
        {
          "name": "rangeFacets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of numeric fields for which range facets are requested. Range facets could be requested in addition to the listings for the search. Please note - The API calls with lots of range facet fields may take longer to respond."
        },
        {
          "name": "facetSort",
          "schema": "string",
          "required": false,
          "description": "Control sort order of facets with this parameter with default sort being on count, Other available sort is alphabetical sort, which can be obtained by using index as value for this param"
        },
        {
          "name": "stats",
          "schema": "string",
          "required": false,
          "description": "The list of fields for which stats need to be generated based on the matching listings for the search criteria. The stats consists of mean, max, average and count of listings based on which the stats are calculated for the field. Stats could be requested in addition to the listings for the search. Please note - The API calls with the stats fields may take longer to respond."
        },
        {
          "name": "country",
          "schema": "string",
          "description": "To filter listing on Country in which they are listed"
        },
        {
          "name": "plot",
          "schema": "boolean",
          "required": false,
          "description": "If plot has value true results in around 25k coordinates with limited fields to plot respective graph"
        },
        {
          "name": "nodedup",
          "schema": "boolean",
          "required": false,
          "description": "If nodedup is set to true then API will give results without is_searchable i.e multiple listings for single vin"
        },
        {
          "name": "dedup",
          "schema": "boolean",
          "required": false,
          "description": "If dedup is set to true then will give results with is_searchable irrespecive of dealer_id or source"
        },
        {
          "name": "owned",
          "schema": "boolean",
          "required": false,
          "description": "Used in combination with dealer_id or source, when true returns the listings actually owned by dealer himself"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "source",
          "schema": "string",
          "description": "To filter listing on their source only for widget requests"
        },
        {
          "name": "dealerId",
          "schema": "string",
          "required": false,
          "description": "Dealer id to filter the listings."
        },
        {
          "name": "trimO",
          "schema": "string",
          "required": false,
          "description": "Filter listings on web scraped trim"
        },
        {
          "name": "trimR",
          "schema": "string",
          "required": false,
          "description": "Filter trim on custom possible matches"
        },
        {
          "name": "domActiveRange",
          "schema": "string",
          "required": false,
          "description": "Active Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "dom180Range",
          "schema": "string",
          "required": false,
          "description": "Last 180 Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "excludeCertified",
          "schema": "boolean",
          "required": false,
          "description": "Boolean param to exclude certified cars from search results"
        },
        {
          "name": "fuelType",
          "schema": "string",
          "description": "To filter listing on their fuel type"
        },
        {
          "name": "dealerType",
          "schema": "string",
          "required": false,
          "description": "Filter based on dealer type independant or franchise"
        },
        {
          "name": "photoLinks",
          "schema": "boolean",
          "required": false,
          "description": "A boolean indicating whether to include only those listings that have photo_links in search results, And discard those that don't have them"
        },
        {
          "name": "photoLinksCached",
          "schema": "boolean",
          "required": false,
          "description": "A boolean indicating whether to include only those listings that have photo_links_cached in search results, And discard those that don't have them"
        },
        {
          "name": "stockNo",
          "schema": "string",
          "description": "To filter listing on their stock number on lot"
        },
        {
          "name": "lastSeenRange",
          "schema": "string",
          "required": false,
          "description": "Last seen date range to filter listings with the last seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenRange",
          "schema": "string",
          "required": false,
          "description": "First seen date range to filter listings with the first seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenAtSourceRange",
          "schema": "string",
          "required": false,
          "description": "First seen at source date range to filter listings with the first seen at source in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenAtMcRange",
          "schema": "string",
          "required": false,
          "description": "First seen at MC date range to filter listings with the first seen at MC in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "lastSeenDays",
          "schema": "string",
          "required": false,
          "description": "Last seen days range to filter listings with the last seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenDays",
          "schema": "string",
          "required": false,
          "description": "First seen days range to filter listings with the first seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenAtSourceDays",
          "schema": "string",
          "required": false,
          "description": "First seen at source days range to filter listings with the first seen at source in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenAtMcDays",
          "schema": "string",
          "required": false,
          "description": "First seen at MC days range to filter listings with the first seen at MC in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "includeRelevantLinks",
          "schema": "boolean",
          "required": false,
          "description": "To include_relevant_links. Default is true"
        },
        {
          "name": "inventoryCountRange",
          "schema": "string",
          "required": false,
          "description": "Inventory count range to filter listings with count of total listings in dealers inventory. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "excludeDealerIds",
          "schema": "string",
          "required": false,
          "description": "A list of dealer ids to exclude from result"
        },
        {
          "name": "excludeSources",
          "schema": "string",
          "required": false,
          "description": "A list of sources to exclude from result"
        },
        {
          "name": "inTransit",
          "schema": "string",
          "required": false,
          "description": "A boolean to filter in transit vehicles"
        },
        {
          "name": "titleType",
          "schema": "string",
          "required": false,
          "description": "To filter on title type"
        },
        {
          "name": "seatingCapacity",
          "schema": "string",
          "required": false,
          "description": "To filter on vehicle seating capacity"
        },
        {
          "name": "engineSizeRange",
          "schema": "string",
          "required": false,
          "description": "Engine size range to filter listings with engine size in the given range. Range to be given in the format - min-max e.g. 1.0-2"
        },
        {
          "name": "minPhotoLinks",
          "schema": "string",
          "required": false,
          "description": "Filter listings based by number of photo links within given range"
        },
        {
          "name": "minPhotoLinksCached",
          "schema": "string",
          "required": false,
          "description": "Filter listings based by number of cached photo links within given range"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Search query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/search/car/auto-complete",
      "method": "autoComplete",
      "httpMethod": "get",
      "tag": "Car Search",
      "typeScriptTag": "carSearch",
      "description": "API for auto-completion of inputs",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "field",
          "schema": "string",
          "required": true,
          "description": "Field name for which you want auto-completion"
        },
        {
          "name": "input",
          "schema": "string",
          "required": true,
          "description": "Input entered so far"
        },
        {
          "name": "year",
          "schema": "string",
          "description": "To filter listing on their year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "To filter listings on their make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "To filter listings on their model"
        },
        {
          "name": "trim",
          "schema": "string",
          "description": "To filter listing on their trim"
        },
        {
          "name": "bodyType",
          "schema": "string",
          "description": "To filter listing on their body type"
        },
        {
          "name": "bodySubtype",
          "schema": "string",
          "required": false,
          "description": "Body subtype to filter the listings on. Valid filter values are those that our Search facets API returns for unique body subtypes. You can pass in multiple body subtype values comma separated"
        },
        {
          "name": "vehicleType",
          "schema": "string",
          "description": "To filter listing on their vehicle type"
        },
        {
          "name": "transmission",
          "schema": "string",
          "description": "To filter listing on their transmission"
        },
        {
          "name": "drivetrain",
          "schema": "string",
          "description": "To filter listing on their drivetrain"
        },
        {
          "name": "fuelType",
          "schema": "string",
          "description": "To filter listing on their fuel type"
        },
        {
          "name": "exteriorColor",
          "schema": "string",
          "required": false,
          "description": "Exterior color to match. Valid filter values are those that our Search facets API returns for unique exterior colors. You can pass in multiple exterior color values comma separated"
        },
        {
          "name": "interiorColor",
          "schema": "string",
          "required": false,
          "description": "Interior color to match. Valid filter values are those that our Search facets API returns for unique interior colors. You can pass in multiple interior color values comma separated"
        },
        {
          "name": "engine",
          "schema": "string",
          "description": "To filter listing on their engine"
        },
        {
          "name": "engineSize",
          "schema": "string",
          "required": false,
          "description": "Engine Size to match. Valid filter values are those that our Search facets API returns for unique engine size. You can pass in multiple engine size values comma separated"
        },
        {
          "name": "engineBlock",
          "schema": "string",
          "required": false,
          "description": "Engine Block to match. Valid filter values are those that our Search facets API returns for unique Engine Block. You can pass in multiple Engine Block values comma separated"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "source",
          "schema": "string",
          "description": "To filter listing on their source only for widget requests"
        },
        {
          "name": "dealerId",
          "schema": "string",
          "required": false,
          "description": "Dealer id to filter the listings."
        },
        {
          "name": "country",
          "schema": "string",
          "description": "To filter listing on Country in which they are listed"
        },
        {
          "name": "carType",
          "schema": "string",
          "required": false,
          "description": "Car type. Allowed values are - new / used"
        },
        {
          "name": "includeNonVinListings",
          "schema": "string",
          "required": false,
          "description": "Flag to indicate whether to include non vin listing terms in results or not. Default is false to avoid un-normalised terms from non vin listings out of results"
        },
        {
          "name": "ignoreCase",
          "schema": "boolean",
          "required": false,
          "description": "Boolean variable to indicate ignore case of current input"
        },
        {
          "name": "termCounts",
          "schema": "boolean",
          "required": false,
          "description": "Boolean variable to indicate wheather to include term counts as well in response"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort the response, either by index or count(default)"
        },
        {
          "name": "sellerType",
          "schema": "string",
          "required": false,
          "description": "seller type for autocomplete"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "inventoryCountRange",
          "schema": "string",
          "required": false,
          "description": "Inventory count range to filter listings with count of total listings in dealers inventory. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "excludeDealerIds",
          "schema": "string",
          "required": false,
          "description": "A list of dealer ids to exclude from result"
        },
        {
          "name": "excludeSources",
          "schema": "string",
          "required": false,
          "description": "A list of sources to exclude from result"
        },
        {
          "name": "inTransit",
          "schema": "string",
          "required": false,
          "description": "A boolean to filter in transit vehicles"
        },
        {
          "name": "facetMinCount",
          "schema": "number",
          "required": false,
          "description": "Provide minimum count value for facets"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Search auto complete query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/search/car/fsbo/active",
      "method": "/search/car/fsbo/activeGet",
      "httpMethod": "get",
      "tag": "Car Search",
      "typeScriptTag": "carSearch",
      "description": "Gets active private party car listings for the given search criteria",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "appendApiKey",
          "schema": "boolean",
          "description": "Flag on whether to include api_key in response API urls (if any)"
        },
        {
          "name": "latitude",
          "schema": "number",
          "description": "Latitude component of location"
        },
        {
          "name": "longitude",
          "schema": "number",
          "description": "Longitude component of location"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "includeLease",
          "schema": "boolean",
          "required": false,
          "description": "Boolean param to search for listings that include leasing options in them"
        },
        {
          "name": "includeFinance",
          "schema": "boolean",
          "required": false,
          "description": "Boolean param to search for listings that include finance options in them"
        },
        {
          "name": "leaseTerm",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact lease term, or inside a range with min and max seperated by a dash like lease_term=30-60"
        },
        {
          "name": "leaseDownPayment",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment in lease offers, or inside a range with min and max seperated by a dash like lease_down_payment=30-60"
        },
        {
          "name": "leaseEmp",
          "schema": "string",
          "required": false,
          "description": "Search listings with lease offers exactly matching Estimated Monthly Payment(EMI), or inside a range with min and max seperated by a dash like lease_emp=30-60"
        },
        {
          "name": "financeLoanTerm",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact finance loan term, or inside a range with min and max seperated by a dash like finance_loan_term=30-60"
        },
        {
          "name": "financeLoanApr",
          "schema": "string",
          "required": false,
          "description": "Search listings with finance offers exactly matching loans Annual Percentage Rate, or inside a range with min and max seperated by a dash like finance_loan_apr=30-60"
        },
        {
          "name": "financeEmp",
          "schema": "string",
          "required": false,
          "description": "Search listings with finance offers exactly matching Estimated Monthly Payment(EMI), or inside a range with min and max seperated by a dash like finance_emp=30-60"
        },
        {
          "name": "financeDownPayment",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment in finance offers, or inside a range with min and max seperated by a dash like finance_down_payment=30-60"
        },
        {
          "name": "financeDownPaymentPer",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment percentage in finance offers, or inside a range with min and max seperated by a dash like finance_down_payment_per=30-60"
        },
        {
          "name": "carType",
          "schema": "string",
          "required": false,
          "description": "Car type. Allowed values are - new / used / certified"
        },
        {
          "name": "carfax1Owner",
          "schema": "string",
          "required": false,
          "description": "Indicates whether car has had only one owner or not"
        },
        {
          "name": "carfaxCleanTitle",
          "schema": "string",
          "required": false,
          "description": "Indicates whether car has clean ownership records"
        },
        {
          "name": "yearRange",
          "schema": "string",
          "required": false,
          "description": "Year range to filter listings with the year in the range given. Range to be given in the format - min-max e.g. 2019-2021"
        },
        {
          "name": "year",
          "schema": "string",
          "description": "To filter listing on their year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "To filter listings on their make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "To filter listings on their model"
        },
        {
          "name": "trim",
          "schema": "string",
          "description": "To filter listing on their trim"
        },
        {
          "name": "vin",
          "schema": "string",
          "description": "To filter listing on their VIN"
        },
        {
          "name": "bodyType",
          "schema": "string",
          "description": "To filter listing on their body type"
        },
        {
          "name": "bodySubtype",
          "schema": "string",
          "required": false,
          "description": "Body subtype to filter the listings on. Valid filter values are those that our Search facets API returns for unique body subtypes. You can pass in multiple body subtype values comma separated"
        },
        {
          "name": "vehicleType",
          "schema": "string",
          "description": "To filter listing on their vehicle type"
        },
        {
          "name": "vins",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of 17 digit vins to search the matching cars for. Only 10 VINs allowed per request. If the request contains more than 10 VINs the first 10 VINs will be considered. Could be used as a More Like This or Similar Vehicles search for the given VINs. Ths vins parameter is an alternative to taxonomy_vins or ymmt parameters available with the search API. vins and taxonomy_vins parameters could be used to filter our cars with the exact build represented by the vins or taxonomy_vins whereas ymmt is a top level filter that does not filter cars by the build attributes like doors, drivetrain, cylinders, body type, body subtype, vehicle type etc"
        },
        {
          "name": "taxonomyVins",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of 10 letters excert from the 17 letter VIN. The 10 letters to be picked up from the 17 letter VIN are - first 8 letters and the 10th and 11th letter. E.g. For a VIN - 1FTFW1EF3EKE57182 the taxonomy vin would be - 1FTFW1EFEK  A taxonomy VIN identified a build of a car and could be used to filter our cars of a particular build. This is an alternative to the vin or ymmt parameters to the search API."
        },
        {
          "name": "mm",
          "schema": "string",
          "required": false,
          "description": "Make-Model concatenated string. To help passing the results of auto-complete API on mm field, use this parameter and pass in the selected value as is"
        },
        {
          "name": "ymm",
          "schema": "string",
          "required": false,
          "description": "Year-Make-Model concatenated string. To help passing the results of auto-complete API on ymm field, use this parameter and pass in the selected value as is"
        },
        {
          "name": "ymmt",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of Year, Make, Model, Trim combinations. Each combination needs to have the year,make,model, trim values separated by a pipe '|' character in the form year|make|model|trim. e.g. 2010|Audi|A5,2014|Nissan|Sentra|S 6MT,|Honda|City|   You could just provide strings of the form - 'year|make||' or 'year|make|model' or '|make|model|' combinations. Individual year / make / model filters provied with the API calls will take precedence over the Year, Make, Model, Trim combinations. The Make, Model, Trim values must be valid values as per the Marketcheck Vin Decoder. If you are using a separate vin decoder then look at using the 'vins' or 'taxonomy_vins' parameter to the search api instead the year|make|model|trim combinations."
        },
        {
          "name": "match",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of Year, Make, Model, Trim fields. For example - year,make,model,trim fields for which user wants to do an exact match"
        },
        {
          "name": "cylinders",
          "schema": "string",
          "description": "To filter listing on their cylinders"
        },
        {
          "name": "transmission",
          "schema": "string",
          "description": "To filter listing on their transmission"
        },
        {
          "name": "doors",
          "schema": "string",
          "required": false,
          "description": "Doors to filter the cars on. Valid filter values are those that our Search facets API returns for unique doors. You can pass in multiple doors values comma separated"
        },
        {
          "name": "drivetrain",
          "schema": "string",
          "description": "To filter listing on their drivetrain"
        },
        {
          "name": "exteriorColor",
          "schema": "string",
          "required": false,
          "description": "Exterior color to match. Valid filter values are those that our Search facets API returns for unique exterior colors. You can pass in multiple exterior color values comma separated"
        },
        {
          "name": "interiorColor",
          "schema": "string",
          "required": false,
          "description": "Interior color to match. Valid filter values are those that our Search facets API returns for unique interior colors. You can pass in multiple interior color values comma separated"
        },
        {
          "name": "baseExteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base exterior color to match. Valid filter values are those that our Search facets API returns for unique base exterior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "baseInteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base interior color to match. Valid filter values are those that our Search facets API returns for unique base interior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "engine",
          "schema": "string",
          "description": "To filter listing on their engine"
        },
        {
          "name": "engineSize",
          "schema": "string",
          "required": false,
          "description": "Engine Size to match. Valid filter values are those that our Search facets API returns for unique engine size. You can pass in multiple engine size values comma separated"
        },
        {
          "name": "engineAspiration",
          "schema": "string",
          "required": false,
          "description": "Engine Aspiration to match. Valid filter values are those that our Search facets API returns for unique Engine Aspirations. You can pass in multiple Engine aspirations values comma separated"
        },
        {
          "name": "engineBlock",
          "schema": "string",
          "required": false,
          "description": "Engine Block to match. Valid filter values are those that our Search facets API returns for unique Engine Block. You can pass in multiple Engine Block values comma separated"
        },
        {
          "name": "highwayMpgRange",
          "schema": "string",
          "required": false,
          "description": "Highway mileage range to filter listings with the mileage in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "cityMpgRange",
          "schema": "string",
          "required": false,
          "description": "City mileage range to filter listings with the mileage in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "milesRange",
          "schema": "string",
          "required": false,
          "description": "Miles range to filter listings with miles in the given range. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "priceRange",
          "schema": "string",
          "required": false,
          "description": "Price range to filter listings with the price in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "msrpRange",
          "schema": "string",
          "required": false,
          "description": "MSRP range to filter listings with the msrp in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "domRange",
          "schema": "string",
          "required": false,
          "description": "Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort by field. Default sort field is distance from the given point"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order - asc or desc. Default sort order is asc"
        },
        {
          "name": "rows",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return. Default is 10. Max is 50"
        },
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 0. Pagination is allowed only till first 10000 results for the search and sort criteria. The page value can be only between 1 to 10000/rows"
        },
        {
          "name": "includeNonVinListings",
          "schema": "boolean",
          "required": false,
          "description": "To include non vin listings. Default is false"
        },
        {
          "name": "msaCode",
          "schema": "string",
          "required": false,
          "description": "To filter listing on msa code in which they are listed"
        },
        {
          "name": "facets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of fields for which facets are requested. Facets could be requested in addition to the listings for the search. Please note - The API calls with lots of facet fields may take longer to respond."
        },
        {
          "name": "rangeFacets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of numeric fields for which range facets are requested. Range facets could be requested in addition to the listings for the search. Please note - The API calls with lots of range facet fields may take longer to respond."
        },
        {
          "name": "facetSort",
          "schema": "string",
          "required": false,
          "description": "Control sort order of facets with this parameter with default sort being on count, Other available sort is alphabetical sort, which can be obtained by using index as value for this param"
        },
        {
          "name": "stats",
          "schema": "string",
          "required": false,
          "description": "The list of fields for which stats need to be generated based on the matching listings for the search criteria. The stats consists of mean, max, average and count of listings based on which the stats are calculated for the field. Stats could be requested in addition to the listings for the search. Please note - The API calls with the stats fields may take longer to respond."
        },
        {
          "name": "country",
          "schema": "string",
          "description": "To filter listing on Country in which they are listed"
        },
        {
          "name": "plot",
          "schema": "boolean",
          "required": false,
          "description": "If plot has value true results in around 25k coordinates with limited fields to plot respective graph"
        },
        {
          "name": "nodedup",
          "schema": "boolean",
          "required": false,
          "description": "If nodedup is set to true then API will give results without is_searchable i.e multiple listings for single vin"
        },
        {
          "name": "dedup",
          "schema": "boolean",
          "required": false,
          "description": "If dedup is set to true then will give results with is_searchable irrespecive of dealer_id or source"
        },
        {
          "name": "owned",
          "schema": "boolean",
          "required": false,
          "description": "Used in combination with dealer_id or source, when true returns the listings actually owned by dealer himself"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "source",
          "schema": "string",
          "description": "To filter listing on their source only for widget requests"
        },
        {
          "name": "dealerId",
          "schema": "string",
          "required": false,
          "description": "Dealer id to filter the listings."
        },
        {
          "name": "trimO",
          "schema": "string",
          "required": false,
          "description": "Filter listings on web scraped trim"
        },
        {
          "name": "trimR",
          "schema": "string",
          "required": false,
          "description": "Filter trim on custom possible matches"
        },
        {
          "name": "domActiveRange",
          "schema": "string",
          "required": false,
          "description": "Active Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "dom180Range",
          "schema": "string",
          "required": false,
          "description": "Last 180 Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "excludeCertified",
          "schema": "boolean",
          "required": false,
          "description": "Boolean param to exclude certified cars from search results"
        },
        {
          "name": "fuelType",
          "schema": "string",
          "description": "To filter listing on their fuel type"
        },
        {
          "name": "dealerType",
          "schema": "string",
          "required": false,
          "description": "Filter based on dealer type independant or franchise"
        },
        {
          "name": "photoLinks",
          "schema": "boolean",
          "required": false,
          "description": "A boolean indicating whether to include only those listings that have photo_links in search results, And discard those that don't have them"
        },
        {
          "name": "photoLinksCached",
          "schema": "boolean",
          "required": false,
          "description": "A boolean indicating whether to include only those listings that have photo_links_cached in search results, And discard those that don't have them"
        },
        {
          "name": "stockNo",
          "schema": "string",
          "description": "To filter listing on their stock number on lot"
        },
        {
          "name": "lastSeenRange",
          "schema": "string",
          "required": false,
          "description": "Last seen date range to filter listings with the last seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenRange",
          "schema": "string",
          "required": false,
          "description": "First seen date range to filter listings with the first seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenAtSourceRange",
          "schema": "string",
          "required": false,
          "description": "First seen at source date range to filter listings with the first seen at source in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenAtMcRange",
          "schema": "string",
          "required": false,
          "description": "First seen at MC date range to filter listings with the first seen at MC in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "lastSeenDays",
          "schema": "string",
          "required": false,
          "description": "Last seen days range to filter listings with the last seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenDays",
          "schema": "string",
          "required": false,
          "description": "First seen days range to filter listings with the first seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenAtSourceDays",
          "schema": "string",
          "required": false,
          "description": "First seen at source days range to filter listings with the first seen at source in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenAtMcDays",
          "schema": "string",
          "required": false,
          "description": "First seen at MC days range to filter listings with the first seen at MC in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "includeRelevantLinks",
          "schema": "boolean",
          "required": false,
          "description": "To include_relevant_links. Default is true"
        },
        {
          "name": "inventoryCountRange",
          "schema": "string",
          "required": false,
          "description": "Inventory count range to filter listings with count of total listings in dealers inventory. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "excludeDealerIds",
          "schema": "string",
          "required": false,
          "description": "A list of dealer ids to exclude from result"
        },
        {
          "name": "excludeSources",
          "schema": "string",
          "required": false,
          "description": "A list of sources to exclude from result"
        },
        {
          "name": "excludeDealerListings",
          "schema": "boolean",
          "required": false,
          "description": "A list of fsbo listings to exclude from result"
        },
        {
          "name": "inTransit",
          "schema": "string",
          "required": false,
          "description": "A boolean to filter in transit vehicles"
        },
        {
          "name": "seatingCapacity",
          "schema": "string",
          "required": false,
          "description": "To filter on vehicle seating capacity"
        },
        {
          "name": "engineSizeRange",
          "schema": "string",
          "required": false,
          "description": "Engine size range to filter listings with engine size in the given range. Range to be given in the format - min-max e.g. 1.0-2"
        },
        {
          "name": "minPhotoLinks",
          "schema": "string",
          "required": false,
          "description": "Filter listings based by number of photo links within given range"
        },
        {
          "name": "minPhotoLinksCached",
          "schema": "string",
          "required": false,
          "description": "Filter listings based by number of cached photo links within given range"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Search query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/search/car/incentive/oem",
      "method": "oemSearch",
      "httpMethod": "get",
      "tag": "OEM Incentive Search",
      "typeScriptTag": "oemIncentiveSearch",
      "description": "Gets oem incentive listings for the given search criteria",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "offerType",
          "schema": "string",
          "required": false,
          "description": "The type of the incentive"
        },
        {
          "name": "year",
          "schema": "string",
          "description": "To filter listing on their year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "To filter listings on their make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "To filter listings on their model"
        },
        {
          "name": "trim",
          "schema": "string",
          "description": "To filter listing on their trim"
        },
        {
          "name": "msrp",
          "schema": "string",
          "required": false,
          "description": "MSRP range to filter listings with the msrp in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "apr",
          "schema": "string",
          "required": false,
          "description": "APR range to filter listings with the msrp in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "monthly",
          "schema": "string",
          "required": false,
          "description": "To filter listing on Monthly payment amount, usually populated in Lease offers"
        },
        {
          "name": "monthlyPerThousand",
          "schema": "string",
          "required": false,
          "description": "To filter listing on monthly amount to be paid by customer for every $1000 financed at the advertised APR rate"
        },
        {
          "name": "downPayment",
          "schema": "string",
          "required": false,
          "description": "To filter listing on down payment offer on car"
        },
        {
          "name": "dueAtSigning",
          "schema": "string",
          "required": false,
          "description": "To filter listing on total amount due at signing, that usually includes first month payment, down payment, acquisition fee etc"
        },
        {
          "name": "securityDeposit",
          "schema": "string",
          "required": false,
          "description": "To filter listing on security deposit required for the offer"
        },
        {
          "name": "dispositionFee",
          "schema": "string",
          "required": false,
          "description": "To filter listing on disposition fee of the car"
        },
        {
          "name": "acquisitionFee",
          "schema": "string",
          "required": false,
          "description": "To filter listing on acquisition fee of the car"
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "To filter listing on offer duration in months"
        },
        {
          "name": "dealerContribution",
          "schema": "string",
          "required": false,
          "description": "To filter listing on any contribution from dealer's side"
        },
        {
          "name": "mileageCharge",
          "schema": "string",
          "required": false,
          "description": "Mileage Charge Range range to filter listings with the msrp in the range given. Range to be given in the format - min-max e.g. 100-1000"
        },
        {
          "name": "mileageChargeLimit",
          "schema": "string",
          "required": false,
          "description": "To filter listing on mileage charge limit the offer is valid up to under the default clauses"
        },
        {
          "name": "cashbackAmount",
          "schema": "string",
          "required": false,
          "description": "To filter listing on cashback amounts listed in offer"
        },
        {
          "name": "cashbackTargetGroup",
          "schema": "string",
          "required": false,
          "description": "To filter listing on the demographic or any other entity for whom this cashback offer is for. Not all target groups are identified but the most common ones are tagged like Military, Grad students Current owners etc"
        },
        {
          "name": "leaseEndPurchaseOption",
          "schema": "string",
          "required": false,
          "description": "To filter listing on amount at the lease end to pay for buying the car"
        },
        {
          "name": "netCapitalisedCost",
          "schema": "string",
          "required": false,
          "description": "To filter listing on net capitalised cost of the car"
        },
        {
          "name": "grossCapitalisedCost",
          "schema": "string",
          "required": false,
          "description": "To filter listing on gross capitalised cost of the car"
        },
        {
          "name": "totalMonthlyPayment",
          "schema": "string",
          "required": false,
          "description": "To filter listing on gross capitalised cost of the car"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "country",
          "schema": "string",
          "description": "To filter listing on Country in which they are listed"
        },
        {
          "name": "latitude",
          "schema": "number",
          "description": "Latitude component of location"
        },
        {
          "name": "longitude",
          "schema": "number",
          "description": "Longitude component of location"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "searchText",
          "schema": "string",
          "description": "To search a substring across entire document"
        },
        {
          "name": "lastSeenRange",
          "schema": "string",
          "required": false,
          "description": "Last seen date range to filter listings with the last seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenRange",
          "schema": "string",
          "required": false,
          "description": "First seen date range to filter listings with the first seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort by field. Default sort field is distance from the given point"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order - asc or desc. Default sort order is asc"
        },
        {
          "name": "rows",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return. Default is 10. Max is 50"
        },
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 0. Pagination is allowed only till first 10000 results for the search and sort criteria. The page value can be only between 1 to 10000/rows"
        },
        {
          "name": "facets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of fields for which facets are requested. Facets could be requested in addition to the listings for the search. Please note - The API calls with lots of facet fields may take longer to respond."
        },
        {
          "name": "rangeFacets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of numeric fields for which range facets are requested. Range facets could be requested in addition to the listings for the search. Please note - The API calls with lots of range facet fields may take longer to respond."
        },
        {
          "name": "facetSort",
          "schema": "string",
          "required": false,
          "description": "Control sort order of facets with this parameter with default sort being on count, Other available sort is alphabetical sort, which can be obtained by using index as value for this param"
        },
        {
          "name": "stats",
          "schema": "string",
          "required": false,
          "description": "The list of fields for which stats need to be generated based on the matching listings for the search criteria. The stats consists of mean, max, average and count of listings based on which the stats are calculated for the field. Stats could be requested in addition to the listings for the search. Please note - The API calls with the stats fields may take longer to respond."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Search query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/search/car/recents",
      "method": "/search/car/recentsGet",
      "httpMethod": "get",
      "tag": "Car Search",
      "typeScriptTag": "carSearch",
      "description": "Gets Recent car listings for the given search criteria",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "appendApiKey",
          "schema": "boolean",
          "description": "Flag on whether to include api_key in response API urls (if any)"
        },
        {
          "name": "latitude",
          "schema": "number",
          "description": "Latitude component of location"
        },
        {
          "name": "longitude",
          "schema": "number",
          "description": "Longitude component of location"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "includeLease",
          "schema": "boolean",
          "required": false,
          "description": "Boolean param to search for listings that include leasing options in them"
        },
        {
          "name": "includeFinance",
          "schema": "boolean",
          "required": false,
          "description": "Boolean param to search for listings that include finance options in them"
        },
        {
          "name": "leaseTerm",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact lease term, or inside a range with min and max seperated by a dash like lease_term=30-60"
        },
        {
          "name": "leaseDownPayment",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment in lease offers, or inside a range with min and max seperated by a dash like lease_down_payment=30-60"
        },
        {
          "name": "leaseEmp",
          "schema": "string",
          "required": false,
          "description": "Search listings with lease offers exactly matching Estimated Monthly Payment(EMI), or inside a range with min and max seperated by a dash like lease_emp=30-60"
        },
        {
          "name": "financeLoanTerm",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact finance loan term, or inside a range with min and max seperated by a dash like finance_loan_term=30-60"
        },
        {
          "name": "financeLoanApr",
          "schema": "string",
          "required": false,
          "description": "Search listings with finance offers exactly matching loans Annual Percentage Rate, or inside a range with min and max seperated by a dash like finance_loan_apr=30-60"
        },
        {
          "name": "financeEmp",
          "schema": "string",
          "required": false,
          "description": "Search listings with finance offers exactly matching Estimated Monthly Payment(EMI), or inside a range with min and max seperated by a dash like finance_emp=30-60"
        },
        {
          "name": "financeDownPayment",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment in finance offers, or inside a range with min and max seperated by a dash like finance_down_payment=30-60"
        },
        {
          "name": "financeDownPaymentPer",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment percentage in finance offers, or inside a range with min and max seperated by a dash like finance_down_payment_per=30-60"
        },
        {
          "name": "carType",
          "schema": "string",
          "required": false,
          "description": "Car type. Allowed values are - new / used / certified"
        },
        {
          "name": "carfax1Owner",
          "schema": "string",
          "required": false,
          "description": "Indicates whether car has had only one owner or not"
        },
        {
          "name": "carfaxCleanTitle",
          "schema": "string",
          "required": false,
          "description": "Indicates whether car has clean ownership records"
        },
        {
          "name": "yearRange",
          "schema": "string",
          "required": false,
          "description": "Year range to filter listings with the year in the range given. Range to be given in the format - min-max e.g. 2019-2021"
        },
        {
          "name": "year",
          "schema": "string",
          "description": "To filter listing on their year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "To filter listings on their make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "To filter listings on their model"
        },
        {
          "name": "trim",
          "schema": "string",
          "description": "To filter listing on their trim"
        },
        {
          "name": "dealerId",
          "schema": "string",
          "required": false,
          "description": "Dealer id to filter the listings."
        },
        {
          "name": "vin",
          "schema": "string",
          "description": "To filter listing on their VIN"
        },
        {
          "name": "source",
          "schema": "string",
          "description": "To filter listing on their source"
        },
        {
          "name": "bodyType",
          "schema": "string",
          "description": "To filter listing on their body type"
        },
        {
          "name": "bodySubtype",
          "schema": "string",
          "required": false,
          "description": "Body subtype to filter the listings on. Valid filter values are those that our Search facets API returns for unique body subtypes. You can pass in multiple body subtype values comma separated"
        },
        {
          "name": "vehicleType",
          "schema": "string",
          "description": "To filter listing on their vehicle type"
        },
        {
          "name": "vins",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of 17 digit vins to search the matching cars for. Only 10 VINs allowed per request. If the request contains more than 10 VINs the first 10 VINs will be considered. Could be used as a More Like This or Similar Vehicles search for the given VINs. Ths vins parameter is an alternative to taxonomy_vins or ymmt parameters available with the search API. vins and taxonomy_vins parameters could be used to filter our cars with the exact build represented by the vins or taxonomy_vins whereas ymmt is a top level filter that does not filter cars by the build attributes like doors, drivetrain, cylinders, body type, body subtype, vehicle type etc"
        },
        {
          "name": "taxonomyVins",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of 10 letters excert from the 17 letter VIN. The 10 letters to be picked up from the 17 letter VIN are - first 8 letters and the 10th and 11th letter. E.g. For a VIN - 1FTFW1EF3EKE57182 the taxonomy vin would be - 1FTFW1EFEK  A taxonomy VIN identified a build of a car and could be used to filter our cars of a particular build. This is an alternative to the vin or ymmt parameters to the search API."
        },
        {
          "name": "ymmt",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of Year, Make, Model, Trim combinations. Each combination needs to have the year,make,model, trim values separated by a pipe '|' character in the form year|make|model|trim. e.g. 2010|Audi|A5,2014|Nissan|Sentra|S 6MT,|Honda|City|   You could just provide strings of the form - 'year|make||' or 'year|make|model' or '|make|model|' combinations. Individual year / make / model filters provied with the API calls will take precedence over the Year, Make, Model, Trim combinations. The Make, Model, Trim values must be valid values as per the Marketcheck Vin Decoder. If you are using a separate vin decoder then look at using the 'vins' or 'taxonomy_vins' parameter to the search api instead the year|make|model|trim combinations."
        },
        {
          "name": "match",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of Year, Make, Model, Trim fields. For example - year,make,model,trim fields for which user wants to do an exact match"
        },
        {
          "name": "cylinders",
          "schema": "string",
          "description": "To filter listing on their cylinders"
        },
        {
          "name": "transmission",
          "schema": "string",
          "description": "To filter listing on their transmission"
        },
        {
          "name": "doors",
          "schema": "string",
          "required": false,
          "description": "Doors to filter the cars on. Valid filter values are those that our Search facets API returns for unique doors. You can pass in multiple doors values comma separated"
        },
        {
          "name": "drivetrain",
          "schema": "string",
          "description": "To filter listing on their drivetrain"
        },
        {
          "name": "exteriorColor",
          "schema": "string",
          "required": false,
          "description": "Exterior color to match. Valid filter values are those that our Search facets API returns for unique exterior colors. You can pass in multiple exterior color values comma separated"
        },
        {
          "name": "interiorColor",
          "schema": "string",
          "required": false,
          "description": "Interior color to match. Valid filter values are those that our Search facets API returns for unique interior colors. You can pass in multiple interior color values comma separated"
        },
        {
          "name": "baseExteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base exterior color to match. Valid filter values are those that our Search facets API returns for unique base exterior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "baseInteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base interior color to match. Valid filter values are those that our Search facets API returns for unique base interior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "engine",
          "schema": "string",
          "description": "To filter listing on their engine"
        },
        {
          "name": "engineSize",
          "schema": "string",
          "required": false,
          "description": "Engine Size to match. Valid filter values are those that our Search facets API returns for unique engine size. You can pass in multiple engine size values comma separated"
        },
        {
          "name": "engineAspiration",
          "schema": "string",
          "required": false,
          "description": "Engine Aspiration to match. Valid filter values are those that our Search facets API returns for unique Engine Aspirations. You can pass in multiple Engine aspirations values comma separated"
        },
        {
          "name": "engineBlock",
          "schema": "string",
          "required": false,
          "description": "Engine Block to match. Valid filter values are those that our Search facets API returns for unique Engine Block. You can pass in multiple Engine Block values comma separated"
        },
        {
          "name": "highwayMpgRange",
          "schema": "string",
          "required": false,
          "description": "Highway mileage range to filter listings with the mileage in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "cityMpgRange",
          "schema": "string",
          "required": false,
          "description": "City mileage range to filter listings with the mileage in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "milesRange",
          "schema": "string",
          "required": false,
          "description": "Miles range to filter listings with miles in the given range. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "priceRange",
          "schema": "string",
          "required": false,
          "description": "Price range to filter listings with the price in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "msrpRange",
          "schema": "string",
          "required": false,
          "description": "MSRP range to filter listings with the msrp in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "domRange",
          "schema": "string",
          "required": false,
          "description": "Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "lastSeenRange",
          "schema": "string",
          "required": false,
          "description": "Last seen date range to filter listings with the last seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenRange",
          "schema": "string",
          "required": false,
          "description": "First seen date range to filter listings with the first seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenAtSourceRange",
          "schema": "string",
          "required": false,
          "description": "First seen at source date range to filter listings with the first seen at source in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenAtMcRange",
          "schema": "string",
          "required": false,
          "description": "First seen at MC date range to filter listings with the first seen at MC in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "lastSeenDays",
          "schema": "string",
          "required": false,
          "description": "Last seen days range to filter listings with the last seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenDays",
          "schema": "string",
          "required": false,
          "description": "First seen days range to filter listings with the first seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenAtSourceDays",
          "schema": "string",
          "required": false,
          "description": "First seen at source days range to filter listings with the first seen at source in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenAtMcDays",
          "schema": "string",
          "required": false,
          "description": "First seen at MC days range to filter listings with the first seen at MC in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort by field. Default sort field is distance from the given point"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order - asc or desc. Default sort order is asc"
        },
        {
          "name": "rows",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return. Default is 10. Max is 50"
        },
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 0. Pagination is allowed only till first 10000 results for the search and sort criteria. The page value can be only between 1 to 10000/rows"
        },
        {
          "name": "includeNonVinListings",
          "schema": "boolean",
          "required": false,
          "description": "To include non vin listings. Default is false"
        },
        {
          "name": "facets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of fields for which facets are requested. Facets could be requested in addition to the listings for the search. Please note - The API calls with lots of facet fields may take longer to respond."
        },
        {
          "name": "rangeFacets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of numeric fields for which range facets are requested. Range facets could be requested in addition to the listings for the search. Please note - The API calls with lots of range facet fields may take longer to respond."
        },
        {
          "name": "facetSort",
          "schema": "string",
          "required": false,
          "description": "Control sort order of facets with this parameter with default sort being on count, Other available sort is alphabetical sort, which can be obtained by using index as value for this param"
        },
        {
          "name": "stats",
          "schema": "string",
          "required": false,
          "description": "The list of fields for which stats need to be generated based on the matching listings for the search criteria. The stats consists of mean, max, average and count of listings based on which the stats are calculated for the field. Stats could be requested in addition to the listings for the search. Please note - The API calls with the stats fields may take longer to respond."
        },
        {
          "name": "country",
          "schema": "string",
          "description": "To filter listing on Country in which they are listed"
        },
        {
          "name": "plot",
          "schema": "boolean",
          "required": false,
          "description": "If plot has value true results in around 25k coordinates with limited fields to plot respective graph"
        },
        {
          "name": "nodedup",
          "schema": "boolean",
          "required": false,
          "description": "If nodedup is set to true then API will give results without is_searchable i.e multiple listings for single vin"
        },
        {
          "name": "dedup",
          "schema": "boolean",
          "required": false,
          "description": "If dedup is set to true then will give results with is_searchable irrespecive of dealer_id or source"
        },
        {
          "name": "owned",
          "schema": "boolean",
          "required": false,
          "description": "Used in combination with dealer_id or source, when true returns the listings actually owned by dealer himself"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "msaCode",
          "schema": "string",
          "required": false,
          "description": "To filter listing on msa code in which they are listed"
        },
        {
          "name": "dealerName",
          "schema": "string",
          "required": false,
          "description": "Filter listings on dealer_name"
        },
        {
          "name": "dealershipGroupName",
          "schema": "string",
          "required": false,
          "description": "Name of the dealership group to search for"
        },
        {
          "name": "trimO",
          "schema": "string",
          "required": false,
          "description": "Filter listings on web scraped trim"
        },
        {
          "name": "trimR",
          "schema": "string",
          "required": false,
          "description": "Filter trim on custom possible matches"
        },
        {
          "name": "domActiveRange",
          "schema": "string",
          "required": false,
          "description": "Active Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "dom180Range",
          "schema": "string",
          "required": false,
          "description": "Last 180 Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "excludeCertified",
          "schema": "boolean",
          "required": false,
          "description": "Boolean param to exclude certified cars from search results"
        },
        {
          "name": "fuelType",
          "schema": "string",
          "description": "To filter listing on their fuel type"
        },
        {
          "name": "dealerType",
          "schema": "string",
          "required": false,
          "description": "Filter based on dealer type independant or franchise"
        },
        {
          "name": "photoLinks",
          "schema": "boolean",
          "required": false,
          "description": "A boolean indicating whether to include only those listings that have photo_links in search results, And discard those that don't have them"
        },
        {
          "name": "photoLinksCached",
          "schema": "boolean",
          "required": false,
          "description": "A boolean indicating whether to include only those listings that have photo_links_cached in search results, And discard those that don't have them"
        },
        {
          "name": "stockNo",
          "schema": "string",
          "description": "To filter listing on their stock number on lot"
        },
        {
          "name": "sold",
          "schema": "boolean",
          "required": false,
          "description": "sold parameter to fetch only sold listings"
        },
        {
          "name": "includeRelevantLinks",
          "schema": "boolean",
          "required": false,
          "description": "To include_relevant_links. Default is true"
        },
        {
          "name": "expired",
          "schema": "string",
          "required": false,
          "description": "Boolean falg to either fetch only the expired listings or active ones"
        },
        {
          "name": "excludeDealerIds",
          "schema": "string",
          "required": false,
          "description": "A list of dealer ids to exclude from result"
        },
        {
          "name": "excludeSources",
          "schema": "string",
          "required": false,
          "description": "A list of sources to exclude from result"
        },
        {
          "name": "inTransit",
          "schema": "string",
          "required": false,
          "description": "A boolean to filter in transit vehicles"
        },
        {
          "name": "seatingCapacity",
          "schema": "string",
          "required": false,
          "description": "To filter on vehicle seating capacity"
        },
        {
          "name": "activeInventoryDateRange",
          "schema": "string",
          "required": false,
          "description": "date range to filter listings that were active within given date range. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "engineSizeRange",
          "schema": "string",
          "required": false,
          "description": "Engine size range to filter listings with engine size in the given range. Range to be given in the format - min-max e.g. 1.0-2"
        },
        {
          "name": "priceChangeRange",
          "schema": "string",
          "required": false,
          "description": "Price change range to filter listings with price change within given price_change_range. Range to be given in the format - min-max e.g. 10-500"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Search query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/search/car/uk/active",
      "method": "search",
      "httpMethod": "get",
      "tag": "Car Search",
      "typeScriptTag": "carSearch",
      "description": "Gets active car listings in UK for the given search criteria",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "appendApiKey",
          "schema": "boolean",
          "description": "Flag on whether to include api_key in response API urls (if any)"
        },
        {
          "name": "latitude",
          "schema": "number",
          "description": "Latitude component of location"
        },
        {
          "name": "longitude",
          "schema": "number",
          "description": "Longitude component of location"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "postalCode",
          "schema": "string",
          "description": "To filter listing on postal code around which they are listed"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "carType",
          "schema": "string",
          "required": false,
          "description": "Car type. Allowed values are - new / used"
        },
        {
          "name": "year",
          "schema": "string",
          "description": "To filter listing on their year"
        },
        {
          "name": "yearRange",
          "schema": "string",
          "required": false,
          "description": "Year range to filter listings with the year in the range given. Range to be given in the format - min-max e.g. 2019-2021"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "To filter listings on their make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "To filter listings on their model"
        },
        {
          "name": "variant",
          "schema": "string",
          "description": "To filter listing on their variant"
        },
        {
          "name": "trim",
          "schema": "string",
          "description": "To filter listing on their trim"
        },
        {
          "name": "bodyType",
          "schema": "string",
          "description": "To filter listing on their body type"
        },
        {
          "name": "ymmt",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of Year, Make, Model, Trim combinations. Each combination needs to have the year,make,model, trim values separated by a pipe '|' character in the form year|make|model|trim. e.g. 2010|Audi|A5,2014|Nissan|Sentra|S 6MT,|Honda|City|   You could just provide strings of the form - 'year|make||' or 'year|make|model' or '|make|model|' combinations. Individual year / make / model filters provied with the API calls will take precedence over the Year, Make, Model, Trim combinations. The Make, Model, Trim values must be valid values as per the Marketcheck Vin Decoder. If you are using a separate vin decoder then look at using the 'vins' or 'taxonomy_vins' parameter to the search api instead the year|make|model|trim combinations."
        },
        {
          "name": "transmission",
          "schema": "string",
          "description": "To filter listing on their transmission"
        },
        {
          "name": "doors",
          "schema": "string",
          "required": false,
          "description": "Doors to filter the cars on. Valid filter values are those that our Search facets API returns for unique doors. You can pass in multiple doors values comma separated"
        },
        {
          "name": "drivetrain",
          "schema": "string",
          "description": "To filter listing on their drivetrain"
        },
        {
          "name": "exteriorColor",
          "schema": "string",
          "required": false,
          "description": "Exterior color to match. Valid filter values are those that our Search facets API returns for unique exterior colors. You can pass in multiple exterior color values comma separated"
        },
        {
          "name": "interiorColor",
          "schema": "string",
          "required": false,
          "description": "Interior color to match. Valid filter values are those that our Search facets API returns for unique interior colors. You can pass in multiple interior color values comma separated"
        },
        {
          "name": "engine",
          "schema": "string",
          "description": "To filter listing on their engine"
        },
        {
          "name": "milesRange",
          "schema": "string",
          "required": false,
          "description": "Miles range to filter listings with miles in the given range. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "priceRange",
          "schema": "string",
          "required": false,
          "description": "Price range to filter listings with the price in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "msrpRange",
          "schema": "string",
          "required": false,
          "description": "MSRP range to filter listings with the msrp in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort by field. Default sort field is distance from the given point"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order - asc or desc. Default sort order is asc"
        },
        {
          "name": "rows",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return. Default is 10. Max is 50"
        },
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 0. Pagination is allowed only till first 10000 results for the search and sort criteria. The page value can be only between 1 to 10000/rows"
        },
        {
          "name": "msaCode",
          "schema": "string",
          "required": false,
          "description": "To filter listing on msa code in which they are listed"
        },
        {
          "name": "facets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of fields for which facets are requested. Facets could be requested in addition to the listings for the search. Please note - The API calls with lots of facet fields may take longer to respond."
        },
        {
          "name": "rangeFacets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of numeric fields for which range facets are requested. Range facets could be requested in addition to the listings for the search. Please note - The API calls with lots of range facet fields may take longer to respond."
        },
        {
          "name": "facetSort",
          "schema": "string",
          "required": false,
          "description": "Control sort order of facets with this parameter with default sort being on count, Other available sort is alphabetical sort, which can be obtained by using index as value for this param"
        },
        {
          "name": "stats",
          "schema": "string",
          "required": false,
          "description": "The list of fields for which stats need to be generated based on the matching listings for the search criteria. The stats consists of mean, max, average and count of listings based on which the stats are calculated for the field. Stats could be requested in addition to the listings for the search. Please note - The API calls with the stats fields may take longer to respond."
        },
        {
          "name": "country",
          "schema": "string",
          "description": "To filter listing on Country in which they are listed"
        },
        {
          "name": "plot",
          "schema": "boolean",
          "required": false,
          "description": "If plot has value true results in around 25k coordinates with limited fields to plot respective graph"
        },
        {
          "name": "nodedup",
          "schema": "boolean",
          "required": false,
          "description": "If nodedup is set to true then API will give results without is_searchable i.e multiple listings for single vin"
        },
        {
          "name": "dedup",
          "schema": "boolean",
          "required": false,
          "description": "If dedup is set to true then will give results with is_searchable irrespecive of dealer_id or source"
        },
        {
          "name": "county",
          "schema": "string",
          "description": "To filter listing on county in which they are listed"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "fuelType",
          "schema": "string",
          "description": "To filter listing on their fuel type"
        },
        {
          "name": "stockNo",
          "schema": "string",
          "description": "To filter listing on their stock number on lot"
        },
        {
          "name": "domRange",
          "schema": "string",
          "required": false,
          "description": "Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "domActiveRange",
          "schema": "string",
          "required": false,
          "description": "Active Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "dom180Range",
          "schema": "string",
          "required": false,
          "description": "Last 180 Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "lastSeenRange",
          "schema": "string",
          "required": false,
          "description": "Last seen date range to filter listings with the last seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenRange",
          "schema": "string",
          "required": false,
          "description": "First seen date range to filter listings with the first seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenAtSourceRange",
          "schema": "string",
          "required": false,
          "description": "First seen at source date range to filter listings with the first seen at source in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenAtMcRange",
          "schema": "string",
          "required": false,
          "description": "First seen at MC date range to filter listings with the first seen at MC in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "lastSeenDays",
          "schema": "string",
          "required": false,
          "description": "Last seen days range to filter listings with the last seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenDays",
          "schema": "string",
          "required": false,
          "description": "First seen days range to filter listings with the first seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenAtSourceDays",
          "schema": "string",
          "required": false,
          "description": "First seen at source days range to filter listings with the first seen at source in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenAtMcDays",
          "schema": "string",
          "required": false,
          "description": "First seen at MC days range to filter listings with the first seen at MC in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "co2Emissions",
          "schema": "string",
          "description": "CO2 emissions"
        },
        {
          "name": "insuranceGroup",
          "schema": "string",
          "description": "Insurance Group"
        },
        {
          "name": "vehicleRegistrationMark",
          "schema": "string",
          "description": "Vehicle Registration Mark"
        },
        {
          "name": "vehicleRegistrationDateRange",
          "schema": "string",
          "required": false,
          "description": "Vehicle registration date range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "numOwners",
          "schema": "string",
          "required": false,
          "description": "Number of owners. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "inventoryCountRange",
          "schema": "string",
          "required": false,
          "description": "Inventory count range to filter listings with count of total listings in dealers inventory. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "source",
          "schema": "string",
          "description": "To filter listing on their source only for widget requests"
        },
        {
          "name": "dealerId",
          "schema": "string",
          "required": false,
          "description": "Dealer id to filter the listings."
        },
        {
          "name": "excludeSources",
          "schema": "string",
          "required": false,
          "description": "A list of sources to exclude from result"
        },
        {
          "name": "excludeDealerIds",
          "schema": "string",
          "required": false,
          "description": "A list of dealer ids to exclude from result"
        },
        {
          "name": "inTransit",
          "schema": "string",
          "required": false,
          "description": "A boolean to filter in transit vehicles"
        },
        {
          "name": "includeNonVinListings",
          "schema": "boolean",
          "required": false,
          "description": "To include non vin listings. Default is false"
        },
        {
          "name": "cylinders",
          "schema": "string",
          "description": "To filter listing on their cylinders"
        },
        {
          "name": "photoLinks",
          "schema": "boolean",
          "required": false,
          "description": "A boolean indicating whether to include only those listings that have photo_links in search results, And discard those that don't have them"
        },
        {
          "name": "photoLinksCached",
          "schema": "boolean",
          "required": false,
          "description": "A boolean indicating whether to include only those listings that have photo_links_cached in search results, And discard those that don't have them"
        },
        {
          "name": "baseExteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base exterior color to match. Valid filter values are those that our Search facets API returns for unique base exterior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "baseInteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base interior color to match. Valid filter values are those that our Search facets API returns for unique base interior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "writeOffCategory",
          "schema": "string",
          "required": false,
          "description": "write off category"
        },
        {
          "name": "excludeWriteOffCategory",
          "schema": "string",
          "required": false,
          "description": "To exclude write off category"
        },
        {
          "name": "fcaStatus",
          "schema": "string",
          "required": false,
          "description": "To filter on fca status"
        },
        {
          "name": "seatingCapacity",
          "schema": "string",
          "required": false,
          "description": "To filter on vehicle seating capacity"
        },
        {
          "name": "vrm",
          "schema": "string",
          "required": false,
          "description": "To filter on vrm"
        },
        {
          "name": "powertrainType",
          "schema": "string",
          "required": false,
          "description": "To filter on powertrain_type"
        },
        {
          "name": "clientFilters",
          "schema": "boolean",
          "required": false,
          "description": "Flag to add explicit filters set on client level in solr"
        },
        {
          "name": "boost",
          "schema": "boolean",
          "required": false,
          "description": "Flag to sort listings based on client filter score in solr"
        },
        {
          "name": "carLocationSellerName",
          "schema": "string",
          "required": false,
          "description": "Filter cars on seller name"
        },
        {
          "name": "carLocationStreet",
          "schema": "string",
          "required": false,
          "description": "Filter cars on street name"
        },
        {
          "name": "carLocationCity",
          "schema": "string",
          "required": false,
          "description": "Filter cars on city"
        },
        {
          "name": "carLocationCounty",
          "schema": "string",
          "required": false,
          "description": "Filter cars on county"
        },
        {
          "name": "carLocationZip",
          "schema": "string",
          "description": "To filter listing on car ZIP around which they are listed"
        },
        {
          "name": "carLocationLatitude",
          "schema": "number",
          "description": "Latitude component of car location"
        },
        {
          "name": "carLocationLongitude",
          "schema": "number",
          "description": "Longitude component of car location"
        },
        {
          "name": "priceChange",
          "schema": "string",
          "required": false,
          "description": "Query to filter listings based on their positive and negative price change"
        },
        {
          "name": "priceChangeRange",
          "schema": "string",
          "required": false,
          "description": "Price change range to filter listings with price change within given price_change_range. Range to be given in the format - min-max e.g. 10-500"
        },
        {
          "name": "activeInventoryDateRange",
          "schema": "string",
          "required": false,
          "description": "date range to filter listings that were active within given date range. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "engineSize",
          "schema": "string",
          "required": false,
          "description": "Engine Size to match. Valid filter values are those that our Search facets API returns for unique engine size. You can pass in multiple engine size values comma separated"
        },
        {
          "name": "engineSizeRange",
          "schema": "string",
          "required": false,
          "description": "Engine size range to filter listings with engine size in the given range. Range to be given in the format - min-max e.g. 1.0-2"
        },
        {
          "name": "uvcId",
          "schema": "string",
          "required": false,
          "description": "To filter on uvc id"
        },
        {
          "name": "highwayMpgRange",
          "schema": "string",
          "required": false,
          "description": "Highway mileage range for UK to filter listings with the mileage in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "cityMpgRange",
          "schema": "string",
          "required": false,
          "description": "City mileage range for UK to filter listings with the mileage in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "combinedMpgRange",
          "schema": "string",
          "required": false,
          "description": "Combined mileage range for UK to filter listings with the mileage in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "owned",
          "schema": "boolean",
          "required": false,
          "description": "Used in combination with dealer_id or source, when true returns the listings actually owned by dealer himself"
        },
        {
          "name": "minPhotoLinks",
          "schema": "string",
          "required": false,
          "description": "Filter listings based by number of photo links within given range"
        },
        {
          "name": "minPhotoLinksCached",
          "schema": "string",
          "required": false,
          "description": "Filter listings based by number of cached photo links within given range"
        },
        {
          "name": "match",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of Year, Make, Model, Trim fields. For example - year,make,model,trim fields for which user wants to do an exact match"
        },
        {
          "name": "ulezCompliant",
          "schema": "boolean",
          "required": false,
          "description": "Filter listings based on drive into ultra low emmition zone"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Search query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/search/car/uk/recents",
      "method": "/search/car/uk/recentsGet",
      "httpMethod": "get",
      "tag": "Car Search",
      "typeScriptTag": "carSearch",
      "description": "Gets Recent UK car listings for the given search criteria",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "appendApiKey",
          "schema": "boolean",
          "description": "Flag on whether to include api_key in response API urls (if any)"
        },
        {
          "name": "latitude",
          "schema": "number",
          "description": "Latitude component of location"
        },
        {
          "name": "longitude",
          "schema": "number",
          "description": "Longitude component of location"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "includeLease",
          "schema": "boolean",
          "required": false,
          "description": "Boolean param to search for listings that include leasing options in them"
        },
        {
          "name": "includeFinance",
          "schema": "boolean",
          "required": false,
          "description": "Boolean param to search for listings that include finance options in them"
        },
        {
          "name": "leaseTerm",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact lease term, or inside a range with min and max seperated by a dash like lease_term=30-60"
        },
        {
          "name": "leaseDownPayment",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment in lease offers, or inside a range with min and max seperated by a dash like lease_down_payment=30-60"
        },
        {
          "name": "leaseEmp",
          "schema": "string",
          "required": false,
          "description": "Search listings with lease offers exactly matching Estimated Monthly Payment(EMI), or inside a range with min and max seperated by a dash like lease_emp=30-60"
        },
        {
          "name": "financeLoanTerm",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact finance loan term, or inside a range with min and max seperated by a dash like finance_loan_term=30-60"
        },
        {
          "name": "financeLoanApr",
          "schema": "string",
          "required": false,
          "description": "Search listings with finance offers exactly matching loans Annual Percentage Rate, or inside a range with min and max seperated by a dash like finance_loan_apr=30-60"
        },
        {
          "name": "financeEmp",
          "schema": "string",
          "required": false,
          "description": "Search listings with finance offers exactly matching Estimated Monthly Payment(EMI), or inside a range with min and max seperated by a dash like finance_emp=30-60"
        },
        {
          "name": "financeDownPayment",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment in finance offers, or inside a range with min and max seperated by a dash like finance_down_payment=30-60"
        },
        {
          "name": "financeDownPaymentPer",
          "schema": "string",
          "required": false,
          "description": "Search listings with exact down payment percentage in finance offers, or inside a range with min and max seperated by a dash like finance_down_payment_per=30-60"
        },
        {
          "name": "carType",
          "schema": "string",
          "required": false,
          "description": "Car type. Allowed values are - new / used / certified"
        },
        {
          "name": "carfax1Owner",
          "schema": "string",
          "required": false,
          "description": "Indicates whether car has had only one owner or not"
        },
        {
          "name": "carfaxCleanTitle",
          "schema": "string",
          "required": false,
          "description": "Indicates whether car has clean ownership records"
        },
        {
          "name": "yearRange",
          "schema": "string",
          "required": false,
          "description": "Year range to filter listings with the year in the range given. Range to be given in the format - min-max e.g. 2019-2021"
        },
        {
          "name": "year",
          "schema": "string",
          "description": "To filter listing on their year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "To filter listings on their make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "To filter listings on their model"
        },
        {
          "name": "trim",
          "schema": "string",
          "description": "To filter listing on their trim"
        },
        {
          "name": "dealerId",
          "schema": "string",
          "required": false,
          "description": "Dealer id to filter the listings."
        },
        {
          "name": "source",
          "schema": "string",
          "description": "To filter listing on their source"
        },
        {
          "name": "bodyType",
          "schema": "string",
          "description": "To filter listing on their body type"
        },
        {
          "name": "bodySubtype",
          "schema": "string",
          "required": false,
          "description": "Body subtype to filter the listings on. Valid filter values are those that our Search facets API returns for unique body subtypes. You can pass in multiple body subtype values comma separated"
        },
        {
          "name": "vehicleType",
          "schema": "string",
          "description": "To filter listing on their vehicle type"
        },
        {
          "name": "ymmt",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of Year, Make, Model, Trim combinations. Each combination needs to have the year,make,model, trim values separated by a pipe '|' character in the form year|make|model|trim. e.g. 2010|Audi|A5,2014|Nissan|Sentra|S 6MT,|Honda|City|   You could just provide strings of the form - 'year|make||' or 'year|make|model' or '|make|model|' combinations. Individual year / make / model filters provied with the API calls will take precedence over the Year, Make, Model, Trim combinations. The Make, Model, Trim values must be valid values as per the Marketcheck Vin Decoder. If you are using a separate vin decoder then look at using the 'vins' or 'taxonomy_vins' parameter to the search api instead the year|make|model|trim combinations."
        },
        {
          "name": "match",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of Year, Make, Model, Trim fields. For example - year,make,model,trim fields for which user wants to do an exact match"
        },
        {
          "name": "cylinders",
          "schema": "string",
          "description": "To filter listing on their cylinders"
        },
        {
          "name": "transmission",
          "schema": "string",
          "description": "To filter listing on their transmission"
        },
        {
          "name": "doors",
          "schema": "string",
          "required": false,
          "description": "Doors to filter the cars on. Valid filter values are those that our Search facets API returns for unique doors. You can pass in multiple doors values comma separated"
        },
        {
          "name": "drivetrain",
          "schema": "string",
          "description": "To filter listing on their drivetrain"
        },
        {
          "name": "exteriorColor",
          "schema": "string",
          "required": false,
          "description": "Exterior color to match. Valid filter values are those that our Search facets API returns for unique exterior colors. You can pass in multiple exterior color values comma separated"
        },
        {
          "name": "interiorColor",
          "schema": "string",
          "required": false,
          "description": "Interior color to match. Valid filter values are those that our Search facets API returns for unique interior colors. You can pass in multiple interior color values comma separated"
        },
        {
          "name": "baseExteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base exterior color to match. Valid filter values are those that our Search facets API returns for unique base exterior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "baseInteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base interior color to match. Valid filter values are those that our Search facets API returns for unique base interior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "engine",
          "schema": "string",
          "description": "To filter listing on their engine"
        },
        {
          "name": "engineSize",
          "schema": "string",
          "required": false,
          "description": "Engine Size to match. Valid filter values are those that our Search facets API returns for unique engine size. You can pass in multiple engine size values comma separated"
        },
        {
          "name": "engineAspiration",
          "schema": "string",
          "required": false,
          "description": "Engine Aspiration to match. Valid filter values are those that our Search facets API returns for unique Engine Aspirations. You can pass in multiple Engine aspirations values comma separated"
        },
        {
          "name": "engineBlock",
          "schema": "string",
          "required": false,
          "description": "Engine Block to match. Valid filter values are those that our Search facets API returns for unique Engine Block. You can pass in multiple Engine Block values comma separated"
        },
        {
          "name": "highwayMpgRange",
          "schema": "string",
          "required": false,
          "description": "Highway mileage range for UK to filter listings with the mileage in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "cityMpgRange",
          "schema": "string",
          "required": false,
          "description": "City mileage range for UK to filter listings with the mileage in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "combinedMpgRange",
          "schema": "string",
          "required": false,
          "description": "Combined mileage range for UK to filter listings with the mileage in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "milesRange",
          "schema": "string",
          "required": false,
          "description": "Miles range to filter listings with miles in the given range. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "priceRange",
          "schema": "string",
          "required": false,
          "description": "Price range to filter listings with the price in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "msrpRange",
          "schema": "string",
          "required": false,
          "description": "MSRP range to filter listings with the msrp in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "domRange",
          "schema": "string",
          "required": false,
          "description": "Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "lastSeenRange",
          "schema": "string",
          "required": false,
          "description": "Last seen date range to filter listings with the last seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenRange",
          "schema": "string",
          "required": false,
          "description": "First seen date range to filter listings with the first seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenAtSourceRange",
          "schema": "string",
          "required": false,
          "description": "First seen at source date range to filter listings with the first seen at source in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenAtMcRange",
          "schema": "string",
          "required": false,
          "description": "First seen at MC date range to filter listings with the first seen at MC in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "lastSeenDays",
          "schema": "string",
          "required": false,
          "description": "Last seen days range to filter listings with the last seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenDays",
          "schema": "string",
          "required": false,
          "description": "First seen days range to filter listings with the first seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenAtSourceDays",
          "schema": "string",
          "required": false,
          "description": "First seen at source days range to filter listings with the first seen at source in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenAtMcDays",
          "schema": "string",
          "required": false,
          "description": "First seen at MC days range to filter listings with the first seen at MC in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort by field. Default sort field is distance from the given point"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order - asc or desc. Default sort order is asc"
        },
        {
          "name": "rows",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return. Default is 10. Max is 50"
        },
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 0. Pagination is allowed only till first 10000 results for the search and sort criteria. The page value can be only between 1 to 10000/rows"
        },
        {
          "name": "includeNonVinListings",
          "schema": "boolean",
          "required": false,
          "description": "To include non vin listings. Default is false"
        },
        {
          "name": "facets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of fields for which facets are requested. Facets could be requested in addition to the listings for the search. Please note - The API calls with lots of facet fields may take longer to respond."
        },
        {
          "name": "rangeFacets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of numeric fields for which range facets are requested. Range facets could be requested in addition to the listings for the search. Please note - The API calls with lots of range facet fields may take longer to respond."
        },
        {
          "name": "facetSort",
          "schema": "string",
          "required": false,
          "description": "Control sort order of facets with this parameter with default sort being on count, Other available sort is alphabetical sort, which can be obtained by using index as value for this param"
        },
        {
          "name": "stats",
          "schema": "string",
          "required": false,
          "description": "The list of fields for which stats need to be generated based on the matching listings for the search criteria. The stats consists of mean, max, average and count of listings based on which the stats are calculated for the field. Stats could be requested in addition to the listings for the search. Please note - The API calls with the stats fields may take longer to respond."
        },
        {
          "name": "country",
          "schema": "string",
          "description": "To filter listing on Country in which they are listed"
        },
        {
          "name": "plot",
          "schema": "boolean",
          "required": false,
          "description": "If plot has value true results in around 25k coordinates with limited fields to plot respective graph"
        },
        {
          "name": "nodedup",
          "schema": "boolean",
          "required": false,
          "description": "If nodedup is set to true then API will give results without is_searchable i.e multiple listings for single vin"
        },
        {
          "name": "dedup",
          "schema": "boolean",
          "required": false,
          "description": "If dedup is set to true then will give results with is_searchable irrespecive of dealer_id or source"
        },
        {
          "name": "owned",
          "schema": "boolean",
          "required": false,
          "description": "Used in combination with dealer_id or source, when true returns the listings actually owned by dealer himself"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "msaCode",
          "schema": "string",
          "required": false,
          "description": "To filter listing on msa code in which they are listed"
        },
        {
          "name": "dealerName",
          "schema": "string",
          "required": false,
          "description": "Filter listings on dealer_name"
        },
        {
          "name": "dealershipGroupName",
          "schema": "string",
          "required": false,
          "description": "Name of the dealership group to search for"
        },
        {
          "name": "trimO",
          "schema": "string",
          "required": false,
          "description": "Filter listings on web scraped trim"
        },
        {
          "name": "trimR",
          "schema": "string",
          "required": false,
          "description": "Filter trim on custom possible matches"
        },
        {
          "name": "domActiveRange",
          "schema": "string",
          "required": false,
          "description": "Active Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "dom180Range",
          "schema": "string",
          "required": false,
          "description": "Last 180 Days on Market range to filter cars with the DOM within the given range. Range to be given in the format - min-max e.g. 10-50"
        },
        {
          "name": "excludeCertified",
          "schema": "boolean",
          "required": false,
          "description": "Boolean param to exclude certified cars from search results"
        },
        {
          "name": "fuelType",
          "schema": "string",
          "description": "To filter listing on their fuel type"
        },
        {
          "name": "dealerType",
          "schema": "string",
          "required": false,
          "description": "Filter based on dealer type independant or franchise"
        },
        {
          "name": "photoLinks",
          "schema": "boolean",
          "required": false,
          "description": "A boolean indicating whether to include only those listings that have photo_links in search results, And discard those that don't have them"
        },
        {
          "name": "photoLinksCached",
          "schema": "boolean",
          "required": false,
          "description": "A boolean indicating whether to include only those listings that have photo_links_cached in search results, And discard those that don't have them"
        },
        {
          "name": "stockNo",
          "schema": "string",
          "description": "To filter listing on their stock number on lot"
        },
        {
          "name": "sold",
          "schema": "boolean",
          "required": false,
          "description": "sold parameter to fetch only sold listings"
        },
        {
          "name": "includeRelevantLinks",
          "schema": "boolean",
          "required": false,
          "description": "To include_relevant_links. Default is true"
        },
        {
          "name": "expired",
          "schema": "string",
          "required": false,
          "description": "Boolean falg to either fetch only the expired listings or active ones"
        },
        {
          "name": "excludeDealerIds",
          "schema": "string",
          "required": false,
          "description": "A list of dealer ids to exclude from result"
        },
        {
          "name": "excludeSources",
          "schema": "string",
          "required": false,
          "description": "A list of sources to exclude from result"
        },
        {
          "name": "inTransit",
          "schema": "string",
          "required": false,
          "description": "A boolean to filter in transit vehicles"
        },
        {
          "name": "seatingCapacity",
          "schema": "string",
          "required": false,
          "description": "To filter on vehicle seating capacity"
        },
        {
          "name": "insuranceGroup",
          "schema": "string",
          "description": "Insurance Group"
        },
        {
          "name": "vrm",
          "schema": "string",
          "required": false,
          "description": "To filter on vrm"
        },
        {
          "name": "numOwners",
          "schema": "string",
          "required": false,
          "description": "Number of owners. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "variant",
          "schema": "string",
          "description": "To filter listing on their variant"
        },
        {
          "name": "postalCode",
          "schema": "string",
          "description": "To filter listing on postal code around which they are listed"
        },
        {
          "name": "writeOffCategory",
          "schema": "string",
          "required": false,
          "description": "write off category"
        },
        {
          "name": "fcaStatus",
          "schema": "string",
          "required": false,
          "description": "To filter on fca status"
        },
        {
          "name": "activeInventoryDateRange",
          "schema": "string",
          "required": false,
          "description": "date range to filter listings that were active within given date range. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "engineSizeRange",
          "schema": "string",
          "required": false,
          "description": "Engine size range to filter listings with engine size in the given range. Range to be given in the format - min-max e.g. 1.0-2"
        },
        {
          "name": "priceChangeRange",
          "schema": "string",
          "required": false,
          "description": "Price change range to filter listings with price change within given price_change_range. Range to be given in the format - min-max e.g. 10-500"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Search query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/search/heavy-equipment/active",
      "method": "/search/heavyEquipment/activeGet",
      "httpMethod": "get",
      "tag": "Heavy Equipment Search",
      "typeScriptTag": "heavyEquipmentSearch",
      "description": "Gets active heavy equipment listings for the given search criteria",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "priceRange",
          "schema": "string",
          "required": false,
          "description": "Price range to filter listings with the price in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "milesRange",
          "schema": "string",
          "required": false,
          "description": "Miles range to filter listings with miles in the given range. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "msrpRange",
          "schema": "string",
          "required": false,
          "description": "MSRP range to filter listings with the msrp in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "latitude",
          "schema": "number",
          "description": "Latitude component of location"
        },
        {
          "name": "longitude",
          "schema": "number",
          "description": "Longitude component of location"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "searchText",
          "schema": "string",
          "description": "To search a substring across entire document"
        },
        {
          "name": "year",
          "schema": "string",
          "description": "To filter listing on their year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "To filter listings on their make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "To filter listings on their model"
        },
        {
          "name": "trim",
          "schema": "string",
          "description": "To filter listing on their trim"
        },
        {
          "name": "vin",
          "schema": "string",
          "description": "To filter listing on their VIN"
        },
        {
          "name": "inventoryType",
          "schema": "string",
          "description": "To filter listing on their condition. Either used or new"
        },
        {
          "name": "stockNo",
          "schema": "string",
          "description": "To filter listing on their stock number on lot"
        },
        {
          "name": "source",
          "schema": "string",
          "description": "To filter listing on their source"
        },
        {
          "name": "dealerName",
          "schema": "string",
          "required": false,
          "description": "Filter listings on dealer_name"
        },
        {
          "name": "dealerId",
          "schema": "string",
          "required": false,
          "description": "Dealer id to filter the listings."
        },
        {
          "name": "exteriorColor",
          "schema": "string",
          "required": false,
          "description": "Exterior color to match. Valid filter values are those that our Search facets API returns for unique exterior colors. You can pass in multiple exterior color values comma separated"
        },
        {
          "name": "interiorColor",
          "schema": "string",
          "required": false,
          "description": "Interior color to match. Valid filter values are those that our Search facets API returns for unique interior colors. You can pass in multiple interior color values comma separated"
        },
        {
          "name": "engine",
          "schema": "string",
          "description": "To filter listing on their engine"
        },
        {
          "name": "fuelType",
          "schema": "string",
          "description": "To filter listing on their fuel type"
        },
        {
          "name": "transmission",
          "schema": "string",
          "description": "To filter listing on their transmission"
        },
        {
          "name": "drivetrain",
          "schema": "string",
          "description": "To filter listing on their drivetrain"
        },
        {
          "name": "bodyType",
          "schema": "string",
          "description": "To filter listing on their body type"
        },
        {
          "name": "category",
          "schema": "string",
          "description": "To filter heavy equipments on their category"
        },
        {
          "name": "subCategory",
          "schema": "string",
          "description": "To filter heavy equipments on their sub-category"
        },
        {
          "name": "hoursUsedRange",
          "schema": "string",
          "required": false,
          "description": "Hours used range to filter heavy equipments with the their usage in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "msaCode",
          "schema": "string",
          "required": false,
          "description": "To filter listing on msa code in which they are listed"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort by field. Default sort field is distance from the given point"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order - asc or desc. Default sort order is asc"
        },
        {
          "name": "rows",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return. Default is 10. Max is 50"
        },
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 0. Pagination is allowed only till first 10000 results for the search and sort criteria. The page value can be only between 1 to 10000/rows"
        },
        {
          "name": "facets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of fields for which facets are requested. Facets could be requested in addition to the listings for the search. Please note - The API calls with lots of facet fields may take longer to respond."
        },
        {
          "name": "rangeFacets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of numeric fields for which range facets are requested. Range facets could be requested in addition to the listings for the search. Please note - The API calls with lots of range facet fields may take longer to respond."
        },
        {
          "name": "facetSort",
          "schema": "string",
          "required": false,
          "description": "Control sort order of facets with this parameter with default sort being on count, Other available sort is alphabetical sort, which can be obtained by using index as value for this param"
        },
        {
          "name": "stats",
          "schema": "string",
          "required": false,
          "description": "The list of fields for which stats need to be generated based on the matching listings for the search criteria. The stats consists of mean, max, average and count of listings based on which the stats are calculated for the field. Stats could be requested in addition to the listings for the search. Please note - The API calls with the stats fields may take longer to respond."
        },
        {
          "name": "lastSeenRange",
          "schema": "string",
          "required": false,
          "description": "Last seen date range to filter listings with the last seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenRange",
          "schema": "string",
          "required": false,
          "description": "First seen date range to filter listings with the first seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "lastSeenDays",
          "schema": "string",
          "required": false,
          "description": "Last seen days range to filter listings with the last seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenDays",
          "schema": "string",
          "required": false,
          "description": "First seen days range to filter listings with the first seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Heavy Equipments search query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/search/heavy-equipment/auto-complete",
      "method": "/search/heavyEquipment/autoCompleteGet",
      "httpMethod": "get",
      "tag": "Heavy Equipment Search",
      "typeScriptTag": "heavyEquipmentSearch",
      "description": "API for auto-completion of inputs",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "field",
          "schema": "string",
          "required": true,
          "description": "Field name for which you want auto-completion"
        },
        {
          "name": "input",
          "schema": "string",
          "required": true,
          "description": "Input entered so far"
        },
        {
          "name": "year",
          "schema": "string",
          "description": "To filter listing on their year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "To filter listings on their make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "To filter listings on their model"
        },
        {
          "name": "trim",
          "schema": "string",
          "description": "To filter listing on their trim"
        },
        {
          "name": "bodyType",
          "schema": "string",
          "description": "To filter listing on their body type"
        },
        {
          "name": "vehicleType",
          "schema": "string",
          "description": "To filter listing on their vehicle type"
        },
        {
          "name": "transmission",
          "schema": "string",
          "description": "To filter listing on their transmission"
        },
        {
          "name": "drivetrain",
          "schema": "string",
          "description": "To filter listing on their drivetrain"
        },
        {
          "name": "fuelType",
          "schema": "string",
          "description": "To filter listing on their fuel type"
        },
        {
          "name": "color",
          "schema": "string",
          "description": "Color of the vehicle"
        },
        {
          "name": "engine",
          "schema": "string",
          "description": "To filter listing on their engine"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "inventoryType",
          "schema": "string",
          "description": "To filter listing on their condition. Either used or new"
        },
        {
          "name": "ignoreCase",
          "schema": "boolean",
          "required": false,
          "description": "Boolean variable to indicate ignore case of current input"
        },
        {
          "name": "termCounts",
          "schema": "boolean",
          "required": false,
          "description": "Boolean variable to indicate wheather to include term counts as well in response"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort the response, either by index or count(default)"
        },
        {
          "name": "sellerType",
          "schema": "string",
          "required": false,
          "description": "seller type for autocomplete"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "facetMinCount",
          "schema": "number",
          "required": false,
          "description": "Provide minimum count value for facets"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Search auto complete query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/search/motorcycle/active",
      "method": "/search/motorcycle/activeGet",
      "httpMethod": "get",
      "tag": "Motorcycle Search",
      "typeScriptTag": "motorcycleSearch",
      "description": "Gets active motorcycle listings for the given search criteria",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "priceRange",
          "schema": "string",
          "required": false,
          "description": "Price range to filter listings with the price in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "milesRange",
          "schema": "string",
          "required": false,
          "description": "Miles range to filter listings with miles in the given range. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "msrpRange",
          "schema": "string",
          "required": false,
          "description": "MSRP range to filter listings with the msrp in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "latitude",
          "schema": "number",
          "description": "Latitude component of location"
        },
        {
          "name": "longitude",
          "schema": "number",
          "description": "Longitude component of location"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "searchText",
          "schema": "string",
          "description": "To search a substring across entire document"
        },
        {
          "name": "year",
          "schema": "string",
          "description": "To filter listing on their year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "To filter listings on their make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "To filter listings on their model"
        },
        {
          "name": "trim",
          "schema": "string",
          "description": "To filter listing on their trim"
        },
        {
          "name": "vin",
          "schema": "string",
          "description": "To filter listing on their VIN"
        },
        {
          "name": "taxonomyVin",
          "schema": "string",
          "description": "Taxonomy VIN of the motorcycle"
        },
        {
          "name": "inventoryType",
          "schema": "string",
          "description": "To filter listing on their condition. Either used or new"
        },
        {
          "name": "stockNo",
          "schema": "string",
          "description": "To filter listing on their stock number on lot"
        },
        {
          "name": "source",
          "schema": "string",
          "description": "To filter listing on their source"
        },
        {
          "name": "dealerId",
          "schema": "string",
          "required": false,
          "description": "Dealer id to filter the listings."
        },
        {
          "name": "color",
          "schema": "string",
          "description": "Color of the vehicle"
        },
        {
          "name": "bodyType",
          "schema": "string",
          "description": "To filter listing on their body type"
        },
        {
          "name": "vehicleType",
          "schema": "string",
          "description": "To filter listing on their vehicle type"
        },
        {
          "name": "cylinders",
          "schema": "string",
          "description": "To filter listing on their cylinders"
        },
        {
          "name": "drivetrain",
          "schema": "string",
          "description": "To filter listing on their drivetrain"
        },
        {
          "name": "engine",
          "schema": "string",
          "description": "To filter listing on their engine"
        },
        {
          "name": "fuelType",
          "schema": "string",
          "description": "To filter listing on their fuel type"
        },
        {
          "name": "transmission",
          "schema": "string",
          "description": "To filter listing on their transmission"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "msaCode",
          "schema": "string",
          "required": false,
          "description": "To filter listing on msa code in which they are listed"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort by field. Default sort field is distance from the given point"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order - asc or desc. Default sort order is asc"
        },
        {
          "name": "rows",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return. Default is 10. Max is 50"
        },
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 0. Pagination is allowed only till first 10000 results for the search and sort criteria. The page value can be only between 1 to 10000/rows"
        },
        {
          "name": "facets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of fields for which facets are requested. Facets could be requested in addition to the listings for the search. Please note - The API calls with lots of facet fields may take longer to respond."
        },
        {
          "name": "rangeFacets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of numeric fields for which range facets are requested. Range facets could be requested in addition to the listings for the search. Please note - The API calls with lots of range facet fields may take longer to respond."
        },
        {
          "name": "facetSort",
          "schema": "string",
          "required": false,
          "description": "Control sort order of facets with this parameter with default sort being on count, Other available sort is alphabetical sort, which can be obtained by using index as value for this param"
        },
        {
          "name": "stats",
          "schema": "string",
          "required": false,
          "description": "The list of fields for which stats need to be generated based on the matching listings for the search criteria. The stats consists of mean, max, average and count of listings based on which the stats are calculated for the field. Stats could be requested in addition to the listings for the search. Please note - The API calls with the stats fields may take longer to respond."
        },
        {
          "name": "lastSeenRange",
          "schema": "string",
          "required": false,
          "description": "Last seen date range to filter listings with the last seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenRange",
          "schema": "string",
          "required": false,
          "description": "First seen date range to filter listings with the first seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "lastSeenDays",
          "schema": "string",
          "required": false,
          "description": "Last seen days range to filter listings with the last seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenDays",
          "schema": "string",
          "required": false,
          "description": "First seen days range to filter listings with the first seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Motorcycle search query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/search/motorcycle/auto-complete",
      "method": "/search/motorcycle/autoCompleteGet",
      "httpMethod": "get",
      "tag": "Motorcycle Search",
      "typeScriptTag": "motorcycleSearch",
      "description": "API for auto-completion of inputs",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "field",
          "schema": "string",
          "required": true,
          "description": "Field name for which you want auto-completion"
        },
        {
          "name": "input",
          "schema": "string",
          "required": true,
          "description": "Input entered so far"
        },
        {
          "name": "year",
          "schema": "string",
          "description": "To filter listing on their year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "To filter listings on their make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "To filter listings on their model"
        },
        {
          "name": "trim",
          "schema": "string",
          "description": "To filter listing on their trim"
        },
        {
          "name": "bodyType",
          "schema": "string",
          "description": "To filter listing on their body type"
        },
        {
          "name": "vehicleType",
          "schema": "string",
          "description": "To filter listing on their vehicle type"
        },
        {
          "name": "transmission",
          "schema": "string",
          "description": "To filter listing on their transmission"
        },
        {
          "name": "drivetrain",
          "schema": "string",
          "description": "To filter listing on their drivetrain"
        },
        {
          "name": "fuelType",
          "schema": "string",
          "description": "To filter listing on their fuel type"
        },
        {
          "name": "color",
          "schema": "string",
          "description": "Color of the vehicle"
        },
        {
          "name": "engine",
          "schema": "string",
          "description": "To filter listing on their engine"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "inventoryType",
          "schema": "string",
          "description": "To filter listing on their condition. Either used or new"
        },
        {
          "name": "ignoreCase",
          "schema": "boolean",
          "required": false,
          "description": "Boolean variable to indicate ignore case of current input"
        },
        {
          "name": "termCounts",
          "schema": "boolean",
          "required": false,
          "description": "Boolean variable to indicate wheather to include term counts as well in response"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort the response, either by index or count(default)"
        },
        {
          "name": "sellerType",
          "schema": "string",
          "required": false,
          "description": "seller type for autocomplete"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "facetMinCount",
          "schema": "number",
          "required": false,
          "description": "Provide minimum count value for facets"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Search auto complete query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/search/rv/active",
      "method": "/search/rv/activeGet",
      "httpMethod": "get",
      "tag": "RV Search",
      "typeScriptTag": "rvSearch",
      "description": "Gets active RV listings for the given search criteria",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "priceRange",
          "schema": "string",
          "required": false,
          "description": "Price range to filter listings with the price in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "milesRange",
          "schema": "string",
          "required": false,
          "description": "Miles range to filter listings with miles in the given range. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "msrpRange",
          "schema": "string",
          "required": false,
          "description": "MSRP range to filter listings with the msrp in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "yearRange",
          "schema": "string",
          "required": false,
          "description": "Year range to filter listings with the year in the range given. Range to be given in the format - min-max e.g. 2019-2021"
        },
        {
          "name": "searchText",
          "schema": "string",
          "description": "To search a substring across entire document"
        },
        {
          "name": "latitude",
          "schema": "number",
          "description": "Latitude component of location"
        },
        {
          "name": "longitude",
          "schema": "number",
          "description": "Longitude component of location"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "year",
          "schema": "string",
          "description": "To filter listing on their year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "To filter listings on their make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "To filter listings on their model"
        },
        {
          "name": "modelO",
          "schema": "string",
          "description": "To filter listings on their model orig (as described on the webpage)"
        },
        {
          "name": "vin",
          "schema": "string",
          "description": "To filter listing on their VIN"
        },
        {
          "name": "inventoryType",
          "schema": "string",
          "description": "To filter listing on their condition. Either used or new"
        },
        {
          "name": "stockNo",
          "schema": "string",
          "description": "To filter listing on their stock number on lot"
        },
        {
          "name": "source",
          "schema": "string",
          "description": "To filter listing on their source"
        },
        {
          "name": "dealerName",
          "schema": "string",
          "required": false,
          "description": "Filter listings on dealer_name"
        },
        {
          "name": "dealerId",
          "schema": "string",
          "required": false,
          "description": "Dealer id to filter the listings."
        },
        {
          "name": "exteriorColor",
          "schema": "string",
          "required": false,
          "description": "Exterior color to match. Valid filter values are those that our Search facets API returns for unique exterior colors. You can pass in multiple exterior color values comma separated"
        },
        {
          "name": "interiorColor",
          "schema": "string",
          "required": false,
          "description": "Interior color to match. Valid filter values are those that our Search facets API returns for unique interior colors. You can pass in multiple interior color values comma separated"
        },
        {
          "name": "engine",
          "schema": "string",
          "description": "To filter listing on their engine"
        },
        {
          "name": "fuelType",
          "schema": "string",
          "description": "To filter listing on their fuel type"
        },
        {
          "name": "transmission",
          "schema": "string",
          "description": "To filter listing on their transmission"
        },
        {
          "name": "class",
          "schema": "string",
          "required": false,
          "description": "Filter RV listings on class"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "msaCode",
          "schema": "string",
          "required": false,
          "description": "To filter listing on msa code in which they are listed"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort by field. Default sort field is distance from the given point"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order - asc or desc. Default sort order is asc"
        },
        {
          "name": "rows",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return. Default is 10. Max is 50"
        },
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 0. Pagination is allowed only till first 10000 results for the search and sort criteria. The page value can be only between 1 to 10000/rows"
        },
        {
          "name": "facets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of fields for which facets are requested. Facets could be requested in addition to the listings for the search. Please note - The API calls with lots of facet fields may take longer to respond."
        },
        {
          "name": "rangeFacets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of numeric fields for which range facets are requested. Range facets could be requested in addition to the listings for the search. Please note - The API calls with lots of range facet fields may take longer to respond."
        },
        {
          "name": "facetSort",
          "schema": "string",
          "required": false,
          "description": "Control sort order of facets with this parameter with default sort being on count, Other available sort is alphabetical sort, which can be obtained by using index as value for this param"
        },
        {
          "name": "stats",
          "schema": "string",
          "required": false,
          "description": "The list of fields for which stats need to be generated based on the matching listings for the search criteria. The stats consists of mean, max, average and count of listings based on which the stats are calculated for the field. Stats could be requested in addition to the listings for the search. Please note - The API calls with the stats fields may take longer to respond."
        },
        {
          "name": "lastSeenRange",
          "schema": "string",
          "required": false,
          "description": "Last seen date range to filter listings with the last seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenRange",
          "schema": "string",
          "required": false,
          "description": "First seen date range to filter listings with the first seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "lastSeenDays",
          "schema": "string",
          "required": false,
          "description": "Last seen days range to filter listings with the last seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenDays",
          "schema": "string",
          "required": false,
          "description": "First seen days range to filter listings with the first seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "slideouts",
          "schema": "string",
          "required": false,
          "description": "Filter RV listings on slideouts"
        },
        {
          "name": "lengthRange",
          "schema": "string",
          "required": false,
          "description": "length range to filter listings with the length in the range given. Range to be given in the format - min-max e.g. 50-200"
        },
        {
          "name": "length",
          "schema": "string",
          "required": false,
          "description": "Filter RV listings on length"
        },
        {
          "name": "baseExteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base exterior color to match. Valid filter values are those that our Search facets API returns for unique base exterior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "baseInteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base interior color to match. Valid filter values are those that our Search facets API returns for unique base interior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "seatingCapacity",
          "schema": "string",
          "required": false,
          "description": "To filter on vehicle seating capacity"
        },
        {
          "name": "freshWaterCapacity",
          "schema": "string",
          "required": false,
          "description": "To filter on fresh water capacity of vehicle"
        },
        {
          "name": "sleeps",
          "schema": "string",
          "required": false,
          "description": "To filter data based on sleeps"
        },
        {
          "name": "cylinders",
          "schema": "string",
          "description": "To filter listing on their cylinders"
        },
        {
          "name": "numberOfAwnings",
          "schema": "string",
          "required": false,
          "description": "To filter on number_of_awnings"
        },
        {
          "name": "doors",
          "schema": "string",
          "required": false,
          "description": "Doors to filter the cars on. Valid filter values are those that our Search facets API returns for unique doors. You can pass in multiple doors values comma separated"
        },
        {
          "name": "gvwr",
          "schema": "string",
          "required": false,
          "description": "To filter on the maximum total weight of your vehicle"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "RV search query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/search/rv/auto-complete",
      "method": "/search/rv/autoCompleteGet",
      "httpMethod": "get",
      "tag": "RV Search",
      "typeScriptTag": "rvSearch",
      "description": "API for auto-completion of inputs",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "field",
          "schema": "string",
          "required": true,
          "description": "Field name for which you want auto-completion"
        },
        {
          "name": "input",
          "schema": "string",
          "required": true,
          "description": "Input entered so far"
        },
        {
          "name": "year",
          "schema": "string",
          "description": "To filter listing on their year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "To filter listings on their make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "To filter listings on their model"
        },
        {
          "name": "trim",
          "schema": "string",
          "description": "To filter listing on their trim"
        },
        {
          "name": "bodyType",
          "schema": "string",
          "description": "To filter listing on their body type"
        },
        {
          "name": "vehicleType",
          "schema": "string",
          "description": "To filter listing on their vehicle type"
        },
        {
          "name": "transmission",
          "schema": "string",
          "description": "To filter listing on their transmission"
        },
        {
          "name": "drivetrain",
          "schema": "string",
          "description": "To filter listing on their drivetrain"
        },
        {
          "name": "fuelType",
          "schema": "string",
          "description": "To filter listing on their fuel type"
        },
        {
          "name": "color",
          "schema": "string",
          "description": "Color of the vehicle"
        },
        {
          "name": "engine",
          "schema": "string",
          "description": "To filter listing on their engine"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "inventoryType",
          "schema": "string",
          "description": "To filter listing on their condition. Either used or new"
        },
        {
          "name": "ignoreCase",
          "schema": "boolean",
          "required": false,
          "description": "Boolean variable to indicate ignore case of current input"
        },
        {
          "name": "termCounts",
          "schema": "boolean",
          "required": false,
          "description": "Boolean variable to indicate wheather to include term counts as well in response"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort the response, either by index or count(default)"
        },
        {
          "name": "sellerType",
          "schema": "string",
          "required": false,
          "description": "seller type for autocomplete"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "facetMinCount",
          "schema": "number",
          "required": false,
          "description": "Provide minimum count value for facets"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Search auto complete query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/search/rv/uk/active",
      "method": "/search/rv/uk/activeGet",
      "httpMethod": "get",
      "tag": "RV Search",
      "typeScriptTag": "rvSearch",
      "description": "Gets active RV listings for the given search criteria",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "priceRange",
          "schema": "string",
          "required": false,
          "description": "Price range to filter listings with the price in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "milesRange",
          "schema": "string",
          "required": false,
          "description": "Miles range to filter listings with miles in the given range. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "msrpRange",
          "schema": "string",
          "required": false,
          "description": "MSRP range to filter listings with the msrp in the range given. Range to be given in the format - min-max e.g. 1000-5000"
        },
        {
          "name": "yearRange",
          "schema": "string",
          "required": false,
          "description": "Year range to filter listings with the year in the range given. Range to be given in the format - min-max e.g. 2019-2021"
        },
        {
          "name": "searchText",
          "schema": "string",
          "description": "To search a substring across entire document"
        },
        {
          "name": "latitude",
          "schema": "number",
          "description": "Latitude component of location"
        },
        {
          "name": "longitude",
          "schema": "number",
          "description": "Longitude component of location"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Radius around the search location (Unit - Miles)"
        },
        {
          "name": "year",
          "schema": "string",
          "description": "To filter listing on their year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "To filter listings on their make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "To filter listings on their model"
        },
        {
          "name": "vin",
          "schema": "string",
          "description": "To filter listing on their VIN"
        },
        {
          "name": "source",
          "schema": "string",
          "description": "To filter listing on their source"
        },
        {
          "name": "dealerName",
          "schema": "string",
          "required": false,
          "description": "Filter listings on dealer_name"
        },
        {
          "name": "dealerId",
          "schema": "string",
          "required": false,
          "description": "Dealer id to filter the listings."
        },
        {
          "name": "exteriorColor",
          "schema": "string",
          "required": false,
          "description": "Exterior color to match. Valid filter values are those that our Search facets API returns for unique exterior colors. You can pass in multiple exterior color values comma separated"
        },
        {
          "name": "interiorColor",
          "schema": "string",
          "required": false,
          "description": "Interior color to match. Valid filter values are those that our Search facets API returns for unique interior colors. You can pass in multiple interior color values comma separated"
        },
        {
          "name": "engineSize",
          "schema": "string",
          "required": false,
          "description": "Engine Size to match. Valid filter values are those that our Search facets API returns for unique engine size. You can pass in multiple engine size values comma separated"
        },
        {
          "name": "fuelType",
          "schema": "string",
          "description": "To filter listing on their fuel type"
        },
        {
          "name": "category",
          "schema": "string",
          "required": false,
          "description": "Filter RV listings on category"
        },
        {
          "name": "state",
          "schema": "string",
          "description": "To filter listing on State in which they are listed"
        },
        {
          "name": "city",
          "schema": "string",
          "description": "To filter listing on City in which they are listed"
        },
        {
          "name": "county",
          "schema": "string",
          "description": "To filter listing on county in which they are listed"
        },
        {
          "name": "postalCode",
          "schema": "string",
          "description": "To filter listing on postal code around which they are listed"
        },
        {
          "name": "zip",
          "schema": "string",
          "description": "To filter listing on ZIP around which they are listed"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort by field. Default sort field is distance from the given point"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order - asc or desc. Default sort order is asc"
        },
        {
          "name": "rows",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return. Default is 10. Max is 50"
        },
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "Page number to fetch the results for the given criteria. Default is 0. Pagination is allowed only till first 10000 results for the search and sort criteria. The page value can be only between 1 to 10000/rows"
        },
        {
          "name": "facets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of fields for which facets are requested. Facets could be requested in addition to the listings for the search. Please note - The API calls with lots of facet fields may take longer to respond."
        },
        {
          "name": "rangeFacets",
          "schema": "string",
          "required": false,
          "description": "The comma separated list of numeric fields for which range facets are requested. Range facets could be requested in addition to the listings for the search. Please note - The API calls with lots of range facet fields may take longer to respond."
        },
        {
          "name": "facetSort",
          "schema": "string",
          "required": false,
          "description": "Control sort order of facets with this parameter with default sort being on count, Other available sort is alphabetical sort, which can be obtained by using index as value for this param"
        },
        {
          "name": "stats",
          "schema": "string",
          "required": false,
          "description": "The list of fields for which stats need to be generated based on the matching listings for the search criteria. The stats consists of mean, max, average and count of listings based on which the stats are calculated for the field. Stats could be requested in addition to the listings for the search. Please note - The API calls with the stats fields may take longer to respond."
        },
        {
          "name": "lastSeenRange",
          "schema": "string",
          "required": false,
          "description": "Last seen date range to filter listings with the last seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "firstSeenRange",
          "schema": "string",
          "required": false,
          "description": "First seen date range to filter listings with the first seen in the range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623"
        },
        {
          "name": "lastSeenDays",
          "schema": "string",
          "required": false,
          "description": "Last seen days range to filter listings with the last seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "firstSeenDays",
          "schema": "string",
          "required": false,
          "description": "First seen days range to filter listings with the first seen in the range given. Range to be given in the format - min-max e.g. 25-12"
        },
        {
          "name": "baseExteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base exterior color to match. Valid filter values are those that our Search facets API returns for unique base exterior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "baseInteriorColor",
          "schema": "string",
          "required": false,
          "description": "Base interior color to match. Valid filter values are those that our Search facets API returns for unique base interior colors. You can pass in multiple base interior color values comma separated"
        },
        {
          "name": "seatingCapacity",
          "schema": "string",
          "required": false,
          "description": "To filter on vehicle seating capacity"
        },
        {
          "name": "cylinders",
          "schema": "string",
          "description": "To filter listing on their cylinders"
        },
        {
          "name": "doors",
          "schema": "string",
          "required": false,
          "description": "Doors to filter the cars on. Valid filter values are those that our Search facets API returns for unique doors. You can pass in multiple doors values comma separated"
        },
        {
          "name": "mtplm",
          "schema": "string",
          "description": "To filter rv on mtplm"
        },
        {
          "name": "subCategory",
          "schema": "string",
          "description": "To filter rv on their sub-category"
        },
        {
          "name": "availabilityStatus",
          "schema": "string",
          "description": "To filter rv on their availability_status"
        },
        {
          "name": "berths",
          "schema": "string",
          "description": "To filter rv on their berths"
        },
        {
          "name": "inventoryType",
          "schema": "string",
          "description": "To filter listing on their condition. Either used or new"
        },
        {
          "name": "widthRange",
          "schema": "string",
          "required": false,
          "description": "width range to filter listings on width in the range given. Range to be given in the format - min-max e.g. 4-8"
        },
        {
          "name": "exteriorLengthRange",
          "schema": "string",
          "required": false,
          "description": "width range to filter listings on exterior_length in the range given. Range to be given in the format - min-max e.g. 4-8"
        },
        {
          "name": "interiorLengthRange",
          "schema": "string",
          "required": false,
          "description": "width range to filter listings on interior_length in the range given. Range to be given in the format - min-max e.g. 4-8"
        },
        {
          "name": "driveType",
          "schema": "string",
          "description": "To filter rv on their drive_type"
        },
        {
          "name": "steering",
          "schema": "string",
          "description": "To filter rv on their steering"
        },
        {
          "name": "chassis",
          "schema": "string",
          "description": "To filter rv on their chassis"
        },
        {
          "name": "transmission",
          "schema": "string",
          "description": "To filter listing on their transmission"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "RV search query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/specs/car/auto-complete",
      "method": "/specs/car/autoCompleteGet",
      "httpMethod": "get",
      "tag": "VIN Decoder API",
      "typeScriptTag": "vinDecoderApi",
      "description": "API for auto-completion of inputs based on taxonomy",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "field",
          "schema": "string",
          "required": true,
          "description": "Field name for which you want auto-completion"
        },
        {
          "name": "input",
          "schema": "string",
          "required": true,
          "description": "Input entered so far"
        },
        {
          "name": "year",
          "schema": "string",
          "description": "To filter listing on their year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "To filter listings on their make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "To filter listings on their model"
        },
        {
          "name": "trim",
          "schema": "string",
          "description": "To filter listing on their trim"
        },
        {
          "name": "bodyType",
          "schema": "string",
          "description": "To filter listing on their body type"
        },
        {
          "name": "bodySubtype",
          "schema": "string",
          "required": false,
          "description": "Body subtype to filter the listings on. Valid filter values are those that our Search facets API returns for unique body subtypes. You can pass in multiple body subtype values comma separated"
        },
        {
          "name": "vehicleType",
          "schema": "string",
          "description": "To filter listing on their vehicle type"
        },
        {
          "name": "transmission",
          "schema": "string",
          "description": "To filter listing on their transmission"
        },
        {
          "name": "drivetrain",
          "schema": "string",
          "description": "To filter listing on their drivetrain"
        },
        {
          "name": "fuelType",
          "schema": "string",
          "description": "To filter listing on their fuel type"
        },
        {
          "name": "engine",
          "schema": "string",
          "description": "To filter listing on their engine"
        },
        {
          "name": "engineSize",
          "schema": "string",
          "required": false,
          "description": "Engine Size to match. Valid filter values are those that our Search facets API returns for unique engine size. You can pass in multiple engine size values comma separated"
        },
        {
          "name": "engineBlock",
          "schema": "string",
          "required": false,
          "description": "Engine Block to match. Valid filter values are those that our Search facets API returns for unique Engine Block. You can pass in multiple Engine Block values comma separated"
        },
        {
          "name": "ignoreCase",
          "schema": "boolean",
          "required": false,
          "description": "Boolean variable to indicate ignore case of current input"
        },
        {
          "name": "facetMinCount",
          "schema": "number",
          "required": false,
          "description": "Provide minimum count value for facets"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Specs auto complete query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/specs/car/terms",
      "method": "getTaxonomyTerms",
      "httpMethod": "get",
      "tag": "VIN Decoder API",
      "typeScriptTag": "vinDecoderApi",
      "description": "API for getting terms from taxonomy",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "field",
          "schema": "string",
          "required": true,
          "description": "Comma separated list of fields to get terms for"
        },
        {
          "name": "year",
          "schema": "string",
          "description": "To filter listing on their year"
        },
        {
          "name": "make",
          "schema": "string",
          "description": "To filter listings on their make"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "To filter listings on their model"
        },
        {
          "name": "trim",
          "schema": "string",
          "description": "To filter listing on their trim"
        },
        {
          "name": "bodyType",
          "schema": "string",
          "description": "To filter listing on their body type"
        },
        {
          "name": "bodySubtype",
          "schema": "string",
          "required": false,
          "description": "Body subtype to filter the listings on. Valid filter values are those that our Search facets API returns for unique body subtypes. You can pass in multiple body subtype values comma separated"
        },
        {
          "name": "vehicleType",
          "schema": "string",
          "description": "To filter listing on their vehicle type"
        },
        {
          "name": "transmission",
          "schema": "string",
          "description": "To filter listing on their transmission"
        },
        {
          "name": "drivetrain",
          "schema": "string",
          "description": "To filter listing on their drivetrain"
        },
        {
          "name": "fuelType",
          "schema": "string",
          "description": "To filter listing on their fuel type"
        },
        {
          "name": "engine",
          "schema": "string",
          "description": "To filter listing on their engine"
        },
        {
          "name": "engineSize",
          "schema": "string",
          "required": false,
          "description": "Engine Size to match. Valid filter values are those that our Search facets API returns for unique engine size. You can pass in multiple engine size values comma separated"
        },
        {
          "name": "engineBlock",
          "schema": "string",
          "required": false,
          "description": "Engine Block to match. Valid filter values are those that our Search facets API returns for unique Engine Block. You can pass in multiple Engine Block values comma separated"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Specs auto complete query response"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/stats/car",
      "method": "getDailyStats",
      "httpMethod": "get",
      "tag": "Cars Market API",
      "typeScriptTag": "carsMarketApi",
      "description": "Price, Miles and Days on Market stats",
      "parameters": [
        {
          "name": "apiKey",
          "schema": "string",
          "description": "The API Authentication Key. Mandatory with all API calls."
        },
        {
          "name": "country",
          "schema": "string",
          "required": false,
          "description": "Country for which the stats are to be searched"
        },
        {
          "name": "carType",
          "schema": "string",
          "required": false,
          "description": "Inventory type for which stats are to be searched, default is used"
        },
        {
          "name": "ymm",
          "schema": "string",
          "required": false,
          "description": "Year, Make, Model of the car, Separated by pipe e.g. ymm=2015|ford|f-150"
        },
        {
          "name": "ymmt",
          "schema": "string",
          "required": false,
          "description": "Year, Make, Model, Trim of the car, Separated by pipe e.g. ymmt=2015|ford|f-150|platinum"
        },
        {
          "name": "taxonomyVin",
          "schema": "string",
          "required": false,
          "description": "Taxonomy vin for referance to find stats of similar cars"
        },
        {
          "name": "vin",
          "schema": "string",
          "required": false,
          "description": "VIN that will be transformed to taxonomy_vin"
        },
        {
          "name": "state",
          "schema": "string",
          "required": false,
          "description": "State level stats"
        },
        {
          "name": "cityState",
          "schema": "string",
          "required": false,
          "description": "City level stats, pipe seperated like city_state=jacksonville|FL"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://marketcheck-prod.apigee.net/v2",
  "apiDescription": "One API serving data spanned across multiple verticals",
  "apiTitle": "Marketcheck APIs",
  "endpoints": 71,
  "sdkMethods": 123,
  "schemas": 95,
  "parameters": 1508,
  "difficultyScore": 547.5,
  "difficulty": "Very Hard"
}