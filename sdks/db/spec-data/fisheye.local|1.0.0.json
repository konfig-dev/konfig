{
  "providerName": "fisheye.local",
  "openApiRaw": "https://docs.atlassian.com/fisheye-crucible/latest_backup/wadl/fisheye.wadl",
  "securitySchemes": {},
  "homepage": "fisheye.local",
  "apiVersion": "1.0.0",
  "methods": [
    {
      "url": "/rest-service-fe/changeset-v1/listChangesets",
      "method": "getChangesetsForText",
      "httpMethod": "get",
      "description": "List of changesets from a repository.",
      "parameters": [
        {
          "name": "rep",
          "schema": "string",
          "required": false,
          "description": "the key of the repository"
        },
        {
          "name": "path",
          "schema": "string",
          "required": false,
          "description": "repository path"
        },
        {
          "name": "committer",
          "schema": "string",
          "required": false,
          "description": "ID of the committer"
        },
        {
          "name": "comment",
          "schema": "string",
          "required": false,
          "description": "comment to match"
        },
        {
          "name": "p4JobFixed",
          "schema": "string",
          "required": false,
          "description": "Perforce option to select the changesets marked as fixing"
        },
        {
          "name": "expand",
          "schema": "string",
          "required": false,
          "description": "expand query parameter to specify the maximum number of results"
        },
        {
          "name": "beforeCsid",
          "schema": "string",
          "required": false,
          "description": "parent of the changesets"
        }
      ],
      "responses": []
    },
    {
      "url": "/rest-service-fe/commit-graph-v1/details/{repository}",
      "method": "getChangesetDetails",
      "httpMethod": "post",
      "description": "Retrieves detailed information about a set of changesets in a repository, designed to be used with the FishEye commit graph",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/rest-service-fe/commit-graph-v1/slice/{repository}",
      "method": "findSliceData",
      "httpMethod": "get",
      "description": "finds slice data the query",
      "parameters": [
        {
          "name": "branch",
          "schema": "string",
          "required": false,
          "description": "the set of branches to search. If not specified, will search all branches"
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": "the id of the changeset which we are"
        },
        {
          "name": "direction",
          "schema": "string",
          "required": false,
          "description": "the direction to traverse. May be \"before\", \"after\" or \"around\""
        },
        {
          "name": "size",
          "schema": "integer",
          "required": false,
          "description": "the number of changesets to return in the slice"
        }
      ],
      "responses": []
    },
    {
      "url": "/rest-service-fe/repositories-v1",
      "method": "getAllRepositories",
      "httpMethod": "get",
      "description": "List all the repositories.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/rest-service-fe/repositories-v1/{repository}",
      "method": "getRepositoryInfo",
      "httpMethod": "get",
      "description": "Get the information about a repository.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/rest-service-fe/revisionData-v1/changeset/{repository}/{csid}",
      "method": "getChangeset",
      "httpMethod": "get",
      "description": "",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/rest-service-fe/revisionData-v1/changesetList/{repository}",
      "method": "listChangesets",
      "httpMethod": "get",
      "description": "Get a list of changesets on a repository.",
      "parameters": [
        {
          "name": "path",
          "schema": "string",
          "required": false,
          "description": "restrict the changesets to those in this path, should be \"/\" to look at the whole repository."
        },
        {
          "name": "start",
          "schema": "string",
          "required": false,
          "description": "only return changesets after this date."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "only return changesets before this date."
        },
        {
          "name": "maxReturn",
          "schema": "string",
          "required": false,
          "description": "the maximum number of changesets to return."
        }
      ],
      "responses": []
    },
    {
      "url": "/rest-service-fe/revisionData-v1/pathHistory/{repository}",
      "method": "listPathHistory",
      "httpMethod": "get",
      "description": "Get a list of the file revisions for a specific path.",
      "parameters": [
        {
          "name": "path",
          "schema": "string",
          "required": false,
          "description": "the path to query."
        }
      ],
      "responses": []
    },
    {
      "url": "/rest-service-fe/revisionData-v1/pathList/{repository}",
      "method": "getPathList",
      "httpMethod": "get",
      "description": "Get a list of information about files and directories in a path.",
      "parameters": [
        {
          "name": "path",
          "schema": "string",
          "required": false,
          "description": "the path to query, with respect to the fisheye repository root."
        }
      ],
      "responses": []
    },
    {
      "url": "/rest-service-fe/revisionData-v1/revisionInfo/{repository}",
      "method": "getRevisionInfo",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "path",
          "schema": "string",
          "required": false,
          "description": "the path of the filerevision, with respect to the fisheye repository root."
        },
        {
          "name": "revision",
          "schema": "string",
          "required": false,
          "description": "the id of the filerevision to retrieve."
        }
      ],
      "responses": []
    },
    {
      "url": "/rest-service-fe/revisionData-v1/revisionTags/{repository}",
      "method": "listTagsForRevision",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "path",
          "schema": "string",
          "required": false,
          "description": "the path of the filerevision, with respect to the fisheye repository root."
        },
        {
          "name": "revision",
          "schema": "string",
          "required": false,
          "description": "the id of the filerevision to retrieve."
        }
      ],
      "responses": []
    },
    {
      "url": "/rest-service-fe/search-v1/crossRepositoryQuery",
      "method": "getCrossRepositoryQuery",
      "httpMethod": "get",
      "description": "Execute a query across repositories. By default, this will search all repositories.",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "text to search for in commit message and p4 jobId. Must not be empty."
        },
        {
          "name": "repository",
          "schema": "string",
          "required": false,
          "description": "restrict search to only these repositories (by their keys)"
        },
        {
          "name": "expand",
          "schema": "string",
          "required": false,
          "description": "expand query parameter to specify the maximum number of results. Format is changesets[n:m].revisions[n:m],reviews\n        the default number of changesets returned is 30, the maximum returned is 100"
        }
      ],
      "responses": []
    },
    {
      "url": "/rest-service-fe/search-v1/query/{repository}",
      "method": "getQuery",
      "httpMethod": "get",
      "description": "Execute a FishEye query against a specific repository.",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "FishEye query to execute"
        },
        {
          "name": "maxReturn",
          "schema": "string",
          "required": false,
          "description": "maximum number of results (which can be left unspecified, but in that case,\n the maximum number of results will set to 3000 results)"
        }
      ],
      "responses": []
    },
    {
      "url": "/rest-service-fe/search-v1/queryAsRows/{repository}",
      "method": "getQueryAsRows",
      "httpMethod": "get",
      "description": "Execute a FishEye query (that contains a \"return\" statement) against a specific repository.",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "FishEye query to execute (which must contain a \"return\" statement)"
        },
        {
          "name": "maxReturn",
          "schema": "string",
          "required": false,
          "description": "maximum number of results (which can be left unspecified, but in that case,\n the maximum number of results will set to 3000 results)"
        }
      ],
      "responses": []
    },
    {
      "url": "/rest-service-fe/search-v1/reviewsForChangeset/{repository}",
      "method": "getReviewsForChangeset",
      "httpMethod": "post",
      "description": "Retrieve a list of reviews for a changeset in a given repository.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/rest-service-fe/search-v1/reviewsForChangesets/{repository}",
      "method": "getReviewsForChangesets",
      "httpMethod": "post",
      "description": "Retrieve a list of reviews for each given changeset in a given repository.",
      "parameters": [],
      "responses": []
    }
  ],
  "apiBaseUrl": "http://fisheye.local/context",
  "apiTitle": "FishEye",
  "endpoints": 16,
  "sdkMethods": 32,
  "schemas": 0,
  "parameters": 28,
  "difficultyScore": 39,
  "difficulty": "Easy"
}