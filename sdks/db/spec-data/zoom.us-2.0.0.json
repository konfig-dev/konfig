{
  "providerName": "zoom.us",
  "openApiRaw": "https://marketplace.zoom.us/docs/api-reference/zoom-api/Zoom%20API.oas2.json",
  "homepage": "zoom.us",
  "apiVersion": "2.0.0",
  "methods": [
    {
      "url": "/accounts",
      "method": "accounts",
      "httpMethod": "get",
      "tag": "Accounts",
      "description": "List sub accounts",
      "parameters": [
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "page_number",
          "schema": "integer",
          "description": "\n**Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use \"next_page_token\" for pagination instead of this field.\n\nThe page number of the current page in the returned records."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of Accounts."
        }
      ]
    },
    {
      "url": "/accounts",
      "method": "accountCreate",
      "httpMethod": "post",
      "tag": "Accounts",
      "description": "Create a sub account",
      "parameters": [
        {
          "name": "account_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "options",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}",
      "method": "accountDisassociate",
      "httpMethod": "delete",
      "tag": "Accounts",
      "description": "Disassociate a sub account",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "The account ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/accounts/{accountId}",
      "method": "account",
      "httpMethod": "get",
      "tag": "Accounts",
      "description": "Get sub account details",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "The account ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/billing",
      "method": "accountBilling",
      "httpMethod": "get",
      "tag": "Billing",
      "description": "Get billing information",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "The account ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Billing Contact object."
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/billing",
      "method": "accountBillingUpdate",
      "httpMethod": "patch",
      "tag": "Billing",
      "description": "Update billing information",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "The account ID."
        },
        {
          "name": "address",
          "schema": "string",
          "description": ""
        },
        {
          "name": "apt",
          "schema": "string",
          "description": ""
        },
        {
          "name": "city",
          "schema": "string",
          "description": ""
        },
        {
          "name": "country",
          "schema": "string",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phone_number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "zip",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/accounts/{accountId}/billing/invoices",
      "method": "accountBillingInvoices",
      "httpMethod": "get",
      "tag": "Billing",
      "description": "List billing invoices",
      "parameters": [
        {
          "name": "from",
          "schema": "string",
          "description": "Start date for the invoice query in `yyyy-mm-dd` format. The date range defined by the “from” and “to” parameters should not exceed one year. The range defined should fall within the past three years.\n"
        },
        {
          "name": "to",
          "schema": "string",
          "description": "End date for the invoice query in `yyyy-mm-dd` format"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/billing/invoices/{invoiceId}",
      "method": "getAccountBillingInvoice",
      "httpMethod": "get",
      "tag": "Billing",
      "description": "Get invoice details",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/lock_settings",
      "method": "getAccountLockSettings",
      "httpMethod": "get",
      "tag": "Accounts",
      "description": "Get locked settings",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the account. To retrieve locked settings of the master account or a regular account, provide \"me\" as the value of this field. <br> To retrieve locked settings of a sub account, provide the Account ID of the sub account in this field."
        },
        {
          "name": "option",
          "schema": "string",
          "description": "`meeting_security`: Use this query parameter to view meeting security settings applied on the account.<br>"
        },
        {
          "name": "custom_query_fields",
          "schema": "string",
          "description": "Provide the name of the field by which you would like to filter the response. For example, if you provide \"host_video\" as the value of this field, you will get a response similar to the following:<br>\n{\n    \"schedule_meeting\": {\n        \"host_video\": false\n    }\n}\n<br>You can provide multiple values by separating them with commas(example: \"host_video,participant_video”)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/lock_settings",
      "method": "updateAccountLockSettings",
      "httpMethod": "patch",
      "tag": "Accounts",
      "description": "Update locked settings",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the account. To retrieve locked settings of the master account or a regular account, provide \"me\" as the value of this field. <br> To retrieve locked settings of a sub account, provide the Account ID of the sub account in this field."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/managed_domains",
      "method": "accountManagedDomain",
      "httpMethod": "get",
      "tag": "Accounts",
      "description": "Get managed domains",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the account. To retrieve locked settings of the master account or a regular account, provide \"me\" as the value of this field. <br> To retrieve locked settings of a sub account, provide the Account ID of the sub account in this field."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of managed domains."
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/options",
      "method": "accountOptionsUpdate",
      "httpMethod": "patch",
      "tag": "Accounts",
      "description": "Update options",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "The account ID."
        },
        {
          "name": "billing_auto_renew",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "meeting_connector_list",
          "schema": "array",
          "description": ""
        },
        {
          "name": "pay_mode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "room_connector_list",
          "schema": "array",
          "description": ""
        },
        {
          "name": "share_mc",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "share_rc",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/owner",
      "method": "updateAccountOwner",
      "httpMethod": "put",
      "tag": "Accounts",
      "description": "Update the account owner",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "Account Id of the account."
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/phone/settings",
      "method": "updatePhoneSettings",
      "httpMethod": "patch",
      "tag": "Phone",
      "description": "Update BYOC settings",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the sub account."
        },
        {
          "name": "byoc",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/phone/setup",
      "method": "setUpAccount",
      "httpMethod": "post",
      "tag": "Phone",
      "description": "Set up a Zoom Phone account",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the account."
        },
        {
          "name": "emergency_address",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "extension_number",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/accounts/{accountId}/phone/sip_trunk/trunks",
      "method": "postPhoneSipTrunk",
      "httpMethod": "post",
      "tag": "Phone",
      "description": "Assign SIP trunks",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the account."
        },
        {
          "name": "sip_trunks",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/phone/sip_trunk/trunks/{sipTrunkId}",
      "method": "updatePhoneSipTrunk",
      "httpMethod": "patch",
      "tag": "Phone",
      "description": "Update SIP trunk details",
      "parameters": [
        {
          "name": "sipTrunkId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the SIP trunk."
        },
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the sub account."
        },
        {
          "name": "carrier_account",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/plans",
      "method": "accountPlans",
      "httpMethod": "get",
      "tag": "Billing",
      "description": "Get plan Information",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "The account ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/plans",
      "method": "accountPlanCreate",
      "httpMethod": "post",
      "tag": "Billing",
      "description": "Subscribe plans",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "The account ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "201",
          "description": "Account Plans object."
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/plans/addons",
      "method": "accountPlanAddonCreate",
      "httpMethod": "post",
      "tag": "Billing",
      "description": "Subscribe additional plan",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "The account ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/accounts/{accountId}/plans/addons",
      "method": "accountPlanAddonUpdate",
      "httpMethod": "put",
      "tag": "Billing",
      "description": "Update an additional plan",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "The account ID."
        },
        {
          "name": "hosts",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/accounts/{accountId}/plans/addons/status",
      "method": "accountPlanAddonCancel",
      "httpMethod": "patch",
      "tag": "Billing",
      "description": "Cancel additional plans",
      "parameters": [
        {
          "name": "action",
          "schema": "string",
          "description": ""
        },
        {
          "name": "comment",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reason",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/plans/base",
      "method": "accountPlanBaseUpdate",
      "httpMethod": "put",
      "tag": "Billing",
      "description": "Update a base plan",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "The account ID."
        },
        {
          "name": "hosts",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/accounts/{accountId}/plans/base/status",
      "method": "accountPlanBaseDelete",
      "httpMethod": "patch",
      "tag": "Billing",
      "description": "Cancel a base plan",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "comment",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reason",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/plans/usage",
      "method": "getPlanUsage",
      "httpMethod": "get",
      "tag": "Billing",
      "description": "Get plan usage",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/recordings",
      "method": "getAccountCloudRecording",
      "httpMethod": "get",
      "tag": "Cloud Recording",
      "description": "List recordings of an account",
      "parameters": [
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "from",
          "schema": "string",
          "description": "The start date in UTC for the monthly range for which you would like to retrieve recordings. The maximum range can be a month. If no value is provided for this field, the default will be current date. For example, if you make the API request on June 30, 2020, without providing the “from” and “to” parameters, by default the value of 'from' field will be “2020-06-30” and the value of the 'to' field will be “2020-07-01”."
        },
        {
          "name": "to",
          "schema": "string",
          "description": "The end date for the monthly range for which you would like to retrieve recordings. The maximum range can be a month."
        },
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the account."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/settings",
      "method": "accountSettings",
      "httpMethod": "get",
      "tag": "Accounts",
      "description": "Get settings",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "The account ID."
        },
        {
          "name": "option",
          "schema": "string",
          "description": "`meeting_authentication`: Use this query parameter to view [meeting authentication configuration](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied on the account.<br>`recording_authentication`: Use this query parameter to view [recording authentication configuration](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied on the account.<br>`security`: Use this query parameter to view security settings such as password requirements for user login, two factor authentication etc., applied on the account.<br>\n`meeting_security`: Use this query parameter to view meeting security settings applied on the account.<br>"
        },
        {
          "name": "custom_query_fields",
          "schema": "string",
          "description": "Provide the name of the field by which you would like to filter the response. For example, if you provide \"host_video\" as the value of this field, you will get a response similar to the following:<br>\n{\n    \"schedule_meeting\": {\n        \"host_video\": false\n    }\n}\n<br>You can provide multiple values by separating them with commas(example: \"host_video,participant_video”)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/settings",
      "method": "accountSettingsUpdate",
      "httpMethod": "patch",
      "tag": "Accounts",
      "description": "Update settings",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "The account ID."
        },
        {
          "name": "option",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/accounts/{accountId}/settings/virtual_backgrounds",
      "method": "delVb",
      "httpMethod": "delete",
      "tag": "Accounts",
      "description": "Delete virtual background files",
      "parameters": [
        {
          "name": "file_ids",
          "schema": "string",
          "description": "Provide the id of the file that is to be deleted. To delete multiple files, provide comma separated values for this field."
        }
      ],
      "responses": []
    },
    {
      "url": "/accounts/{accountId}/settings/virtual_backgrounds",
      "method": "uploadVb",
      "httpMethod": "post",
      "tag": "Accounts",
      "description": "Upload virtual background files",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the account."
        },
        {
          "name": "file",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/sip_trunk/callout_countries",
      "method": "listInternalCalloutCountries",
      "httpMethod": "get",
      "tag": "SIP Connected Audio",
      "description": "List internal call-out countries",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the account. To list Call-out enabled countries to a sub account, provide the account ID of the sub account in the `accountId` path parameter. To list Call-out enabled countries of a sub account, provide the account ID of the sub account in the `accountId` path parameter. To list Call-out enabled countries of a master account, provide `me` as the value of the `accountId` path parameter."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/sip_trunk/callout_countries",
      "method": "addCalloutCountries",
      "httpMethod": "post",
      "tag": "SIP Connected Audio",
      "description": "Add internal call-out countries",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the account. To add Call-out enabled countries to a sub account, provide the account ID of the sub account in the `accountId` path parameter. To add Call-out enabled countries to a master account, provide `me` as the value of the `accountId` path parameter."
        },
        {
          "name": "callout_countries",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/sip_trunk/callout_countries/{countryId}",
      "method": "deleteInternalCallOutCountry",
      "httpMethod": "delete",
      "tag": "SIP Connected Audio",
      "description": "Delete internal call-out country",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Account.<br>\nTo remove Call-out country from a sub account, provide the account ID of the sub account in the `accountId` path parameter. To remove Call-out country from a master account, provide `me` as the value of the `accountId` path parameter."
        },
        {
          "name": "countryId",
          "schema": "string",
          "required": true,
          "description": "Two lettered Id of the country."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/sip_trunk/internal_numbers",
      "method": "listInternalNumbers",
      "httpMethod": "get",
      "tag": "SIP Connected Audio",
      "description": "List internal numbers",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the account. To list internal numbers of a sub account, provide the account ID of the sub account in the `accountId` path parameter. To list internal numbers of a  master account, provide `me` as the value of the `accountId` path parameter."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/sip_trunk/internal_numbers",
      "method": "addInternalNumbers",
      "httpMethod": "post",
      "tag": "SIP Connected Audio",
      "description": "Add internal numbers",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the account.<br>To add internal numbers to a sub account, provide the account ID of the sub account in the `accountId` path parameter. To add internal numbers to a master account, provide `me` as the value of the `accountId` path parameter."
        },
        {
          "name": "internal_numbers",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/sip_trunk/internal_numbers/{numberId}",
      "method": "deleteInternalNumber",
      "httpMethod": "delete",
      "tag": "SIP Connected Audio",
      "description": "Delete an internal number",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the account. To delete an internal number from a sub account, provide the account ID of the sub account in the `accountId` path parameter. To delete an internal number from a master account, provide `me` as the value of the `accountId` path parameter."
        },
        {
          "name": "numberId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the phone number. This value can be retrieved by calling the List Internal Numbers API."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/sip_trunk/numbers",
      "method": "deleteAllSipNumbers",
      "httpMethod": "delete",
      "tag": "SIP Connected Audio",
      "description": "Delete all numbers",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "Account ID of the sub account from which the numbers are to be deleted. This can be retrieved from [List sub accounts](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/account) API."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/sip_trunk/numbers",
      "method": "assignSipTrunkNumbers",
      "httpMethod": "post",
      "tag": "SIP Connected Audio",
      "description": "Assign numbers",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the sub account."
        },
        {
          "name": "phone_numbers",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/sip_trunk/settings",
      "method": "assignSipConfig",
      "httpMethod": "patch",
      "tag": "SIP Connected Audio",
      "description": "Assign SIP trunk configuration",
      "parameters": [
        {
          "name": "enable",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "show_callout_internal_number",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "show_zoom_provided_callout_countries",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "show_zoom_provided_numbers",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/sip_trunk/trunks",
      "method": "listSipTrunks",
      "httpMethod": "get",
      "tag": "SIP Connected Audio",
      "description": "List SIP trunks",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Account. To retrieve SIP trunks assigned to a sub account, provide the account ID of the sub account in the as the value of this field. To retrieve SIP trunks of a master account, provide `me` as the value of this field."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/sip_trunk/trunks",
      "method": "assignSipTrunks",
      "httpMethod": "post",
      "tag": "SIP Connected Audio",
      "description": "Assign SIP trunks",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the sub account."
        },
        {
          "name": "sip_trunks",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/sip_trunk/trunks/{trunkId}",
      "method": "deleteSipTrunk",
      "httpMethod": "delete",
      "tag": "SIP Connected Audio",
      "description": "Delete a SIP trunk",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the sub account."
        },
        {
          "name": "trunkId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the SIP Trunk that was previously assigned to a sub account. To retrieve the value of this field, use the List SIP Trunks API."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/trusted_domains",
      "method": "accountTrustedDomain",
      "httpMethod": "get",
      "tag": "Accounts",
      "description": "Get trusted domains",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "The account ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{accountId}/users/{userId}/account",
      "method": "switchUserAccount",
      "httpMethod": "put",
      "tag": "Users",
      "description": "Switch a user's account",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "account_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/download/billing/invoices/{invoiceId}",
      "method": "downloadInvoicePdf",
      "httpMethod": "get",
      "tag": "Billing",
      "description": "Download an invoice file",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/archive_files",
      "method": "listArchivedFiles",
      "httpMethod": "get",
      "tag": "Cloud Recording",
      "description": "List archived files",
      "parameters": [
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "from",
          "schema": "string",
          "description": "Start date for the query in \"yyyy-MM-dd'T'HH:mm:ss'Z'\" format. The duration for the query defined using the \"from\" and \"to\" parameters should not exceed 7 days as this API only provides a week's data at once."
        },
        {
          "name": "to",
          "schema": "string",
          "description": "End date for the query in \"yyyy-MM-dd'T'HH:mm:ss'Z'\" format. "
        },
        {
          "name": "query_data_type",
          "schema": "string",
          "description": "Query data type for `from` and `to`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/chat/channels/{channelId}",
      "method": "deleteUserLevelChannel",
      "httpMethod": "delete",
      "tag": "Chat Channels",
      "description": "Delete a channel",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "Channel ID: Unique Identifier of a channel."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/chat/channels/{channelId}",
      "method": "getUserLevelChannel",
      "httpMethod": "get",
      "tag": "Chat Channels",
      "description": "Get a channel",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "Channel ID: Unique Identifier of a channel."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The channel object represents a Zoom chat [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-). "
        }
      ]
    },
    {
      "url": "/chat/channels/{channelId}",
      "method": "updateUserLevelChannel",
      "httpMethod": "patch",
      "tag": "Chat Channels",
      "description": "Update a channel",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "Channel Id."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/chat/channels/{channelId}/members/me",
      "method": "leaveChannel",
      "httpMethod": "delete",
      "tag": "Chat Channels",
      "description": "Leave a channel",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "Channel ID: Unique Identifier of a channel."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/chat/channels/{channelId}/members/me",
      "method": "joinChannel",
      "httpMethod": "post",
      "tag": "Chat Channels",
      "description": "Join a channel",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "Channel Id."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/chat/channels/{channelId}/members/{memberId}",
      "method": "removeAUserLevelChannelMember",
      "httpMethod": "delete",
      "tag": "Chat Channels",
      "description": "Remove a member",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Channel from where you would like to remove a member. This can be retrieved from the [List Channels API](https://marketplace.zoom.us/docs/api-reference/zoom-api/chat-channels/getchannels)."
        },
        {
          "name": "memberId",
          "schema": "string",
          "required": true,
          "description": "Email address of the member whom you would like to be remove from the channel."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/chat/users/me/contacts",
      "method": "getUserContacts",
      "httpMethod": "get",
      "tag": "Contacts",
      "description": "List user's contacts",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": "The type of contact. The value can be one of the following:\n`company`: Contacts from the user's organization.\n`external`: External contacts. "
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned with a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/chat/users/me/contacts/{contactId}",
      "method": "getUserContact",
      "httpMethod": "get",
      "tag": "Contacts",
      "description": "Get user's contact details",
      "parameters": [
        {
          "name": "contactId",
          "schema": "string",
          "required": true,
          "description": "The user's contact Id or email address. The contact can be either a company contact or an external contact."
        },
        {
          "name": "query_presence_status",
          "schema": "boolean",
          "description": "The presence status of the contact. \nInclude this query parameter with a value of `true` to get the presence status of the contact in the response."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/chat/users/{userId}/channels",
      "method": "getChannels",
      "httpMethod": "get",
      "tag": "Chat Channels",
      "description": "List user's channels",
      "parameters": [
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned from a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. The expiration period for this token is 15 minutes."
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the user."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/chat/users/{userId}/channels",
      "method": "createChannel",
      "httpMethod": "post",
      "tag": "Chat Channels",
      "description": "Create a channel",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the user."
        },
        {
          "name": "members",
          "schema": "array",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/chat/users/{userId}/channels/{channelId}",
      "method": "deleteChannel",
      "httpMethod": "delete",
      "tag": "Chat Channels (Account-level)",
      "description": "Delete a channel",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "Channel ID: Unique Identifier of a channel."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/chat/users/{userId}/channels/{channelId}",
      "method": "getChannel",
      "httpMethod": "get",
      "tag": "Chat Channels (Account-level)",
      "description": "Get a channel",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "Channel ID: Unique Identifier of a channel."
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the user who is the owner of the channel."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The channel object represents a Zoom chat [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-). "
        }
      ]
    },
    {
      "url": "/chat/users/{userId}/channels/{channelId}",
      "method": "updateChannel",
      "httpMethod": "patch",
      "tag": "Chat Channels (Account-level)",
      "description": "Update a channel",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "Channel Id."
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Zoom user who is the owner of the channel."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/chat/users/{userId}/channels/{channelId}/members",
      "method": "listChannelMembers",
      "httpMethod": "get",
      "tag": "Chat Channels (Account-level)",
      "description": "List channel members",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "Channel Id."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned with a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the user who is the owner of this channel."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/chat/users/{userId}/channels/{channelId}/members",
      "method": "inviteChannelMembers",
      "httpMethod": "post",
      "tag": "Chat Channels (Account-level)",
      "description": "Invite channel members",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "Channel ID: Unique Identifier of the channel."
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the user who is the owner of this channel."
        },
        {
          "name": "members",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/chat/users/{userId}/channels/{channelId}/members/{memberId}",
      "method": "removeAChannelMember",
      "httpMethod": "delete",
      "tag": "Chat Channels (Account-level)",
      "description": "Remove a member",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Channel from where you would like to remove a member. This can be retrieved from the [List Channels API](https://marketplace.zoom.us/docs/api-reference/zoom-api/chat-channels/getchannels)."
        },
        {
          "name": "memberId",
          "schema": "string",
          "required": true,
          "description": "Email address of the member whom you would like to be remove from the channel."
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the channel owner."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/chat/users/{userId}/messages",
      "method": "getChatMessages",
      "httpMethod": "get",
      "tag": "Chat Messages",
      "description": "List user's chat messages",
      "parameters": [
        {
          "name": "to_contact",
          "schema": "string",
          "description": "The email address of a chat contact with whom the current user chatted. Messages that were sent and/or received between the user and the contact is displayed.\n\nNote: You must provide either `contact` or `channel` as a query parameter to retrieve messages either from an individual or a chat channel. "
        },
        {
          "name": "to_channel",
          "schema": "string",
          "description": "The channel Id of a channel inside which the current user had chat conversations. Messages that were sent and/or received between the user and the channel is displayed.\n\nNote: You must provide either `contact` or `channel` as a query parameter to retrieve messages either from an individual or a chat channel. "
        },
        {
          "name": "date",
          "schema": "string",
          "description": "The query date for which you would like to get the chat messages."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned with a single API call. "
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "include_deleted_and_edited_message",
          "schema": "string",
          "description": "**Optional** <br>\nSet the value of this field to `true` to include edited and deleted messages in the response."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Chat message object."
        }
      ]
    },
    {
      "url": "/chat/users/{userId}/messages",
      "method": "sendaChatMessage",
      "httpMethod": "post",
      "tag": "Chat Messages",
      "description": "Send a chat message",
      "parameters": [
        {
          "name": "at_items",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "message",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "to_channel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "to_contact",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/chat/users/{userId}/messages/{messageId}",
      "method": "deleteChatMessage",
      "httpMethod": "delete",
      "tag": "Chat Messages",
      "description": "Delete a message",
      "parameters": [
        {
          "name": "messageId",
          "schema": "string",
          "required": true,
          "description": "Message ID"
        },
        {
          "name": "to_contact",
          "schema": "string",
          "description": "The userId or email address of a chat contact to whom you previously sent the message.\n\nNote: You must provide either `to_contact` or `to_channel` as a query parameter to delete a message that was previously sent to either an individual or a chat channel respectively. "
        },
        {
          "name": "to_channel",
          "schema": "string",
          "description": "The channel Id of the channel where you would like to send the message.\n\nYou must provide either `to_contact` or `to_channel` as a query parameter to delete a message that was previously sent to either an individual or a chat channel "
        }
      ],
      "responses": []
    },
    {
      "url": "/chat/users/{userId}/messages/{messageId}",
      "method": "editMessage",
      "httpMethod": "put",
      "tag": "Chat Messages",
      "description": "Update a message",
      "parameters": [
        {
          "name": "messageId",
          "schema": "string",
          "required": true,
          "description": "Message ID: Unique Identifier of the message."
        },
        {
          "name": "message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "to_channel",
          "schema": "string",
          "description": ""
        },
        {
          "name": "to_contact",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/contacts",
      "method": "searchCompanyContacts",
      "httpMethod": "get",
      "tag": "Contacts",
      "description": "Search company contacts",
      "parameters": [
        {
          "name": "search_key",
          "schema": "string",
          "required": true,
          "description": "Provide the keyword - either first name, last name or email of the contact whom you have to search for."
        },
        {
          "name": "query_presence_status",
          "schema": "string",
          "description": "Set `query_presence_status` to `true` in order to include the presence status of a contact in the response."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records to be returned with a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/groups",
      "method": "groups",
      "httpMethod": "get",
      "tag": "Groups",
      "description": "List groups",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of Groups."
        }
      ]
    },
    {
      "url": "/groups",
      "method": "groupCreate",
      "httpMethod": "post",
      "tag": "Groups",
      "description": "Create a group",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/groups/{groupId}",
      "method": "groupDelete",
      "httpMethod": "delete",
      "tag": "Groups",
      "description": "Delete a group",
      "parameters": [
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups)."
        }
      ],
      "responses": []
    },
    {
      "url": "/groups/{groupId}",
      "method": "group",
      "httpMethod": "get",
      "tag": "Groups",
      "description": "Get a group",
      "parameters": [
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/groups/{groupId}",
      "method": "groupUpdate",
      "httpMethod": "patch",
      "tag": "Groups",
      "description": "Update a group",
      "parameters": [
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups)."
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/groups/{groupId}/lock_settings",
      "method": "getGroupLockSettings",
      "httpMethod": "get",
      "tag": "Groups",
      "description": "Get locked settings",
      "parameters": [
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "Id of the group."
        },
        {
          "name": "option",
          "schema": "string",
          "description": "Specify `meeting_security` as the value of this field if you would like to view security settings applied on a meeting hosted by the users in this group."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/groups/{groupId}/lock_settings",
      "method": "groupLockedSettings",
      "httpMethod": "patch",
      "tag": "Groups",
      "description": "Update locked settings",
      "parameters": [
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "The Id of the group."
        },
        {
          "name": "option",
          "schema": "string",
          "description": "Specify `meeting_security` as the value of this field if you would like to view security settings applied on a meeting hosted by the users in this group."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/groups/{groupId}/members",
      "method": "groupMembers",
      "httpMethod": "get",
      "tag": "Groups",
      "description": "List group members ",
      "parameters": [
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups)."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "page_number",
          "schema": "integer",
          "description": "\n**Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use \"next_page_token\" for pagination instead of this field.\n\nThe page number of the current page in the returned records."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/groups/{groupId}/members",
      "method": "groupMembersCreate",
      "httpMethod": "post",
      "tag": "Groups",
      "description": "Add group members",
      "parameters": [
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups)."
        },
        {
          "name": "members",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/groups/{groupId}/members/{memberId}",
      "method": "groupMembersDelete",
      "httpMethod": "delete",
      "tag": "Groups",
      "description": "Delete a group member",
      "parameters": [
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups)."
        },
        {
          "name": "memberId",
          "schema": "string",
          "required": true,
          "description": "The member ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/groups/{groupId}/members/{memberId}",
      "method": "updateAGroupMember",
      "httpMethod": "patch",
      "tag": "Groups",
      "description": "Update a group member",
      "parameters": [
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the group. Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API.<br> To change a member's primary group, provide the groupId of the member's current primary group as the value of this field.<br> To remove a member from one group and move the member to another group, provide the groupId of the group from which the member is to be moved."
        },
        {
          "name": "memberId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the group member. Can be retrieved by calling the [List Group Members](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groupmembers) API."
        },
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "target_group_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/groups/{groupId}/settings",
      "method": "getGroupSettings",
      "httpMethod": "get",
      "tag": "Groups",
      "description": "Get a group's settings",
      "parameters": [
        {
          "name": "option",
          "schema": "string",
          "description": "`meeting_authentication`: Use this query parameter to view [meeting authentication configuration](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied on the group.<br>`recording_authentication`: Use this query parameter to view [recording authentication configuration](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied on the group.<br>\n`meeting_security`: Use this query parameter to view meeting security settings applied on the group.<br>"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/groups/{groupId}/settings",
      "method": "updateGroupSettings",
      "httpMethod": "patch",
      "tag": "Groups",
      "description": "Update a group's settings",
      "parameters": [
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "Id of the group."
        },
        {
          "name": "option",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/groups/{groupId}/settings/virtual_backgrounds",
      "method": "delGroupVb",
      "httpMethod": "delete",
      "tag": "Groups",
      "description": "Delete virtual background files",
      "parameters": [
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the group. Retrieve the value for this field by calling the [List groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API."
        },
        {
          "name": "file_ids",
          "schema": "string",
          "description": "Provide the id of the file that is to be deleted. To delete multiple files, provide comma separated values for this field."
        }
      ],
      "responses": []
    },
    {
      "url": "/groups/{groupId}/settings/virtual_backgrounds",
      "method": "uploadGroupVb",
      "httpMethod": "post",
      "tag": "Groups",
      "description": "Upload virtual background files",
      "parameters": [
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the group. Retrieve the value for this field by calling the [List groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API."
        },
        {
          "name": "file",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/h323/devices",
      "method": "deviceList",
      "httpMethod": "get",
      "tag": "Devices",
      "description": "List H.323/SIP devices",
      "parameters": [
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "page_number",
          "schema": "integer",
          "description": "\n**Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use \"next_page_token\" for pagination instead of this field.\n\nThe page number of the current page in the returned records."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of H.323/SIP Devices."
        }
      ]
    },
    {
      "url": "/h323/devices",
      "method": "deviceCreate",
      "httpMethod": "post",
      "tag": "Devices",
      "description": "Create a H.323/SIP device",
      "parameters": [
        {
          "name": "encryption",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ip",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "protocol",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/h323/devices/{deviceId}",
      "method": "deviceDelete",
      "httpMethod": "delete",
      "tag": "Devices",
      "description": "Delete a H.323/SIP device",
      "parameters": [
        {
          "name": "deviceId",
          "schema": "string",
          "required": true,
          "description": "The device ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/h323/devices/{deviceId}",
      "method": "deviceUpdate",
      "httpMethod": "patch",
      "tag": "Devices",
      "description": "Update a H.323/SIP device",
      "parameters": [
        {
          "name": "deviceId",
          "schema": "string",
          "required": true,
          "description": "The device ID."
        },
        {
          "name": "encryption",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ip",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "protocol",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/im/chat/messages",
      "method": "sendchatbot",
      "httpMethod": "post",
      "tag": "Chatbot Messages",
      "description": "Send chatbot messages",
      "parameters": [
        {
          "name": "account_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "content",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "is_markdown_support",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "robot_jid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "to_jid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "user_jid",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "visible_to_user",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/im/chat/messages/{message_id}",
      "method": "deleteAChatbotMessage",
      "httpMethod": "delete",
      "tag": "Chatbot Messages",
      "description": "Delete a chatbot message",
      "parameters": [
        {
          "name": "account_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "robot_jid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "user_jid",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/im/chat/messages/{message_id}",
      "method": "editChatbotMessage",
      "httpMethod": "put",
      "tag": "Chatbot Messages",
      "description": "Edit a chatbot message",
      "parameters": [
        {
          "name": "message_id",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the message that needs to be updated. This should be retrieved from the response of [Send Chatbot Message API](https://marketplace.zoom.us/docs/api-reference/zoom-api/im-chat/sendchatbot)."
        },
        {
          "name": "account_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "content",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "is_markdown_support",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "robot_jid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "user_jid",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/im/chat/sessions",
      "method": "imChatSessions",
      "httpMethod": "get",
      "tag": "IM Chat",
      "description": "Get IM chat sessions",
      "parameters": [
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once."
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": "End date."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/im/chat/sessions/{sessionId}",
      "method": "imChatMessages",
      "httpMethod": "get",
      "tag": "IM Chat",
      "description": "Get IM chat messages",
      "parameters": [
        {
          "name": "sessionId",
          "schema": "string",
          "required": true,
          "description": "IM chat session ID."
        },
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once."
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": "End date."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/im/groups",
      "method": "imGroups",
      "httpMethod": "get",
      "tag": "IM Groups",
      "description": "List IM directory groups",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of IM Groups."
        }
      ]
    },
    {
      "url": "/im/groups",
      "method": "imGroupCreate",
      "httpMethod": "post",
      "tag": "IM Groups",
      "description": "Create an IM directory group",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "search_by_account",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "search_by_domain",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "search_by_ma_account",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/im/groups/{groupId}",
      "method": "imGroupDelete",
      "httpMethod": "delete",
      "tag": "IM Groups",
      "description": "Delete an IM directory group",
      "parameters": [
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups)."
        }
      ],
      "responses": []
    },
    {
      "url": "/im/groups/{groupId}",
      "method": "imGroup",
      "httpMethod": "get",
      "tag": "IM Groups",
      "description": "Retrieve an IM directory group",
      "parameters": [
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/im/groups/{groupId}",
      "method": "imGroupUpdate",
      "httpMethod": "patch",
      "tag": "IM Groups",
      "description": "Update an IM directory group",
      "parameters": [
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups)."
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "search_by_account",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "search_by_domain",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "search_by_ma_account",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/im/groups/{groupId}/members",
      "method": "imGroupMembers",
      "httpMethod": "get",
      "tag": "IM Groups",
      "description": "List IM directory group members",
      "parameters": [
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups)."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "page_number",
          "schema": "integer",
          "description": "\n**Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use \"next_page_token\" for pagination instead of this field.\n\nThe page number of the current page in the returned records."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of Group Members."
        }
      ]
    },
    {
      "url": "/im/groups/{groupId}/members",
      "method": "imGroupMembersCreate",
      "httpMethod": "post",
      "tag": "IM Groups",
      "description": "Add IM directory group members",
      "parameters": [
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups)."
        },
        {
          "name": "members",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/im/groups/{groupId}/members/{memberId}",
      "method": "imGroupMembersDelete",
      "httpMethod": "delete",
      "tag": "IM Groups",
      "description": "Delete an IM directory group member",
      "parameters": [
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups)."
        },
        {
          "name": "memberId",
          "schema": "string",
          "required": true,
          "description": "The member ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/im/users/me/chat/messages",
      "method": "sendimmessages",
      "httpMethod": "post",
      "tag": "IM Chat",
      "description": "Send IM messages",
      "parameters": [
        {
          "name": "chat_user",
          "schema": "string",
          "description": "The email address (registered with Zoom) or the userId of the chat user."
        },
        {
          "name": "message",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/im/users/{userId}/chat/messages",
      "method": "listimmessages",
      "httpMethod": "get",
      "tag": "IM Chat",
      "description": "Get user’s IM messages",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address."
        },
        {
          "name": "chat_user",
          "schema": "string",
          "description": "Chat user's ID or email address."
        },
        {
          "name": "channel",
          "schema": "string",
          "description": "IM Channel's ID."
        },
        {
          "name": "date",
          "schema": "string",
          "description": "IM message's query date time, format as yyyy-MM-dd."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/live_meetings/{meetingId}/events",
      "method": "inMeetingRecordingControl",
      "httpMethod": "patch",
      "tag": "Meetings",
      "description": "Use in-Meeting recording controls",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the live meeting."
        },
        {
          "name": "method",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/meetings/{meetingId}",
      "method": "meetingDelete",
      "httpMethod": "delete",
      "tag": "Meetings",
      "description": "Delete a meeting",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        },
        {
          "name": "occurrence_id",
          "schema": "string",
          "description": "The meeting occurrence ID."
        },
        {
          "name": "schedule_for_reminder",
          "schema": "boolean",
          "description": "`true`: Notify host and alternative host about the meeting cancellation via email.\n`false`: Do not send any email notification."
        },
        {
          "name": "cancel_meeting_reminder",
          "schema": "string",
          "description": "`true`: Notify registrants about the meeting cancellation via email. \n\n`false`: Do not send any email notification to meeting registrants. \n\nThe default value of this field is `false`."
        }
      ],
      "responses": []
    },
    {
      "url": "/meetings/{meetingId}",
      "method": "meeting",
      "httpMethod": "get",
      "tag": "Meetings",
      "description": "Get a meeting",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        },
        {
          "name": "occurrence_id",
          "schema": "string",
          "description": "Meeting Occurrence ID. Provide this field to view meeting details of a particular occurrence of the [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings)."
        },
        {
          "name": "show_previous_occurrences",
          "schema": "boolean",
          "description": "Set the value of this field to `true` if you would like to view meeting details of all previous occurrences of a [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings). "
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/meetings/{meetingId}",
      "method": "meetingUpdate",
      "httpMethod": "patch",
      "tag": "Meetings",
      "description": "Update a meeting",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        },
        {
          "name": "occurrence_id",
          "schema": "string",
          "description": "Meeting occurrence id. Support change of agenda, start_time, duration, settings: {host_video, participant_video, join_before_host, mute_upon_entry, waiting_room, watermark, auto_recording}"
        }
      ],
      "responses": []
    },
    {
      "url": "/meetings/{meetingId}/batch_polls",
      "method": "createBatchPolls",
      "httpMethod": "post",
      "tag": "Meetings",
      "description": "Perform batch poll creation",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "questions",
          "schema": "array",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/meetings/{meetingId}/invitation",
      "method": "meetingInvitation",
      "httpMethod": "get",
      "tag": "Meetings",
      "description": "Get meeting invitation",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Meeting invitation details."
        }
      ]
    },
    {
      "url": "/meetings/{meetingId}/livestream",
      "method": "getLiveStreamDetails",
      "httpMethod": "get",
      "tag": "Meetings",
      "description": "Get live stream details",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the meeting."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/meetings/{meetingId}/livestream",
      "method": "meetingLiveStreamUpdate",
      "httpMethod": "patch",
      "tag": "Meetings",
      "description": "Update a live stream",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        },
        {
          "name": "page_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "stream_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "stream_url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/meetings/{meetingId}/livestream/status",
      "method": "meetingLiveStreamStatusUpdate",
      "httpMethod": "patch",
      "tag": "Meetings",
      "description": "Update Live Stream Status",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        },
        {
          "name": "action",
          "schema": "string",
          "description": ""
        },
        {
          "name": "settings",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/meetings/{meetingId}/polls",
      "method": "meetingPolls",
      "httpMethod": "get",
      "tag": "Meetings",
      "description": "List meeting polls",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Poll List"
        }
      ]
    },
    {
      "url": "/meetings/{meetingId}/polls",
      "method": "meetingPollCreate",
      "httpMethod": "post",
      "tag": "Meetings",
      "description": "Create a meeting poll",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/meetings/{meetingId}/polls/{pollId}",
      "method": "meetingPollDelete",
      "httpMethod": "delete",
      "tag": "Meetings",
      "description": "Delete a meeting poll",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        },
        {
          "name": "pollId",
          "schema": "string",
          "required": true,
          "description": "The poll ID"
        }
      ],
      "responses": []
    },
    {
      "url": "/meetings/{meetingId}/polls/{pollId}",
      "method": "meetingPollGet",
      "httpMethod": "get",
      "tag": "Meetings",
      "description": "Get a meeting poll",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        },
        {
          "name": "pollId",
          "schema": "string",
          "required": true,
          "description": "The poll ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/meetings/{meetingId}/polls/{pollId}",
      "method": "meetingPollUpdate",
      "httpMethod": "put",
      "tag": "Meetings",
      "description": "Update a meeting poll",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        },
        {
          "name": "pollId",
          "schema": "string",
          "required": true,
          "description": "The poll ID"
        }
      ],
      "responses": []
    },
    {
      "url": "/meetings/{meetingId}/recordings",
      "method": "recordingDelete",
      "httpMethod": "delete",
      "tag": "Cloud Recording",
      "description": "Delete meeting recordings",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": "To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. \n\nTo get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance. \n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request. "
        },
        {
          "name": "action",
          "schema": "string",
          "description": "The recording delete actions:<br>`trash` - Move recording to trash.<br>`delete` - Delete recording permanently."
        }
      ],
      "responses": []
    },
    {
      "url": "/meetings/{meetingId}/recordings",
      "method": "recordingGet",
      "httpMethod": "get",
      "tag": "Cloud Recording",
      "description": "Get meeting recordings",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": "To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. \n\nTo get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance. \n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request. "
        },
        {
          "name": "include_fields",
          "schema": "string",
          "description": "Get the `download_access_token` field for downloading meeting recordings."
        },
        {
          "name": "ttl",
          "schema": "integer",
          "description": "Time to live (TTL) of the `download_access_token`. This is only valid if the `include_fields` query parameter contains `download_access_token`. The range is between 0-604800."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/meetings/{meetingId}/recordings/registrants",
      "method": "meetingRecordingRegistrants",
      "httpMethod": "get",
      "tag": "Cloud Recording",
      "description": "List recording registrants",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        },
        {
          "name": "status",
          "schema": "string",
          "description": "The registrant status:<br>`pending` - Registrant's status is pending.<br>`approved` - Registrant's status is approved.<br>`denied` - Registrant's status is denied."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "page_number",
          "schema": "integer",
          "description": "\n**Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use \"next_page_token\" for pagination instead of this field.\n\nThe page number of the current page in the returned records."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of meeting recording registrant"
        }
      ]
    },
    {
      "url": "/meetings/{meetingId}/recordings/registrants",
      "method": "meetingRecordingRegistrantCreate",
      "httpMethod": "post",
      "tag": "Cloud Recording",
      "description": "Create a recording registrant",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/meetings/{meetingId}/recordings/registrants/questions",
      "method": "recordingRegistrantsQuestionsGet",
      "httpMethod": "get",
      "tag": "Cloud Recording",
      "description": "Get registration questions",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": "To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. \n\nTo get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance. \n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request. "
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Recording Registrant Questions"
        }
      ]
    },
    {
      "url": "/meetings/{meetingId}/recordings/registrants/questions",
      "method": "recordingRegistrantQuestionUpdate",
      "httpMethod": "patch",
      "tag": "Cloud Recording",
      "description": "Update registration questions",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": "To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. \n\nTo get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance. \n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request. "
        }
      ],
      "responses": []
    },
    {
      "url": "/meetings/{meetingId}/recordings/registrants/status",
      "method": "meetingRecordingRegistrantStatus",
      "httpMethod": "put",
      "tag": "Cloud Recording",
      "description": "Update registrant's status",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        },
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "registrants",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/meetings/{meetingId}/recordings/settings",
      "method": "recordingSettingUpdate",
      "httpMethod": "get",
      "tag": "Cloud Recording",
      "description": "Get meeting recording settings",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": "To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. \n\nTo get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance. \n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request. "
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/meetings/{meetingId}/recordings/settings",
      "method": "recordingSettingsUpdate",
      "httpMethod": "patch",
      "tag": "Cloud Recording",
      "description": "Update meeting recording settings",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": "To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. \n\nTo get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance. \n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request. "
        },
        {
          "name": "approval_type",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "authentication_domains",
          "schema": "string",
          "description": ""
        },
        {
          "name": "authentication_option",
          "schema": "string",
          "description": ""
        },
        {
          "name": "on_demand",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "recording_authentication",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "send_email_to_host",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "share_recording",
          "schema": "string",
          "description": ""
        },
        {
          "name": "show_social_share_buttons",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "topic",
          "schema": "string",
          "description": ""
        },
        {
          "name": "viewer_download",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/meetings/{meetingId}/recordings/status",
      "method": "recordingStatusUpdate",
      "httpMethod": "put",
      "tag": "Cloud Recording",
      "description": "Recover meeting recordings",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": "To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. \n\nTo get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance. \n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request. "
        },
        {
          "name": "action",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/meetings/{meetingId}/recordings/{recordingId}",
      "method": "recordingDeleteOne",
      "httpMethod": "delete",
      "tag": "Cloud Recording",
      "description": "Delete a meeting recording file",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": "To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. \n\nTo get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance. \n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request. "
        },
        {
          "name": "recordingId",
          "schema": "string",
          "required": true,
          "description": "The recording ID."
        },
        {
          "name": "action",
          "schema": "string",
          "description": "The recording delete actions:<br>`trash` - Move recording to trash.<br>`delete` - Delete recording permanently."
        }
      ],
      "responses": []
    },
    {
      "url": "/meetings/{meetingId}/recordings/{recordingId}/status",
      "method": "recordingStatusUpdateOne",
      "httpMethod": "put",
      "tag": "Cloud Recording",
      "description": "Recover a single recording",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": "To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. \n\nTo get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance. \n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request. "
        },
        {
          "name": "recordingId",
          "schema": "string",
          "required": true,
          "description": "The recording ID."
        },
        {
          "name": "action",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/meetings/{meetingId}/registrants",
      "method": "meetingRegistrants",
      "httpMethod": "get",
      "tag": "Meetings",
      "description": "List meeting registrants",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        },
        {
          "name": "occurrence_id",
          "schema": "string",
          "description": "The meeting occurrence ID."
        },
        {
          "name": "status",
          "schema": "string",
          "description": "The registrant status:<br>`pending` - Registrant's status is pending.<br>`approved` - Registrant's status is approved.<br>`denied` - Registrant's status is denied."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "page_number",
          "schema": "integer",
          "description": "\n**Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use \"next_page_token\" for pagination instead of this field.\n\nThe page number of the current page in the returned records."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of users."
        }
      ]
    },
    {
      "url": "/meetings/{meetingId}/registrants",
      "method": "meetingRegistrantCreate",
      "httpMethod": "post",
      "tag": "Meetings",
      "description": "Add meeting registrant",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        },
        {
          "name": "occurrence_ids",
          "schema": "string",
          "description": "Occurrence IDs. You can find these with the meeting get API. Multiple values separated by comma."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/meetings/{meetingId}/registrants/questions",
      "method": "meetingRegistrantsQuestionsGet",
      "httpMethod": "get",
      "tag": "Meetings",
      "description": "List registration questions ",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/meetings/{meetingId}/registrants/questions",
      "method": "meetingRegistrantQuestionUpdate",
      "httpMethod": "patch",
      "tag": "Meetings",
      "description": "Update registration questions",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        }
      ],
      "responses": []
    },
    {
      "url": "/meetings/{meetingId}/registrants/status",
      "method": "meetingRegistrantStatus",
      "httpMethod": "put",
      "tag": "Meetings",
      "description": "Update registrant's status",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        },
        {
          "name": "occurrence_id",
          "schema": "string",
          "description": "The meeting occurrence ID."
        },
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "registrants",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/meetings/{meetingId}/registrants/{registrantId}",
      "method": "meetingregistrantdelete",
      "httpMethod": "delete",
      "tag": "Meetings",
      "description": "Delete a meeting registrant",
      "parameters": [
        {
          "name": "occurrence_id",
          "schema": "string",
          "description": "The meeting occurence ID."
        },
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID."
        },
        {
          "name": "registrantId",
          "schema": "string",
          "required": true,
          "description": "The meeting registrant ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/meetings/{meetingId}/status",
      "method": "meetingStatus",
      "httpMethod": "put",
      "tag": "Meetings",
      "description": "Update meeting status",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        },
        {
          "name": "action",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/metrics/client/feedback",
      "method": "dashboardClientFeedback",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "List Zoom meetings client feedback",
      "parameters": [
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once."
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": "End date."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/metrics/client/feedback/{feedbackId}",
      "method": "dashboardClientFeedbackDetail",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get zoom meetings client feedback",
      "parameters": [
        {
          "name": "feedbackId",
          "schema": "string",
          "required": true,
          "description": "Feedback Detail Id"
        },
        {
          "name": "from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/metrics/client/satisfaction",
      "method": "listMeetingSatisfaction",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "List client meeting satisfaction",
      "parameters": [
        {
          "name": "from",
          "schema": "string",
          "description": "The start date for the query in “yyyy-mm-dd” format. "
        },
        {
          "name": "to",
          "schema": "string",
          "description": "The end date for the query in “yyyy-mm-dd” format. "
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/metrics/crc",
      "method": "dashboardCrc",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get CRC port usage",
      "parameters": [
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once."
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": "End date."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/metrics/im",
      "method": "dashboardIm",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get IM metrics",
      "parameters": [
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once."
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": "End date."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/metrics/issues/zoomrooms",
      "method": "dashboardIssueZoomRoom",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get top 25 Zoom Rooms with issues",
      "parameters": [
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once."
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": "End date."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/metrics/issues/zoomrooms/{zoomroomId}",
      "method": "dashboardIssueDetailZoomRoom",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get issues of Zoom Rooms",
      "parameters": [
        {
          "name": "zoomroomId",
          "schema": "string",
          "required": true,
          "description": "The Zoom room ID."
        },
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once."
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": "End date."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/metrics/meetings",
      "method": "dashboardMeetings",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "List meetings",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": "Specify a value to get the response for the corresponding meeting type. The value of this field can be one of the following:<br> <br>`past` - Meeting that already occurred in the specified date range.<br>`pastOne` - Past meetings that were attended by only one user. <br>`live` - Live meetings.<br><br>\n\nIf you do not provide this field, the default value will be `live` and thus, the API will only query responses for live meetings."
        },
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once."
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": "End date."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "include_fields",
          "schema": "string",
          "description": "Set the value of this field to \"tracking_fields\" if you would like to include tracking fields of each meeting in the response."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/metrics/meetings/{meetingId}",
      "method": "dashboardMeetingDetail",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get meeting details",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": "The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        },
        {
          "name": "type",
          "schema": "string",
          "description": "The meeting types: <br>`past` - Past meetings.<br>`pastOne` - Past one user meetings.<br>`live` - Live meetings."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Meeting metric details."
        }
      ]
    },
    {
      "url": "/metrics/meetings/{meetingId}/participants",
      "method": "dashboardMeetingParticipants",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "List meeting participants",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": "The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        },
        {
          "name": "type",
          "schema": "string",
          "description": "The meeting types: <br>`past` - Past meetings.<br>`pastOne` - Past one user meetings.<br>`live` - Live meetings."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "include_fields",
          "schema": "string",
          "description": "Provide `registrant_id` as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [meeting registrant](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingregistrants). This is not supported for `live` meeting types."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/metrics/meetings/{meetingId}/participants/qos",
      "method": "dashboardMeetingParticipantsQos",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "List meeting participants QoS",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": "The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        },
        {
          "name": "type",
          "schema": "string",
          "description": "The meeting types: <br>`past` - Past meetings.<br>`live` - Live Meetings."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of items returned per page."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Participant QOS list."
        }
      ]
    },
    {
      "url": "/metrics/meetings/{meetingId}/participants/satisfaction",
      "method": "participantFeedback",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get post meeting feedback",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": "The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        },
        {
          "name": "type",
          "schema": "string",
          "description": "Specify a value to get the response for the corresponding meeting type. The value of this field can be one of the following:<br> <br>`past` - Meeting that already occurred in the specified date range.<br>`pastOne` - Past meetings that were attended by only one user. <br>`live` - Live meetings.<br><br>\n\nIf you do not provide this field, the default value will be `live` and thus, the API will only query responses for live meetings."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/metrics/meetings/{meetingId}/participants/sharing",
      "method": "dashboardMeetingParticipantShare",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get sharing/recording details",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": "The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        },
        {
          "name": "type",
          "schema": "string",
          "description": "The meeting types: <br>`past` - Past meetings.<br>`live` - Live Meetings."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/metrics/meetings/{meetingId}/participants/{participantId}/qos",
      "method": "dashboardMeetingParticipantQos",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get meeting participant QoS",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": "The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        },
        {
          "name": "participantId",
          "schema": "string",
          "required": true,
          "description": "Participant ID."
        },
        {
          "name": "type",
          "schema": "string",
          "description": "The meeting types: <br>`past` - Past meetings.<br>`live` - Live Meetings."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Participant QOS."
        }
      ]
    },
    {
      "url": "/metrics/webinars",
      "method": "dashboardWebinars",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "List webinars",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": "The webinar type."
        },
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once."
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": "End date."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/metrics/webinars/{webinarId}",
      "method": "dashboardWebinarDetail",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get webinar details",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "string",
          "required": true,
          "description": "The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        },
        {
          "name": "type",
          "schema": "string",
          "description": "The webinar type."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Webinar metric details."
        }
      ]
    },
    {
      "url": "/metrics/webinars/{webinarId}/participants",
      "method": "dashboardWebinarParticipants",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get webinar participants",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "string",
          "required": true,
          "description": "The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        },
        {
          "name": "type",
          "schema": "string",
          "description": "The webinar type."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "include_fields",
          "schema": "string",
          "description": "Provide 'registrant_id' as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [webinar registrant](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarregistrants).<br>\n\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/metrics/webinars/{webinarId}/participants/qos",
      "method": "dashboardWebinarParticipantsQos",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "List webinar participant QoS",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "string",
          "required": true,
          "description": "The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        },
        {
          "name": "type",
          "schema": "string",
          "description": "The webinar type."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of items returned per page."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Participant QOS list."
        }
      ]
    },
    {
      "url": "/metrics/webinars/{webinarId}/participants/satisfaction",
      "method": "participantWebinarFeedback",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get post webinar feedback",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": "Specify a value to get the response for the corresponding meeting type. The value of this field can be one of the following:<br> <br>`past` - Meeting that already occurred in the specified date range.<br>`pastOne` - Past meetings that were attended by only one user. <br>`live` - Live meetings.<br><br>\n\nIf you do not provide this field, the default value will be `live` and thus, the API will only query responses for live meetings."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "webinarId",
          "schema": "string",
          "required": true,
          "description": "The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/metrics/webinars/{webinarId}/participants/sharing",
      "method": "dashboardWebinarParticipantShare",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get sharing/recording details",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "string",
          "required": true,
          "description": "The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        },
        {
          "name": "type",
          "schema": "string",
          "description": "The webinar type."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/metrics/webinars/{webinarId}/participants/{participantId}/qos",
      "method": "dashboardWebinarParticipantQos",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get webinar participant QoS",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "string",
          "required": true,
          "description": "The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        },
        {
          "name": "participantId",
          "schema": "string",
          "required": true,
          "description": "Participant ID."
        },
        {
          "name": "type",
          "schema": "string",
          "description": "The webinar type."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Participant QOS."
        }
      ]
    },
    {
      "url": "/metrics/zoomrooms",
      "method": "dashboardZoomRooms",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "List Zoom Rooms",
      "parameters": [
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "page_number",
          "schema": "integer",
          "description": "The page number of the current page in the returned records."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Zoom Room List"
        }
      ]
    },
    {
      "url": "/metrics/zoomrooms/issues",
      "method": "dashboardZoomRoomIssue",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get top 25 issues of Zoom Rooms",
      "parameters": [
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once."
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": "End date."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/metrics/zoomrooms/{zoomroomId}",
      "method": "dashboardZoomRoom",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get Zoom Rooms details",
      "parameters": [
        {
          "name": "zoomroomId",
          "schema": "string",
          "required": true,
          "description": "The Zoom room ID."
        },
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once."
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": "End date."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/past_meetings/{meetingId}/files",
      "method": "listPastMeetingFiles",
      "httpMethod": "get",
      "tag": "Deprecated API Endpoints",
      "description": "List past meeting's files",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/past_meetings/{meetingId}/instances",
      "method": "pastMeetings",
      "httpMethod": "get",
      "tag": "Meetings",
      "description": "List ended meeting instances",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "integer",
          "required": true,
          "description": "The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of Meetings"
        }
      ]
    },
    {
      "url": "/past_meetings/{meetingId}/polls",
      "method": "listPastMeetingPolls",
      "httpMethod": "get",
      "tag": "Meetings",
      "description": "List past meeting's poll results",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": "The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/past_meetings/{meetingUUID}",
      "method": "pastMeetingDetails",
      "httpMethod": "get",
      "tag": "Meetings",
      "description": "Get past meeting details",
      "parameters": [
        {
          "name": "meetingUUID",
          "schema": "string",
          "required": true,
          "description": "The meeting UUID. Each meeting instance will generate its own Meeting UUID (i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for other API calls if the UUID begins with a '/'or contains '//' in it."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/past_meetings/{meetingUUID}/participants",
      "method": "pastMeetingParticipants",
      "httpMethod": "get",
      "tag": "Meetings",
      "description": "Get past meeting participants",
      "parameters": [
        {
          "name": "meetingUUID",
          "schema": "string",
          "required": true,
          "description": "The meeting UUID. Each meeting instance will generate its own Meeting UUID (i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for other API calls if the UUID begins with a '/'or contains '//' in it."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/past_webinars/{WebinarUUID}/absentees",
      "method": "webinarAbsentees",
      "httpMethod": "get",
      "tag": "Webinars",
      "description": "Get webinar absentees",
      "parameters": [
        {
          "name": "occurrence_id",
          "schema": "string",
          "description": "The meeting occurrence ID."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "WebinarUUID",
          "schema": "string",
          "required": true,
          "description": "The Webinar UUID. Each Webinar instance will generate its own Webinar UUID (i.e., after a Webinar ends, a new UUID will be generated for the next instance of the Webinar). Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of users."
        }
      ]
    },
    {
      "url": "/past_webinars/{webinarId}/files",
      "method": "listPastWebinarFiles",
      "httpMethod": "get",
      "tag": "Deprecated API Endpoints",
      "description": "List past webinar files",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/past_webinars/{webinarId}/instances",
      "method": "pastWebinars",
      "httpMethod": "get",
      "tag": "Webinars",
      "description": "List past webinar instances",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID in \"**long**\" format(represented as int64 data type in JSON). "
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of webinars."
        }
      ]
    },
    {
      "url": "/past_webinars/{webinarId}/participants",
      "method": "listWebinarParticipants",
      "httpMethod": "get",
      "tag": "Webinars",
      "description": "List webinar participants",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the webinar. You can retrieve the value of this field by calling the [list webinars](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinars) API."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/past_webinars/{webinarId}/polls",
      "method": "listPastWebinarPollResults",
      "httpMethod": "get",
      "tag": "Webinars",
      "description": "List past webinar poll results",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "string",
          "required": true,
          "description": "The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/past_webinars/{webinarId}/qa",
      "method": "listPastWebinarQa",
      "httpMethod": "get",
      "tag": "Webinars",
      "description": "List Q&A of past webinar",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "string",
          "required": true,
          "description": "The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/auto_receptionists",
      "method": "addAutoReceptionist",
      "httpMethod": "post",
      "tag": "Phone Auto Receptionists",
      "description": "Add an auto receptionist",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/auto_receptionists/{autoReceptionistId}",
      "method": "updateAutoReceptionist",
      "httpMethod": "patch",
      "tag": "Phone Auto Receptionists",
      "description": "Update auto receptionist details",
      "parameters": [
        {
          "name": "autoReceptionistId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Auto Receptionist. It can be retrieved from the [List Sites API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites)."
        },
        {
          "name": "extension_number",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/auto_receptionists/{autoReceptionistId}/phone_numbers",
      "method": "unassignAllPhoneNumsAutoReceptionist",
      "httpMethod": "delete",
      "tag": "Phone Auto Receptionists",
      "description": "Unassign all phone numbers",
      "parameters": [],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/auto_receptionists/{autoReceptionistId}/phone_numbers",
      "method": "assignPhoneNumbersAutoReceptionist",
      "httpMethod": "post",
      "tag": "Phone Auto Receptionists",
      "description": "Assign phone numbers",
      "parameters": [
        {
          "name": "autoReceptionistId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Auto Receptionist. It can be retrieved from the [List Sites API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites)."
        },
        {
          "name": "phone_numbers",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/auto_receptionists/{autoReceptionistId}/phone_numbers/{phoneNumberId}",
      "method": "unassignAPhoneNumAutoReceptionist",
      "httpMethod": "delete",
      "tag": "Phone Auto Receptionists",
      "description": "Unassign a phone number",
      "parameters": [
        {
          "name": "autoReceptionistId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the auto receptionist. This can be retrieved from the List Phone Sites API."
        },
        {
          "name": "phoneNumberId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the phone number or provide the actual phone number in e164 format (example: +19995550123)."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/blocked_list",
      "method": "listBlockedList",
      "httpMethod": "get",
      "tag": "Phone Blocked List",
      "description": "List blocked lists",
      "parameters": [
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The total number of records returned from a single API call."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/blocked_list",
      "method": "addAnumberToBlockedList",
      "httpMethod": "post",
      "tag": "Phone Blocked List",
      "description": "Create a blocked list",
      "parameters": [
        {
          "name": "block_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "comment",
          "schema": "string",
          "description": ""
        },
        {
          "name": "match_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phone_number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/blocked_list/{blockedListId}",
      "method": "deleteABlockedList",
      "httpMethod": "delete",
      "tag": "Phone Blocked List",
      "description": "Delete a blocked list",
      "parameters": [
        {
          "name": "blockedListId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the blocked list. This can be retrieved from the List Blocked List API."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/blocked_list/{blockedListId}",
      "method": "getABlockedList",
      "httpMethod": "get",
      "tag": "Phone Blocked List",
      "description": "Get blocked list details",
      "parameters": [
        {
          "name": "blockedListId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the blocked list."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/blocked_list/{blockedListId}",
      "method": "updateBlockedList",
      "httpMethod": "patch",
      "tag": "Phone Blocked List",
      "description": "Update a blocked list",
      "parameters": [
        {
          "name": "blockedListId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the blocked list."
        },
        {
          "name": "block_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "comment",
          "schema": "string",
          "description": ""
        },
        {
          "name": "match_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phone_number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/byoc_numbers",
      "method": "addByocNumber",
      "httpMethod": "post",
      "tag": "Phone",
      "description": "Add BYOC phone numbers",
      "parameters": [
        {
          "name": "carrier",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "phone_numbers",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/call_logs",
      "method": "accountCallLogs",
      "httpMethod": "get",
      "tag": "Phone",
      "description": "Get account's call logs",
      "parameters": [
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "from",
          "schema": "string",
          "description": "Start date from which you would like to get the call logs. The start date should be within past six months. <br>\n\nThe API only returns data pertaining to a month. Thus, the date range(defined using \"from\" and \"to\" fields) for which the call logs are to be returned must not exceed a month."
        },
        {
          "name": "to",
          "schema": "string",
          "description": "The end date upto which you would like to get the call logs for. The end date should be within past six months."
        },
        {
          "name": "type",
          "schema": "string",
          "description": "The type of the call logs. The value can be either \"all\" or \"missed\"."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "path",
          "schema": "string",
          "description": "Filter the API response by [path](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-and-identifying-logs#h_646b46c6-0623-4ab1-8b8b-ea5b8bcef679) of the call. The value of this field can be one of the following: `voiceMail`, `message`, `forward`, `extension`, `callQueue`, `ivrMenu`, `companyDirectory`, `autoReceptionist`, `contactCenter`, `disconnected`, `commonAreaPhone`,\n`pstn`, `transfer`, `sharedLines`, `sharedLineGroup`, `tollFreeBilling`, `meetingService`, `parkPickup`,\n`parkTimeout`, `monitor`, `takeover`, `sipGroup`"
        },
        {
          "name": "time_type",
          "schema": "string",
          "description": "Enables you to sort call logs by start or end time. Choose the sort time value. Values include `startTime` or `endTime`."
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites). Use this query parameter if you have enabled multiple sites and would like to filter the response of this API call by call logs of a specific phone site."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Account Call Logs"
        }
      ]
    },
    {
      "url": "/phone/call_queues",
      "method": "listCallQueues",
      "httpMethod": "get",
      "tag": "Phone Call Queues",
      "description": "List call queues",
      "parameters": [
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned from a single API call."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/call_queues",
      "method": "createCallQueue",
      "httpMethod": "post",
      "tag": "Phone Call Queues",
      "description": "Create a call queue",
      "parameters": [
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "extension_number",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "members",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/call_queues/{callQueueId}",
      "method": "deleteACallQueue",
      "httpMethod": "delete",
      "tag": "Phone Call Queues",
      "description": "Delete a call queue",
      "parameters": [
        {
          "name": "callQueueId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the call queue."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/call_queues/{callQueueId}",
      "method": "getACallQueue",
      "httpMethod": "get",
      "tag": "Phone Call Queues",
      "description": "Get call queue details",
      "parameters": [
        {
          "name": "callQueueId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Call Queue. This can be retrieved from [List Call Queues API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-call-queues/listcallqueues)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/call_queues/{callQueueId}",
      "method": "updateCallQueue",
      "httpMethod": "patch",
      "tag": "Phone Call Queues",
      "description": "Update call queue details",
      "parameters": [
        {
          "name": "callQueueId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Call Queue."
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "extension_number",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/call_queues/{callQueueId}/manager",
      "method": "changeCallQueueManager",
      "httpMethod": "put",
      "tag": "Phone Call Queues",
      "description": "Change call queue manager",
      "parameters": [
        {
          "name": "callQueueId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Call Queue."
        },
        {
          "name": "member_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/call_queues/{callQueueId}/members",
      "method": "unassignAllMembers",
      "httpMethod": "delete",
      "tag": "Phone Call Queues",
      "description": "Unassign all members",
      "parameters": [
        {
          "name": "callQueueId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/call_queues/{callQueueId}/members",
      "method": "addMembersToCallQueue",
      "httpMethod": "post",
      "tag": "Phone Call Queues",
      "description": "Add members to a call queue",
      "parameters": [
        {
          "name": "callQueueId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Call Queue."
        },
        {
          "name": "members",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/call_queues/{callQueueId}/members/{memberId}",
      "method": "unassignMemberFromCallQueue",
      "httpMethod": "delete",
      "tag": "Phone Call Queues",
      "description": "Unassign a member",
      "parameters": [
        {
          "name": "callQueueId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Call Queue from which the member needs to be unassigned."
        },
        {
          "name": "memberId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the member who needs to be unassigned."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/call_queues/{callQueueId}/phone_numbers",
      "method": "unassignAPhoneNumCallQueue",
      "httpMethod": "delete",
      "tag": "Phone Call Queues",
      "description": "Unassign all phone numbers",
      "parameters": [
        {
          "name": "callQueueId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Call Queue. This can be retrieved from List Call Queues API."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/call_queues/{callQueueId}/phone_numbers",
      "method": "assignPhoneToCallQueue",
      "httpMethod": "post",
      "tag": "Phone Call Queues",
      "description": "Assign numbers to a call queue",
      "parameters": [
        {
          "name": "callQueueId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Call Queue."
        },
        {
          "name": "phone_numbers",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/call_queues/{callQueueId}/phone_numbers/{phoneNumberId}",
      "method": "unAssignPhoneNumCallQueue",
      "httpMethod": "delete",
      "tag": "Phone Call Queues",
      "description": "Unassign a phone number",
      "parameters": [
        {
          "name": "callQueueId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Call Queue. This can be retrieved from the List Call Queues API."
        },
        {
          "name": "phoneNumberId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Phone Number. "
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/call_queues/{callQueueId}/recordings",
      "method": "getCallQueueRecordings",
      "httpMethod": "get",
      "tag": "Phone Call Queues",
      "description": "Get call queue recordings",
      "parameters": [
        {
          "name": "callQueueId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Call Queue."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "from",
          "schema": "string",
          "description": "Start date (within a 6 month range)."
        },
        {
          "name": "to",
          "schema": "string",
          "description": "End date (within a 6 month range)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/calling_plans",
      "method": "listCallingPlans",
      "httpMethod": "get",
      "tag": "Phone",
      "description": "List calling plans",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/common_area_phones",
      "method": "listCommonAreaPhones",
      "httpMethod": "get",
      "tag": "Common Area Phones",
      "description": "List common area phones",
      "parameters": [
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The total number of records returned from a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/common_area_phones",
      "method": "addCommonAreaPhone",
      "httpMethod": "post",
      "tag": "Common Area Phones",
      "description": "Add a common area phone",
      "parameters": [
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "display_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "extension_number",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "mac_address",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "model",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "time_zone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/common_area_phones/{commonAreaPhoneId}",
      "method": "deleteCommonAreaPhone",
      "httpMethod": "delete",
      "tag": "Common Area Phones",
      "description": "Delete a common area phone",
      "parameters": [
        {
          "name": "commonAreaPhoneId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the common area phone."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/common_area_phones/{commonAreaPhoneId}",
      "method": "getACommonAreaPhone",
      "httpMethod": "get",
      "tag": "Common Area Phones",
      "description": "Get common area phone details",
      "parameters": [
        {
          "name": "commonAreaPhoneId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Common Area Phone. Use the unique identifier or the Mac address of the common area phone. The Mac address can be hyphenated (00-04-f2-5e-ec-3c) or not hyphenated (0004f25eec3c). You can retrieved this from the [List Common Area Phones API](https://marketplace.zoom.us/docs/api-reference/zoom-api/common-area-phones/listcommonareaphones)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/common_area_phones/{commonAreaPhoneId}",
      "method": "updateCommonAreaPhone",
      "httpMethod": "patch",
      "tag": "Common Area Phones",
      "description": "Update common area phone",
      "parameters": [
        {
          "name": "display_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "extension_number",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "mac_address",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/company_number",
      "method": "changeMainCompanyNumber",
      "httpMethod": "put",
      "tag": "Phone",
      "description": "Change main company number",
      "parameters": [
        {
          "name": "phone_number",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/devices",
      "method": "listPhoneDevices",
      "httpMethod": "get",
      "tag": "Phone Devices",
      "description": "List devices",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "State of the device. The value should be either `assigned` to list devices that have been assigned to user(s) or `unassigned` to list devices that have not yet been assigned to any user in the Zoom account."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/devices",
      "method": "addPhoneDevice",
      "httpMethod": "post",
      "tag": "Phone Devices",
      "description": "Add a device",
      "parameters": [
        {
          "name": "assigned_to",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "display_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mac_address",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "model",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/devices/{deviceId}",
      "method": "deleteADevice",
      "httpMethod": "delete",
      "tag": "Phone Devices",
      "description": "Delete a device",
      "parameters": [
        {
          "name": "deviceId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the device."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/devices/{deviceId}",
      "method": "getADevice",
      "httpMethod": "get",
      "tag": "Phone Devices",
      "description": "Get device details",
      "parameters": [
        {
          "name": "deviceId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the device."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/devices/{deviceId}",
      "method": "updateADevice",
      "httpMethod": "patch",
      "tag": "Phone Devices",
      "description": "Update a device",
      "parameters": [
        {
          "name": "deviceId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Device."
        },
        {
          "name": "assigned_to",
          "schema": "string",
          "description": ""
        },
        {
          "name": "display_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac_address",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/metrics/call_logs",
      "method": "listCallLogsMetrics",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "List call logs",
      "parameters": [
        {
          "name": "from",
          "schema": "string",
          "description": "Start date for the report in `yyyy-mm-dd` format. Specify a 30 day range using the `from` and `to` parameters as the response provides a maximum of a month worth of data per API request."
        },
        {
          "name": "to",
          "schema": "string",
          "description": "End date for the report in `yyyy-mm-dd` format."
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites). Use this query parameter if you have enabled multiple sites and would like to filter the response of this API call by call logs of a specific phone site."
        },
        {
          "name": "quality_type",
          "schema": "string",
          "description": "Filter call logs by voice quality. Zoom uses MOS of 3.5 as a general baseline to categorize calls by call quality. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality. <br><br>The value of this field can be one of the following:<br>\n* `good`: Retrieve call logs of the call(s) with good quality of voice.<br>\n* `bad`: Retrieve call logs of the call(s) with good quality of voice.<br>\n* `all`: Retrieve all call logs without filtering by voice quality. \n\n\n\n"
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/metrics/call_logs/{callId}/qos",
      "method": "getCallQoS",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get call QoS",
      "parameters": [
        {
          "name": "callId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the call."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/metrics/call_logs/{call_id}",
      "method": "getCallLogMetricsDetails",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get call details from call log",
      "parameters": [
        {
          "name": "call_id",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the phone call. The value of this field can be retrieved from [List Call Logs]() API."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/numbers",
      "method": "listAccountPhoneNumbers",
      "httpMethod": "get",
      "tag": "Phone",
      "description": "List phone numbers",
      "parameters": [
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "type",
          "schema": "string",
          "description": "Query response by number assignment. The value can be one of the following:\n<br>\n`assigned`: The number has been assigned to either a user, a call queue, an auto-receptionist or a common area phone in an account. <br>`unassigned`: The number is not assigned to anyone.<br>\n`all`: Include both assigned and unassigned numbers in the response.<br>\n`byoc`: Include Bring Your Own Carrier (BYOC) numbers only in the response."
        },
        {
          "name": "extension_type",
          "schema": "string",
          "description": "The type of assignee to whom the number is assigned. The value can be one of the following:<br>\n`user`<br> `callQueue`<br> `autoReceptionist`<br>\n`commonAreaPhone`"
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "number_type",
          "schema": "string",
          "description": "The type of phone number. The value can be either `toll` or `tollfree`."
        },
        {
          "name": "pending_numbers",
          "schema": "boolean",
          "description": "Include or exclude pending numbers in the response. The value can be either `true` or `false`."
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": "Unique identifier of the site. Use this query parameter if you have enabled multiple sites and would like to filter the response of this API call by a specific phone site. See [Managing multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) or [Adding a site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15) for details."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/numbers/{numberId}",
      "method": "getPhoneNumberDetails",
      "httpMethod": "get",
      "tag": "Phone",
      "description": "Get phone number details",
      "parameters": [
        {
          "name": "numberId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Phone Number. This can be retrieved from the List Phone Numbers API."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/numbers/{numberId}",
      "method": "updatePhoneNumberDetails",
      "httpMethod": "patch",
      "tag": "Phone",
      "description": "Update phone number details",
      "parameters": [
        {
          "name": "numberId",
          "schema": "string",
          "required": true,
          "description": "Phone number ID."
        },
        {
          "name": "capability",
          "schema": "array",
          "description": ""
        },
        {
          "name": "display_name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/recordings",
      "method": "getPhoneRecordings",
      "httpMethod": "get",
      "tag": "Phone",
      "description": "Get call recordings",
      "parameters": [
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call. The default is **30**, and the maximum is **100**."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The current page number of returned records."
        },
        {
          "name": "from",
          "schema": "string",
          "description": "Start date and time in **yyyy-mm-dd** format or **yyyy-MM-dd’T’HH:mm:ss’Z’** format. The date range defined by the from and to parameters should only be one month as the report includes only one month worth of data at once.\n"
        },
        {
          "name": "to",
          "schema": "string",
          "description": "End date and time in **yyyy-mm-dd** format or **yyyy-MM-dd’T’HH:mm:ss’Z’** format, the same formats supported by the `from` parameter.\n\n"
        },
        {
          "name": "owner_type",
          "schema": "string",
          "description": "The owner type. The allowed values are null, `user`, or `callQueue`. The default is null. If null, returns all owner types.\n"
        },
        {
          "name": "recording_type",
          "schema": "string",
          "description": "The recording type. The allowed values are null, `OnDemand`, or `Automatic`. The default is null. If null, returns all recording types.\n"
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": "The site ID. The default is `All sites`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/reports/operationlogs",
      "method": "getPsOperationLogs",
      "httpMethod": "get",
      "tag": "Phone Reports",
      "description": "Get operation logs report",
      "parameters": [
        {
          "name": "from",
          "schema": "string",
          "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report provides only one month worth of data per API request."
        },
        {
          "name": "to",
          "schema": "string",
          "description": "End date in 'yyyy-mm-dd' format."
        },
        {
          "name": "category_type",
          "schema": "string",
          "description": "Filter the response by the category of the action performed. By default, the value of this field is \"all\" and thus, the response will include log of all operations for the defined period.<br><br>To only include response for a specific category type, provide a value for `category_type` from this [table](http://marketplace.zoom.us/docs/phone-operation-categories )."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/setting_templates",
      "method": "listSettingTemplates",
      "httpMethod": "get",
      "tag": "Phone",
      "description": "List setting templates",
      "parameters": [
        {
          "name": "page_size",
          "schema": "integer",
          "description": "Number of records returns within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": "Unique identifier of the site. This field is required only if multiple sites have been enabled.  of the site. Required only when multiple sites are enabled. See [Managing multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) for details. If this is not provided, the response lists the account level setting templates."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/setting_templates",
      "method": "addSettingTemplate",
      "httpMethod": "post",
      "tag": "Phone",
      "description": "Add a setting template",
      "parameters": [
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/setting_templates/{templateId}",
      "method": "getSettingTemplate",
      "httpMethod": "get",
      "tag": "Phone",
      "description": "Get setting template details",
      "parameters": [
        {
          "name": "templateId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the template."
        },
        {
          "name": "custom_query_fields",
          "schema": "string",
          "description": "Provide the name of the field to use to filter the response. For example, if you provide \"description\" as the value of the field, you will get a response similar to the following: {“description”: “template description”}."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/setting_templates/{templateId}",
      "method": "updateSettingTemplate",
      "httpMethod": "patch",
      "tag": "Phone",
      "description": "Update a setting template",
      "parameters": [
        {
          "name": "templateId",
          "schema": "string",
          "required": true,
          "description": "The Template ID."
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "policy",
          "schema": "object",
          "description": ""
        },
        {
          "name": "profile",
          "schema": "object",
          "description": ""
        },
        {
          "name": "user_settings",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/shared_line_groups",
      "method": "listSharedLineGroups",
      "httpMethod": "get",
      "tag": "Phone Shared Line Groups",
      "description": "List shared line groups",
      "parameters": [
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/shared_line_groups",
      "method": "createASharedLineGroup",
      "httpMethod": "post",
      "tag": "Phone Shared Line Groups",
      "description": "Create a shared line group",
      "parameters": [
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "display_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "extension_number",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/shared_line_groups/{sharedLineGroupId}",
      "method": "deleteASharedLineGroup",
      "httpMethod": "delete",
      "tag": "Phone Shared Line Groups",
      "description": "Delete a shared line group",
      "parameters": [
        {
          "name": "sharedLineGroupId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the shared line group that you would like to delete."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/shared_line_groups/{sharedLineGroupId}",
      "method": "getASharedLineGroup",
      "httpMethod": "get",
      "tag": "Phone Shared Line Groups",
      "description": "Get a shared line group",
      "parameters": [
        {
          "name": "sharedLineGroupId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Shared Line Group."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/shared_line_groups/{sharedLineGroupId}",
      "method": "updateASharedLineGroup",
      "httpMethod": "patch",
      "tag": "Phone Shared Line Groups",
      "description": "Update a shared line group",
      "parameters": [
        {
          "name": "sharedLineGroupId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the shared line group that is to be updated."
        },
        {
          "name": "display_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "extension_number",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "primary_number",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/shared_line_groups/{sharedLineGroupId}/members",
      "method": "deleteMembersOfSlg",
      "httpMethod": "delete",
      "tag": "Phone Shared Line Groups",
      "description": "Unassign members of a shared line group",
      "parameters": [
        {
          "name": "sharedLineGroupId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the Shared Line Group that you would like to delete."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/shared_line_groups/{sharedLineGroupId}/members",
      "method": "addMembersToSharedLineGroup",
      "httpMethod": "post",
      "tag": "Phone Shared Line Groups",
      "description": "Add members to a shared line group",
      "parameters": [
        {
          "name": "sharedLineGroupId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the shared line group."
        },
        {
          "name": "members",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/shared_line_groups/{sharedLineGroupId}/members/{memberId}",
      "method": "deleteAMemberSlg",
      "httpMethod": "delete",
      "tag": "Phone Shared Line Groups",
      "description": "Unassign a member from a shared line group",
      "parameters": [
        {
          "name": "sharedLineGroupId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the shared line group from which you would like to remove a member."
        },
        {
          "name": "memberId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the member who is to be removed."
        }
      ],
      "responses": []
    },
    {
      "url": "/phone/shared_line_groups/{sharedLineGroupId}/phone_numbers",
      "method": "assignPhoneNumbersSlg",
      "httpMethod": "post",
      "tag": "Phone Shared Line Groups",
      "description": "Assign phone numbers",
      "parameters": [
        {
          "name": "sharedLineGroupId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Shared Line Group."
        },
        {
          "name": "phone_numbers",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/phone/shared_line_groups/{sharedLineGroupId}/phone_numbers/{phoneNumberId}",
      "method": "deleteAPhoneNumberSlg",
      "httpMethod": "delete",
      "tag": "Phone Shared Line Groups",
      "description": "Unassign a phone number",
      "parameters": [
        {
          "name": "sharedLineGroupId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the shared line group from which you would like to unassign a phone number."
        },
        {
          "name": "phoneNumberId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the phone number which is to be unassigned. This can be retrieved from Get a Shared Line Group API."
        }
      ],
      "responses": []
    },
    {
      "url": "/phone/sip_trunk/trunks",
      "method": "listByocsipTrunk",
      "httpMethod": "get",
      "tag": "Phone",
      "description": "List BYOC SIP trunks",
      "parameters": [
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/sites",
      "method": "listPhoneSites",
      "httpMethod": "get",
      "tag": "Phone Site",
      "description": "List phone sites",
      "parameters": [
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/sites",
      "method": "createPhoneSite",
      "httpMethod": "post",
      "tag": "Phone Site",
      "description": "Create a phone site",
      "parameters": [
        {
          "name": "auto_receptionist_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "default_emergency_address",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "short_extension",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "site_code",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/sites/{siteId}",
      "method": "deletePhoneSite",
      "httpMethod": "delete",
      "tag": "Phone Site",
      "description": "Delete a phone site",
      "parameters": [
        {
          "name": "siteId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Site."
        },
        {
          "name": "transfer_site_id",
          "schema": "string",
          "required": true,
          "description": "The Site ID of another site where the assets of the current site (users, numbers and phones) can be transferred to."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/sites/{siteId}",
      "method": "getASite",
      "httpMethod": "get",
      "tag": "Phone Site",
      "description": "Get phone site details",
      "parameters": [
        {
          "name": "siteId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Site."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/sites/{siteId}",
      "method": "updateSiteDetails",
      "httpMethod": "patch",
      "tag": "Phone Site",
      "description": "Update phone site details",
      "parameters": [
        {
          "name": "siteId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Site."
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_code",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/users",
      "method": "listPhoneUsers",
      "httpMethod": "get",
      "tag": "Phone",
      "description": "List phone users",
      "parameters": [
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned from a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": "Unique Identifier of the site. This can be retrieved from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites) API."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/users/{userId}",
      "method": "phoneUser",
      "httpMethod": "get",
      "tag": "Phone",
      "description": "Get user's profile",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Zoom User Profile"
        }
      ]
    },
    {
      "url": "/phone/users/{userId}",
      "method": "updateUserProfile",
      "httpMethod": "patch",
      "tag": "Phone",
      "description": "Update user's profile",
      "parameters": [
        {
          "name": "extension_number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/users/{userId}/call_logs",
      "method": "phoneUserCallLogs",
      "httpMethod": "get",
      "tag": "Phone",
      "description": "Get user's call logs",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once."
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": "End date."
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "phone_number",
          "schema": "string",
          "description": "Filter API responses to include call logs of only the phone number defined in this field."
        },
        {
          "name": "time_type",
          "schema": "string",
          "description": "Enables you to sort call logs by start or end time. Choose the sort time value. Values include `startTime` or `endTime`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Phone User Call Logs"
        }
      ]
    },
    {
      "url": "/phone/users/{userId}/call_logs/{callLogId}",
      "method": "deleteCallLog",
      "httpMethod": "delete",
      "tag": "Phone",
      "description": "Delete a user's call log",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user."
        },
        {
          "name": "callLogId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the call log. The value for this field can be retrieved from [account's call logs](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone/accountcalllogs) or [user's call logs](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone/phoneusercalllogs)."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/users/{userId}/calling_plans",
      "method": "assignCallingPlan",
      "httpMethod": "post",
      "tag": "Phone",
      "description": "Assign calling plan to a user",
      "parameters": [
        {
          "name": "calling_plans",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/users/{userId}/calling_plans/{type}",
      "method": "unassignCallingPlan",
      "httpMethod": "delete",
      "tag": "Phone",
      "description": "Unassign user's calling plan",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "The [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan that was assigned to user. (e.g: The value of type would be \"200\" for Unlimited US/Canada calling plan.)\n"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/users/{userId}/phone_numbers",
      "method": "assignPhoneNumber",
      "httpMethod": "post",
      "tag": "Phone",
      "description": "Assign phone number to user",
      "parameters": [
        {
          "name": "phone_numbers",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/users/{userId}/phone_numbers/{phoneNumberId}",
      "method": "unassignPhoneNumber",
      "httpMethod": "delete",
      "tag": "Phone",
      "description": "Unassign phone number",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "Provide either userId or email address of the user."
        },
        {
          "name": "phoneNumberId",
          "schema": "string",
          "required": true,
          "description": "Provide either phone number or phoneNumberId of the user. "
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/users/{userId}/recordings",
      "method": "phoneUserRecordings",
      "httpMethod": "get",
      "tag": "Phone",
      "description": "Get user's recordings",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "from",
          "schema": "string",
          "description": "Start date for the query in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the response includes only one month worth of recording data. The month defined should fall within the last six months."
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": "End date."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Phone User Recordings"
        }
      ]
    },
    {
      "url": "/phone/users/{userId}/settings",
      "method": "phoneUserSettings",
      "httpMethod": "get",
      "tag": "Phone",
      "description": "Get user's settings",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Phone User Setting"
        }
      ]
    },
    {
      "url": "/phone/users/{userId}/settings/{settingType}",
      "method": "deleteUserSetting",
      "httpMethod": "delete",
      "tag": "Phone",
      "description": "Remove shared access",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the user."
        },
        {
          "name": "settingType",
          "schema": "string",
          "required": true,
          "description": "Corresponds to the setting item you wish to remove. Allowed values: `voice_mail`"
        },
        {
          "name": "shared_id",
          "schema": "string",
          "required": true,
          "description": "Required only for voicemail setting type."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/users/{userId}/settings/{settingType}",
      "method": "updateUserSetting",
      "httpMethod": "patch",
      "tag": "Phone",
      "description": "Update shared access",
      "parameters": [
        {
          "name": "settingType",
          "schema": "string",
          "required": true,
          "description": "Corresponds to the setting item you wish to modify. Allowed values: `voice_mail`"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the user."
        },
        {
          "name": "voice_mail",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/users/{userId}/settings/{settingType}",
      "method": "addUserSetting",
      "httpMethod": "post",
      "tag": "Phone",
      "description": "Set up shared access",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the user."
        },
        {
          "name": "settingType",
          "schema": "string",
          "required": true,
          "description": "Corresponds to the setting item you wish to modify. Allowed values: `voice_mail`"
        },
        {
          "name": "voice_mail",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone/users/{userId}/voice_mails",
      "method": "phoneUserVoiceMails",
      "httpMethod": "get",
      "tag": "Phone",
      "description": "Get user's voicemails",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "status",
          "schema": "string",
          "description": "Status of the voice mail"
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "from",
          "schema": "string",
          "description": "Start date for the query in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the response includes only one month worth of voicemail data. The month defined should fall within the last six months."
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": "End date."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Phone User Voice Mails"
        }
      ]
    },
    {
      "url": "/phone/voice_mails/{voicemailId}",
      "method": "deleteVoicemail",
      "httpMethod": "delete",
      "tag": "Phone",
      "description": "Delete a voicemail",
      "parameters": [
        {
          "name": "voicemailId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the voicemail. Retrieve the value for this field by calling the [Get voicemails](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone/phoneuservoicemails) API."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/activities",
      "method": "reportSignInSignOutActivities",
      "httpMethod": "get",
      "tag": "Reports",
      "description": "Get sign In / sign out activity report",
      "parameters": [
        {
          "name": "from",
          "schema": "string",
          "description": "Start date for which you would like to view the activity logs report. Using the `from` and `to` parameters, specify a monthly date range for the report as the API only provides one month worth of data in one request. The specified date range should fall within the last six months."
        },
        {
          "name": "to",
          "schema": "string",
          "description": "End date up to which you would like to view the activity logs report."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records to be returned within a single API call"
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "Next page token is used to paginate through large result sets"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Report object"
        }
      ]
    },
    {
      "url": "/report/cloud_recording",
      "method": "reportCloudRecording",
      "httpMethod": "get",
      "tag": "Reports",
      "description": "Get cloud recording usage report",
      "parameters": [
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once."
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": "End date."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/daily",
      "method": "reportDaily",
      "httpMethod": "get",
      "tag": "Reports",
      "description": "Get daily usage report",
      "parameters": [
        {
          "name": "year",
          "schema": "integer",
          "description": "Year for this report"
        },
        {
          "name": "month",
          "schema": "integer",
          "description": "Month for this report"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/meetings/{meetingId}",
      "method": "reportMeetingDetails",
      "httpMethod": "get",
      "tag": "Reports",
      "description": "Get meeting detail reports",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": "The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/meetings/{meetingId}/participants",
      "method": "reportMeetingParticipants",
      "httpMethod": "get",
      "tag": "Reports",
      "description": "Get meeting participant reports",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": "The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "include_fields",
          "schema": "string",
          "description": "Provide `registrant_id` as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [meeting registrant](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingregistrants).<br>\n\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/meetings/{meetingId}/polls",
      "method": "reportMeetingPolls",
      "httpMethod": "get",
      "tag": "Reports",
      "description": "Get meeting poll reports",
      "parameters": [
        {
          "name": "meetingId",
          "schema": "string",
          "required": true,
          "description": "The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/operationlogs",
      "method": "reportOperationLogs",
      "httpMethod": "get",
      "tag": "Reports",
      "description": "Get operation logs report",
      "parameters": [
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once."
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": "End date."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "category_type",
          "schema": "string",
          "description": "**Optional**<br>\nFilter your response by a category type to see reports for a specific category.\nThe value for this field can be one of the following:<br> `all`<br>`user`<br>`user_settings`<br>`account`<br>`billing`<br>`im`<br>`recording`<br>`phone_contacts`<br>`webinar`<br>`sub_account`<br>`role`<br>`zoom_rooms`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/telephone",
      "method": "reportTelephone",
      "httpMethod": "get",
      "tag": "Reports",
      "description": "Get telephone reports",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": "Audio types:<br>`1` - Toll-free Call-in & Call-out.<br>`2` - Toll <br>\n`3` - SIP Connected Audio"
        },
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once."
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": "End date."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "page_number",
          "schema": "integer",
          "description": "\n**Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use \"next_page_token\" for pagination instead of this field.\n\nThe page number of the current page in the returned records."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/users",
      "method": "reportUsers",
      "httpMethod": "get",
      "tag": "Reports",
      "description": "Get active/inactive host reports",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": "Active or inactive hosts.<br>`active` - Active hosts. <br>`inactive` - Inactive hosts."
        },
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once."
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": "End date."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "page_number",
          "schema": "integer",
          "description": "The page number of the current page in the returned records."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/users/{userId}/meetings",
      "method": "reportMeetings",
      "httpMethod": "get",
      "tag": "Reports",
      "description": "Get meeting reports",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once."
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": "End date."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "type",
          "schema": "string",
          "description": "The meeting types: <br>`past` - Past meetings.<br>`pastOne` - Past one user meetings. "
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/webinars/{webinarId}",
      "method": "reportWebinarDetails",
      "httpMethod": "get",
      "tag": "Reports",
      "description": "Get webinar detail reports",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "string",
          "required": true,
          "description": "The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/webinars/{webinarId}/participants",
      "method": "reportWebinarParticipants",
      "httpMethod": "get",
      "tag": "Reports",
      "description": "Get webinar participant reports",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "string",
          "required": true,
          "description": "The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "include_fields",
          "schema": "string",
          "description": "Enter 'registrant_id' as the value for this field if you would like to see the registrant ID attribute included in the response of this API call. A registrant ID is a unique identifier of a [webinar registrant](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarregistrants).<br>\n\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/webinars/{webinarId}/polls",
      "method": "reportWebinarPolls",
      "httpMethod": "get",
      "tag": "Reports",
      "description": "Get webinar poll reports",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "string",
          "required": true,
          "description": "The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/webinars/{webinarId}/qa",
      "method": "reportWebinarQa",
      "httpMethod": "get",
      "tag": "Reports",
      "description": "Get webinar Q&A report",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "string",
          "required": true,
          "description": "The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/roles",
      "method": "roles",
      "httpMethod": "get",
      "tag": "Roles",
      "description": "List roles",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of Roles"
        }
      ]
    },
    {
      "url": "/roles",
      "method": "createRole",
      "httpMethod": "post",
      "tag": "Roles",
      "description": "Create a role",
      "parameters": [
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "privileges",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/roles/{roleId}",
      "method": "deleteRole",
      "httpMethod": "delete",
      "tag": "Roles",
      "description": "Delete a role",
      "parameters": [
        {
          "name": "roleId",
          "schema": "string",
          "required": true,
          "description": "Role Id."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/roles/{roleId}",
      "method": "getRoleInformation",
      "httpMethod": "get",
      "tag": "Roles",
      "description": "Get role information",
      "parameters": [
        {
          "name": "roleId",
          "schema": "string",
          "required": true,
          "description": "Role Id. "
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/roles/{roleId}",
      "method": "updateRole",
      "httpMethod": "patch",
      "tag": "Roles",
      "description": "Update role information",
      "parameters": [
        {
          "name": "roleId",
          "schema": "string",
          "required": true,
          "description": "Role Id"
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "privileges",
          "schema": "array",
          "description": ""
        },
        {
          "name": "sub_account_privileges",
          "schema": "object",
          "description": ""
        },
        {
          "name": "total_members",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/roles/{roleId}/members",
      "method": "roleMembers",
      "httpMethod": "get",
      "tag": "Roles",
      "description": "List members in a role",
      "parameters": [
        {
          "name": "roleId",
          "schema": "string",
          "required": true,
          "description": "The role ID"
        },
        {
          "name": "page_count",
          "schema": "string",
          "description": "The number of pages returned for this request."
        },
        {
          "name": "page_number",
          "schema": "integer",
          "description": "\n**Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use \"next_page_token\" for pagination instead of this field.\n\nThe page number of the current page in the returned records."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of a Role Members"
        }
      ]
    },
    {
      "url": "/roles/{roleId}/members",
      "method": "addRoleMembers",
      "httpMethod": "post",
      "tag": "Roles",
      "description": "Assign a role",
      "parameters": [
        {
          "name": "roleId",
          "schema": "string",
          "required": true,
          "description": "The role ID"
        },
        {
          "name": "members",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/roles/{roleId}/members/{memberId}",
      "method": "roleMemberDelete",
      "httpMethod": "delete",
      "tag": "Roles",
      "description": "Unassign a role",
      "parameters": [
        {
          "name": "roleId",
          "schema": "string",
          "required": true,
          "description": "The role ID"
        },
        {
          "name": "memberId",
          "schema": "string",
          "required": true,
          "description": "Member's ID"
        }
      ],
      "responses": []
    },
    {
      "url": "/rooms",
      "method": "listZoomRooms",
      "httpMethod": "get",
      "tag": "Rooms",
      "description": "List Zoom Rooms",
      "parameters": [
        {
          "name": "status",
          "schema": "string",
          "description": "The status of the Zoom Room."
        },
        {
          "name": "type",
          "schema": "string",
          "description": "Type of the Zoom Rooms."
        },
        {
          "name": "unassigned_rooms",
          "schema": "boolean",
          "description": "Use this query parameter with a value of `true` if you would like to see Zoom Rooms in your account that have not been assigned to anyone yet."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "location_id",
          "schema": "string",
          "description": "Parent location ID of the Zoom Room."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms",
      "method": "addARoom",
      "httpMethod": "post",
      "tag": "Rooms",
      "description": "Add a Zoom Room",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/account_profile",
      "method": "getZrAccountProfile",
      "httpMethod": "get",
      "tag": "Rooms Account",
      "description": "Get Zoom Room account profile",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/account_profile",
      "method": "updateZrAccProfile",
      "httpMethod": "patch",
      "tag": "Rooms Account",
      "description": "Update Zoom Room account profile",
      "parameters": [
        {
          "name": "basic",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/account_settings",
      "method": "getZrAccountSettings",
      "httpMethod": "get",
      "tag": "Rooms Account",
      "description": "Get Zoom Room account settings",
      "parameters": [
        {
          "name": "setting_type",
          "schema": "string",
          "required": true,
          "description": "The type of setting that you would like to retrieve.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>\n`meeting`: Meeting settings of the Zoom Rooms Account. <br>\n`signage`: View digital signage settings of the Zoom Rooms Account."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/account_settings",
      "method": "updateZoomRoomAccSettings",
      "httpMethod": "patch",
      "tag": "Rooms Account",
      "description": "Update Zoom Room account settings",
      "parameters": [
        {
          "name": "setting_type",
          "schema": "string",
          "required": true,
          "description": "The type of setting that you would like to update.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>\n`meeting`: Meeting settings of the Zoom Rooms Account.<br>\n`signage`: View digital signage settings of the Zoom Rooms Account."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/digital_signage",
      "method": "listDigitalSignageContent",
      "httpMethod": "get",
      "tag": "Rooms",
      "description": "List digital signage contents",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": "Specify the type of digital signane resource. The value can be one of the following:\n* `content`: Returns information about content files.\n* `folder`: Returns information about the folder where the content files are located."
        },
        {
          "name": "folder_id",
          "schema": "string",
          "description": "Unique identifier of the folder where the content is located. Provide this field if you would like to filter the response by contents that are only available in a specific folder."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/events",
      "method": "manageE911Signage",
      "httpMethod": "patch",
      "tag": "Rooms",
      "description": "Update E911 digital signage",
      "parameters": [],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/locations",
      "method": "listZrLocations",
      "httpMethod": "get",
      "tag": "Rooms Location",
      "description": "List Zoom Room locations",
      "parameters": [
        {
          "name": "parent_location_id",
          "schema": "string",
          "description": "A unique identifier of the parent location. For instance, if a Zoom Room is located in Floor 1 of Building A, the location of Building A will be the parent location of Floor 1. Use this parameter to filter the response by a specific location hierarchy level."
        },
        {
          "name": "type",
          "schema": "string",
          "description": "Use this field to filter the response by the type of location. The value can be one of the following:\n`country`, `states`, `city`, `campus`, `building`, `floor`. "
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/locations",
      "method": "addAzrLocation",
      "httpMethod": "post",
      "tag": "Rooms Location",
      "description": "Add a location",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "parent_location_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/locations/structure",
      "method": "getZrLocationStructure",
      "httpMethod": "get",
      "tag": "Rooms Location",
      "description": "Get Zoom Room location structure",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/locations/structure",
      "method": "updateZoomRoomsLocationStructure",
      "httpMethod": "patch",
      "tag": "Rooms Location",
      "description": "Update Zoom Rooms location structure",
      "parameters": [
        {
          "name": "structures",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/locations/{locationId}",
      "method": "getZrLocationProfile",
      "httpMethod": "get",
      "tag": "Rooms Location",
      "description": "Get Zoom Room location profile",
      "parameters": [
        {
          "name": "locationId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the location type. This can be retrieved using the [List Zoom Room Location API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) (Id property in the response)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/locations/{locationId}",
      "method": "updateZrLocationProfile",
      "httpMethod": "patch",
      "tag": "Rooms Location",
      "description": "Update Zoom Room location profile",
      "parameters": [
        {
          "name": "locationId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the location. This can be retrieved from the [List Zoom Room Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) API."
        },
        {
          "name": "basic",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/locations/{locationId}/location",
      "method": "changeParentLocation",
      "httpMethod": "put",
      "tag": "Rooms Location",
      "description": "Change the assigned parent location",
      "parameters": [
        {
          "name": "locationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "parent_location_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/locations/{locationId}/settings",
      "method": "getZrLocationSettings",
      "httpMethod": "get",
      "tag": "Rooms Location",
      "description": "Get location settings",
      "parameters": [
        {
          "name": "setting_type",
          "schema": "string",
          "required": true,
          "description": "The type of setting that you would like to retrieve.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>\n`meeting`: Meeting settings of the Zoom Rooms Account.<br>\n`signage`: Digital signage settings of the Zoom Rooms Account."
        },
        {
          "name": "locationId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the location type. This can be retrieved using the [List Zoom Room Location API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) (Id property in the response)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/locations/{locationId}/settings",
      "method": "updateZrLocationSettings",
      "httpMethod": "patch",
      "tag": "Rooms Location",
      "description": "Update location settings",
      "parameters": [
        {
          "name": "setting_type",
          "schema": "string",
          "required": true,
          "description": "The type of setting that you would like to update.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>\n`meeting`: Meeting settings of the Zoom Rooms Account.<br>\n`signage`: Digital signage settings."
        },
        {
          "name": "locationId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the location type. This can be retrieved using the [List Zoom Room Location API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) (Id property in the response)."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/{id}/events",
      "method": "checkInRooms",
      "httpMethod": "patch",
      "tag": "Rooms",
      "description": "Check-in or check-out of a Zoom Room",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "method",
          "schema": "string",
          "description": ""
        },
        {
          "name": "params",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/{roomId}",
      "method": "deleteAZoomRoom",
      "httpMethod": "delete",
      "tag": "Rooms",
      "description": "Delete a Zoom Room",
      "parameters": [
        {
          "name": "roomId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of a Zoom Room."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/{roomId}",
      "method": "getZrProfile",
      "httpMethod": "get",
      "tag": "Rooms",
      "description": "Get Zoom Room profile",
      "parameters": [
        {
          "name": "roomId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Zoom Room. This can be retrieved from the response of [List Zoom Rooms](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzoomrooms) API."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/{roomId}",
      "method": "updateRoomProfile",
      "httpMethod": "patch",
      "tag": "Rooms",
      "description": "Update a Zoom Room profile",
      "parameters": [
        {
          "name": "roomId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of a Zoom Room."
        },
        {
          "name": "basic",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/{roomId}/devices",
      "method": "listZrDevices",
      "httpMethod": "get",
      "tag": "Rooms",
      "description": "List Zoom Room devices",
      "parameters": [
        {
          "name": "roomId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Zoom Room. This can be retrieved from the response of [List Zoom Rooms](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzoomrooms) API."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/{roomId}/devices/{deviceId}/app_version",
      "method": "changeZoomRoomsAppVersion",
      "httpMethod": "put",
      "tag": "Rooms Devices",
      "description": "Change Zoom Rooms' app version",
      "parameters": [
        {
          "name": "roomId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Zoom Room."
        },
        {
          "name": "deviceId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Mac or the Windows device. The value of this field can be retrieved from the [List Zoom Room Devices API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzrdevices)."
        },
        {
          "name": "action",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/{roomId}/location",
      "method": "changeZrLocation",
      "httpMethod": "put",
      "tag": "Rooms",
      "description": "Change a Zoom Room's location",
      "parameters": [
        {
          "name": "roomId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Zoom Room."
        },
        {
          "name": "location_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/{roomId}/settings",
      "method": "getZrSettings",
      "httpMethod": "get",
      "tag": "Rooms",
      "description": "Get Zoom Room settings",
      "parameters": [
        {
          "name": "setting_type",
          "schema": "string",
          "required": true,
          "description": "The type of setting that you would like to retrieve.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>\n`meeting`: Meeting settings of the Zoom Rooms Account."
        },
        {
          "name": "roomId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the Zoom Room."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/{roomId}/settings",
      "method": "updateZrSettings",
      "httpMethod": "patch",
      "tag": "Rooms",
      "description": "Update Zoom Room settings",
      "parameters": [
        {
          "name": "roomId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the Zoom Room."
        },
        {
          "name": "setting_type",
          "schema": "string",
          "description": "The type of setting that you would like to update.<br> `alert`: Alert Settings applied on the Zoom Room.<br>\n`meeting`: Meeting settings of the Zoom Room.<br>\n`signage`: Digital signage settings applied on the Zoom Room."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/sip_phones",
      "method": "listSipPhones",
      "httpMethod": "get",
      "tag": "SIP Phone",
      "description": "List SIP phones",
      "parameters": [
        {
          "name": "page_number",
          "schema": "integer",
          "description": "\n**Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use \"next_page_token\" for pagination instead of this field.\n\nThe page number of the current page in the returned records."
        },
        {
          "name": "search_key",
          "schema": "string",
          "description": "User name or email address of a user. If this parameter is provided, only the SIP phone system integration enabled for that specific user will be returned. Otherwise, all SIP phones on an account will be returned."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sip_phones",
      "method": "createSipPhone",
      "httpMethod": "post",
      "tag": "SIP Phone",
      "description": "Enable SIP phone",
      "parameters": [
        {
          "name": "authorization_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "domain",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "proxy_server",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "proxy_server2",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "proxy_server3",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "register_server",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "register_server2",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "register_server3",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "registration_expire_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "transport_protocol",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transport_protocol2",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transport_protocol3",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "user_email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "user_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "voice_mail",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/sip_phones/{phoneId}",
      "method": "deleteSipPhone",
      "httpMethod": "delete",
      "tag": "SIP Phone",
      "description": "Delete SIP phone",
      "parameters": [
        {
          "name": "phoneId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the SIP Phone. It can be retrieved from the List SIP Phones API."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/sip_phones/{phoneId}",
      "method": "updateSipPhone",
      "httpMethod": "patch",
      "tag": "SIP Phone",
      "description": "Update SIP phone",
      "parameters": [
        {
          "name": "phoneId",
          "schema": "string",
          "required": true,
          "description": "Unique Identifier of the SIP Phone. This can be retrieved from the List SIP Phones API."
        },
        {
          "name": "authorization_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "domain",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "proxy_server",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "proxy_server2",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "proxy_server3",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "register_server",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "register_server2",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "register_server3",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "registration_expire_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "transport_protocol",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transport_protocol2",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transport_protocol3",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "user_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "voice_mail",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/sip_trunk/numbers",
      "method": "listSipTrunkNumbers",
      "httpMethod": "get",
      "tag": "SIP Connected Audio",
      "description": "List SIP trunk numbers",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/tracking_fields",
      "method": "trackingfieldList",
      "httpMethod": "get",
      "tag": "TrackingField",
      "description": "List tracking fields",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Tracking Field List"
        }
      ]
    },
    {
      "url": "/tracking_fields",
      "method": "trackingfieldCreate",
      "httpMethod": "post",
      "tag": "TrackingField",
      "description": "Create a tracking field",
      "parameters": [
        {
          "name": "field",
          "schema": "string",
          "description": ""
        },
        {
          "name": "recommended_values",
          "schema": "array",
          "description": ""
        },
        {
          "name": "required",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "visible",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/tracking_fields/{fieldId}",
      "method": "trackingfieldDelete",
      "httpMethod": "delete",
      "tag": "TrackingField",
      "description": "Delete a tracking field",
      "parameters": [
        {
          "name": "fieldId",
          "schema": "string",
          "required": true,
          "description": "The Tracking Field ID"
        }
      ],
      "responses": []
    },
    {
      "url": "/tracking_fields/{fieldId}",
      "method": "trackingfieldGet",
      "httpMethod": "get",
      "tag": "TrackingField",
      "description": "Get a tracking field",
      "parameters": [
        {
          "name": "fieldId",
          "schema": "string",
          "required": true,
          "description": "The Tracking Field ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/tracking_fields/{fieldId}",
      "method": "trackingfieldUpdate",
      "httpMethod": "patch",
      "tag": "TrackingField",
      "description": "Update a tracking field",
      "parameters": [
        {
          "name": "fieldId",
          "schema": "string",
          "required": true,
          "description": "The Tracking Field ID"
        },
        {
          "name": "field",
          "schema": "string",
          "description": ""
        },
        {
          "name": "recommended_values",
          "schema": "array",
          "description": ""
        },
        {
          "name": "required",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "visible",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/tsp",
      "method": "tsp",
      "httpMethod": "get",
      "tag": "TSP",
      "description": "Get account's TSP information",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/tsp",
      "method": "tspUpdate",
      "httpMethod": "patch",
      "tag": "TSP",
      "description": "Update account's TSP information",
      "parameters": [
        {
          "name": "dial_in_number_unrestricted",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "enable",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "master_account_setting_extended",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "modify_credential_forbidden",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "tsp_bridge",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tsp_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "tsp_provider",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/users",
      "method": "users",
      "httpMethod": "get",
      "tag": "Users",
      "description": "List users",
      "parameters": [
        {
          "name": "status",
          "schema": "string",
          "description": "User statuses:<br>`active` - Users with an active status.<br>`inactive` - Users who are deactivated.<br>`pending` - Users with a pending status."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "role_id",
          "schema": "string",
          "description": "Unique identifier of the role. Provide this parameter if you would like to filter the response by a specific role. You can retrieve Role IDs from [List Roles](https://marketplace.zoom.us/docs/api-reference/zoom-api/roles/roles) API. "
        },
        {
          "name": "page_number",
          "schema": "string",
          "description": "The page number of the current page in the returned records."
        },
        {
          "name": "include_fields",
          "schema": "string",
          "description": "Provide a value for this field if you would like to see the following attribute in the response of this API call:<br>\n\n`custom_attributes`: Returns custom attributes that are associated with the user.<br>`host_key`: Returns [host key](https://support.zoom.us/hc/en-us/articles/205172555-Using-your-host-key) of the user."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users",
      "method": "userCreate",
      "httpMethod": "post",
      "tag": "Users",
      "description": "Create users",
      "parameters": [
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "user_info",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/email",
      "method": "userEmail",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Check a user email",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": "The email address to be verified."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/me/zak",
      "method": "userZak",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Get user's ZAK",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/vanity_name",
      "method": "userVanityName",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Check a user's PM room",
      "parameters": [
        {
          "name": "vanity_name",
          "schema": "string",
          "required": true,
          "description": "Personal meeting room name."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}",
      "method": "userDelete",
      "httpMethod": "delete",
      "tag": "Users",
      "description": "Delete a user",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "action",
          "schema": "string",
          "description": "Delete action options:<br>`disassociate` - Disassociate a user.<br>`delete`-  Permanently delete a user.<br>Note: To delete pending user in the account, use `disassociate`"
        },
        {
          "name": "transfer_email",
          "schema": "string",
          "required": false,
          "description": "Transfer email."
        },
        {
          "name": "transfer_meeting",
          "schema": "boolean",
          "required": false,
          "description": "Transfer meeting."
        },
        {
          "name": "transfer_webinar",
          "schema": "boolean",
          "required": false,
          "description": "Transfer webinar."
        },
        {
          "name": "transfer_recording",
          "schema": "boolean",
          "required": false,
          "description": "Transfer recording."
        }
      ],
      "responses": []
    },
    {
      "url": "/users/{userId}",
      "method": "user",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Get a user",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "login_type",
          "schema": "string",
          "description": "`0` - Facebook.<br>`1` - Google.<br>`99` - API.<br>`100` - Zoom.<br>`101` - SSO."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}",
      "method": "userUpdate",
      "httpMethod": "patch",
      "tag": "Users",
      "description": "Update a user",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "login_type",
          "schema": "string",
          "description": "`0` - Facebook.<br>`1` - Google.<br>`99` - API.<br>`100` - Zoom.<br>`101` - SSO."
        },
        {
          "name": "cms_user_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "company",
          "schema": "string",
          "description": ""
        },
        {
          "name": "custom_attributes",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dept",
          "schema": "string",
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "group_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "host_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "job_title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "location",
          "schema": "string",
          "description": ""
        },
        {
          "name": "manager",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phone_country",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phone_number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phone_numbers",
          "schema": "object",
          "description": ""
        },
        {
          "name": "pmi",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "use_pmi",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "vanity_name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/users/{userId}/assistants",
      "method": "userAssistantsDelete",
      "httpMethod": "delete",
      "tag": "Users",
      "description": "Delete user assistants",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        }
      ],
      "responses": []
    },
    {
      "url": "/users/{userId}/assistants",
      "method": "userAssistants",
      "httpMethod": "get",
      "tag": "Users",
      "description": "List user assistants",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of user's assistants."
        }
      ]
    },
    {
      "url": "/users/{userId}/assistants",
      "method": "userAssistantCreate",
      "httpMethod": "post",
      "tag": "Users",
      "description": "Add assistants",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "assistants",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}/assistants/{assistantId}",
      "method": "userAssistantDelete",
      "httpMethod": "delete",
      "tag": "Users",
      "description": "Delete a user assistant",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "assistantId",
          "schema": "string",
          "required": true,
          "description": "Assistant ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/users/{userId}/email",
      "method": "userEmailUpdate",
      "httpMethod": "put",
      "tag": "Users",
      "description": "Update a user's email",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/users/{userId}/meeting_templates",
      "method": "listMeetingTemplates",
      "httpMethod": "get",
      "tag": "Meetings",
      "description": "List meeting templates",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the user. Retrieve the value of this field by calling the [List users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}/meetings",
      "method": "meetings",
      "httpMethod": "get",
      "tag": "Meetings",
      "description": "List meetings",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "type",
          "schema": "string",
          "description": "The meeting types: <br>`scheduled` - This includes all valid past meetings (unexpired), live meetings and upcoming scheduled meetings. It is equivalent to the combined list of \"Previous Meetings\" and \"Upcoming Meetings\" displayed in the user's [Meetings page](https://zoom.us/meeting) on the Zoom Web Portal.<br>`live` - All the ongoing meetings.<br>`upcoming` - All upcoming meetings including live meetings."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "page_number",
          "schema": "string",
          "description": "The page number of the current page in the returned records."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of meetings."
        }
      ]
    },
    {
      "url": "/users/{userId}/meetings",
      "method": "meetingCreate",
      "httpMethod": "post",
      "tag": "Meetings",
      "description": "Create a meeting",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "agenda",
          "schema": "string",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "recurrence",
          "schema": "object",
          "description": ""
        },
        {
          "name": "schedule_for",
          "schema": "string",
          "description": ""
        },
        {
          "name": "settings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "start_time",
          "schema": "string",
          "description": ""
        },
        {
          "name": "template_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "topic",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tracking_fields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "type",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}/pac",
      "method": "userPaCs",
      "httpMethod": "get",
      "tag": "PAC",
      "description": "List a user's PAC accounts",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}/password",
      "method": "userPassword",
      "httpMethod": "put",
      "tag": "Users",
      "description": "Update a user's password",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/users/{userId}/permissions",
      "method": "userPermission",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Get user permissions",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}/picture",
      "method": "userPicture",
      "httpMethod": "post",
      "tag": "Users",
      "description": "Upload a user's profile picture",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "pic_file",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/users/{userId}/presence_status",
      "method": "updatePresenceStatus",
      "httpMethod": "put",
      "tag": "Users",
      "description": "Update a user's presence status",
      "parameters": [
        {
          "name": "duration",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}/recordings",
      "method": "recordingsList",
      "httpMethod": "get",
      "tag": "Cloud Recording",
      "description": "List all recordings",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        },
        {
          "name": "mc",
          "schema": "string",
          "description": "Query Metadata of Recording if an On-Premise Meeting Connector was used for the meeting."
        },
        {
          "name": "trash",
          "schema": "boolean",
          "description": "Query trash.\n`true`: List recordings from trash.<br> `false`: Do not list recordings from the trash.<br> The default value is `false`. If you set it to `true`, you can use the `trash_type` property to indicate the type of Cloud recording that you need to retrieve. "
        },
        {
          "name": "from",
          "schema": "string",
          "description": "The start date in 'yyyy-mm-dd' UTC format for the date range for which you would like to retrieve recordings. The maximum range can be a month. If no value is provided for this field, the default will be current date. For example, if you make the API request on June 30, 2020, without providing the “from” and “to” parameters, by default the value of 'from' field will be “2020-06-30” and the value of the 'to' field will be “2020-07-01”. \n\n**Note**: The \"trash\" files cannot be filtered by date range and thus, the \"from\" and \"to\" fields should not be used for trash files."
        },
        {
          "name": "to",
          "schema": "string",
          "description": "End date in 'yyyy-mm-dd' 'yyyy-mm-dd' UTC format. "
        },
        {
          "name": "trash_type",
          "schema": "string",
          "description": "The type of Cloud recording that you would like to retrieve from the trash. The value can be one of the following:<br>\n    `meeting_recordings`: List all meeting recordings from the trash.<br>\n    `recording_file`: List all individual recording files from the trash. "
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of recordings."
        }
      ]
    },
    {
      "url": "/users/{userId}/schedulers",
      "method": "userSchedulersDelete",
      "httpMethod": "delete",
      "tag": "Users",
      "description": "Delete user schedulers",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}/schedulers",
      "method": "userSchedulers",
      "httpMethod": "get",
      "tag": "Users",
      "description": "List user schedulers",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of user's schedulers."
        }
      ]
    },
    {
      "url": "/users/{userId}/schedulers/{schedulerId}",
      "method": "userSchedulerDelete",
      "httpMethod": "delete",
      "tag": "Users",
      "description": "Delete a scheduler",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "schedulerId",
          "schema": "string",
          "required": true,
          "description": "Scheduler's ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/users/{userId}/settings",
      "method": "userSettings",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Get user settings",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "login_type",
          "schema": "string",
          "description": "`0` - Facebook.<br>`1` - Google.<br>`99` - API.<br>`100` - Zoom.<br>`101` - SSO."
        },
        {
          "name": "option",
          "schema": "string",
          "description": "`meeting_authentication`: Use this query parameter to view [meeting authentication configuration](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied on the user's account.<br>`recording_authentication`: Use this query parameter to view [recording authentication configuration](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied on the user's account.<br>\n`meeting_security`: Use this query parameter to view meeting security settings applied on the user's account.<br>"
        },
        {
          "name": "custom_query_fields",
          "schema": "string",
          "description": "Provide the name of the field by which you would like to filter the response. For example, if you provide \"host_video\" as the value of this field, you will get a response similar to the following:<br>\n{\n    \"schedule_meeting\": {\n        \"host_video\": false\n    }\n}\n<br>You can provide multiple values by separating them with commas(example: \"host_video,participant_video”)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}/settings",
      "method": "userSettingsUpdate",
      "httpMethod": "patch",
      "tag": "Users",
      "description": "Update user settings",
      "parameters": [
        {
          "name": "option",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        }
      ],
      "responses": []
    },
    {
      "url": "/users/{userId}/settings/virtual_backgrounds",
      "method": "delUserVb",
      "httpMethod": "delete",
      "tag": "Users",
      "description": "Delete virtual background files",
      "parameters": [
        {
          "name": "file_ids",
          "schema": "string",
          "description": "Provide the id of the file that is to be deleted. To delete multiple files, provide comma separated values for this field."
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the user. Retrieve the value of this field by calling the [List users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API. "
        }
      ],
      "responses": []
    },
    {
      "url": "/users/{userId}/settings/virtual_backgrounds",
      "method": "uploadVBuser",
      "httpMethod": "post",
      "tag": "Users",
      "description": "Upload virtual background files",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the user. Retrieve the value for this field by calling the [List users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API."
        },
        {
          "name": "file",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}/status",
      "method": "userStatus",
      "httpMethod": "put",
      "tag": "Users",
      "description": "Update user status",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}/token",
      "method": "userSsoTokenDelete",
      "httpMethod": "delete",
      "tag": "Users",
      "description": "Revoke a user's SSO token",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        }
      ],
      "responses": []
    },
    {
      "url": "/users/{userId}/token",
      "method": "userToken",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Get a user token",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "type",
          "schema": "string",
          "description": "User token types:<br>`token` - Used for starting meetings with the client SDK. This token expires in 14 days and a new token will be returned after the expiry.<br>`zak` - Used for generating the start meeting URL. The token expiration time is two hours. For API users, the expiration time is 90 days."
        },
        {
          "name": "ttl",
          "schema": "integer",
          "description": "Use this field in conjunction with the `type` field where the value of `type` field is `zak`. The value of this field denotes the expiry time of the `zak` token in seconds. For example, if you would like the zak token to be expired after one hour of the token generation, the value of this field should be `3600`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}/tsp",
      "method": "userTsPs",
      "httpMethod": "get",
      "tag": "TSP",
      "description": "List user's TSP accounts",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}/tsp",
      "method": "userTspCreate",
      "httpMethod": "post",
      "tag": "TSP",
      "description": "Add a user's TSP account",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "conference_code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dial_in_numbers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "leader_pin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "tsp_bridge",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List of TSP accounts."
        }
      ]
    },
    {
      "url": "/users/{userId}/tsp/settings",
      "method": "tspUrlUpdate",
      "httpMethod": "patch",
      "tag": "TSP",
      "description": "Set global dial-in URL for a TSP user",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The userId or email address of the user."
        },
        {
          "name": "audio_url",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/users/{userId}/tsp/{tspId}",
      "method": "userTspDelete",
      "httpMethod": "delete",
      "tag": "TSP",
      "description": "Delete a user's TSP account",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "tspId",
          "schema": "string",
          "required": true,
          "description": "TSP account ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/users/{userId}/tsp/{tspId}",
      "method": "userTsp",
      "httpMethod": "get",
      "tag": "TSP",
      "description": "Get a user's TSP account",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "tspId",
          "schema": "string",
          "required": true,
          "description": "TSP account ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "TSP account of the user."
        }
      ]
    },
    {
      "url": "/users/{userId}/tsp/{tspId}",
      "method": "userTspUpdate",
      "httpMethod": "patch",
      "tag": "TSP",
      "description": "Update a TSP account",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "tspId",
          "schema": "string",
          "required": true,
          "description": "TSP account ID."
        },
        {
          "name": "conference_code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dial_in_numbers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "leader_pin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "tsp_bridge",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/users/{userId}/webinar_templates",
      "method": "listWebinarTemplates",
      "httpMethod": "get",
      "tag": "Webinars",
      "description": "List webinar templates",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}/webinars",
      "method": "webinars",
      "httpMethod": "get",
      "tag": "Webinars",
      "description": "List webinars",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "page_number",
          "schema": "integer",
          "description": "\n**Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use \"next_page_token\" for pagination instead of this field.\n\nThe page number of the current page in the returned records."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of webinars."
        }
      ]
    },
    {
      "url": "/users/{userId}/webinars",
      "method": "webinarCreate",
      "httpMethod": "post",
      "tag": "Webinars",
      "description": "Create a webinar",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/webinars/{webinarId}",
      "method": "webinarDelete",
      "httpMethod": "delete",
      "tag": "Webinars",
      "description": "Delete a webinar",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID in \"**long**\" format(represented as int64 data type in JSON). "
        },
        {
          "name": "occurrence_id",
          "schema": "string",
          "description": "The meeting occurrence ID."
        },
        {
          "name": "cancel_webinar_reminder",
          "schema": "string",
          "description": "`true`: Notify panelists and registrants about the webinar cancellation via email. \n\n`false`: Do not send any email notification to webinar registrants and panelists. \n\nThe default value of this field is `false`."
        }
      ],
      "responses": []
    },
    {
      "url": "/webinars/{webinarId}",
      "method": "webinar",
      "httpMethod": "get",
      "tag": "Webinars",
      "description": "Get a webinar",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID in \"**long**\" format(represented as int64 data type in JSON). "
        },
        {
          "name": "occurrence_id",
          "schema": "string",
          "description": "Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences. When you create a recurring Webinar using [Create a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarcreate), you can retrieve the Occurrence ID from the response of the API call."
        },
        {
          "name": "show_previous_occurrences",
          "schema": "boolean",
          "description": "Set the value of this field to `true` if you would like to view Webinar details of all previous occurrences of a recurring Webinar."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/webinars/{webinarId}",
      "method": "webinarUpdate",
      "httpMethod": "patch",
      "tag": "Webinars",
      "description": "Update a webinar",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID in \"**long**\" format(represented as int64 data type in JSON). "
        },
        {
          "name": "occurrence_id",
          "schema": "string",
          "description": "Webinar occurrence id. Support change of agenda, start_time, duration, settings: {host_video, panelist_video, hd_video, watermark, auto_recording}"
        }
      ],
      "responses": []
    },
    {
      "url": "/webinars/{webinarId}/batch_registrants",
      "method": "addBatchWebinarRegistrants",
      "httpMethod": "post",
      "tag": "Webinars",
      "description": "Perform batch registration",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the webinar."
        },
        {
          "name": "auto_approve",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "registrants",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/webinars/{webinarId}/panelists",
      "method": "webinarPanelistsDelete",
      "httpMethod": "delete",
      "tag": "Webinars",
      "description": "Remove panelists",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID in \"**long**\" format(represented as int64 data type in JSON). "
        }
      ],
      "responses": []
    },
    {
      "url": "/webinars/{webinarId}/panelists",
      "method": "webinarPanelists",
      "httpMethod": "get",
      "tag": "Webinars",
      "description": "List panelists",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID in \"**long**\" format(represented as int64 data type in JSON). "
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Webinar panelist."
        }
      ]
    },
    {
      "url": "/webinars/{webinarId}/panelists",
      "method": "webinarPanelistCreate",
      "httpMethod": "post",
      "tag": "Webinars",
      "description": "Add panelists",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID in \"**long**\" format(represented as int64 data type in JSON). "
        },
        {
          "name": "panelists",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/webinars/{webinarId}/panelists/{panelistId}",
      "method": "webinarPanelistDelete",
      "httpMethod": "delete",
      "tag": "Webinars",
      "description": "Remove a panelist",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID in \"**long**\" format(represented as int64 data type in JSON). "
        },
        {
          "name": "panelistId",
          "schema": "integer",
          "required": true,
          "description": "The panelist ID or panelist email."
        }
      ],
      "responses": []
    },
    {
      "url": "/webinars/{webinarId}/polls",
      "method": "webinarPolls",
      "httpMethod": "get",
      "tag": "Webinars",
      "description": "List a webinar's polls ",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID in \"**long**\" format(represented as int64 data type in JSON). "
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Poll List"
        }
      ]
    },
    {
      "url": "/webinars/{webinarId}/polls",
      "method": "webinarPollCreate",
      "httpMethod": "post",
      "tag": "Webinars",
      "description": "Create a webinar's poll",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID in \"**long**\" format(represented as int64 data type in JSON). "
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/webinars/{webinarId}/polls/{pollId}",
      "method": "webinarPollDelete",
      "httpMethod": "delete",
      "tag": "Webinars",
      "description": "Delete a webinar poll",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID in \"**long**\" format(represented as int64 data type in JSON). "
        },
        {
          "name": "pollId",
          "schema": "string",
          "required": true,
          "description": "The poll ID"
        }
      ],
      "responses": []
    },
    {
      "url": "/webinars/{webinarId}/polls/{pollId}",
      "method": "webinarPollGet",
      "httpMethod": "get",
      "tag": "Webinars",
      "description": "Get a webinar poll",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID in \"**long**\" format(represented as int64 data type in JSON). "
        },
        {
          "name": "pollId",
          "schema": "string",
          "required": true,
          "description": "The poll ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/webinars/{webinarId}/polls/{pollId}",
      "method": "webinarPollUpdate",
      "httpMethod": "put",
      "tag": "Webinars",
      "description": "Update a webinar poll",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID in \"**long**\" format(represented as int64 data type in JSON). "
        },
        {
          "name": "pollId",
          "schema": "string",
          "required": true,
          "description": "The poll ID"
        }
      ],
      "responses": []
    },
    {
      "url": "/webinars/{webinarId}/registrants",
      "method": "webinarRegistrants",
      "httpMethod": "get",
      "tag": "Webinars",
      "description": "List webinar registrants",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID in \"**long**\" format(represented as int64 data type in JSON). "
        },
        {
          "name": "occurrence_id",
          "schema": "string",
          "description": "The meeting occurrence ID."
        },
        {
          "name": "status",
          "schema": "string",
          "description": "The registrant status:<br>`pending` - Registrant's status is pending.<br>`approved` - Registrant's status is approved.<br>`denied` - Registrant's status is denied."
        },
        {
          "name": "tracking_source_id",
          "schema": "string",
          "description": "The tracking source ID for the registrants. Useful if you share the webinar registration page in multiple locations. See [Creating source tracking links for webinar registration](https://support.zoom.us/hc/en-us/articles/360000315683-Creating-source-tracking-links-for-webinar-registration) for details."
        },
        {
          "name": "page_size",
          "schema": "integer",
          "description": "The number of records returned within a single API call."
        },
        {
          "name": "page_number",
          "schema": "integer",
          "description": "\n**Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use \"next_page_token\" for pagination instead of this field.\n\nThe page number of the current page in the returned records."
        },
        {
          "name": "next_page_token",
          "schema": "string",
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of users."
        }
      ]
    },
    {
      "url": "/webinars/{webinarId}/registrants",
      "method": "webinarRegistrantCreate",
      "httpMethod": "post",
      "tag": "Webinars",
      "description": "Add a webinar registrant",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID in \"**long**\" format(represented as int64 data type in JSON). "
        },
        {
          "name": "occurrence_ids",
          "schema": "string",
          "description": "Occurrence ID. Get this value from the webinar get API. Multiple values separated by a comma."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/webinars/{webinarId}/registrants/questions",
      "method": "webinarRegistrantsQuestionsGet",
      "httpMethod": "get",
      "tag": "Webinars",
      "description": "List registration questions",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID in \"**long**\" format(represented as int64 data type in JSON). "
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/webinars/{webinarId}/registrants/questions",
      "method": "webinarRegistrantQuestionUpdate",
      "httpMethod": "patch",
      "tag": "Webinars",
      "description": "Update registration questions",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID in \"**long**\" format(represented as int64 data type in JSON). "
        }
      ],
      "responses": []
    },
    {
      "url": "/webinars/{webinarId}/registrants/status",
      "method": "webinarRegistrantStatus",
      "httpMethod": "put",
      "tag": "Webinars",
      "description": "Update registrant's status",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID in \"**long**\" format(represented as int64 data type in JSON). "
        },
        {
          "name": "occurrence_id",
          "schema": "string",
          "description": "The meeting occurrence ID."
        },
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "registrants",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/webinars/{webinarId}/registrants/{registrantId}",
      "method": "deleteWebinarRegistrant",
      "httpMethod": "delete",
      "tag": "Webinars",
      "description": "Delete a webinar registrant",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID."
        },
        {
          "name": "registrantId",
          "schema": "string",
          "required": true,
          "description": "The registrant ID."
        },
        {
          "name": "occurrence_id",
          "schema": "string",
          "description": "The webinar occurence ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/webinars/{webinarId}/registrants/{registrantId}",
      "method": "webinarRegistrantGet",
      "httpMethod": "get",
      "tag": "Webinars",
      "description": "Get a webinar registrant",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID in \"**long**\" format(represented as int64 data type in JSON). "
        },
        {
          "name": "registrantId",
          "schema": "string",
          "required": true,
          "description": "The registrant ID."
        },
        {
          "name": "occurrence_id",
          "schema": "string",
          "description": "The meeting occurrence ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/webinars/{webinarId}/status",
      "method": "webinarStatus",
      "httpMethod": "put",
      "tag": "Webinars",
      "description": "Update webinar status",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID in \"**long**\" format(represented as int64 data type in JSON). "
        },
        {
          "name": "action",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/webinars/{webinarId}/tracking_sources",
      "method": "getTrackingSources",
      "httpMethod": "get",
      "tag": "Webinars",
      "description": "Get webinar tracking sources",
      "parameters": [
        {
          "name": "webinarId",
          "schema": "integer",
          "required": true,
          "description": "The webinar ID in \"**long**\" format(represented as int64 data type in JSON). "
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.zoom.us/v2",
  "apiDescription": "The Zoom API allows developers to access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials).\nAll endpoints are available via `https` and are located at `api.zoom.us/v2/`.\n\nFor instance you can list all users on an account via `https://api.zoom.us/v2/users/`.",
  "apiTitle": "Zoom API",
  "endpoints": 265,
  "sdkMethods": 468,
  "schemas": 135,
  "parameters": 1025,
  "contactUrl": "https://developer.zoom.us/",
  "contactEmail": "developersupport@zoom.us",
  "difficultyScore": 791.75,
  "difficulty": "Very Hard"
}