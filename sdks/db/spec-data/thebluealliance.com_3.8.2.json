{
  "providerName": "thebluealliance.com",
  "openApiRaw": "https://www.thebluealliance.com/swagger/api_v3.json",
  "securitySchemes": {
    "apiKey": {
      "description": "Your TBA v3 API Key can be obtained from your [Account Page](/account) on the TBA website.",
      "in": "header",
      "name": "X-TBA-Auth-Key",
      "type": "apiKey"
    }
  },
  "homepage": "thebluealliance.com",
  "apiVersion": "3.8.2",
  "methods": [
    {
      "url": "/district/{district_key}/events",
      "method": "getDistrictEvents",
      "httpMethod": "get",
      "tag": "district",
      "typeScriptTag": "district",
      "description": "Gets a list of events in the given district.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "districtKey",
          "schema": "string",
          "required": true,
          "description": "TBA District Key, eg `2016fim`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/district/{district_key}/events/keys",
      "method": "getDistrictEventsKeys",
      "httpMethod": "get",
      "tag": "district",
      "typeScriptTag": "district",
      "description": "Gets a list of event keys for events in the given district.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "districtKey",
          "schema": "string",
          "required": true,
          "description": "TBA District Key, eg `2016fim`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Array of Event Keys"
        }
      ]
    },
    {
      "url": "/district/{district_key}/events/simple",
      "method": "getDistrictEventsSimple",
      "httpMethod": "get",
      "tag": "district",
      "typeScriptTag": "district",
      "description": "Gets a short-form list of events in the given district.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "districtKey",
          "schema": "string",
          "required": true,
          "description": "TBA District Key, eg `2016fim`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/district/{district_key}/rankings",
      "method": "getDistrictRankings",
      "httpMethod": "get",
      "tag": "district",
      "typeScriptTag": "district",
      "description": "Gets a list of team district rankings for the given district.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "districtKey",
          "schema": "string",
          "required": true,
          "description": "TBA District Key, eg `2016fim`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/district/{district_key}/teams",
      "method": "getDistrictTeams",
      "httpMethod": "get",
      "tag": "district",
      "typeScriptTag": "district",
      "description": "Gets a list of `Team` objects that competed in events in the given district.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "districtKey",
          "schema": "string",
          "required": true,
          "description": "TBA District Key, eg `2016fim`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/district/{district_key}/teams/keys",
      "method": "getDistrictTeamsKeys",
      "httpMethod": "get",
      "tag": "district",
      "typeScriptTag": "district",
      "description": "Gets a list of `Team` objects that competed in events in the given district.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "districtKey",
          "schema": "string",
          "required": true,
          "description": "TBA District Key, eg `2016fim`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Array of Team Keys"
        }
      ]
    },
    {
      "url": "/district/{district_key}/teams/simple",
      "method": "getDistrictTeamsSimple",
      "httpMethod": "get",
      "tag": "district",
      "typeScriptTag": "district",
      "description": "Gets a short-form list of `Team` objects that competed in events in the given district.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "districtKey",
          "schema": "string",
          "required": true,
          "description": "TBA District Key, eg `2016fim`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/districts/{year}",
      "method": "getDistrictsByYear",
      "httpMethod": "get",
      "tag": "district",
      "typeScriptTag": "district",
      "description": "Gets a list of districts and their corresponding district key, for the given year.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "year",
          "schema": "integer",
          "required": true,
          "description": "Competition Year (or Season). Must be 4 digits."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/event/{event_key}",
      "method": "getEvent",
      "httpMethod": "get",
      "tag": "event",
      "typeScriptTag": "event",
      "description": "Gets an Event.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/event/{event_key}/alliances",
      "method": "getEventAlliances",
      "httpMethod": "get",
      "tag": "event",
      "typeScriptTag": "event",
      "description": "Gets a list of Elimination Alliances for the given Event.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/event/{event_key}/awards",
      "method": "getEventAwards",
      "httpMethod": "get",
      "tag": "event",
      "typeScriptTag": "event",
      "description": "Gets a list of awards from the given event.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/event/{event_key}/district_points",
      "method": "getEventDistrictPoints",
      "httpMethod": "get",
      "tag": "event",
      "typeScriptTag": "event",
      "description": "Gets a list of team rankings for the Event.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/event/{event_key}/insights",
      "method": "getEventInsights",
      "httpMethod": "get",
      "tag": "event",
      "typeScriptTag": "event",
      "description": "Gets a set of Event-specific insights for the given Event.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A year-specific event insight object expressed as a JSON string, separated in to `qual` and `playoff` fields. See also Event_Insights_2016, Event_Insights_2017, etc."
        }
      ]
    },
    {
      "url": "/event/{event_key}/matches",
      "method": "getEventMatches",
      "httpMethod": "get",
      "tag": "event",
      "typeScriptTag": "event",
      "description": "Gets a list of matches for the given event.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/event/{event_key}/matches/keys",
      "method": "getEventMatchesKeys",
      "httpMethod": "get",
      "tag": "event",
      "typeScriptTag": "event",
      "description": "Gets a list of match keys for the given event.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Array of Match Keys"
        }
      ]
    },
    {
      "url": "/event/{event_key}/matches/simple",
      "method": "getEventMatchesSimple",
      "httpMethod": "get",
      "tag": "event",
      "typeScriptTag": "event",
      "description": "Gets a short-form list of matches for the given event.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/event/{event_key}/matches/timeseries",
      "method": "getEventMatchTimeseries",
      "httpMethod": "get",
      "tag": "event",
      "typeScriptTag": "event",
      "description": "Gets an array of Match Keys for the given event key that have timeseries data. Returns an empty array if no matches have timeseries data.\n*WARNING:* This is *not* official data, and is subject to a significant possibility of error, or missing data. Do not rely on this data for any purpose. In fact, pretend we made it up.\n*WARNING:* This endpoint and corresponding data models are under *active development* and may change at any time, including in breaking ways.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/event/{event_key}/oprs",
      "method": "getEventOpRs",
      "httpMethod": "get",
      "tag": "event",
      "typeScriptTag": "event",
      "description": "Gets a set of Event OPRs (including OPR, DPR, and CCWM) for the given Event.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "OPR, DPR, and CCWM for teams at the event."
        }
      ]
    },
    {
      "url": "/event/{event_key}/predictions",
      "method": "getEventPredictions",
      "httpMethod": "get",
      "tag": "event",
      "typeScriptTag": "event",
      "description": "Gets information on TBA-generated predictions for the given Event. Contains year-specific information. *WARNING* This endpoint is currently under development and may change at any time.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "JSON Object containing prediction information for the event. Contains year-specific information and is subject to change."
        }
      ]
    },
    {
      "url": "/event/{event_key}/rankings",
      "method": "getEventRankings",
      "httpMethod": "get",
      "tag": "event",
      "typeScriptTag": "event",
      "description": "Gets a list of team rankings for the Event.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/event/{event_key}/simple",
      "method": "getEventSimple",
      "httpMethod": "get",
      "tag": "event",
      "typeScriptTag": "event",
      "description": "Gets a short-form Event.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/event/{event_key}/teams",
      "method": "getEventTeams",
      "httpMethod": "get",
      "tag": "event",
      "typeScriptTag": "event",
      "description": "Gets a list of `Team` objects that competed in the given event.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/event/{event_key}/teams/keys",
      "method": "getEventTeamsKeys",
      "httpMethod": "get",
      "tag": "event",
      "typeScriptTag": "event",
      "description": "Gets a list of `Team` keys that competed in the given event.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Array of Team Keys"
        }
      ]
    },
    {
      "url": "/event/{event_key}/teams/simple",
      "method": "getEventTeamsSimple",
      "httpMethod": "get",
      "tag": "event",
      "typeScriptTag": "event",
      "description": "Gets a short-form list of `Team` objects that competed in the given event.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/event/{event_key}/teams/statuses",
      "method": "getEventTeamsStatuses",
      "httpMethod": "get",
      "tag": "event",
      "typeScriptTag": "event",
      "description": "Gets a key-value list of the event statuses for teams competing at the given event.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A key-value pair of `Team_Event_Status` objects with the event key as the key."
        }
      ]
    },
    {
      "url": "/events/{year}",
      "method": "getEventsByYear",
      "httpMethod": "get",
      "tag": "event",
      "typeScriptTag": "event",
      "description": "Gets a list of events in the given year.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "year",
          "schema": "integer",
          "required": true,
          "description": "Competition Year (or Season). Must be 4 digits."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/events/{year}/keys",
      "method": "getEventsByYearKeys",
      "httpMethod": "get",
      "tag": "event",
      "typeScriptTag": "event",
      "description": "Gets a list of event keys in the given year.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "year",
          "schema": "integer",
          "required": true,
          "description": "Competition Year (or Season). Must be 4 digits."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Array of Event Keys"
        }
      ]
    },
    {
      "url": "/events/{year}/simple",
      "method": "getEventsByYearSimple",
      "httpMethod": "get",
      "tag": "event",
      "typeScriptTag": "event",
      "description": "Gets a short-form list of events in the given year.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "year",
          "schema": "integer",
          "required": true,
          "description": "Competition Year (or Season). Must be 4 digits."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/match/{match_key}",
      "method": "getMatch",
      "httpMethod": "get",
      "tag": "match",
      "typeScriptTag": "match",
      "description": "Gets a `Match` object for the given match key.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "matchKey",
          "schema": "string",
          "required": true,
          "description": "TBA Match Key, eg `2016nytr_qm1`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/match/{match_key}/simple",
      "method": "getMatchSimple",
      "httpMethod": "get",
      "tag": "match",
      "typeScriptTag": "match",
      "description": "Gets a short-form `Match` object for the given match key.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "matchKey",
          "schema": "string",
          "required": true,
          "description": "TBA Match Key, eg `2016nytr_qm1`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/match/{match_key}/timeseries",
      "method": "getMatchTimeseries",
      "httpMethod": "get",
      "tag": "match",
      "typeScriptTag": "match",
      "description": "Gets an array of game-specific Match Timeseries objects for the given match key or an empty array if not available.\n*WARNING:* This is *not* official data, and is subject to a significant possibility of error, or missing data. Do not rely on this data for any purpose. In fact, pretend we made it up.\n*WARNING:* This endpoint and corresponding data models are under *active development* and may change at any time, including in breaking ways.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "matchKey",
          "schema": "string",
          "required": true,
          "description": "TBA Match Key, eg `2016nytr_qm1`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/match/{match_key}/zebra_motionworks",
      "method": "getMatchZebra",
      "httpMethod": "get",
      "tag": "match",
      "typeScriptTag": "match",
      "description": "Gets Zebra MotionWorks data for a Match for the given match key.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "matchKey",
          "schema": "string",
          "required": true,
          "description": "TBA Match Key, eg `2016nytr_qm1`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/status",
      "method": "getStatus",
      "httpMethod": "get",
      "tag": "TBA",
      "typeScriptTag": "tba",
      "description": "Returns API status, and TBA status information.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/team/{team_key}",
      "method": "getTeam",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a `Team` object for the team referenced by the given key.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/team/{team_key}/awards",
      "method": "getTeamAwards",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of awards the given team has won.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/team/{team_key}/awards/{year}",
      "method": "getTeamAwardsByYear",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of awards the given team has won in a given year.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        },
        {
          "name": "year",
          "schema": "integer",
          "required": true,
          "description": "Competition Year (or Season). Must be 4 digits."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/team/{team_key}/districts",
      "method": "getTeamDistricts",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets an array of districts representing each year the team was in a district. Will return an empty array if the team was never in a district.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/team/{team_key}/event/{event_key}/awards",
      "method": "getTeamEventAwards",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of awards the given team won at the given event.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/team/{team_key}/event/{event_key}/matches",
      "method": "getTeamEventMatches",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of matches for the given team and event.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/team/{team_key}/event/{event_key}/matches/keys",
      "method": "getTeamEventMatchesKeys",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of match keys for matches for the given team and event.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Array of Match Keys"
        }
      ]
    },
    {
      "url": "/team/{team_key}/event/{event_key}/matches/simple",
      "method": "getTeamEventMatchesSimple",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a short-form list of matches for the given team and event.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/team/{team_key}/event/{event_key}/status",
      "method": "getTeamEventStatus",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets the competition rank and status of the team at the given event.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        },
        {
          "name": "eventKey",
          "schema": "string",
          "required": true,
          "description": "TBA Event Key, eg `2016nytr`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/team/{team_key}/events",
      "method": "getTeamEvents",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of all events this team has competed at.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/team/{team_key}/events/keys",
      "method": "getTeamEventsKeys",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of the event keys for all events this team has competed at.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Array of Event Keys"
        }
      ]
    },
    {
      "url": "/team/{team_key}/events/simple",
      "method": "getTeamEventsSimple",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a short-form list of all events this team has competed at.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/team/{team_key}/events/{year}",
      "method": "getTeamEventsByYear",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of events this team has competed at in the given year.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        },
        {
          "name": "year",
          "schema": "integer",
          "required": true,
          "description": "Competition Year (or Season). Must be 4 digits."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/team/{team_key}/events/{year}/keys",
      "method": "getTeamEventsByYearKeys",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of the event keys for events this team has competed at in the given year.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        },
        {
          "name": "year",
          "schema": "integer",
          "required": true,
          "description": "Competition Year (or Season). Must be 4 digits."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Array of Event Keys"
        }
      ]
    },
    {
      "url": "/team/{team_key}/events/{year}/simple",
      "method": "getTeamEventsByYearSimple",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a short-form list of events this team has competed at in the given year.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        },
        {
          "name": "year",
          "schema": "integer",
          "required": true,
          "description": "Competition Year (or Season). Must be 4 digits."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/team/{team_key}/events/{year}/statuses",
      "method": "getTeamEventsStatusesByYear",
      "httpMethod": "get",
      "tag": "list",
      "typeScriptTag": "list",
      "description": "Gets a key-value list of the event statuses for events this team has competed at in the given year.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        },
        {
          "name": "year",
          "schema": "integer",
          "required": true,
          "description": "Competition Year (or Season). Must be 4 digits."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A key-value pair of `Team_Event_Status` objects with the event key as the key."
        }
      ]
    },
    {
      "url": "/team/{team_key}/matches/{year}",
      "method": "getTeamMatchesByYear",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of matches for the given team and year.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        },
        {
          "name": "year",
          "schema": "integer",
          "required": true,
          "description": "Competition Year (or Season). Must be 4 digits."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/team/{team_key}/matches/{year}/keys",
      "method": "getTeamMatchesByYearKeys",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of match keys for matches for the given team and year.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        },
        {
          "name": "year",
          "schema": "integer",
          "required": true,
          "description": "Competition Year (or Season). Must be 4 digits."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Array of Match Keys"
        }
      ]
    },
    {
      "url": "/team/{team_key}/matches/{year}/simple",
      "method": "getTeamMatchesByYearSimple",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a short-form list of matches for the given team and year.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        },
        {
          "name": "year",
          "schema": "integer",
          "required": true,
          "description": "Competition Year (or Season). Must be 4 digits."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/team/{team_key}/media/tag/{media_tag}",
      "method": "getTeamMediaByTag",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of Media (videos / pictures) for the given team and tag.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        },
        {
          "name": "mediaTag",
          "schema": "string",
          "required": true,
          "description": "Media Tag which describes the Media."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/team/{team_key}/media/tag/{media_tag}/{year}",
      "method": "getTeamMediaByTagYear",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of Media (videos / pictures) for the given team, tag and year.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        },
        {
          "name": "mediaTag",
          "schema": "string",
          "required": true,
          "description": "Media Tag which describes the Media."
        },
        {
          "name": "year",
          "schema": "integer",
          "required": true,
          "description": "Competition Year (or Season). Must be 4 digits."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/team/{team_key}/media/{year}",
      "method": "getTeamMediaByYear",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of Media (videos / pictures) for the given team and year.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        },
        {
          "name": "year",
          "schema": "integer",
          "required": true,
          "description": "Competition Year (or Season). Must be 4 digits."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/team/{team_key}/robots",
      "method": "getTeamRobots",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of year and robot name pairs for each year that a robot name was provided. Will return an empty array if the team has never named a robot.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/team/{team_key}/simple",
      "method": "getTeamSimple",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a `Team_Simple` object for the team referenced by the given key.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/team/{team_key}/social_media",
      "method": "getTeamSocialMedia",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of Media (social media) for the given team.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/team/{team_key}/years_participated",
      "method": "getTeamYearsParticipated",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of years in which the team participated in at least one competition.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "teamKey",
          "schema": "string",
          "required": true,
          "description": "TBA Team Key, eg `frc254`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/teams/{page_num}",
      "method": "getTeams",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of `Team` objects, paginated in groups of 500.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "pageNum",
          "schema": "integer",
          "required": true,
          "description": "Page number of results to return, zero-indexed"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/teams/{page_num}/keys",
      "method": "getTeamsKeys",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of Team keys, paginated in groups of 500. (Note, each page will not have 500 teams, but will include the teams within that range of 500.)",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "pageNum",
          "schema": "integer",
          "required": true,
          "description": "Page number of results to return, zero-indexed"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/teams/{page_num}/simple",
      "method": "getTeamsSimple",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of short form `Team_Simple` objects, paginated in groups of 500.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "pageNum",
          "schema": "integer",
          "required": true,
          "description": "Page number of results to return, zero-indexed"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/teams/{year}/{page_num}",
      "method": "getTeamsByYear",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of `Team` objects that competed in the given year, paginated in groups of 500.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "year",
          "schema": "integer",
          "required": true,
          "description": "Competition Year (or Season). Must be 4 digits."
        },
        {
          "name": "pageNum",
          "schema": "integer",
          "required": true,
          "description": "Page number of results to return, zero-indexed"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/teams/{year}/{page_num}/keys",
      "method": "getTeamsByYearKeys",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list Team Keys that competed in the given year, paginated in groups of 500.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "year",
          "schema": "integer",
          "required": true,
          "description": "Competition Year (or Season). Must be 4 digits."
        },
        {
          "name": "pageNum",
          "schema": "integer",
          "required": true,
          "description": "Page number of results to return, zero-indexed"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Array of Team Keys"
        }
      ]
    },
    {
      "url": "/teams/{year}/{page_num}/simple",
      "method": "getTeamsByYearSimple",
      "httpMethod": "get",
      "tag": "team",
      "typeScriptTag": "team",
      "description": "Gets a list of short form `Team_Simple` objects that competed in the given year, paginated in groups of 500.",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "description": "Value of the `ETag` header in the most recently cached response by the client."
        },
        {
          "name": "year",
          "schema": "integer",
          "required": true,
          "description": "Competition Year (or Season). Must be 4 digits."
        },
        {
          "name": "pageNum",
          "schema": "integer",
          "required": true,
          "description": "Page number of results to return, zero-indexed"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://www.thebluealliance.com/api/v3",
  "apiDescription": "# Overview \n\n Information and statistics about FIRST Robotics Competition teams and events. \n\n# Authentication \n\nAll endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).",
  "apiTitle": "The Blue Alliance API v3",
  "endpoints": 65,
  "sdkMethods": 66,
  "schemas": 50,
  "parameters": 149,
  "difficultyScore": 128.25,
  "difficulty": "Medium"
}