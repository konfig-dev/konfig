{
  "providerName": "opendatasoft.com",
  "openApiRaw": "http://public.opendatasoft.com/api/v2/swagger.json",
  "securitySchemes": {
    "api_key": {
      "in": "query",
      "name": "apikey",
      "type": "apiKey"
    },
    "basic": {
      "type": "http",
      "scheme": "basic"
    }
  },
  "homepage": "opendatasoft.com",
  "apiVersion": "2.1.0",
  "methods": [
    {
      "url": "/",
      "method": "getRoot",
      "httpMethod": "get",
      "tag": "root",
      "typeScriptTag": "root",
      "description": "API entry point\n\nProvides links for:\n* catalog, your domain's list of datasets\n* opendatasoft, all datasets on the Opendatasoft network\n",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/pages",
      "method": "getPages",
      "httpMethod": "get",
      "tag": "page",
      "typeScriptTag": "page",
      "description": "List of all pages from this portal.\n",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/pages/{slug}",
      "method": "getPage",
      "httpMethod": "get",
      "tag": "page",
      "typeScriptTag": "page",
      "description": "A single page's metadata from this portal\n",
      "parameters": [
        {
          "name": "slug",
          "schema": "string",
          "required": true,
          "description": "Page slug.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}",
      "method": "getSource",
      "httpMethod": "get",
      "tag": "catalog",
      "typeScriptTag": "catalog",
      "description": "Source entry points\n\nProvides links for the source's datasets and metadata.\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/aggregates",
      "method": "aggregateDatasets",
      "httpMethod": "get",
      "tag": "catalog",
      "typeScriptTag": "catalog",
      "description": "**Deprecated, use `/datasets` instead.**\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "select",
          "schema": "string",
          "required": false,
          "description": "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n"
        },
        {
          "name": "where",
          "schema": "array",
          "required": false,
          "description": "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n"
        },
        {
          "name": "groupBy",
          "schema": "string",
          "required": false,
          "description": "A group by expression defines a grouping function for an aggregation.\nIt can be:\n - a field name: group result by each value of this field\n - a range function: group result by range\n - a date function: group result by date\nIt is possible to specify a custom name with the 'as name' notation. For instance: group_by='city_field as city'.\n"
        },
        {
          "name": "orderBy",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n"
        },
        {
          "name": "facet",
          "schema": "array",
          "description": "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n"
        },
        {
          "name": "refine",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/datasets",
      "method": "getDatasets",
      "httpMethod": "get",
      "tag": "catalog",
      "typeScriptTag": "catalog",
      "description": "List of available datasets, each with their endpoints, paginated.\n\nLinks provided:\n* previous page\n* next page\n* last page\n* first page\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "select",
          "schema": "string",
          "required": false,
          "description": "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n"
        },
        {
          "name": "where",
          "schema": "array",
          "required": false,
          "description": "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n"
        },
        {
          "name": "groupBy",
          "schema": "string",
          "required": false,
          "description": "A group by expression defines a grouping function for an aggregation.\nIt can be:\n - a field name: group result by each value of this field\n - a range function: group result by range\n - a date function: group result by date\nIt is possible to specify a custom name with the 'as name' notation. For instance: group_by='city_field as city'.\n"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "**Deprecated, use `order_by` instead.**\n\nA list of field names, each possibly prefixed with a minus (-).\n\nSorts results according to the specified fields' values. By default, the sort is ascending (from the smallest\nvalue to the biggest value). A minus sign (‘-‘) may be used to perform a descending sort. Sorting is only\navailable on numeric fields (int, double, date and datetime) and on text fields which have the sortable\nannotation.\n"
        },
        {
          "name": "orderBy",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n"
        },
        {
          "name": "search",
          "schema": "array",
          "required": false,
          "description": "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n"
        },
        {
          "name": "facet",
          "schema": "array",
          "description": "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n"
        },
        {
          "name": "refine",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n"
        },
        {
          "name": "pretty",
          "schema": "boolean",
          "description": "Activate pretty print"
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        },
        {
          "name": "includeAppMetas",
          "schema": "boolean",
          "description": "Explicitely request application metas for each datasets.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/datasets/{dataset_id}",
      "method": "getDataset",
      "httpMethod": "get",
      "tag": "dataset",
      "typeScriptTag": "dataset",
      "description": "List of available endpoints for the specified dataset, with metadata and endpoints.\n\nWill provide links for:\n* the attachments endpoint\n* the files endpoint\n* the records endpoint\n* the catalog endpoint\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "datasetId",
          "schema": "string",
          "required": true,
          "description": "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n"
        },
        {
          "name": "select",
          "schema": "string",
          "required": false,
          "description": "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n"
        },
        {
          "name": "pretty",
          "schema": "boolean",
          "description": "Activate pretty print"
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        },
        {
          "name": "includeAppMetas",
          "schema": "boolean",
          "description": "Explicitely request application metas for each datasets.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/datasets/{dataset_id}/aggregates",
      "method": "aggregateRecords",
      "httpMethod": "get",
      "tag": "dataset",
      "typeScriptTag": "dataset",
      "description": "**Deprecated, use `/records` instead.**\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "datasetId",
          "schema": "string",
          "required": true,
          "description": "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n"
        },
        {
          "name": "select",
          "schema": "string",
          "required": false,
          "description": "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n"
        },
        {
          "name": "where",
          "schema": "array",
          "required": false,
          "description": "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n"
        },
        {
          "name": "groupBy",
          "schema": "string",
          "required": false,
          "description": "A group by expression defines a grouping function for an aggregation.\nIt can be:\n - a field name: group result by each value of this field\n - a range function: group result by range\n - a date function: group result by date\nIt is possible to specify a custom name with the 'as name' notation. For instance: group_by='city_field as city'.\n"
        },
        {
          "name": "orderBy",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n"
        },
        {
          "name": "facet",
          "schema": "array",
          "description": "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n"
        },
        {
          "name": "refine",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/datasets/{dataset_id}/attachments",
      "method": "getDatasetAttachements",
      "httpMethod": "get",
      "tag": "dataset",
      "typeScriptTag": "dataset",
      "description": "Get list of all available attachments\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "datasetId",
          "schema": "string",
          "required": true,
          "description": "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/datasets/{dataset_id}/attachments/{attachment_id}",
      "method": "downloadDatasetAttachement",
      "httpMethod": "get",
      "tag": "dataset",
      "typeScriptTag": "dataset",
      "description": "Download attachment\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "datasetId",
          "schema": "string",
          "required": true,
          "description": "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n"
        },
        {
          "name": "attachmentId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/{source}/datasets/{dataset_id}/exports/csv",
      "method": "exportRecordsCsv",
      "httpMethod": "get",
      "tag": "export dataset",
      "typeScriptTag": "exportDataset",
      "description": "Export dataset in CSV format\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "datasetId",
          "schema": "string",
          "required": true,
          "description": "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n"
        },
        {
          "name": "select",
          "schema": "string",
          "required": false,
          "description": "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n"
        },
        {
          "name": "where",
          "schema": "array",
          "required": false,
          "description": "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "**Deprecated, use `order_by` instead.**\n\nA list of field names, each possibly prefixed with a minus (-).\n\nSorts results according to the specified fields' values. By default, the sort is ascending (from the smallest\nvalue to the biggest value). A minus sign (‘-‘) may be used to perform a descending sort. Sorting is only\navailable on numeric fields (int, double, date and datetime) and on text fields which have the sortable\nannotation.\n"
        },
        {
          "name": "orderBy",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to return in export.\n\nUse -1 (default) to retrieve all records\n"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n"
        },
        {
          "name": "facet",
          "schema": "array",
          "description": "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n"
        },
        {
          "name": "refine",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n"
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        },
        {
          "name": "delimiter",
          "schema": "string",
          "required": false,
          "description": "Provide a different delimiter (default ',')."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/datasets/{dataset_id}/exports/geojson",
      "method": "exportRecordsGeojson",
      "httpMethod": "get",
      "tag": "export dataset",
      "typeScriptTag": "exportDataset",
      "description": "Export dataset in GEOJSON format\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "datasetId",
          "schema": "string",
          "required": true,
          "description": "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n"
        },
        {
          "name": "select",
          "schema": "string",
          "required": false,
          "description": "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n"
        },
        {
          "name": "where",
          "schema": "array",
          "required": false,
          "description": "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "**Deprecated, use `order_by` instead.**\n\nA list of field names, each possibly prefixed with a minus (-).\n\nSorts results according to the specified fields' values. By default, the sort is ascending (from the smallest\nvalue to the biggest value). A minus sign (‘-‘) may be used to perform a descending sort. Sorting is only\navailable on numeric fields (int, double, date and datetime) and on text fields which have the sortable\nannotation.\n"
        },
        {
          "name": "orderBy",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to return in export.\n\nUse -1 (default) to retrieve all records\n"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n"
        },
        {
          "name": "search",
          "schema": "array",
          "required": false,
          "description": "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n"
        },
        {
          "name": "facet",
          "schema": "array",
          "description": "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n"
        },
        {
          "name": "refine",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n"
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        },
        {
          "name": "pretty",
          "schema": "boolean",
          "description": "Activate pretty print"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/datasets/{dataset_id}/exports/ical",
      "method": "exportRecordsIcal",
      "httpMethod": "get",
      "tag": "export dataset",
      "typeScriptTag": "exportDataset",
      "description": "Export dataset in ICAL format\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "datasetId",
          "schema": "string",
          "required": true,
          "description": "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n"
        },
        {
          "name": "select",
          "schema": "string",
          "required": false,
          "description": "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n"
        },
        {
          "name": "where",
          "schema": "array",
          "required": false,
          "description": "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "**Deprecated, use `order_by` instead.**\n\nA list of field names, each possibly prefixed with a minus (-).\n\nSorts results according to the specified fields' values. By default, the sort is ascending (from the smallest\nvalue to the biggest value). A minus sign (‘-‘) may be used to perform a descending sort. Sorting is only\navailable on numeric fields (int, double, date and datetime) and on text fields which have the sortable\nannotation.\n"
        },
        {
          "name": "orderBy",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to return in export.\n\nUse -1 (default) to retrieve all records\n"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n"
        },
        {
          "name": "search",
          "schema": "array",
          "required": false,
          "description": "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n"
        },
        {
          "name": "facet",
          "schema": "array",
          "description": "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n"
        },
        {
          "name": "refine",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n"
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/datasets/{dataset_id}/exports/json",
      "method": "exportRecordsJson",
      "httpMethod": "get",
      "tag": "export dataset",
      "typeScriptTag": "exportDataset",
      "description": "Export dataset in JSON format\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "datasetId",
          "schema": "string",
          "required": true,
          "description": "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n"
        },
        {
          "name": "select",
          "schema": "string",
          "required": false,
          "description": "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n"
        },
        {
          "name": "where",
          "schema": "array",
          "required": false,
          "description": "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "**Deprecated, use `order_by` instead.**\n\nA list of field names, each possibly prefixed with a minus (-).\n\nSorts results according to the specified fields' values. By default, the sort is ascending (from the smallest\nvalue to the biggest value). A minus sign (‘-‘) may be used to perform a descending sort. Sorting is only\navailable on numeric fields (int, double, date and datetime) and on text fields which have the sortable\nannotation.\n"
        },
        {
          "name": "orderBy",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to return in export.\n\nUse -1 (default) to retrieve all records\n"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n"
        },
        {
          "name": "search",
          "schema": "array",
          "required": false,
          "description": "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n"
        },
        {
          "name": "facet",
          "schema": "array",
          "description": "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n"
        },
        {
          "name": "refine",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n"
        },
        {
          "name": "pretty",
          "schema": "boolean",
          "description": "Activate pretty print"
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/datasets/{dataset_id}/exports/ov2",
      "method": "exportRecordsOv2",
      "httpMethod": "get",
      "tag": "export dataset",
      "typeScriptTag": "exportDataset",
      "description": "Export dataset in OV2 format\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "datasetId",
          "schema": "string",
          "required": true,
          "description": "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n"
        },
        {
          "name": "select",
          "schema": "string",
          "required": false,
          "description": "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n"
        },
        {
          "name": "where",
          "schema": "array",
          "required": false,
          "description": "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "**Deprecated, use `order_by` instead.**\n\nA list of field names, each possibly prefixed with a minus (-).\n\nSorts results according to the specified fields' values. By default, the sort is ascending (from the smallest\nvalue to the biggest value). A minus sign (‘-‘) may be used to perform a descending sort. Sorting is only\navailable on numeric fields (int, double, date and datetime) and on text fields which have the sortable\nannotation.\n"
        },
        {
          "name": "orderBy",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to return in export.\n\nUse -1 (default) to retrieve all records\n"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n"
        },
        {
          "name": "search",
          "schema": "array",
          "required": false,
          "description": "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n"
        },
        {
          "name": "facet",
          "schema": "array",
          "description": "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n"
        },
        {
          "name": "refine",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n"
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/datasets/{dataset_id}/exports/shp",
      "method": "exportRecordsShp",
      "httpMethod": "get",
      "tag": "export dataset",
      "typeScriptTag": "exportDataset",
      "description": "Export dataset in Esri shapefile (shp) format\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "datasetId",
          "schema": "string",
          "required": true,
          "description": "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n"
        },
        {
          "name": "select",
          "schema": "string",
          "required": false,
          "description": "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n"
        },
        {
          "name": "where",
          "schema": "array",
          "required": false,
          "description": "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "**Deprecated, use `order_by` instead.**\n\nA list of field names, each possibly prefixed with a minus (-).\n\nSorts results according to the specified fields' values. By default, the sort is ascending (from the smallest\nvalue to the biggest value). A minus sign (‘-‘) may be used to perform a descending sort. Sorting is only\navailable on numeric fields (int, double, date and datetime) and on text fields which have the sortable\nannotation.\n"
        },
        {
          "name": "orderBy",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to return in export.\n\nUse -1 (default) to retrieve all records\n"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n"
        },
        {
          "name": "search",
          "schema": "array",
          "required": false,
          "description": "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n"
        },
        {
          "name": "facet",
          "schema": "array",
          "description": "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n"
        },
        {
          "name": "refine",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n"
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/datasets/{dataset_id}/exports/xls",
      "method": "exportRecordsXls",
      "httpMethod": "get",
      "tag": "export dataset",
      "typeScriptTag": "exportDataset",
      "description": "Export dataset in XLS (Excel) format\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "datasetId",
          "schema": "string",
          "required": true,
          "description": "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n"
        },
        {
          "name": "select",
          "schema": "string",
          "required": false,
          "description": "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n"
        },
        {
          "name": "where",
          "schema": "array",
          "required": false,
          "description": "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "**Deprecated, use `order_by` instead.**\n\nA list of field names, each possibly prefixed with a minus (-).\n\nSorts results according to the specified fields' values. By default, the sort is ascending (from the smallest\nvalue to the biggest value). A minus sign (‘-‘) may be used to perform a descending sort. Sorting is only\navailable on numeric fields (int, double, date and datetime) and on text fields which have the sortable\nannotation.\n"
        },
        {
          "name": "orderBy",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to return in export.\n\nUse -1 (default) to retrieve all records\n"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n"
        },
        {
          "name": "search",
          "schema": "array",
          "required": false,
          "description": "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n"
        },
        {
          "name": "facet",
          "schema": "array",
          "description": "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n"
        },
        {
          "name": "refine",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n"
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/datasets/{dataset_id}/facets",
      "method": "getRecordsFacets",
      "httpMethod": "get",
      "tag": "dataset",
      "typeScriptTag": "dataset",
      "description": "Enumerate facets values for records and return a list of values for each facet.\nCan be used to implement guided navigation in large result sets.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#enumerating-facets-values) for more details.\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "datasetId",
          "schema": "string",
          "required": true,
          "description": "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n"
        },
        {
          "name": "where",
          "schema": "array",
          "required": false,
          "description": "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n"
        },
        {
          "name": "facet",
          "schema": "array",
          "description": "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n"
        },
        {
          "name": "refine",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n"
        },
        {
          "name": "search",
          "schema": "array",
          "required": false,
          "description": "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n"
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/datasets/{dataset_id}/feedback",
      "method": "sendDatasetFeedback",
      "httpMethod": "put",
      "tag": "dataset",
      "typeScriptTag": "dataset",
      "description": "Create new feedback entry.\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "datasetId",
          "schema": "string",
          "required": true,
          "description": "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n"
        },
        {
          "name": "comment",
          "schema": "string",
          "description": ""
        },
        {
          "name": "newValues",
          "schema": "object",
          "description": ""
        },
        {
          "name": "recordid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "schema",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/{source}/datasets/{dataset_id}/files/{file_id}",
      "method": "getDatasetFile",
      "httpMethod": "get",
      "tag": "dataset",
      "typeScriptTag": "dataset",
      "description": "Download file\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "datasetId",
          "schema": "string",
          "required": true,
          "description": "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n"
        },
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "thumbnailSize",
          "schema": "string",
          "description": "Set the size of the thumbnail representing the resource (attachment, image or file)"
        }
      ],
      "responses": []
    },
    {
      "url": "/{source}/datasets/{dataset_id}/records",
      "method": "getRecords",
      "httpMethod": "get",
      "tag": "dataset",
      "typeScriptTag": "dataset",
      "description": "Search dataset's records.\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "datasetId",
          "schema": "string",
          "required": true,
          "description": "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n"
        },
        {
          "name": "select",
          "schema": "string",
          "required": false,
          "description": "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n"
        },
        {
          "name": "where",
          "schema": "array",
          "required": false,
          "description": "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n"
        },
        {
          "name": "groupBy",
          "schema": "string",
          "required": false,
          "description": "A group by expression defines a grouping function for an aggregation.\nIt can be:\n - a field name: group result by each value of this field\n - a range function: group result by range\n - a date function: group result by date\nIt is possible to specify a custom name with the 'as name' notation. For instance: group_by='city_field as city'.\n"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "**Deprecated, use `order_by` instead.**\n\nA list of field names, each possibly prefixed with a minus (-).\n\nSorts results according to the specified fields' values. By default, the sort is ascending (from the smallest\nvalue to the biggest value). A minus sign (‘-‘) may be used to perform a descending sort. Sorting is only\navailable on numeric fields (int, double, date and datetime) and on text fields which have the sortable\nannotation.\n"
        },
        {
          "name": "orderBy",
          "schema": "array",
          "required": false,
          "description": "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n"
        },
        {
          "name": "search",
          "schema": "array",
          "required": false,
          "description": "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n"
        },
        {
          "name": "facet",
          "schema": "array",
          "description": "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n"
        },
        {
          "name": "refine",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n"
        },
        {
          "name": "pretty",
          "schema": "boolean",
          "description": "Activate pretty print"
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/datasets/{dataset_id}/records/{record_id}",
      "method": "getRecord",
      "httpMethod": "get",
      "tag": "dataset",
      "typeScriptTag": "dataset",
      "description": "Retrieve a single record based on its ID.\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "datasetId",
          "schema": "string",
          "required": true,
          "description": "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n"
        },
        {
          "name": "recordId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "select",
          "schema": "string",
          "required": false,
          "description": "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n"
        },
        {
          "name": "pretty",
          "schema": "boolean",
          "description": "Activate pretty print"
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/datasets/{dataset_id}/reuses",
      "method": "getDatasetReuses",
      "httpMethod": "get",
      "tag": "dataset",
      "typeScriptTag": "dataset",
      "description": "Get list of reuses\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "datasetId",
          "schema": "string",
          "required": true,
          "description": "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n"
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/datasets/{dataset_id}/reuses/{reuse_id}",
      "method": "getDatasetReuse",
      "httpMethod": "get",
      "tag": "dataset",
      "typeScriptTag": "dataset",
      "description": "Retrieve a single reuse based on its ID.\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "datasetId",
          "schema": "string",
          "required": true,
          "description": "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n"
        },
        {
          "name": "reuseId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/datasets/{dataset_id}/snapshots",
      "method": "getDatasetSnapshots",
      "httpMethod": "get",
      "tag": "dataset",
      "typeScriptTag": "dataset",
      "description": "List of all snapshots for this dataset.\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "datasetId",
          "schema": "string",
          "required": true,
          "description": "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n"
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/datasets/{dataset_id}/snapshots/{snapshot_id}",
      "method": "downloadDatasetSnapshot",
      "httpMethod": "get",
      "tag": "dataset",
      "typeScriptTag": "dataset",
      "description": "List of all snapshots for this dataset.\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "datasetId",
          "schema": "string",
          "required": true,
          "description": "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n"
        },
        {
          "name": "snapshotId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        }
      ],
      "responses": []
    },
    {
      "url": "/{source}/exports/csv",
      "method": "exportDatasetsCsv",
      "httpMethod": "get",
      "tag": "export catalog",
      "typeScriptTag": "exportCatalog",
      "description": "Export catalog (source) in CSV format\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "where",
          "schema": "array",
          "required": false,
          "description": "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n"
        },
        {
          "name": "search",
          "schema": "array",
          "required": false,
          "description": "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n"
        },
        {
          "name": "facet",
          "schema": "array",
          "description": "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n"
        },
        {
          "name": "refine",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n"
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        },
        {
          "name": "includeAppMetas",
          "schema": "boolean",
          "description": "Explicitely request application metas for each datasets.\n"
        },
        {
          "name": "delimiter",
          "schema": "string",
          "required": false,
          "description": "Provide a different delimiter (default ',')."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/exports/json",
      "method": "exportDatasetsJson",
      "httpMethod": "get",
      "tag": "export catalog",
      "typeScriptTag": "exportCatalog",
      "description": "Export catalog (source) in JSON format\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "where",
          "schema": "array",
          "required": false,
          "description": "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n"
        },
        {
          "name": "search",
          "schema": "array",
          "required": false,
          "description": "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n"
        },
        {
          "name": "facet",
          "schema": "array",
          "description": "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n"
        },
        {
          "name": "refine",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n"
        },
        {
          "name": "pretty",
          "schema": "boolean",
          "description": "Activate pretty print"
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        },
        {
          "name": "includeAppMetas",
          "schema": "boolean",
          "description": "Explicitely request application metas for each datasets.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/exports/rdf",
      "method": "exportDatasetsRdf",
      "httpMethod": "get",
      "tag": "export catalog",
      "typeScriptTag": "exportCatalog",
      "description": "Export catalog (source) in RDF/XML format\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "where",
          "schema": "array",
          "required": false,
          "description": "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n"
        },
        {
          "name": "search",
          "schema": "array",
          "required": false,
          "description": "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n"
        },
        {
          "name": "facet",
          "schema": "array",
          "description": "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n"
        },
        {
          "name": "refine",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n"
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        },
        {
          "name": "includeAppMetas",
          "schema": "boolean",
          "description": "Explicitely request application metas for each datasets.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/exports/rss",
      "method": "exportDatasetsRss",
      "httpMethod": "get",
      "tag": "export catalog",
      "typeScriptTag": "exportCatalog",
      "description": "Export catalog (source) in RSS format\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "where",
          "schema": "array",
          "required": false,
          "description": "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n"
        },
        {
          "name": "search",
          "schema": "array",
          "required": false,
          "description": "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n"
        },
        {
          "name": "facet",
          "schema": "array",
          "description": "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n"
        },
        {
          "name": "refine",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n"
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        },
        {
          "name": "includeAppMetas",
          "schema": "boolean",
          "description": "Explicitely request application metas for each datasets.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/exports/ttl",
      "method": "exportDatasetsTtl",
      "httpMethod": "get",
      "tag": "export catalog",
      "typeScriptTag": "exportCatalog",
      "description": "Export catalog (source) in TTL (turtle/rdf) format\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "where",
          "schema": "array",
          "required": false,
          "description": "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n"
        },
        {
          "name": "search",
          "schema": "array",
          "required": false,
          "description": "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n"
        },
        {
          "name": "facet",
          "schema": "array",
          "description": "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n"
        },
        {
          "name": "refine",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n"
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        },
        {
          "name": "includeAppMetas",
          "schema": "boolean",
          "description": "Explicitely request application metas for each datasets.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/exports/xls",
      "method": "exportDatasetsXls",
      "httpMethod": "get",
      "tag": "export catalog",
      "typeScriptTag": "exportCatalog",
      "description": "Export catalog (source) in XLS (Excel) format\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "where",
          "schema": "array",
          "required": false,
          "description": "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n"
        },
        {
          "name": "search",
          "schema": "array",
          "required": false,
          "description": "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n"
        },
        {
          "name": "facet",
          "schema": "array",
          "description": "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n"
        },
        {
          "name": "refine",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n"
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        },
        {
          "name": "includeAppMetas",
          "schema": "boolean",
          "description": "Explicitely request application metas for each datasets.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/facets",
      "method": "getDatasetsFacets",
      "httpMethod": "get",
      "tag": "catalog",
      "typeScriptTag": "catalog",
      "description": "Enumerate facets values for datasets and return a list of values for each facet.\nCan be used to implement guided navigation in large result sets.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#enumerating-facets-values) for more details.\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "facet",
          "schema": "array",
          "description": "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n"
        },
        {
          "name": "refine",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n"
        },
        {
          "name": "exclude",
          "schema": "array",
          "required": false,
          "description": "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n"
        },
        {
          "name": "where",
          "schema": "array",
          "required": false,
          "description": "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n"
        },
        {
          "name": "search",
          "schema": "array",
          "required": false,
          "description": "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n"
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": "Set timezone for datetime fields"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/metadata_templates",
      "method": "getMetadataTemplatesTypes",
      "httpMethod": "get",
      "tag": "metadata",
      "typeScriptTag": "metadata",
      "description": "List of available metadata templates types, each with their endpoints.\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/metadata_templates/{metadata_template_type}",
      "method": "getMetadataTemplatesType",
      "httpMethod": "get",
      "tag": "metadata",
      "typeScriptTag": "metadata",
      "description": "List of metadata templates available for this type.\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "metadataTemplateType",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{source}/metadata_templates/{metadata_template_type}/{metadata_template_name}",
      "method": "getMetadataTemplate",
      "httpMethod": "get",
      "tag": "metadata",
      "typeScriptTag": "metadata",
      "description": "A single metadata_template\n",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n"
        },
        {
          "name": "metadataTemplateType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "metadataTemplateName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://public.opendatasoft.com/api/v2",
  "apiTitle": "opendatasoft",
  "endpoints": 36,
  "sdkMethods": 36,
  "schemas": 16,
  "parameters": 272,
  "difficultyScore": 112,
  "difficulty": "Medium"
}