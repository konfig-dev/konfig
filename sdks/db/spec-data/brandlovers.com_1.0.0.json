{
  "providerName": "brandlovers.com",
  "openApiRaw": "https://raw.githubusercontent.com/brandlovers/marketplace-api-documentation/master/brandlovers-marketplace-api-v1.json",
  "securitySchemes": {
    "authorization": {
      "description": "Authorization token. The Authorization token can be found in your Admin console.",
      "in": "header",
      "name": "authorization",
      "type": "apiKey"
    }
  },
  "homepage": "brandlovers.com",
  "apiVersion": "1.0.0",
  "methods": [
    {
      "url": "/order/{orderId}",
      "method": "/order/{orderId}Get",
      "httpMethod": "get",
      "tag": "order",
      "typeScriptTag": "order",
      "description": "Returns all details of a order",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "Unique Id of this order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/order/{orderId}/shipment/cancel",
      "method": "/order/{orderId}/shipment/cancelPost",
      "httpMethod": "post",
      "tag": "order",
      "typeScriptTag": "order",
      "description": "Confirm shipment canceletion (when requested by the customer) or failure to deliver",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "Unique Order Id"
        },
        {
          "name": "courier",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "cte",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "info",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "occurredAt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sellerShipmentId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tranckingUrl",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/order/{orderId}/shipment/delivered",
      "method": "/order/{orderId}/shipment/deliveredPost",
      "httpMethod": "post",
      "tag": "order",
      "typeScriptTag": "order",
      "description": "Confirms that a shipment was delivered",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "Unique Order Id"
        },
        {
          "name": "courier",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "cte",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "invoice",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "occurredAt",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sellerShipmentId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "trackingUrl",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/order/{orderId}/shipment/exchange",
      "method": "/order/{orderId}/shipment/exchangePost",
      "httpMethod": "post",
      "tag": "order",
      "typeScriptTag": "order",
      "description": "Confirm item exchange",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "Unique Order Id"
        },
        {
          "name": "courier",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "cte",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "info",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "occurredAt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sellerShipmentId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tranckingUrl",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/order/{orderId}/shipment/return",
      "method": "/order/{orderId}/shipment/returnPost",
      "httpMethod": "post",
      "tag": "order",
      "typeScriptTag": "order",
      "description": "Confirm order item return and refund",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "Order unique Id"
        },
        {
          "name": "courier",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "cte",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "info",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "occurredAt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sellerShipmentId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tranckingUrl",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/order/{orderId}/shipment/sent",
      "method": "/order/{orderId}/shipment/sentPost",
      "httpMethod": "post",
      "tag": "order",
      "typeScriptTag": "order",
      "description": "Update new order to include shipment information",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "Unique Order Id"
        },
        {
          "name": "courier",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "cte",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "invoice",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "occurredAt",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sellerShipmentId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "trackingUrl",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/orders",
      "method": "/ordersGet",
      "httpMethod": "get",
      "tag": "orders",
      "typeScriptTag": "orders",
      "description": "Returns orders details",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Number or items to skip when executing query. List starts at zero. If omitted will default to zero. Use this conjuction with `limit` to paginate across the results."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number or items to return when executing query. Defaults to 10. Use this conjuction with `offset` to paginate across the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/shipments/delivered",
      "method": "/orders/shipments/deliveredGet",
      "httpMethod": "get",
      "tag": "orders",
      "typeScriptTag": "orders",
      "description": "Returns list of shipments",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Query by shippment status."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Number or items to skip when executing query. List starts at zero. If omitted will default to zero. Use this conjuction with `limit` to paginate across the results."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number or items to return when executing query. Defaults to 10. Use this conjuction with `offset` to paginate across the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/shipments/delivered",
      "method": "/orders/shipments/deliveredPost",
      "httpMethod": "post",
      "tag": "orders",
      "typeScriptTag": "orders",
      "description": "Bulk update of order shipments",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "shipments",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/orders/shipments/shipped",
      "method": "/orders/shipments/shippedGet",
      "httpMethod": "get",
      "tag": "orders",
      "typeScriptTag": "orders",
      "description": "Returns a list of shipments shipped",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Product status."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Number or items to skip when executing query. List starts at zero. If omitted will default to zero. Use this conjuction with `limit` to paginate across the results."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number or items to return when executing query. Defaults to 10. Use this conjuction with `offset` to paginate across the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/shipments/shipped",
      "method": "/orders/shipments/shippedPost",
      "httpMethod": "post",
      "tag": "orders",
      "typeScriptTag": "orders",
      "description": "Bulk update of order shipments",
      "parameters": [
        {
          "name": "shipments",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/orders/status/approved",
      "method": "/orders/status/approvedGet",
      "httpMethod": "get",
      "tag": "orders",
      "typeScriptTag": "orders",
      "description": "Return list of approved orders",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Number or items to skip when executing query. List starts at zero. If omitted will default to zero. Use this conjuction with `limit` to paginate across the results."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number or items to return when executing query. Defaults to 100, max 200. Use this in conjuction with `offset` to paginate across the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/status/canceled",
      "method": "/orders/status/canceledGet",
      "httpMethod": "get",
      "tag": "orders",
      "typeScriptTag": "orders",
      "description": "Returns lists of canceled orders",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Number or items to skip when executing query. List starts at zero. If omitted will default to zero. Use this conjuction with `limit` to paginate across the results."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number or items to return when executing query. Default 100, max 250. Use this conjuction with `offset` to paginate across the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/status/delivered",
      "method": "/orders/status/deliveredGet",
      "httpMethod": "get",
      "tag": "orders",
      "typeScriptTag": "orders",
      "description": "Returns a list of orders successfully delivered associated with this seller.",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Number or items to skip when executing query. List starts at zero. If omitted will default to zero. Use this conjuction with `limit` to paginate across the results."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number or items to return when executing query. Defaults to 10. Use this conjuction with `offset` to paginate across the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/status/new",
      "method": "/orders/status/newGet",
      "httpMethod": "get",
      "tag": "orders",
      "typeScriptTag": "orders",
      "description": "Returns a list of orders flagged as new.",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Number or items to skip when executing query. List starts at zero. If omitted will default to zero. Use this conjuction with `limit` to paginate across the results."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number or items to return when executing query. Defaults to 100. Max 250. Use this conjuction with `offset` to paginate across the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/status/partiallyDelivered",
      "method": "/orders/status/partiallyDeliveredGet",
      "httpMethod": "get",
      "tag": "orders",
      "typeScriptTag": "orders",
      "description": "Returns a list of partially deliverd orders",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Number or items to skip when executing query. List starts at zero. If omitted will default to zero. Use this conjuction with `limit` to paginate across the results."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number or items to return when executing query. Defaults to 100. Max 250. Use this conjuction with `offset` to paginate across the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/status/partiallySent",
      "method": "/orders/status/partiallySentGet",
      "httpMethod": "get",
      "tag": "orders",
      "typeScriptTag": "orders",
      "description": "Returns a list of orders partially fullfiled",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Number or items to skip when executing query. List starts at zero. If omitted will default to zero. Use this conjuction with `limit` to paginate across the results."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number or items to return when executing query. Defaults to 100. Use this conjuction with `offset` to paginate across the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/status/sent",
      "method": "/orders/status/sentGet",
      "httpMethod": "get",
      "tag": "orders",
      "typeScriptTag": "orders",
      "description": "Returns a list with orders fully sent",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Number or items to skip when executing query. List starts at zero. If omitted will default to zero. Use this conjuction with `limit` to paginate across the results."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number or items to return when executing query. Defaults to 10. Use this conjuction with `offset` to paginate across the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/product",
      "method": "/productPost",
      "httpMethod": "post",
      "tag": "product",
      "typeScriptTag": "product",
      "description": "Create a new product to the marketplace",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "attributes",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "brand",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "categories",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dimensions",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "giftWrap",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "gtin",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "images",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "price",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "productGroupId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "productId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "skuSellerId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "stock",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "videos",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/product/{skuSellerId}",
      "method": "/product/{skuSellerId}Get",
      "httpMethod": "get",
      "tag": "product",
      "typeScriptTag": "product",
      "description": "Returns details of a single product using the seller `skuSellerId`",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "skuSellerId",
          "schema": "string",
          "required": true,
          "description": "SKU ID do Lojista."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/product/{skuSellerId}",
      "method": "/product/{skuSellerId}Put",
      "httpMethod": "put",
      "tag": "products",
      "typeScriptTag": "products",
      "description": "Update product details",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "skuSellerId",
          "schema": "string",
          "required": true,
          "description": "Unique Product Id (SKU) in the seller system that will be updated."
        },
        {
          "name": "attributes",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "brand",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "categories",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dimensions",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "giftWrap",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "gtin",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "images",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "price",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "productGroupId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "productId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "skuSellerId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "stock",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "videos",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/product/{skuSellerId}/prices",
      "method": "/product/{skuSellerId}/pricesPut",
      "httpMethod": "put",
      "tag": "product",
      "typeScriptTag": "product",
      "description": "Allows seller to update prices of a single SKU",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "skuSellerId",
          "schema": "string",
          "required": true,
          "description": "Product SKU"
        },
        {
          "name": "default",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "offer",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/product/{skuSellerId}/status",
      "method": "/product/{skuSellerId}/statusPut",
      "httpMethod": "put",
      "tag": "product",
      "typeScriptTag": "product",
      "description": "Enable/disable a single product in the Marketplace",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "skuSellerId",
          "schema": "string",
          "required": true,
          "description": "Unique Product Id (SKU) in the seller system"
        },
        {
          "name": "active",
          "schema": "boolean",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/product/{skuSellerId}/stock",
      "method": "/product/{skuSellerId}/stockPut",
      "httpMethod": "put",
      "tag": "product",
      "typeScriptTag": "product",
      "description": "Update a single product stock",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "skuSellerId",
          "schema": "string",
          "required": true,
          "description": "Unique Product Id (SKU) in the seller system that will be updated"
        },
        {
          "name": "crossDockingTime",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/products",
      "method": "/productsGet",
      "httpMethod": "get",
      "tag": "products",
      "typeScriptTag": "products",
      "description": "Returns a list of products loaded into BrandLovers Marketplace",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Number or items to skip when executing query. List starts at zero. If omitted will default to zero. Use this conjuction with `limit` to paginate across the results."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to retun. Defaults to 100. Max alowed is 200. Use this conjuction with `offset` to paginate across the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/products",
      "method": "/productsPost",
      "httpMethod": "post",
      "tag": "products",
      "typeScriptTag": "products",
      "description": "Allows new products from the seller to be loaded into the marketplace",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        }
      ],
      "responses": []
    },
    {
      "url": "/products/prices",
      "method": "/products/pricesPut",
      "httpMethod": "put",
      "tag": "products",
      "typeScriptTag": "products",
      "description": "Allows bulk update of product prices.",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        }
      ],
      "responses": []
    },
    {
      "url": "/products/status",
      "method": "/products/statusGet",
      "httpMethod": "get",
      "tag": "products",
      "typeScriptTag": "products",
      "description": "Returns seller products status in the marketplace",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Number or items to skip when executing query. List starts at zero. If omitted will default to zero. Use this conjuction with `limit` to paginate across the results."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to return in this query. Defaults to 250. Maximum 1000. Use this conjuction with `offset` to paginate across the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/status",
      "method": "/products/statusPut",
      "httpMethod": "put",
      "tag": "products",
      "typeScriptTag": "products",
      "description": "Bulk enable/disable products in the marketplace",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        }
      ],
      "responses": []
    },
    {
      "url": "/products/status/selling",
      "method": "/products/status/sellingGet",
      "httpMethod": "get",
      "tag": "products",
      "typeScriptTag": "products",
      "description": "Returns products that are successfully listed for sale.",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Number or items to skip when executing query. List starts at zero. If omitted will default to zero. Use this conjuction with `limit` to paginate across the results."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number or items to return when executing query. Defaults to 10. Use this conjuction with `offset` to paginate across the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/stocks",
      "method": "/products/stocksPut",
      "httpMethod": "put",
      "tag": "products",
      "typeScriptTag": "products",
      "description": "Bulk product stock update",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        }
      ],
      "responses": []
    },
    {
      "url": "/ticket",
      "method": "/ticketPost",
      "httpMethod": "post",
      "tag": "tickets",
      "typeScriptTag": "tickets",
      "description": "Creates a new trouble ticket",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "body",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "customer",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "message",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/ticket/{ticketId}/message",
      "method": "/ticket/{ticketId}/messagePost",
      "httpMethod": "post",
      "tag": "tickets",
      "typeScriptTag": "tickets",
      "description": "Add new message to trouble ticket",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "ticketId",
          "schema": "string",
          "required": true,
          "description": "Trouble ticket ID."
        },
        {
          "name": "body",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "visibility",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/ticket/{ticketId}/messages",
      "method": "/ticket/{ticketId}/messagesGet",
      "httpMethod": "get",
      "tag": "tickets",
      "typeScriptTag": "tickets",
      "description": "Get trouble ticket messages",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "ticketId",
          "schema": "string",
          "required": true,
          "description": "Trouble ticket ID."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Number or items to skip when executing query. List starts at zero. If omitted will default to zero. Use this conjuction with `limit` to paginate across the results."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number or items to return when executing query. Defaults to 10. Use this conjuction with `offset` to paginate across the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ticket/{ticketId}/status",
      "method": "/ticket/{ticketId}/statusPut",
      "httpMethod": "put",
      "tag": "tickets",
      "typeScriptTag": "tickets",
      "description": "Update trouble ticket status",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "ticketId",
          "schema": "string",
          "required": true,
          "description": "Trouble ticket unique identification"
        },
        {
          "name": "ticketStatus",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/tickets",
      "method": "/ticketsGet",
      "httpMethod": "get",
      "tag": "tickets",
      "typeScriptTag": "tickets",
      "description": "Get customers trouble tickets",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization token. The Authorization token can be found in your Admin console."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Query by trouble ticket status"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Number or items to skip when executing query. List starts at zero. If omitted will default to zero. Use this conjuction with `limit` to paginate across the results."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number or items to return when executing query. Defaults to 10. Use this conjuction with `offset` to paginate across the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.brandlovers.com/marketplace/v1",
  "apiDescription": "Allows sellers to: 1) Load products definitions to the BrandLovers marktplace. 2) Receive and update orders status. 3) Receive and update shipping information. 4) Receive and update customer tickets. All requests consume and return application/json content. All request must be authenticated and use HTTPS.",
  "apiTitle": "BrandLovers Marketplace API V1",
  "endpoints": 31,
  "sdkMethods": 36,
  "schemas": 52,
  "parameters": 169,
  "difficultyScore": 104.25,
  "difficulty": "Medium"
}