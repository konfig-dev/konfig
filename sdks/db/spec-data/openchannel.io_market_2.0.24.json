{
  "providerName": "openchannel.io",
  "openApiRaw": "https://api.swaggerhub.com/apis/OpenChannel/Market-API/2.0.24",
  "securitySchemes": {
    "basicAuth": {
      "scheme": "basic",
      "type": "http"
    }
  },
  "homepage": "openchannel.io",
  "serviceName": "market",
  "apiVersion": "2.0.24",
  "methods": [
    {
      "url": "/apps",
      "method": "/appsGet",
      "httpMethod": "get",
      "tag": "apps : Find and modify apps",
      "description": "Returns a paginated list of APPROVED or SUSPENDED apps",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "A query document. Example: {'name':'MyApp'} matches all the apps that have the name 'MyApp'"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "A sort document. Example: {'name':1} sorts the results by name in ascending order"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The result set page number to be returned"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return per page"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": false,
          "description": "The unique id of the user requesting this resource"
        },
        {
          "name": "isOwner",
          "schema": "boolean",
          "required": false,
          "description": "Whether this result should only contain apps that are owned by this user"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "Pages of app results"
        }
      ]
    },
    {
      "url": "/apps",
      "method": "/appsPost",
      "httpMethod": "post",
      "tag": "apps : Find and modify apps",
      "description": "Adds a new app for this developer",
      "parameters": [
        {
          "name": "developerId",
          "schema": "string",
          "required": true,
          "description": "The unique id of the developer that is adding this app"
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The name of the app"
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "The type for this app"
        },
        {
          "name": "model",
          "schema": "string",
          "required": false,
          "description": "A JSON object representing the pricing model type for this app"
        },
        {
          "name": "customData",
          "schema": "string",
          "required": false,
          "description": "A custom JSON object that you can create and attach to this record"
        },
        {
          "name": "attributes",
          "schema": "string",
          "required": false,
          "description": "A custom set of app attributes defined by the administrator and attached to this app"
        },
        {
          "name": "restrict",
          "schema": "string",
          "required": false,
          "description": "JSON object to restrict users from owning or viewing this app. Example: {'view':{'country':['Canada','Mexico']},'own':{'country':['Canada','Mexico']}} restricts users from canada and mexico from viewing or owning this app"
        },
        {
          "name": "allow",
          "schema": "string",
          "required": false,
          "description": "JSON object to restrict users from owning or viewing this app. Example: {'view':{'country':['Canada','Mexico']},'own':{'country':['Canada','Mexico']}} restricts users from canada and mexico from viewing or owning this app"
        },
        {
          "name": "access",
          "schema": "string",
          "required": false,
          "description": "JSON array of data access requirements"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An AppVersion"
        }
      ]
    },
    {
      "url": "/apps/bySafeName/{safeName}",
      "method": "/apps/bySafeName/{safeName}Get",
      "httpMethod": "get",
      "tag": "apps : Find and modify apps",
      "description": "Returns a single APPROVED or SUSPENDED app",
      "parameters": [
        {
          "name": "safeName",
          "schema": "string",
          "required": true,
          "description": "The safeName of the App to be located"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": false,
          "description": "The unique id of the user that is requesting this resource"
        },
        {
          "name": "trackViews",
          "schema": "boolean",
          "required": false,
          "description": "Whether this call should be tracked as a 'view' for this app. Default is false."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An app"
        }
      ]
    },
    {
      "url": "/apps/textSearch",
      "method": "/apps/textSearchGet",
      "httpMethod": "get",
      "tag": "apps : Find and modify apps",
      "description": "Searches through the text of fields to find APPROVED or SUSPENDED apps",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "A query document. Example: {'name':'MyApp'} matches all the documents that have the name 'MyApp'"
        },
        {
          "name": "text",
          "schema": "string",
          "required": true,
          "description": "The text to search for."
        },
        {
          "name": "fields",
          "schema": "string",
          "required": true,
          "description": "A JSON array containing all the fields to be searched through. Example: ['name', 'customData.description']"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The result set page number to be returned"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return per page"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": false,
          "description": "The unique id of the user requesting this resource"
        },
        {
          "name": "isOwned",
          "schema": "boolean",
          "required": false,
          "description": "Whether this result should only contain apps that are owned by this user"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "Pages of search results"
        }
      ]
    },
    {
      "url": "/apps/versions",
      "method": "/apps/versionsGet",
      "httpMethod": "get",
      "tag": "apps : Find and modify apps",
      "description": "Returns a paginated list of AppVersions",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "A query document. Example: {'name':'MyApp'} matches all the apps that have the name 'MyApp'"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "A sort document. Example: {'name':1} sorts the results by name in ascending order"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The result set page number to be returned"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return per page"
        },
        {
          "name": "developerId",
          "schema": "string",
          "required": false,
          "description": "The unique id of the developer requesting this resource"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "Pages of AppVersion results"
        }
      ]
    },
    {
      "url": "/apps/{appId}",
      "method": "/apps/{appId}Delete",
      "httpMethod": "delete",
      "tag": "apps : Find and modify apps",
      "description": "Removes app and all versions",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The id of the App to be removed"
        },
        {
          "name": "developerId",
          "schema": "string",
          "required": true,
          "description": "The unique id of the developer that is removing this app"
        }
      ],
      "responses": []
    },
    {
      "url": "/apps/{appId}",
      "method": "/apps/{appId}Get",
      "httpMethod": "get",
      "tag": "apps : Find and modify apps",
      "description": "Returns a single APPROVED or SUSPENDED app",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The id of the App to be located"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": false,
          "description": "The unique id of the user that is requesting this resource"
        },
        {
          "name": "trackViews",
          "schema": "boolean",
          "required": false,
          "description": "Whether this call should be tracked as a 'view' for this app. Default is false."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An app"
        }
      ]
    },
    {
      "url": "/apps/{appId}/live",
      "method": "/apps/{appId}/livePost",
      "httpMethod": "post",
      "tag": "apps : Find and modify apps",
      "description": "Change the live app to another, previously approved version",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The id of the App to be changed"
        },
        {
          "name": "developerId",
          "schema": "string",
          "required": true,
          "description": "The unique id of the developer that is changing this AppVersion"
        },
        {
          "name": "version",
          "schema": "string",
          "required": true,
          "description": "The new version of the live App"
        }
      ],
      "responses": []
    },
    {
      "url": "/apps/{appId}/publish",
      "method": "/apps/{appId}/publishPost",
      "httpMethod": "post",
      "tag": "apps : Find and modify apps",
      "description": "Publishes the current working version of the app to the marketplace",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The id of the app to be published"
        },
        {
          "name": "developerId",
          "schema": "string",
          "required": true,
          "description": "The unique id of the developer that is modifying this app"
        },
        {
          "name": "version",
          "schema": "integer",
          "required": true,
          "description": "The version of the app to be published"
        },
        {
          "name": "autoApprove",
          "schema": "boolean",
          "required": false,
          "description": "If true, this AppVersion is automatically approved and becomes immediately available to end users"
        }
      ],
      "responses": []
    },
    {
      "url": "/apps/{appId}/versions/{version}",
      "method": "/apps/{appId}/versions/{version}Delete",
      "httpMethod": "delete",
      "tag": "apps : Find and modify apps",
      "description": "Removes AppVersion",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The id of the App to be removed"
        },
        {
          "name": "version",
          "schema": "string",
          "required": true,
          "description": "The version of the App to be removed"
        },
        {
          "name": "developerId",
          "schema": "string",
          "required": true,
          "description": "The unique id of the developer that is removing this app"
        }
      ],
      "responses": []
    },
    {
      "url": "/apps/{appId}/versions/{version}",
      "method": "/apps/{appId}/versions/{version}Get",
      "httpMethod": "get",
      "tag": "apps : Find and modify apps",
      "description": "Returns a single AppVersion",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The id of the App to be located"
        },
        {
          "name": "version",
          "schema": "integer",
          "required": true,
          "description": "The version number of the app"
        },
        {
          "name": "developerId",
          "schema": "string",
          "required": false,
          "description": "The unique id of the developer that is requesting this resource"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An AppVersion"
        }
      ]
    },
    {
      "url": "/apps/{appId}/versions/{version}",
      "method": "/apps/{appId}/versions/{version}Patch",
      "httpMethod": "patch",
      "tag": "apps : Find and modify apps",
      "description": "Updates the app fields or creates a new version",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The id of the App to be updated"
        },
        {
          "name": "version",
          "schema": "string",
          "required": true,
          "description": "The version of the App to be updated"
        },
        {
          "name": "developerId",
          "schema": "string",
          "required": true,
          "description": "The unique id of the developer that is updating this app"
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "The name of the app"
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "The type for this app"
        },
        {
          "name": "model",
          "schema": "string",
          "required": false,
          "description": "A JSON object representing the pricing model type for this app"
        },
        {
          "name": "customData",
          "schema": "string",
          "required": false,
          "description": "A custom JSON object that you can create and attach to this record"
        },
        {
          "name": "attributes",
          "schema": "string",
          "required": false,
          "description": "A custom set of app attributes defined by the administrator and attached to this app"
        },
        {
          "name": "restrict",
          "schema": "string",
          "required": false,
          "description": "JSON object to restrict users from purchasing or viewing this app. Example: {'view':{'country':['Canada','Mexico']},'purchase':{'country':['Canada','Mexico']}} restricts users from canada and mexico from viewing or purchasing this app"
        },
        {
          "name": "allow",
          "schema": "string",
          "required": false,
          "description": "JSON object to allow users to purchase or view this app. Example: {'purchase':{'country':['Canada','Mexico']}} allows only users from canada and mexico to purchase this app"
        },
        {
          "name": "access",
          "schema": "string",
          "required": false,
          "description": "JSON array of data access requirements"
        },
        {
          "name": "approvalRequired",
          "schema": "string",
          "required": false,
          "description": "False if updates should skip the approval process and be available immediately. Default is True"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An AppVersion"
        }
      ]
    },
    {
      "url": "/apps/{appId}/versions/{version}",
      "method": "/apps/{appId}/versions/{version}Post",
      "httpMethod": "post",
      "tag": "apps : Find and modify apps",
      "description": "Updates the app or creates a new version",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The id of the App to be updated"
        },
        {
          "name": "version",
          "schema": "string",
          "required": true,
          "description": "The version of the App to be updated"
        },
        {
          "name": "developerId",
          "schema": "string",
          "required": true,
          "description": "The unique id of the developer that is updating this app"
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "The name of the app"
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "The type for this app"
        },
        {
          "name": "model",
          "schema": "string",
          "required": false,
          "description": "A JSON object representing the pricing model type for this app"
        },
        {
          "name": "customData",
          "schema": "string",
          "required": false,
          "description": "A custom JSON object that you can create and attach to this record"
        },
        {
          "name": "attributes",
          "schema": "string",
          "required": false,
          "description": "A custom set of app attributes defined by the administrator and attached to this app"
        },
        {
          "name": "restrict",
          "schema": "string",
          "required": false,
          "description": "JSON object to restrict users from purchasing or viewing this app. Example: {'view':{'country':['Canada','Mexico']},'purchase':{'country':['Canada','Mexico']}} restricts users from canada and mexico from viewing or purchasing this app"
        },
        {
          "name": "allow",
          "schema": "string",
          "required": false,
          "description": "JSON object to allow users to purchase or view this app. Example: {'purchase':{'country':['Canada','Mexico']}} allows only users from canada and mexico to purchase this app"
        },
        {
          "name": "access",
          "schema": "string",
          "required": false,
          "description": "JSON array of data access requirements"
        },
        {
          "name": "approvalRequired",
          "schema": "string",
          "required": false,
          "description": "False if updates should skip the approval process and be available immediately. Default is True"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An AppVersion"
        }
      ]
    },
    {
      "url": "/apps/{appId}/versions/{version}/status",
      "method": "/apps/{appId}/versions/{version}/statusPost",
      "httpMethod": "post",
      "tag": "apps : Find and modify apps",
      "description": "Allows a developer or administrator to change the status of apps",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The id of the App to be updated"
        },
        {
          "name": "version",
          "schema": "integer",
          "required": true,
          "description": "The version of the App to be updated"
        },
        {
          "name": "developerId",
          "schema": "string",
          "required": false,
          "description": "The unique id of the developer that is modifying this app"
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The new status for this app. Can be either 'inReview', 'approved', 'suspended' or 'rejected'"
        },
        {
          "name": "modifiedBy",
          "schema": "string",
          "required": false,
          "description": "The role initiating this status change. Can be either 'developer' or 'administrator' (default)"
        },
        {
          "name": "reason",
          "schema": "string",
          "required": false,
          "description": "The reason for this status change"
        }
      ],
      "responses": []
    },
    {
      "url": "/custom-gateway/payment/{ownershipId}",
      "method": "/customGateway/payment/{ownershipId}Post",
      "httpMethod": "post",
      "tag": "custom-gateway : Process payments and refunds",
      "description": "Adds a payment for an app on behalf of a user",
      "parameters": [
        {
          "name": "ownershipId",
          "schema": "string",
          "required": true,
          "description": "The id of the ownership record involved in this transaction"
        },
        {
          "name": "amount",
          "schema": "integer",
          "required": true,
          "description": "The total amount paid in cents"
        },
        {
          "name": "date",
          "schema": "integer",
          "required": false,
          "description": "The date (in milliseconds) of when this payment was made"
        },
        {
          "name": "feeAmount",
          "schema": "integer",
          "required": false,
          "description": "The fee (in cents) paid to a payment processors or third parties to process this payment. Default is 0."
        },
        {
          "name": "marketplaceAmount",
          "schema": "integer",
          "required": false,
          "description": "The amount (in cents) paid to the marketplace owner as a commission for the purchase of this app. Defaults based on the commission amount configured for this marketplace."
        },
        {
          "name": "developerAmount",
          "schema": "integer",
          "required": false,
          "description": "The amount (in cents) paid to the owner of the app. Defaults based on the commission amount configured for this marketplace."
        },
        {
          "name": "customData",
          "schema": "string",
          "required": false,
          "description": "A custom JSON object to attach to this transaction"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A transaction for an app initiated by a user"
        }
      ]
    },
    {
      "url": "/custom-gateway/refund/{ownershipId}",
      "method": "/customGateway/refund/{ownershipId}Post",
      "httpMethod": "post",
      "tag": "custom-gateway : Process payments and refunds",
      "description": "Fully or partially refund payment for an app on behalf of a user",
      "parameters": [
        {
          "name": "ownershipId",
          "schema": "string",
          "required": true,
          "description": "The id of the ownership record involved in this transaction"
        },
        {
          "name": "amount",
          "schema": "integer",
          "required": true,
          "description": "The total amount refunded in cents"
        },
        {
          "name": "date",
          "schema": "integer",
          "required": false,
          "description": "The date (in milliseconds) of when this refund was made"
        },
        {
          "name": "feeAmount",
          "schema": "integer",
          "required": false,
          "description": "The fee (in cents) recovered from a payment processor or third party to process this payment. The default value is 0"
        },
        {
          "name": "marketplaceAmount",
          "schema": "integer",
          "required": false,
          "description": "The amount (in cents) recovered from the marketplace owner as a commission refund for the purchase of this app"
        },
        {
          "name": "developerAmount",
          "schema": "integer",
          "required": false,
          "description": "The amount (in cents) recovered from the owner of the app"
        },
        {
          "name": "customData",
          "schema": "string",
          "required": false,
          "description": "A custom JSON object to attach to this transaction"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A transaction for an app initiated by a user"
        }
      ]
    },
    {
      "url": "/developerAccounts",
      "method": "/developerAccountsGet",
      "httpMethod": "get",
      "tag": "developerAccounts : Find and modify developer accounts",
      "description": "Returns a paginated list of developerAccounts",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "A query document. Example: {'name':'NASA'} matches all the developerAccounts that have the name 'NASA'"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "A sort document. Example: {'name':1} sorts the results by name in ascending order"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The result set page number to be returned"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return per page"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "Pages of developerAccount results"
        }
      ]
    },
    {
      "url": "/developerAccounts/{developerAccountId}",
      "method": "/developerAccounts/{developerAccountId}Delete",
      "httpMethod": "delete",
      "tag": "developerAccounts : Find and modify developer accounts",
      "description": "Removes the developer account",
      "parameters": [
        {
          "name": "developerAccountId",
          "schema": "string",
          "required": true,
          "description": "The id of the developer account to be updated"
        }
      ],
      "responses": []
    },
    {
      "url": "/developerAccounts/{developerAccountId}",
      "method": "/developerAccounts/{developerAccountId}Get",
      "httpMethod": "get",
      "tag": "developerAccounts : Find and modify developer accounts",
      "description": "Returns a single developer account",
      "parameters": [
        {
          "name": "developerAccountId",
          "schema": "string",
          "required": true,
          "description": "The id of the developer account to be located"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A Developer Account"
        }
      ]
    },
    {
      "url": "/developerAccounts/{developerAccountId}",
      "method": "/developerAccounts/{developerAccountId}Patch",
      "httpMethod": "patch",
      "tag": "developerAccounts : Find and modify developer accounts",
      "description": "Updates the developer account fields",
      "parameters": [
        {
          "name": "developerAccountId",
          "schema": "string",
          "required": true,
          "description": "The id of the developer account to be updated"
        },
        {
          "name": "developerId",
          "schema": "string",
          "required": true,
          "description": "The id of the developer that this account belongs to"
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": "The contact email address"
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "The name for the account"
        },
        {
          "name": "customData",
          "schema": "string",
          "required": false,
          "description": "A custom JSON object that you can create and attach to this record"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A Developer Account"
        }
      ]
    },
    {
      "url": "/developerAccounts/{developerAccountId}",
      "method": "/developerAccounts/{developerAccountId}Post",
      "httpMethod": "post",
      "tag": "developerAccounts : Find and modify developer accounts",
      "description": "Updates the developer account or adds the developer account if it doesn't exist",
      "parameters": [
        {
          "name": "developerAccountId",
          "schema": "string",
          "required": true,
          "description": "The id of the developer account to be updated"
        },
        {
          "name": "developerId",
          "schema": "string",
          "required": true,
          "description": "The id of the developer that this account belongs to"
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": "The contact email address"
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "The name for the account"
        },
        {
          "name": "customData",
          "schema": "string",
          "required": false,
          "description": "A custom JSON object that you can create and attach to this record"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A Developer Account"
        }
      ]
    },
    {
      "url": "/developers",
      "method": "/developersGet",
      "httpMethod": "get",
      "tag": "developers : Find and modify developers",
      "description": "Returns a paginated list of developers",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "A query document. Example: {'name':'John'} matches all the developers that have the name 'John'"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "A sort document. Example: {'name':1} sorts the results by name in ascending order"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The result set page number to be returned"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return per page"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "Pages of developer results"
        }
      ]
    },
    {
      "url": "/developers/{developerId}",
      "method": "/developers/{developerId}Delete",
      "httpMethod": "delete",
      "tag": "developers : Find and modify developers",
      "description": "Removes a single developer",
      "parameters": [
        {
          "name": "developerId",
          "schema": "string",
          "required": true,
          "description": "The id of the developer to be removed"
        }
      ],
      "responses": []
    },
    {
      "url": "/developers/{developerId}",
      "method": "/developers/{developerId}Get",
      "httpMethod": "get",
      "tag": "developers : Find and modify developers",
      "description": "Returns a single developer",
      "parameters": [
        {
          "name": "developerId",
          "schema": "string",
          "required": true,
          "description": "The id of the developer to be located"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A Developer"
        }
      ]
    },
    {
      "url": "/developers/{developerId}",
      "method": "/developers/{developerId}Patch",
      "httpMethod": "patch",
      "tag": "developers : Find and modify developers",
      "description": "Updates the developer fields",
      "parameters": [
        {
          "name": "developerId",
          "schema": "string",
          "required": true,
          "description": "The id of the developer to be located"
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "The type for this developer"
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": "The developer's email"
        },
        {
          "name": "username",
          "schema": "string",
          "required": false,
          "description": "The developer's username"
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "The developer's name"
        },
        {
          "name": "customData",
          "schema": "string",
          "required": false,
          "description": "A custom JSON object that you can create and attach to this record"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A Developer"
        }
      ]
    },
    {
      "url": "/developers/{developerId}",
      "method": "/developers/{developerId}Post",
      "httpMethod": "post",
      "tag": "developers : Find and modify developers",
      "description": "Updates the developer record or adds the developer if it doesn't exist",
      "parameters": [
        {
          "name": "developerId",
          "schema": "string",
          "required": true,
          "description": "The id of the developer to be located"
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "The type for this developer"
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": "The developer's email"
        },
        {
          "name": "username",
          "schema": "string",
          "required": false,
          "description": "The developer's username"
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "The developer's name"
        },
        {
          "name": "customData",
          "schema": "string",
          "required": false,
          "description": "A custom JSON object that you can create and attach to this record"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A Developer"
        }
      ]
    },
    {
      "url": "/events/{eventId}",
      "method": "/events/{eventId}Get",
      "httpMethod": "get",
      "tag": "events : Find events",
      "description": "Returns an event",
      "parameters": [
        {
          "name": "eventId",
          "schema": "string",
          "required": true,
          "description": "The id of the event"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/files",
      "method": "/filesGet",
      "httpMethod": "get",
      "tag": "files : Upload files ",
      "description": "Returns a paginated list of files",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "A query document. Example: {'name':'file.txt'} matches all the files that have the name 'file.txt'"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "A sort document. Example: {'name':1} sorts the results by name in ascending order"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The result set page number to be returned"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return per page"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "The file ids of the uploaded file"
        }
      ]
    },
    {
      "url": "/files",
      "method": "/filesPost",
      "httpMethod": "post",
      "tag": "files : Upload files ",
      "description": "Uploads a file.",
      "parameters": [
        {
          "name": "isPrivate",
          "schema": "boolean",
          "required": false,
          "description": "If true, this file will be protected as a private file and require the generation of a signed URL in order to download using the Download File API. The default is false."
        },
        {
          "name": "hash",
          "schema": "string",
          "required": false,
          "description": "A comma separated list of hashes to return in order to verify file integrity."
        },
        {
          "name": "file",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "The file ids of the uploaded file"
        }
      ]
    },
    {
      "url": "/files/byIdOrUrl",
      "method": "/files/byIdOrUrlGet",
      "httpMethod": "get",
      "tag": "files : Upload files ",
      "description": "Get the details for a file.",
      "parameters": [
        {
          "name": "fileIdOrUrl",
          "schema": "string",
          "required": true,
          "description": "The fileId or fileUrl of the file to be returned"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "The file ids of the uploaded file"
        }
      ]
    },
    {
      "url": "/files/download",
      "method": "/files/downloadGet",
      "httpMethod": "get",
      "tag": "files : Upload files ",
      "description": "A signed URL for downloading a private file can be returned by providing the fileId.",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "The URL of the file to be uploaded"
        },
        {
          "name": "validSeconds",
          "schema": "integer",
          "required": false,
          "description": "The number of seconds that this signed URL should be valid for. The default is 60."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "The signed URL for downloading a private file"
        }
      ]
    },
    {
      "url": "/files/url",
      "method": "/files/urlPost",
      "httpMethod": "post",
      "tag": "files : Upload files ",
      "description": "Uploads a file from a URL",
      "parameters": [
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": "The URL of the file to be uploaded"
        },
        {
          "name": "isPrivate",
          "schema": "boolean",
          "required": false,
          "description": "If true, this file will be protected as a private file and require the generation of a signed URL in order to download using the Download File API. The default is false."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "The file ids of the uploaded file"
        }
      ]
    },
    {
      "url": "/markets/this",
      "method": "/markets/thisGet",
      "httpMethod": "get",
      "tag": "markets : This marketplace",
      "description": "Returns the current marketplace",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": "A marketplace"
        }
      ]
    },
    {
      "url": "/ownership",
      "method": "/ownershipGet",
      "httpMethod": "get",
      "tag": "ownership : Find ownership",
      "description": "Returns a paginated list of app licenses",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "A query document. Example: {'userId':'12'} matches all the ownership records that have the userId '12'."
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "A sort document. Example: {'date':1} sorts the results by date in ascending order"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The result set page number to be returned"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return per page"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "Pages of ownership results"
        }
      ]
    },
    {
      "url": "/ownership/install",
      "method": "/ownership/installPost",
      "httpMethod": "post",
      "tag": "ownership : Find ownership",
      "description": "Aquires an app license for a user (installs app)",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The id of the App being owned"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The id of the User requesting to own the App"
        },
        {
          "name": "modelId",
          "schema": "string",
          "required": false,
          "description": "The id of the model associated with this ownership request"
        },
        {
          "name": "model",
          "schema": "string",
          "required": false,
          "description": "A custom model that will override the app's default model for this install"
        },
        {
          "name": "customData",
          "schema": "string",
          "required": false,
          "description": "A custom JSON object to attach to this ownership record"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/ownership/uninstall/{ownershipId}",
      "method": "/ownership/uninstall/{ownershipId}Post",
      "httpMethod": "post",
      "tag": "ownership : Find ownership",
      "description": "Uninstalls a license for a particular user and app (uninstalls app)",
      "parameters": [
        {
          "name": "ownershipId",
          "schema": "string",
          "required": true,
          "description": "The id of the ownership to be unintalled"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The id of the User requesting to uninstall the App"
        },
        {
          "name": "cancelOwnership",
          "schema": "boolean",
          "required": false,
          "description": "True if this app will require payment to be re-installed. Default is false"
        },
        {
          "name": "customData",
          "schema": "string",
          "required": false,
          "description": "A custom JSON object to attach to this ownership record"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/ownership/{ownershipId}",
      "method": "/ownership/{ownershipId}Get",
      "httpMethod": "get",
      "tag": "ownership : Find ownership",
      "description": "Returns an ownership record",
      "parameters": [
        {
          "name": "ownershipId",
          "schema": "string",
          "required": true,
          "description": "The id belonging to the ownership record"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/ownership/{ownershipId}",
      "method": "/ownership/{ownershipId}Patch",
      "httpMethod": "patch",
      "tag": "ownership : Find ownership",
      "description": "Updates ownership fields",
      "parameters": [
        {
          "name": "ownershipId",
          "schema": "string",
          "required": true,
          "description": "The id of the ownership to be updated"
        },
        {
          "name": "customData",
          "schema": "string",
          "required": false,
          "description": "Custom JSON object that will be attached to this ownership record"
        },
        {
          "name": "expires",
          "schema": "integer",
          "required": false,
          "description": "The date (in millis) of when this app ownership expires"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/ownership/{ownershipId}",
      "method": "/ownership/{ownershipId}Post",
      "httpMethod": "post",
      "tag": "ownership : Find ownership",
      "description": "Updates an ownership record",
      "parameters": [
        {
          "name": "ownershipId",
          "schema": "string",
          "required": true,
          "description": "The id of the ownership to be updated"
        },
        {
          "name": "customData",
          "schema": "string",
          "required": false,
          "description": "Custom JSON object that will be attached to this ownership record"
        },
        {
          "name": "expires",
          "schema": "integer",
          "required": false,
          "description": "The date (in millis) of when this app ownership expires"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/permission/apps/{appId}",
      "method": "/permission/apps/{appId}Delete",
      "httpMethod": "delete",
      "tag": "permission : Add and remove permissions ",
      "description": "Removes permission that allows the app to access this user's data",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The id of the app"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The id of the user"
        }
      ],
      "responses": []
    },
    {
      "url": "/permission/apps/{appId}",
      "method": "/permission/apps/{appId}Get",
      "httpMethod": "get",
      "tag": "permission : Add and remove permissions ",
      "description": "Returns permission that allows the app to access this user's data",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The id of the app"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The id of the user"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/permission/apps/{appId}",
      "method": "/permission/apps/{appId}Post",
      "httpMethod": "post",
      "tag": "permission : Add and remove permissions ",
      "description": "Adds permission to allow the app to access this user's data",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The id of the app"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The id of the user"
        },
        {
          "name": "date",
          "schema": "integer",
          "required": false,
          "description": "The time (in milliseconds) of when the user agreed to the access request"
        },
        {
          "name": "ip",
          "schema": "string",
          "required": false,
          "description": "The ip address of the user agreeing to the access request"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/reviews",
      "method": "/reviewsGet",
      "httpMethod": "get",
      "tag": "reviews : Find and modify reviews ",
      "description": "Find reviews for a particular App and marketplace. Results are automatically paginated when limit is set",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "A query document. Example: {'rating': 500} matches all the reviews that have a rating of 500. "
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "A sort document. Example: {'rating':1} sorts the results by rating in ascending order"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The result set page number to be returned"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return per page"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "Pages of review results"
        }
      ]
    },
    {
      "url": "/reviews",
      "method": "/reviewsPost",
      "httpMethod": "post",
      "tag": "reviews : Find and modify reviews ",
      "description": "Post a review from a User and returns the new post",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The id of the App that will own this review"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The id of the User that is posting this review"
        },
        {
          "name": "userAccountId",
          "schema": "string",
          "required": false,
          "description": "The id of the User account that is posting this review"
        },
        {
          "name": "headline",
          "schema": "string",
          "required": true,
          "description": "The review's headline. Limited to 50 characters."
        },
        {
          "name": "rating",
          "schema": "integer",
          "required": true,
          "description": "The rating given within this review. The rating is represented as an integer between 0 and 500 (0 - 5 stars)"
        },
        {
          "name": "description",
          "schema": "string",
          "required": true,
          "description": "The review's description. Limited to 2000 characters."
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "The type for this review"
        },
        {
          "name": "mustOwnApp",
          "schema": "boolean",
          "required": false,
          "description": "True if a review can be created only by a user that has owned the app. The default is True."
        },
        {
          "name": "autoApprove",
          "schema": "boolean",
          "required": false,
          "description": "True if the review should be automatically approved. The default is False."
        },
        {
          "name": "customData",
          "schema": "string",
          "required": false,
          "description": "A custom JSON object that you can create and attach to this record"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A Review"
        }
      ]
    },
    {
      "url": "/reviews/{reviewId}",
      "method": "/reviews/{reviewId}Delete",
      "httpMethod": "delete",
      "tag": "reviews : Find and modify reviews ",
      "description": "Remove a review",
      "parameters": [
        {
          "name": "reviewId",
          "schema": "string",
          "required": true,
          "description": "The id of the Review to be updated"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The id of the User that is removing this review"
        },
        {
          "name": "userAccountId",
          "schema": "string",
          "required": false,
          "description": "The id of the User account that is emoving this review"
        }
      ],
      "responses": []
    },
    {
      "url": "/reviews/{reviewId}",
      "method": "/reviews/{reviewId}Get",
      "httpMethod": "get",
      "tag": "reviews : Find and modify reviews ",
      "description": "Find a Review within a particular App and marketplace",
      "parameters": [
        {
          "name": "reviewId",
          "schema": "string",
          "required": true,
          "description": "The id of the review to be located"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A Review"
        }
      ]
    },
    {
      "url": "/reviews/{reviewId}",
      "method": "/reviews/{reviewId}Patch",
      "httpMethod": "patch",
      "tag": "reviews : Find and modify reviews ",
      "description": "Update a review fields",
      "parameters": [
        {
          "name": "reviewId",
          "schema": "string",
          "required": true,
          "description": "The id of the Review to be updated"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The id of the User that is updating this review"
        },
        {
          "name": "userAccountId",
          "schema": "string",
          "required": false,
          "description": "The id of the User account that is posting this review"
        },
        {
          "name": "headline",
          "schema": "string",
          "required": false,
          "description": "The review's headline. Limited to 50 characters."
        },
        {
          "name": "rating",
          "schema": "integer",
          "required": false,
          "description": "The rating given within this review. The rating is represented as an integer between 0 and 500 (0 - 5 stars)"
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": "The review's description. Limited to 2000 characters."
        },
        {
          "name": "customData",
          "schema": "string",
          "required": false,
          "description": "A custom JSON object that you can create and attach to this record"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A Review"
        }
      ]
    },
    {
      "url": "/reviews/{reviewId}",
      "method": "/reviews/{reviewId}Post",
      "httpMethod": "post",
      "tag": "reviews : Find and modify reviews ",
      "description": "Update a review from a User and returns the new post",
      "parameters": [
        {
          "name": "reviewId",
          "schema": "string",
          "required": true,
          "description": "The id of the Review to be updated"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The id of the User that is updating this review"
        },
        {
          "name": "userAccountId",
          "schema": "string",
          "required": true,
          "description": "The id of the User account that is posting this review"
        },
        {
          "name": "headline",
          "schema": "string",
          "required": true,
          "description": "The review's headline. Limited to 50 characters."
        },
        {
          "name": "rating",
          "schema": "integer",
          "required": true,
          "description": "The rating given within this review. The rating is represented as an integer between 0 and 500 (0 - 5 stars)"
        },
        {
          "name": "description",
          "schema": "string",
          "required": true,
          "description": "The review's description. Limited to 2000 characters."
        },
        {
          "name": "customData",
          "schema": "string",
          "required": false,
          "description": "A custom JSON object that you can create and attach to this record"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A Review"
        }
      ]
    },
    {
      "url": "/stats/increment/{field}",
      "method": "/stats/increment/{field}Post",
      "httpMethod": "post",
      "tag": "stats: Find marketplace statistics",
      "description": "Increments a statistics field",
      "parameters": [
        {
          "name": "field",
          "schema": "string",
          "required": true,
          "description": "The field to be incremented"
        },
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The id of the app associated with this statistic value"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": false,
          "description": "The id of the user that is performing the action"
        },
        {
          "name": "value",
          "schema": "integer",
          "required": false,
          "description": "The increment amount. Default is 1 if no value is provided."
        },
        {
          "name": "date",
          "schema": "integer",
          "required": false,
          "description": "The date (in millis) for when this increment occurred. The default is the current date if no value is provided."
        }
      ],
      "responses": []
    },
    {
      "url": "/stats/series/{period}/{fields}",
      "method": "/stats/series/{period}/{fields}Get",
      "httpMethod": "get",
      "tag": "stats: Find marketplace statistics",
      "description": "Return a timeseries for a particular field",
      "parameters": [
        {
          "name": "period",
          "schema": "string",
          "required": true,
          "description": "The period for the series (day or month)"
        },
        {
          "name": "fields",
          "schema": "string",
          "required": true,
          "description": "The field to be graphed. This also be a comma separated list of fields and the result will be a single timeseries containing the sum of all fields."
        },
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "The start date for this series (in millis)"
        },
        {
          "name": "end",
          "schema": "integer",
          "required": false,
          "description": "The end date for this series (in millis)"
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "A query document. Example: {'developerId': '112'} matches all the apps that have the developer with id 112"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/stats/total",
      "method": "/stats/totalGet",
      "httpMethod": "get",
      "tag": "stats: Find marketplace statistics",
      "description": "Returns the total number of events for a particular field.",
      "parameters": [
        {
          "name": "fields",
          "schema": "string",
          "required": true,
          "description": "A comma seperated list of all the fields to be returned in the total (available by default: dislikes, likes, reviews, totalSales, developerSales, marketplaceSales, downloads, ownerships, views)"
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "A query document. Example: {'developerId': '112'} matches all the apps that have the developer with id 112"
        },
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "The start date for this total (in millis)"
        },
        {
          "name": "end",
          "schema": "integer",
          "required": false,
          "description": "The end date for this total (in millis)"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "The total number of events for a particular field"
        }
      ]
    },
    {
      "url": "/stripe-gateway/developer/{developerId}/accounts",
      "method": "/stripeGateway/developer/{developerId}/accountsGet",
      "httpMethod": "get",
      "tag": "stripe-gateway : Process payments and refunds ",
      "description": "Returns a developers connected Stripe accounts",
      "parameters": [
        {
          "name": "developerId",
          "schema": "string",
          "required": true,
          "description": "The id of the developer connecting their Stripe account"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A developer's connected Stripe accounts"
        }
      ]
    },
    {
      "url": "/stripe-gateway/developer/{developerId}/accounts",
      "method": "/stripeGateway/developer/{developerId}/accountsPost",
      "httpMethod": "post",
      "tag": "stripe-gateway : Process payments and refunds ",
      "description": "Generate a temporary URL to allow a developer to connect their Stripe account",
      "parameters": [
        {
          "name": "developerId",
          "schema": "string",
          "required": true,
          "description": "The id of the developer connecting their Stripe account"
        },
        {
          "name": "redirectUrl",
          "schema": "string",
          "required": true,
          "description": "The URL to redirect this developer after they have connected their Stripe account"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/stripe-gateway/developer/{developerId}/accounts/{stripeId}",
      "method": "/stripeGateway/developer/{developerId}/accounts/{stripeId}Delete",
      "httpMethod": "delete",
      "tag": "stripe-gateway : Process payments and refunds ",
      "description": "Disconnects a developer's Stripe account",
      "parameters": [
        {
          "name": "developerId",
          "schema": "string",
          "required": true,
          "description": "The id of the developer disconnecting their Stripe account"
        },
        {
          "name": "stripeId",
          "schema": "string",
          "required": true,
          "description": "The id of the stripe account to disconnect"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A developer's connected Stripe accounts"
        }
      ]
    },
    {
      "url": "/stripe-gateway/user/{userId}/cards",
      "method": "/stripeGateway/user/{userId}/cardsGet",
      "httpMethod": "get",
      "tag": "stripe-gateway : Process payments and refunds ",
      "description": "Returns credit cards for this user",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The id of the user requesting their credit cards"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A User's credit card details"
        }
      ]
    },
    {
      "url": "/stripe-gateway/user/{userId}/cards",
      "method": "/stripeGateway/user/{userId}/cardsPost",
      "httpMethod": "post",
      "tag": "stripe-gateway : Process payments and refunds ",
      "description": "Adds credit card for this user",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The id of the user adding their credit card"
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "The Stripe token returned by the Stripe.js Stripe.card.createToken call"
        },
        {
          "name": "isDefault",
          "schema": "boolean",
          "required": false,
          "description": "Set to true if this should be set to be the default credit card"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A User's credit card details"
        }
      ]
    },
    {
      "url": "/stripe-gateway/user/{userId}/cards/{cardId}",
      "method": "/stripeGateway/user/{userId}/cards/{cardId}Delete",
      "httpMethod": "delete",
      "tag": "stripe-gateway : Process payments and refunds ",
      "description": "Removes a credit card for a user",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The id of the user removing their credit card"
        },
        {
          "name": "cardId",
          "schema": "string",
          "required": true,
          "description": "The id of the credit card to remove"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A User's credit card details"
        }
      ]
    },
    {
      "url": "/stripe-gateway/user/{userId}/cards/{cardId}",
      "method": "/stripeGateway/user/{userId}/cards/{cardId}Post",
      "httpMethod": "post",
      "tag": "stripe-gateway : Process payments and refunds ",
      "description": "Updates a credit card for this user",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The id of the user adding their credit card"
        },
        {
          "name": "cardId",
          "schema": "string",
          "required": true,
          "description": "The id of the card to be updated"
        },
        {
          "name": "isDefault",
          "schema": "boolean",
          "required": false,
          "description": "Set to true if this should be set to be the default credit card"
        },
        {
          "name": "addressCity",
          "schema": "string",
          "required": false,
          "description": "The card holder's city"
        },
        {
          "name": "addressCountry",
          "schema": "string",
          "required": false,
          "description": "The card holder's country"
        },
        {
          "name": "addressLine1",
          "schema": "string",
          "required": false,
          "description": "The card holder's street address"
        },
        {
          "name": "addressLine2",
          "schema": "string",
          "required": false,
          "description": "The card holder's street address"
        },
        {
          "name": "addressState",
          "schema": "string",
          "required": false,
          "description": "The card holder's city state/province"
        },
        {
          "name": "addressZip",
          "schema": "string",
          "required": false,
          "description": "The card holder's zip/postal code"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A User's credit card details"
        }
      ]
    },
    {
      "url": "/transactions",
      "method": "/transactionsGet",
      "httpMethod": "get",
      "tag": "transactions : Find payments and refunds ",
      "description": "Returns a paginated list of transactions",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "A query document. Example: {'userId':'1'} matches all the transactions that have the userId '1'."
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "A sort document. Example: {'date':1} sorts the results by total in ascending order"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The result set page number to be returned"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return per page"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "Pages of transaction results"
        }
      ]
    },
    {
      "url": "/transactions/{transactionId}",
      "method": "/transactions/{transactionId}Delete",
      "httpMethod": "delete",
      "tag": "transactions : Find payments and refunds ",
      "description": "Deleted a transaction",
      "parameters": [
        {
          "name": "transactionId",
          "schema": "string",
          "required": true,
          "description": "The id of the transaction to be deleted"
        }
      ],
      "responses": []
    },
    {
      "url": "/transactions/{transactionId}",
      "method": "/transactions/{transactionId}Get",
      "httpMethod": "get",
      "tag": "transactions : Find payments and refunds ",
      "description": "Returns a transaction",
      "parameters": [
        {
          "name": "transactionId",
          "schema": "string",
          "required": true,
          "description": "The id of the transaction to return"
        }
      ],
      "responses": []
    },
    {
      "url": "/transactions/{transactionId}",
      "method": "/transactions/{transactionId}Post",
      "httpMethod": "post",
      "tag": "transactions : Find payments and refunds ",
      "description": "Updates a transaction",
      "parameters": [
        {
          "name": "transactionId",
          "schema": "string",
          "required": true,
          "description": "The id of the transaction to be updated"
        },
        {
          "name": "customData",
          "schema": "string",
          "required": false,
          "description": "A custom JSON object that you can create and attach to this record"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A transaction for an app initiated by a user"
        }
      ]
    },
    {
      "url": "/userAccounts",
      "method": "/userAccountsGet",
      "httpMethod": "get",
      "tag": "userAccounts : Find and modify user accounts ",
      "description": "Returns a paginated list of userAccounts",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "A query document. Example: {'name':'NASA'} matches all the userAccounts that have the name 'NASA'"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "A sort document. Example: {'name':1} sorts the results by name in ascending order"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The result set page number to be returned"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return per page"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "Pages of userAccount results"
        }
      ]
    },
    {
      "url": "/userAccounts/{userAccountId}",
      "method": "/userAccounts/{userAccountId}Delete",
      "httpMethod": "delete",
      "tag": "userAccounts : Find and modify user accounts ",
      "description": "Removes the user account",
      "parameters": [
        {
          "name": "userAccountId",
          "schema": "string",
          "required": true,
          "description": "The id of the user account to be removed"
        }
      ],
      "responses": []
    },
    {
      "url": "/userAccounts/{userAccountId}",
      "method": "/userAccounts/{userAccountId}Get",
      "httpMethod": "get",
      "tag": "userAccounts : Find and modify user accounts ",
      "description": "Returns a single user account",
      "parameters": [
        {
          "name": "userAccountId",
          "schema": "string",
          "required": true,
          "description": "The id of the user account to be located"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A User Account"
        }
      ]
    },
    {
      "url": "/userAccounts/{userAccountId}",
      "method": "/userAccounts/{userAccountId}Patch",
      "httpMethod": "patch",
      "tag": "userAccounts : Find and modify user accounts ",
      "description": "Updates the user account fields",
      "parameters": [
        {
          "name": "userAccountId",
          "schema": "string",
          "required": true,
          "description": "The id of the user account to be updated"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The Id of the user that this account belongs to"
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": "The contact email address"
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "The user account name"
        },
        {
          "name": "customData",
          "schema": "string",
          "required": false,
          "description": "A custom JSON object that you can create and attach to this record"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A User Account"
        }
      ]
    },
    {
      "url": "/userAccounts/{userAccountId}",
      "method": "/userAccounts/{userAccountId}Post",
      "httpMethod": "post",
      "tag": "userAccounts : Find and modify user accounts ",
      "description": "Updates the user account or adds the user account if it doesn't exist",
      "parameters": [
        {
          "name": "userAccountId",
          "schema": "string",
          "required": true,
          "description": "The id of the user account to be updated"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The Id of the user that this account belongs to"
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": "The contact email address"
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "The user account name"
        },
        {
          "name": "customData",
          "schema": "string",
          "required": false,
          "description": "A custom JSON object that you can create and attach to this record"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A User Account"
        }
      ]
    },
    {
      "url": "/users",
      "method": "/usersGet",
      "httpMethod": "get",
      "tag": "users : Find and modify users ",
      "description": "Returns a paginated list of users",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "A query document. Example: {'name':'John'} matches all the users that have the name 'John'"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "A sort document. Example: {'name':1} sorts the results by name in ascending order"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The result set page number to be returned"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return per page"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "Pages of user results"
        }
      ]
    },
    {
      "url": "/users/{userId}",
      "method": "/users/{userId}Delete",
      "httpMethod": "delete",
      "tag": "users : Find and modify users ",
      "description": "Removes a single user",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The id of the user to be removed"
        }
      ],
      "responses": []
    },
    {
      "url": "/users/{userId}",
      "method": "/users/{userId}Get",
      "httpMethod": "get",
      "tag": "users : Find and modify users ",
      "description": "Return a single user",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The id of the user to be located"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A User"
        }
      ]
    },
    {
      "url": "/users/{userId}",
      "method": "/users/{userId}Patch",
      "httpMethod": "patch",
      "tag": "users : Find and modify users ",
      "description": "Updates user fields",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The id of the user to be updated"
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "The type for this user"
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": "The user's email"
        },
        {
          "name": "username",
          "schema": "string",
          "required": false,
          "description": "The user's username"
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "The user's name"
        },
        {
          "name": "customData",
          "schema": "string",
          "required": false,
          "description": "A custom JSON object that you can create and attach to this record"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A User"
        }
      ]
    },
    {
      "url": "/users/{userId}",
      "method": "/users/{userId}Post",
      "httpMethod": "post",
      "tag": "users : Find and modify users ",
      "description": "Updates a single user or adds the user if they don't exist",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The id of the user to be updated"
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "The type for this user"
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": "The user's email"
        },
        {
          "name": "username",
          "schema": "string",
          "required": false,
          "description": "The user's username"
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "The user's name"
        },
        {
          "name": "customData",
          "schema": "string",
          "required": false,
          "description": "A custom JSON object that you can create and attach to this record"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "A User"
        }
      ]
    }
  ],
  "apiBaseUrl": "https://market.openchannel.io/v2",
  "apiTitle": "OpenChannel Market API",
  "endpoints": 41,
  "sdkMethods": 72,
  "schemas": 49,
  "parameters": 275,
  "difficultyScore": 165.25,
  "difficulty": "Medium"
}