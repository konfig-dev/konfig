{
  "providerName": "superset.apache.local",
  "openApiRaw": "https://raw.githubusercontent.com/apache/superset/master/docs/src/resources/openapi.json",
  "homepage": "superset.apache.local",
  "serviceName": "superset",
  "apiVersion": "v1",
  "methods": [
    {
      "url": "/annotation_layer/",
      "method": "/annotationLayer/Delete",
      "httpMethod": "delete",
      "tag": "Annotation Layers",
      "description": "Deletes multiple annotation layers in a bulk operation.",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/annotation_layer/",
      "method": "/annotationLayer/Get",
      "httpMethod": "get",
      "tag": "Annotation Layers",
      "description": "Get a list of Annotation layers, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/annotation_layer/",
      "method": "/annotationLayer/Post",
      "httpMethod": "post",
      "tag": "Annotation Layers",
      "description": "Create an Annotation layer",
      "parameters": [
        {
          "name": "descr",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/annotation_layer/_info",
      "method": "/annotationLayer/InfoGet",
      "httpMethod": "get",
      "tag": "Annotation Layers",
      "description": "Get metadata information about this API resource",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/annotation_layer/related/{column_name}",
      "method": "/annotationLayer/related/{columnName}Get",
      "httpMethod": "get",
      "tag": "Annotation Layers",
      "description": "",
      "parameters": [
        {
          "name": "column_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/annotation_layer/{pk}",
      "method": "/annotationLayer/{pk}Delete",
      "httpMethod": "delete",
      "tag": "Annotation Layers",
      "description": "Delete Annotation layer",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": "The annotation layer pk for this annotation"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/annotation_layer/{pk}",
      "method": "/annotationLayer/{pk}Get",
      "httpMethod": "get",
      "tag": "Annotation Layers",
      "description": "Get an Annotation layer",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/annotation_layer/{pk}",
      "method": "/annotationLayer/{pk}Put",
      "httpMethod": "put",
      "tag": "Annotation Layers",
      "description": "Update an Annotation layer",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": "The annotation layer pk for this annotation"
        },
        {
          "name": "descr",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/annotation_layer/{pk}/annotation/",
      "method": "/annotationLayer/{pk}/annotation/Delete",
      "httpMethod": "delete",
      "tag": "Annotation Layers",
      "description": "Deletes multiple annotation in a bulk operation.",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": "The annotation layer pk for this annotation"
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/annotation_layer/{pk}/annotation/",
      "method": "/annotationLayer/{pk}/annotation/Get",
      "httpMethod": "get",
      "tag": "Annotation Layers",
      "description": "Get a list of Annotation layers, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": "The annotation layer id for this annotation"
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/annotation_layer/{pk}/annotation/",
      "method": "/annotationLayer/{pk}/annotation/Post",
      "httpMethod": "post",
      "tag": "Annotation Layers",
      "description": "Create an Annotation layer",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": "The annotation layer pk for this annotation"
        },
        {
          "name": "end_dttm",
          "schema": "string",
          "description": ""
        },
        {
          "name": "json_metadata",
          "schema": "string",
          "description": ""
        },
        {
          "name": "long_descr",
          "schema": "string",
          "description": ""
        },
        {
          "name": "short_descr",
          "schema": "string",
          "description": ""
        },
        {
          "name": "start_dttm",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/annotation_layer/{pk}/annotation/{annotation_id}",
      "method": "/annotationLayer/{pk}/annotation/{annotationId}Delete",
      "httpMethod": "delete",
      "tag": "Annotation Layers",
      "description": "Delete Annotation layer",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": "The annotation layer pk for this annotation"
        },
        {
          "name": "annotation_id",
          "schema": "integer",
          "required": true,
          "description": "The annotation pk for this annotation"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/annotation_layer/{pk}/annotation/{annotation_id}",
      "method": "/annotationLayer/{pk}/annotation/{annotationId}Get",
      "httpMethod": "get",
      "tag": "Annotation Layers",
      "description": "Get an Annotation layer",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": "The annotation layer pk for this annotation"
        },
        {
          "name": "annotation_id",
          "schema": "integer",
          "required": true,
          "description": "The annotation pk"
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/annotation_layer/{pk}/annotation/{annotation_id}",
      "method": "/annotationLayer/{pk}/annotation/{annotationId}Put",
      "httpMethod": "put",
      "tag": "Annotation Layers",
      "description": "Update an Annotation layer",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": "The annotation layer pk for this annotation"
        },
        {
          "name": "annotation_id",
          "schema": "integer",
          "required": true,
          "description": "The annotation pk for this annotation"
        },
        {
          "name": "end_dttm",
          "schema": "string",
          "description": ""
        },
        {
          "name": "json_metadata",
          "schema": "string",
          "description": ""
        },
        {
          "name": "long_descr",
          "schema": "string",
          "description": ""
        },
        {
          "name": "short_descr",
          "schema": "string",
          "description": ""
        },
        {
          "name": "start_dttm",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/async_event/",
      "method": "/asyncEvent/Get",
      "httpMethod": "get",
      "tag": "AsyncEventsRestApi",
      "description": "Reads off of the Redis events stream, using the user's JWT token and optional query params for last event received.",
      "parameters": [
        {
          "name": "last_id",
          "schema": "string",
          "description": "Last ID received by the client"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cachekey/invalidate",
      "method": "/cachekey/invalidatePost",
      "httpMethod": "post",
      "tag": "CacheRestApi",
      "description": "Takes a list of datasources, finds the associated cache records and invalidates them and removes the database records",
      "parameters": [
        {
          "name": "datasource_uids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "datasources",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/chart/",
      "method": "/chart/Delete",
      "httpMethod": "delete",
      "tag": "Charts",
      "description": "Deletes multiple Charts in a bulk operation.",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/chart/",
      "method": "/chart/Get",
      "httpMethod": "get",
      "tag": "Charts",
      "description": "Get a list of charts, use Rison or JSON query parameters for filtering, sorting, pagination and  for selecting specific columns and metadata.",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/chart/",
      "method": "/chart/Post",
      "httpMethod": "post",
      "tag": "Charts",
      "description": "Create a new Chart.",
      "parameters": [
        {
          "name": "cache_timeout",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "dashboards",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "datasource_id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "datasource_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "datasource_type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "owners",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "params",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "query_context",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "slice_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "viz_type",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/chart/_info",
      "method": "/chart/InfoGet",
      "httpMethod": "get",
      "tag": "Charts",
      "description": "Several metadata information about chart API endpoints.",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/chart/data",
      "method": "/chart/dataPost",
      "httpMethod": "post",
      "tag": "Charts",
      "description": "Takes a query context constructed in the client and returns payload data response for the given query.",
      "parameters": [
        {
          "name": "datasource",
          "schema": "object",
          "description": ""
        },
        {
          "name": "force",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "queries",
          "schema": "array",
          "description": ""
        },
        {
          "name": "result_format",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "result_type",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/chart/data/{cache_key}",
      "method": "/chart/data/{cacheKey}Get",
      "httpMethod": "get",
      "tag": "Charts",
      "description": "Takes a query context cache key and returns payload data response for the given query.",
      "parameters": [
        {
          "name": "cache_key",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/chart/export/",
      "method": "/chart/export/Get",
      "httpMethod": "get",
      "tag": "Charts",
      "description": "Exports multiple charts and downloads them as YAML files",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/chart/favorite_status/",
      "method": "/chart/favoriteStatus/Get",
      "httpMethod": "get",
      "tag": "Charts",
      "description": "Check favorited dashboards for current user",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/chart/import/",
      "method": "/chart/import/Post",
      "httpMethod": "post",
      "tag": "Charts",
      "description": "",
      "parameters": [
        {
          "name": "formData",
          "schema": "string",
          "description": ""
        },
        {
          "name": "overwrite",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "passwords",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/chart/related/{column_name}",
      "method": "/chart/related/{columnName}Get",
      "httpMethod": "get",
      "tag": "Charts",
      "description": "Get a list of all possible owners for a chart. Use `owners` has the `column_name` parameter",
      "parameters": [
        {
          "name": "column_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/chart/{pk}",
      "method": "/chart/{pk}Delete",
      "httpMethod": "delete",
      "tag": "Charts",
      "description": "Deletes a Chart.",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/chart/{pk}",
      "method": "/chart/{pk}Get",
      "httpMethod": "get",
      "tag": "Charts",
      "description": "Get a chart detail information.",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/chart/{pk}",
      "method": "/chart/{pk}Put",
      "httpMethod": "put",
      "tag": "Charts",
      "description": "Changes a Chart.",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "cache_timeout",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "dashboards",
          "schema": "array",
          "description": ""
        },
        {
          "name": "datasource_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "datasource_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "owners",
          "schema": "array",
          "description": ""
        },
        {
          "name": "params",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_context",
          "schema": "string",
          "description": ""
        },
        {
          "name": "slice_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "viz_type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/chart/{pk}/cache_screenshot/",
      "method": "/chart/{pk}/cacheScreenshot/Get",
      "httpMethod": "get",
      "tag": "Charts",
      "description": "Compute and cache a screenshot.",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/chart/{pk}/data/",
      "method": "/chart/{pk}/data/Get",
      "httpMethod": "get",
      "tag": "Charts",
      "description": "Takes a chart ID and uses the query context stored when the chart was saved to return payload data response.",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": "The chart ID"
        },
        {
          "name": "format",
          "schema": "string",
          "description": "The format in which the data should be returned"
        },
        {
          "name": "type",
          "schema": "string",
          "description": "The type in which the data should be returned"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/chart/{pk}/screenshot/{digest}/",
      "method": "/chart/{pk}/screenshot/{digest}/Get",
      "httpMethod": "get",
      "tag": "Charts",
      "description": "Get a computed screenshot from cache.",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "digest",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/chart/{pk}/thumbnail/{digest}/",
      "method": "/chart/{pk}/thumbnail/{digest}/Get",
      "httpMethod": "get",
      "tag": "Charts",
      "description": "Compute or get already computed chart thumbnail from cache.",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "digest",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/css_template/",
      "method": "/cssTemplate/Delete",
      "httpMethod": "delete",
      "tag": "CSS Templates",
      "description": "Deletes multiple css templates in a bulk operation.",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/css_template/",
      "method": "/cssTemplate/Get",
      "httpMethod": "get",
      "tag": "CSS Templates",
      "description": "Get a list of CSS templates, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/css_template/",
      "method": "/cssTemplate/Post",
      "httpMethod": "post",
      "tag": "CSS Templates",
      "description": "Create a CSS template",
      "parameters": [
        {
          "name": "css",
          "schema": "string",
          "description": ""
        },
        {
          "name": "template_name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/css_template/_info",
      "method": "/cssTemplate/InfoGet",
      "httpMethod": "get",
      "tag": "CSS Templates",
      "description": "Get metadata information about this API resource",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/css_template/related/{column_name}",
      "method": "/cssTemplate/related/{columnName}Get",
      "httpMethod": "get",
      "tag": "CSS Templates",
      "description": "",
      "parameters": [
        {
          "name": "column_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/css_template/{pk}",
      "method": "/cssTemplate/{pk}Delete",
      "httpMethod": "delete",
      "tag": "CSS Templates",
      "description": "Delete CSS template",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/css_template/{pk}",
      "method": "/cssTemplate/{pk}Get",
      "httpMethod": "get",
      "tag": "CSS Templates",
      "description": "Get a CSS template",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/css_template/{pk}",
      "method": "/cssTemplate/{pk}Put",
      "httpMethod": "put",
      "tag": "CSS Templates",
      "description": "Update a CSS template",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "css",
          "schema": "string",
          "description": ""
        },
        {
          "name": "template_name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dashboard/",
      "method": "/dashboard/Delete",
      "httpMethod": "delete",
      "tag": "Dashboards",
      "description": "Deletes multiple Dashboards in a bulk operation.",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dashboard/",
      "method": "/dashboard/Get",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get a list of dashboards, use Rison or JSON query parameters for filtering, sorting, pagination and  for selecting specific columns and metadata.",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dashboard/",
      "method": "/dashboard/Post",
      "httpMethod": "post",
      "tag": "Dashboards",
      "description": "Create a new Dashboard.",
      "parameters": [
        {
          "name": "css",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dashboard_title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "json_metadata",
          "schema": "string",
          "description": ""
        },
        {
          "name": "owners",
          "schema": "array",
          "description": ""
        },
        {
          "name": "position_json",
          "schema": "string",
          "description": ""
        },
        {
          "name": "published",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "roles",
          "schema": "array",
          "description": ""
        },
        {
          "name": "slug",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dashboard/_info",
      "method": "/dashboard/InfoGet",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Several metadata information about dashboard API endpoints.",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dashboard/export/",
      "method": "/dashboard/export/Get",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Exports multiple Dashboards and downloads them as YAML files.",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dashboard/favorite_status/",
      "method": "/dashboard/favoriteStatus/Get",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Check favorited dashboards for current user",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dashboard/import/",
      "method": "/dashboard/import/Post",
      "httpMethod": "post",
      "tag": "Dashboards",
      "description": "",
      "parameters": [
        {
          "name": "formData",
          "schema": "string",
          "description": ""
        },
        {
          "name": "overwrite",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "passwords",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dashboard/related/{column_name}",
      "method": "/dashboard/related/{columnName}Get",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get a list of all possible owners for a dashboard.",
      "parameters": [
        {
          "name": "column_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dashboard/{id_or_slug}",
      "method": "/dashboard/{idOrSlug}Get",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get a dashboard detail information.",
      "parameters": [
        {
          "name": "id_or_slug",
          "schema": "string",
          "required": true,
          "description": "Either the id of the dashboard, or its slug"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/dashboard/{id_or_slug}/charts",
      "method": "/dashboard/{idOrSlug}/chartsGet",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Get the chart definitions for a given dashboard",
      "parameters": [
        {
          "name": "id_or_slug",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/dashboard/{id_or_slug}/datasets",
      "method": "/dashboard/{idOrSlug}/datasetsGet",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Returns a list of a dashboard's datasets. Each dataset includes only the information necessary to render the dashboard's charts.",
      "parameters": [
        {
          "name": "id_or_slug",
          "schema": "string",
          "required": true,
          "description": "Either the id of the dashboard, or its slug"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/dashboard/{pk}",
      "method": "/dashboard/{pk}Delete",
      "httpMethod": "delete",
      "tag": "Dashboards",
      "description": "Deletes a Dashboard.",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dashboard/{pk}",
      "method": "/dashboard/{pk}Put",
      "httpMethod": "put",
      "tag": "Dashboards",
      "description": "Changes a Dashboard.",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "css",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dashboard_title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "json_metadata",
          "schema": "string",
          "description": ""
        },
        {
          "name": "owners",
          "schema": "array",
          "description": ""
        },
        {
          "name": "position_json",
          "schema": "string",
          "description": ""
        },
        {
          "name": "published",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "roles",
          "schema": "array",
          "description": ""
        },
        {
          "name": "slug",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dashboard/{pk}/thumbnail/{digest}/",
      "method": "/dashboard/{pk}/thumbnail/{digest}/Get",
      "httpMethod": "get",
      "tag": "Dashboards",
      "description": "Compute async or get already computed dashboard thumbnail from cache.",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "digest",
          "schema": "string",
          "required": true,
          "description": "A hex digest that makes this dashboard unique"
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/database/",
      "method": "/database/Get",
      "httpMethod": "get",
      "tag": "Database",
      "description": "Get a list of models",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/database/",
      "method": "/database/Post",
      "httpMethod": "post",
      "tag": "Database",
      "description": "Create a new Database.",
      "parameters": [
        {
          "name": "allow_csv_upload",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_ctas",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_cvas",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_dml",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_multi_schema_metadata_fetch",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_run_async",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "cache_timeout",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "configuration_method",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "database_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "encrypted_extra",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "engine",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "expose_in_sqllab",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "extra",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "force_ctas_schema",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "impersonate_user",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "parameters",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "server_cert",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sqlalchemy_uri",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/database/_info",
      "method": "/database/InfoGet",
      "httpMethod": "get",
      "tag": "Database",
      "description": "Get metadata information about this API resource",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/database/available/",
      "method": "/database/available/Get",
      "httpMethod": "get",
      "tag": "Database",
      "description": "Get names of databases currently available",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/database/export/",
      "method": "/database/export/Get",
      "httpMethod": "get",
      "tag": "Database",
      "description": "Download database(s) and associated dataset(s) as a zip file",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/database/import/",
      "method": "/database/import/Post",
      "httpMethod": "post",
      "tag": "Database",
      "description": "",
      "parameters": [
        {
          "name": "formData",
          "schema": "string",
          "description": ""
        },
        {
          "name": "overwrite",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "passwords",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/database/test_connection",
      "method": "/database/testConnectionPost",
      "httpMethod": "post",
      "tag": "Database",
      "description": "Tests a database connection",
      "parameters": [
        {
          "name": "configuration_method",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "database_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "encrypted_extra",
          "schema": "string",
          "description": ""
        },
        {
          "name": "engine",
          "schema": "string",
          "description": ""
        },
        {
          "name": "extra",
          "schema": "string",
          "description": ""
        },
        {
          "name": "impersonate_user",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "parameters",
          "schema": "object",
          "description": ""
        },
        {
          "name": "server_cert",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sqlalchemy_uri",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/database/validate_parameters",
      "method": "/database/validateParametersPost",
      "httpMethod": "post",
      "tag": "Database",
      "description": "Validates parameters used to connect to a database",
      "parameters": [
        {
          "name": "configuration_method",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "database_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "encrypted_extra",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "engine",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "extra",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "impersonate_user",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "parameters",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "server_cert",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/database/{pk}",
      "method": "/database/{pk}Delete",
      "httpMethod": "delete",
      "tag": "Database",
      "description": "Deletes a Database.",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/database/{pk}",
      "method": "/database/{pk}Get",
      "httpMethod": "get",
      "tag": "Database",
      "description": "Get an item model",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/database/{pk}",
      "method": "/database/{pk}Put",
      "httpMethod": "put",
      "tag": "Database",
      "description": "Changes a Database.",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "allow_csv_upload",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "allow_ctas",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "allow_cvas",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "allow_dml",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "allow_multi_schema_metadata_fetch",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "allow_run_async",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "cache_timeout",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "configuration_method",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "database_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "encrypted_extra",
          "schema": "string",
          "description": ""
        },
        {
          "name": "engine",
          "schema": "string",
          "description": ""
        },
        {
          "name": "expose_in_sqllab",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "extra",
          "schema": "string",
          "description": ""
        },
        {
          "name": "force_ctas_schema",
          "schema": "string",
          "description": ""
        },
        {
          "name": "impersonate_user",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "parameters",
          "schema": "object",
          "description": ""
        },
        {
          "name": "server_cert",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sqlalchemy_uri",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/database/{pk}/function_names/",
      "method": "/database/{pk}/functionNames/Get",
      "httpMethod": "get",
      "tag": "Database",
      "description": "Get function names supported by a database",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/database/{pk}/related_objects/",
      "method": "/database/{pk}/relatedObjects/Get",
      "httpMethod": "get",
      "tag": "Database",
      "description": "Get charts and dashboards count associated to a database",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/database/{pk}/schemas/",
      "method": "/database/{pk}/schemas/Get",
      "httpMethod": "get",
      "tag": "Database",
      "description": "Get all schemas from a database",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": "The database id"
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/database/{pk}/select_star/{table_name}/",
      "method": "/database/{pk}/selectStar/{tableName}/Get",
      "httpMethod": "get",
      "tag": "Database",
      "description": "Get database select star for table",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": "The database id"
        },
        {
          "name": "table_name",
          "schema": "string",
          "required": true,
          "description": "Table name"
        },
        {
          "name": "schema_name",
          "schema": "string",
          "required": true,
          "description": "Table schema"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/database/{pk}/select_star/{table_name}/{schema_name}/",
      "method": "/database/{pk}/selectStar/{tableName}/{schemaName}/Get",
      "httpMethod": "get",
      "tag": "Database",
      "description": "Get database select star for table",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": "The database id"
        },
        {
          "name": "table_name",
          "schema": "string",
          "required": true,
          "description": "Table name"
        },
        {
          "name": "schema_name",
          "schema": "string",
          "required": true,
          "description": "Table schema"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/database/{pk}/table/{table_name}/{schema_name}/",
      "method": "/database/{pk}/table/{tableName}/{schemaName}/Get",
      "httpMethod": "get",
      "tag": "Database",
      "description": "Get database table metadata",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": "The database id"
        },
        {
          "name": "table_name",
          "schema": "string",
          "required": true,
          "description": "Table name"
        },
        {
          "name": "schema_name",
          "schema": "string",
          "required": true,
          "description": "Table schema"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dataset/",
      "method": "/dataset/Delete",
      "httpMethod": "delete",
      "tag": "Datasets",
      "description": "Deletes multiple Datasets in a bulk operation.",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dataset/",
      "method": "/dataset/Get",
      "httpMethod": "get",
      "tag": "Datasets",
      "description": "Get a list of models",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dataset/",
      "method": "/dataset/Post",
      "httpMethod": "post",
      "tag": "Datasets",
      "description": "Create a new Dataset",
      "parameters": [
        {
          "name": "database",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "owners",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "schema",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "table_name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dataset/_info",
      "method": "/dataset/InfoGet",
      "httpMethod": "get",
      "tag": "Datasets",
      "description": "Get metadata information about this API resource",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dataset/distinct/{column_name}",
      "method": "/dataset/distinct/{columnName}Get",
      "httpMethod": "get",
      "tag": "Datasets",
      "description": "",
      "parameters": [
        {
          "name": "column_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dataset/export/",
      "method": "/dataset/export/Get",
      "httpMethod": "get",
      "tag": "Datasets",
      "description": "Exports multiple datasets and downloads them as YAML files",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dataset/import/",
      "method": "/dataset/import/Post",
      "httpMethod": "post",
      "tag": "Datasets",
      "description": "",
      "parameters": [
        {
          "name": "formData",
          "schema": "string",
          "description": ""
        },
        {
          "name": "overwrite",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "passwords",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dataset/related/{column_name}",
      "method": "/dataset/related/{columnName}Get",
      "httpMethod": "get",
      "tag": "Datasets",
      "description": "",
      "parameters": [
        {
          "name": "column_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dataset/{pk}",
      "method": "/dataset/{pk}Delete",
      "httpMethod": "delete",
      "tag": "Datasets",
      "description": "Deletes a Dataset",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dataset/{pk}",
      "method": "/dataset/{pk}Get",
      "httpMethod": "get",
      "tag": "Datasets",
      "description": "Get an item model",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dataset/{pk}",
      "method": "/dataset/{pk}Put",
      "httpMethod": "put",
      "tag": "Datasets",
      "description": "Changes a Dataset",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "override_columns",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "cache_timeout",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "columns",
          "schema": "array",
          "description": ""
        },
        {
          "name": "database_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "default_endpoint",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "extra",
          "schema": "string",
          "description": ""
        },
        {
          "name": "fetch_values_predicate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "filter_select_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "is_sqllab_view",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "main_dttm_col",
          "schema": "string",
          "description": ""
        },
        {
          "name": "metrics",
          "schema": "array",
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "owners",
          "schema": "array",
          "description": ""
        },
        {
          "name": "schema",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sql",
          "schema": "string",
          "description": ""
        },
        {
          "name": "table_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "template_params",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dataset/{pk}/column/{column_id}",
      "method": "/dataset/{pk}/column/{columnId}Delete",
      "httpMethod": "delete",
      "tag": "Datasets",
      "description": "Delete a Dataset column",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": "The dataset pk for this column"
        },
        {
          "name": "column_id",
          "schema": "integer",
          "required": true,
          "description": "The column id for this dataset"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dataset/{pk}/metric/{metric_id}",
      "method": "/dataset/{pk}/metric/{metricId}Delete",
      "httpMethod": "delete",
      "tag": "Datasets",
      "description": "Delete a Dataset metric",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": "The dataset pk for this column"
        },
        {
          "name": "metric_id",
          "schema": "integer",
          "required": true,
          "description": "The metric id for this dataset"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dataset/{pk}/refresh",
      "method": "/dataset/{pk}/refreshPut",
      "httpMethod": "put",
      "tag": "Datasets",
      "description": "Refreshes and updates columns of a dataset",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/dataset/{pk}/related_objects",
      "method": "/dataset/{pk}/relatedObjectsGet",
      "httpMethod": "get",
      "tag": "Datasets",
      "description": "Get charts and dashboards count associated to a dataset",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/log/",
      "method": "/log/Get",
      "httpMethod": "get",
      "tag": "LogRestApi",
      "description": "Get a list of models",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/log/",
      "method": "/log/Post",
      "httpMethod": "post",
      "tag": "LogRestApi",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/log/{pk}",
      "method": "/log/{pk}Get",
      "httpMethod": "get",
      "tag": "LogRestApi",
      "description": "Get an item model",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/menu/",
      "method": "/menu/Get",
      "httpMethod": "get",
      "tag": "Menu",
      "description": "Get the menu data structure. Returns a forest like structure with the menu the user has access to",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/openapi/{version}/_openapi",
      "method": "/openapi/{version}/OpenapiGet",
      "httpMethod": "get",
      "tag": "OpenApi",
      "description": "Get the OpenAPI spec for a specific API version",
      "parameters": [
        {
          "name": "version",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/query/",
      "method": "/query/Get",
      "httpMethod": "get",
      "tag": "Queries",
      "description": "Get a list of queries, use Rison or JSON query parameters for filtering, sorting, pagination and  for selecting specific columns and metadata.",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/query/distinct/{column_name}",
      "method": "/query/distinct/{columnName}Get",
      "httpMethod": "get",
      "tag": "Queries",
      "description": "",
      "parameters": [
        {
          "name": "column_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/query/related/{column_name}",
      "method": "/query/related/{columnName}Get",
      "httpMethod": "get",
      "tag": "Queries",
      "description": "",
      "parameters": [
        {
          "name": "column_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/query/{pk}",
      "method": "/query/{pk}Get",
      "httpMethod": "get",
      "tag": "Queries",
      "description": "Get query detail information.",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/",
      "method": "/report/Delete",
      "httpMethod": "delete",
      "tag": "Report Schedules",
      "description": "Deletes multiple report schedules in a bulk operation.",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/",
      "method": "/report/Get",
      "httpMethod": "get",
      "tag": "Report Schedules",
      "description": "Get a list of report schedules, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/",
      "method": "/report/Post",
      "httpMethod": "post",
      "tag": "Report Schedules",
      "description": "Create a report schedule",
      "parameters": [
        {
          "name": "active",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "chart",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "context_markdown",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "creation_method",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "crontab",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dashboard",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "database",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "grace_period",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "log_retention",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "owners",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "recipients",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "report_format",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sql",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "timezone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "validator_config_json",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "validator_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "working_timeout",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/_info",
      "method": "/report/InfoGet",
      "httpMethod": "get",
      "tag": "Report Schedules",
      "description": "Get metadata information about this API resource",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/related/{column_name}",
      "method": "/report/related/{columnName}Get",
      "httpMethod": "get",
      "tag": "Report Schedules",
      "description": "",
      "parameters": [
        {
          "name": "column_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/{pk}",
      "method": "/report/{pk}Delete",
      "httpMethod": "delete",
      "tag": "Report Schedules",
      "description": "Delete a report schedule",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": "The report schedule pk"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/{pk}",
      "method": "/report/{pk}Get",
      "httpMethod": "get",
      "tag": "Report Schedules",
      "description": "Get a report schedule",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/{pk}",
      "method": "/report/{pk}Put",
      "httpMethod": "put",
      "tag": "Report Schedules",
      "description": "Update a report schedule",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": "The Report Schedule pk"
        },
        {
          "name": "active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "chart",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "context_markdown",
          "schema": "string",
          "description": ""
        },
        {
          "name": "creation_method",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "crontab",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dashboard",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "database",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "grace_period",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "log_retention",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "owners",
          "schema": "array",
          "description": ""
        },
        {
          "name": "recipients",
          "schema": "array",
          "description": ""
        },
        {
          "name": "report_format",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sql",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timezone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "validator_config_json",
          "schema": "object",
          "description": ""
        },
        {
          "name": "validator_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "working_timeout",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/{pk}/log/",
      "method": "/report/{pk}/log/Get",
      "httpMethod": "get",
      "tag": "Report Schedules",
      "description": "Get a list of report schedule logs, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": "The report schedule id for these logs"
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/{pk}/log/{log_id}",
      "method": "/report/{pk}/log/{logId}Get",
      "httpMethod": "get",
      "tag": "Report Schedules",
      "description": "Get a report schedule log",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": "The report schedule pk for log"
        },
        {
          "name": "log_id",
          "schema": "integer",
          "required": true,
          "description": "The log pk"
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/saved_query/",
      "method": "/savedQuery/Delete",
      "httpMethod": "delete",
      "tag": "Queries",
      "description": "Deletes multiple saved queries in a bulk operation.",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/saved_query/",
      "method": "/savedQuery/Get",
      "httpMethod": "get",
      "tag": "Queries",
      "description": "Get a list of saved queries, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/saved_query/",
      "method": "/savedQuery/Post",
      "httpMethod": "post",
      "tag": "Queries",
      "description": "Create a saved query",
      "parameters": [
        {
          "name": "db_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "label",
          "schema": "string",
          "description": ""
        },
        {
          "name": "schema",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sql",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/saved_query/_info",
      "method": "/savedQuery/InfoGet",
      "httpMethod": "get",
      "tag": "Queries",
      "description": "Get metadata information about this API resource",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/saved_query/distinct/{column_name}",
      "method": "/savedQuery/distinct/{columnName}Get",
      "httpMethod": "get",
      "tag": "Queries",
      "description": "",
      "parameters": [
        {
          "name": "column_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/saved_query/export/",
      "method": "/savedQuery/export/Get",
      "httpMethod": "get",
      "tag": "Queries",
      "description": "Exports multiple saved queries and downloads them as YAML files",
      "parameters": [
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/saved_query/import/",
      "method": "/savedQuery/import/Post",
      "httpMethod": "post",
      "tag": "Queries",
      "description": "",
      "parameters": [
        {
          "name": "formData",
          "schema": "string",
          "description": ""
        },
        {
          "name": "overwrite",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "passwords",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/saved_query/related/{column_name}",
      "method": "/savedQuery/related/{columnName}Get",
      "httpMethod": "get",
      "tag": "Queries",
      "description": "",
      "parameters": [
        {
          "name": "column_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/saved_query/{pk}",
      "method": "/savedQuery/{pk}Delete",
      "httpMethod": "delete",
      "tag": "Queries",
      "description": "Delete saved query",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/saved_query/{pk}",
      "method": "/savedQuery/{pk}Get",
      "httpMethod": "get",
      "tag": "Queries",
      "description": "Get a saved query",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "q",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/saved_query/{pk}",
      "method": "/savedQuery/{pk}Put",
      "httpMethod": "put",
      "tag": "Queries",
      "description": "Update a saved query",
      "parameters": [
        {
          "name": "pk",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "db_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "label",
          "schema": "string",
          "description": ""
        },
        {
          "name": "schema",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sql",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/security/csrf_token/",
      "method": "/security/csrfToken/Get",
      "httpMethod": "get",
      "tag": "Security",
      "description": "Fetch the CSRF token",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/security/login",
      "method": "/security/loginPost",
      "httpMethod": "post",
      "tag": "Security",
      "description": "Authenticate and get a JWT access and refresh token",
      "parameters": [
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "provider",
          "schema": "string",
          "description": ""
        },
        {
          "name": "refresh",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/security/refresh",
      "method": "/security/refreshPost",
      "httpMethod": "post",
      "tag": "Security",
      "description": "Use the refresh token to get a new JWT access token",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "http://superset.apache.local",
  "apiDescription": "Superset",
  "apiTitle": "Superset",
  "endpoints": 85,
  "sdkMethods": 120,
  "schemas": 180,
  "parameters": 349,
  "difficultyScore": 297.25,
  "difficulty": "Hard"
}