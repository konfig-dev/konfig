{
  "providerName": "staging-ecotaco.com",
  "openApiRaw": "https://ecotaco.docs.apiary.io/api-description-document",
  "securitySchemes": {},
  "homepage": "staging-ecotaco.com",
  "apiVersion": "1.0.0",
  "methods": [
    {
      "url": "/",
      "method": "retrieveTheVersionApi",
      "httpMethod": "get",
      "tag": "EcoTa.co API Root",
      "typeScriptTag": "ecoTaCoApiRoot",
      "description": "Retrieve the version API",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts",
      "method": "getCurrentUser",
      "httpMethod": "get",
      "tag": "Accounts",
      "typeScriptTag": "accounts",
      "description": "Get current user",
      "parameters": [
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts",
      "method": "createANewAccountWithAnApplicationKey",
      "httpMethod": "post",
      "tag": "Accounts",
      "typeScriptTag": "accounts",
      "description": "Create a new account with an application key",
      "parameters": [
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts",
      "method": "updateUser",
      "httpMethod": "put",
      "tag": "Accounts",
      "typeScriptTag": "accounts",
      "description": "Update User",
      "parameters": [
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/password",
      "method": "forgetPasswordWithEmail",
      "httpMethod": "post",
      "tag": "Accounts",
      "typeScriptTag": "accounts",
      "description": "Forget password with email",
      "parameters": [
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": []
    },
    {
      "url": "/accounts/payment_methods",
      "method": "paymentMethods",
      "httpMethod": "get",
      "tag": "Accounts",
      "typeScriptTag": "accounts",
      "description": "Payment Methods",
      "parameters": [
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/settings",
      "method": "settings",
      "httpMethod": "post",
      "tag": "Accounts",
      "typeScriptTag": "accounts",
      "description": "Settings",
      "parameters": [
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/sign_in",
      "method": "loginWithEmail,PasswordAndApplicationKey",
      "httpMethod": "post",
      "tag": "Accounts",
      "typeScriptTag": "accounts",
      "description": "Login with email, password and application key",
      "parameters": [
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/update_password",
      "method": "updatePassword",
      "httpMethod": "put",
      "tag": "Accounts",
      "typeScriptTag": "accounts",
      "description": "Update Password",
      "parameters": [
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/addresses/places_autocomplete",
      "method": "getAutocompletePlaces",
      "httpMethod": "post",
      "tag": "Adresses",
      "typeScriptTag": "adresses",
      "description": "Get autocomplete places",
      "parameters": [
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": []
    },
    {
      "url": "/addresses/places_details",
      "method": "getAutocompletePlacesDetails",
      "httpMethod": "post",
      "tag": "Adresses",
      "typeScriptTag": "adresses",
      "description": "Get autocomplete places details",
      "parameters": [
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/catchement_areas",
      "method": "listAllCatchementAreas",
      "httpMethod": "get",
      "tag": "Catchement Areas",
      "typeScriptTag": "catchementAreas",
      "description": "List all catchement areas",
      "parameters": [
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/catchement_areas/{id}",
      "method": "getACatchementArea",
      "httpMethod": "get",
      "tag": "Catchement Areas",
      "typeScriptTag": "catchementAreas",
      "description": "Get a Catchement Area",
      "parameters": [
        {
          "name": "id",
          "schema": "number",
          "required": true,
          "description": "Numeric `id` of the Catchement Area"
        },
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/credit_cards",
      "method": "listAllCreditCardsForTheCurrentUser",
      "httpMethod": "get",
      "tag": "CreditCards",
      "typeScriptTag": "creditCards",
      "description": "List all CreditCards for the current User",
      "parameters": [
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": []
    },
    {
      "url": "/credit_cards/{id}",
      "method": "getACreditCard",
      "httpMethod": "get",
      "tag": "CreditCards",
      "typeScriptTag": "creditCards",
      "description": "Get a CreditCard",
      "parameters": [
        {
          "name": "id",
          "schema": "number",
          "required": true,
          "description": "Numeric `id` of the Credit Card"
        }
      ],
      "responses": []
    },
    {
      "url": "/products",
      "method": "listAllProducts",
      "httpMethod": "get",
      "tag": "Products",
      "typeScriptTag": "products",
      "description": "List all products",
      "parameters": [
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}",
      "method": "getAProduct",
      "httpMethod": "get",
      "tag": "Products",
      "typeScriptTag": "products",
      "description": "Get a Product",
      "parameters": [
        {
          "name": "id",
          "schema": "number",
          "required": true,
          "description": "Numeric `id` of the Product"
        },
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/promotional_codes",
      "method": "getAllPromotionalCodesForUser",
      "httpMethod": "get",
      "tag": "Promotional Codes",
      "typeScriptTag": "promotionalCodes",
      "description": "Get all promotional codes for user",
      "parameters": [
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/promotional_codes",
      "method": "addAPromotionalCode",
      "httpMethod": "post",
      "tag": "Promotional Codes",
      "typeScriptTag": "promotionalCodes",
      "description": "Add a promotional code",
      "parameters": [
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        }
      ],
      "responses": []
    },
    {
      "url": "/rides/{id}",
      "method": "getARide",
      "httpMethod": "get",
      "tag": "Rides",
      "typeScriptTag": "rides",
      "description": "Get a ride",
      "parameters": [
        {
          "name": "id",
          "schema": "number",
          "required": true,
          "description": "Numeric `id` of Ride"
        },
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rides/{id}/cancel",
      "method": "cancelARide",
      "httpMethod": "get",
      "tag": "Rides",
      "typeScriptTag": "rides",
      "description": "Cancel a Ride",
      "parameters": [
        {
          "name": "id",
          "schema": "number",
          "required": true,
          "description": "Numeric `id` of Ride"
        },
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rides/{id}/cancel_fees",
      "method": "cancelFeeOfARide",
      "httpMethod": "get",
      "tag": "Rides",
      "typeScriptTag": "rides",
      "description": "Cancel fee of a Ride",
      "parameters": [
        {
          "name": "id",
          "schema": "number",
          "required": true,
          "description": "Numeric `id` of Ride"
        },
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rides/{id}/estimate",
      "method": "estimateARide",
      "httpMethod": "get",
      "tag": "Rides",
      "typeScriptTag": "rides",
      "description": "Estimate a ride",
      "parameters": [
        {
          "name": "id",
          "schema": "number",
          "required": true,
          "description": "Numeric `id` of Ride"
        },
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rides/{id}/reserve",
      "method": "reserveARide",
      "httpMethod": "post",
      "tag": "Rides",
      "typeScriptTag": "rides",
      "description": "Reserve a ride",
      "parameters": [
        {
          "name": "id",
          "schema": "number",
          "required": true,
          "description": "Numeric `id` of Ride"
        },
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rides?page={page}&per_page={per_page}",
      "method": "getAllUserRides",
      "httpMethod": "get",
      "tag": "Rides",
      "typeScriptTag": "rides",
      "description": "Get all user rides",
      "parameters": [
        {
          "name": "page",
          "schema": "number",
          "required": true,
          "description": "Number of the page to load"
        },
        {
          "name": "perPage",
          "schema": "number",
          "required": true,
          "description": "Number of items per page to load"
        },
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": []
    },
    {
      "url": "/rides?page={page}&per_page={per_page}",
      "method": "createARide",
      "httpMethod": "post",
      "tag": "Rides",
      "typeScriptTag": "rides",
      "description": "Create a ride",
      "parameters": [
        {
          "name": "accept",
          "schema": "string",
          "required": false,
          "description": "e.g. application/json"
        },
        {
          "name": "acceptLanguage",
          "schema": "string",
          "required": false,
          "description": "e.g. en"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/{version}",
      "method": "retrieveTheEntryPointOnVersion",
      "httpMethod": "get",
      "tag": "EcoTa.co API Root",
      "typeScriptTag": "ecoTaCoApiRoot",
      "description": "Retrieve the Entry Point on Version",
      "parameters": [
        {
          "name": "version",
          "schema": "string",
          "required": true,
          "description": "Ecotaco API version"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "http://api.staging-ecotaco.com",
  "apiDescription": "The API ecotaco allows you to connect, create an account,\nmanage your credit cards and order rides.\n\n# Authentication\n\nEcotaco API use a system of application key and authentification token.\n\n## Application key :\n\nThe application key is generated by Ecota.co and unique to an application.\n\nBefore accessing EcoTa.co APIs, you need to register your application. Please supply the following information to dev@ecota.co:\n\n- Application name\n\n- Company (if appropriate)\n\n- Contact name, phone and address\n\n- Contact email\n\n- Is this a web application, a desktop application, or an application running on a device?\n\n- Short description of your application\n\nIt **must** be passed on request : \"accounts -> login\", \"accounts -> facebook login\" and \"accounts -> register\" .\n\n## Authentification token :\n\nThe authentification token is retrieved at login or register of an user.\n\nIt **must** be passed in request for authenticate action in Authorization HTTP header.\n\nExample :\n\nAuthorization: Token token=e55887022c1aca4c86abcc49e85ceb8a0c855d2af4d9fac75c08040a583dcde4\n\n# Language\n\nOn some of our resources, we filter the content displayed based on the Accept-Language header.\nIf the language is not defined or if we don't use the language defined in this header, we automatically use French as the default language.\nEcoTa.co currently support two languages: English, French. (\"en\" and \"fr\")\n\n# Encoding\n\nAll requests and answers on EcoTa.co are in UTF-8.",
  "apiTitle": "api.ecota.co v2",
  "endpoints": 23,
  "sdkMethods": 27,
  "schemas": 24,
  "parameters": 58,
  "difficultyScore": 53.5,
  "difficulty": "Easy"
}