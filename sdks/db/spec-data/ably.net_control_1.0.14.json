{
  "providerName": "ably.net",
  "openApiRaw": "https://raw.githubusercontent.com/ably/open-specs/main/definitions/control-v1.yaml",
  "securitySchemes": {
    "bearer_auth": {
      "description": "Control API uses bearer authentication. You need to generate an access token for use with this API. More details can be found in the <a href=\"https://ably.com/documentation/control-api/#authentication\">Ably documentation</a>.",
      "scheme": "bearer",
      "type": "http"
    }
  },
  "homepage": "ably.net",
  "serviceName": "control",
  "apiVersion": "1.0.14",
  "methods": [
    {
      "url": "/accounts/{account_id}/apps",
      "method": "/accounts/{accountId}/appsGet",
      "httpMethod": "get",
      "tag": "apps",
      "typeScriptTag": "apps",
      "description": "Lists apps",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "The account ID for which to retrieve the associated applications."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{account_id}/apps",
      "method": "/accounts/{accountId}/appsPost",
      "httpMethod": "post",
      "tag": "apps",
      "typeScriptTag": "apps",
      "description": "Creates an app",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "The account ID of the account in which to create the application."
        },
        {
          "name": "apnsCertificate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "apnsPrivateKey",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "apnsUseSandboxEndpoint",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "fcmKey",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tlsOnly",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/apps/{app_id}/keys",
      "method": "/apps/{appId}/keysGet",
      "httpMethod": "get",
      "tag": "keys",
      "typeScriptTag": "keys",
      "description": "Lists app keys",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The application ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        },
        {
          "statusCode": "504",
          "description": ""
        }
      ]
    },
    {
      "url": "/apps/{app_id}/keys",
      "method": "/apps/{appId}/keysPost",
      "httpMethod": "post",
      "tag": "keys",
      "typeScriptTag": "keys",
      "description": "Creates a key",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The application ID."
        },
        {
          "name": "capabilities",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "channels",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/apps/{app_id}/keys/{key_id}",
      "method": "/apps/{appId}/keys/{keyId}Patch",
      "httpMethod": "patch",
      "tag": "keys",
      "typeScriptTag": "keys",
      "description": "Updates a key",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The application ID."
        },
        {
          "name": "keyId",
          "schema": "string",
          "required": true,
          "description": "The API key ID."
        },
        {
          "name": "capabilities",
          "schema": "array",
          "description": ""
        },
        {
          "name": "channels",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        },
        {
          "statusCode": "504",
          "description": ""
        }
      ]
    },
    {
      "url": "/apps/{app_id}/keys/{key_id}/revoke",
      "method": "/apps/{appId}/keys/{keyId}/revokePost",
      "httpMethod": "post",
      "tag": "keys",
      "typeScriptTag": "keys",
      "description": "Revokes a key",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The application ID."
        },
        {
          "name": "keyId",
          "schema": "string",
          "required": true,
          "description": "The key ID."
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        },
        {
          "statusCode": "504",
          "description": ""
        }
      ]
    },
    {
      "url": "/apps/{app_id}/namespaces",
      "method": "/apps/{appId}/namespacesGet",
      "httpMethod": "get",
      "tag": "namespaces",
      "typeScriptTag": "namespaces",
      "description": "Lists namespaces",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The application ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        },
        {
          "statusCode": "504",
          "description": ""
        }
      ]
    },
    {
      "url": "/apps/{app_id}/namespaces",
      "method": "/apps/{appId}/namespacesPost",
      "httpMethod": "post",
      "tag": "namespaces",
      "typeScriptTag": "namespaces",
      "description": "Creates a namespace",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The application ID."
        },
        {
          "name": "authenticated",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "persistLast",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "persisted",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "pushEnabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "tlsOnly",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/apps/{app_id}/namespaces/{namespace_id}",
      "method": "/apps/{appId}/namespaces/{namespaceId}Delete",
      "httpMethod": "delete",
      "tag": "namespaces",
      "typeScriptTag": "namespaces",
      "description": "Deletes a namespace",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The application ID."
        },
        {
          "name": "namespaceId",
          "schema": "string",
          "required": true,
          "description": "The namespace ID."
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        },
        {
          "statusCode": "504",
          "description": ""
        }
      ]
    },
    {
      "url": "/apps/{app_id}/namespaces/{namespace_id}",
      "method": "/apps/{appId}/namespaces/{namespaceId}Patch",
      "httpMethod": "patch",
      "tag": "namespaces",
      "typeScriptTag": "namespaces",
      "description": "Updates a namespace",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The application ID."
        },
        {
          "name": "namespaceId",
          "schema": "string",
          "required": true,
          "description": "The namespace ID."
        },
        {
          "name": "authenticated",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "persistLast",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "persisted",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "pushEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "tlsOnly",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        },
        {
          "statusCode": "504",
          "description": ""
        }
      ]
    },
    {
      "url": "/apps/{app_id}/queues",
      "method": "/apps/{appId}/queuesGet",
      "httpMethod": "get",
      "tag": "queues",
      "typeScriptTag": "queues",
      "description": "Lists queues",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The application ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        },
        {
          "statusCode": "503",
          "description": ""
        },
        {
          "statusCode": "504",
          "description": ""
        }
      ]
    },
    {
      "url": "/apps/{app_id}/queues",
      "method": "/apps/{appId}/queuesPost",
      "httpMethod": "post",
      "tag": "queues",
      "typeScriptTag": "queues",
      "description": "Creates a queue",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The application ID."
        },
        {
          "name": "maxLength",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "region",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ttl",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/apps/{app_id}/queues/{queue_id}",
      "method": "/apps/{appId}/queues/{queueId}Delete",
      "httpMethod": "delete",
      "tag": "queues",
      "typeScriptTag": "queues",
      "description": "Deletes a queue",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The application ID."
        },
        {
          "name": "queueId",
          "schema": "string",
          "required": true,
          "description": "The queue ID."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        },
        {
          "statusCode": "503",
          "description": ""
        }
      ]
    },
    {
      "url": "/apps/{app_id}/rules",
      "method": "/apps/{appId}/rulesGet",
      "httpMethod": "get",
      "tag": "rules",
      "typeScriptTag": "rules",
      "description": "Lists Reactor rules",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The application ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        },
        {
          "statusCode": "504",
          "description": ""
        }
      ]
    },
    {
      "url": "/apps/{app_id}/rules",
      "method": "/apps/{appId}/rulesPost",
      "httpMethod": "post",
      "tag": "rules",
      "typeScriptTag": "rules",
      "description": "Creates a Reactor rule",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The application ID."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        },
        {
          "statusCode": "504",
          "description": ""
        }
      ]
    },
    {
      "url": "/apps/{app_id}/rules/{rule_id}",
      "method": "/apps/{appId}/rules/{ruleId}Delete",
      "httpMethod": "delete",
      "tag": "rules",
      "typeScriptTag": "rules",
      "description": "Deletes a Reactor rule",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The application ID."
        },
        {
          "name": "ruleId",
          "schema": "string",
          "required": true,
          "description": "The rule ID."
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        },
        {
          "statusCode": "504",
          "description": ""
        }
      ]
    },
    {
      "url": "/apps/{app_id}/rules/{rule_id}",
      "method": "/apps/{appId}/rules/{ruleId}Get",
      "httpMethod": "get",
      "tag": "rules",
      "typeScriptTag": "rules",
      "description": "Gets a reactor rule by rule ID",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The application ID."
        },
        {
          "name": "ruleId",
          "schema": "string",
          "required": true,
          "description": "The rule ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        },
        {
          "statusCode": "504",
          "description": ""
        }
      ]
    },
    {
      "url": "/apps/{app_id}/rules/{rule_id}",
      "method": "/apps/{appId}/rules/{ruleId}Patch",
      "httpMethod": "patch",
      "tag": "rules",
      "typeScriptTag": "rules",
      "description": "Updates a Reactor rule",
      "parameters": [
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "The application ID."
        },
        {
          "name": "ruleId",
          "schema": "string",
          "required": true,
          "description": "The rule ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        },
        {
          "statusCode": "504",
          "description": ""
        }
      ]
    },
    {
      "url": "/apps/{id}",
      "method": "/apps/{id}Delete",
      "httpMethod": "delete",
      "tag": "apps",
      "typeScriptTag": "apps",
      "description": "Deletes an app",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the application to be deleted."
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/apps/{id}",
      "method": "/apps/{id}Patch",
      "httpMethod": "patch",
      "tag": "apps",
      "typeScriptTag": "apps",
      "description": "Updates an app",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of application to be updated."
        },
        {
          "name": "apnsCertificate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "apnsPrivateKey",
          "schema": "string",
          "description": ""
        },
        {
          "name": "apnsUseSandboxEndpoint",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "fcmKey",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tlsOnly",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/apps/{id}/pkcs12",
      "method": "/apps/{id}/pkcs12Post",
      "httpMethod": "post",
      "tag": "apps",
      "typeScriptTag": "apps",
      "description": "Updates app's APNs info from a `.p12` file",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The application ID."
        },
        {
          "name": "p12File",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "p12Pass",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/me",
      "method": "/meGet",
      "httpMethod": "get",
      "tag": "tokens",
      "typeScriptTag": "tokens",
      "description": "Get token details",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://control.ably.net/v1",
  "apiDescription": "Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.\n\nDetailed information on using this API can be found in the Ably <a href=\"https://ably.com/documentation/control-api\">developer documentation</a>.\n\nControl API is currently in Beta.\n",
  "apiTitle": "Control API v1",
  "endpoints": 13,
  "sdkMethods": 22,
  "schemas": 57,
  "parameters": 66,
  "difficultyScore": 67,
  "difficulty": "Easy"
}