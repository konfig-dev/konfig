{
  "providerName": "adyen.com",
  "openApiRaw": "https://raw.githubusercontent.com/Adyen/adyen-openapi/main/json/LegalEntityService-v1.json",
  "securitySchemes": {
    "ApiKeyAuth": {
      "in": "header",
      "name": "X-API-Key",
      "type": "apiKey"
    },
    "BasicAuth": {
      "scheme": "basic",
      "type": "http"
    }
  },
  "homepage": "adyen.com",
  "serviceName": "LegalEntityService",
  "apiVersion": "1",
  "methods": [
    {
      "url": "/businessLines",
      "method": "postBusinessLines",
      "httpMethod": "post",
      "tag": "Business lines",
      "description": "Create a business line",
      "parameters": [
        {
          "name": "capability",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "industryCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "legalEntityId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "salesChannels",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "sourceOfFunds",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "webData",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "webDataExemption",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/businessLines/{id}",
      "method": "deleteBusinessLinesId",
      "httpMethod": "delete",
      "tag": "Business lines",
      "description": "Delete a business line",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the business line to be deleted."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/businessLines/{id}",
      "method": "getBusinessLinesId",
      "httpMethod": "get",
      "tag": "Business lines",
      "description": "Get a business line",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the business line."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents",
      "method": "postDocuments",
      "httpMethod": "post",
      "tag": "Documents",
      "description": "Upload a document for verification checks",
      "parameters": [
        {
          "name": "x-requested-verification-code",
          "schema": "string",
          "description": "Use a suberror code as your requested verification code. You can include one code at a time in your request header. Requested verification codes can only be used in your test environment."
        },
        {
          "name": "attachment",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "attachments",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "creationDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "expiryDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "fileName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "issuerCountry",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "issuerState",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modificationDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "owner",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents/{id}",
      "method": "deleteDocumentsId",
      "httpMethod": "delete",
      "tag": "Documents",
      "description": "Delete a document",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the document to be deleted."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents/{id}",
      "method": "getDocumentsId",
      "httpMethod": "get",
      "tag": "Documents",
      "description": "Get a document",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the document."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents/{id}",
      "method": "patchDocumentsId",
      "httpMethod": "patch",
      "tag": "Documents",
      "description": "Update a document",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the document to be updated."
        },
        {
          "name": "x-requested-verification-code",
          "schema": "string",
          "description": "Use the requested verification code 0_0001 to resolve any suberrors associated with the document. Requested verification codes can only be used in your test environment."
        },
        {
          "name": "attachment",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "attachments",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "creationDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "expiryDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "fileName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "issuerCountry",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "issuerState",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modificationDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "owner",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/legalEntities",
      "method": "postLegalEntities",
      "httpMethod": "post",
      "tag": "Legal entities",
      "description": "Create a legal entity",
      "parameters": [
        {
          "name": "x-requested-verification-code",
          "schema": "string",
          "description": "Use a suberror code as your requested verification code. You can include one code at a time in your request header. Requested verification codes can only be used in your test environment."
        },
        {
          "name": "capabilities",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "entityAssociations",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "individual",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "organization",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "trust",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "unincorporatedPartnership",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "verificationPlan",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/legalEntities/{id}",
      "method": "getLegalEntitiesId",
      "httpMethod": "get",
      "tag": "Legal entities",
      "description": "Get a legal entity",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the legal entity."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/legalEntities/{id}",
      "method": "patchLegalEntitiesId",
      "httpMethod": "patch",
      "tag": "Legal entities",
      "description": "Update a legal entity",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the legal entity."
        },
        {
          "name": "x-requested-verification-code",
          "schema": "string",
          "description": "Use the requested verification code 0_0001 to resolve any suberrors associated with the legal entity. Requested verification codes can only be used in your test environment."
        },
        {
          "name": "capabilities",
          "schema": "object",
          "description": ""
        },
        {
          "name": "entityAssociations",
          "schema": "array",
          "description": ""
        },
        {
          "name": "individual",
          "schema": "object",
          "description": ""
        },
        {
          "name": "organization",
          "schema": "object",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "trust",
          "schema": "object",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "unincorporatedPartnership",
          "schema": "object",
          "description": ""
        },
        {
          "name": "verificationPlan",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/legalEntities/{id}/businessLines",
      "method": "getLegalEntitiesIdBusinessLines",
      "httpMethod": "get",
      "tag": "Legal entities",
      "description": "Get all business lines under a legal entity",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the legal entity."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/legalEntities/{id}/onboardingLinks",
      "method": "postLegalEntitiesIdOnboardingLinks",
      "httpMethod": "post",
      "tag": "Hosted Onboarding",
      "description": "Get a link to an Adyen-hosted onboarding page",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the legal entity"
        },
        {
          "name": "locale",
          "schema": "string",
          "description": ""
        },
        {
          "name": "redirectUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "settings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "themeId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/legalEntities/{id}/pciQuestionnaires",
      "method": "getLegalEntitiesIdPciQuestionnaires",
      "httpMethod": "get",
      "tag": "PCI questionnaires",
      "description": "Get PCI questionnaire details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the legal entity to get PCI questionnaire information."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/legalEntities/{id}/pciQuestionnaires/generatePciTemplates",
      "method": "postLegalEntitiesIdPciQuestionnairesGeneratePciTemplates",
      "httpMethod": "post",
      "tag": "PCI questionnaires",
      "description": "Generate PCI questionnaire",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the legal entity to get PCI questionnaire information."
        },
        {
          "name": "additionalSalesChannels",
          "schema": "array",
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/legalEntities/{id}/pciQuestionnaires/signPciTemplates",
      "method": "postLegalEntitiesIdPciQuestionnairesSignPciTemplates",
      "httpMethod": "post",
      "tag": "PCI questionnaires",
      "description": "Sign PCI questionnaire",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The legal entity ID of the user that has a contractual relationship with your platform."
        },
        {
          "name": "pciTemplateReferences",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "signedBy",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/legalEntities/{id}/pciQuestionnaires/{pciid}",
      "method": "getLegalEntitiesIdPciQuestionnairesPciid",
      "httpMethod": "get",
      "tag": "PCI questionnaires",
      "description": "Get PCI questionnaire",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The legal entity ID of the individual who signed the PCI questionnaire."
        },
        {
          "name": "pciid",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the signed PCI questionnaire."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/legalEntities/{id}/termsOfService",
      "method": "postLegalEntitiesIdTermsOfService",
      "httpMethod": "post",
      "tag": "Terms of Service",
      "description": "Get Terms of Service document",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the legal entity. For sole proprietorships, this is the individual legal entity ID of the owner."
        },
        {
          "name": "language",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/legalEntities/{id}/termsOfService/{termsofservicedocumentid}",
      "method": "patchLegalEntitiesIdTermsOfServiceTermsofservicedocumentid",
      "httpMethod": "patch",
      "tag": "Terms of Service",
      "description": "Accept Terms of Service",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the legal entity. For sole proprietorships, this is the individual legal entity ID of the owner."
        },
        {
          "name": "termsofservicedocumentid",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the Terms of Service document."
        },
        {
          "name": "acceptedBy",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ipAddress",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/legalEntities/{id}/termsOfServiceAcceptanceInfos",
      "method": "getLegalEntitiesIdTermsOfServiceAcceptanceInfos",
      "httpMethod": "get",
      "tag": "Terms of Service",
      "description": "Get Terms of Service information for a legal entity",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the legal entity. For sole proprietorships, this is the individual legal entity ID of the owner."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/legalEntities/{id}/termsOfServiceStatus",
      "method": "getLegalEntitiesIdTermsOfServiceStatus",
      "httpMethod": "get",
      "tag": "Terms of Service",
      "description": "Get Terms of Service status",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the legal entity. For sole proprietorships, this is the individual legal entity ID of the owner."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/themes",
      "method": "getThemes",
      "httpMethod": "get",
      "tag": "Hosted Onboarding",
      "description": "Get a list of hosted onboarding page themes",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/themes/{id}",
      "method": "getThemesId",
      "httpMethod": "get",
      "tag": "Hosted Onboarding",
      "description": "Get an onboarding link theme",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the theme"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/transferInstruments",
      "method": "postTransferInstruments",
      "httpMethod": "post",
      "tag": "Transfer instruments",
      "description": "Create a transfer instrument",
      "parameters": [
        {
          "name": "x-requested-verification-code",
          "schema": "string",
          "description": "Use a suberror code as your requested verification code. You can include one code at a time in your request header. Requested verification codes can only be used in your test environment."
        },
        {
          "name": "bankAccount",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "legalEntityId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/transferInstruments/{id}",
      "method": "deleteTransferInstrumentsId",
      "httpMethod": "delete",
      "tag": "Transfer instruments",
      "description": "Delete a transfer instrument",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the transfer instrument to be deleted."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/transferInstruments/{id}",
      "method": "getTransferInstrumentsId",
      "httpMethod": "get",
      "tag": "Transfer instruments",
      "description": "Get a transfer instrument",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the transfer instrument."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/transferInstruments/{id}",
      "method": "patchTransferInstrumentsId",
      "httpMethod": "patch",
      "tag": "Transfer instruments",
      "description": "Update a transfer instrument",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the transfer instrument."
        },
        {
          "name": "x-requested-verification-code",
          "schema": "string",
          "description": "Use the requested verification code 0_0001 to resolve any suberrors associated with the transfer instrument. Requested verification codes can only be used in your test environment."
        },
        {
          "name": "bankAccount",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "legalEntityId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://kyc-test.adyen.com/lem/v1",
  "apiDescription": "The Legal Entity Management API enables you to manage legal entities that contain information required for verification. \n## Authentication\nYour Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value. For example:\n\n```\ncurl\n-H \"X-API-Key: YOUR_API_KEY\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\nAlternatively, you can use the username and password of your API credential to connect to the API using basic authentication. For example:\n\n```\ncurl\n-U \"ws_123456@Scope.Company_YOUR_COMPANY_ACCOUNT\":\"YourWsPassword\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n## Versioning\nThe Legal Entity Management API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://kyc-test.adyen.com/lem/v1/legalEntities\n```\n>If you are using hosted onboarding and just beginning your integration, use v3 for your API requests. Otherwise, use v2.\n\n## Going live\nWhen going live, your Adyen contact will provide your API credential for the live environment. You can then use the API key or the username and password to send requests to `https://kyc-live.adyen.com/lem/v1`.\n\n",
  "apiTitle": "Legal Entity Management API",
  "endpoints": 20,
  "sdkMethods": 26,
  "schemas": 56,
  "parameters": 98,
  "contactUrl": "https://github.com/Adyen/adyen-openapi",
  "difficultyScore": 78.5,
  "difficulty": "Easy"
}