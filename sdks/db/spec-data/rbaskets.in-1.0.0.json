{
  "providerName": "rbaskets.in",
  "openApiRaw": "https://raw.githubusercontent.com/darklynx/request-baskets/master/doc/api-swagger.yaml",
  "securitySchemes": {
    "basket_token": {
      "description": "Basket assigned secure token",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    },
    "service_token": {
      "description": "Service master token",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "homepage": "rbaskets.in",
  "apiVersion": "1.0.0",
  "methods": [
    {
      "url": "/api/baskets",
      "method": "/api/basketsGet",
      "httpMethod": "get",
      "tag": "baskets",
      "description": "Get baskets",
      "parameters": [
        {
          "name": "max",
          "schema": "integer",
          "required": false,
          "description": "Maximum number of basket names to return; default 20"
        },
        {
          "name": "skip",
          "schema": "integer",
          "required": false,
          "description": "Number of basket names to skip; default 0"
        },
        {
          "name": "q",
          "schema": "string",
          "required": false,
          "description": "Query string to filter result, only those basket names that match the query will be included in response"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/baskets/{name}",
      "method": "/api/baskets/{name}Delete",
      "httpMethod": "delete",
      "tag": "baskets",
      "description": "Delete basket",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The basket name"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/baskets/{name}",
      "method": "/api/baskets/{name}Get",
      "httpMethod": "get",
      "tag": "baskets",
      "description": "Get basket settings",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The basket name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/baskets/{name}",
      "method": "/api/baskets/{name}Post",
      "httpMethod": "post",
      "tag": "baskets",
      "description": "Create new basket",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The name of new basket"
        },
        {
          "name": "capacity",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "expand_path",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "forward_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "insecure_tls",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "proxy_response",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/baskets/{name}",
      "method": "/api/baskets/{name}Put",
      "httpMethod": "put",
      "tag": "baskets",
      "description": "Update basket settings",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The basket name"
        },
        {
          "name": "capacity",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "expand_path",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "forward_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "insecure_tls",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "proxy_response",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/baskets/{name}/requests",
      "method": "/api/baskets/{name}/requestsDelete",
      "httpMethod": "delete",
      "tag": "requests",
      "description": "Delete all requests",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The basket name"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/baskets/{name}/requests",
      "method": "/api/baskets/{name}/requestsGet",
      "httpMethod": "get",
      "tag": "requests",
      "description": "Get collected requests",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The basket name"
        },
        {
          "name": "max",
          "schema": "integer",
          "required": false,
          "description": "Maximum number of requests to return; default 20"
        },
        {
          "name": "skip",
          "schema": "integer",
          "required": false,
          "description": "Number of requests to skip; default 0"
        },
        {
          "name": "q",
          "schema": "string",
          "required": false,
          "description": "Query string to filter result, only requests that match the query will be included in response"
        },
        {
          "name": "in",
          "schema": "string",
          "required": false,
          "description": "Defines what is taken into account when filtering is applied: `body` - search in content body of collected requests,\n`query` - search among query parameters of collected requests, `headers` - search among request header values,\n`any` - search anywhere; default `any`\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/baskets/{name}/responses/{method}",
      "method": "/api/baskets/{name}/responses/{method}Get",
      "httpMethod": "get",
      "tag": "responses",
      "description": "Get response settings",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The basket name"
        },
        {
          "name": "method",
          "schema": "string",
          "required": true,
          "description": "The HTTP method this response is configured for"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/baskets/{name}/responses/{method}",
      "method": "/api/baskets/{name}/responses/{method}Put",
      "httpMethod": "put",
      "tag": "responses",
      "description": "Update response settings",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The basket name"
        },
        {
          "name": "method",
          "schema": "string",
          "required": true,
          "description": "The HTTP method this response is configured for"
        },
        {
          "name": "body",
          "schema": "string",
          "description": ""
        },
        {
          "name": "headers",
          "schema": "object",
          "description": ""
        },
        {
          "name": "is_template",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "status",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/stats",
      "method": "/api/statsGet",
      "httpMethod": "get",
      "tag": "baskets",
      "description": "Get baskets statistics",
      "parameters": [
        {
          "name": "max",
          "schema": "integer",
          "required": false,
          "description": "Maximum number of basket names to return; default 5"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/version",
      "method": "/api/versionGet",
      "httpMethod": "get",
      "tag": "service",
      "description": "Get service version",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/baskets",
      "method": "/basketsGet",
      "httpMethod": "get",
      "tag": "baskets",
      "description": "Get baskets",
      "parameters": [
        {
          "name": "max",
          "schema": "integer",
          "required": false,
          "description": "Maximum number of basket names to return; default 20"
        },
        {
          "name": "skip",
          "schema": "integer",
          "required": false,
          "description": "Number of basket names to skip; default 0"
        },
        {
          "name": "q",
          "schema": "string",
          "required": false,
          "description": "Query string to filter result, only those basket names that match the query will be included in response"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/baskets/{name}",
      "method": "/baskets/{name}Delete",
      "httpMethod": "delete",
      "tag": "baskets",
      "description": "Delete basket",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The basket name"
        }
      ],
      "responses": []
    },
    {
      "url": "/baskets/{name}",
      "method": "/baskets/{name}Get",
      "httpMethod": "get",
      "tag": "baskets",
      "description": "Get basket settings",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The basket name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/baskets/{name}",
      "method": "/baskets/{name}Post",
      "httpMethod": "post",
      "tag": "baskets",
      "description": "Create new basket",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The name of new basket"
        },
        {
          "name": "capacity",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "expand_path",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "forward_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "insecure_tls",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "proxy_response",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/baskets/{name}",
      "method": "/baskets/{name}Put",
      "httpMethod": "put",
      "tag": "baskets",
      "description": "Update basket settings",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The basket name"
        },
        {
          "name": "capacity",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "expand_path",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "forward_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "insecure_tls",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "proxy_response",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/baskets/{name}/requests",
      "method": "/baskets/{name}/requestsDelete",
      "httpMethod": "delete",
      "tag": "requests",
      "description": "Delete all requests",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The basket name"
        }
      ],
      "responses": []
    },
    {
      "url": "/baskets/{name}/requests",
      "method": "/baskets/{name}/requestsGet",
      "httpMethod": "get",
      "tag": "requests",
      "description": "Get collected requests",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The basket name"
        },
        {
          "name": "max",
          "schema": "integer",
          "required": false,
          "description": "Maximum number of requests to return; default 20"
        },
        {
          "name": "skip",
          "schema": "integer",
          "required": false,
          "description": "Number of requests to skip; default 0"
        },
        {
          "name": "q",
          "schema": "string",
          "required": false,
          "description": "Query string to filter result, only requests that match the query will be included in response"
        },
        {
          "name": "in",
          "schema": "string",
          "required": false,
          "description": "Defines what is taken into account when filtering is applied: `body` - search in content body of collected requests,\n`query` - search among query parameters of collected requests, `headers` - search among request header values,\n`any` - search anywhere; default `any`\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/baskets/{name}/responses/{method}",
      "method": "/baskets/{name}/responses/{method}Get",
      "httpMethod": "get",
      "tag": "responses",
      "description": "Get response settings",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The basket name"
        },
        {
          "name": "method",
          "schema": "string",
          "required": true,
          "description": "The HTTP method this response is configured for"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/baskets/{name}/responses/{method}",
      "method": "/baskets/{name}/responses/{method}Put",
      "httpMethod": "put",
      "tag": "responses",
      "description": "Update response settings",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The basket name"
        },
        {
          "name": "method",
          "schema": "string",
          "required": true,
          "description": "The HTTP method this response is configured for"
        },
        {
          "name": "body",
          "schema": "string",
          "description": ""
        },
        {
          "name": "headers",
          "schema": "object",
          "description": ""
        },
        {
          "name": "is_template",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "status",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": []
    }
  ],
  "apiBaseUrl": "https://rbaskets.in",
  "apiDescription": "RESTful API of [Request Baskets](https://rbaskets.in) service.\n\nRequest Baskets is an open source project of a service to collect HTTP requests and inspect them via RESTful\nAPI or web UI.\n\nCheck out the [project page](https://github.com/darklynx/request-baskets) for more detailed description.\n",
  "apiTitle": "Request Baskets API",
  "endpoints": 10,
  "sdkMethods": 20,
  "schemas": 10,
  "parameters": 63,
  "contactUrl": "https://github.com/darklynx",
  "difficultyScore": 40.75,
  "difficulty": "Easy"
}