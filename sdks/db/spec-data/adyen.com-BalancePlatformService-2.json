{
  "providerName": "adyen.com",
  "openApiRaw": "https://raw.githubusercontent.com/Adyen/adyen-openapi/main/json/BalancePlatformService-v2.json",
  "homepage": "adyen.com",
  "serviceName": "BalancePlatformService",
  "apiVersion": "2",
  "methods": [
    {
      "url": "/accountHolders",
      "method": "postAccountHolders",
      "httpMethod": "post",
      "tag": "Account holders",
      "description": "Create an account holder",
      "parameters": [
        {
          "name": "balancePlatform",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "capabilities",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "contactDetails",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "legalEntityId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "migratedAccountHolderCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "timeZone",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/accountHolders/{id}",
      "method": "getAccountHoldersId",
      "httpMethod": "get",
      "tag": "Account holders",
      "description": "Get an account holder",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the account holder."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/accountHolders/{id}",
      "method": "patchAccountHoldersId",
      "httpMethod": "patch",
      "tag": "Account holders",
      "description": "Update an account holder",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the account holder."
        },
        {
          "name": "balancePlatform",
          "schema": "string",
          "description": ""
        },
        {
          "name": "capabilities",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contactDetails",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "description": ""
        },
        {
          "name": "migratedAccountHolderCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "primaryBalanceAccount",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timeZone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "verificationDeadlines",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/accountHolders/{id}/balanceAccounts",
      "method": "getAccountHoldersIdBalanceAccounts",
      "httpMethod": "get",
      "tag": "Account holders",
      "description": "Get all balance accounts of an account holder",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the account holder."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The number of items that you want to skip."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The number of items returned per page, maximum 100 items. By default, the response returns 10 items per page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/accountHolders/{id}/taxForms",
      "method": "getAccountHoldersIdTaxForms",
      "httpMethod": "get",
      "tag": "Account holders",
      "description": "Get a tax form",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the account holder."
        },
        {
          "name": "formType",
          "schema": "string",
          "required": true,
          "description": "The type of tax form you want to retrieve. Accepted values are **US1099k** and **US1099nec**"
        },
        {
          "name": "year",
          "schema": "integer",
          "required": true,
          "description": "The tax year in YYYY format for the tax form you want to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/balanceAccounts",
      "method": "postBalanceAccounts",
      "httpMethod": "post",
      "tag": "Balance accounts",
      "description": "Create a balance account",
      "parameters": [
        {
          "name": "accountHolderId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "defaultCurrencyCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "migratedAccountCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "platformPaymentConfiguration",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "timeZone",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/balanceAccounts/{balanceAccountId}/sweeps",
      "method": "getBalanceAccountsBalanceAccountIdSweeps",
      "httpMethod": "get",
      "tag": "Balance accounts",
      "description": "Get all sweeps for a balance account",
      "parameters": [
        {
          "name": "balanceAccountId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the balance account."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The number of items that you want to skip."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The number of items returned per page, maximum 100 items. By default, the response returns 10 items per page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/balanceAccounts/{balanceAccountId}/sweeps",
      "method": "postBalanceAccountsBalanceAccountIdSweeps",
      "httpMethod": "post",
      "tag": "Balance accounts",
      "description": "Create a sweep",
      "parameters": [
        {
          "name": "balanceAccountId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the balance account."
        },
        {
          "name": "category",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "counterparty",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "priorities",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "reason",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "schedule",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sweepAmount",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "targetAmount",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "triggerAmount",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/balanceAccounts/{balanceAccountId}/sweeps/{sweepId}",
      "method": "deleteBalanceAccountsBalanceAccountIdSweepsSweepId",
      "httpMethod": "delete",
      "tag": "Balance accounts",
      "description": "Delete a sweep",
      "parameters": [
        {
          "name": "balanceAccountId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the balance account."
        },
        {
          "name": "sweepId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the sweep."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/balanceAccounts/{balanceAccountId}/sweeps/{sweepId}",
      "method": "getBalanceAccountsBalanceAccountIdSweepsSweepId",
      "httpMethod": "get",
      "tag": "Balance accounts",
      "description": "Get a sweep",
      "parameters": [
        {
          "name": "balanceAccountId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the balance account."
        },
        {
          "name": "sweepId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the sweep."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/balanceAccounts/{balanceAccountId}/sweeps/{sweepId}",
      "method": "patchBalanceAccountsBalanceAccountIdSweepsSweepId",
      "httpMethod": "patch",
      "tag": "Balance accounts",
      "description": "Update a sweep",
      "parameters": [
        {
          "name": "balanceAccountId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the balance account."
        },
        {
          "name": "sweepId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the sweep."
        },
        {
          "name": "category",
          "schema": "string",
          "description": ""
        },
        {
          "name": "counterparty",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "priorities",
          "schema": "array",
          "description": ""
        },
        {
          "name": "reason",
          "schema": "string",
          "description": ""
        },
        {
          "name": "schedule",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sweepAmount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "targetAmount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "triggerAmount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/balanceAccounts/{id}",
      "method": "getBalanceAccountsId",
      "httpMethod": "get",
      "tag": "Balance accounts",
      "description": "Get a balance account",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the balance account."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/balanceAccounts/{id}",
      "method": "patchBalanceAccountsId",
      "httpMethod": "patch",
      "tag": "Balance accounts",
      "description": "Update a balance account",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the balance account."
        },
        {
          "name": "accountHolderId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "description": ""
        },
        {
          "name": "platformPaymentConfiguration",
          "schema": "object",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timeZone",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/balanceAccounts/{id}/paymentInstruments",
      "method": "getBalanceAccountsIdPaymentInstruments",
      "httpMethod": "get",
      "tag": "Balance accounts",
      "description": "Get payment instruments linked to a balance account",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the balance account."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The number of items that you want to skip."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The number of items returned per page, maximum 100 items. By default, the response returns 10 items per page."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the payment instruments that you want to get. By default, the response includes payment instruments with any status."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/balancePlatforms/{id}",
      "method": "getBalancePlatformsId",
      "httpMethod": "get",
      "tag": "Platform",
      "description": "Get a balance platform",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the balance platform."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/balancePlatforms/{id}/accountHolders",
      "method": "getBalancePlatformsIdAccountHolders",
      "httpMethod": "get",
      "tag": "Platform",
      "description": "Get all account holders under a balance platform",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the balance platform."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The number of items that you want to skip."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The number of items returned per page, maximum 100 items. By default, the response returns 10 items per page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cardorders",
      "method": "getCardorders",
      "httpMethod": "get",
      "tag": "Card orders",
      "description": "Get a list of card orders",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": "The unique identifier of the card order. "
        },
        {
          "name": "cardManufacturingProfileId",
          "schema": "string",
          "required": false,
          "description": "The unique identifier of the card manufacturer profile."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the card order."
        },
        {
          "name": "txVariantCode",
          "schema": "string",
          "required": false,
          "description": "The unique code of the card manufacturer profile.\n\nPossible values: **mcmaestro**, **mc**, **visa**, **mcdebit**. "
        },
        {
          "name": "createdSince",
          "schema": "string",
          "required": false,
          "description": "Only include card orders that have been created on or after this point in time. The value must be in ISO 8601 format. For example, **2021-05-30T15:07:40Z**."
        },
        {
          "name": "createdUntil",
          "schema": "string",
          "required": false,
          "description": "Only include card orders that have been created on or before this point in time. The value must be in ISO 8601 format. For example, **2021-05-30T15:07:40Z**."
        },
        {
          "name": "lockedSince",
          "schema": "string",
          "required": false,
          "description": "Only include card orders that have been locked on or after this point in time. The value must be in ISO 8601 format. For example, **2021-05-30T15:07:40Z**."
        },
        {
          "name": "lockedUntil",
          "schema": "string",
          "required": false,
          "description": "Only include card orders that have been locked on or before this point in time. The value must be in ISO 8601 format. For example, **2021-05-30T15:07:40Z**."
        },
        {
          "name": "serviceCenter",
          "schema": "string",
          "required": false,
          "description": "The service center at which the card is issued. The value is case-sensitive. "
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Specifies the position of an element in a list of card orders. The response includes a list of card orders that starts at the specified offset.\n\n**Default:** 0, which means that the response contains all the elements in the list of card orders."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The number of card orders returned per page. **Default:** 10."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cardorders/{id}/items",
      "method": "getCardordersIdItems",
      "httpMethod": "get",
      "tag": "Card orders",
      "description": "Get card order items",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the card order."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Specifies the position of an element in a list of card orders. The response includes a list of card order items that starts at the specified offset.\n\n**Default:** 0, which means that the response contains all the elements in the list of card order items."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The number of card order items returned per page. **Default:** 10."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/grantAccounts/{id}",
      "method": "getGrantAccountsId",
      "httpMethod": "get",
      "tag": "Grant accounts",
      "description": "Get a grant account",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the grant account."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/grantOffers",
      "method": "getGrantOffers",
      "httpMethod": "get",
      "tag": "Grant offers",
      "description": "Get all available grant offers",
      "parameters": [
        {
          "name": "accountHolderId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the grant account."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/grantOffers/{grantOfferId}",
      "method": "getGrantOffersGrantOfferId",
      "httpMethod": "get",
      "tag": "Grant offers",
      "description": "Get a grant offer",
      "parameters": [
        {
          "name": "grantOfferId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the grant offer."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/networkTokens/{networkTokenId}",
      "method": "getNetworkTokensNetworkTokenId",
      "httpMethod": "get",
      "tag": "Network tokens",
      "description": "Get a network token",
      "parameters": [
        {
          "name": "networkTokenId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the network token."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/networkTokens/{networkTokenId}",
      "method": "patchNetworkTokensNetworkTokenId",
      "httpMethod": "patch",
      "tag": "Network tokens",
      "description": "Update a network token",
      "parameters": [
        {
          "name": "networkTokenId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the network token."
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/paymentInstrumentGroups",
      "method": "postPaymentInstrumentGroups",
      "httpMethod": "post",
      "tag": "Payment instrument groups",
      "description": "Create a payment instrument group",
      "parameters": [
        {
          "name": "balancePlatform",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "properties",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "txVariant",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/paymentInstrumentGroups/{id}",
      "method": "getPaymentInstrumentGroupsId",
      "httpMethod": "get",
      "tag": "Payment instrument groups",
      "description": "Get a payment instrument group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the payment instrument group."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/paymentInstrumentGroups/{id}/transactionRules",
      "method": "getPaymentInstrumentGroupsIdTransactionRules",
      "httpMethod": "get",
      "tag": "Payment instrument groups",
      "description": "Get all transaction rules for a payment instrument group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the payment instrument group."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/paymentInstruments",
      "method": "postPaymentInstruments",
      "httpMethod": "post",
      "tag": "Payment instruments",
      "description": "Create a payment instrument",
      "parameters": [
        {
          "name": "balanceAccountId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "bankAccount",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "card",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "issuingCountryCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "paymentInstrumentGroupId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "statusReason",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/paymentInstruments/{id}",
      "method": "getPaymentInstrumentsId",
      "httpMethod": "get",
      "tag": "Payment instruments",
      "description": "Get a payment instrument",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the payment instrument."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/paymentInstruments/{id}",
      "method": "patchPaymentInstrumentsId",
      "httpMethod": "patch",
      "tag": "Payment instruments",
      "description": "Update a payment instrument",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the payment instrument."
        },
        {
          "name": "balanceAccountId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "card",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "statusComment",
          "schema": "string",
          "description": ""
        },
        {
          "name": "statusReason",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/paymentInstruments/{id}/networkTokens",
      "method": "getPaymentInstrumentsIdNetworkTokens",
      "httpMethod": "get",
      "tag": "Payment instruments",
      "description": "List network tokens",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the payment instrument."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/paymentInstruments/{id}/reveal",
      "method": "getPaymentInstrumentsIdReveal",
      "httpMethod": "get",
      "tag": "Payment instruments",
      "description": "Get the PAN of a payment instrument",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the payment instrument."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/paymentInstruments/{id}/transactionRules",
      "method": "getPaymentInstrumentsIdTransactionRules",
      "httpMethod": "get",
      "tag": "Payment instruments",
      "description": "Get all transaction rules for a payment instrument",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the payment instrument."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/pins/change",
      "method": "postPinsChange",
      "httpMethod": "post",
      "tag": "PIN functionality",
      "description": "Change Pin",
      "parameters": [
        {
          "name": "encryptedKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "encryptedPinBlock",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "paymentInstrumentId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/pins/publicKey",
      "method": "getPinsPublicKey",
      "httpMethod": "get",
      "tag": "PIN functionality",
      "description": "Get RSA publicKey",
      "parameters": [
        {
          "name": "purpose",
          "schema": "string",
          "required": false,
          "description": "Purpose of publicKey."
        },
        {
          "name": "format",
          "schema": "string",
          "required": false,
          "description": "Format of publicKey."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/pins/reveal",
      "method": "postPinsReveal",
      "httpMethod": "post",
      "tag": "PIN functionality",
      "description": "Reveal Pin",
      "parameters": [
        {
          "name": "encryptedKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "paymentInstrumentId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/transactionRules",
      "method": "postTransactionRules",
      "httpMethod": "post",
      "tag": "Transaction rules",
      "description": "Create a transaction rule",
      "parameters": [
        {
          "name": "aggregationLevel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "endDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "entityKey",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "interval",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "outcomeType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "requestType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ruleRestrictions",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "score",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "startDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/transactionRules/{transactionRuleId}",
      "method": "deleteTransactionRulesTransactionRuleId",
      "httpMethod": "delete",
      "tag": "Transaction rules",
      "description": "Delete a transaction rule",
      "parameters": [
        {
          "name": "transactionRuleId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the transaction rule."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/transactionRules/{transactionRuleId}",
      "method": "getTransactionRulesTransactionRuleId",
      "httpMethod": "get",
      "tag": "Transaction rules",
      "description": "Get a transaction rule",
      "parameters": [
        {
          "name": "transactionRuleId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the transaction rule."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/transactionRules/{transactionRuleId}",
      "method": "patchTransactionRulesTransactionRuleId",
      "httpMethod": "patch",
      "tag": "Transaction rules",
      "description": "Update a transaction rule",
      "parameters": [
        {
          "name": "transactionRuleId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the transaction rule."
        },
        {
          "name": "aggregationLevel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "endDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "entityKey",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "interval",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "outcomeType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "requestType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ruleRestrictions",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "score",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "startDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/transferRoutes/calculate",
      "method": "postTransferRoutesCalculate",
      "httpMethod": "post",
      "tag": "Transfer routes",
      "description": "Calculate transfer routes",
      "parameters": [
        {
          "name": "balanceAccountId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "balancePlatform",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "category",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "counterparty",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "country",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "priorities",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/validateBankAccountIdentification",
      "method": "postValidateBankAccountIdentification",
      "httpMethod": "post",
      "tag": "Bank account validation",
      "description": "Validate a bank account",
      "parameters": [
        {
          "name": "accountIdentification",
          "schema": "undefined",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://balanceplatform-api-test.adyen.com/bcl/v2",
  "apiDescription": "The Configuration API enables you to create a platform where you can onboard your users as account holders and create balance accounts, cards, and business accounts.\n\n## Authentication\nYour Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication. For example:\n\n```\ncurl\n-H \"Content-Type: application/json\" \\\n-U \"ws@BalancePlatform.YOUR_BALANCE_PLATFORM\":\"YOUR_WS_PASSWORD\" \\\n...\n```\n## Versioning\nThe Configuration API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://balanceplatform-api-test.adyen.com/bcl/v2/accountHolders\n```\n## Going live\nWhen going live, your Adyen contact will provide your API credential for the live environment. You can then use the API key or the username and password to send requests to `https://balanceplatform-api-live.adyen.com/bcl/v2`.",
  "apiTitle": "Configuration API",
  "endpoints": 32,
  "sdkMethods": 41,
  "schemas": 135,
  "parameters": 180,
  "contactUrl": "https://github.com/Adyen/adyen-openapi",
  "difficultyScore": 153.5,
  "difficulty": "Medium"
}