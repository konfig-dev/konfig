{
  "providerName": "osf.io",
  "openApiRaw": "http://developer.osf.io/swagger.json",
  "securitySchemes": {},
  "categories": [
    "open_data"
  ],
  "homepage": "osf.io",
  "apiVersion": "2.0",
  "methods": [
    {
      "url": "/",
      "method": "baseRead",
      "httpMethod": "get",
      "tag": "Base",
      "typeScriptTag": "base",
      "description": "Root",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/actions/",
      "method": "logsActions",
      "httpMethod": "get",
      "tag": "Logs",
      "typeScriptTag": "logs",
      "description": "Actions",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/addons/",
      "method": "addonsList",
      "httpMethod": "get",
      "tag": "Addons",
      "typeScriptTag": "addons",
      "description": "List all addons",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/citations/styles/",
      "method": "citationsStylesList",
      "httpMethod": "get",
      "tag": "Citations",
      "typeScriptTag": "citations",
      "description": "List all citation styles",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/citations/styles/{style_id}/",
      "method": "citationsStylesRead",
      "httpMethod": "get",
      "tag": "Citations",
      "typeScriptTag": "citations",
      "description": "Retrieve a citation style",
      "parameters": [
        {
          "name": "styleId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the citation style."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/collections/",
      "method": "collectionsList",
      "httpMethod": "get",
      "tag": "Collections",
      "typeScriptTag": "collections",
      "description": "List all Collections",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/collections/",
      "method": "collectionsCreate",
      "httpMethod": "post",
      "tag": "Collections",
      "typeScriptTag": "collections",
      "description": "Create a Collection",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/collections/{collection_id}/",
      "method": "collectionsDelete",
      "httpMethod": "delete",
      "tag": "Collections",
      "typeScriptTag": "collections",
      "description": "Delete a Collection",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "A short id for that collection"
        }
      ],
      "responses": []
    },
    {
      "url": "/collections/{collection_id}/",
      "method": "collectionsDetail",
      "httpMethod": "get",
      "tag": "Collections",
      "typeScriptTag": "collections",
      "description": "Retrieve a Collection",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "A short id for that collection"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/collections/{collection_id}/collected_metadata/",
      "method": "collectionsMetadataRegistrationsList",
      "httpMethod": "get",
      "tag": "Collections",
      "typeScriptTag": "collections",
      "description": "Retrieve a list of collected metadata for a collection",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "A short id for that collection"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/collections/{collection_id}/collected_metadata/",
      "method": "collectionsAddMetadata",
      "httpMethod": "post",
      "tag": "Collections",
      "typeScriptTag": "collections",
      "description": "Add Metadata or Subjects to a Entity in a Collection",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "A short id for that collection"
        }
      ],
      "responses": []
    },
    {
      "url": "/collections/{collection_id}/collected_metadata/{cgm_id}",
      "method": "collectionsMetadataDelete",
      "httpMethod": "delete",
      "tag": "Collections",
      "typeScriptTag": "collections",
      "description": "Delete Collection Metadata from entitiy",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "A short id for that collection"
        },
        {
          "name": "cgmId",
          "schema": "string",
          "required": true,
          "description": "A short id for that piece of metadata"
        }
      ],
      "responses": []
    },
    {
      "url": "/collections/{collection_id}/collected_metadata/{cgm_id}",
      "method": "collectionsMetadataRegistrationsDetail",
      "httpMethod": "get",
      "tag": "Collections",
      "typeScriptTag": "collections",
      "description": "Retrieve Specific Metadata for a Collection",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "A short id for that collection"
        },
        {
          "name": "cgmId",
          "schema": "string",
          "required": true,
          "description": "A short id for that piece of metadata"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/collections/{collection_id}/collected_metadata/{cgm_id}",
      "method": "collectionsMetadataDetail",
      "httpMethod": "post",
      "tag": "Collections",
      "typeScriptTag": "collections",
      "description": "Add Metadata or Subjects to an Entity in a Collection",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "A short id for that collection"
        },
        {
          "name": "cgmId",
          "schema": "string",
          "required": true,
          "description": "A short id for that piece of metadata"
        }
      ],
      "responses": []
    },
    {
      "url": "/collections/{collection_id}/collected_metadata/{cgm_id}/relationships/subjects/",
      "method": "collectionsMetadataSubjectsRelationships",
      "httpMethod": "get",
      "tag": "Collections",
      "typeScriptTag": "collections",
      "description": "Retrieve subject metadata for a specific piece of metadata in a collection",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "A short id for that collection"
        },
        {
          "name": "cgmId",
          "schema": "string",
          "required": true,
          "description": "A short id for that piece of metadata"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/collections/{collection_id}/collected_metadata/{cgm_id}/relationships/subjects/",
      "method": "collectionsMetadataSubjectsRelationshipsUpdate",
      "httpMethod": "post",
      "tag": "Collections",
      "typeScriptTag": "collections",
      "description": "Update subjects for a specific piece of metadata in a collection",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "A short id for that collection"
        },
        {
          "name": "cgmId",
          "schema": "string",
          "required": true,
          "description": "A short id for that piece of metadata"
        }
      ],
      "responses": []
    },
    {
      "url": "/collections/{collection_id}/collected_metadata/{cgm_id}/subjects/",
      "method": "collectionsCollectedMetadata",
      "httpMethod": "get",
      "tag": "Collections",
      "typeScriptTag": "collections",
      "description": "Retrieve subject data for a specific piece of metadata info for a collection",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "A short id for that collection"
        },
        {
          "name": "cgmId",
          "schema": "string",
          "required": true,
          "description": "A short id for that piece of metadata"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/collections/{collection_id}/linked_nodes",
      "method": "collectionsLinkedNodesList",
      "httpMethod": "get",
      "tag": "Collections",
      "typeScriptTag": "collections",
      "description": "List All Linked Nodes for a Collection",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "A short id for that collection"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/collections/{collection_id}/linked_nodes/relationships/",
      "method": "collectionsLinkedNodesRelationshipsDelete",
      "httpMethod": "delete",
      "tag": "Collections",
      "typeScriptTag": "collections",
      "description": "Remove Nodes From Collection",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "A short id for that collection"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/collections/{collection_id}/linked_nodes/relationships/",
      "method": "collectionsLinkedNodesRelationshipsCreate",
      "httpMethod": "get",
      "tag": "Collections",
      "typeScriptTag": "collections",
      "description": "Give a Sparse List of Node Ids",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "A short id for that collection"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/collections/{collection_id}/linked_nodes/relationships/",
      "method": "collectionsLinkedNodesRelationships",
      "httpMethod": "post",
      "tag": "Collections",
      "typeScriptTag": "collections",
      "description": "Link Nodes to Collection",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "A short id for that collection"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/collections/{collection_id}/linked_preprints/",
      "method": "collectionsLinkedPreprintsList",
      "httpMethod": "get",
      "tag": "Collections",
      "typeScriptTag": "collections",
      "description": "List All Linked Preprints for a Collection",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "A short id for that collection"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/collections/{collection_id}/linked_registrations/",
      "method": "collectionsLinkedRegistrationsList",
      "httpMethod": "get",
      "tag": "Collections",
      "typeScriptTag": "collections",
      "description": "List All Linked Registrations for a Collection",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "A short id for that collection"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/collections/{collection_id}/linked_registrations/relationships/",
      "method": "collectionsLinkedRegistrationsRelationshipsDelete",
      "httpMethod": "delete",
      "tag": "Collections",
      "typeScriptTag": "collections",
      "description": "Remove Registrations From Collection",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "A short id for that collection"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/collections/{collection_id}/linked_registrations/relationships/",
      "method": "collectionsLinkedRegistrationsRelationshipsCreate",
      "httpMethod": "get",
      "tag": "Collections",
      "typeScriptTag": "collections",
      "description": "Give a Sparse List of Registrations Ids",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "A short id for that collection"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/collections/{collection_id}/linked_registrations/relationships/",
      "method": "collectionsLinkedRegistrationsRelationships",
      "httpMethod": "post",
      "tag": "Collections",
      "typeScriptTag": "collections",
      "description": "Link Registrations to Collection",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "A short id for that collection"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/comments/{comment_id}/",
      "method": "commentsDelete",
      "httpMethod": "delete",
      "tag": "Comments",
      "typeScriptTag": "comments",
      "description": "Delete a comment",
      "parameters": [
        {
          "name": "commentId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the comment you wish to delete."
        }
      ],
      "responses": []
    },
    {
      "url": "/comments/{comment_id}/",
      "method": "commentsRead",
      "httpMethod": "get",
      "tag": "Comments",
      "typeScriptTag": "comments",
      "description": "Retrieve a comment",
      "parameters": [
        {
          "name": "commentId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the comment you wish to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/comments/{comment_id}/",
      "method": "commentsPut",
      "httpMethod": "put",
      "tag": "Comments",
      "typeScriptTag": "comments",
      "description": "Update a comment",
      "parameters": [
        {
          "name": "commentId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the comment you wish to update."
        }
      ],
      "responses": []
    },
    {
      "url": "/draft_registrations/",
      "method": "draftRegistrationsRead",
      "httpMethod": "get",
      "tag": "Draft Registrations",
      "typeScriptTag": "draftRegistrations",
      "description": "Retrieve a list of Draft Registrations",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/draft_registrations/",
      "method": "draftRegistrationsCreate",
      "httpMethod": "post",
      "tag": "Draft Registrations",
      "typeScriptTag": "draftRegistrations",
      "description": "Create a Draft Registration",
      "parameters": [
        {
          "name": "attributes",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "links",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "relationships",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/draft_registrations/{draft_id}/",
      "method": "/draftRegistrations/{draftId}/Delete",
      "httpMethod": "delete",
      "tag": "Draft Registrations",
      "typeScriptTag": "draftRegistrations",
      "description": "Delete a draft registration",
      "parameters": [
        {
          "name": "draftId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the draft registration."
        }
      ],
      "responses": []
    },
    {
      "url": "/draft_registrations/{draft_id}/",
      "method": "/draftRegistrations/{draftId}/Get",
      "httpMethod": "get",
      "tag": "Draft Registrations",
      "typeScriptTag": "draftRegistrations",
      "description": "Retrieve a Draft Registration",
      "parameters": [
        {
          "name": "draftId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the draft registration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/draft_registrations/{draft_id}/",
      "method": "/draftRegistrations/{draftId}/Patch",
      "httpMethod": "patch",
      "tag": "Draft Registrations",
      "typeScriptTag": "draftRegistrations",
      "description": "Update a Draft Registration",
      "parameters": [
        {
          "name": "draftId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the draft registration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/draft_registrations/{draft_id}/contributors/",
      "method": "draftRegistrationContributorsList",
      "httpMethod": "get",
      "tag": "Draft Registrations",
      "typeScriptTag": "draftRegistrations",
      "description": "Retreive a list Contributors from a Draft Registration",
      "parameters": [
        {
          "name": "draftId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the Draft Registration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/draft_registrations/{draft_id}/contributors/",
      "method": "draftRegistrationContributorsCreate",
      "httpMethod": "post",
      "tag": "Draft Registrations",
      "typeScriptTag": "draftRegistrations",
      "description": "Add a contributor to a Draft Registration",
      "parameters": [
        {
          "name": "draftId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the Draft Registration."
        },
        {
          "name": "attributes",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "links",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "relationships",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/draft_registrations/{draft_id}/contributors/{user_id}/",
      "method": "/draftRegistrations/{draftId}/contributors/{userId}/Get",
      "httpMethod": "get",
      "tag": "Draft Registrations",
      "typeScriptTag": "draftRegistrations",
      "description": "Retreive a Contributor from a Draft Registration",
      "parameters": [
        {
          "name": "draftId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the Draft Registration."
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the Contributor."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/draft_registrations/{draft_id}/institutions/",
      "method": "/draftRegistrations/{draftId}/institutions/Get",
      "httpMethod": "get",
      "tag": "Draft Registrations",
      "typeScriptTag": "draftRegistrations",
      "description": "Retrieve Institutions afilliated with a Draft Registration",
      "parameters": [
        {
          "name": "draftId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the draft registration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/draft_registrations/{draft_id}/subjects/",
      "method": "nodesDraftRegistrationsSubjects",
      "httpMethod": "get",
      "tag": "Draft Registrations",
      "typeScriptTag": "draftRegistrations",
      "description": "Retrieve Subjects associated with a Draft Registration",
      "parameters": [
        {
          "name": "draftId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the draft registration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/files/{file_id}/",
      "method": "filesDetail",
      "httpMethod": "get",
      "tag": "Files",
      "typeScriptTag": "files",
      "description": "Retrieve a file",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the file you wish to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/files/{file_id}/",
      "method": "filesPatch",
      "httpMethod": "patch",
      "tag": "Files",
      "typeScriptTag": "files",
      "description": "Update a file",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the file you wish to update."
        }
      ],
      "responses": []
    },
    {
      "url": "/files/{file_id}/versions/",
      "method": "filesVersions",
      "httpMethod": "get",
      "tag": "Files",
      "typeScriptTag": "files",
      "description": "List all file versions",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the file from which you want to retrieve versions."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/files/{file_id}/versions/{version_id}/",
      "method": "filesVersionDetail",
      "httpMethod": "get",
      "tag": "Files",
      "typeScriptTag": "files",
      "description": "Retrieve a file version",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the file from which you want to retrieve versions."
        },
        {
          "name": "versionId",
          "schema": "string",
          "required": true,
          "description": "The file version number you want to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/institutions/",
      "method": "institutionsList",
      "httpMethod": "get",
      "tag": "Institutions",
      "typeScriptTag": "institutions",
      "description": "List all institutions",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/institutions/{institution_id}/",
      "method": "institutionsDetail",
      "httpMethod": "get",
      "tag": "Institutions",
      "typeScriptTag": "institutions",
      "description": "Retrieve an institution",
      "parameters": [
        {
          "name": "institutionId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the institution you wish to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/institutions/{institution_id}/nodes/",
      "method": "institutionsNodeList",
      "httpMethod": "get",
      "tag": "Institutions",
      "typeScriptTag": "institutions",
      "description": "List all affiliated nodes",
      "parameters": [
        {
          "name": "institutionId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the institution you wish to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/institutions/{institution_id}/registrations/",
      "method": "institutionsRegistrationList",
      "httpMethod": "get",
      "tag": "Institutions",
      "typeScriptTag": "institutions",
      "description": "List all affiliated registrations",
      "parameters": [
        {
          "name": "institutionId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the institution you wish to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/institutions/{institution_id}/users/",
      "method": "institutionsUsersList",
      "httpMethod": "get",
      "tag": "Institutions",
      "typeScriptTag": "institutions",
      "description": "List all affiliated users",
      "parameters": [
        {
          "name": "institutionId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the institution you wish to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/license/{license_id}/",
      "method": "licensesRead",
      "httpMethod": "get",
      "tag": "Licenses",
      "typeScriptTag": "licenses",
      "description": "Retrieve a license",
      "parameters": [
        {
          "name": "licenseId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the license."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/licenses/",
      "method": "licenseList",
      "httpMethod": "get",
      "tag": "Licenses",
      "typeScriptTag": "licenses",
      "description": "List all licenses",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/logs/{log_id}/",
      "method": "logsRead",
      "httpMethod": "get",
      "tag": "Logs",
      "typeScriptTag": "logs",
      "description": "Retrieve a log",
      "parameters": [
        {
          "name": "logId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the log you wish to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/",
      "method": "nodesList",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "List all nodes",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/",
      "method": "nodesCreate",
      "httpMethod": "post",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "Create a node",
      "parameters": [
        {
          "name": "attributes",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "links",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "relationships",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/nodes/{node_id}/",
      "method": "nodesDelete",
      "httpMethod": "delete",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "Delete a node",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        }
      ],
      "responses": []
    },
    {
      "url": "/nodes/{node_id}/",
      "method": "nodesRead",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "Retrieve a node",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/",
      "method": "nodesPartialUpdate",
      "httpMethod": "patch",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "Update a node",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        }
      ],
      "responses": []
    },
    {
      "url": "/nodes/{node_id}/addons/",
      "method": "nodesAddonsList",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "List all addons",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/addons/{provider}/",
      "method": "nodesAddonRead",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "Retrieve an addon",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        },
        {
          "name": "provider",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the addon."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/addons/{provider}/",
      "method": "nodesNodeAddonUpdate",
      "httpMethod": "patch",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "Update an addon",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        },
        {
          "name": "provider",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the addon."
        }
      ],
      "responses": []
    },
    {
      "url": "/nodes/{node_id}/addons/{provider}/folders/",
      "method": "nodesAddonsFoldersList",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "List all addon folders",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        },
        {
          "name": "provider",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the provider"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/children/",
      "method": "nodesChildrenList",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "List all child nodes",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/children/",
      "method": "nodesChildrenCreate",
      "httpMethod": "post",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "Create a child node",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        },
        {
          "name": "attributes",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "links",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "relationships",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/nodes/{node_id}/citation/",
      "method": "nodesCitationList",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "Retrieve citation details",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/citation/{style_id}/",
      "method": "nodesCitationRead",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "Retrieve a styled citation",
      "parameters": [
        {
          "name": "styleId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the citation style."
        },
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/comments/",
      "method": "nodesCommentsList",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "List all comments",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/comments/",
      "method": "nodesCommentCreate",
      "httpMethod": "post",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "Create a comment",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node you want to comment on."
        },
        {
          "name": "attributes",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "links",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "relationships",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/nodes/{node_id}/contributors/",
      "method": "nodesContributorsList",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "List all contributors",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/contributors/",
      "method": "nodesContributorsCreate",
      "httpMethod": "post",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "Create a contributor",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        },
        {
          "name": "attributes",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "links",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "relationships",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/nodes/{node_id}/contributors/{user_id}/",
      "method": "nodesContributorsDelete",
      "httpMethod": "delete",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "Delete a contributor",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the user."
        }
      ],
      "responses": []
    },
    {
      "url": "/nodes/{node_id}/contributors/{user_id}/",
      "method": "nodesContributorsRead",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "Retrieve a contributor",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the user."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/contributors/{user_id}/",
      "method": "nodesContributorsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "Update a contributor",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the user."
        },
        {
          "name": "attributes",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "links",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "relationships",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/nodes/{node_id}/draft_registrations/",
      "method": "nodesDraftRegistrationsList",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "List all draft registrations",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/draft_registrations/",
      "method": "nodesDraftRegistrationsCreate",
      "httpMethod": "post",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "Create a draft registration based on your current project Node.",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        },
        {
          "name": "attributes",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "links",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "relationships",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/nodes/{node_id}/draft_registrations/{draft_id}/",
      "method": "nodesDraftRegistrationsDelete",
      "httpMethod": "delete",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "Delete a draft registration",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        },
        {
          "name": "draftId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the draft registration."
        }
      ],
      "responses": []
    },
    {
      "url": "/nodes/{node_id}/draft_registrations/{draft_id}/",
      "method": "nodesDraftRegistrationsRead",
      "httpMethod": "get",
      "tag": "Draft Registrations",
      "typeScriptTag": "draftRegistrations",
      "description": "Retrieve a Draft Registration",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        },
        {
          "name": "draftId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the draft registration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/draft_registrations/{draft_id}/",
      "method": "nodesDraftRegistrationsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "Update a draft registration",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        },
        {
          "name": "draftId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the draft registration."
        },
        {
          "name": "attributes",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "links",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "relationships",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/nodes/{node_id}/files/",
      "method": "nodesProvidersList",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "List all storage providers",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/files/providers/{provider}/",
      "method": "nodesProvidersRead",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "Retrieve a storage provider",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        },
        {
          "name": "provider",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the storage provider."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/files/{provider}/",
      "method": "nodesFilesList",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "List all node files",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        },
        {
          "name": "provider",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the storage provider."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/files/{provider}/{path}/",
      "method": "nodesFilesRead",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "Retrieve a file",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        },
        {
          "name": "provider",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the storage provider."
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the file path."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/forks/",
      "method": "nodesForksList",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "List all forks of this node",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/forks/",
      "method": "nodesForksCreate",
      "httpMethod": "post",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "Create a fork of this node",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        },
        {
          "name": "attributes",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "links",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "relationships",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/nodes/{node_id}/identifiers/",
      "method": "nodesIdentifiersList",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "List all identifiers",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/institutions/",
      "method": "nodesInstitutionsList",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "List all institutions",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/linked_nodes/",
      "method": "nodesLinkedNodesList",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "List all linked nodes",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/logs/",
      "method": "nodesLogsList",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "List all logs",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/preprints/",
      "method": "nodesPreprintsList",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "List all preprints",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/registrations/",
      "method": "nodesRegistrationsList",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "List all registrations",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/view_only_links/",
      "method": "nodesViewOnlyLinksList",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "List all view only links",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/view_only_links/{link_id}/",
      "method": "nodesViewOnlyLinksRead",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "Retrieve a view only link",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        },
        {
          "name": "linkId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the view only link."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nodes/{node_id}/wikis/",
      "method": "nodesWikisList",
      "httpMethod": "get",
      "tag": "Nodes",
      "typeScriptTag": "nodes",
      "description": "List all wikis",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the node."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/preprint_providers/",
      "method": "preprintProviderList",
      "httpMethod": "get",
      "tag": "Preprint Providers",
      "typeScriptTag": "preprintProviders",
      "description": "List all preprint providers",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/preprint_providers/{preprint_provider_id}/",
      "method": "preprintProviderDetail",
      "httpMethod": "get",
      "tag": "Preprint Providers",
      "typeScriptTag": "preprintProviders",
      "description": "Retrieve a preprint provider",
      "parameters": [
        {
          "name": "preprintProviderId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the preprint provider."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/preprint_providers/{preprint_provider_id}/licenses/",
      "method": "preprintProviderLicensesList",
      "httpMethod": "get",
      "tag": "Preprint Providers",
      "typeScriptTag": "preprintProviders",
      "description": "List all licenses",
      "parameters": [
        {
          "name": "preprintProviderId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the preprint provider."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/preprint_providers/{preprint_provider_id}/preprints/",
      "method": "preprintProvidersPreprintsList",
      "httpMethod": "get",
      "tag": "Preprint Providers",
      "typeScriptTag": "preprintProviders",
      "description": "List all preprints",
      "parameters": [
        {
          "name": "preprintProviderId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the preprint provider."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/preprint_providers/{preprint_provider_id}/taxonomies/",
      "method": "preprintProviderTaxonomiesList",
      "httpMethod": "get",
      "tag": "Preprint Providers",
      "typeScriptTag": "preprintProviders",
      "description": "List all taxonomies",
      "parameters": [
        {
          "name": "preprintProviderId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the preprint provider."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/preprints/",
      "method": "preprintsList",
      "httpMethod": "get",
      "tag": "Preprints",
      "typeScriptTag": "preprints",
      "description": "List all preprints",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/preprints/",
      "method": "preprintsCreate",
      "httpMethod": "post",
      "tag": "Preprints",
      "typeScriptTag": "preprints",
      "description": "Create a preprint",
      "parameters": [
        {
          "name": "attributes",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "links",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "relationships",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/preprints/{preprint_id}/",
      "method": "preprintsRead",
      "httpMethod": "get",
      "tag": "Preprints",
      "typeScriptTag": "preprints",
      "description": "Retrieve a preprint",
      "parameters": [
        {
          "name": "preprintId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the preprint."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/preprints/{preprint_id}/",
      "method": "preprintsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Preprints",
      "typeScriptTag": "preprints",
      "description": "Update a preprint",
      "parameters": [
        {
          "name": "preprintId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the preprint."
        }
      ],
      "responses": []
    },
    {
      "url": "/preprints/{preprint_id}/bibliographic_contributors/",
      "method": "preprintsBibliographicContributorsList",
      "httpMethod": "get",
      "tag": "Preprints",
      "typeScriptTag": "preprints",
      "description": "List all Bibliographic Contributors",
      "parameters": [
        {
          "name": "preprintId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the preprint."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/preprints/{preprint_id}/citation/",
      "method": "preprintsCitationList",
      "httpMethod": "get",
      "tag": "Preprints",
      "typeScriptTag": "preprints",
      "description": "Retrieve citation details",
      "parameters": [
        {
          "name": "preprintId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the preprint whose citation you wish to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/preprints/{preprint_id}/citation/{style_id}/",
      "method": "preprintsCitationRead",
      "httpMethod": "get",
      "tag": "Preprints",
      "typeScriptTag": "preprints",
      "description": "Retrieve a styled citation",
      "parameters": [
        {
          "name": "styleId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the citation style."
        },
        {
          "name": "preprintId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the preprint."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/preprints/{preprint_id}/contributors/",
      "method": "preprintsContributorsList",
      "httpMethod": "get",
      "tag": "Preprints",
      "typeScriptTag": "preprints",
      "description": "List all Contributors for a Preprint",
      "parameters": [
        {
          "name": "preprintId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the preprint."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/preprints/{preprint_id}/contributors/",
      "method": "preprintsContributorsCreate",
      "httpMethod": "post",
      "tag": "Preprints",
      "typeScriptTag": "preprints",
      "description": "Create a Contributor",
      "parameters": [
        {
          "name": "preprintId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the Preprint."
        },
        {
          "name": "attributes",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "links",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "relationships",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/preprints/{preprint_id}/contributors/{user_id}/",
      "method": "preprintsContributorRead",
      "httpMethod": "get",
      "tag": "Preprints",
      "typeScriptTag": "preprints",
      "description": "Retrieve a contributor",
      "parameters": [
        {
          "name": "preprintId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the Preprint."
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the user."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/registrations/",
      "method": "registrationsList",
      "httpMethod": "get",
      "tag": "Registrations",
      "typeScriptTag": "registrations",
      "description": "List all registrations",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/registrations/{registration_id}/",
      "method": "registrationsRead",
      "httpMethod": "get",
      "tag": "Registrations",
      "typeScriptTag": "registrations",
      "description": "Retrieve a registration",
      "parameters": [
        {
          "name": "registrationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the registration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/registrations/{registration_id}/",
      "method": "registrationsPartialUpdate",
      "httpMethod": "patch",
      "tag": "Registrations",
      "typeScriptTag": "registrations",
      "description": "Update a registration",
      "parameters": [
        {
          "name": "registrationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the registration."
        },
        {
          "name": "attributes",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "links",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "relationships",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/registrations/{registration_id}/children/",
      "method": "registrationsChildrenList",
      "httpMethod": "get",
      "tag": "Registrations",
      "typeScriptTag": "registrations",
      "description": "List all child registrations",
      "parameters": [
        {
          "name": "registrationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the registration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/registrations/{registration_id}/citations/",
      "method": "registrationsCitationsList",
      "httpMethod": "get",
      "tag": "Registrations",
      "typeScriptTag": "registrations",
      "description": "List all citation styles",
      "parameters": [
        {
          "name": "registrationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the registration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/registrations/{registration_id}/citations/{citation_id}/",
      "method": "registrationsCitationRead",
      "httpMethod": "get",
      "tag": "Registrations",
      "typeScriptTag": "registrations",
      "description": "Retrieve a citation",
      "parameters": [
        {
          "name": "registrationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the registration."
        },
        {
          "name": "citationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the citation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/registrations/{registration_id}/comments/",
      "method": "registrationsCommentsList",
      "httpMethod": "get",
      "tag": "Registrations",
      "typeScriptTag": "registrations",
      "description": "List all comments",
      "parameters": [
        {
          "name": "registrationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the registration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/registrations/{registration_id}/contributors/",
      "method": "registrationsContributorsList",
      "httpMethod": "get",
      "tag": "Registrations",
      "typeScriptTag": "registrations",
      "description": "List all contributors",
      "parameters": [
        {
          "name": "registrationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the registration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/registrations/{registration_id}/contributors/{user_id}/",
      "method": "registrationsContributorsRead",
      "httpMethod": "get",
      "tag": "Registrations",
      "typeScriptTag": "registrations",
      "description": "Retrieve a contributor",
      "parameters": [
        {
          "name": "registrationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the registration."
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the user."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/registrations/{registration_id}/files/",
      "method": "registrationsProvidersList",
      "httpMethod": "get",
      "tag": "Registrations",
      "typeScriptTag": "registrations",
      "description": "List all storage providers",
      "parameters": [
        {
          "name": "registrationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the registration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/registrations/{registration_id}/files/{provider}/",
      "method": "registrationsFilesList",
      "httpMethod": "get",
      "tag": "Registrations",
      "typeScriptTag": "registrations",
      "description": "List all files",
      "parameters": [
        {
          "name": "registrationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the registration."
        },
        {
          "name": "provider",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the storage provider."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/registrations/{registration_id}/files/{provider}/{path}/",
      "method": "registrationsFilesRead",
      "httpMethod": "get",
      "tag": "Registrations",
      "typeScriptTag": "registrations",
      "description": "Retrieve a file",
      "parameters": [
        {
          "name": "registrationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the registration."
        },
        {
          "name": "provider",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the storage provider."
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the file path."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/registrations/{registration_id}/forks/",
      "method": "registrationsForksList",
      "httpMethod": "get",
      "tag": "Registrations",
      "typeScriptTag": "registrations",
      "description": "List all forks",
      "parameters": [
        {
          "name": "registrationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the registration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/registrations/{registration_id}/forks/",
      "method": "registrationsForksCreate",
      "httpMethod": "post",
      "tag": "Registrations",
      "typeScriptTag": "registrations",
      "description": "Create a fork",
      "parameters": [
        {
          "name": "registrationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the registration."
        },
        {
          "name": "attributes",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "links",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "relationships",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/registrations/{registration_id}/identifiers/",
      "method": "registrationsIdentifiersList",
      "httpMethod": "get",
      "tag": "Registrations",
      "typeScriptTag": "registrations",
      "description": "List all identifiers",
      "parameters": [
        {
          "name": "registrationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the registration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/registrations/{registration_id}/institutions/",
      "method": "registrationsInstitutionsList",
      "httpMethod": "get",
      "tag": "Registrations",
      "typeScriptTag": "registrations",
      "description": "List all institutions",
      "parameters": [
        {
          "name": "registrationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the registration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/registrations/{registration_id}/linked_nodes/",
      "method": "registrationsLinkedNodesList",
      "httpMethod": "get",
      "tag": "Registrations",
      "typeScriptTag": "registrations",
      "description": "List all linked nodes",
      "parameters": [
        {
          "name": "registrationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the registration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/registrations/{registration_id}/logs/",
      "method": "registrationsLogsList",
      "httpMethod": "get",
      "tag": "Registrations",
      "typeScriptTag": "registrations",
      "description": "List all logs",
      "parameters": [
        {
          "name": "registrationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the registration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/registrations/{registration_id}/view_only_links/",
      "method": "registrationsViewOnlyLinksList",
      "httpMethod": "get",
      "tag": "Registrations",
      "typeScriptTag": "registrations",
      "description": "List all view only links",
      "parameters": [
        {
          "name": "registrationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the registration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/registrations/{registration_id}/view_only_links/{link_id}/",
      "method": "registrationsViewOnlyLinksRead",
      "httpMethod": "get",
      "tag": "Registrations",
      "typeScriptTag": "registrations",
      "description": "Retrieve a view only link",
      "parameters": [
        {
          "name": "registrationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the registration."
        },
        {
          "name": "linkId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the view only link."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/registrations/{registration_id}/wikis/",
      "method": "registrationsWikisList",
      "httpMethod": "get",
      "tag": "Registrations",
      "typeScriptTag": "registrations",
      "description": "List all wikis",
      "parameters": [
        {
          "name": "registrationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the registration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/schema_responses/",
      "method": "schemaResponsesList",
      "httpMethod": "get",
      "tag": "Schema Responses",
      "typeScriptTag": "schemaResponses",
      "description": "List all Schema Responses",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/schema_responses/",
      "method": "schemaResponsePpost",
      "httpMethod": "post",
      "tag": "Schema Responses",
      "typeScriptTag": "schemaResponses",
      "description": "Create a new Schema Response",
      "parameters": [
        {
          "name": "attributes",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "links",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "relationships",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/schema_responses/{schema_response_id}",
      "method": "schemaResponseDelete",
      "httpMethod": "delete",
      "tag": "Schema Responses",
      "typeScriptTag": "schemaResponses",
      "description": "Delete a Incomplete Schema Response",
      "parameters": [
        {
          "name": "schemaResponseId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`."
        }
      ],
      "responses": []
    },
    {
      "url": "/schema_responses/{schema_response_id}",
      "method": "schemaResponsesRead",
      "httpMethod": "get",
      "tag": "Schema Responses",
      "typeScriptTag": "schemaResponses",
      "description": "Retrieve a Schema Response",
      "parameters": [
        {
          "name": "schemaResponseId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/schema_responses/{schema_response_id}",
      "method": "schemaResponsePatch",
      "httpMethod": "patch",
      "tag": "Schema Responses",
      "typeScriptTag": "schemaResponses",
      "description": "Update a Registration's Schema Response",
      "parameters": [
        {
          "name": "schemaResponseId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`."
        },
        {
          "name": "attributes",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "links",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "relationships",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/schema_responses/{schema_response_id}/actions/",
      "method": "schemaResponseActionRead",
      "httpMethod": "get",
      "tag": "Schema Response Actions",
      "typeScriptTag": "schemaResponseActions",
      "description": "Retrieve a list of Schema Response Actions for a Schema Response",
      "parameters": [
        {
          "name": "schemaResponseId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/schema_responses/{schema_response_id}/actions/",
      "method": "/schemaResponses/{schemaResponseId}/actions/Post",
      "httpMethod": "post",
      "tag": "Schema Response Actions",
      "typeScriptTag": "schemaResponseActions",
      "description": "Create a new Schema Response Action",
      "parameters": [
        {
          "name": "schemaResponseId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`."
        }
      ],
      "responses": []
    },
    {
      "url": "/schema_responses/{schema_response_id}/actions/{schema_response_action_id}",
      "method": "/schemaResponses/{schemaResponseId}/actions/{schemaResponseActionId}Get",
      "httpMethod": "get",
      "tag": "Schema Response Actions",
      "typeScriptTag": "schemaResponseActions",
      "description": "A Schema Response Action from a Schema Response",
      "parameters": [
        {
          "name": "schemaResponseId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the Schema Response example `61b9cd62eb66180215222669`."
        },
        {
          "name": "schemaResponseActionId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the Schema Response Action example `61b9eae1a7d8ac025c4c46d3`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/schema_responses/{schema_response_id}/schema_blocks/",
      "method": "schemaResponseBlocksRead",
      "httpMethod": "get",
      "tag": "Registration Schema Blocks",
      "typeScriptTag": "registrationSchemaBlocks",
      "description": "Retrieve a list of Registration Schema Blocks for a Schema Response",
      "parameters": [
        {
          "name": "schemaResponseId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/schema_responses/{schema_response_id}/schema_blocks/{schema_response_block_id}",
      "method": "/schemaResponses/{schemaResponseId}/schemaBlocks/{schemaResponseBlockId}Get",
      "httpMethod": "get",
      "tag": "Registration Schema Blocks",
      "typeScriptTag": "registrationSchemaBlocks",
      "description": "Retrieve a Registration Schema Block",
      "parameters": [
        {
          "name": "schemaResponseId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`."
        },
        {
          "name": "schemaResponseBlockId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the Schema Response Block example `61b79f9eadbb5701424a2d5e`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/schemas/registrations/",
      "method": "registrationSchemasList",
      "httpMethod": "get",
      "tag": "Registration Schemas",
      "typeScriptTag": "registrationSchemas",
      "description": "Retrieve a list of Registration Schemas",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/schemas/registrations/{registration_schema_id}",
      "method": "registrationSchemaRead",
      "httpMethod": "get",
      "tag": "Registration Schemas",
      "typeScriptTag": "registrationSchemas",
      "description": "Retrieve a Registration Schema",
      "parameters": [
        {
          "name": "registrationSchemaId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/taxonomies/",
      "method": "taxonomiesList",
      "httpMethod": "get",
      "tag": "Taxonomies",
      "typeScriptTag": "taxonomies",
      "description": "List all taxonomies",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/taxonomies/{taxonomy_id}/",
      "method": "taxonomiesRead",
      "httpMethod": "get",
      "tag": "Taxonomies",
      "typeScriptTag": "taxonomies",
      "description": "Retrieve a taxonomy",
      "parameters": [
        {
          "name": "taxonomyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the taxonomy."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/",
      "method": "usersList",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "List all users",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/",
      "method": "usersRead",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Retrieve a user",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the user."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/",
      "method": "usersPartialUpdate",
      "httpMethod": "patch",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Update a user",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the user."
        },
        {
          "name": "attributes",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "links",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "relationships",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/users/{user_id}/addons/",
      "method": "usersAddonsList",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "List all user addons",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the user."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/addons/{provider}/",
      "method": "usersAddonsRead",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Retrieve a user addon",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the user."
        },
        {
          "name": "provider",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the addon provider."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/addons/{provider}/accounts/",
      "method": "usersAddonAccountsList",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "List all addon accounts",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the user."
        },
        {
          "name": "provider",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the addon provider."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/addons/{provider}/accounts/{account_id}/",
      "method": "usersAddonAccountsRead",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Retrieve an addon account",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the user."
        },
        {
          "name": "provider",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the addon provider."
        },
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the addon account."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/institutions/",
      "method": "usersInstitutionsList",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "List all institutions",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the user."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/nodes/",
      "method": "usersNodesList",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "List all nodes",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the user."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/preprints/",
      "method": "usersPreprintsList",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "List all preprints",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the user."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/registrations/",
      "method": "usersRegistrationsList",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "List all registrations",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the user."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/view_only_links/{link_id}/",
      "method": "viewOnlyLinksRead",
      "httpMethod": "get",
      "tag": "View Only Links",
      "typeScriptTag": "viewOnlyLinks",
      "description": "Retrieve a view only link",
      "parameters": [
        {
          "name": "linkId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the view only link."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/view_only_links/{link_id}/nodes/",
      "method": "viewOnlyLinksNodeList",
      "httpMethod": "get",
      "tag": "View Only Links",
      "typeScriptTag": "viewOnlyLinks",
      "description": "List all nodes",
      "parameters": [
        {
          "name": "linkId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the view only link."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/wikis/{wiki_id}/",
      "method": "wikiRead",
      "httpMethod": "get",
      "tag": "Wikis",
      "typeScriptTag": "wikis",
      "description": "Retrieve a Wiki",
      "parameters": [
        {
          "name": "wikiId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the wiki."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/wikis/{wiki_id}/content/",
      "method": "wikiContent",
      "httpMethod": "get",
      "tag": "Wikis",
      "typeScriptTag": "wikis",
      "description": "Retrieve the Content of a Wiki",
      "parameters": [
        {
          "name": "wikiId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the wiki."
        }
      ],
      "responses": []
    }
  ],
  "apiBaseUrl": "https://api.test.osf.io/v2",
  "apiTitle": "OSF APIv2 Documentation",
  "endpoints": 116,
  "sdkMethods": 156,
  "schemas": 0,
  "parameters": 257,
  "contactUrl": "https://osf.io/support",
  "contactEmail": "support@osf.io",
  "difficultyScore": 220.25,
  "difficulty": "Hard"
}