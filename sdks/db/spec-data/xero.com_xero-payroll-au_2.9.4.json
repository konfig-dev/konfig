{
  "providerName": "xero.com",
  "openApiRaw": "https://raw.githubusercontent.com/XeroAPI/Xero-OpenAPI/master/xero-payroll-au.yaml",
  "securitySchemes": {
    "OAuth2": {
      "description": "For more information visit https://developer.xero.com/documentation/oauth2/overview",
      "flows": {
        "authorizationCode": {
          "authorizationUrl": "https://login.xero.com/identity/connect/authorize",
          "scopes": {
            "accounting.attachments": "Grant read-write access to attachments",
            "accounting.attachments.read": "Grant read-only access to attachments",
            "accounting.contacts": "Grant read-write access to contacts and contact groups",
            "accounting.contacts.read": "Grant read-only access to contacts and contact groups",
            "accounting.journals.read": "Grant read-only access to journals",
            "accounting.reports.read": "Grant read-only access to accounting reports",
            "accounting.settings": "Grant read-write access to organisation and account settings",
            "accounting.settings.read": "Grant read-only access to organisation and account settings",
            "accounting.transactions": "Grant read-write access to bank transactions, credit notes, invoices, repeating invoices",
            "accounting.transactions.read": "Grant read-only access to invoices",
            "assets assets.read": "Grant read-only access to fixed assets",
            "bankfeeds": "Grant read-write access to bankfeeds",
            "email": "Grant read-only access to your email",
            "files": "Grant read-write access to files and folders",
            "files.read": "Grant read-only access to files and folders",
            "openid": "Grant read-only access to your open id",
            "paymentservices": "Grant read-write access to payment services",
            "payroll": "Grant read-write access to payroll",
            "payroll.employees": "Grant read-write access to payroll employees",
            "payroll.employees.read": "Grant read-only access to payroll employees",
            "payroll.leaveapplications": "Grant read-write access to payroll leaveapplications",
            "payroll.leaveapplications.read": "Grant read-only access to payroll leaveapplications",
            "payroll.payitems": "Grant read-write access to payroll payitems",
            "payroll.payitems.read": "Grant read-only access to payroll payitems",
            "payroll.payrollcalendars": "Grant read-write access to payroll calendars",
            "payroll.payrollcalendars.read": "Grant read-only access to payroll calendars",
            "payroll.payruns": "Grant read-write access to payroll payruns",
            "payroll.payruns.read": "Grant read-only access to payroll payruns",
            "payroll.payslip": "Grant read-write access to payroll payslips",
            "payroll.payslip.read": "Grant read-only access to payroll payslips",
            "payroll.read": "Grant read-only access to payroll",
            "payroll.settings.read": "Grant read-only access to payroll settings",
            "payroll.superfundproducts.read": "Grant read-only access to payroll superfundproducts",
            "payroll.superfunds": "Grant read-write access to payroll superfunds",
            "payroll.superfunds.read": "Grant read-only access to payroll superfunds",
            "payroll.timesheets": "Grant read-write access to payroll timesheets",
            "payroll.timesheets.read": "Grant read-only access to payroll timesheets",
            "profile": "your profile information",
            "projects": "Grant read-write access to projects",
            "projects.read": "Grant read-only access to projects"
          },
          "tokenUrl": "https://identity.xero.com/connect/token"
        }
      },
      "type": "oauth2"
    }
  },
  "homepage": "xero.com",
  "serviceName": "xero-payroll-au",
  "apiVersion": "2.9.4",
  "methods": [
    {
      "url": "/Employees",
      "method": "getEmployees",
      "httpMethod": "get",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Searches payroll employees",
      "parameters": [
        {
          "name": "ifModifiedSince",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "e.g. page=1 – Up to 100 employees will be returned in a single API call"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "The object returned for a bad request"
        }
      ]
    },
    {
      "url": "/Employees",
      "method": "createEmployee",
      "httpMethod": "post",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Creates a payroll employee",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Employees/{EmployeeID}",
      "method": "getEmployee",
      "httpMethod": "get",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Retrieves an employee's detail by unique employee id",
      "parameters": [
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee id for single object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Employees/{EmployeeID}",
      "method": "updateEmployee",
      "httpMethod": "post",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Updates an employee's detail",
      "parameters": [
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee id for single object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/LeaveApplications",
      "method": "getLeaveApplications",
      "httpMethod": "get",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Retrieves leave applications",
      "parameters": [
        {
          "name": "ifModifiedSince",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "e.g. page=1 – Up to 100 objects will be returned in a single API call"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "The object returned for a bad request"
        }
      ]
    },
    {
      "url": "/LeaveApplications",
      "method": "createLeaveApplication",
      "httpMethod": "post",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Creates a leave application",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/LeaveApplications/{LeaveApplicationID}",
      "method": "getLeaveApplication",
      "httpMethod": "get",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Retrieves a leave application by a unique leave application id",
      "parameters": [
        {
          "name": "leaveApplicationId",
          "schema": "string",
          "required": true,
          "description": "Leave Application id for single object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/LeaveApplications/{LeaveApplicationID}",
      "method": "updateLeaveApplication",
      "httpMethod": "post",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Updates a specific leave application",
      "parameters": [
        {
          "name": "leaveApplicationId",
          "schema": "string",
          "required": true,
          "description": "Leave Application id for single object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/PayItems",
      "method": "getPayItems",
      "httpMethod": "get",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Retrieves pay items",
      "parameters": [
        {
          "name": "ifModifiedSince",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "e.g. page=1 – Up to 100 objects will be returned in a single API call"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "The object returned for a bad request"
        }
      ]
    },
    {
      "url": "/PayItems",
      "method": "createPayItem",
      "httpMethod": "post",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Creates a pay item",
      "parameters": [
        {
          "name": "DeductionTypes",
          "schema": "array",
          "description": ""
        },
        {
          "name": "EarningsRates",
          "schema": "array",
          "description": ""
        },
        {
          "name": "LeaveTypes",
          "schema": "array",
          "description": ""
        },
        {
          "name": "ReimbursementTypes",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/PayRuns",
      "method": "getPayRuns",
      "httpMethod": "get",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Retrieves pay runs",
      "parameters": [
        {
          "name": "ifModifiedSince",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "e.g. page=1 – Up to 100 PayRuns will be returned in a single API call"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "The object returned for a bad request"
        }
      ]
    },
    {
      "url": "/PayRuns",
      "method": "createPayRun",
      "httpMethod": "post",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Creates a pay run",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/PayRuns/{PayRunID}",
      "method": "getPayRun",
      "httpMethod": "get",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Retrieves a pay run by using a unique pay run id",
      "parameters": [
        {
          "name": "payRunId",
          "schema": "string",
          "required": true,
          "description": "PayRun id for single object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/PayRuns/{PayRunID}",
      "method": "updatePayRun",
      "httpMethod": "post",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Updates a pay run",
      "parameters": [
        {
          "name": "payRunId",
          "schema": "string",
          "required": true,
          "description": "PayRun id for single object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/PayrollCalendars",
      "method": "getPayrollCalendars",
      "httpMethod": "get",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Retrieves payroll calendars",
      "parameters": [
        {
          "name": "ifModifiedSince",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "e.g. page=1 – Up to 100 objects will be returned in a single API call"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "The object returned for a bad request"
        }
      ]
    },
    {
      "url": "/PayrollCalendars",
      "method": "createPayrollCalendar",
      "httpMethod": "post",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Creates a Payroll Calendar",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/PayrollCalendars/{PayrollCalendarID}",
      "method": "getPayrollCalendar",
      "httpMethod": "get",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Retrieves payroll calendar by using a unique payroll calendar ID",
      "parameters": [
        {
          "name": "payrollCalendarId",
          "schema": "string",
          "required": true,
          "description": "Payroll Calendar id for single object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "The object returned for a bad request"
        }
      ]
    },
    {
      "url": "/Payslip/{PayslipID}",
      "method": "getPayslip",
      "httpMethod": "get",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Retrieves for a payslip by a unique payslip id",
      "parameters": [
        {
          "name": "payslipId",
          "schema": "string",
          "required": true,
          "description": "Payslip id for single object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Payslip/{PayslipID}",
      "method": "updatePayslip",
      "httpMethod": "post",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Updates a payslip",
      "parameters": [
        {
          "name": "payslipId",
          "schema": "string",
          "required": true,
          "description": "Payslip id for single object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Settings",
      "method": "getSettings",
      "httpMethod": "get",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Retrieves payroll settings",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/SuperfundProducts",
      "method": "getSuperfundProducts",
      "httpMethod": "get",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Retrieves superfund products",
      "parameters": [
        {
          "name": "abn",
          "schema": "string",
          "description": "The ABN of the Regulated SuperFund"
        },
        {
          "name": "usi",
          "schema": "string",
          "description": "The USI of the Regulated SuperFund"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "The object returned for a bad request"
        }
      ]
    },
    {
      "url": "/Superfunds",
      "method": "getSuperfunds",
      "httpMethod": "get",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Retrieves superfunds",
      "parameters": [
        {
          "name": "ifModifiedSince",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "e.g. page=1 – Up to 100 SuperFunds will be returned in a single API call"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "The object returned for a bad request"
        }
      ]
    },
    {
      "url": "/Superfunds",
      "method": "createSuperfund",
      "httpMethod": "post",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Creates a superfund",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Superfunds/{SuperFundID}",
      "method": "getSuperfund",
      "httpMethod": "get",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Retrieves a superfund by using a unique superfund ID",
      "parameters": [
        {
          "name": "superFundId",
          "schema": "string",
          "required": true,
          "description": "Superfund id for single object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Superfunds/{SuperFundID}",
      "method": "updateSuperfund",
      "httpMethod": "post",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Updates a superfund",
      "parameters": [
        {
          "name": "superFundId",
          "schema": "string",
          "required": true,
          "description": "Superfund id for single object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Timesheets",
      "method": "getTimesheets",
      "httpMethod": "get",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Retrieves timesheets",
      "parameters": [
        {
          "name": "ifModifiedSince",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "e.g. page=1 – Up to 100 timesheets will be returned in a single API call"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "The object returned for a bad request"
        }
      ]
    },
    {
      "url": "/Timesheets",
      "method": "createTimesheet",
      "httpMethod": "post",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Creates a timesheet",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Timesheets/{TimesheetID}",
      "method": "getTimesheet",
      "httpMethod": "get",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Retrieves a timesheet by using a unique timesheet id",
      "parameters": [
        {
          "name": "timesheetId",
          "schema": "string",
          "required": true,
          "description": "Timesheet id for single object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Timesheets/{TimesheetID}",
      "method": "updateTimesheet",
      "httpMethod": "post",
      "tag": "PayrollAu",
      "typeScriptTag": "payrollAu",
      "description": "Updates a timesheet",
      "parameters": [
        {
          "name": "timesheetId",
          "schema": "string",
          "required": true,
          "description": "Timesheet id for single object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.xero.com/payroll.xro/1.0",
  "apiDescription": "This is the Xero Payroll API for orgs in Australia region.",
  "apiTitle": "Xero Payroll AU API",
  "endpoints": 16,
  "sdkMethods": 45,
  "schemas": 76,
  "parameters": 47,
  "contactUrl": "https://developer.xero.com",
  "contactEmail": "api@xero.com",
  "difficultyScore": 94.75,
  "difficulty": "Medium"
}