{
  "providerName": "nexmo.com",
  "openApiRaw": "https://raw.githubusercontent.com/nexmo/api-specification/master/definitions/numbers.yml",
  "securitySchemes": {
    "apiKey": {
      "description": "You can find your API key in the [developer dashboard](https://dashboard.nexmo.com)",
      "in": "query",
      "name": "api_key",
      "type": "apiKey"
    },
    "apiSecret": {
      "description": "You can find your API secret in the [developer dashboard](https://dashboard.nexmo.com)",
      "in": "query",
      "name": "api_secret",
      "type": "apiKey"
    }
  },
  "homepage": "nexmo.com",
  "serviceName": "numbers",
  "apiVersion": "1.0.20",
  "methods": [
    {
      "url": "/account/numbers",
      "method": "getOwnedNumbers",
      "httpMethod": "get",
      "description": "List the numbers you own",
      "parameters": [
        {
          "name": "applicationId",
          "schema": "string",
          "required": false,
          "description": "The Application that you want to return the numbers for."
        },
        {
          "name": "hasApplication",
          "schema": "boolean",
          "required": false,
          "description": "Set this optional field to `true` to restrict your results to numbers\nassociated with an Application (any Application). Set to `false` to\nfind all numbers not associated with any Application. Omit the field\nto avoid filtering on whether or not the number is assigned to an\nApplication.\n"
        },
        {
          "name": "country",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pattern",
          "schema": "string",
          "required": false,
          "description": "The number pattern you want to search for. Use in conjunction with `search_pattern`."
        },
        {
          "name": "searchPattern",
          "schema": "integer",
          "required": false,
          "description": "The strategy you want to use for matching:\n\n\n* `0` - Search for numbers that start with `pattern` (Note: all numbers are in E.164 format, so the starting pattern includes the country code, such as 1 for USA)\n* `1` - Search for numbers that contain `pattern`\n* `2` - Search for numbers that end with `pattern`\n"
        },
        {
          "name": "size",
          "schema": "integer",
          "required": false,
          "description": "Page size"
        },
        {
          "name": "index",
          "schema": "integer",
          "required": false,
          "description": "Page index"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/number/buy",
      "method": "buyANumber",
      "httpMethod": "post",
      "description": "Buy a number",
      "parameters": [
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "msisdn",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "target_api_key",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "420",
          "description": ""
        }
      ]
    },
    {
      "url": "/number/cancel",
      "method": "cancelANumber",
      "httpMethod": "post",
      "description": "Cancel a number",
      "parameters": [
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "msisdn",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "target_api_key",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/number/search",
      "method": "getAvailableNumbers",
      "httpMethod": "get",
      "description": "Search available numbers",
      "parameters": [
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": "The two character country code to filter on (in ISO 3166-1 alpha-2 format)"
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "Set this parameter to filter the type of number, such as mobile or landline"
        },
        {
          "name": "pattern",
          "schema": "string",
          "required": false,
          "description": "The number pattern you want to search for. Use in conjunction with `search_pattern`."
        },
        {
          "name": "searchPattern",
          "schema": "integer",
          "required": false,
          "description": "The strategy you want to use for matching:\n\n\n* `0` - Search for numbers that start with `pattern` (Note: all numbers are in E.164 format, so the starting pattern includes the country code, such as 1 for USA)\n* `1` - Search for numbers that contain `pattern`\n* `2` - Search for numbers that end with `pattern`\n"
        },
        {
          "name": "features",
          "schema": "string",
          "required": false,
          "description": "Available features are `SMS`, `VOICE` and `MMS`. To look for numbers that support multiple features, use a comma-separated value: `SMS,MMS,VOICE`."
        },
        {
          "name": "size",
          "schema": "integer",
          "required": false,
          "description": "Page size"
        },
        {
          "name": "index",
          "schema": "integer",
          "required": false,
          "description": "Page index"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/number/update",
      "method": "updateANumber",
      "httpMethod": "post",
      "description": "Update a number",
      "parameters": [
        {
          "name": "app_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "messagesCallbackType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "messagesCallbackValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "moHttpUrl",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "moSmppSysType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "msisdn",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "voiceCallbackType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "voiceCallbackValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "voiceStatusCallback",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://rest.nexmo.com",
  "apiDescription": "The Numbers API enables you to manage your existing numbers and buy new virtual numbers for use with the Vonage APIs. Further information is here: <https://developer.nexmo.com/numbers/overview>",
  "apiTitle": "Numbers API",
  "endpoints": 5,
  "sdkMethods": 5,
  "schemas": 11,
  "parameters": 30,
  "contactUrl": "https://developer.nexmo.com",
  "contactEmail": "devrel@vonage.com",
  "difficultyScore": 18,
  "difficulty": "Easy"
}