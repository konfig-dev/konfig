{
  "providerName": "pressassociation.io",
  "openApiRaw": "https://raw.githubusercontent.com/PressAssociation/tv-api-v2-development-kit/master/swagger.yaml",
  "homepage": "pressassociation.io",
  "apiVersion": "2.0",
  "methods": [
    {
      "url": "/asset",
      "method": "listAssets",
      "httpMethod": "get",
      "tag": "Asset",
      "description": "Asset Collection",
      "parameters": [
        {
          "name": "updatedAfter",
          "schema": "string",
          "required": false,
          "description": "Updated After"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the the number of items to be returned per page. For example: 5."
        },
        {
          "name": "aliases",
          "schema": "boolean",
          "required": false,
          "description": "Flag to display Legacy and Provider Ids."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/asset/{assetId}",
      "method": "getAsset",
      "httpMethod": "get",
      "tag": "Asset",
      "description": "Asset Detail",
      "parameters": [
        {
          "name": "assetId",
          "schema": "string",
          "required": true,
          "description": "A asset ID filter for the schedule collection. This can be a reference to any type of asset i.e. movie, season, series or episode."
        },
        {
          "name": "aliases",
          "schema": "boolean",
          "required": false,
          "description": "Flag to display Legacy and Provider Ids."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/asset/{assetId}/contributor",
      "method": "getAssetContributors",
      "httpMethod": "get",
      "tag": "Asset",
      "description": "Asset Contributors",
      "parameters": [
        {
          "name": "assetId",
          "schema": "string",
          "required": true,
          "description": "A asset ID filter for the schedule collection. This can be a reference to any type of asset i.e. movie, season, series or episode."
        },
        {
          "name": "aliases",
          "schema": "boolean",
          "required": false,
          "description": "Flag to display Legacy and Provider Ids."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/catalogue",
      "method": "listCatalogues",
      "httpMethod": "get",
      "tag": "Catalogue",
      "description": "Catalogue Collection",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/catalogue/{catalogueId}",
      "method": "getCatalogue",
      "httpMethod": "get",
      "tag": "Catalogue",
      "description": "Catalogue Detail",
      "parameters": [
        {
          "name": "catalogueId",
          "schema": "string",
          "required": true,
          "description": "The identifier for the selected catalogue."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/catalogue/{catalogueId}/asset",
      "method": "getCatalogueAsset",
      "httpMethod": "get",
      "tag": "Catalogue",
      "description": "Catalogue Asset Collection",
      "parameters": [
        {
          "name": "catalogueId",
          "schema": "string",
          "required": true,
          "description": "The identifier for the selected catalogue."
        },
        {
          "name": "title",
          "schema": "string",
          "required": false,
          "description": "The query string for a title search"
        },
        {
          "name": "start",
          "schema": "string",
          "required": false,
          "description": "The Start Date for the catalogue date range."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "The End Date for the catalogue date range."
        },
        {
          "name": "updatedAfter",
          "schema": "string",
          "required": false,
          "description": "Retrieve items only that have been updated after this point."
        },
        {
          "name": "limit",
          "schema": "number",
          "required": false,
          "description": "Restrict number of returned items Min = 1, Max = 500."
        },
        {
          "name": "aliases",
          "schema": "boolean",
          "required": false,
          "description": "Flag to display Legacy and Provider Ids."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/catalogue/{catalogueId}/asset/{assetId}",
      "method": "getCatalogueAssetDetail",
      "httpMethod": "get",
      "tag": "Catalogue",
      "description": "Catalogue Asset Detail",
      "parameters": [
        {
          "name": "catalogueId",
          "schema": "string",
          "required": true,
          "description": "The identifier for the selected catalogue."
        },
        {
          "name": "assetId",
          "schema": "string",
          "required": true,
          "description": "The identifier for the selected catalogue asset."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/channel",
      "method": "listChannels",
      "httpMethod": "get",
      "tag": "Channel",
      "description": "Channel Collection",
      "parameters": [
        {
          "name": "platformId",
          "schema": "string",
          "required": false,
          "description": "The identifier for the selected platform. Multiple platforms can be passed to the API without a region Id. Passing multiple platforms without a region will not return epg numbers as these are linked to a platform and region."
        },
        {
          "name": "regionId",
          "schema": "string",
          "required": false,
          "description": "The platform region ID for the channel selection."
        },
        {
          "name": "aliases",
          "schema": "boolean",
          "required": false,
          "description": "Flag to display Legacy and Provider Ids."
        },
        {
          "name": "date",
          "schema": "string",
          "required": false,
          "description": "Date of the Channel State to select, this will display channel names and attributes in the future or past."
        },
        {
          "name": "scheduleStart",
          "schema": "string",
          "required": false,
          "description": "The Start Date for the schedule."
        },
        {
          "name": "scheduleEnd",
          "schema": "string",
          "required": false,
          "description": "The End Date for the schedule."
        },
        {
          "name": "scheduleUpdatedSince",
          "schema": "string",
          "required": false,
          "description": "Schedule Updated Since"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/channel/{channelId}",
      "method": "getChannel",
      "httpMethod": "get",
      "tag": "Channel",
      "description": "Channel Detail",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "The identifier for the selected channel."
        },
        {
          "name": "aliases",
          "schema": "boolean",
          "required": false,
          "description": "Flag to display Legacy and Provider Ids."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/contributor",
      "method": "listContributor",
      "httpMethod": "get",
      "tag": "Contributor",
      "description": "Contributor Collection",
      "parameters": [
        {
          "name": "updatedAfter",
          "schema": "string",
          "required": false,
          "description": "Updated After"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the the number of items to be returned per page. For example: 5."
        },
        {
          "name": "aliases",
          "schema": "boolean",
          "required": false,
          "description": "Flag to display Legacy and Provider Ids."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/contributor/{contributorId}",
      "method": "getContributor",
      "httpMethod": "get",
      "tag": "Contributor",
      "description": "Contributor Detail",
      "parameters": [
        {
          "name": "contributorId",
          "schema": "string",
          "required": true,
          "description": "Filter the schedule items by contributor ID"
        },
        {
          "name": "aliases",
          "schema": "boolean",
          "required": false,
          "description": "Flag to display Legacy and Provider Ids."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/feature",
      "method": "listFeatures",
      "httpMethod": "get",
      "tag": "Feature",
      "description": "Feature Collection",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "The namespace of the feature type."
        },
        {
          "name": "date",
          "schema": "string",
          "required": false,
          "description": "Date of the collection of feature items."
        },
        {
          "name": "start",
          "schema": "string",
          "required": false,
          "description": "Start date for a range of features."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "End date for a range of features."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/feature-type",
      "method": "listFeatureTypes",
      "httpMethod": "get",
      "tag": "Feature",
      "description": "Feature Type Collection",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/feature/{featureId}",
      "method": "getFeature",
      "httpMethod": "get",
      "tag": "Feature",
      "description": "Feature Detail",
      "parameters": [
        {
          "name": "featureId",
          "schema": "string",
          "required": true,
          "description": "The identifier for the selected feature."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/platform",
      "method": "listPlatforms",
      "httpMethod": "get",
      "tag": "Platform",
      "description": "Platform Collection",
      "parameters": [
        {
          "name": "aliases",
          "schema": "boolean",
          "required": false,
          "description": "Flag to display Legacy and Provider Ids."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/platform/{platformId}",
      "method": "getPlatform",
      "httpMethod": "get",
      "tag": "Platform",
      "description": "Platform Detail",
      "parameters": [
        {
          "name": "platformId",
          "schema": "string",
          "required": true,
          "description": "The identifier for the selected platform."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/platform/{platformId}/region",
      "method": "listPlatformRegions",
      "httpMethod": "get",
      "tag": "Platform",
      "description": "Platform Region Collection",
      "parameters": [
        {
          "name": "platformId",
          "schema": "string",
          "required": true,
          "description": "The identifier for the selected platform."
        },
        {
          "name": "aliases",
          "schema": "boolean",
          "required": false,
          "description": "Flag to display Legacy and Provider Ids."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/schedule",
      "method": "listSchedule",
      "httpMethod": "get",
      "tag": "Schedule",
      "description": "Schedule Collection",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "The identifier for the selected channel."
        },
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "The Start Date for the schedule."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "The End Date for the schedule."
        },
        {
          "name": "aliases",
          "schema": "boolean",
          "required": false,
          "description": "Flag to display Legacy and Provider Ids."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://tv.api.pressassociation.io/v2",
  "apiDescription": "Welcome to the API Reference Docs page for the Press Association TV API (v2).",
  "apiTitle": "TV API",
  "endpoints": 18,
  "sdkMethods": 18,
  "schemas": 0,
  "parameters": 44,
  "difficultyScore": 29,
  "difficulty": "Easy"
}