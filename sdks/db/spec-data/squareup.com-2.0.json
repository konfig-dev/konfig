{
  "providerName": "squareup.com",
  "openApiRaw": "https://raw.githubusercontent.com/square/connect-api-specification/master/api.json",
  "homepage": "squareup.com",
  "apiVersion": "2.0",
  "methods": [
    {
      "url": "/mobile/authorization-code",
      "method": "createMobileAuthorizationCode",
      "httpMethod": "post",
      "tag": "MobileAuthorization",
      "description": "CreateMobileAuthorizationCode",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the __CreateMobileAuthorizationCode__ endpoint."
        }
      ]
    },
    {
      "url": "/oauth2/clients/{client_id}/access-token/renew",
      "method": "renewToken",
      "httpMethod": "post",
      "tag": "OAuth",
      "description": "RenewToken",
      "parameters": [
        {
          "name": "client_id",
          "schema": "string",
          "required": true,
          "description": "Your application ID, available from the [developer dashboard](https://developer.squareup.com/apps)."
        },
        {
          "name": "access_token",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/oauth2/revoke",
      "method": "revokeToken",
      "httpMethod": "post",
      "tag": "OAuth",
      "description": "RevokeToken",
      "parameters": [
        {
          "name": "access_token",
          "schema": "string",
          "description": ""
        },
        {
          "name": "client_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "merchant_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "revoke_only_access_token",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/oauth2/token",
      "method": "obtainToken",
      "httpMethod": "post",
      "tag": "OAuth",
      "description": "ObtainToken",
      "parameters": [
        {
          "name": "client_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "client_secret",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "grant_type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "migration_token",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "redirect_uri",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "refresh_token",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "scopes",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "short_lived",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/me/employees",
      "method": "listEmployees",
      "httpMethod": "get",
      "tag": "V1Employees",
      "description": "ListEmployees",
      "parameters": [
        {
          "name": "order",
          "schema": "string",
          "required": false,
          "description": "The order in which employees are listed in the response, based on their created_at field.      Default value: ASC"
        },
        {
          "name": "begin_updated_at",
          "schema": "string",
          "required": false,
          "description": "If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format"
        },
        {
          "name": "end_updated_at",
          "schema": "string",
          "required": false,
          "description": "If filtering results by there updated_at field, the end of the requested reporting period, in ISO 8601 format."
        },
        {
          "name": "begin_created_at",
          "schema": "string",
          "required": false,
          "description": "If filtering results by their created_at field, the beginning of the requested reporting period, in ISO 8601 format."
        },
        {
          "name": "end_created_at",
          "schema": "string",
          "required": false,
          "description": "If filtering results by their created_at field, the end of the requested reporting period, in ISO 8601 format."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "If provided, the endpoint returns only employee entities with the specified status (ACTIVE or INACTIVE)."
        },
        {
          "name": "external_id",
          "schema": "string",
          "required": false,
          "description": "If provided, the endpoint returns only employee entities with the specified external_id."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200."
        },
        {
          "name": "batch_token",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/me/employees",
      "method": "createEmployee",
      "httpMethod": "post",
      "tag": "V1Employees",
      "description": "CreateEmployee",
      "parameters": [
        {
          "name": "authorized_location_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "external_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "role_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents one of a business's employees."
        }
      ]
    },
    {
      "url": "/v1/me/employees/{employee_id}",
      "method": "retrieveEmployee",
      "httpMethod": "get",
      "tag": "V1Employees",
      "description": "RetrieveEmployee",
      "parameters": [
        {
          "name": "employee_id",
          "schema": "string",
          "required": true,
          "description": "The employee's ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents one of a business's employees."
        }
      ]
    },
    {
      "url": "/v1/me/employees/{employee_id}",
      "method": "updateEmployee",
      "httpMethod": "put",
      "tag": "V1Employees",
      "description": "UpdateEmployee",
      "parameters": [
        {
          "name": "employee_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the role to modify."
        },
        {
          "name": "authorized_location_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "external_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "role_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents one of a business's employees."
        }
      ]
    },
    {
      "url": "/v1/me/roles",
      "method": "listEmployeeRoles",
      "httpMethod": "get",
      "tag": "V1Employees",
      "description": "ListEmployeeRoles",
      "parameters": [
        {
          "name": "order",
          "schema": "string",
          "required": false,
          "description": "The order in which employees are listed in the response, based on their created_at field.Default value: ASC"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200."
        },
        {
          "name": "batch_token",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/me/roles",
      "method": "createEmployeeRole",
      "httpMethod": "post",
      "tag": "V1Employees",
      "description": "CreateEmployeeRole",
      "parameters": [
        {
          "name": "created_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "is_owner",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "permissions",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "V1EmployeeRole"
        }
      ]
    },
    {
      "url": "/v1/me/roles/{role_id}",
      "method": "retrieveEmployeeRole",
      "httpMethod": "get",
      "tag": "V1Employees",
      "description": "RetrieveEmployeeRole",
      "parameters": [
        {
          "name": "role_id",
          "schema": "string",
          "required": true,
          "description": "The role's ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "V1EmployeeRole"
        }
      ]
    },
    {
      "url": "/v1/me/roles/{role_id}",
      "method": "updateEmployeeRole",
      "httpMethod": "put",
      "tag": "V1Employees",
      "description": "UpdateEmployeeRole",
      "parameters": [
        {
          "name": "role_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the role to modify."
        },
        {
          "name": "created_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "is_owner",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "permissions",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "V1EmployeeRole"
        }
      ]
    },
    {
      "url": "/v1/{location_id}/orders",
      "method": "listOrders",
      "httpMethod": "get",
      "tag": "V1Transactions",
      "description": "ListOrders",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the location to list online store orders for."
        },
        {
          "name": "order",
          "schema": "string",
          "required": false,
          "description": "The order in which payments are listed in the response."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of payments to return in a single response. This value cannot exceed 200."
        },
        {
          "name": "batch_token",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/{location_id}/orders/{order_id}",
      "method": "retrieveOrder",
      "httpMethod": "get",
      "tag": "V1Transactions",
      "description": "RetrieveOrder",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the order's associated location."
        },
        {
          "name": "order_id",
          "schema": "string",
          "required": true,
          "description": "The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "V1Order"
        }
      ]
    },
    {
      "url": "/v1/{location_id}/orders/{order_id}",
      "method": "updateOrder",
      "httpMethod": "put",
      "tag": "V1Transactions",
      "description": "UpdateOrder",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the order's associated location."
        },
        {
          "name": "order_id",
          "schema": "string",
          "required": true,
          "description": "The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint"
        },
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "canceled_note",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "completed_note",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "refunded_note",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "shipped_tracking_number",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "V1Order"
        }
      ]
    },
    {
      "url": "/v1/{location_id}/payments",
      "method": "listPayments",
      "httpMethod": "get",
      "tag": "V1Transactions",
      "description": "ListPayments",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the location to list payments for. If you specify me, this endpoint returns payments aggregated from all of the business's locations."
        },
        {
          "name": "order",
          "schema": "string",
          "required": false,
          "description": "The order in which payments are listed in the response."
        },
        {
          "name": "begin_time",
          "schema": "string",
          "required": false,
          "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year."
        },
        {
          "name": "end_time",
          "schema": "string",
          "required": false,
          "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of payments to return in a single response. This value cannot exceed 200."
        },
        {
          "name": "batch_token",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        },
        {
          "name": "include_partial",
          "schema": "boolean",
          "required": false,
          "description": "Indicates whether or not to include partial payments in the response. Partial payments will have the tenders collected so far, but the itemizations will be empty until the payment is completed."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/{location_id}/payments/{payment_id}",
      "method": "retrievePayment",
      "httpMethod": "get",
      "tag": "V1Transactions",
      "description": "RetrievePayment",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the payment's associated location."
        },
        {
          "name": "payment_id",
          "schema": "string",
          "required": true,
          "description": "The Square-issued payment ID. payment_id comes from Payment objects returned by the List Payments endpoint, Settlement objects returned by the List Settlements endpoint, or Refund objects returned by the List Refunds endpoint."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A payment represents a paid transaction between a Square merchant and a\ncustomer. Payment details are usually available from Connect API endpoints\nwithin a few minutes after the transaction completes.\n\nEach Payment object includes several fields that end in `_money`. These fields\ndescribe the various amounts of money that contribute to the payment total:\n\n<ul>\n<li>\nMonetary values are <b>positive</b> if they represent an\n<em>increase</em> in the amount of money the merchant receives (e.g.,\n<code>tax_money</code>, <code>tip_money</code>).\n</li>\n<li>\nMonetary values are <b>negative</b> if they represent an\n<em>decrease</em> in the amount of money the merchant receives (e.g.,\n<code>discount_money</code>, <code>refunded_money</code>).\n</li>\n</ul>"
        }
      ]
    },
    {
      "url": "/v1/{location_id}/refunds",
      "method": "listRefunds",
      "httpMethod": "get",
      "tag": "V1Transactions",
      "description": "ListRefunds",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the location to list refunds for."
        },
        {
          "name": "order",
          "schema": "string",
          "required": false,
          "description": "The order in which payments are listed in the response."
        },
        {
          "name": "begin_time",
          "schema": "string",
          "required": false,
          "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year."
        },
        {
          "name": "end_time",
          "schema": "string",
          "required": false,
          "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The approximate number of refunds to return in a single response. Default: 100. Max: 200. Response may contain more results than the prescribed limit when refunds are made simultaneously to multiple tenders in a payment or when refunds are generated in an exchange to account for the value of returned goods."
        },
        {
          "name": "batch_token",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/{location_id}/refunds",
      "method": "createRefund",
      "httpMethod": "post",
      "tag": "V1Transactions",
      "description": "CreateRefund",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the original payment's associated location."
        },
        {
          "name": "payment_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "reason",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "refunded_money",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "request_idempotence_key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "V1Refund"
        }
      ]
    },
    {
      "url": "/v1/{location_id}/settlements",
      "method": "listSettlements",
      "httpMethod": "get",
      "tag": "V1Transactions",
      "description": "ListSettlements",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the location to list settlements for. If you specify me, this endpoint returns settlements aggregated from all of the business's locations."
        },
        {
          "name": "order",
          "schema": "string",
          "required": false,
          "description": "The order in which settlements are listed in the response."
        },
        {
          "name": "begin_time",
          "schema": "string",
          "required": false,
          "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year."
        },
        {
          "name": "end_time",
          "schema": "string",
          "required": false,
          "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of settlements to return in a single response. This value cannot exceed 200."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Provide this parameter to retrieve only settlements with a particular status (SENT or FAILED)."
        },
        {
          "name": "batch_token",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/{location_id}/settlements/{settlement_id}",
      "method": "retrieveSettlement",
      "httpMethod": "get",
      "tag": "V1Transactions",
      "description": "RetrieveSettlement",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the settlements's associated location."
        },
        {
          "name": "settlement_id",
          "schema": "string",
          "required": true,
          "description": "The settlement's Square-issued ID. You obtain this value from Settlement objects returned by the List Settlements endpoint."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "V1Settlement"
        }
      ]
    },
    {
      "url": "/v2/apple-pay/domains",
      "method": "registerDomain",
      "httpMethod": "post",
      "tag": "ApplePay",
      "description": "RegisterDomain",
      "parameters": [
        {
          "name": "domain_name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the [RegisterDomain](https://developer.squareup.com/reference/square_2021-08-18/apple-pay-api/register-domain) endpoint.\n\nEither `errors` or `status` are present in a given response (never both)."
        }
      ]
    },
    {
      "url": "/v2/bank-accounts",
      "method": "listBankAccounts",
      "httpMethod": "get",
      "tag": "BankAccounts",
      "description": "ListBankAccounts",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "The pagination cursor returned by a previous call to this endpoint.\nUse it in the next `ListBankAccounts` request to retrieve the next set \nof results.\n\nSee the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Upper limit on the number of bank accounts to return in the response. \nCurrently, 1000 is the largest supported limit. You can specify a limit \nof up to 1000 bank accounts. This is also the default limit."
        },
        {
          "name": "location_id",
          "schema": "string",
          "required": false,
          "description": "Location ID. You can specify this optional filter \nto retrieve only the linked bank accounts belonging to a specific location."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Response object returned by ListBankAccounts."
        }
      ]
    },
    {
      "url": "/v2/bank-accounts/by-v1-id/{v1_bank_account_id}",
      "method": "getBankAccountByV1Id",
      "httpMethod": "get",
      "tag": "BankAccounts",
      "description": "GetBankAccountByV1Id",
      "parameters": [
        {
          "name": "v1_bank_account_id",
          "schema": "string",
          "required": true,
          "description": "Connect V1 ID of the desired `BankAccount`. For more information, see \n[Retrieve a bank account by using an ID issued by V1 Bank Accounts API](https://developer.squareup.com/docs/bank-accounts-api#retrieve-a-bank-account-by-using-an-id-issued-by-v1-bank-accounts-api)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Response object returned by GetBankAccountByV1Id."
        }
      ]
    },
    {
      "url": "/v2/bank-accounts/{bank_account_id}",
      "method": "getBankAccount",
      "httpMethod": "get",
      "tag": "BankAccounts",
      "description": "GetBankAccount",
      "parameters": [
        {
          "name": "bank_account_id",
          "schema": "string",
          "required": true,
          "description": "Square-issued ID of the desired `BankAccount`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Response object returned by `GetBankAccount`."
        }
      ]
    },
    {
      "url": "/v2/bookings",
      "method": "createBooking",
      "httpMethod": "post",
      "tag": "Bookings",
      "description": "CreateBooking",
      "parameters": [
        {
          "name": "booking",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bookings/availability/search",
      "method": "searchAvailability",
      "httpMethod": "post",
      "tag": "Bookings",
      "description": "SearchAvailability",
      "parameters": [
        {
          "name": "query",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bookings/business-booking-profile",
      "method": "retrieveBusinessBookingProfile",
      "httpMethod": "get",
      "tag": "Bookings",
      "description": "RetrieveBusinessBookingProfile",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bookings/team-member-booking-profiles",
      "method": "listTeamMemberBookingProfiles",
      "httpMethod": "get",
      "tag": "Bookings",
      "description": "ListTeamMemberBookingProfiles",
      "parameters": [
        {
          "name": "bookable_only",
          "schema": "boolean",
          "required": false,
          "description": "Indicates whether to include only bookable team members in the returned result (`true`) or not (`false`)."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "The cursor for paginating through the results."
        },
        {
          "name": "location_id",
          "schema": "string",
          "required": false,
          "description": "Indicates whether to include only team members enabled at the given location in the returned result."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bookings/team-member-booking-profiles/{team_member_id}",
      "method": "retrieveTeamMemberBookingProfile",
      "httpMethod": "get",
      "tag": "Bookings",
      "description": "RetrieveTeamMemberBookingProfile",
      "parameters": [
        {
          "name": "team_member_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the team member to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bookings/{booking_id}",
      "method": "retrieveBooking",
      "httpMethod": "get",
      "tag": "Bookings",
      "description": "RetrieveBooking",
      "parameters": [
        {
          "name": "booking_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the [Booking](https://developer.squareup.com/reference/square_2021-08-18/objects/Booking) object representing the to-be-retrieved booking."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bookings/{booking_id}",
      "method": "updateBooking",
      "httpMethod": "put",
      "tag": "Bookings",
      "description": "UpdateBooking",
      "parameters": [
        {
          "name": "booking_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the [Booking](https://developer.squareup.com/reference/square_2021-08-18/objects/Booking) object representing the to-be-updated booking."
        },
        {
          "name": "booking",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bookings/{booking_id}/cancel",
      "method": "cancelBooking",
      "httpMethod": "post",
      "tag": "Bookings",
      "description": "CancelBooking",
      "parameters": [
        {
          "name": "booking_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the [Booking](https://developer.squareup.com/reference/square_2021-08-18/objects/Booking) object representing the to-be-cancelled booking."
        },
        {
          "name": "booking_version",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/cards",
      "method": "listCards",
      "httpMethod": "get",
      "tag": "Cards",
      "description": "ListCards",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
        },
        {
          "name": "customer_id",
          "schema": "string",
          "required": false,
          "description": "Limit results to cards associated with the customer supplied.\nBy default, all cards owned by the merchant are returned."
        },
        {
          "name": "include_disabled",
          "schema": "boolean",
          "required": false,
          "description": "Includes disabled cards.\nBy default, all enabled cards owned by the merchant are returned."
        },
        {
          "name": "reference_id",
          "schema": "string",
          "required": false,
          "description": "Limit results to cards associated with the reference_id supplied."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sorts the returned list by when the card was created with the specified order.\nThis field defaults to ASC."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the [ListCards](#endpoint-cards-listcards) endpoint.\n\nNote: if there are errors processing the request, the card field will not be\npresent."
        }
      ]
    },
    {
      "url": "/v2/cards",
      "method": "createCard",
      "httpMethod": "post",
      "tag": "Cards",
      "description": "CreateCard",
      "parameters": [
        {
          "name": "card",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "source_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "verification_token",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the [CreateCard](#endpoint-cards-createcard) endpoint.\n\nNote: if there are errors processing the request, the card field will not be\npresent."
        }
      ]
    },
    {
      "url": "/v2/cards/{card_id}",
      "method": "retrieveCard",
      "httpMethod": "get",
      "tag": "Cards",
      "description": "RetrieveCard",
      "parameters": [
        {
          "name": "card_id",
          "schema": "string",
          "required": true,
          "description": "Unique ID for the desired Card."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the [RetrieveCard](#endpoint-cards-retrievecard) endpoint.\n\nNote: if there are errors processing the request, the card field will not be\npresent."
        }
      ]
    },
    {
      "url": "/v2/cards/{card_id}/disable",
      "method": "disableCard",
      "httpMethod": "post",
      "tag": "Cards",
      "description": "DisableCard",
      "parameters": [
        {
          "name": "card_id",
          "schema": "string",
          "required": true,
          "description": "Unique ID for the desired Card."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the [DisableCard](#endpoint-cards-disablecard) endpoint.\n\nNote: if there are errors processing the request, the card field will not be\npresent."
        }
      ]
    },
    {
      "url": "/v2/cash-drawers/shifts",
      "method": "listCashDrawerShifts",
      "httpMethod": "get",
      "tag": "CashDrawers",
      "description": "ListCashDrawerShifts",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the location to query for a list of cash drawer shifts."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "The order in which cash drawer shifts are listed in the response,\nbased on their opened_at field. Default value: ASC"
        },
        {
          "name": "begin_time",
          "schema": "string",
          "required": false,
          "description": "The inclusive start time of the query on opened_at, in ISO 8601 format."
        },
        {
          "name": "end_time",
          "schema": "string",
          "required": false,
          "description": "The exclusive end date of the query on opened_at, in ISO 8601 format."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of cash drawer shift events in a page of results (200 by\ndefault, 1000 max)."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Opaque cursor for fetching the next page of results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/cash-drawers/shifts/{shift_id}",
      "method": "retrieveCashDrawerShift",
      "httpMethod": "get",
      "tag": "CashDrawers",
      "description": "RetrieveCashDrawerShift",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the location to retrieve cash drawer shifts from."
        },
        {
          "name": "shift_id",
          "schema": "string",
          "required": true,
          "description": "The shift ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/cash-drawers/shifts/{shift_id}/events",
      "method": "listCashDrawerShiftEvents",
      "httpMethod": "get",
      "tag": "CashDrawers",
      "description": "ListCashDrawerShiftEvents",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the location to list cash drawer shifts for."
        },
        {
          "name": "shift_id",
          "schema": "string",
          "required": true,
          "description": "The shift ID."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of resources to be returned in a page of results (200 by\ndefault, 1000 max)."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Opaque cursor for fetching the next page of results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/catalog/batch-delete",
      "method": "batchDeleteCatalogObjects",
      "httpMethod": "post",
      "tag": "Catalog",
      "description": "BatchDeleteCatalogObjects",
      "parameters": [
        {
          "name": "object_ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/catalog/batch-retrieve",
      "method": "batchRetrieveCatalogObjects",
      "httpMethod": "post",
      "tag": "Catalog",
      "description": "BatchRetrieveCatalogObjects",
      "parameters": [
        {
          "name": "catalog_version",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "include_related_objects",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "object_ids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/catalog/batch-upsert",
      "method": "batchUpsertCatalogObjects",
      "httpMethod": "post",
      "tag": "Catalog",
      "description": "BatchUpsertCatalogObjects",
      "parameters": [
        {
          "name": "batches",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/catalog/info",
      "method": "catalogInfo",
      "httpMethod": "get",
      "tag": "Catalog",
      "description": "CatalogInfo",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/catalog/list",
      "method": "listCatalog",
      "httpMethod": "get",
      "tag": "Catalog",
      "description": "ListCatalog",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "The pagination cursor returned in the previous response. Leave unset for an initial request.\nThe page size is currently set to be 100.\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
        },
        {
          "name": "types",
          "schema": "string",
          "required": false,
          "description": "An optional case-insensitive, comma-separated list of object types to retrieve.\n\nThe valid values are defined in the [CatalogObjectType](https://developer.squareup.com/reference/square_2021-08-18/enums/CatalogObjectType) enum, including\n`ITEM`, `ITEM_VARIATION`, `CATEGORY`, `DISCOUNT`, `TAX`,\n`MODIFIER`, `MODIFIER_LIST`, or `IMAGE`.\n\nIf this is unspecified, the operation returns objects of all the types at the version of the Square API used to make the request."
        },
        {
          "name": "catalog_version",
          "schema": "integer",
          "required": false,
          "description": "The specific version of the catalog objects to be included in the response. \nThis allows you to retrieve historical\nversions of objects. The specified version value is matched against\nthe [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject)s' `version` attribute."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/catalog/object",
      "method": "upsertCatalogObject",
      "httpMethod": "post",
      "tag": "Catalog",
      "description": "UpsertCatalogObject",
      "parameters": [
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "object",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/catalog/object/{object_id}",
      "method": "deleteCatalogObject",
      "httpMethod": "delete",
      "tag": "Catalog",
      "description": "DeleteCatalogObject",
      "parameters": [
        {
          "name": "object_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the catalog object to be deleted. When an object is deleted, other\nobjects in the graph that depend on that object will be deleted as well (for example, deleting a\ncatalog item will delete its catalog item variations)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/catalog/object/{object_id}",
      "method": "retrieveCatalogObject",
      "httpMethod": "get",
      "tag": "Catalog",
      "description": "RetrieveCatalogObject",
      "parameters": [
        {
          "name": "object_id",
          "schema": "string",
          "required": true,
          "description": "The object ID of any type of catalog objects to be retrieved."
        },
        {
          "name": "include_related_objects",
          "schema": "boolean",
          "required": false,
          "description": "If `true`, the response will include additional objects that are related to the\nrequested object, as follows:\n\nIf the `object` field of the response contains a `CatalogItem`, its associated\n`CatalogCategory`, `CatalogTax`, `CatalogImage` and `CatalogModifierList` objects will\nbe returned in the `related_objects` field of the response. If the `object` field of\nthe response contains a `CatalogItemVariation`, its parent `CatalogItem` will be returned\nin the `related_objects` field of the response.\n\nDefault value: `false`"
        },
        {
          "name": "catalog_version",
          "schema": "integer",
          "required": false,
          "description": "Requests objects as of a specific version of the catalog. This allows you to retrieve historical\nversions of objects. The value to retrieve a specific version of an object can be found\nin the version field of [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject)s."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/catalog/search",
      "method": "searchCatalogObjects",
      "httpMethod": "post",
      "tag": "Catalog",
      "description": "SearchCatalogObjects",
      "parameters": [
        {
          "name": "begin_time",
          "schema": "string",
          "description": ""
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "include_deleted_objects",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "include_related_objects",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "object_types",
          "schema": "array",
          "description": ""
        },
        {
          "name": "query",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/catalog/search-catalog-items",
      "method": "searchCatalogItems",
      "httpMethod": "post",
      "tag": "Catalog",
      "description": "SearchCatalogItems",
      "parameters": [
        {
          "name": "category_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "custom_attribute_filters",
          "schema": "array",
          "description": ""
        },
        {
          "name": "enabled_location_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "product_types",
          "schema": "array",
          "description": ""
        },
        {
          "name": "sort_order",
          "schema": "string",
          "description": ""
        },
        {
          "name": "stock_levels",
          "schema": "array",
          "description": ""
        },
        {
          "name": "text_filter",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the response body returned from the [SearchCatalogItems](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/search-catalog-items) endpoint."
        }
      ]
    },
    {
      "url": "/v2/catalog/update-item-modifier-lists",
      "method": "updateItemModifierLists",
      "httpMethod": "post",
      "tag": "Catalog",
      "description": "UpdateItemModifierLists",
      "parameters": [
        {
          "name": "item_ids",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "modifier_lists_to_disable",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "modifier_lists_to_enable",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/catalog/update-item-taxes",
      "method": "updateItemTaxes",
      "httpMethod": "post",
      "tag": "Catalog",
      "description": "UpdateItemTaxes",
      "parameters": [
        {
          "name": "item_ids",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "taxes_to_disable",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "taxes_to_enable",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/customers",
      "method": "listCustomers",
      "httpMethod": "get",
      "tag": "Customers",
      "description": "ListCustomers",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this cursor to retrieve the next set of results for your original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return in a single page. This limit is advisory. The response might contain more or fewer results. \nThe limit is ignored if it is less than 1 or greater than 100. The default value is 100.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)."
        },
        {
          "name": "sort_field",
          "schema": "string",
          "required": false,
          "description": "Indicates how customers should be sorted.\n\nThe default value is `DEFAULT`."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Indicates whether customers should be sorted in ascending (`ASC`) or\ndescending (`DESC`) order.\n\nThe default value is `ASC`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the `ListCustomers` endpoint.\n\nEither `errors` or `customers` is present in a given response (never both)."
        }
      ]
    },
    {
      "url": "/v2/customers",
      "method": "createCustomer",
      "httpMethod": "post",
      "tag": "Customers",
      "description": "CreateCustomer",
      "parameters": [
        {
          "name": "address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "birthday",
          "schema": "string",
          "description": ""
        },
        {
          "name": "company_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "email_address",
          "schema": "string",
          "description": ""
        },
        {
          "name": "family_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "given_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "nickname",
          "schema": "string",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phone_number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reference_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the `CreateCustomer` endpoint.\n\nEither `errors` or `customer` is present in a given response (never both)."
        }
      ]
    },
    {
      "url": "/v2/customers/groups",
      "method": "listCustomerGroups",
      "httpMethod": "get",
      "tag": "CustomerGroups",
      "description": "ListCustomerGroups",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this cursor to retrieve the next set of results for your original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return in a single page. This limit is advisory. The response might contain more or fewer results. \nThe limit is ignored if it is less than 1 or greater than 50. The default value is 50.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the [ListCustomerGroups](https://developer.squareup.com/reference/square_2021-08-18/customer-groups-api/list-customer-groups) endpoint.\n\nEither `errors` or `groups` is present in a given response (never both)."
        }
      ]
    },
    {
      "url": "/v2/customers/groups",
      "method": "createCustomerGroup",
      "httpMethod": "post",
      "tag": "CustomerGroups",
      "description": "CreateCustomerGroup",
      "parameters": [
        {
          "name": "group",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the [CreateCustomerGroup](https://developer.squareup.com/reference/square_2021-08-18/customer-groups-api/create-customer-group) endpoint.\n\nEither `errors` or `group` is present in a given response (never both)."
        }
      ]
    },
    {
      "url": "/v2/customers/groups/{group_id}",
      "method": "deleteCustomerGroup",
      "httpMethod": "delete",
      "tag": "CustomerGroups",
      "description": "DeleteCustomerGroup",
      "parameters": [
        {
          "name": "group_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the customer group to delete."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the [DeleteCustomerGroup](https://developer.squareup.com/reference/square_2021-08-18/customer-groups-api/delete-customer-group) endpoint."
        }
      ]
    },
    {
      "url": "/v2/customers/groups/{group_id}",
      "method": "retrieveCustomerGroup",
      "httpMethod": "get",
      "tag": "CustomerGroups",
      "description": "RetrieveCustomerGroup",
      "parameters": [
        {
          "name": "group_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the customer group to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the [RetrieveCustomerGroup](https://developer.squareup.com/reference/square_2021-08-18/customer-groups-api/retrieve-customer-group) endpoint.\n\nEither `errors` or `group` is present in a given response (never both)."
        }
      ]
    },
    {
      "url": "/v2/customers/groups/{group_id}",
      "method": "updateCustomerGroup",
      "httpMethod": "put",
      "tag": "CustomerGroups",
      "description": "UpdateCustomerGroup",
      "parameters": [
        {
          "name": "group_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the customer group to update."
        },
        {
          "name": "group",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the [UpdateCustomerGroup](https://developer.squareup.com/reference/square_2021-08-18/customer-groups-api/update-customer-group) endpoint.\n\nEither `errors` or `group` is present in a given response (never both)."
        }
      ]
    },
    {
      "url": "/v2/customers/search",
      "method": "searchCustomers",
      "httpMethod": "post",
      "tag": "Customers",
      "description": "SearchCustomers",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "query",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the `SearchCustomers` endpoint.\n\nEither `errors` or `customers` is present in a given response (never both)."
        }
      ]
    },
    {
      "url": "/v2/customers/segments",
      "method": "listCustomerSegments",
      "httpMethod": "get",
      "tag": "CustomerSegments",
      "description": "ListCustomerSegments",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor returned by previous calls to `ListCustomerSegments`.\nThis cursor is used to retrieve the next set of query results.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return in a single page. This limit is advisory. The response might contain more or fewer results. \nThe limit is ignored if it is less than 1 or greater than 50. The default value is 50.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body for requests to the `ListCustomerSegments` endpoint.\n\nEither `errors` or `segments` is present in a given response (never both)."
        }
      ]
    },
    {
      "url": "/v2/customers/segments/{segment_id}",
      "method": "retrieveCustomerSegment",
      "httpMethod": "get",
      "tag": "CustomerSegments",
      "description": "RetrieveCustomerSegment",
      "parameters": [
        {
          "name": "segment_id",
          "schema": "string",
          "required": true,
          "description": "The Square-issued ID of the customer segment."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body for requests to the `RetrieveCustomerSegment` endpoint.\n\nEither `errors` or `segment` is present in a given response (never both)."
        }
      ]
    },
    {
      "url": "/v2/customers/{customer_id}",
      "method": "deleteCustomer",
      "httpMethod": "delete",
      "tag": "Customers",
      "description": "DeleteCustomer",
      "parameters": [
        {
          "name": "customer_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the customer to delete."
        },
        {
          "name": "version",
          "schema": "integer",
          "required": false,
          "description": "The current version of the customer profile.\n\nAs a best practice, you should include this parameter to enable [optimistic concurrency](https://developer.squareup.com/docs/working-with-apis/optimistic-concurrency) control.  For more information, see [Delete a customer profile](https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#delete-customer-profile)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the `DeleteCustomer` endpoint."
        }
      ]
    },
    {
      "url": "/v2/customers/{customer_id}",
      "method": "retrieveCustomer",
      "httpMethod": "get",
      "tag": "Customers",
      "description": "RetrieveCustomer",
      "parameters": [
        {
          "name": "customer_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the customer to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the `RetrieveCustomer` endpoint.\n\nEither `errors` or `customer` is present in a given response (never both)."
        }
      ]
    },
    {
      "url": "/v2/customers/{customer_id}",
      "method": "updateCustomer",
      "httpMethod": "put",
      "tag": "Customers",
      "description": "UpdateCustomer",
      "parameters": [
        {
          "name": "customer_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the customer to update."
        },
        {
          "name": "address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "birthday",
          "schema": "string",
          "description": ""
        },
        {
          "name": "company_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "email_address",
          "schema": "string",
          "description": ""
        },
        {
          "name": "family_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "given_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "nickname",
          "schema": "string",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phone_number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reference_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "version",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the `UpdateCustomer` endpoint.\n\nEither `errors` or `customer` is present in a given response (never both)."
        }
      ]
    },
    {
      "url": "/v2/customers/{customer_id}/cards",
      "method": "createCustomerCard",
      "httpMethod": "post",
      "tag": "Customers",
      "description": "CreateCustomerCard",
      "parameters": [
        {
          "name": "customer_id",
          "schema": "string",
          "required": true,
          "description": "The Square ID of the customer profile the card is linked to."
        },
        {
          "name": "billing_address",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "card_nonce",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "cardholder_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "verification_token",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the `CreateCustomerCard` endpoint.\n\nEither `errors` or `card` is present in a given response (never both)."
        }
      ]
    },
    {
      "url": "/v2/customers/{customer_id}/cards/{card_id}",
      "method": "deleteCustomerCard",
      "httpMethod": "delete",
      "tag": "Customers",
      "description": "DeleteCustomerCard",
      "parameters": [
        {
          "name": "customer_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the customer that the card on file belongs to."
        },
        {
          "name": "card_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the card on file to delete."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the `DeleteCustomerCard` endpoint."
        }
      ]
    },
    {
      "url": "/v2/customers/{customer_id}/groups/{group_id}",
      "method": "removeGroupFromCustomer",
      "httpMethod": "delete",
      "tag": "Customers",
      "description": "RemoveGroupFromCustomer",
      "parameters": [
        {
          "name": "customer_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the customer to remove from the group."
        },
        {
          "name": "group_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the customer group to remove the customer from."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the [RemoveGroupFromCustomer](https://developer.squareup.com/reference/square_2021-08-18/customers-api/remove-group-from-customer)\nendpoint."
        }
      ]
    },
    {
      "url": "/v2/customers/{customer_id}/groups/{group_id}",
      "method": "addGroupToCustomer",
      "httpMethod": "put",
      "tag": "Customers",
      "description": "AddGroupToCustomer",
      "parameters": [
        {
          "name": "customer_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the customer to add to a group."
        },
        {
          "name": "group_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the customer group to add the customer to."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the [AddGroupToCustomer](https://developer.squareup.com/reference/square_2021-08-18/customers-api/add-group-to-customer) endpoint."
        }
      ]
    },
    {
      "url": "/v2/devices/codes",
      "method": "listDeviceCodes",
      "httpMethod": "get",
      "tag": "Devices",
      "description": "ListDeviceCodes",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](https://developer.squareup.com/docs/working-with-apis/pagination) for more information."
        },
        {
          "name": "location_id",
          "schema": "string",
          "required": false,
          "description": "If specified, only returns DeviceCodes of the specified location.\nReturns DeviceCodes of all locations if empty."
        },
        {
          "name": "product_type",
          "schema": "string",
          "required": false,
          "description": "If specified, only returns DeviceCodes targeting the specified product type.\nReturns DeviceCodes of all product types if empty."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "If specified, returns DeviceCodes with the specified statuses.\nReturns DeviceCodes of status `PAIRED` and `UNPAIRED` if empty."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/devices/codes",
      "method": "createDeviceCode",
      "httpMethod": "post",
      "tag": "Devices",
      "description": "CreateDeviceCode",
      "parameters": [
        {
          "name": "device_code",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/devices/codes/{id}",
      "method": "getDeviceCode",
      "httpMethod": "get",
      "tag": "Devices",
      "description": "GetDeviceCode",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier for the device code."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/disputes",
      "method": "listDisputes",
      "httpMethod": "get",
      "tag": "Disputes",
      "description": "ListDisputes",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this cursor to retrieve the next set of results for the original query.\nFor more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)."
        },
        {
          "name": "states",
          "schema": "string",
          "required": false,
          "description": "The dispute states to filter the result.\nIf not specified, the endpoint returns all open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`,\nor `LOST`)."
        },
        {
          "name": "location_id",
          "schema": "string",
          "required": false,
          "description": "The ID of the location for which to return a list of disputes. If not specified, the endpoint returns\nall open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`, or `LOST`) associated with all locations."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines fields in a `ListDisputes` response."
        }
      ]
    },
    {
      "url": "/v2/disputes/{dispute_id}",
      "method": "retrieveDispute",
      "httpMethod": "get",
      "tag": "Disputes",
      "description": "RetrieveDispute",
      "parameters": [
        {
          "name": "dispute_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the dispute you want more details about."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines fields in a `RetrieveDispute` response."
        }
      ]
    },
    {
      "url": "/v2/disputes/{dispute_id}/accept",
      "method": "acceptDispute",
      "httpMethod": "post",
      "tag": "Disputes",
      "description": "AcceptDispute",
      "parameters": [
        {
          "name": "dispute_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the dispute you want to accept."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields in an `AcceptDispute` response."
        }
      ]
    },
    {
      "url": "/v2/disputes/{dispute_id}/evidence",
      "method": "listDisputeEvidence",
      "httpMethod": "get",
      "tag": "Disputes",
      "description": "ListDisputeEvidence",
      "parameters": [
        {
          "name": "dispute_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the dispute."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this cursor to retrieve the next set of results for the original query.\nFor more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields in a `ListDisputeEvidence` response."
        }
      ]
    },
    {
      "url": "/v2/disputes/{dispute_id}/evidence-text",
      "method": "createDisputeEvidenceText",
      "httpMethod": "post",
      "tag": "Disputes",
      "description": "CreateDisputeEvidenceText",
      "parameters": [
        {
          "name": "dispute_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the dispute you want to upload evidence for."
        },
        {
          "name": "evidence_text",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "evidence_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields in a `CreateDisputeEvidenceText` response."
        }
      ]
    },
    {
      "url": "/v2/disputes/{dispute_id}/evidence/{evidence_id}",
      "method": "deleteDisputeEvidence",
      "httpMethod": "delete",
      "tag": "Disputes",
      "description": "DeleteDisputeEvidence",
      "parameters": [
        {
          "name": "dispute_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the dispute you want to remove evidence from."
        },
        {
          "name": "evidence_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the evidence you want to remove."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields in a `DeleteDisputeEvidence` response."
        }
      ]
    },
    {
      "url": "/v2/disputes/{dispute_id}/evidence/{evidence_id}",
      "method": "retrieveDisputeEvidence",
      "httpMethod": "get",
      "tag": "Disputes",
      "description": "RetrieveDisputeEvidence",
      "parameters": [
        {
          "name": "dispute_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the dispute that you want to retrieve evidence from."
        },
        {
          "name": "evidence_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the evidence to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields in a `RetrieveDisputeEvidence` response."
        }
      ]
    },
    {
      "url": "/v2/disputes/{dispute_id}/submit-evidence",
      "method": "submitEvidence",
      "httpMethod": "post",
      "tag": "Disputes",
      "description": "SubmitEvidence",
      "parameters": [
        {
          "name": "dispute_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the dispute that you want to submit evidence for."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields in a `SubmitEvidence` response."
        }
      ]
    },
    {
      "url": "/v2/employees",
      "method": "/v2/employeesGet",
      "httpMethod": "get",
      "tag": "Employees",
      "description": "ListEmployees",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Specifies the EmployeeStatus to filter the employee by."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The number of employees to be returned on each page."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "The token required to retrieve the specified page of results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/employees/{id}",
      "method": "/v2/employees/{id}Get",
      "httpMethod": "get",
      "tag": "Employees",
      "description": "RetrieveEmployee",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "UUID for the employee that was requested."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/gift-cards",
      "method": "listGiftCards",
      "httpMethod": "get",
      "tag": "GiftCards",
      "description": "ListGiftCards",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "If a type is provided, gift cards of this type are returned \n(see [GiftCardType](https://developer.squareup.com/reference/square_2021-08-18/enums/GiftCardType)).\nIf no type is provided, it returns gift cards of all types."
        },
        {
          "name": "state",
          "schema": "string",
          "required": false,
          "description": "If the state is provided, it returns the gift cards in the specified state \n(see [GiftCardStatus](https://developer.squareup.com/reference/square_2021-08-18/enums/GiftCardStatus)).\nOtherwise, it returns the gift cards of all states."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "If a value is provided, it returns only that number of results per page.\nThe maximum number of results allowed per page is 50. The default value is 30."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this cursor to retrieve the next set of results for the original query.\nIf a cursor is not provided, it returns the first page of the results. \nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
        },
        {
          "name": "customer_id",
          "schema": "string",
          "required": false,
          "description": "If a value is provided, returns only the gift cards linked to the specified customer"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response that contains one or more `GiftCard`. The response might contain a set of `Error`\nobjects if the request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/gift-cards",
      "method": "createGiftCard",
      "httpMethod": "post",
      "tag": "GiftCards",
      "description": "CreateGiftCard",
      "parameters": [
        {
          "name": "gift_card",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response that contains a `GiftCard`. The response might contain a set of `Error` objects if the request\nresulted in errors."
        }
      ]
    },
    {
      "url": "/v2/gift-cards/activities",
      "method": "listGiftCardActivities",
      "httpMethod": "get",
      "tag": "GiftCardActivities",
      "description": "ListGiftCardActivities",
      "parameters": [
        {
          "name": "gift_card_id",
          "schema": "string",
          "required": false,
          "description": "If you provide a gift card ID, the endpoint returns activities that belong \nto the specified gift card. Otherwise, the endpoint returns all gift card activities for \nthe seller."
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "If you provide a type, the endpoint returns gift card activities of this type. \nOtherwise, the endpoint returns all types of gift card activities."
        },
        {
          "name": "location_id",
          "schema": "string",
          "required": false,
          "description": "If you provide a location ID, the endpoint returns gift card activities for that location. \nOtherwise, the endpoint returns gift card activities for all locations."
        },
        {
          "name": "begin_time",
          "schema": "string",
          "required": false,
          "description": "The timestamp for the beginning of the reporting period, in RFC 3339 format.\nInclusive. Default: The current time minus one year."
        },
        {
          "name": "end_time",
          "schema": "string",
          "required": false,
          "description": "The timestamp for the end of the reporting period, in RFC 3339 format.\nInclusive. Default: The current time."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "If you provide a limit value, the endpoint returns the specified number \nof results (or less) per page. A maximum value is 100. The default value is 50."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this cursor to retrieve the next set of results for the original query.\nIf you do not provide the cursor, the call returns the first page of the results."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "The order in which the endpoint returns the activities, based on `created_at`.\n- `ASC` - Oldest to newest.\n- `DESC` - Newest to oldest (default)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response that contains one or more `GiftCardActivity`. The response might contain a set of `Error` objects\nif the request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/gift-cards/activities",
      "method": "createGiftCardActivity",
      "httpMethod": "post",
      "tag": "GiftCardActivities",
      "description": "CreateGiftCardActivity",
      "parameters": [
        {
          "name": "gift_card_activity",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response that contains a `GiftCardActivity` that was created.\nThe response might contain a set of `Error` objects if the request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/gift-cards/from-gan",
      "method": "retrieveGiftCardFromGan",
      "httpMethod": "post",
      "tag": "GiftCards",
      "description": "RetrieveGiftCardFromGAN",
      "parameters": [
        {
          "name": "gan",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response that contains a `GiftCard`. This response might contain a set of `Error` objects\nif the request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/gift-cards/from-nonce",
      "method": "retrieveGiftCardFromNonce",
      "httpMethod": "post",
      "tag": "GiftCards",
      "description": "RetrieveGiftCardFromNonce",
      "parameters": [
        {
          "name": "nonce",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response that contains a `GiftCard`. The response might contain a set of `Error` objects\nif the request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/gift-cards/{gift_card_id}/link-customer",
      "method": "linkCustomerToGiftCard",
      "httpMethod": "post",
      "tag": "GiftCards",
      "description": "LinkCustomerToGiftCard",
      "parameters": [
        {
          "name": "gift_card_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the gift card to link."
        },
        {
          "name": "customer_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response that contains one `GiftCard` that was linked. The response might contain a set of `Error`\nobjects if the request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/gift-cards/{gift_card_id}/unlink-customer",
      "method": "unlinkCustomerFromGiftCard",
      "httpMethod": "post",
      "tag": "GiftCards",
      "description": "UnlinkCustomerFromGiftCard",
      "parameters": [
        {
          "name": "gift_card_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "customer_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response that contains one `GiftCard` that was unlinked. The response might contain a set of `Error`\nobjects if the request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/gift-cards/{id}",
      "method": "retrieveGiftCard",
      "httpMethod": "get",
      "tag": "GiftCards",
      "description": "RetrieveGiftCard",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the gift card to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response that contains a `GiftCard`. The response might contain a set of `Error` objects\nif the request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/inventory/adjustment/{adjustment_id}",
      "method": "deprecatedRetrieveInventoryAdjustment",
      "httpMethod": "get",
      "tag": "Inventory",
      "description": "DeprecatedRetrieveInventoryAdjustment",
      "parameters": [
        {
          "name": "adjustment_id",
          "schema": "string",
          "required": true,
          "description": "ID of the [InventoryAdjustment](https://developer.squareup.com/reference/square_2021-08-18/objects/InventoryAdjustment) to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/inventory/adjustments/{adjustment_id}",
      "method": "retrieveInventoryAdjustment",
      "httpMethod": "get",
      "tag": "Inventory",
      "description": "RetrieveInventoryAdjustment",
      "parameters": [
        {
          "name": "adjustment_id",
          "schema": "string",
          "required": true,
          "description": "ID of the [InventoryAdjustment](https://developer.squareup.com/reference/square_2021-08-18/objects/InventoryAdjustment) to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/inventory/batch-change",
      "method": "deprecatedBatchChangeInventory",
      "httpMethod": "post",
      "tag": "Inventory",
      "description": "DeprecatedBatchChangeInventory",
      "parameters": [
        {
          "name": "changes",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ignore_unchanged_counts",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/inventory/batch-retrieve-changes",
      "method": "deprecatedBatchRetrieveInventoryChanges",
      "httpMethod": "post",
      "tag": "Inventory",
      "description": "DeprecatedBatchRetrieveInventoryChanges",
      "parameters": [
        {
          "name": "catalog_object_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "location_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "states",
          "schema": "array",
          "description": ""
        },
        {
          "name": "types",
          "schema": "array",
          "description": ""
        },
        {
          "name": "updated_after",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_before",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/inventory/batch-retrieve-counts",
      "method": "deprecatedBatchRetrieveInventoryCounts",
      "httpMethod": "post",
      "tag": "Inventory",
      "description": "DeprecatedBatchRetrieveInventoryCounts",
      "parameters": [
        {
          "name": "catalog_object_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "location_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "states",
          "schema": "array",
          "description": ""
        },
        {
          "name": "updated_after",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/inventory/changes/batch-create",
      "method": "batchChangeInventory",
      "httpMethod": "post",
      "tag": "Inventory",
      "description": "BatchChangeInventory",
      "parameters": [
        {
          "name": "changes",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ignore_unchanged_counts",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/inventory/changes/batch-retrieve",
      "method": "batchRetrieveInventoryChanges",
      "httpMethod": "post",
      "tag": "Inventory",
      "description": "BatchRetrieveInventoryChanges",
      "parameters": [
        {
          "name": "catalog_object_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "location_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "states",
          "schema": "array",
          "description": ""
        },
        {
          "name": "types",
          "schema": "array",
          "description": ""
        },
        {
          "name": "updated_after",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_before",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/inventory/counts/batch-retrieve",
      "method": "batchRetrieveInventoryCounts",
      "httpMethod": "post",
      "tag": "Inventory",
      "description": "BatchRetrieveInventoryCounts",
      "parameters": [
        {
          "name": "catalog_object_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "location_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "states",
          "schema": "array",
          "description": ""
        },
        {
          "name": "updated_after",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/inventory/physical-count/{physical_count_id}",
      "method": "deprecatedRetrieveInventoryPhysicalCount",
      "httpMethod": "get",
      "tag": "Inventory",
      "description": "DeprecatedRetrieveInventoryPhysicalCount",
      "parameters": [
        {
          "name": "physical_count_id",
          "schema": "string",
          "required": true,
          "description": "ID of the\n[InventoryPhysicalCount](https://developer.squareup.com/reference/square_2021-08-18/objects/InventoryPhysicalCount) to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/inventory/physical-counts/{physical_count_id}",
      "method": "retrieveInventoryPhysicalCount",
      "httpMethod": "get",
      "tag": "Inventory",
      "description": "RetrieveInventoryPhysicalCount",
      "parameters": [
        {
          "name": "physical_count_id",
          "schema": "string",
          "required": true,
          "description": "ID of the\n[InventoryPhysicalCount](https://developer.squareup.com/reference/square_2021-08-18/objects/InventoryPhysicalCount) to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/inventory/transfers/{transfer_id}",
      "method": "retrieveInventoryTransfer",
      "httpMethod": "get",
      "tag": "Inventory",
      "description": "RetrieveInventoryTransfer",
      "parameters": [
        {
          "name": "transfer_id",
          "schema": "string",
          "required": true,
          "description": "ID of the [InventoryTransfer](https://developer.squareup.com/reference/square_2021-08-18/objects/InventoryTransfer) to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/inventory/{catalog_object_id}",
      "method": "retrieveInventoryCount",
      "httpMethod": "get",
      "tag": "Inventory",
      "description": "RetrieveInventoryCount",
      "parameters": [
        {
          "name": "catalog_object_id",
          "schema": "string",
          "required": true,
          "description": "ID of the [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) to retrieve."
        },
        {
          "name": "location_ids",
          "schema": "string",
          "required": false,
          "description": "The [Location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location) IDs to look up as a comma-separated\nlist. An empty list queries all locations."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/inventory/{catalog_object_id}/changes",
      "method": "retrieveInventoryChanges",
      "httpMethod": "get",
      "tag": "Inventory",
      "description": "RetrieveInventoryChanges",
      "parameters": [
        {
          "name": "catalog_object_id",
          "schema": "string",
          "required": true,
          "description": "ID of the [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) to retrieve."
        },
        {
          "name": "location_ids",
          "schema": "string",
          "required": false,
          "description": "The [Location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location) IDs to look up as a comma-separated\nlist. An empty list queries all locations."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/invoices",
      "method": "listInvoices",
      "httpMethod": "get",
      "tag": "Invoices",
      "description": "ListInvoices",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the location for which to list invoices."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor returned by a previous call to this endpoint. \nProvide this cursor to retrieve the next set of results for your original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of invoices to return (200 is the maximum `limit`). \nIf not provided, the server uses a default limit of 100 invoices."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describes a `ListInvoice` response."
        }
      ]
    },
    {
      "url": "/v2/invoices",
      "method": "createInvoice",
      "httpMethod": "post",
      "tag": "Invoices",
      "description": "CreateInvoice",
      "parameters": [
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "invoice",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The response returned by the `CreateInvoice` request."
        }
      ]
    },
    {
      "url": "/v2/invoices/search",
      "method": "searchInvoices",
      "httpMethod": "post",
      "tag": "Invoices",
      "description": "SearchInvoices",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "query",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describes a `SearchInvoices` response."
        }
      ]
    },
    {
      "url": "/v2/invoices/{invoice_id}",
      "method": "deleteInvoice",
      "httpMethod": "delete",
      "tag": "Invoices",
      "description": "DeleteInvoice",
      "parameters": [
        {
          "name": "invoice_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the invoice to delete."
        },
        {
          "name": "version",
          "schema": "integer",
          "required": false,
          "description": "The version of the [invoice](https://developer.squareup.com/reference/square_2021-08-18/objects/Invoice) to delete.\nIf you do not know the version, you can call [GetInvoice](https://developer.squareup.com/reference/square_2021-08-18/invoices-api/get-invoice) or \n[ListInvoices](https://developer.squareup.com/reference/square_2021-08-18/invoices-api/list-invoices)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describes a `DeleteInvoice` response."
        }
      ]
    },
    {
      "url": "/v2/invoices/{invoice_id}",
      "method": "getInvoice",
      "httpMethod": "get",
      "tag": "Invoices",
      "description": "GetInvoice",
      "parameters": [
        {
          "name": "invoice_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the invoice to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describes a `GetInvoice` response."
        }
      ]
    },
    {
      "url": "/v2/invoices/{invoice_id}",
      "method": "updateInvoice",
      "httpMethod": "put",
      "tag": "Invoices",
      "description": "UpdateInvoice",
      "parameters": [
        {
          "name": "invoice_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the invoice to update."
        },
        {
          "name": "fields_to_clear",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "invoice",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describes a `UpdateInvoice` response."
        }
      ]
    },
    {
      "url": "/v2/invoices/{invoice_id}/cancel",
      "method": "cancelInvoice",
      "httpMethod": "post",
      "tag": "Invoices",
      "description": "CancelInvoice",
      "parameters": [
        {
          "name": "invoice_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the [invoice](https://developer.squareup.com/reference/square_2021-08-18/objects/Invoice) to cancel."
        },
        {
          "name": "version",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The response returned by the `CancelInvoice` request."
        }
      ]
    },
    {
      "url": "/v2/invoices/{invoice_id}/publish",
      "method": "publishInvoice",
      "httpMethod": "post",
      "tag": "Invoices",
      "description": "PublishInvoice",
      "parameters": [
        {
          "name": "invoice_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the invoice to publish."
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "version",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describes a `PublishInvoice` response."
        }
      ]
    },
    {
      "url": "/v2/labor/break-types",
      "method": "listBreakTypes",
      "httpMethod": "get",
      "tag": "Labor",
      "description": "ListBreakTypes",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": false,
          "description": "Filter the returned `BreakType` results to only those that are associated with the\nspecified location."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of `BreakType` results to return per page. The number can range between 1\nand 200. The default is 200."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "A pointer to the next page of `BreakType` results to fetch."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The response to a request for a set of `BreakType` objects. The response contains\nthe requested `BreakType` objects and might contain a set of `Error` objects if\nthe request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/labor/break-types",
      "method": "createBreakType",
      "httpMethod": "post",
      "tag": "Labor",
      "description": "CreateBreakType",
      "parameters": [
        {
          "name": "break_type",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The response to the request to create a `BreakType`. The response contains\nthe created `BreakType` object and might contain a set of `Error` objects if\nthe request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/labor/break-types/{id}",
      "method": "deleteBreakType",
      "httpMethod": "delete",
      "tag": "Labor",
      "description": "DeleteBreakType",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The UUID for the `BreakType` being deleted."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The response to a request to delete a `BreakType`. The response might contain a set \nof `Error` objects if the request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/labor/break-types/{id}",
      "method": "getBreakType",
      "httpMethod": "get",
      "tag": "Labor",
      "description": "GetBreakType",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The UUID for the `BreakType` being retrieved."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The response to a request to get a `BreakType`. The response contains\nthe requested `BreakType` objects and might contain a set of `Error` objects if\nthe request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/labor/break-types/{id}",
      "method": "updateBreakType",
      "httpMethod": "put",
      "tag": "Labor",
      "description": "UpdateBreakType",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": " The UUID for the `BreakType` being updated."
        },
        {
          "name": "break_type",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response to a request to update a `BreakType`. The response contains\nthe requested `BreakType` objects and might contain a set of `Error` objects if\nthe request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/labor/employee-wages",
      "method": "listEmployeeWages",
      "httpMethod": "get",
      "tag": "Labor",
      "description": "ListEmployeeWages",
      "parameters": [
        {
          "name": "employee_id",
          "schema": "string",
          "required": false,
          "description": "Filter the returned wages to only those that are associated with the specified employee."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of `EmployeeWage` results to return per page. The number can range between\n1 and 200. The default is 200."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "A pointer to the next page of `EmployeeWage` results to fetch."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The response to a request for a set of `EmployeeWage` objects. The response contains\na set of `EmployeeWage` objects."
        }
      ]
    },
    {
      "url": "/v2/labor/employee-wages/{id}",
      "method": "getEmployeeWage",
      "httpMethod": "get",
      "tag": "Labor",
      "description": "GetEmployeeWage",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The UUID for the `EmployeeWage` being retrieved."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response to a request to get an `EmployeeWage`. The response contains\nthe requested `EmployeeWage` objects and might contain a set of `Error` objects if\nthe request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/labor/shifts",
      "method": "createShift",
      "httpMethod": "post",
      "tag": "Labor",
      "description": "CreateShift",
      "parameters": [
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "shift",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The response to a request to create a `Shift`. The response contains\nthe created `Shift` object and might contain a set of `Error` objects if\nthe request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/labor/shifts/search",
      "method": "searchShifts",
      "httpMethod": "post",
      "tag": "Labor",
      "description": "SearchShifts",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "query",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The response to a request for `Shift` objects. The response contains\nthe requested `Shift` objects and might contain a set of `Error` objects if\nthe request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/labor/shifts/{id}",
      "method": "deleteShift",
      "httpMethod": "delete",
      "tag": "Labor",
      "description": "DeleteShift",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The UUID for the `Shift` being deleted."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The response to a request to delete a `Shift`. The response might contain a set of \n`Error` objects if the request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/labor/shifts/{id}",
      "method": "getShift",
      "httpMethod": "get",
      "tag": "Labor",
      "description": "GetShift",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The UUID for the `Shift` being retrieved."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response to a request to get a `Shift`. The response contains\nthe requested `Shift` object and might contain a set of `Error` objects if\nthe request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/labor/shifts/{id}",
      "method": "updateShift",
      "httpMethod": "put",
      "tag": "Labor",
      "description": "UpdateShift",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the object being updated."
        },
        {
          "name": "shift",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The response to a request to update a `Shift`. The response contains\nthe updated `Shift` object and might contain a set of `Error` objects if\nthe request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/labor/team-member-wages",
      "method": "listTeamMemberWages",
      "httpMethod": "get",
      "tag": "Labor",
      "description": "ListTeamMemberWages",
      "parameters": [
        {
          "name": "team_member_id",
          "schema": "string",
          "required": false,
          "description": "Filter the returned wages to only those that are associated with the\nspecified team member."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of `TeamMemberWage` results to return per page. The number can range between\n1 and 200. The default is 200."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "A pointer to the next page of `EmployeeWage` results to fetch."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The response to a request for a set of `TeamMemberWage` objects. The response contains\na set of `TeamMemberWage` objects."
        }
      ]
    },
    {
      "url": "/v2/labor/team-member-wages/{id}",
      "method": "getTeamMemberWage",
      "httpMethod": "get",
      "tag": "Labor",
      "description": "GetTeamMemberWage",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The UUID for the `TeamMemberWage` being retrieved."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response to a request to get a `TeamMemberWage`. The response contains\nthe requested `TeamMemberWage` objects and might contain a set of `Error` objects if\nthe request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/labor/workweek-configs",
      "method": "listWorkweekConfigs",
      "httpMethod": "get",
      "tag": "Labor",
      "description": "ListWorkweekConfigs",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of `WorkweekConfigs` results to return per page."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "A pointer to the next page of `WorkweekConfig` results to fetch."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The response to a request for a set of `WorkweekConfig` objects. The response contains\nthe requested `WorkweekConfig` objects and might contain a set of `Error` objects if\nthe request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/labor/workweek-configs/{id}",
      "method": "updateWorkweekConfig",
      "httpMethod": "put",
      "tag": "Labor",
      "description": "UpdateWorkweekConfig",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The UUID for the `WorkweekConfig` object being updated."
        },
        {
          "name": "workweek_config",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The response to a request to update a `WorkweekConfig` object. The response contains\nthe updated `WorkweekConfig` object and might contain a set of `Error` objects if\nthe request resulted in errors."
        }
      ]
    },
    {
      "url": "/v2/locations",
      "method": "listLocations",
      "httpMethod": "get",
      "tag": "Locations",
      "description": "ListLocations",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the __ListLocations__ endpoint.\n\nOne of `errors` or `locations` is present in a given response (never both)."
        }
      ]
    },
    {
      "url": "/v2/locations",
      "method": "createLocation",
      "httpMethod": "post",
      "tag": "Locations",
      "description": "CreateLocation",
      "parameters": [
        {
          "name": "location",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Response object returned by the [CreateLocation](https://developer.squareup.com/reference/square_2021-08-18/locations-api/create-location) endpoint."
        }
      ]
    },
    {
      "url": "/v2/locations/{location_id}",
      "method": "retrieveLocation",
      "httpMethod": "get",
      "tag": "Locations",
      "description": "RetrieveLocation",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the location to retrieve. If you specify the string \"main\",\nthen the endpoint returns the main location."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that the\n[RetrieveLocation](https://developer.squareup.com/reference/square_2021-08-18/locations-api/retrieve-location) endpoint returns\nin a response."
        }
      ]
    },
    {
      "url": "/v2/locations/{location_id}",
      "method": "updateLocation",
      "httpMethod": "put",
      "tag": "Locations",
      "description": "UpdateLocation",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the location to update."
        },
        {
          "name": "location",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Response object returned by the [UpdateLocation](https://developer.squareup.com/reference/square_2021-08-18/locations-api/update-location) endpoint."
        }
      ]
    },
    {
      "url": "/v2/locations/{location_id}/checkouts",
      "method": "createCheckout",
      "httpMethod": "post",
      "tag": "Checkout",
      "description": "CreateCheckout",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the business location to associate the checkout with."
        },
        {
          "name": "additional_recipients",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "ask_for_shipping_address",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "merchant_support_email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "order",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "pre_populate_buyer_email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pre_populate_shipping_address",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "redirect_url",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the `CreateCheckout` endpoint."
        }
      ]
    },
    {
      "url": "/v2/locations/{location_id}/refunds",
      "method": "/v2/locations/{locationId}/refundsGet",
      "httpMethod": "get",
      "tag": "Transactions",
      "description": "ListRefunds",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the location to list refunds for."
        },
        {
          "name": "begin_time",
          "schema": "string",
          "required": false,
          "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year."
        },
        {
          "name": "end_time",
          "schema": "string",
          "required": false,
          "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.\n\nDefault value: The current time."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](https://developer.squareup.com/docs/working-with-apis/pagination) for more information."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the [ListRefunds](https://developer.squareup.com/reference/square_2021-08-18/transactions-api/list-refunds) endpoint.\n\nOne of `errors` or `refunds` is present in a given response (never both)."
        }
      ]
    },
    {
      "url": "/v2/locations/{location_id}/transactions",
      "method": "listTransactions",
      "httpMethod": "get",
      "tag": "Transactions",
      "description": "ListTransactions",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the location to list transactions for."
        },
        {
          "name": "begin_time",
          "schema": "string",
          "required": false,
          "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year."
        },
        {
          "name": "end_time",
          "schema": "string",
          "required": false,
          "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.\n\nDefault value: The current time."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](https://developer.squareup.com/docs/working-with-apis/pagination) for more information."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the [ListTransactions](https://developer.squareup.com/reference/square_2021-08-18/transactions-api/list-transactions) endpoint.\n\nOne of `errors` or `transactions` is present in a given response (never both)."
        }
      ]
    },
    {
      "url": "/v2/locations/{location_id}/transactions",
      "method": "charge",
      "httpMethod": "post",
      "tag": "Transactions",
      "description": "Charge",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the location to associate the created transaction with."
        },
        {
          "name": "additional_recipients",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "amount_money",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "billing_address",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "buyer_email_address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "card_nonce",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "customer_card_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "customer_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "delay_capture",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "order_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reference_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "shipping_address",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "verification_token",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the [Charge](https://developer.squareup.com/reference/square_2021-08-18/transactions-api/charge) endpoint.\n\nOne of `errors` or `transaction` is present in a given response (never both)."
        }
      ]
    },
    {
      "url": "/v2/locations/{location_id}/transactions/{transaction_id}",
      "method": "retrieveTransaction",
      "httpMethod": "get",
      "tag": "Transactions",
      "description": "RetrieveTransaction",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the transaction's associated location."
        },
        {
          "name": "transaction_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the transaction to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the [RetrieveTransaction](https://developer.squareup.com/reference/square_2021-08-18/transactions-api/retrieve-transaction) endpoint.\n\nOne of `errors` or `transaction` is present in a given response (never both)."
        }
      ]
    },
    {
      "url": "/v2/locations/{location_id}/transactions/{transaction_id}/capture",
      "method": "captureTransaction",
      "httpMethod": "post",
      "tag": "Transactions",
      "description": "CaptureTransaction",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transaction_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the [CaptureTransaction](https://developer.squareup.com/reference/square_2021-08-18/transactions-api/capture-transaction) endpoint."
        }
      ]
    },
    {
      "url": "/v2/locations/{location_id}/transactions/{transaction_id}/refund",
      "method": "/v2/locations/{locationId}/transactions/{transactionId}/refundPost",
      "httpMethod": "post",
      "tag": "Transactions",
      "description": "CreateRefund",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the original transaction's associated location."
        },
        {
          "name": "transaction_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the original transaction that includes the tender to refund."
        },
        {
          "name": "amount_money",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "reason",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tender_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the [CreateRefund](https://developer.squareup.com/reference/square_2021-08-18/transactions-api/create-refund) endpoint.\n\nOne of `errors` or `refund` is present in a given response (never both)."
        }
      ]
    },
    {
      "url": "/v2/locations/{location_id}/transactions/{transaction_id}/void",
      "method": "voidTransaction",
      "httpMethod": "post",
      "tag": "Transactions",
      "description": "VoidTransaction",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transaction_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the [VoidTransaction](https://developer.squareup.com/reference/square_2021-08-18/transactions-api/void-transaction) endpoint."
        }
      ]
    },
    {
      "url": "/v2/loyalty/accounts",
      "method": "createLoyaltyAccount",
      "httpMethod": "post",
      "tag": "Loyalty",
      "description": "CreateLoyaltyAccount",
      "parameters": [
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "loyalty_account",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response that includes loyalty account created."
        }
      ]
    },
    {
      "url": "/v2/loyalty/accounts/search",
      "method": "searchLoyaltyAccounts",
      "httpMethod": "post",
      "tag": "Loyalty",
      "description": "SearchLoyaltyAccounts",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "query",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response that includes loyalty accounts that satisfy the search criteria."
        }
      ]
    },
    {
      "url": "/v2/loyalty/accounts/{account_id}",
      "method": "retrieveLoyaltyAccount",
      "httpMethod": "get",
      "tag": "Loyalty",
      "description": "RetrieveLoyaltyAccount",
      "parameters": [
        {
          "name": "account_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the [loyalty account](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyAccount) to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response that includes the loyalty account."
        }
      ]
    },
    {
      "url": "/v2/loyalty/accounts/{account_id}/accumulate",
      "method": "accumulateLoyaltyPoints",
      "httpMethod": "post",
      "tag": "Loyalty",
      "description": "AccumulateLoyaltyPoints",
      "parameters": [
        {
          "name": "account_id",
          "schema": "string",
          "required": true,
          "description": "The [loyalty account](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyAccount) ID to which to add the points."
        },
        {
          "name": "accumulate_points",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing the resulting loyalty event."
        }
      ]
    },
    {
      "url": "/v2/loyalty/accounts/{account_id}/adjust",
      "method": "adjustLoyaltyPoints",
      "httpMethod": "post",
      "tag": "Loyalty",
      "description": "AdjustLoyaltyPoints",
      "parameters": [
        {
          "name": "account_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the [loyalty account](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyAccount) in which to adjust the points."
        },
        {
          "name": "adjust_points",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response that includes the loyalty event that \nresulted from the successful API call."
        }
      ]
    },
    {
      "url": "/v2/loyalty/events/search",
      "method": "searchLoyaltyEvents",
      "httpMethod": "post",
      "tag": "Loyalty",
      "description": "SearchLoyaltyEvents",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "query",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response that contains loyalty events that satisfy the search \ncriteria, in order by the `created_at` date."
        }
      ]
    },
    {
      "url": "/v2/loyalty/programs",
      "method": "listLoyaltyPrograms",
      "httpMethod": "get",
      "tag": "Loyalty",
      "description": "ListLoyaltyPrograms",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response that contains all loyalty programs."
        }
      ]
    },
    {
      "url": "/v2/loyalty/programs/{program_id}",
      "method": "retrieveLoyaltyProgram",
      "httpMethod": "get",
      "tag": "Loyalty",
      "description": "RetrieveLoyaltyProgram",
      "parameters": [
        {
          "name": "program_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the loyalty program or the keyword `main`. Either value can be used to retrieve the single loyalty program that belongs to the seller."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response that contains the loyalty program."
        }
      ]
    },
    {
      "url": "/v2/loyalty/programs/{program_id}/calculate",
      "method": "calculateLoyaltyPoints",
      "httpMethod": "post",
      "tag": "Loyalty",
      "description": "CalculateLoyaltyPoints",
      "parameters": [
        {
          "name": "program_id",
          "schema": "string",
          "required": true,
          "description": "The [loyalty program](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyProgram) ID, which defines the rules for accruing points."
        },
        {
          "name": "order_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "transaction_amount_money",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response that includes the points that the buyer can earn from \na specified purchase."
        }
      ]
    },
    {
      "url": "/v2/loyalty/rewards",
      "method": "createLoyaltyReward",
      "httpMethod": "post",
      "tag": "Loyalty",
      "description": "CreateLoyaltyReward",
      "parameters": [
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "reward",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response that includes the loyalty reward created."
        }
      ]
    },
    {
      "url": "/v2/loyalty/rewards/search",
      "method": "searchLoyaltyRewards",
      "httpMethod": "post",
      "tag": "Loyalty",
      "description": "SearchLoyaltyRewards",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "query",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response that includes the loyalty rewards satisfying the search criteria."
        }
      ]
    },
    {
      "url": "/v2/loyalty/rewards/{reward_id}",
      "method": "deleteLoyaltyReward",
      "httpMethod": "delete",
      "tag": "Loyalty",
      "description": "DeleteLoyaltyReward",
      "parameters": [
        {
          "name": "reward_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the [loyalty reward](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyReward) to delete."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response returned by the API call."
        }
      ]
    },
    {
      "url": "/v2/loyalty/rewards/{reward_id}",
      "method": "retrieveLoyaltyReward",
      "httpMethod": "get",
      "tag": "Loyalty",
      "description": "RetrieveLoyaltyReward",
      "parameters": [
        {
          "name": "reward_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the [loyalty reward](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyReward) to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response that includes the loyalty reward."
        }
      ]
    },
    {
      "url": "/v2/loyalty/rewards/{reward_id}/redeem",
      "method": "redeemLoyaltyReward",
      "httpMethod": "post",
      "tag": "Loyalty",
      "description": "RedeemLoyaltyReward",
      "parameters": [
        {
          "name": "reward_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the [loyalty reward](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyReward) to redeem."
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response that includes the `LoyaltyEvent` published for redeeming the reward."
        }
      ]
    },
    {
      "url": "/v2/merchants",
      "method": "listMerchants",
      "httpMethod": "get",
      "tag": "Merchants",
      "description": "ListMerchants",
      "parameters": [
        {
          "name": "cursor",
          "schema": "integer",
          "required": false,
          "description": "The cursor generated by the previous response."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The response object returned by the [ListMerchant](https://developer.squareup.com/reference/square_2021-08-18/merchants-api/list-merchants) endpoint."
        }
      ]
    },
    {
      "url": "/v2/merchants/{merchant_id}",
      "method": "retrieveMerchant",
      "httpMethod": "get",
      "tag": "Merchants",
      "description": "RetrieveMerchant",
      "parameters": [
        {
          "name": "merchant_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the merchant to retrieve. If the string \"me\" is supplied as the ID,\nthen retrieve the merchant that is currently accessible to this call."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The response object returned by the [RetrieveMerchant](https://developer.squareup.com/reference/square_2021-08-18/merchants-api/retrieve-merchant) endpoint."
        }
      ]
    },
    {
      "url": "/v2/orders",
      "method": "createOrder",
      "httpMethod": "post",
      "tag": "Orders",
      "description": "CreateOrder",
      "parameters": [
        {
          "name": "idempotency_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "order",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the `CreateOrder` endpoint.\n\nEither `errors` or `order` is present in a given response, but never both."
        }
      ]
    },
    {
      "url": "/v2/orders/batch-retrieve",
      "method": "batchRetrieveOrders",
      "httpMethod": "post",
      "tag": "Orders",
      "description": "BatchRetrieveOrders",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "order_ids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the `BatchRetrieveOrders` endpoint."
        }
      ]
    },
    {
      "url": "/v2/orders/calculate",
      "method": "calculateOrder",
      "httpMethod": "post",
      "tag": "Orders",
      "description": "CalculateOrder",
      "parameters": [
        {
          "name": "order",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "proposed_rewards",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/orders/search",
      "method": "searchOrders",
      "httpMethod": "post",
      "tag": "Orders",
      "description": "SearchOrders",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "location_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "query",
          "schema": "object",
          "description": ""
        },
        {
          "name": "return_entries",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Either the `order_entries` or `orders` field is set, depending on whether\n`return_entries` is set on the [SearchOrdersRequest](https://developer.squareup.com/reference/square_2021-08-18/orders-api/search-orders)."
        }
      ]
    },
    {
      "url": "/v2/orders/{order_id}",
      "method": "/v2/orders/{orderId}Get",
      "httpMethod": "get",
      "tag": "Orders",
      "description": "RetrieveOrder",
      "parameters": [
        {
          "name": "order_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the order to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/orders/{order_id}",
      "method": "/v2/orders/{orderId}Put",
      "httpMethod": "put",
      "tag": "Orders",
      "description": "UpdateOrder",
      "parameters": [
        {
          "name": "order_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the order to update."
        },
        {
          "name": "fields_to_clear",
          "schema": "array",
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "order",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of\na request to the [UpdateOrder](https://developer.squareup.com/reference/square_2021-08-18/orders-api/update-order) endpoint."
        }
      ]
    },
    {
      "url": "/v2/orders/{order_id}/pay",
      "method": "payOrder",
      "httpMethod": "post",
      "tag": "Orders",
      "description": "PayOrder",
      "parameters": [
        {
          "name": "order_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the order being paid."
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "order_version",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "payment_ids",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response body of a request to the\n[PayOrder](https://developer.squareup.com/reference/square_2021-08-18/orders-api/pay-order) endpoint."
        }
      ]
    },
    {
      "url": "/v2/payments",
      "method": "/v2/paymentsGet",
      "httpMethod": "get",
      "tag": "Payments",
      "description": "ListPayments",
      "parameters": [
        {
          "name": "begin_time",
          "schema": "string",
          "required": false,
          "description": "The timestamp for the beginning of the reporting period, in RFC 3339 format.\nInclusive. Default: The current time minus one year."
        },
        {
          "name": "end_time",
          "schema": "string",
          "required": false,
          "description": "The timestamp for the end of the reporting period, in RFC 3339 format.\n\nDefault: The current time."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "The order in which results are listed:\n- `ASC` - Oldest to newest.\n- `DESC` - Newest to oldest (default)."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this cursor to retrieve the next set of results for the original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)."
        },
        {
          "name": "location_id",
          "schema": "string",
          "required": false,
          "description": "Limit results to the location supplied. By default, results are returned\nfor the default (main) location associated with the seller."
        },
        {
          "name": "total",
          "schema": "integer",
          "required": false,
          "description": "The exact amount in the `total_money` for a payment."
        },
        {
          "name": "last_4",
          "schema": "string",
          "required": false,
          "description": "The last four digits of a payment card."
        },
        {
          "name": "card_brand",
          "schema": "string",
          "required": false,
          "description": "The brand of the payment card (for example, VISA)."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to be returned in a single page.\nIt is possible to receive fewer results than the specified limit on a given page.\n\nThe default value of 100 is also the maximum allowed value. If the provided value is \ngreater than 100, it is ignored and the default value is used instead.\n\nDefault: `100`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the response returned by [ListPayments](https://developer.squareup.com/reference/square_2021-08-18/payments-api/list-payments)."
        }
      ]
    },
    {
      "url": "/v2/payments",
      "method": "createPayment",
      "httpMethod": "post",
      "tag": "Payments",
      "description": "CreatePayment",
      "parameters": [
        {
          "name": "accept_partial_authorization",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "amount_money",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "app_fee_money",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "autocomplete",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "billing_address",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "buyer_email_address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "cash_details",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customer_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "delay_duration",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "external_details",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "location_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "order_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reference_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "shipping_address",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "source_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "statement_description_identifier",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tip_money",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "verification_token",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the response returned by [CreatePayment](https://developer.squareup.com/reference/square_2021-08-18/payments-api/create-payment).\n\nIf there are errors processing the request, the `payment` field might not be\npresent, or it might be present with a status of `FAILED`."
        }
      ]
    },
    {
      "url": "/v2/payments/cancel",
      "method": "cancelPaymentByIdempotencyKey",
      "httpMethod": "post",
      "tag": "Payments",
      "description": "CancelPaymentByIdempotencyKey",
      "parameters": [
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the response returned by \n[CancelPaymentByIdempotencyKey](https://developer.squareup.com/reference/square_2021-08-18/payments-api/cancel-payment-by-idempotency-key).\nOn success, `errors` is empty."
        }
      ]
    },
    {
      "url": "/v2/payments/{payment_id}",
      "method": "getPayment",
      "httpMethod": "get",
      "tag": "Payments",
      "description": "GetPayment",
      "parameters": [
        {
          "name": "payment_id",
          "schema": "string",
          "required": true,
          "description": "A unique ID for the desired payment."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the response returned by [GetPayment](https://developer.squareup.com/reference/square_2021-08-18/payments-api/get-payment)."
        }
      ]
    },
    {
      "url": "/v2/payments/{payment_id}",
      "method": "updatePayment",
      "httpMethod": "put",
      "tag": "Payments",
      "description": "UpdatePayment",
      "parameters": [
        {
          "name": "payment_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the payment to update."
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "payment",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the response returned by \n[UpdatePayment](https://developer.squareup.com/reference/square_2021-08-18/payments-api/update-payment)."
        }
      ]
    },
    {
      "url": "/v2/payments/{payment_id}/cancel",
      "method": "cancelPayment",
      "httpMethod": "post",
      "tag": "Payments",
      "description": "CancelPayment",
      "parameters": [
        {
          "name": "payment_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the payment to cancel."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the response returned by [CancelPayment](https://developer.squareup.com/reference/square_2021-08-18/payments-api/cancel-payment)."
        }
      ]
    },
    {
      "url": "/v2/payments/{payment_id}/complete",
      "method": "completePayment",
      "httpMethod": "post",
      "tag": "Payments",
      "description": "CompletePayment",
      "parameters": [
        {
          "name": "payment_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID identifying the payment to be completed."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the response returned by[CompletePayment](https://developer.squareup.com/reference/square_2021-08-18/payments-api/complete-payment)."
        }
      ]
    },
    {
      "url": "/v2/refunds",
      "method": "listPaymentRefunds",
      "httpMethod": "get",
      "tag": "Refunds",
      "description": "ListPaymentRefunds",
      "parameters": [
        {
          "name": "begin_time",
          "schema": "string",
          "required": false,
          "description": "The timestamp for the beginning of the requested reporting period, in RFC 3339 format.\n\nDefault: The current time minus one year."
        },
        {
          "name": "end_time",
          "schema": "string",
          "required": false,
          "description": "The timestamp for the end of the requested reporting period, in RFC 3339 format.\n\nDefault: The current time."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "The order in which results are listed:\n- `ASC` - Oldest to newest.\n- `DESC` - Newest to oldest (default)."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this cursor to retrieve the next set of results for the original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)."
        },
        {
          "name": "location_id",
          "schema": "string",
          "required": false,
          "description": "Limit results to the location supplied. By default, results are returned\nfor all locations associated with the seller."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "If provided, only refunds with the given status are returned.\nFor a list of refund status values, see [PaymentRefund](https://developer.squareup.com/reference/square_2021-08-18/objects/PaymentRefund).\n\nDefault: If omitted, refunds are returned regardless of their status."
        },
        {
          "name": "source_type",
          "schema": "string",
          "required": false,
          "description": "If provided, only refunds with the given source type are returned.\n- `CARD` - List refunds only for payments where `CARD` was specified as the payment\nsource.\n\nDefault: If omitted, refunds are returned regardless of the source type."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to be returned in a single page.\n\nIt is possible to receive fewer results than the specified limit on a given page.\n\nIf the supplied value is greater than 100, no more than 100 results are returned.\n\nDefault: 100"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the response returned by [ListPaymentRefunds](https://developer.squareup.com/reference/square_2021-08-18/refunds-api/list-payment-refunds).\n\nEither `errors` or `refunds` is present in a given response (never both)."
        }
      ]
    },
    {
      "url": "/v2/refunds",
      "method": "refundPayment",
      "httpMethod": "post",
      "tag": "Refunds",
      "description": "RefundPayment",
      "parameters": [
        {
          "name": "amount_money",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "app_fee_money",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "payment_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "reason",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the response returned by \n[RefundPayment](https://developer.squareup.com/reference/square_2021-08-18/refunds-api/refund-payment).\n\nIf there are errors processing the request, the `refund` field might not be\npresent, or it might be present with a status of `FAILED`."
        }
      ]
    },
    {
      "url": "/v2/refunds/{refund_id}",
      "method": "getPaymentRefund",
      "httpMethod": "get",
      "tag": "Refunds",
      "description": "GetPaymentRefund",
      "parameters": [
        {
          "name": "refund_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the desired `PaymentRefund`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the response returned by [GetRefund](https://developer.squareup.com/reference/square_2021-08-18/refunds-api/get-payment-refund).\n\nNote: If there are errors processing the request, the refund field might not be\npresent or it might be present in a FAILED state."
        }
      ]
    },
    {
      "url": "/v2/sites",
      "method": "listSites",
      "httpMethod": "get",
      "tag": "Sites",
      "description": "ListSites",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents a `ListSites` response. The response can include either `sites` or `errors`."
        }
      ]
    },
    {
      "url": "/v2/sites/{site_id}/snippet",
      "method": "deleteSnippet",
      "httpMethod": "delete",
      "tag": "Snippets",
      "description": "DeleteSnippet",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the site that contains the snippet."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents a `DeleteSnippet` response."
        }
      ]
    },
    {
      "url": "/v2/sites/{site_id}/snippet",
      "method": "retrieveSnippet",
      "httpMethod": "get",
      "tag": "Snippets",
      "description": "RetrieveSnippet",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the site that contains the snippet."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents a `RetrieveSnippet` response. The response can include either `snippet` or `errors`."
        }
      ]
    },
    {
      "url": "/v2/sites/{site_id}/snippet",
      "method": "upsertSnippet",
      "httpMethod": "post",
      "tag": "Snippets",
      "description": "UpsertSnippet",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the site where you want to add or update the snippet."
        },
        {
          "name": "snippet",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents an `UpsertSnippet` response. The response can include either `snippet` or `errors`."
        }
      ]
    },
    {
      "url": "/v2/subscriptions",
      "method": "createSubscription",
      "httpMethod": "post",
      "tag": "Subscriptions",
      "description": "CreateSubscription",
      "parameters": [
        {
          "name": "canceled_date",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "card_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "customer_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "plan_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "price_override_money",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "start_date",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tax_percentage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "timezone",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response from the\n[CreateSubscription](https://developer.squareup.com/reference/square_2021-08-18/subscriptions-api/create-subscription) endpoint."
        }
      ]
    },
    {
      "url": "/v2/subscriptions/search",
      "method": "searchSubscriptions",
      "httpMethod": "post",
      "tag": "Subscriptions",
      "description": "SearchSubscriptions",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "query",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response from the\n[SearchSubscriptions](https://developer.squareup.com/reference/square_2021-08-18/subscriptions-api/search-subscriptions) endpoint."
        }
      ]
    },
    {
      "url": "/v2/subscriptions/{subscription_id}",
      "method": "retrieveSubscription",
      "httpMethod": "get",
      "tag": "Subscriptions",
      "description": "RetrieveSubscription",
      "parameters": [
        {
          "name": "subscription_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the subscription to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response from the\n[RetrieveSubscription](https://developer.squareup.com/reference/square_2021-08-18/subscriptions-api/retrieve-subscription) endpoint."
        }
      ]
    },
    {
      "url": "/v2/subscriptions/{subscription_id}",
      "method": "updateSubscription",
      "httpMethod": "put",
      "tag": "Subscriptions",
      "description": "UpdateSubscription",
      "parameters": [
        {
          "name": "subscription_id",
          "schema": "string",
          "required": true,
          "description": "The ID for the subscription to update."
        },
        {
          "name": "subscription",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response from the\n[UpdateSubscription](https://developer.squareup.com/reference/square_2021-08-18/subscriptions-api/update-subscription) endpoint."
        }
      ]
    },
    {
      "url": "/v2/subscriptions/{subscription_id}/cancel",
      "method": "cancelSubscription",
      "httpMethod": "post",
      "tag": "Subscriptions",
      "description": "CancelSubscription",
      "parameters": [
        {
          "name": "subscription_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the subscription to cancel."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines fields that are included in a\n[CancelSubscription](https://developer.squareup.com/reference/square_2021-08-18/subscriptions-api/cancel-subscription) response."
        }
      ]
    },
    {
      "url": "/v2/subscriptions/{subscription_id}/events",
      "method": "listSubscriptionEvents",
      "httpMethod": "get",
      "tag": "Subscriptions",
      "description": "ListSubscriptionEvents",
      "parameters": [
        {
          "name": "subscription_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the subscription to retrieve the events for."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The upper limit on the number of subscription events to return\nin the response.\n\nDefault: `200`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines the fields that are included in the response from the\n[ListSubscriptionEvents](https://developer.squareup.com/reference/square_2021-08-18/subscriptions-api/list-subscription-events)\nendpoint."
        }
      ]
    },
    {
      "url": "/v2/subscriptions/{subscription_id}/resume",
      "method": "resumeSubscription",
      "httpMethod": "post",
      "tag": "Subscriptions",
      "description": "ResumeSubscription",
      "parameters": [
        {
          "name": "subscription_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the subscription to resume."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines parameters in a\n[ResumeSubscription](https://developer.squareup.com/reference/square_2021-08-18/subscriptions-api/resume-subscription) endpoint\nresponse."
        }
      ]
    },
    {
      "url": "/v2/team-members",
      "method": "createTeamMember",
      "httpMethod": "post",
      "tag": "Team",
      "description": "CreateTeamMember",
      "parameters": [
        {
          "name": "idempotency_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "team_member",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents a response from a create request containing the created `TeamMember` object or error messages."
        }
      ]
    },
    {
      "url": "/v2/team-members/bulk-create",
      "method": "bulkCreateTeamMembers",
      "httpMethod": "post",
      "tag": "Team",
      "description": "BulkCreateTeamMembers",
      "parameters": [
        {
          "name": "team_members",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents a response from a bulk create request containing the created `TeamMember` objects or error messages."
        }
      ]
    },
    {
      "url": "/v2/team-members/bulk-update",
      "method": "bulkUpdateTeamMembers",
      "httpMethod": "post",
      "tag": "Team",
      "description": "BulkUpdateTeamMembers",
      "parameters": [
        {
          "name": "team_members",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents a response from a bulk update request containing the updated `TeamMember` objects or error messages."
        }
      ]
    },
    {
      "url": "/v2/team-members/search",
      "method": "searchTeamMembers",
      "httpMethod": "post",
      "tag": "Team",
      "description": "SearchTeamMembers",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "query",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents a response from a search request containing a filtered list of `TeamMember` objects."
        }
      ]
    },
    {
      "url": "/v2/team-members/{team_member_id}",
      "method": "retrieveTeamMember",
      "httpMethod": "get",
      "tag": "Team",
      "description": "RetrieveTeamMember",
      "parameters": [
        {
          "name": "team_member_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the team member to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents a response from a retrieve request containing a `TeamMember` object or error messages."
        }
      ]
    },
    {
      "url": "/v2/team-members/{team_member_id}",
      "method": "updateTeamMember",
      "httpMethod": "put",
      "tag": "Team",
      "description": "UpdateTeamMember",
      "parameters": [
        {
          "name": "team_member_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the team member to update."
        },
        {
          "name": "team_member",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents a response from an update request containing the updated `TeamMember` object or error messages."
        }
      ]
    },
    {
      "url": "/v2/team-members/{team_member_id}/wage-setting",
      "method": "retrieveWageSetting",
      "httpMethod": "get",
      "tag": "Team",
      "description": "RetrieveWageSetting",
      "parameters": [
        {
          "name": "team_member_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the team member for which to retrieve the wage setting."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents a response from a retrieve request containing the specified `WageSetting` object or error messages."
        }
      ]
    },
    {
      "url": "/v2/team-members/{team_member_id}/wage-setting",
      "method": "updateWageSetting",
      "httpMethod": "put",
      "tag": "Team",
      "description": "UpdateWageSetting",
      "parameters": [
        {
          "name": "team_member_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the team member for which to update the `WageSetting` object."
        },
        {
          "name": "wage_setting",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents a response from an update request containing the updated `WageSetting` object\nor error messages."
        }
      ]
    },
    {
      "url": "/v2/terminals/checkouts",
      "method": "createTerminalCheckout",
      "httpMethod": "post",
      "tag": "Terminal",
      "description": "CreateTerminalCheckout",
      "parameters": [
        {
          "name": "checkout",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/terminals/checkouts/search",
      "method": "searchTerminalCheckouts",
      "httpMethod": "post",
      "tag": "Terminal",
      "description": "SearchTerminalCheckouts",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "query",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/terminals/checkouts/{checkout_id}",
      "method": "getTerminalCheckout",
      "httpMethod": "get",
      "tag": "Terminal",
      "description": "GetTerminalCheckout",
      "parameters": [
        {
          "name": "checkout_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the desired `TerminalCheckout`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/terminals/checkouts/{checkout_id}/cancel",
      "method": "cancelTerminalCheckout",
      "httpMethod": "post",
      "tag": "Terminal",
      "description": "CancelTerminalCheckout",
      "parameters": [
        {
          "name": "checkout_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the desired `TerminalCheckout`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/terminals/refunds",
      "method": "createTerminalRefund",
      "httpMethod": "post",
      "tag": "Terminal",
      "description": "CreateTerminalRefund",
      "parameters": [
        {
          "name": "idempotency_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "refund",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/terminals/refunds/search",
      "method": "searchTerminalRefunds",
      "httpMethod": "post",
      "tag": "Terminal",
      "description": "SearchTerminalRefunds",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "query",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/terminals/refunds/{terminal_refund_id}",
      "method": "getTerminalRefund",
      "httpMethod": "get",
      "tag": "Terminal",
      "description": "GetTerminalRefund",
      "parameters": [
        {
          "name": "terminal_refund_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the desired `TerminalRefund`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/terminals/refunds/{terminal_refund_id}/cancel",
      "method": "cancelTerminalRefund",
      "httpMethod": "post",
      "tag": "Terminal",
      "description": "CancelTerminalRefund",
      "parameters": [
        {
          "name": "terminal_refund_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID for the desired `TerminalRefund`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://connect.squareup.com",
  "apiDescription": "Client library for accessing the Square Connect APIs",
  "apiTitle": "Square Connect API",
  "endpoints": 159,
  "sdkMethods": 200,
  "schemas": 807,
  "parameters": 592,
  "contactUrl": "https://squareup.com/developers",
  "contactEmail": "developers@squareup.com",
  "difficultyScore": 751.5,
  "difficulty": "Very Hard"
}