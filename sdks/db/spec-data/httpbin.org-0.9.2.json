{
  "providerName": "httpbin.org",
  "openApiRaw": "http://httpbin.org/spec.json",
  "homepage": "httpbin.org",
  "apiVersion": "0.9.2",
  "methods": [
    {
      "url": "/absolute-redirect/{n}",
      "method": "/absoluteRedirect/{n}Get",
      "httpMethod": "get",
      "tag": "Redirects",
      "description": "Absolutely 302 Redirects n times.",
      "parameters": [
        {
          "name": "n",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/anything",
      "method": "/anythingDelete",
      "httpMethod": "delete",
      "tag": "Anything",
      "description": "Returns anything passed in request data.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/anything",
      "method": "/anythingGet",
      "httpMethod": "get",
      "tag": "Anything",
      "description": "Returns anything passed in request data.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/anything",
      "method": "/anythingPatch",
      "httpMethod": "patch",
      "tag": "Anything",
      "description": "Returns anything passed in request data.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/anything",
      "method": "/anythingPost",
      "httpMethod": "post",
      "tag": "Anything",
      "description": "Returns anything passed in request data.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/anything",
      "method": "/anythingPut",
      "httpMethod": "put",
      "tag": "Anything",
      "description": "Returns anything passed in request data.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/anything",
      "method": "/anythingTrace",
      "httpMethod": "trace",
      "tag": "Anything",
      "description": "Returns anything passed in request data.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/anything/{anything}",
      "method": "/anything/{anything}Delete",
      "httpMethod": "delete",
      "tag": "Anything",
      "description": "Returns anything passed in request data.",
      "parameters": [
        {
          "name": "anything",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        }
      ],
      "responses": []
    },
    {
      "url": "/anything/{anything}",
      "method": "/anything/{anything}Get",
      "httpMethod": "get",
      "tag": "Anything",
      "description": "Returns anything passed in request data.",
      "parameters": [
        {
          "name": "anything",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        }
      ],
      "responses": []
    },
    {
      "url": "/anything/{anything}",
      "method": "/anything/{anything}Patch",
      "httpMethod": "patch",
      "tag": "Anything",
      "description": "Returns anything passed in request data.",
      "parameters": [
        {
          "name": "anything",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        }
      ],
      "responses": []
    },
    {
      "url": "/anything/{anything}",
      "method": "/anything/{anything}Post",
      "httpMethod": "post",
      "tag": "Anything",
      "description": "Returns anything passed in request data.",
      "parameters": [
        {
          "name": "anything",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        }
      ],
      "responses": []
    },
    {
      "url": "/anything/{anything}",
      "method": "/anything/{anything}Put",
      "httpMethod": "put",
      "tag": "Anything",
      "description": "Returns anything passed in request data.",
      "parameters": [
        {
          "name": "anything",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        }
      ],
      "responses": []
    },
    {
      "url": "/anything/{anything}",
      "method": "/anything/{anything}Trace",
      "httpMethod": "trace",
      "tag": "Anything",
      "description": "Returns anything passed in request data.",
      "parameters": [
        {
          "name": "anything",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        }
      ],
      "responses": []
    },
    {
      "url": "/base64/{value}",
      "method": "/base64/{value}Get",
      "httpMethod": "get",
      "tag": "Dynamic data",
      "description": "Decodes base64url-encoded string.",
      "parameters": [
        {
          "name": "value",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/basic-auth/{user}/{passwd}",
      "method": "/basicAuth/{user}/{passwd}Get",
      "httpMethod": "get",
      "tag": "Auth",
      "description": "Prompts the user for authorization using HTTP Basic Auth.",
      "parameters": [
        {
          "name": "user",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "passwd",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/bearer",
      "method": "/bearerGet",
      "httpMethod": "get",
      "tag": "Auth",
      "description": "Prompts the user for authorization using bearer authentication.",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/brotli",
      "method": "/brotliGet",
      "httpMethod": "get",
      "tag": "Response formats",
      "description": "Returns Brotli-encoded data.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/bytes/{n}",
      "method": "/bytes/{n}Get",
      "httpMethod": "get",
      "tag": "Dynamic data",
      "description": "Returns n random bytes generated with given seed",
      "parameters": [
        {
          "name": "n",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/cache",
      "method": "/cacheGet",
      "httpMethod": "get",
      "tag": "Response inspection",
      "description": "Returns a 304 if an If-Modified-Since header or If-None-Match is present. Returns the same as a GET otherwise.",
      "parameters": [
        {
          "name": "If-Modified-Since",
          "schema": "string",
          "description": ""
        },
        {
          "name": "If-None-Match",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/cache/{value}",
      "method": "/cache/{value}Get",
      "httpMethod": "get",
      "tag": "Response inspection",
      "description": "Sets a Cache-Control header for n seconds.",
      "parameters": [
        {
          "name": "value",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/cookies",
      "method": "/cookiesGet",
      "httpMethod": "get",
      "tag": "Cookies",
      "description": "Returns cookie data.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/cookies/delete",
      "method": "/cookies/deleteGet",
      "httpMethod": "get",
      "tag": "Cookies",
      "description": "Deletes cookie(s) as provided by the query string and redirects to cookie list.",
      "parameters": [
        {
          "name": "freeform",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/cookies/set",
      "method": "/cookies/setGet",
      "httpMethod": "get",
      "tag": "Cookies",
      "description": "Sets cookie(s) as provided by the query string and redirects to cookie list.",
      "parameters": [
        {
          "name": "freeform",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/cookies/set/{name}/{value}",
      "method": "/cookies/set/{name}/{value}Get",
      "httpMethod": "get",
      "tag": "Cookies",
      "description": "Sets a cookie and redirects to cookie list.",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "value",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/deflate",
      "method": "/deflateGet",
      "httpMethod": "get",
      "tag": "Response formats",
      "description": "Returns Deflate-encoded data.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/delay/{delay}",
      "method": "/delay/{delay}Delete",
      "httpMethod": "delete",
      "tag": "Dynamic data",
      "description": "Returns a delayed response (max of 10 seconds).",
      "parameters": [
        {
          "name": "delay",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/delay/{delay}",
      "method": "/delay/{delay}Get",
      "httpMethod": "get",
      "tag": "Dynamic data",
      "description": "Returns a delayed response (max of 10 seconds).",
      "parameters": [
        {
          "name": "delay",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/delay/{delay}",
      "method": "/delay/{delay}Patch",
      "httpMethod": "patch",
      "tag": "Dynamic data",
      "description": "Returns a delayed response (max of 10 seconds).",
      "parameters": [
        {
          "name": "delay",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/delay/{delay}",
      "method": "/delay/{delay}Post",
      "httpMethod": "post",
      "tag": "Dynamic data",
      "description": "Returns a delayed response (max of 10 seconds).",
      "parameters": [
        {
          "name": "delay",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/delay/{delay}",
      "method": "/delay/{delay}Put",
      "httpMethod": "put",
      "tag": "Dynamic data",
      "description": "Returns a delayed response (max of 10 seconds).",
      "parameters": [
        {
          "name": "delay",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/delay/{delay}",
      "method": "/delay/{delay}Trace",
      "httpMethod": "trace",
      "tag": "Dynamic data",
      "description": "Returns a delayed response (max of 10 seconds).",
      "parameters": [
        {
          "name": "delay",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/delete",
      "method": "/deleteDelete",
      "httpMethod": "delete",
      "tag": "HTTP Methods",
      "description": "The request's DELETE parameters.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/deny",
      "method": "/denyGet",
      "httpMethod": "get",
      "tag": "Response formats",
      "description": "Returns page denied by robots.txt rules.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/digest-auth/{qop}/{user}/{passwd}",
      "method": "/digestAuth/{qop}/{user}/{passwd}Get",
      "httpMethod": "get",
      "tag": "Auth",
      "description": "Prompts the user for authorization using Digest Auth.",
      "parameters": [
        {
          "name": "qop",
          "schema": "string",
          "required": true,
          "description": "auth or auth-int"
        },
        {
          "name": "user",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "passwd",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/digest-auth/{qop}/{user}/{passwd}/{algorithm}",
      "method": "/digestAuth/{qop}/{user}/{passwd}/{algorithm}Get",
      "httpMethod": "get",
      "tag": "Auth",
      "description": "Prompts the user for authorization using Digest Auth + Algorithm.",
      "parameters": [
        {
          "name": "qop",
          "schema": "string",
          "required": true,
          "description": "auth or auth-int"
        },
        {
          "name": "user",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "passwd",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "algorithm",
          "schema": "string",
          "required": true,
          "description": "MD5, SHA-256, SHA-512"
        }
      ],
      "responses": []
    },
    {
      "url": "/digest-auth/{qop}/{user}/{passwd}/{algorithm}/{stale_after}",
      "method": "/digestAuth/{qop}/{user}/{passwd}/{algorithm}/{staleAfter}Get",
      "httpMethod": "get",
      "tag": "Auth",
      "description": "Prompts the user for authorization using Digest Auth + Algorithm.",
      "parameters": [
        {
          "name": "qop",
          "schema": "string",
          "required": true,
          "description": "auth or auth-int"
        },
        {
          "name": "user",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "passwd",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "algorithm",
          "schema": "string",
          "required": true,
          "description": "MD5, SHA-256, SHA-512"
        },
        {
          "name": "stale_after",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/drip",
      "method": "/dripGet",
      "httpMethod": "get",
      "tag": "Dynamic data",
      "description": "Drips data over a duration after an optional initial delay.",
      "parameters": [
        {
          "name": "duration",
          "schema": "number",
          "required": false,
          "description": "The amount of time (in seconds) over which to drip each byte"
        },
        {
          "name": "numbytes",
          "schema": "integer",
          "required": false,
          "description": "The number of bytes to respond with"
        },
        {
          "name": "code",
          "schema": "integer",
          "required": false,
          "description": "The response code that will be returned"
        },
        {
          "name": "delay",
          "schema": "number",
          "required": false,
          "description": "The amount of time (in seconds) to delay before responding"
        }
      ],
      "responses": []
    },
    {
      "url": "/encoding/utf8",
      "method": "/encoding/utf8Get",
      "httpMethod": "get",
      "tag": "Response formats",
      "description": "Returns a UTF-8 encoded body.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/etag/{etag}",
      "method": "/etag/{etag}Get",
      "httpMethod": "get",
      "tag": "Response inspection",
      "description": "Assumes the resource has the given etag and responds to If-None-Match and If-Match headers appropriately.",
      "parameters": [
        {
          "name": "If-None-Match",
          "schema": "string",
          "description": ""
        },
        {
          "name": "If-Match",
          "schema": "string",
          "description": ""
        },
        {
          "name": "etag",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        }
      ],
      "responses": []
    },
    {
      "url": "/get",
      "method": "/getGet",
      "httpMethod": "get",
      "tag": "HTTP Methods",
      "description": "The request's query parameters.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/gzip",
      "method": "/gzipGet",
      "httpMethod": "get",
      "tag": "Response formats",
      "description": "Returns GZip-encoded data.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/headers",
      "method": "/headersGet",
      "httpMethod": "get",
      "tag": "Request inspection",
      "description": "Return the incoming request's HTTP headers.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/hidden-basic-auth/{user}/{passwd}",
      "method": "/hiddenBasicAuth/{user}/{passwd}Get",
      "httpMethod": "get",
      "tag": "Auth",
      "description": "Prompts the user for authorization using HTTP Basic Auth.",
      "parameters": [
        {
          "name": "user",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "passwd",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/html",
      "method": "/htmlGet",
      "httpMethod": "get",
      "tag": "Response formats",
      "description": "Returns a simple HTML document.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/image",
      "method": "/imageGet",
      "httpMethod": "get",
      "tag": "Images",
      "description": "Returns a simple image of the type suggest by the Accept header.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/image/jpeg",
      "method": "/image/jpegGet",
      "httpMethod": "get",
      "tag": "Images",
      "description": "Returns a simple JPEG image.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/image/png",
      "method": "/image/pngGet",
      "httpMethod": "get",
      "tag": "Images",
      "description": "Returns a simple PNG image.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/image/svg",
      "method": "/image/svgGet",
      "httpMethod": "get",
      "tag": "Images",
      "description": "Returns a simple SVG image.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/image/webp",
      "method": "/image/webpGet",
      "httpMethod": "get",
      "tag": "Images",
      "description": "Returns a simple WEBP image.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/ip",
      "method": "/ipGet",
      "httpMethod": "get",
      "tag": "Request inspection",
      "description": "Returns the requester's IP Address.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/json",
      "method": "/jsonGet",
      "httpMethod": "get",
      "tag": "Response formats",
      "description": "Returns a simple JSON document.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/links/{n}/{offset}",
      "method": "/links/{n}/{offset}Get",
      "httpMethod": "get",
      "tag": "Dynamic data",
      "description": "Generate a page containing n links to other pages which do the same.",
      "parameters": [
        {
          "name": "n",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/patch",
      "method": "/patchPatch",
      "httpMethod": "patch",
      "tag": "HTTP Methods",
      "description": "The request's PATCH parameters.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/post",
      "method": "/postPost",
      "httpMethod": "post",
      "tag": "HTTP Methods",
      "description": "The request's POST parameters.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/put",
      "method": "/putPut",
      "httpMethod": "put",
      "tag": "HTTP Methods",
      "description": "The request's PUT parameters.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/range/{numbytes}",
      "method": "/range/{numbytes}Get",
      "httpMethod": "get",
      "tag": "Dynamic data",
      "description": "Streams n random bytes generated with given seed, at given chunk size per packet.",
      "parameters": [
        {
          "name": "numbytes",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/redirect-to",
      "method": "/redirectToDelete",
      "httpMethod": "delete",
      "tag": "Redirects",
      "description": "302/3XX Redirects to the given URL.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/redirect-to",
      "method": "/redirectToGet",
      "httpMethod": "get",
      "tag": "Redirects",
      "description": "302/3XX Redirects to the given URL.",
      "parameters": [
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "status_code",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/redirect-to",
      "method": "/redirectToPatch",
      "httpMethod": "patch",
      "tag": "Redirects",
      "description": "302/3XX Redirects to the given URL.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/redirect-to",
      "method": "/redirectToPost",
      "httpMethod": "post",
      "tag": "Redirects",
      "description": "302/3XX Redirects to the given URL.",
      "parameters": [
        {
          "name": "status_code",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/redirect-to",
      "method": "/redirectToPut",
      "httpMethod": "put",
      "tag": "Redirects",
      "description": "302/3XX Redirects to the given URL.",
      "parameters": [
        {
          "name": "status_code",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/redirect-to",
      "method": "/redirectToTrace",
      "httpMethod": "trace",
      "tag": "Redirects",
      "description": "302/3XX Redirects to the given URL.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/redirect/{n}",
      "method": "/redirect/{n}Get",
      "httpMethod": "get",
      "tag": "Redirects",
      "description": "302 Redirects n times.",
      "parameters": [
        {
          "name": "n",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/relative-redirect/{n}",
      "method": "/relativeRedirect/{n}Get",
      "httpMethod": "get",
      "tag": "Redirects",
      "description": "Relatively 302 Redirects n times.",
      "parameters": [
        {
          "name": "n",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/response-headers",
      "method": "/responseHeadersGet",
      "httpMethod": "get",
      "tag": "Response inspection",
      "description": "Returns a set of response headers from the query string.",
      "parameters": [
        {
          "name": "freeform",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/response-headers",
      "method": "/responseHeadersPost",
      "httpMethod": "post",
      "tag": "Response inspection",
      "description": "Returns a set of response headers from the query string.",
      "parameters": [
        {
          "name": "freeform",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/robots.txt",
      "method": "/robotsTxtGet",
      "httpMethod": "get",
      "tag": "Response formats",
      "description": "Returns some robots.txt rules.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/status/{codes}",
      "method": "/status/{codes}Delete",
      "httpMethod": "delete",
      "tag": "Status codes",
      "description": "Return status code or random status code if more than one are given",
      "parameters": [
        {
          "name": "codes",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/status/{codes}",
      "method": "/status/{codes}Get",
      "httpMethod": "get",
      "tag": "Status codes",
      "description": "Return status code or random status code if more than one are given",
      "parameters": [
        {
          "name": "codes",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/status/{codes}",
      "method": "/status/{codes}Patch",
      "httpMethod": "patch",
      "tag": "Status codes",
      "description": "Return status code or random status code if more than one are given",
      "parameters": [
        {
          "name": "codes",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/status/{codes}",
      "method": "/status/{codes}Post",
      "httpMethod": "post",
      "tag": "Status codes",
      "description": "Return status code or random status code if more than one are given",
      "parameters": [
        {
          "name": "codes",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/status/{codes}",
      "method": "/status/{codes}Put",
      "httpMethod": "put",
      "tag": "Status codes",
      "description": "Return status code or random status code if more than one are given",
      "parameters": [
        {
          "name": "codes",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/status/{codes}",
      "method": "/status/{codes}Trace",
      "httpMethod": "trace",
      "tag": "Status codes",
      "description": "Return status code or random status code if more than one are given",
      "parameters": [
        {
          "name": "codes",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/stream-bytes/{n}",
      "method": "/streamBytes/{n}Get",
      "httpMethod": "get",
      "tag": "Dynamic data",
      "description": "Streams n random bytes generated with given seed, at given chunk size per packet.",
      "parameters": [
        {
          "name": "n",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/stream/{n}",
      "method": "/stream/{n}Get",
      "httpMethod": "get",
      "tag": "Dynamic data",
      "description": "Stream n JSON responses",
      "parameters": [
        {
          "name": "n",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/user-agent",
      "method": "/userAgentGet",
      "httpMethod": "get",
      "tag": "Request inspection",
      "description": "Return the incoming requests's User-Agent header.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/uuid",
      "method": "/uuidGet",
      "httpMethod": "get",
      "tag": "Dynamic data",
      "description": "Return a UUID4.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/xml",
      "method": "/xmlGet",
      "httpMethod": "get",
      "tag": "Response formats",
      "description": "Returns a simple XML document.",
      "parameters": [],
      "responses": []
    }
  ],
  "apiBaseUrl": "https://httpbin.org",
  "apiDescription": "A simple HTTP Request & Response Service.<br/> <br/> <b>Run locally: </b> <code>$ docker run -p 80:80 kennethreitz/httpbin</code>",
  "apiTitle": "httpbin.org",
  "endpoints": 52,
  "sdkMethods": 78,
  "schemas": 0,
  "parameters": 67,
  "contactUrl": "https://kennethreitz.org",
  "contactEmail": "me@kennethreitz.org",
  "difficultyScore": 94.75,
  "difficulty": "Medium"
}