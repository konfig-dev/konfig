{
  "providerName": "jumpseller.com",
  "openApiRaw": "https://api.jumpseller.com/swagger.json",
  "securitySchemes": {},
  "homepage": "jumpseller.com",
  "apiVersion": "1.0.0",
  "methods": [
    {
      "url": "/categories.json",
      "method": "/categoriesJsonGet",
      "httpMethod": "get",
      "tag": "Categories",
      "description": "Retrieve all Categories.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/categories.json",
      "method": "/categoriesJsonPost",
      "httpMethod": "post",
      "tag": "Categories",
      "description": "Create a new Category.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "category",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/categories/count.json",
      "method": "/categories/countJsonGet",
      "httpMethod": "get",
      "tag": "Categories",
      "description": "Count all Categories.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/categories/{id}.json",
      "method": "/categories/{id}JsonDelete",
      "httpMethod": "delete",
      "tag": "Categories",
      "description": "Delete an existing Category.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Category"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/categories/{id}.json",
      "method": "/categories/{id}JsonGet",
      "httpMethod": "get",
      "tag": "Categories",
      "description": "Retrieve a single Category.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Category"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/categories/{id}.json",
      "method": "/categories/{id}JsonPut",
      "httpMethod": "put",
      "tag": "Categories",
      "description": "Modify an existing Category.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Category"
        },
        {
          "name": "category",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/checkout_custom_fields.json",
      "method": "/checkoutCustomFieldsJsonGet",
      "httpMethod": "get",
      "tag": "Checkout Custom Fields",
      "description": "Retrieve all Checkout Custom Fields.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "List restriction"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "List page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/checkout_custom_fields.json",
      "method": "/checkoutCustomFieldsJsonPost",
      "httpMethod": "post",
      "tag": "Checkout Custom Fields",
      "description": "Create a new CheckoutCustomField.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "checkout_custom_field",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/checkout_custom_fields/{id}.json",
      "method": "/checkoutCustomFields/{id}JsonDelete",
      "httpMethod": "delete",
      "tag": "Checkout Custom Fields",
      "description": "Delete an existing CheckoutCustomField.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the CheckoutCustomField"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/checkout_custom_fields/{id}.json",
      "method": "/checkoutCustomFields/{id}JsonGet",
      "httpMethod": "get",
      "tag": "Checkout Custom Fields",
      "description": "Retrieve a single CheckoutCustomField.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the CheckoutCustomField"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/checkout_custom_fields/{id}.json",
      "method": "/checkoutCustomFields/{id}JsonPut",
      "httpMethod": "put",
      "tag": "Checkout Custom Fields",
      "description": "Update a CheckoutCustomField.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the CheckoutCustomField"
        },
        {
          "name": "checkout_custom_field",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/countries.json",
      "method": "/countriesJsonGet",
      "httpMethod": "get",
      "tag": "Countries",
      "description": "Retrieve all Countries.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/countries/{country_code}.json",
      "method": "/countries/{countryCode}JsonGet",
      "httpMethod": "get",
      "tag": "Countries",
      "description": "Retrieve a single Country information.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "country_code",
          "schema": "string",
          "required": true,
          "description": "ISO3166 Country Code"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/countries/{country_code}/regions.json",
      "method": "/countries/{countryCode}/regionsJsonGet",
      "httpMethod": "get",
      "tag": "Countries",
      "description": "Retrieve all Regions from a single Country.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "country_code",
          "schema": "string",
          "required": true,
          "description": "ISO3166 Country Code"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/countries/{country_code}/regions/{region_code}.json",
      "method": "/countries/{countryCode}/regions/{regionCode}JsonGet",
      "httpMethod": "get",
      "tag": "Countries",
      "description": "Retrieve a single Region information object.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "country_code",
          "schema": "string",
          "required": true,
          "description": "ISO3166 Country Code"
        },
        {
          "name": "region_code",
          "schema": "string",
          "required": true,
          "description": "Region Code"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/custom_fields.json",
      "method": "/customFieldsJsonGet",
      "httpMethod": "get",
      "tag": "Custom Fields",
      "description": "Retrieve all Store's Custom Fields.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/custom_fields.json",
      "method": "/customFieldsJsonPost",
      "httpMethod": "post",
      "tag": "Custom Fields",
      "description": "Create a new Custom Field.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "custom_field",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/custom_fields/{id}.json",
      "method": "/customFields/{id}JsonDelete",
      "httpMethod": "delete",
      "tag": "Custom Fields",
      "description": "Delete an existing CustomField.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the CustomField"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/custom_fields/{id}.json",
      "method": "/customFields/{id}JsonGet",
      "httpMethod": "get",
      "tag": "Custom Fields",
      "description": "Retrieve a single CustomField.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the CustomField"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/custom_fields/{id}.json",
      "method": "/customFields/{id}JsonPut",
      "httpMethod": "put",
      "tag": "Custom Fields",
      "description": "Update a CustomField.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the CustomField"
        },
        {
          "name": "custom_field",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/custom_fields/{id}/select_options.json",
      "method": "/customFields/{id}/selectOptionsJsonGet",
      "httpMethod": "get",
      "tag": "Custom Field Select Options",
      "description": "Retrieve all Store's Custom Fields.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the CustomField"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/custom_fields/{id}/select_options.json",
      "method": "/customFields/{id}/selectOptionsJsonPost",
      "httpMethod": "post",
      "tag": "Custom Field Select Options",
      "description": "Create a new Custom Field Select Option.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        },
        {
          "name": "custom_field_select_option",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/custom_fields/{id}/select_options/{custom_field_select_option_id}.json",
      "method": "/customFields/{id}/selectOptions/{customFieldSelectOptionId}JsonDelete",
      "httpMethod": "delete",
      "tag": "Custom Fields",
      "description": "Delete an existing CustomFieldSelectOption.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the CustomField"
        },
        {
          "name": "custom_field_select_option_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the CustomFieldSelectOption"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/custom_fields/{id}/select_options/{custom_field_select_option_id}.json",
      "method": "/customFields/{id}/selectOptions/{customFieldSelectOptionId}JsonGet",
      "httpMethod": "get",
      "tag": "Custom Field Select Options",
      "description": "Retrieve a single SelectOption from a CustomField.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the CustomField"
        },
        {
          "name": "custom_field_select_option_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the CustomFieldSelectOption"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/custom_fields/{id}/select_options/{custom_field_select_option_id}.json",
      "method": "/customFields/{id}/selectOptions/{customFieldSelectOptionId}JsonPut",
      "httpMethod": "put",
      "tag": "Custom Field Select Options",
      "description": "Update a SelectOption from a CustomField.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the CustomField"
        },
        {
          "name": "custom_field_select_option_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the CustomFieldSelectOption"
        },
        {
          "name": "custom_field_select_option",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/customer_categories.json",
      "method": "/customerCategoriesJsonGet",
      "httpMethod": "get",
      "tag": "Customer Categories",
      "description": "Retrieve all Customer Categories.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "List restriction"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "List page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/customer_categories.json",
      "method": "/customerCategoriesJsonPost",
      "httpMethod": "post",
      "tag": "Customer Categories",
      "description": "Create a new CustomerCategory.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "category",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/customer_categories/{id}.json",
      "method": "/customerCategories/{id}JsonDelete",
      "httpMethod": "delete",
      "tag": "Customer Categories",
      "description": "Delete an existing CustomerCategory.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the CustomerCategory"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/customer_categories/{id}.json",
      "method": "/customerCategories/{id}JsonGet",
      "httpMethod": "get",
      "tag": "Customer Categories",
      "description": "Retrieve a single CustomerCategory.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the CustomerCategory"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/customer_categories/{id}.json",
      "method": "/customerCategories/{id}JsonPut",
      "httpMethod": "put",
      "tag": "Customer Categories",
      "description": "Update a CustomerCategory.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the CustomerCategory"
        },
        {
          "name": "category",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/customer_categories/{id}/customers.json",
      "method": "/customerCategories/{id}/customersJsonDelete",
      "httpMethod": "delete",
      "tag": "Customer Categories",
      "description": "Delete Customers from an existing CustomerCategory.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the CustomerCategory"
        },
        {
          "name": "customers",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/customer_categories/{id}/customers.json",
      "method": "/customerCategories/{id}/customersJsonGet",
      "httpMethod": "get",
      "tag": "Customer Categories",
      "description": "Retrieves the customers in a CustomerCategory.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the CustomerCategory"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/customer_categories/{id}/customers.json",
      "method": "/customerCategories/{id}/customersJsonPost",
      "httpMethod": "post",
      "tag": "Customer Categories",
      "description": "Adds Customers to a CustomerCategory.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the CustomerCategory"
        },
        {
          "name": "customers",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers.json",
      "method": "/customersJsonGet",
      "httpMethod": "get",
      "tag": "Customers",
      "description": "Retrieve all Customers.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "List restriction"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "List page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers.json",
      "method": "/customersJsonPost",
      "httpMethod": "post",
      "tag": "Customers",
      "description": "Create a new Customer.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "customer",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/count.json",
      "method": "/customers/countJsonGet",
      "httpMethod": "get",
      "tag": "Customers",
      "description": "Count all Customers.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/email/{email}.json",
      "method": "/customers/email/{email}JsonGet",
      "httpMethod": "get",
      "tag": "Customers",
      "description": "Retrieve a single Customer by email.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": "Email of the Customer"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{id}.json",
      "method": "/customers/{id}JsonDelete",
      "httpMethod": "delete",
      "tag": "Customers",
      "description": "Delete an existing Customer.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Customer"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{id}.json",
      "method": "/customers/{id}JsonGet",
      "httpMethod": "get",
      "tag": "Customers",
      "description": "Retrieve a single Customer by id.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Customer"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{id}.json",
      "method": "/customers/{id}JsonPut",
      "httpMethod": "put",
      "tag": "Customers",
      "description": "Update a new Customer.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Customer"
        },
        {
          "name": "customer",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{id}/fields",
      "method": "/customers/{id}/fieldsGet",
      "httpMethod": "get",
      "tag": "Customer Additional Fields",
      "description": "Retrieves the Customer Additional Field of a Customer.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Customer"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{id}/fields",
      "method": "/customers/{id}/fieldsPost",
      "httpMethod": "post",
      "tag": "Customer Additional Fields",
      "description": "Adds Customer Additional Fields to a Customer.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Customer"
        },
        {
          "name": "customer_additional_field",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{id}/fields/{field_id}",
      "method": "/customers/{id}/fields/{fieldId}Delete",
      "httpMethod": "delete",
      "tag": "Customer Additional Fields",
      "description": "Delete a Customer Additional Field.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Customer"
        },
        {
          "name": "field_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Customer Additional Field"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{id}/fields/{field_id}",
      "method": "/customers/{id}/fields/{fieldId}Get",
      "httpMethod": "get",
      "tag": "Customer Additional Fields",
      "description": "Retrieve a single Customer Additional Field.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Customer"
        },
        {
          "name": "field_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Customer Additional Field"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{id}/fields/{field_id}",
      "method": "/customers/{id}/fields/{fieldId}Put",
      "httpMethod": "put",
      "tag": "Customer Additional Fields",
      "description": "Update a Customer Additional Field.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Customer"
        },
        {
          "name": "field_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Customer Additional Field"
        },
        {
          "name": "customer_additional_field",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/fulfillments.json",
      "method": "/fulfillmentsJsonGet",
      "httpMethod": "get",
      "tag": "Fulfillments",
      "description": "Retrieve all Fulfillments.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "List restriction"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "List page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fulfillments/count.json",
      "method": "/fulfillments/countJsonGet",
      "httpMethod": "get",
      "tag": "Fulfillments",
      "description": "Count all Fulfillments.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fulfillments/{id}.json",
      "method": "/fulfillments/{id}JsonGet",
      "httpMethod": "get",
      "tag": "Fulfillments",
      "description": "Retrieve a single Fulfillment.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Fulfillment"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/hooks.json",
      "method": "/hooksJsonGet",
      "httpMethod": "get",
      "tag": "Hooks",
      "description": "Retrieve all Hooks.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "List restriction"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "List page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/hooks.json",
      "method": "/hooksJsonPost",
      "httpMethod": "post",
      "tag": "Hooks",
      "description": "Create a new Hook.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "hook",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/hooks/{id}.json",
      "method": "/hooks/{id}JsonDelete",
      "httpMethod": "delete",
      "tag": "Hooks",
      "description": "Delete an existing Hook.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Hook"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/hooks/{id}.json",
      "method": "/hooks/{id}JsonGet",
      "httpMethod": "get",
      "tag": "Hooks",
      "description": "Retrieve a single Hook.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Hook"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/hooks/{id}.json",
      "method": "/hooks/{id}JsonPut",
      "httpMethod": "put",
      "tag": "Hooks",
      "description": "Update a Hook.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Hook"
        },
        {
          "name": "hook",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/jsapps.json",
      "method": "/jsappsJsonGet",
      "httpMethod": "get",
      "tag": "Apps",
      "description": "Retrieve all the Store's JSApps.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/jsapps.json",
      "method": "/jsappsJsonPost",
      "httpMethod": "post",
      "tag": "Apps",
      "description": "Create a Store JSApp.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "app",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/jsapps/{code}.json",
      "method": "/jsapps/{code}JsonDelete",
      "httpMethod": "delete",
      "tag": "Apps",
      "description": "Delete an existing JSApp.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the App"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/jsapps/{code}.json",
      "method": "/jsapps/{code}JsonGet",
      "httpMethod": "get",
      "tag": "Apps",
      "description": "Retrieve a JSApp.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the App"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/order/{id}/fulfillments.json",
      "method": "/order/{id}/fulfillmentsJsonGet",
      "httpMethod": "get",
      "tag": "Fulfillments",
      "description": "Retrieve the Fulfillments associated with the Order.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Order"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders.json",
      "method": "/ordersJsonGet",
      "httpMethod": "get",
      "tag": "Orders",
      "description": "Retrieve all Orders.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "List restriction"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "List page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders.json",
      "method": "/ordersJsonPost",
      "httpMethod": "post",
      "tag": "Orders",
      "description": "Create a new Order.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "order",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/after/{id}.json",
      "method": "/orders/after/{id}JsonGet",
      "httpMethod": "get",
      "tag": "Orders",
      "description": "Retrieve orders filtered by Order Id.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Order"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/count.json",
      "method": "/orders/countJsonGet",
      "httpMethod": "get",
      "tag": "Orders",
      "description": "Count all Orders.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/status/{status}.json",
      "method": "/orders/status/{status}JsonGet",
      "httpMethod": "get",
      "tag": "Orders",
      "description": "Retrieve orders filtered by status.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "status",
          "schema": "string",
          "required": true,
          "description": "Status of the Order used as filter"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/{id}.json",
      "method": "/orders/{id}JsonGet",
      "httpMethod": "get",
      "tag": "Orders",
      "description": "Retrieve a single Order.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Order"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/{id}.json",
      "method": "/orders/{id}JsonPut",
      "httpMethod": "put",
      "tag": "Orders",
      "description": "Modify an existing Order.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Order"
        },
        {
          "name": "order",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/{id}/history.json",
      "method": "/orders/{id}/historyJsonGet",
      "httpMethod": "get",
      "tag": "Orders",
      "description": "Retrieve all Order History.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Order"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/{id}/history.json",
      "method": "/orders/{id}/historyJsonPost",
      "httpMethod": "post",
      "tag": "Orders",
      "description": "Create a new Order History Entry.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the OrderHistory"
        },
        {
          "name": "order_history",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/pages.json",
      "method": "/pagesJsonGet",
      "httpMethod": "get",
      "tag": "Pages",
      "description": "Retrieve all Pages.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "List restriction"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "List page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/pages.json",
      "method": "/pagesJsonPost",
      "httpMethod": "post",
      "tag": "Pages",
      "description": "Create a new Page.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "page",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/pages/count.json",
      "method": "/pages/countJsonGet",
      "httpMethod": "get",
      "tag": "Pages",
      "description": "Count all Pages.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/pages/{id}.json",
      "method": "/pages/{id}JsonDelete",
      "httpMethod": "delete",
      "tag": "Pages",
      "description": "Delete an existing Page.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/pages/{id}.json",
      "method": "/pages/{id}JsonGet",
      "httpMethod": "get",
      "tag": "Pages",
      "description": "Retrieve a single Page by id.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/pages/{id}.json",
      "method": "/pages/{id}JsonPut",
      "httpMethod": "put",
      "tag": "Pages",
      "description": "Update a Page.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Page"
        },
        {
          "name": "page",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/partners/stores.json",
      "method": "/partners/storesJsonGet",
      "httpMethod": "get",
      "tag": "Partners",
      "description": "Retrieve statistics.",
      "parameters": [
        {
          "name": "partner_code",
          "schema": "string",
          "required": true,
          "description": "Partner code."
        },
        {
          "name": "auth_token",
          "schema": "string",
          "required": true,
          "description": "Partner authentication token."
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "List page"
        },
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": "Statistics start date. Should be in format 'Y-m-d'."
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": "Statistics end date. Should be in format 'Y-m-d'."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/payment_methods.json",
      "method": "/paymentMethodsJsonGet",
      "httpMethod": "get",
      "tag": "Payment Methods",
      "description": "Retrieve all Store's Payment Methods.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/payment_methods/{id}.json",
      "method": "/paymentMethods/{id}JsonGet",
      "httpMethod": "get",
      "tag": "Payment Methods",
      "description": "Retrieve a single Payment Method.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Payment Method"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products.json",
      "method": "/productsJsonGet",
      "httpMethod": "get",
      "tag": "Products",
      "description": "Retrieve all Products.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "List restriction"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "List page"
        },
        {
          "name": "locale",
          "schema": "string",
          "required": false,
          "description": "Locale code of the translation"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/products.json",
      "method": "/productsJsonPost",
      "httpMethod": "post",
      "tag": "Products",
      "description": "Create a new Product.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "locale",
          "schema": "string",
          "required": false,
          "description": "Locale code of the translation"
        },
        {
          "name": "product",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/after/{id}.json",
      "method": "/products/after/{id}JsonGet",
      "httpMethod": "get",
      "tag": "Products",
      "description": "Retrieves Products after the given id.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "locale",
          "schema": "string",
          "required": false,
          "description": "Locale code of the translation"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/category/{category_id}.json",
      "method": "/products/category/{categoryId}JsonGet",
      "httpMethod": "get",
      "tag": "Products",
      "description": "Retrieve Products filtered by category.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "locale",
          "schema": "string",
          "required": false,
          "description": "Locale code of the translation"
        },
        {
          "name": "category_id",
          "schema": "integer",
          "required": true,
          "description": "Category ID of the Product used as filter"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/category/{category_id}/count.json",
      "method": "/products/category/{categoryId}/countJsonGet",
      "httpMethod": "get",
      "tag": "Products",
      "description": "Count Products filtered by category.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "locale",
          "schema": "string",
          "required": false,
          "description": "Locale code of the translation"
        },
        {
          "name": "category_id",
          "schema": "integer",
          "required": true,
          "description": "Category ID of the Product used as filter"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/count.json",
      "method": "/products/countJsonGet",
      "httpMethod": "get",
      "tag": "Products",
      "description": "Count all Products.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/search.json",
      "method": "/products/searchJsonGet",
      "httpMethod": "get",
      "tag": "Products",
      "description": "Retrieve a Product List from a query.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "locale",
          "schema": "string",
          "required": false,
          "description": "Locale code of the translation"
        },
        {
          "name": "query",
          "schema": "string",
          "required": true,
          "description": "Text to query for the Product"
        },
        {
          "name": "fields",
          "schema": "string",
          "required": false,
          "description": "Comma separated values of the fields to query for the Product"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/status/{status}.json",
      "method": "/products/status/{status}JsonGet",
      "httpMethod": "get",
      "tag": "Products",
      "description": "Retrieve Products filtered by status.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "locale",
          "schema": "string",
          "required": false,
          "description": "Locale code of the translation"
        },
        {
          "name": "status",
          "schema": "string",
          "required": true,
          "description": "Status of the Product used as filter"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/status/{status}/count.json",
      "method": "/products/status/{status}/countJsonGet",
      "httpMethod": "get",
      "tag": "Products",
      "description": "Count Products filtered by status.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "locale",
          "schema": "string",
          "required": false,
          "description": "Locale code of the translation"
        },
        {
          "name": "status",
          "schema": "string",
          "required": true,
          "description": "Status of the Product used as filter"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}.json",
      "method": "/products/{id}JsonDelete",
      "httpMethod": "delete",
      "tag": "Products",
      "description": "Delete an existing Product.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}.json",
      "method": "/products/{id}JsonGet",
      "httpMethod": "get",
      "tag": "Products",
      "description": "Retrieve a single Product.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "locale",
          "schema": "string",
          "required": false,
          "description": "Locale code of the translation"
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of the Product"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}.json",
      "method": "/products/{id}JsonPut",
      "httpMethod": "put",
      "tag": "Products",
      "description": "Modify an existing Product.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "locale",
          "schema": "string",
          "required": false,
          "description": "Locale code of the translation"
        },
        {
          "name": "product",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/attachments.json",
      "method": "/products/{id}/attachmentsJsonGet",
      "httpMethod": "get",
      "tag": "Product Attachments",
      "description": "Retrieve all Product Attachments.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of the Product"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/attachments.json",
      "method": "/products/{id}/attachmentsJsonPost",
      "httpMethod": "post",
      "tag": "Product Attachments",
      "description": "Create a new Product Attachment.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "attachment",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/attachments/count.json",
      "method": "/products/{id}/attachments/countJsonGet",
      "httpMethod": "get",
      "tag": "Product Attachments",
      "description": "Count all Product Attachments.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of the Product"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/attachments/{attachment_id}.json",
      "method": "/products/{id}/attachments/{attachmentId}JsonDelete",
      "httpMethod": "delete",
      "tag": "Product Attachments",
      "description": "Delete a Product Attachment.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "attachment_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product Attachment"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/attachments/{attachment_id}.json",
      "method": "/products/{id}/attachments/{attachmentId}JsonGet",
      "httpMethod": "get",
      "tag": "Product Attachments",
      "description": "Retrieve a single Product Attachment.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "attachment_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product Attachment"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/digital_products.json",
      "method": "/products/{id}/digitalProductsJsonGet",
      "httpMethod": "get",
      "tag": "Product DigitalProducts",
      "description": "Retrieve all Product DigitalProducts.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of the Product"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/digital_products.json",
      "method": "/products/{id}/digitalProductsJsonPost",
      "httpMethod": "post",
      "tag": "Product DigitalProducts",
      "description": "Create a new Product DigitalProduct.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "digital_product",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/digital_products/count.json",
      "method": "/products/{id}/digitalProducts/countJsonGet",
      "httpMethod": "get",
      "tag": "Product DigitalProducts",
      "description": "Count all Product DigitalProducts.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of the Product"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/digital_products/{digital_product_id}.json",
      "method": "/products/{id}/digitalProducts/{digitalProductId}JsonDelete",
      "httpMethod": "delete",
      "tag": "Product DigitalProducts",
      "description": "Delete a Product DigitalProduct.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "digital_product_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product DigitalProduct"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/digital_products/{digital_product_id}.json",
      "method": "/products/{id}/digitalProducts/{digitalProductId}JsonGet",
      "httpMethod": "get",
      "tag": "Product DigitalProducts",
      "description": "Retrieve a single Product DigitalProduct.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "digital_product_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product DigitalProduct"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/fields.json",
      "method": "/products/{id}/fieldsJsonGet",
      "httpMethod": "get",
      "tag": "Product Custom Fields",
      "description": "Retrieve all Product Custom Fields",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/fields.json",
      "method": "/products/{id}/fieldsJsonPost",
      "httpMethod": "post",
      "tag": "Product Custom Fields",
      "description": "Add an existing Custom Field to a Product.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "field",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/fields/count.json",
      "method": "/products/{id}/fields/countJsonGet",
      "httpMethod": "get",
      "tag": "Product Custom Fields",
      "description": "Count all Product Custom Fields.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of the Product"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/images.json",
      "method": "/products/{id}/imagesJsonGet",
      "httpMethod": "get",
      "tag": "Product Images",
      "description": "Retrieve all Product Images.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of the Product"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/images.json",
      "method": "/products/{id}/imagesJsonPost",
      "httpMethod": "post",
      "tag": "Product Images",
      "description": "Create a new Product Image.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "image",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/images/count.json",
      "method": "/products/{id}/images/countJsonGet",
      "httpMethod": "get",
      "tag": "Product Images",
      "description": "Count all Product Images.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of the Product"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/images/{image_id}.json",
      "method": "/products/{id}/images/{imageId}JsonDelete",
      "httpMethod": "delete",
      "tag": "Product Images",
      "description": "Delete a Product Image.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "image_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product Image"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/images/{image_id}.json",
      "method": "/products/{id}/images/{imageId}JsonGet",
      "httpMethod": "get",
      "tag": "Product Images",
      "description": "Retrieve a single Product Image.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "image_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product Image"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/options.json",
      "method": "/products/{id}/optionsJsonGet",
      "httpMethod": "get",
      "tag": "Product Options",
      "description": "Retrieve all Product Options.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of the Product"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/options.json",
      "method": "/products/{id}/optionsJsonPost",
      "httpMethod": "post",
      "tag": "Product Options",
      "description": "Create a new Product Option.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "option",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/options/count.json",
      "method": "/products/{id}/options/countJsonGet",
      "httpMethod": "get",
      "tag": "Product Options",
      "description": "Count all Product Options.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of the Product"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/options/{option_id}.json",
      "method": "/products/{id}/options/{optionId}JsonDelete",
      "httpMethod": "delete",
      "tag": "Product Options",
      "description": "Delete a Product Option.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "option_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product Option"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/options/{option_id}.json",
      "method": "/products/{id}/options/{optionId}JsonGet",
      "httpMethod": "get",
      "tag": "Product Options",
      "description": "Retrieve a single Product Option.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "option_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product Option"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/options/{option_id}.json",
      "method": "/products/{id}/options/{optionId}JsonPut",
      "httpMethod": "put",
      "tag": "Product Options",
      "description": "Modify an existing Product Option.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "option_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product Option"
        },
        {
          "name": "option",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/options/{option_id}/values.json",
      "method": "/products/{id}/options/{optionId}/valuesJsonGet",
      "httpMethod": "get",
      "tag": "Product Option Values",
      "description": "Retrieve all Product Option Values.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of the Product"
        },
        {
          "name": "option_id",
          "schema": "integer",
          "required": true,
          "description": "ID of the Product Option"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/options/{option_id}/values.json",
      "method": "/products/{id}/options/{optionId}/valuesJsonPost",
      "httpMethod": "post",
      "tag": "Product Option Values",
      "description": "Create a new Product Option Value.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "option_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product Option"
        },
        {
          "name": "value",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/options/{option_id}/values/count.json",
      "method": "/products/{id}/options/{optionId}/values/countJsonGet",
      "httpMethod": "get",
      "tag": "Product Option Values",
      "description": "Count all Product Option Values.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of the Product"
        },
        {
          "name": "option_id",
          "schema": "integer",
          "required": true,
          "description": "ID of the Product Option"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/options/{option_id}/values/{value_id}.json",
      "method": "/products/{id}/options/{optionId}/values/{valueId}JsonDelete",
      "httpMethod": "delete",
      "tag": "Product Option Values",
      "description": "Delete a Product Option Value.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "option_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product Option"
        },
        {
          "name": "value_id",
          "schema": "integer",
          "required": true,
          "description": "ID of the Product Option Value"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/options/{option_id}/values/{value_id}.json",
      "method": "/products/{id}/options/{optionId}/values/{valueId}JsonGet",
      "httpMethod": "get",
      "tag": "Product Option Values",
      "description": "Retrieve a single Product Option Value.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "option_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product Option"
        },
        {
          "name": "value_id",
          "schema": "integer",
          "required": true,
          "description": "ID of the Product Option Value"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/options/{option_id}/values/{value_id}.json",
      "method": "/products/{id}/options/{optionId}/values/{valueId}JsonPut",
      "httpMethod": "put",
      "tag": "Product Option Values",
      "description": "Modify an existing Product Option Value.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "option_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product Option"
        },
        {
          "name": "value_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product Option Value"
        },
        {
          "name": "value",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/variants.json",
      "method": "/products/{id}/variantsJsonGet",
      "httpMethod": "get",
      "tag": "Product Variants",
      "description": "Retrieve all Product Variants.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of the Product"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/variants.json",
      "method": "/products/{id}/variantsJsonPost",
      "httpMethod": "post",
      "tag": "Product Variants",
      "description": "Create a new Product Variant.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "variant",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/variants/count.json",
      "method": "/products/{id}/variants/countJsonGet",
      "httpMethod": "get",
      "tag": "Product Variants",
      "description": "Count all Product Variants.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of the Product"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/variants/{variant_id}.json",
      "method": "/products/{id}/variants/{variantId}JsonGet",
      "httpMethod": "get",
      "tag": "Product Variants",
      "description": "Retrieve a single Product Variant.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "variant_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product Variant"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/variants/{variant_id}.json",
      "method": "/products/{id}/variants/{variantId}JsonPut",
      "httpMethod": "put",
      "tag": "Product Variants",
      "description": "Modify an existing Product Variant.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product"
        },
        {
          "name": "variant_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product Variant"
        },
        {
          "name": "variant",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{product_id}/fields/{field_id}.json",
      "method": "/products/{productId}/fields/{fieldId}JsonDelete",
      "httpMethod": "delete",
      "tag": "Product Custom Fields",
      "description": "Delete value of Product Custom Field",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "product_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product."
        },
        {
          "name": "field_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Custom Field Value."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{product_id}/fields/{field_id}.json",
      "method": "/products/{productId}/fields/{fieldId}JsonPut",
      "httpMethod": "put",
      "tag": "Product Custom Fields",
      "description": "Update value of Product Custom Field",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "product_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Product."
        },
        {
          "name": "field_id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Custom Field Value."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/promotions.json",
      "method": "/promotionsJsonGet",
      "httpMethod": "get",
      "tag": "Promotions",
      "description": "Retrieve all Promotions.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Promotions' list restriction (default: 50 | max: 200)."
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Promotions' list page (default: 1)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/promotions.json",
      "method": "/promotionsJsonPost",
      "httpMethod": "post",
      "tag": "Promotions",
      "description": "Create a new Promotion.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "promotion",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/promotions/{id}.json",
      "method": "/promotions/{id}JsonDelete",
      "httpMethod": "delete",
      "tag": "Promotions",
      "description": "Delete an existing Promotion.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Promotion"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/promotions/{id}.json",
      "method": "/promotions/{id}JsonGet",
      "httpMethod": "get",
      "tag": "Promotions",
      "description": "Retrieve a single Promotion.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Promotion"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/promotions/{id}.json",
      "method": "/promotions/{id}JsonPut",
      "httpMethod": "put",
      "tag": "Promotions",
      "description": "Update a Promotion.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Promotion"
        },
        {
          "name": "promotion",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping_methods.json",
      "method": "/shippingMethodsJsonGet",
      "httpMethod": "get",
      "tag": "Shipping Methods",
      "description": "Retrieve all Store's Shipping Methods.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping_methods.json",
      "method": "/shippingMethodsJsonPost",
      "httpMethod": "post",
      "tag": "Shipping Methods",
      "description": "Creates a Shipping Method.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "shipping_method",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping_methods/{id}.json",
      "method": "/shippingMethods/{id}JsonDelete",
      "httpMethod": "delete",
      "tag": "Shipping Methods",
      "description": "Delete an existing Shipping Method.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Shipping Method"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping_methods/{id}.json",
      "method": "/shippingMethods/{id}JsonGet",
      "httpMethod": "get",
      "tag": "Shipping Methods",
      "description": "Retrieve a single Shipping Method.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Shipping Method"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping_methods/{id}.json",
      "method": "/shippingMethods/{id}JsonPut",
      "httpMethod": "put",
      "tag": "Shipping Methods",
      "description": "Update a Shipping Method.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Shipping Method"
        },
        {
          "name": "shipping_method",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/store/check_status.json",
      "method": "/store/checkStatusJsonGet",
      "httpMethod": "get",
      "tag": "Partners",
      "description": "Retrive store creation status.",
      "parameters": [
        {
          "name": "partner_code",
          "schema": "string",
          "required": true,
          "description": "Partner code."
        },
        {
          "name": "auth_token",
          "schema": "string",
          "required": true,
          "description": "Partner authentication token."
        },
        {
          "name": "store_code",
          "schema": "string",
          "required": true,
          "description": "Store Code"
        },
        {
          "name": "locale",
          "schema": "string",
          "required": false,
          "description": "ISO 3166-2 code of the language used in the response messages."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/store/create.json",
      "method": "/store/createJsonPost",
      "httpMethod": "post",
      "tag": "Partners",
      "description": "Create a Partnered Store",
      "parameters": [
        {
          "name": "partner_code",
          "schema": "string",
          "required": true,
          "description": "Partner code."
        },
        {
          "name": "auth_token",
          "schema": "string",
          "required": true,
          "description": "Partner authentication token."
        },
        {
          "name": "aff",
          "schema": "string",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "locale",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "plan_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reject_duplicates",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "store_name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/store/info.json",
      "method": "/store/infoJsonGet",
      "httpMethod": "get",
      "tag": "Stores",
      "description": "Retrieve Store Information.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/store/languages.json",
      "method": "/store/languagesJsonGet",
      "httpMethod": "get",
      "tag": "Stores",
      "description": "Retrieve Store Languages.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/taxes.json",
      "method": "/taxesJsonGet",
      "httpMethod": "get",
      "tag": "Taxes",
      "description": "Retrieve all Taxes.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/taxes.json",
      "method": "/taxesJsonPost",
      "httpMethod": "post",
      "tag": "Taxes",
      "description": "Create a new Tax.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "tax",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/taxes/{id}.json",
      "method": "/taxes/{id}JsonGet",
      "httpMethod": "get",
      "tag": "Taxes",
      "description": "Retrieve a single Tax information.",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": "API OAuth login."
        },
        {
          "name": "authtoken",
          "schema": "string",
          "required": true,
          "description": "API OAuth token."
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of the Tax"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.jumpseller.com/v1",
  "apiDescription": "# Endpoint Structure\n\nAll URLs are in the format: \n\n```text\nhttps://api.jumpseller.com/v1/path.json?login=XXXXXX&authtoken=storetoken  \n```\n\nThe path is prefixed by the API version and the URL takes as parameters the login (your store specific API login) and your authentication token.\n<br/><br/>\n***\n\n# Version\n\nThe current version of the API is **v1**.  \nIf we change the API in backward-incompatible ways, we'll increase the version number and maintain stable support for the old urls.\n<br/><br/>\n***\n\n# Authentication\n\nThe API uses a token-based authentication with a combination of a login key and an auth token. **Both parameters can be found on the left sidebar of the Account section, accessed from the main menu of your Admin Panel**. The auth token of the user can be reset on the same page.\n\n![Store Login](/images/support/api/apilogin.png)\n\nThe auth token is a **32 characters** string.\n\nIf you are developing a Jumpseller App, the authentication should be done using [OAuth-2](/support/oauth-2). Please read the article [Build an App](/support/apps) for more information.\n<br/><br/>\n***\n\n# Curl Examples\n\nTo request all the products at your store, you would append the products index path to the base url to create an URL with the format:  \n\n```text\nhttps://api.jumpseller.com/v1/products.json?login=XXXXXX&authtoken=XXXXX\n```\n\nIn curl, you can invoque that URL with:  \n\n```text\ncurl -X GET \"https://api.jumpseller.com/v1/products.json?login=XXXXXX&authtoken=XXXXX\"\n```\n\nTo create a product, you will include the JSON data and specify the MIME Type:  \n\n```text\ncurl -X POST -d '{ \"product\" : {\"name\": \"My new Product!\", \"price\": 100} }' \"https://api.jumpseller.com/v1/products.json?login=XXXXXX&authtoken=XXXXX\" -H \"Content-Type:application/json\"\n```\n\nand to update the product identified with 123:  \n\n```text\ncurl -X PUT -d '{ \"product\" : {\"name\": \"My updated Product!\", \"price\": 99} }' \"https://api.jumpseller.com/v1/products/123.json?login=XXXXXX&authtoken=XXXXX\" -H \"Content-Type:application/json\"\n```\n\nor delete it:  \n\n```text\ncurl -X DELETE \"https://api.jumpseller.com/v1/products/123.json?login=XXXXXX&authtoken=XXXXX\" -H \"Content-Type:application/json\"\n```\n<br/><br/>\n***\n\n# PHP Examples\n\nCreate a new Product (POST method)\n\n```php\n$url = 'https://api.jumpseller.com/v1/products.json?login=XXXXX&authtoken=XXXXX;\n$ch = curl_init($url);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\ncurl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: application/json'));\n\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"POST\"); //post method\ncurl_setopt($ch, CURLOPT_POSTFIELDS, '{ \"product\" : {\"name\": \"My updated Product!\", \"price\": 99} }');\n\n$result = curl_exec($ch);\nprint_r($result);\ncurl_close($ch);\n```\n<br/><br/>\n***\n\n# Plain JSON only. No XML.\n\n* We only support JSON for data serialization.\n* Our node format has no root element.  \n* We use snake_case to describe attribute keys (like \"created_at\").  \n* All empty value are replaced with **null** strings.\n* All API URLs end in .json to indicate that they accept and return JSON.\n* POST and PUT methods require you to explicitly state the MIME type of your request's body content as **\"application/json\"**.\n<br/><br/>\n***\n\n# Rate Limit\nYou can perform a maximum of:\n\n+ 240 (two hundred forty) requests per minute and\n+ 8 (eight) requests per second \n\nIf you exceed this limit, you'll get a 403 Forbidden (Rate Limit Exceeded) response for subsequent requests.  \n\nThe rate limits apply by IP address and by store. This means that multiple requests on different stores are not counted towards the same rate limit.\n\nThis limits are necessary to ensure resources are correctly used. Your application should be aware of this limits and retry any unsuccessful request, check the following Ruby stub:\n\n```ruby\ntries = 0; max_tries = 3;\nbegin\n  HTTParty.send(method, uri) # perform an API call.\n  sleep 0.5\n  tries += 1\nrescue\n  unless tries >= max_tries\n    sleep 1.0 # wait the necessary time before retrying the call again.\n    retry\n  end\nend\n```\n\nFinally, you can review the Response Headers of each request:\n\n```text\nJumpseller-PerMinuteRateLimit-Limit: 60  \nJumpseller-PerMinuteRateLimit-Remaining: 59 # requests available on the per-second interval  \nJumpseller-PerSecondRateLimit-Limit: 2  \nJumpseller-PerSecondRateLimit-Remaining: 1 # requests available on the per-second interval\n``` \n\nto better model your application requests intervals.\n\nIn the event of getting your IP banned, the Response Header `Jumpseller-BannedByRateLimit-Reset` informs you the time when will your ban be reseted.\n<br/><br/>\n***\n\n# Pagination\n\nBy default we will return 50 objects (products, orders, etc) per page. There is a maximum of 100, using a query string `&limit=100`.\nIf the result set gets paginated it is your responsibility to check the next page for more objects -- you do this by using query strings `&page=2`, `&page=3` and so on.\n\n```text\nhttps://api.jumpseller.com/v1/products.json?login=XXXXXX&authtoken=XXXXX&page=3&limit=100\n```\n<br/><br/>\n***\n\n# More\n* [Jumpseller API wrapper](https://gitlab.com/jumpseller-api/ruby) provides a public Ruby abstraction over our API;\n* [Apps Page](/apps) showcases external integrations with Jumpseller done by technical experts;\n* [Imgbb API](https://api.imgbb.com/) provides an easy way to upload and temporaly host for images and files.\n<br/><br/>\n***\n<br/><br/>\n",
  "apiTitle": "Jumpseller API",
  "endpoints": 82,
  "sdkMethods": 142,
  "schemas": 148,
  "parameters": 497,
  "difficultyScore": 340.25,
  "difficulty": "Hard"
}