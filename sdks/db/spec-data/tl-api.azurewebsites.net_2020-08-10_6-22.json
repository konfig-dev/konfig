{
  "providerName": "tl-api.azurewebsites.net",
  "openApiRaw": "https://tl-api.azurewebsites.net/swagger/default/swagger.json",
  "securitySchemes": {
    "apikey": {
      "in": "header",
      "name": "Ocp-Apim-Subscription-Key",
      "type": "apiKey"
    },
    "bearer": {
      "description": "auth0 authentication",
      "flows": {
        "authorizationCode": {
          "authorizationUrl": "https://tldev.eu.auth0.com/authorize",
          "scopes": {
            "read:tl_articles": "read:tl_articles",
            "read:tl_packages": "read:tl_packages"
          },
          "tokenUrl": "https://tldev.eu.auth0.com/oauth/token"
        }
      },
      "type": "oauth2"
    }
  },
  "homepage": "tl-api.azurewebsites.net",
  "apiVersion": "2020-08-10_6-22",
  "methods": [
    {
      "url": "/api/Article",
      "method": "articleDelete",
      "httpMethod": "delete",
      "tag": "Article",
      "typeScriptTag": "article",
      "description": "Delete article from the system\n            ",
      "parameters": [
        {
          "name": "articleId",
          "schema": "integer",
          "description": "indentity number(primary key) for article object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "404",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Article",
      "method": "articlePost",
      "httpMethod": "post",
      "tag": "Article",
      "typeScriptTag": "article",
      "description": "Add new article\n            ",
      "parameters": [
        {
          "name": "activeStatus",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "applyForAllGyms",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "articleId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "availableGyms",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "availableQty",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "barcode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdUser",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "cronExpression",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "discount",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "employeeDiscount",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "employeePrice",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "gymArticles",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "isAddOn",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isInventoryItem",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isObsolete",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "measureUnit",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "modifiedDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modifiedUser",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "number",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "price",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "reorderLevel",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "revenueAccountId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "sellingPrice",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "vat",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "vatApplicable",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Article",
      "method": "articlePut",
      "httpMethod": "put",
      "tag": "Article",
      "typeScriptTag": "article",
      "description": "update existing article\n            ",
      "parameters": [
        {
          "name": "activeStatus",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "applyForAllGyms",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "articleId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "availableGyms",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "availableQty",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "barcode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdUser",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "cronExpression",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "discount",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "employeeDiscount",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "employeePrice",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "gymArticles",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "isAddOn",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isInventoryItem",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isObsolete",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "measureUnit",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "modifiedDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modifiedUser",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "number",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "price",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "reorderLevel",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "revenueAccountId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "sellingPrice",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "vat",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "vatApplicable",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Article/ArticleGymDetails",
      "method": "articleUpdateArticleGymDetails",
      "httpMethod": "put",
      "tag": "Article",
      "typeScriptTag": "article",
      "description": "Add article details that associate with a Gym\n            ",
      "parameters": [],
      "responses": [
        {
          "statusCode": "202",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Article/GetAddons",
      "method": "articleGetAddons",
      "httpMethod": "get",
      "tag": "Article",
      "typeScriptTag": "article",
      "description": "",
      "parameters": [
        {
          "name": "searchText",
          "schema": "string",
          "description": "Search text - will be search by the name"
        },
        {
          "name": "gymIds",
          "schema": "string",
          "description": "Comma separated gymIds deafult \"-1\" for all gyms"
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "404",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Article/GymArticle/{articleId}/{gymId}",
      "method": "articleGymArticleDetails",
      "httpMethod": "get",
      "tag": "Article",
      "typeScriptTag": "article",
      "description": "Get Gym specific properties for article\n            ",
      "parameters": [
        {
          "name": "articleId",
          "schema": "integer",
          "required": true,
          "description": "indentity number(primary key) for article object"
        },
        {
          "name": "gymId",
          "schema": "integer",
          "required": true,
          "description": "indentity number(primary key) for gym object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The GymArticleDetailsDTO Class.\nContains fields of GymArticleDetails DTO in application.\n            "
        },
        {
          "statusCode": "404",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Article/MeasureUnit",
      "method": "articleAddMeasureUnit",
      "httpMethod": "post",
      "tag": "Article",
      "typeScriptTag": "article",
      "description": "Add measure unit",
      "parameters": [],
      "responses": [
        {
          "statusCode": "202",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Article/MeasureUnits",
      "method": "articleGetMeasureUnits",
      "httpMethod": "get",
      "tag": "Article",
      "typeScriptTag": "article",
      "description": "Get mesure units",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": "type of the measure unit (all, item, service)"
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Article/RevenueAccounts",
      "method": "articleGetRevenueAccounts",
      "httpMethod": "get",
      "tag": "Article",
      "typeScriptTag": "article",
      "description": "Get Revenue Accounts ",
      "parameters": [],
      "responses": [
        {
          "statusCode": "202",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Article/Search",
      "method": "articleSearch",
      "httpMethod": "get",
      "tag": "Article",
      "typeScriptTag": "article",
      "description": "Search articles\nIt will only return basic information of article\n            ",
      "parameters": [
        {
          "name": "searchText",
          "schema": "string",
          "description": "part of article name"
        },
        {
          "name": "gymId",
          "schema": "integer",
          "description": "-1 for all gyms "
        },
        {
          "name": "type",
          "schema": "string",
          "description": "filter article type. default is 'all'"
        },
        {
          "name": "orderBy",
          "schema": "string",
          "description": "order by column.!-- invalid column will give internal server error"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "number of recode in result and default is 100. use negative numbers to order by desc"
        },
        {
          "name": "offset",
          "schema": "integer",
          "description": "number of recodes to skip"
        },
        {
          "name": "activeStatus",
          "schema": "integer",
          "description": "Active Status 1 : Active, 2: Inactive, 3: All, Default : 1"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "404",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Article/UpdateStatus",
      "method": "articleUpdateStatus",
      "httpMethod": "put",
      "tag": "Article",
      "typeScriptTag": "article",
      "description": "Deactivate existing article ",
      "parameters": [
        {
          "name": "articleId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "status",
          "schema": "integer",
          "description": "1 : activate , 2 deactivate"
        },
        {
          "name": "userName",
          "schema": "string",
          "description": "Updating user"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "404",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Article/{articleID}",
      "method": "articleGet",
      "httpMethod": "get",
      "tag": "Article",
      "typeScriptTag": "article",
      "description": "Get article details\nThis will return all properties related to article entity\n            ",
      "parameters": [
        {
          "name": "articleId",
          "schema": "integer",
          "required": true,
          "description": "indentity number (primary key) for article object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Auth/login",
      "method": "authLogin",
      "httpMethod": "post",
      "tag": "Auth",
      "typeScriptTag": "auth",
      "description": "Authenticate and provide token for autherizations.\n            ",
      "parameters": [
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "remember",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Gym/{gymID}",
      "method": "gymGet",
      "httpMethod": "get",
      "tag": "Gym",
      "typeScriptTag": "gym",
      "description": "Get gym details\nThis will return all properties related to gym entity\n            ",
      "parameters": [
        {
          "name": "gymId",
          "schema": "integer",
          "required": true,
          "description": "indentity number (primary key) for gym object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Membership",
      "method": "membershipGet",
      "httpMethod": "get",
      "tag": "Membership",
      "typeScriptTag": "membership",
      "description": "Get all of the members details\nThis will return all properties related to member entity\n            ",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Membership",
      "method": "membershipPost",
      "httpMethod": "post",
      "tag": "Membership",
      "typeScriptTag": "membership",
      "description": "Add new Member\n            ",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Package",
      "method": "packageDelete",
      "httpMethod": "delete",
      "tag": "Package",
      "typeScriptTag": "package",
      "description": "Delete existing package\n            ",
      "parameters": [
        {
          "name": "packageId",
          "schema": "integer",
          "description": "primary key of package entity"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "400",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "404",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Package",
      "method": "packageGet",
      "httpMethod": "get",
      "tag": "Package",
      "typeScriptTag": "package",
      "description": "Get package details by packageId\n            ",
      "parameters": [
        {
          "name": "packageId",
          "schema": "integer",
          "description": "primary key of package entity"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "404",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Package",
      "method": "packagePost",
      "httpMethod": "post",
      "tag": "Package",
      "typeScriptTag": "package",
      "description": "Insert new package into the system\n            ",
      "parameters": [
        {
          "name": "addOns",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "addonFee",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "applyForAllGyms",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "availableGyms",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "bindingPeriod",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "createdDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdUser",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "endDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "expireInMonths",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "features",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "freeMonths",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "instructionsToGymUsers",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "instructionsToWebUsers",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "isActive",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isAtg",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isAutoRenew",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isFirstMonthFree",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isRegistrationFee",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isRestAmount",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isShownInMobile",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isSponsorPackage",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "maximumGiveAwayRestAmount",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "memberCanAddAddOns",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "memberCanLeaveWithinFreePeriod",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "memberCanRemoveAddOns",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "modifiedDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modifiedUser",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "monthlyFee",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "nextPackageNumber",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "numberOfInstallments",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "numberOfVisits",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "packageId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "packageName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "packageNumber",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "packageType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "perVisitPrice",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "registrationFee",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "serviceFee",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "shownInWeb",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "startDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "totalPrice",
          "schema": "number",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Package",
      "method": "packagePut",
      "httpMethod": "put",
      "tag": "Package",
      "typeScriptTag": "package",
      "description": "Update existing package by its ID\n            ",
      "parameters": [
        {
          "name": "addOns",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "addonFee",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "applyForAllGyms",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "availableGyms",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "bindingPeriod",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "createdDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdUser",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "endDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "expireInMonths",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "features",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "freeMonths",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "instructionsToGymUsers",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "instructionsToWebUsers",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "isActive",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isAtg",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isAutoRenew",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isFirstMonthFree",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isRegistrationFee",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isRestAmount",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isShownInMobile",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isSponsorPackage",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "maximumGiveAwayRestAmount",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "memberCanAddAddOns",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "memberCanLeaveWithinFreePeriod",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "memberCanRemoveAddOns",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "modifiedDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modifiedUser",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "monthlyFee",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "nextPackageNumber",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "numberOfInstallments",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "numberOfVisits",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "packageId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "packageName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "packageNumber",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "packageType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "perVisitPrice",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "registrationFee",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "serviceFee",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "shownInWeb",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "startDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "totalPrice",
          "schema": "number",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Package/Search",
      "method": "packageSearch",
      "httpMethod": "get",
      "tag": "Package",
      "typeScriptTag": "package",
      "description": "Search packages\n            ",
      "parameters": [
        {
          "name": "searchText",
          "schema": "string",
          "description": "part of package name"
        },
        {
          "name": "gymId",
          "schema": "integer",
          "description": "primary key of TL gym entity"
        },
        {
          "name": "type",
          "schema": "string",
          "description": "filter package type.!-- default is 'all'"
        },
        {
          "name": "orderBy",
          "schema": "string",
          "description": "order by column.!-- invalid column will give internal server error"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "number of recode in result and default is 100. use negative numbers to order by desc"
        },
        {
          "name": "offset",
          "schema": "integer",
          "description": "number of recodes to skip"
        },
        {
          "name": "activeStatus",
          "schema": "integer",
          "description": "active status active : 1, inactive : 2, all 3, deafult : 1"
        },
        {
          "name": "categoryId",
          "schema": "integer",
          "description": "Packge Category Id"
        },
        {
          "name": "startpPrice",
          "schema": "number",
          "description": "Start price of the price Range"
        },
        {
          "name": "endPrice",
          "schema": "number",
          "description": "End Price of the price Range"
        },
        {
          "name": "requestSource",
          "schema": "integer",
          "description": "1 : MRM, 2 : Mobile "
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Package/UpdateStatus",
      "method": "packageUpdateStatus",
      "httpMethod": "put",
      "tag": "Package",
      "typeScriptTag": "package",
      "description": "Status update of existing package ",
      "parameters": [
        {
          "name": "packageId",
          "schema": "integer",
          "description": "package Id"
        },
        {
          "name": "status",
          "schema": "integer",
          "description": "status : 1 activate, 2 : deactivate"
        },
        {
          "name": "userName",
          "schema": "string",
          "description": "Status updated User"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "400",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "404",
          "description": "The DefaultResponseDTO Class.\nContains fields of DefaultResponse DTO in application.\n            "
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Status",
      "method": "statusGet",
      "httpMethod": "get",
      "tag": "Status",
      "typeScriptTag": "status",
      "description": "Get the current status of message",
      "parameters": [
        {
          "name": "messageId",
          "schema": "string",
          "description": "respose of POST request"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Test",
      "method": "testGet",
      "httpMethod": "get",
      "tag": "Test",
      "typeScriptTag": "test",
      "description": "Get the all Test objects.\n            ",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "The TestDTO Class.\nContains relevant fields of Test DTO by masking actual Test entity's fields in application.\n            "
        }
      ]
    },
    {
      "url": "/api/User",
      "method": "userGet",
      "httpMethod": "get",
      "tag": "User",
      "typeScriptTag": "user",
      "description": "Get all Users detail\nThis will return all properties related to User entity\n            ",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "The UserDTO Class.\nContains relevant fields of User DTO by masking actual User entity's fields in application.\n            "
        }
      ]
    },
    {
      "url": "/api/User/registerUser",
      "method": "userRegisterUser",
      "httpMethod": "post",
      "tag": "User",
      "typeScriptTag": "user",
      "description": "Register a new User\n            ",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "description": "Indentity number(primary key) for user object. Generated in DB table when inserting a record.\n            "
        },
        {
          "name": "accountNumber",
          "schema": "string",
          "description": "Account number of the user.It can be any stakeholder of the application.even can be a gym.\n            "
        },
        {
          "name": "gymNumber",
          "schema": "string",
          "description": "If this user is a gym, then the gym number.\n            "
        },
        {
          "name": "externalEntityNumber",
          "schema": "string",
          "description": "Entity number that make a relationship with BOX API DB.\n            "
        },
        {
          "name": "name",
          "schema": "string",
          "description": "Name of the user.\n            "
        },
        {
          "name": "number",
          "schema": "string",
          "description": "Unique number maintain by application to idenify user.\n            "
        },
        {
          "name": "introduceBy",
          "schema": "integer",
          "description": "If Someone introduced this user to the system, then that user's UserId.\n            "
        },
        {
          "name": "guardian",
          "schema": "integer",
          "description": "Gaurdian of the this user if he/she is under 18 years old.\n            "
        },
        {
          "name": "typeId",
          "schema": "integer",
          "description": "Type of the user.\n            "
        }
      ],
      "responses": []
    },
    {
      "url": "/api/User/updateuser",
      "method": "userUpdateUser",
      "httpMethod": "put",
      "tag": "User",
      "typeScriptTag": "user",
      "description": "Update an exsisting User\n            ",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "description": "Indentity number(primary key) for user object. Generated in DB table when inserting a record.\n            "
        },
        {
          "name": "accountNumber",
          "schema": "string",
          "description": "Account number of the user.It can be any stakeholder of the application.even can be a gym.\n            "
        },
        {
          "name": "gymNumber",
          "schema": "string",
          "description": "If this user is a gym, then the gym number.\n            "
        },
        {
          "name": "externalEntityNumber",
          "schema": "string",
          "description": "Entity number that make a relationship with BOX API DB.\n            "
        },
        {
          "name": "name",
          "schema": "string",
          "description": "Name of the user.\n            "
        },
        {
          "name": "number",
          "schema": "string",
          "description": "Unique number maintain by application to idenify user.\n            "
        },
        {
          "name": "introduceBy",
          "schema": "integer",
          "description": "If Someone introduced this user to the system, then that user's UserId.\n            "
        },
        {
          "name": "guardian",
          "schema": "integer",
          "description": "Gaurdian of the this user if he/she is under 18 years old.\n            "
        },
        {
          "name": "typeId",
          "schema": "integer",
          "description": "Type of the user.\n            "
        }
      ],
      "responses": []
    }
  ],
  "apiBaseUrl": "https://tl-api.azurewebsites.net",
  "apiDescription": "Web API for TL mobile and web app",
  "apiTitle": "API",
  "endpoints": 21,
  "sdkMethods": 27,
  "schemas": 29,
  "parameters": 206,
  "contactUrl": "https://unicorn-solutions.com",
  "contactEmail": "support@unicorn-solutions.com",
  "difficultyScore": 93,
  "difficulty": "Medium"
}