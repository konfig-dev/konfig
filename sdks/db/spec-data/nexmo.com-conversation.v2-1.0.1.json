{
  "providerName": "nexmo.com",
  "openApiRaw": "https://raw.githubusercontent.com/nexmo/api-specification/master/definitions/conversation.v2.yml",
  "securitySchemes": {},
  "homepage": "nexmo.com",
  "serviceName": "conversation.v2",
  "apiVersion": "1.0.1",
  "methods": [
    {
      "url": "/conversations",
      "method": "getConversations",
      "httpMethod": "get",
      "tag": "conversation",
      "description": "List Conversations",
      "parameters": [
        {
          "name": "page_size",
          "schema": "integer",
          "required": false,
          "description": "The number of results returned per page.   The default value is `10`. The maximum value is `100`."
        },
        {
          "name": "order",
          "schema": "string",
          "required": false,
          "description": "Show the most (`desc`) / least (`asc`) recently created entries first"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "The cursor to start returning results from.\n\nYou are not expected to provide this manually, but to follow the url provided in `_links.next.href` in the response which contains a `cursor` value\n"
        },
        {
          "name": "date_start",
          "schema": "string",
          "required": false,
          "description": "Search for conversations created after this ISO8601 date"
        },
        {
          "name": "date_end",
          "schema": "string",
          "required": false,
          "description": "Search for conversations created before this ISO8601 date"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/conversations/{conversation_id}/events",
      "method": "getEvents",
      "httpMethod": "get",
      "tag": "event",
      "description": "List Events",
      "parameters": [
        {
          "name": "conversation_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the conversation"
        },
        {
          "name": "page_size",
          "schema": "integer",
          "required": false,
          "description": "The number of results returned per page.   The default value is `10`. The maximum value is `100`."
        },
        {
          "name": "order",
          "schema": "string",
          "required": false,
          "description": "Show the most (`desc`) / least (`asc`) recently created entries first"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "The cursor to start returning results from.\n\nYou are not expected to provide this manually, but to follow the url provided in `_links.next.href` in the response which contains a `cursor` value\n"
        },
        {
          "name": "start_id",
          "schema": "string",
          "required": false,
          "description": "The ID to start returning events at"
        },
        {
          "name": "end_id",
          "schema": "string",
          "required": false,
          "description": "The ID to end returning events at"
        },
        {
          "name": "event_type",
          "schema": "string",
          "required": false,
          "description": "The type of event to search for. Does not currently support custom events"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/conversations/{conversation_id}/members",
      "method": "getMembers",
      "httpMethod": "get",
      "tag": "member",
      "description": "List Members",
      "parameters": [
        {
          "name": "conversation_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the conversation"
        },
        {
          "name": "page_size",
          "schema": "integer",
          "required": false,
          "description": "The number of results returned per page.   The default value is `10`. The maximum value is `100`."
        },
        {
          "name": "order",
          "schema": "string",
          "required": false,
          "description": "Show the most (`desc`) / least (`asc`) recently created entries first"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "The cursor to start returning results from.\n\nYou are not expected to provide this manually, but to follow the url provided in `_links.next.href` in the response which contains a `cursor` value\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users",
      "method": "getUsers",
      "httpMethod": "get",
      "description": "List Users",
      "parameters": [
        {
          "name": "page_size",
          "schema": "integer",
          "required": false,
          "description": "The number of results returned per page.   The default value is `10`. The maximum value is `100`."
        },
        {
          "name": "order",
          "schema": "string",
          "required": false,
          "description": "Show the most (`desc`) / least (`asc`) recently created entries first"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "The cursor to start returning results from.\n\nYou are not expected to provide this manually, but to follow the url provided in `_links.next.href` in the response which contains a `cursor` value\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.nexmo.com/v0.2",
  "apiDescription": "The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.",
  "apiTitle": "Conversation API",
  "endpoints": 4,
  "sdkMethods": 4,
  "schemas": 17,
  "parameters": 19,
  "contactUrl": "https://developer.nexmo.com/",
  "contactEmail": "devrel@vonage.com",
  "difficultyScore": 17.25,
  "difficulty": "Easy"
}