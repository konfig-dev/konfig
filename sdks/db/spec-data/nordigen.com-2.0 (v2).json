{
  "providerName": "nordigen.com",
  "openApiRaw": "https://ob.nordigen.com/api/swagger.json",
  "homepage": "nordigen.com",
  "apiVersion": "2.0 (v2)",
  "methods": [
    {
      "url": "/api/v2/accounts/premium/{id}/transactions/",
      "method": "retrieveAccountTransactionsV2",
      "httpMethod": "get",
      "tag": "premium",
      "description": "Access account premium transactions.",
      "parameters": [
        {
          "name": "country",
          "schema": "string",
          "description": "ISO 3166 two-character country code"
        },
        {
          "name": "date_from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "date_to",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "400",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "404",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "409",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "429",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "500",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "503",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/accounts/{id}/",
      "method": "retrieveAccountMetadata",
      "httpMethod": "get",
      "tag": "accounts",
      "description": "Access account metadata.\n\nInformation about the account record, such as the processing status and IBAN.\n\nAccount status is recalculated based on the error count in the latest req.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The representation of a bank account."
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "404",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "429",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/accounts/{id}/balances/",
      "method": "retrieveAccountBalancesV2",
      "httpMethod": "get",
      "tag": "accounts",
      "description": "Access account balances.\n\nBalances will be returned in Berlin Group PSD2 format.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "400",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "404",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "409",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "429",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "500",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "503",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/accounts/{id}/details/",
      "method": "retrieveAccountDetailsV2",
      "httpMethod": "get",
      "tag": "accounts",
      "description": "Access account details.\n\nAccount details will be returned in Berlin Group PSD2 format.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "400",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "404",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "409",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "429",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "500",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "503",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/accounts/{id}/transactions/",
      "method": "retrieveAccountTransactionsV22",
      "httpMethod": "get",
      "tag": "accounts",
      "description": "Access account transactions.\n\nTransactions will be returned in Berlin Group PSD2 format.",
      "parameters": [
        {
          "name": "date_from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "date_to",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "400",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "404",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "409",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "429",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "500",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "503",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/agreements/enduser/",
      "method": "retrieveAllEuAsForAnEndUserV2",
      "httpMethod": "get",
      "tag": "agreements",
      "description": "API endpoints related to end-user agreements.",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The initial index from which to return the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "404",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "429",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/agreements/enduser/",
      "method": "createEuaV2",
      "httpMethod": "post",
      "tag": "agreements",
      "description": "API endpoints related to end-user agreements.",
      "parameters": [
        {
          "name": "access_scope",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "access_valid_for_days",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "institution_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "max_historical_days",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Represents an end-user agreement."
        },
        {
          "statusCode": "400",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "429",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/agreements/enduser/{id}/",
      "method": "deleteEuaByIdV2",
      "httpMethod": "delete",
      "tag": "agreements",
      "description": "Delete an end user agreement",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "A UUID string identifying this end user agreement."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "404",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "429",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/agreements/enduser/{id}/",
      "method": "retrieveEuaByIdV2",
      "httpMethod": "get",
      "tag": "agreements",
      "description": "Retrieve end user agreement by ID",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "A UUID string identifying this end user agreement."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents an end-user agreement."
        },
        {
          "statusCode": "400",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "404",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "429",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/agreements/enduser/{id}/accept/",
      "method": "acceptEua",
      "httpMethod": "put",
      "tag": "agreements",
      "description": "Accept an end-user agreement via the API",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "A UUID string identifying this end user agreement."
        },
        {
          "name": "ip_address",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "user_agent",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents an end-user agreement."
        },
        {
          "statusCode": "400",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "404",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "405",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "429",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/institutions/",
      "method": "retrieveAllSupportedInstitutionsInAGivenCountry",
      "httpMethod": "get",
      "tag": "institutions",
      "description": "List all available institutions",
      "parameters": [
        {
          "name": "country",
          "schema": "string",
          "description": "ISO 3166 two-character country code"
        },
        {
          "name": "payments_enabled",
          "schema": "string",
          "description": "Boolean value, indicating if payments are enabled"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "404",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "429",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/institutions/{id}/",
      "method": "retrieveInstitution",
      "httpMethod": "get",
      "tag": "institutions",
      "description": "Get details about a specific Institution",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "IntegrationSerializer for Retrieve endpoint."
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "404",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "429",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/payments/",
      "method": "listPayments",
      "httpMethod": "get",
      "tag": "payments",
      "description": "Retrieve all payments belonging to the company",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The initial index from which to return the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/payments/",
      "method": "createPayment",
      "httpMethod": "post",
      "tag": "payments",
      "description": "Create payment",
      "parameters": [
        {
          "name": "creditor_account",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "creditor_object",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "custom_payment_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "debtor_account",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "institution_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "instructed_amount",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "payment_product",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "periodic_payment",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "redirect",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "requested_execution_date",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "submit_payment",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "PaymentWriteSerializer."
        },
        {
          "statusCode": "400",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/payments/account/",
      "method": "retrieveAllPaymentCreditorAccounts",
      "httpMethod": "get",
      "tag": "payments",
      "description": "Retrieve all payment creditor accounts",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/payments/creditors/",
      "method": "paymentsCreditorsList",
      "httpMethod": "get",
      "tag": "payments",
      "description": "API endpoints related to creditor accounts.",
      "parameters": [
        {
          "name": "account",
          "schema": "string",
          "description": ""
        },
        {
          "name": "address_country",
          "schema": "string",
          "description": ""
        },
        {
          "name": "agent",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The initial index from which to return the results."
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/payments/creditors/",
      "method": "paymentsCreditorsCreate",
      "httpMethod": "post",
      "tag": "payments",
      "description": "API endpoints related to creditor accounts.",
      "parameters": [
        {
          "name": "account",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "address_country",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "address_street",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "agent",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "agent_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "institution_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "post_code",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "undefined",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Creditor account write serializer."
        }
      ]
    },
    {
      "url": "/api/v2/payments/creditors/{id}/",
      "method": "paymentsCreditorsDestroy",
      "httpMethod": "delete",
      "tag": "payments",
      "description": "API endpoints related to creditor accounts.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v2/payments/creditors/{id}/",
      "method": "paymentsCreditorsRetrieve",
      "httpMethod": "get",
      "tag": "payments",
      "description": "API endpoints related to creditor accounts.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Creditor account read serializer."
        }
      ]
    },
    {
      "url": "/api/v2/payments/fields/{institution_id}/",
      "method": "listMinimumRequiredFieldsForInstitution",
      "httpMethod": "get",
      "tag": "payments",
      "description": "List minimum required fields for institution",
      "parameters": [
        {
          "name": "institution_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "400",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/payments/{id}/",
      "method": "deletePeriodicPayment",
      "httpMethod": "delete",
      "tag": "payments",
      "description": "Delete periodic payment",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "400",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "404",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "409",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/payments/{id}/",
      "method": "retrievePayment",
      "httpMethod": "get",
      "tag": "payments",
      "description": "Retrieve payment",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "PaymentReadSerializer."
        },
        {
          "statusCode": "400",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "404",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/payments/{id}/submit/",
      "method": "paymentsSubmitCreate",
      "httpMethod": "post",
      "tag": "payments",
      "description": "Initiate the payment on bank's side.\n\nComplete the payment and return payment details as a response.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "creditor_account",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "creditor_object",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "custom_payment_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "debtor_account",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "institution_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "instructed_amount",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "payment_product",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "redirect",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "PaymentReadSerializer."
        }
      ]
    },
    {
      "url": "/api/v2/requisitions/",
      "method": "retrieveAllRequisitions",
      "httpMethod": "get",
      "tag": "requisitions",
      "description": "Retrieve all requisitions belonging to the company",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The initial index from which to return the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "404",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "429",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/requisitions/",
      "method": "requisitionCreated",
      "httpMethod": "post",
      "tag": "requisitions",
      "description": "Create a new requisition",
      "parameters": [
        {
          "name": "account_selection",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "agreement",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "institution_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "redirect",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "redirect_immediate",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ssn",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "user_language",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Create requisition."
        },
        {
          "statusCode": "400",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "404",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "429",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/requisitions/{id}/",
      "method": "deleteRequisitionByIdV2",
      "httpMethod": "delete",
      "tag": "requisitions",
      "description": "Delete requisition and its end user agreement",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "A UUID string identifying this requisition."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "404",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "429",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/requisitions/{id}/",
      "method": "requisitionById",
      "httpMethod": "get",
      "tag": "requisitions",
      "description": "Retrieve a requisition by ID",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "A UUID string identifying this requisition."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "RequisitionSerializer."
        },
        {
          "statusCode": "400",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "404",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "429",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/token/new/",
      "method": "jwtObtain",
      "httpMethod": "post",
      "tag": "token",
      "description": "Obtain JWT pair",
      "parameters": [
        {
          "name": "secret_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "secret_key",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Obtain new JWT pair."
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "429",
          "description": "Unspecified response body"
        }
      ]
    },
    {
      "url": "/api/v2/token/refresh/",
      "method": "jwtRefresh",
      "httpMethod": "post",
      "tag": "token",
      "description": "Refresh access token",
      "parameters": [
        {
          "name": "refresh",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Refresh Access token."
        },
        {
          "statusCode": "401",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "403",
          "description": "Unspecified response body"
        },
        {
          "statusCode": "429",
          "description": "Unspecified response body"
        }
      ]
    }
  ],
  "apiBaseUrl": "https://ob.nordigen.com",
  "apiTitle": "Nordigen Account Information Services API",
  "endpoints": 21,
  "sdkMethods": 29,
  "schemas": 41,
  "parameters": 86,
  "difficultyScore": 71,
  "difficulty": "Easy"
}