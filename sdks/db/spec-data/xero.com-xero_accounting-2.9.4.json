{
  "providerName": "xero.com",
  "openApiRaw": "https://raw.githubusercontent.com/XeroAPI/Xero-OpenAPI/master/xero_accounting.yaml",
  "homepage": "xero.com",
  "serviceName": "xero_accounting",
  "apiVersion": "2.9.4",
  "methods": [
    {
      "url": "/Accounts",
      "method": "getAccounts",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves the full chart of accounts",
      "parameters": [
        {
          "name": "If-Modified-Since",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Accounts",
      "method": "createAccount",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a new chart of accounts",
      "parameters": [
        {
          "name": "AccountID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "AddToWatchlist",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "BankAccountNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "BankAccountType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Class",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "CurrencyCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "EnablePaymentsToAccount",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "HasAttachments",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ReportingCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ReportingCodeName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ShowInExpenseClaims",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "Status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "SystemAccount",
          "schema": "string",
          "description": ""
        },
        {
          "name": "TaxType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "UpdatedDateUTC",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ValidationErrors",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Accounts/{AccountID}",
      "method": "deleteAccount",
      "httpMethod": "delete",
      "tag": "Accounting",
      "description": "Deletes a chart of accounts",
      "parameters": [
        {
          "name": "AccountID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for retrieving single object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Accounts/{AccountID}",
      "method": "getAccount",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a single chart of accounts by using a unique account Id",
      "parameters": [
        {
          "name": "AccountID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for retrieving single object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Accounts/{AccountID}",
      "method": "updateAccount",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a chart of accounts",
      "parameters": [
        {
          "name": "AccountID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for retrieving single object"
        },
        {
          "name": "Accounts",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Accounts/{AccountID}/Attachments",
      "method": "getAccountAttachments",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves attachments for a specific accounts by using a unique account Id",
      "parameters": [
        {
          "name": "AccountID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for Account object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Accounts/{AccountID}/Attachments/{AttachmentID}",
      "method": "getAccountAttachmentById",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific attachment from a specific account using a unique attachment Id",
      "parameters": [
        {
          "name": "AccountID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for Account object"
        },
        {
          "name": "AttachmentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for Attachment object"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Accounts/{AccountID}/Attachments/{FileName}",
      "method": "getAccountAttachmentByFileName",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves an attachment for a specific account by filename",
      "parameters": [
        {
          "name": "AccountID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for Account object"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "Name of the attachment"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Accounts/{AccountID}/Attachments/{FileName}",
      "method": "updateAccountAttachmentByFileName",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates attachment on a specific account by filename",
      "parameters": [
        {
          "name": "AccountID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for Account object"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "Name of the attachment"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Accounts/{AccountID}/Attachments/{FileName}",
      "method": "createAccountAttachmentByFileName",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates an attachment on a specific account",
      "parameters": [
        {
          "name": "AccountID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for Account object"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "Name of the attachment"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransactions",
      "method": "getBankTransactions",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves any spent or received money transactions",
      "parameters": [
        {
          "name": "If-Modified-Since",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Up to 100 bank transactions will be returned in a single API call with line items details"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransactions",
      "method": "updateOrCreateBankTransactions",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates or creates one or more spent or received money transaction",
      "parameters": [
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        },
        {
          "name": "BankTransactions",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransactions",
      "method": "createBankTransactions",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates one or more spent or received money transaction",
      "parameters": [
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        },
        {
          "name": "BankTransactions",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransactions/{BankTransactionID}",
      "method": "getBankTransaction",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a single spent or received money transaction by using a unique bank transaction Id",
      "parameters": [
        {
          "name": "BankTransactionID",
          "schema": "string",
          "required": true,
          "description": "Xero generated unique identifier for a bank transaction"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransactions/{BankTransactionID}",
      "method": "updateBankTransaction",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a single spent or received money transaction",
      "parameters": [
        {
          "name": "BankTransactionID",
          "schema": "string",
          "required": true,
          "description": "Xero generated unique identifier for a bank transaction"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        },
        {
          "name": "BankTransactions",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransactions/{BankTransactionID}/Attachments",
      "method": "getBankTransactionAttachments",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves any attachments from a specific bank transactions",
      "parameters": [
        {
          "name": "BankTransactionID",
          "schema": "string",
          "required": true,
          "description": "Xero generated unique identifier for a bank transaction"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransactions/{BankTransactionID}/Attachments/{AttachmentID}",
      "method": "getBankTransactionAttachmentById",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves specific attachments from a specific BankTransaction using a unique attachment Id",
      "parameters": [
        {
          "name": "BankTransactionID",
          "schema": "string",
          "required": true,
          "description": "Xero generated unique identifier for a bank transaction"
        },
        {
          "name": "AttachmentID",
          "schema": "string",
          "required": true,
          "description": "Xero generated unique identifier for an attachment"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransactions/{BankTransactionID}/Attachments/{FileName}",
      "method": "getBankTransactionAttachmentByFileName",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific attachment from a specific bank transaction by filename",
      "parameters": [
        {
          "name": "BankTransactionID",
          "schema": "string",
          "required": true,
          "description": "Xero generated unique identifier for a bank transaction"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "The name of the file being attached"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransactions/{BankTransactionID}/Attachments/{FileName}",
      "method": "updateBankTransactionAttachmentByFileName",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a specific attachment from a specific bank transaction by filename",
      "parameters": [
        {
          "name": "BankTransactionID",
          "schema": "string",
          "required": true,
          "description": "Xero generated unique identifier for a bank transaction"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "The name of the file being attached"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransactions/{BankTransactionID}/Attachments/{FileName}",
      "method": "createBankTransactionAttachmentByFileName",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates an attachment for a specific bank transaction by filename",
      "parameters": [
        {
          "name": "BankTransactionID",
          "schema": "string",
          "required": true,
          "description": "Xero generated unique identifier for a bank transaction"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "The name of the file being attached"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransactions/{BankTransactionID}/History",
      "method": "getBankTransactionsHistory",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves history from a specific bank transaction using a unique bank transaction Id",
      "parameters": [
        {
          "name": "BankTransactionID",
          "schema": "string",
          "required": true,
          "description": "Xero generated unique identifier for a bank transaction"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransactions/{BankTransactionID}/History",
      "method": "createBankTransactionHistoryRecord",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a history record for a specific bank transactions",
      "parameters": [
        {
          "name": "BankTransactionID",
          "schema": "string",
          "required": true,
          "description": "Xero generated unique identifier for a bank transaction"
        },
        {
          "name": "HistoryRecords",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransfers",
      "method": "getBankTransfers",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves all bank transfers",
      "parameters": [
        {
          "name": "If-Modified-Since",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransfers",
      "method": "createBankTransfer",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a bank transfer",
      "parameters": [
        {
          "name": "BankTransfers",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransfers/{BankTransferID}",
      "method": "getBankTransfer",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves specific bank transfers by using a unique bank transfer Id",
      "parameters": [
        {
          "name": "BankTransferID",
          "schema": "string",
          "required": true,
          "description": "Xero generated unique identifier for a bank transfer"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransfers/{BankTransferID}/Attachments",
      "method": "getBankTransferAttachments",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves attachments from a specific bank transfer",
      "parameters": [
        {
          "name": "BankTransferID",
          "schema": "string",
          "required": true,
          "description": "Xero generated unique identifier for a bank transfer"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransfers/{BankTransferID}/Attachments/{AttachmentID}",
      "method": "getBankTransferAttachmentById",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific attachment from a specific bank transfer using a unique attachment ID",
      "parameters": [
        {
          "name": "BankTransferID",
          "schema": "string",
          "required": true,
          "description": "Xero generated unique identifier for a bank transfer"
        },
        {
          "name": "AttachmentID",
          "schema": "string",
          "required": true,
          "description": "Xero generated unique identifier for an Attachment to a bank transfer"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransfers/{BankTransferID}/Attachments/{FileName}",
      "method": "getBankTransferAttachmentByFileName",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific attachment on a specific bank transfer by file name",
      "parameters": [
        {
          "name": "BankTransferID",
          "schema": "string",
          "required": true,
          "description": "Xero generated unique identifier for a bank transfer"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "The name of the file being attached to a Bank Transfer"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransfers/{BankTransferID}/Attachments/{FileName}",
      "method": "updateBankTransferAttachmentByFileName",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "",
      "parameters": [
        {
          "name": "BankTransferID",
          "schema": "string",
          "required": true,
          "description": "Xero generated unique identifier for a bank transfer"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "The name of the file being attached to a Bank Transfer"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransfers/{BankTransferID}/Attachments/{FileName}",
      "method": "createBankTransferAttachmentByFileName",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "",
      "parameters": [
        {
          "name": "BankTransferID",
          "schema": "string",
          "required": true,
          "description": "Xero generated unique identifier for a bank transfer"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "The name of the file being attached to a Bank Transfer"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransfers/{BankTransferID}/History",
      "method": "getBankTransferHistory",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves history from a specific bank transfer using a unique bank transfer Id",
      "parameters": [
        {
          "name": "BankTransferID",
          "schema": "string",
          "required": true,
          "description": "Xero generated unique identifier for a bank transfer"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/BankTransfers/{BankTransferID}/History",
      "method": "createBankTransferHistoryRecord",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a history record for a specific bank transfer",
      "parameters": [
        {
          "name": "BankTransferID",
          "schema": "string",
          "required": true,
          "description": "Xero generated unique identifier for a bank transfer"
        },
        {
          "name": "HistoryRecords",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/BatchPayments",
      "method": "getBatchPayments",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves either one or many batch payments for invoices",
      "parameters": [
        {
          "name": "If-Modified-Since",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/BatchPayments",
      "method": "createBatchPayment",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates one or many batch payments for invoices",
      "parameters": [
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "BatchPayments",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/BatchPayments/{BatchPaymentID}/History",
      "method": "getBatchPaymentHistory",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves history from a specific batch payment",
      "parameters": [
        {
          "name": "BatchPaymentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for BatchPayment"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/BatchPayments/{BatchPaymentID}/History",
      "method": "createBatchPaymentHistoryRecord",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a history record for a specific batch payment",
      "parameters": [
        {
          "name": "BatchPaymentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for BatchPayment"
        },
        {
          "name": "HistoryRecords",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/BrandingThemes",
      "method": "getBrandingThemes",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves all the branding themes",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/BrandingThemes/{BrandingThemeID}",
      "method": "getBrandingTheme",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific branding theme using a unique branding theme Id",
      "parameters": [
        {
          "name": "BrandingThemeID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Branding Theme"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/BrandingThemes/{BrandingThemeID}/PaymentServices",
      "method": "getBrandingThemePaymentServices",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves the payment services for a specific branding theme",
      "parameters": [
        {
          "name": "BrandingThemeID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Branding Theme"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/BrandingThemes/{BrandingThemeID}/PaymentServices",
      "method": "createBrandingThemePaymentServices",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Creates a new custom payment service for a specific branding theme",
      "parameters": [
        {
          "name": "BrandingThemeID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Branding Theme"
        },
        {
          "name": "PayNowText",
          "schema": "string",
          "description": ""
        },
        {
          "name": "PaymentServiceID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "PaymentServiceName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "PaymentServiceType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "PaymentServiceUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ValidationErrors",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/ContactGroups",
      "method": "getContactGroups",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves the contact Id and name of all the contacts in a contact group",
      "parameters": [
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ContactGroups",
      "method": "createContactGroup",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a contact group",
      "parameters": [
        {
          "name": "ContactGroups",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/ContactGroups/{ContactGroupID}",
      "method": "getContactGroup",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific contact group by using a unique contact group Id",
      "parameters": [
        {
          "name": "ContactGroupID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Contact Group"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ContactGroups/{ContactGroupID}",
      "method": "updateContactGroup",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a specific contact group",
      "parameters": [
        {
          "name": "ContactGroupID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Contact Group"
        },
        {
          "name": "ContactGroups",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/ContactGroups/{ContactGroupID}/Contacts",
      "method": "deleteContactGroupContacts",
      "httpMethod": "delete",
      "tag": "Accounting",
      "description": "Deletes all contacts from a specific contact group",
      "parameters": [
        {
          "name": "ContactGroupID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Contact Group"
        }
      ],
      "responses": []
    },
    {
      "url": "/ContactGroups/{ContactGroupID}/Contacts",
      "method": "createContactGroupContacts",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates contacts to a specific contact group",
      "parameters": [
        {
          "name": "ContactGroupID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Contact Group"
        },
        {
          "name": "Contacts",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/ContactGroups/{ContactGroupID}/Contacts/{ContactID}",
      "method": "deleteContactGroupContact",
      "httpMethod": "delete",
      "tag": "Accounting",
      "description": "Deletes a specific contact from a contact group using a unique contact Id",
      "parameters": [
        {
          "name": "ContactGroupID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Contact Group"
        },
        {
          "name": "ContactID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Contact"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Contacts",
      "method": "getContacts",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves all contacts in a Xero organisation",
      "parameters": [
        {
          "name": "If-Modified-Since",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        },
        {
          "name": "IDs",
          "schema": "array",
          "description": "Filter by a comma separated list of ContactIDs. Allows you to retrieve a specific set of contacts in a single call."
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "e.g. page=1 - Up to 100 contacts will be returned in a single API call."
        },
        {
          "name": "includeArchived",
          "schema": "boolean",
          "description": "e.g. includeArchived=true - Contacts with a status of ARCHIVED will be included in the response"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Contacts",
      "method": "updateOrCreateContacts",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates or creates one or more contacts in a Xero organisation",
      "parameters": [
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "Contacts",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Contacts",
      "method": "createContacts",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates multiple contacts (bulk) in a Xero organisation",
      "parameters": [
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "Contacts",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Contacts/{ContactID}",
      "method": "getContact",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific contacts in a Xero organisation using a unique contact Id",
      "parameters": [
        {
          "name": "ContactID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Contact"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Contacts/{ContactID}",
      "method": "updateContact",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a specific contact in a Xero organisation",
      "parameters": [
        {
          "name": "ContactID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Contact"
        },
        {
          "name": "Contacts",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Contacts/{ContactID}/Attachments",
      "method": "getContactAttachments",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves attachments for a specific contact in a Xero organisation",
      "parameters": [
        {
          "name": "ContactID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Contact"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Contacts/{ContactID}/Attachments/{AttachmentID}",
      "method": "getContactAttachmentById",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific attachment from a specific contact using a unique attachment Id",
      "parameters": [
        {
          "name": "ContactID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Contact"
        },
        {
          "name": "AttachmentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Attachment"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Contacts/{ContactID}/Attachments/{FileName}",
      "method": "getContactAttachmentByFileName",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific attachment from a specific contact by file name",
      "parameters": [
        {
          "name": "ContactID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Contact"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "Name for the file you are attaching"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Contacts/{ContactID}/Attachments/{FileName}",
      "method": "updateContactAttachmentByFileName",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "",
      "parameters": [
        {
          "name": "ContactID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Contact"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "Name for the file you are attaching"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Contacts/{ContactID}/Attachments/{FileName}",
      "method": "createContactAttachmentByFileName",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "",
      "parameters": [
        {
          "name": "ContactID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Contact"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "Name for the file you are attaching"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Contacts/{ContactID}/CISSettings",
      "method": "getContactCisSettings",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves CIS settings for a specific contact in a Xero organisation",
      "parameters": [
        {
          "name": "ContactID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Contact"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Contacts/{ContactID}/History",
      "method": "getContactHistory",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves history records for a specific contact",
      "parameters": [
        {
          "name": "ContactID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Contact"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Contacts/{ContactID}/History",
      "method": "createContactHistory",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a new history record for a specific contact",
      "parameters": [
        {
          "name": "ContactID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Contact"
        },
        {
          "name": "HistoryRecords",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Contacts/{ContactNumber}",
      "method": "getContactByContactNumber",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific contact by contact number in a Xero organisation",
      "parameters": [
        {
          "name": "ContactNumber",
          "schema": "string",
          "required": true,
          "description": "This field is read only on the Xero contact screen, used to identify contacts in external systems (max length = 50)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/CreditNotes",
      "method": "getCreditNotes",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves any credit notes",
      "parameters": [
        {
          "name": "If-Modified-Since",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "e.g. page=1 – Up to 100 credit notes will be returned in a single API call with line items shown for each credit note"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/CreditNotes",
      "method": "updateOrCreateCreditNotes",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates or creates one or more credit notes",
      "parameters": [
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        },
        {
          "name": "CreditNotes",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/CreditNotes",
      "method": "createCreditNotes",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a new credit note",
      "parameters": [
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        },
        {
          "name": "CreditNotes",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/CreditNotes/{CreditNoteID}",
      "method": "getCreditNote",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific credit note using a unique credit note Id",
      "parameters": [
        {
          "name": "CreditNoteID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Credit Note"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/CreditNotes/{CreditNoteID}",
      "method": "updateCreditNote",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a specific credit note",
      "parameters": [
        {
          "name": "CreditNoteID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Credit Note"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        },
        {
          "name": "CreditNotes",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/CreditNotes/{CreditNoteID}/Allocations",
      "method": "createCreditNoteAllocation",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates allocation for a specific credit note",
      "parameters": [
        {
          "name": "CreditNoteID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Credit Note"
        },
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "Allocations",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/CreditNotes/{CreditNoteID}/Attachments",
      "method": "getCreditNoteAttachments",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves attachments for a specific credit notes",
      "parameters": [
        {
          "name": "CreditNoteID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Credit Note"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/CreditNotes/{CreditNoteID}/Attachments/{AttachmentID}",
      "method": "getCreditNoteAttachmentById",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific attachment from a specific credit note using a unique attachment Id",
      "parameters": [
        {
          "name": "CreditNoteID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Credit Note"
        },
        {
          "name": "AttachmentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Attachment"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/CreditNotes/{CreditNoteID}/Attachments/{FileName}",
      "method": "getCreditNoteAttachmentByFileName",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific attachment on a specific credit note by file name",
      "parameters": [
        {
          "name": "CreditNoteID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Credit Note"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "Name of the file you are attaching to Credit Note"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/CreditNotes/{CreditNoteID}/Attachments/{FileName}",
      "method": "updateCreditNoteAttachmentByFileName",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates attachments on a specific credit note by file name",
      "parameters": [
        {
          "name": "CreditNoteID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Credit Note"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "Name of the file you are attaching to Credit Note"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/CreditNotes/{CreditNoteID}/Attachments/{FileName}",
      "method": "createCreditNoteAttachmentByFileName",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates an attachment for a specific credit note",
      "parameters": [
        {
          "name": "CreditNoteID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Credit Note"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "Name of the file you are attaching to Credit Note"
        },
        {
          "name": "IncludeOnline",
          "schema": "boolean",
          "description": "Allows an attachment to be seen by the end customer within their online invoice"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/CreditNotes/{CreditNoteID}/History",
      "method": "getCreditNoteHistory",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves history records of a specific credit note",
      "parameters": [
        {
          "name": "CreditNoteID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Credit Note"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/CreditNotes/{CreditNoteID}/History",
      "method": "createCreditNoteHistory",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Retrieves history records of a specific credit note",
      "parameters": [
        {
          "name": "CreditNoteID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Credit Note"
        },
        {
          "name": "HistoryRecords",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/CreditNotes/{CreditNoteID}/pdf",
      "method": "getCreditNoteAsPdf",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves credit notes as PDF files",
      "parameters": [
        {
          "name": "CreditNoteID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Credit Note"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Currencies",
      "method": "getCurrencies",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves currencies for your Xero organisation",
      "parameters": [
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Currencies",
      "method": "createCurrency",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Create a new currency for a Xero organisation",
      "parameters": [
        {
          "name": "Code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Employees",
      "method": "getEmployees",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves employees used in Xero payrun",
      "parameters": [
        {
          "name": "If-Modified-Since",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Employees",
      "method": "updateOrCreateEmployees",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Creates a single new employees used in Xero payrun",
      "parameters": [
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "Employees",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Employees",
      "method": "createEmployees",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates new employees used in Xero payrun",
      "parameters": [
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "Employees",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Employees/{EmployeeID}",
      "method": "getEmployee",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific employee used in Xero payrun using a unique employee Id",
      "parameters": [
        {
          "name": "EmployeeID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Employee"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ExpenseClaims",
      "method": "getExpenseClaims",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves expense claims",
      "parameters": [
        {
          "name": "If-Modified-Since",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ExpenseClaims",
      "method": "createExpenseClaims",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates expense claims",
      "parameters": [
        {
          "name": "ExpenseClaims",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/ExpenseClaims/{ExpenseClaimID}",
      "method": "getExpenseClaim",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific expense claim using a unique expense claim Id",
      "parameters": [
        {
          "name": "ExpenseClaimID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a ExpenseClaim"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ExpenseClaims/{ExpenseClaimID}",
      "method": "updateExpenseClaim",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a specific expense claims",
      "parameters": [
        {
          "name": "ExpenseClaimID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a ExpenseClaim"
        },
        {
          "name": "ExpenseClaims",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/ExpenseClaims/{ExpenseClaimID}/History",
      "method": "getExpenseClaimHistory",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves history records of a specific expense claim",
      "parameters": [
        {
          "name": "ExpenseClaimID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a ExpenseClaim"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ExpenseClaims/{ExpenseClaimID}/History",
      "method": "createExpenseClaimHistory",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a history record for a specific expense claim",
      "parameters": [
        {
          "name": "ExpenseClaimID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a ExpenseClaim"
        },
        {
          "name": "HistoryRecords",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/InvoiceReminders/Settings",
      "method": "getInvoiceReminders",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves invoice reminder settings",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Invoices",
      "method": "getInvoices",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves sales invoices or purchase bills",
      "parameters": [
        {
          "name": "If-Modified-Since",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        },
        {
          "name": "IDs",
          "schema": "array",
          "description": "Filter by a comma-separated list of InvoicesIDs."
        },
        {
          "name": "InvoiceNumbers",
          "schema": "array",
          "description": "Filter by a comma-separated list of InvoiceNumbers."
        },
        {
          "name": "ContactIDs",
          "schema": "array",
          "description": "Filter by a comma-separated list of ContactIDs."
        },
        {
          "name": "Statuses",
          "schema": "array",
          "description": "Filter by a comma-separated list Statuses. For faster response times we recommend using these explicit parameters instead of passing OR conditions into the Where filter."
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "e.g. page=1 – Up to 100 invoices will be returned in a single API call with line items shown for each invoice"
        },
        {
          "name": "includeArchived",
          "schema": "boolean",
          "description": "e.g. includeArchived=true - Contacts with a status of ARCHIVED will be included in the response"
        },
        {
          "name": "createdByMyApp",
          "schema": "boolean",
          "description": "When set to true you'll only retrieve Invoices created by your app"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Invoices",
      "method": "updateOrCreateInvoices",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates or creates one or more sales invoices or purchase bills",
      "parameters": [
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        },
        {
          "name": "Invoices",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Invoices",
      "method": "createInvoices",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates one or more sales invoices or purchase bills",
      "parameters": [
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        },
        {
          "name": "Invoices",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Invoices/{InvoiceID}",
      "method": "getInvoice",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific sales invoice or purchase bill using a unique invoice Id",
      "parameters": [
        {
          "name": "InvoiceID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Invoice"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Invoices/{InvoiceID}",
      "method": "updateInvoice",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a specific sales invoices or purchase bills",
      "parameters": [
        {
          "name": "InvoiceID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Invoice"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        },
        {
          "name": "Invoices",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Invoices/{InvoiceID}/Attachments",
      "method": "getInvoiceAttachments",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves attachments for a specific invoice or purchase bill",
      "parameters": [
        {
          "name": "InvoiceID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Invoice"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Invoices/{InvoiceID}/Attachments/{AttachmentID}",
      "method": "getInvoiceAttachmentById",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific attachment from a specific invoices or purchase bills by using a unique attachment Id",
      "parameters": [
        {
          "name": "InvoiceID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Invoice"
        },
        {
          "name": "AttachmentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Attachment"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Invoices/{InvoiceID}/Attachments/{FileName}",
      "method": "getInvoiceAttachmentByFileName",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves an attachment from a specific invoice or purchase bill by filename",
      "parameters": [
        {
          "name": "InvoiceID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Invoice"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "Name of the file you are attaching"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Invoices/{InvoiceID}/Attachments/{FileName}",
      "method": "updateInvoiceAttachmentByFileName",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates an attachment from a specific invoices or purchase bill by filename",
      "parameters": [
        {
          "name": "InvoiceID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Invoice"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "Name of the file you are attaching"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Invoices/{InvoiceID}/Attachments/{FileName}",
      "method": "createInvoiceAttachmentByFileName",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates an attachment for a specific invoice or purchase bill by filename",
      "parameters": [
        {
          "name": "InvoiceID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Invoice"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "Name of the file you are attaching"
        },
        {
          "name": "IncludeOnline",
          "schema": "boolean",
          "description": "Allows an attachment to be seen by the end customer within their online invoice"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Invoices/{InvoiceID}/Email",
      "method": "emailInvoice",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Sends a copy of a specific invoice to related contact via email",
      "parameters": [
        {
          "name": "InvoiceID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Invoice"
        },
        {
          "name": "Status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Invoices/{InvoiceID}/History",
      "method": "getInvoiceHistory",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves history records for a specific invoice",
      "parameters": [
        {
          "name": "InvoiceID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Invoice"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Invoices/{InvoiceID}/History",
      "method": "createInvoiceHistory",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a history record for a specific invoice",
      "parameters": [
        {
          "name": "InvoiceID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Invoice"
        },
        {
          "name": "HistoryRecords",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Invoices/{InvoiceID}/OnlineInvoice",
      "method": "getOnlineInvoice",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a URL to an online invoice",
      "parameters": [
        {
          "name": "InvoiceID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Invoice"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Invoices/{InvoiceID}/pdf",
      "method": "getInvoiceAsPdf",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves invoices or purchase bills as PDF files",
      "parameters": [
        {
          "name": "InvoiceID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Invoice"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Items",
      "method": "getItems",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves items",
      "parameters": [
        {
          "name": "If-Modified-Since",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Items",
      "method": "updateOrCreateItems",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates or creates one or more items",
      "parameters": [
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        },
        {
          "name": "Items",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Items",
      "method": "createItems",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates one or more items",
      "parameters": [
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        },
        {
          "name": "Items",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Items/{ItemID}",
      "method": "deleteItem",
      "httpMethod": "delete",
      "tag": "Accounting",
      "description": "Deletes a specific item",
      "parameters": [
        {
          "name": "ItemID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Item"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Items/{ItemID}",
      "method": "getItem",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific item using a unique item Id",
      "parameters": [
        {
          "name": "ItemID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Item"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Items/{ItemID}",
      "method": "updateItem",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a specific item",
      "parameters": [
        {
          "name": "ItemID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Item"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        },
        {
          "name": "Items",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Items/{ItemID}/History",
      "method": "getItemHistory",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves history for a specific item",
      "parameters": [
        {
          "name": "ItemID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Item"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Items/{ItemID}/History",
      "method": "createItemHistory",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a history record for a specific item",
      "parameters": [
        {
          "name": "ItemID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Item"
        },
        {
          "name": "HistoryRecords",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Journals",
      "method": "getJournals",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves journals",
      "parameters": [
        {
          "name": "If-Modified-Since",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "offset",
          "schema": "integer",
          "description": "Offset by a specified journal number. e.g. journals with a JournalNumber greater than the offset will be returned"
        },
        {
          "name": "paymentsOnly",
          "schema": "boolean",
          "description": "Filter to retrieve journals on a cash basis. Journals are returned on an accrual basis by default."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Journals/{JournalID}",
      "method": "getJournal",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific journal using a unique journal Id.",
      "parameters": [
        {
          "name": "JournalID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Journal"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/LinkedTransactions",
      "method": "getLinkedTransactions",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves linked transactions (billable expenses)",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "description": "Up to 100 linked transactions will be returned in a single API call. Use the page parameter to specify the page to be returned e.g. page=1."
        },
        {
          "name": "LinkedTransactionID",
          "schema": "string",
          "description": "The Xero identifier for an Linked Transaction"
        },
        {
          "name": "SourceTransactionID",
          "schema": "string",
          "description": "Filter by the SourceTransactionID. Get the linked transactions created from a particular ACCPAY invoice"
        },
        {
          "name": "ContactID",
          "schema": "string",
          "description": "Filter by the ContactID. Get all the linked transactions that have been assigned to a particular customer."
        },
        {
          "name": "Status",
          "schema": "string",
          "description": "Filter by the combination of ContactID and Status. Get  the linked transactions associated to a  customer and with a status"
        },
        {
          "name": "TargetTransactionID",
          "schema": "string",
          "description": "Filter by the TargetTransactionID. Get all the linked transactions allocated to a particular ACCREC invoice"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/LinkedTransactions",
      "method": "createLinkedTransaction",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates linked transactions (billable expenses)",
      "parameters": [
        {
          "name": "ContactID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "LinkedTransactionID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "SourceLineItemID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "SourceTransactionID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "SourceTransactionTypeCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "TargetLineItemID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "TargetTransactionID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "UpdatedDateUTC",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ValidationErrors",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/LinkedTransactions/{LinkedTransactionID}",
      "method": "deleteLinkedTransaction",
      "httpMethod": "delete",
      "tag": "Accounting",
      "description": "Deletes a specific linked transactions (billable expenses)",
      "parameters": [
        {
          "name": "LinkedTransactionID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a LinkedTransaction"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/LinkedTransactions/{LinkedTransactionID}",
      "method": "getLinkedTransaction",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific linked transaction (billable expenses) using a unique linked transaction Id",
      "parameters": [
        {
          "name": "LinkedTransactionID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a LinkedTransaction"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/LinkedTransactions/{LinkedTransactionID}",
      "method": "updateLinkedTransaction",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a specific linked transactions (billable expenses)",
      "parameters": [
        {
          "name": "LinkedTransactionID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a LinkedTransaction"
        },
        {
          "name": "LinkedTransactions",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/ManualJournals",
      "method": "getManualJournals",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves manual journals",
      "parameters": [
        {
          "name": "If-Modified-Since",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "e.g. page=1 – Up to 100 manual journals will be returned in a single API call with line items shown for each overpayment"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ManualJournals",
      "method": "updateOrCreateManualJournals",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates or creates a single manual journal",
      "parameters": [
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "ManualJournals",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/ManualJournals",
      "method": "createManualJournals",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates one or more manual journals",
      "parameters": [
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "ManualJournals",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/ManualJournals/{ManualJournalID}",
      "method": "getManualJournal",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific manual journal",
      "parameters": [
        {
          "name": "ManualJournalID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a ManualJournal"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ManualJournals/{ManualJournalID}",
      "method": "updateManualJournal",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a specific manual journal",
      "parameters": [
        {
          "name": "ManualJournalID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a ManualJournal"
        },
        {
          "name": "ManualJournals",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/ManualJournals/{ManualJournalID}/Attachments",
      "method": "getManualJournalAttachments",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves attachment for a specific manual journal",
      "parameters": [
        {
          "name": "ManualJournalID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a ManualJournal"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ManualJournals/{ManualJournalID}/Attachments/{AttachmentID}",
      "method": "getManualJournalAttachmentById",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Allows you to retrieve a specific attachment from a specific manual journal using a unique attachment Id",
      "parameters": [
        {
          "name": "ManualJournalID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a ManualJournal"
        },
        {
          "name": "AttachmentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Attachment"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ManualJournals/{ManualJournalID}/Attachments/{FileName}",
      "method": "getManualJournalAttachmentByFileName",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific attachment from a specific manual journal by file name",
      "parameters": [
        {
          "name": "ManualJournalID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a ManualJournal"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "The name of the file being attached to a ManualJournal"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ManualJournals/{ManualJournalID}/Attachments/{FileName}",
      "method": "updateManualJournalAttachmentByFileName",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a specific attachment from a specific manual journal by file name",
      "parameters": [
        {
          "name": "ManualJournalID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a ManualJournal"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "The name of the file being attached to a ManualJournal"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/ManualJournals/{ManualJournalID}/Attachments/{FileName}",
      "method": "createManualJournalAttachmentByFileName",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a specific attachment for a specific manual journal by file name",
      "parameters": [
        {
          "name": "ManualJournalID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a ManualJournal"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "The name of the file being attached to a ManualJournal"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/ManualJournals/{ManualJournalID}/History",
      "method": "getManualJournalsHistory",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves history for a specific manual journal",
      "parameters": [
        {
          "name": "ManualJournalID",
          "schema": "string",
          "required": true,
          "description": "Xero generated unique identifier for a manual journal"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ManualJournals/{ManualJournalID}/History",
      "method": "createManualJournalHistoryRecord",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a history record for a specific manual journal",
      "parameters": [
        {
          "name": "ManualJournalID",
          "schema": "string",
          "required": true,
          "description": "Xero generated unique identifier for a manual journal"
        },
        {
          "name": "HistoryRecords",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Organisation",
      "method": "getOrganisations",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves Xero organisation details",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Organisation/Actions",
      "method": "getOrganisationActions",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a list of the key actions your app has permission to perform in the connected Xero organisation.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Organisation/{OrganisationID}/CISSettings",
      "method": "getOrganisationCisSettings",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves the CIS settings for the Xero organistaion.",
      "parameters": [
        {
          "name": "OrganisationID",
          "schema": "string",
          "required": true,
          "description": "The unique Xero identifier for an organisation"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Overpayments",
      "method": "getOverpayments",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves overpayments",
      "parameters": [
        {
          "name": "If-Modified-Since",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "e.g. page=1 – Up to 100 overpayments will be returned in a single API call with line items shown for each overpayment"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Overpayments/{OverpaymentID}",
      "method": "getOverpayment",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific overpayment using a unique overpayment Id",
      "parameters": [
        {
          "name": "OverpaymentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Overpayment"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Overpayments/{OverpaymentID}/Allocations",
      "method": "createOverpaymentAllocations",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a single allocation for a specific overpayment",
      "parameters": [
        {
          "name": "OverpaymentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Overpayment"
        },
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "Allocations",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Overpayments/{OverpaymentID}/History",
      "method": "getOverpaymentHistory",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves history records of a specific overpayment",
      "parameters": [
        {
          "name": "OverpaymentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Overpayment"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Overpayments/{OverpaymentID}/History",
      "method": "createOverpaymentHistory",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a history record for a specific overpayment",
      "parameters": [
        {
          "name": "OverpaymentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Overpayment"
        },
        {
          "name": "HistoryRecords",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/PaymentServices",
      "method": "getPaymentServices",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves payment services",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/PaymentServices",
      "method": "createPaymentService",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a payment service",
      "parameters": [
        {
          "name": "PaymentServices",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Payments",
      "method": "getPayments",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves payments for invoices and credit notes",
      "parameters": [
        {
          "name": "If-Modified-Since",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Up to 100 payments will be returned in a single API call"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Payments",
      "method": "createPayment",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Creates a single payment for invoice or credit notes",
      "parameters": [
        {
          "name": "Account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "Amount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "BankAccountNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "BatchPaymentID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "CreditNote",
          "schema": "object",
          "description": ""
        },
        {
          "name": "CreditNoteNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "CurrencyRate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "Date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Details",
          "schema": "string",
          "description": ""
        },
        {
          "name": "HasAccount",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "HasValidationErrors",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "Invoice",
          "schema": "object",
          "description": ""
        },
        {
          "name": "InvoiceNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "IsReconciled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "Overpayment",
          "schema": "object",
          "description": ""
        },
        {
          "name": "Particulars",
          "schema": "string",
          "description": ""
        },
        {
          "name": "PaymentID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "PaymentType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Prepayment",
          "schema": "object",
          "description": ""
        },
        {
          "name": "Reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "StatusAttributeString",
          "schema": "string",
          "description": ""
        },
        {
          "name": "UpdatedDateUTC",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ValidationErrors",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Payments",
      "method": "createPayments",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates multiple payments for invoices or credit notes",
      "parameters": [
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "Payments",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Payments/{PaymentID}",
      "method": "getPayment",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific payment for invoices and credit notes using a unique payment Id",
      "parameters": [
        {
          "name": "PaymentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Payment"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Payments/{PaymentID}",
      "method": "deletePayment",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a specific payment for invoices and credit notes",
      "parameters": [
        {
          "name": "PaymentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Payment"
        },
        {
          "name": "Status",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Payments/{PaymentID}/History",
      "method": "getPaymentHistory",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves history records of a specific payment",
      "parameters": [
        {
          "name": "PaymentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Payment"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Payments/{PaymentID}/History",
      "method": "createPaymentHistory",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a history record for a specific payment",
      "parameters": [
        {
          "name": "PaymentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Payment"
        },
        {
          "name": "HistoryRecords",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Prepayments",
      "method": "getPrepayments",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves prepayments",
      "parameters": [
        {
          "name": "If-Modified-Since",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "e.g. page=1 – Up to 100 prepayments will be returned in a single API call with line items shown for each overpayment"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Prepayments/{PrepaymentID}",
      "method": "getPrepayment",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Allows you to retrieve a specified prepayments",
      "parameters": [
        {
          "name": "PrepaymentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a PrePayment"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Prepayments/{PrepaymentID}/Allocations",
      "method": "createPrepaymentAllocations",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Allows you to create an Allocation for prepayments",
      "parameters": [
        {
          "name": "PrepaymentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for Prepayment"
        },
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "Allocations",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Prepayments/{PrepaymentID}/History",
      "method": "getPrepaymentHistory",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves history record for a specific prepayment",
      "parameters": [
        {
          "name": "PrepaymentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a PrePayment"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Prepayments/{PrepaymentID}/History",
      "method": "createPrepaymentHistory",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a history record for a specific prepayment",
      "parameters": [
        {
          "name": "PrepaymentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a PrePayment"
        },
        {
          "name": "HistoryRecords",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/PurchaseOrders",
      "method": "getPurchaseOrders",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves purchase orders",
      "parameters": [
        {
          "name": "If-Modified-Since",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "Status",
          "schema": "string",
          "description": "Filter by purchase order status"
        },
        {
          "name": "DateFrom",
          "schema": "string",
          "description": "Filter by purchase order date (e.g. GET https://.../PurchaseOrders?DateFrom=2015-12-01&DateTo=2015-12-31"
        },
        {
          "name": "DateTo",
          "schema": "string",
          "description": "Filter by purchase order date (e.g. GET https://.../PurchaseOrders?DateFrom=2015-12-01&DateTo=2015-12-31"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "To specify a page, append the page parameter to the URL e.g. ?page=1. If there are 100 records in the response you will need to check if there is any more data by fetching the next page e.g ?page=2 and continuing this process until no more results are returned."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/PurchaseOrders",
      "method": "updateOrCreatePurchaseOrders",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates or creates one or more purchase orders",
      "parameters": [
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "PurchaseOrders",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/PurchaseOrders",
      "method": "createPurchaseOrders",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates one or more purchase orders",
      "parameters": [
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "PurchaseOrders",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/PurchaseOrders/{PurchaseOrderID}",
      "method": "getPurchaseOrder",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific purchase order using a unique purchase order Id",
      "parameters": [
        {
          "name": "PurchaseOrderID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a PurchaseOrder"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/PurchaseOrders/{PurchaseOrderID}",
      "method": "updatePurchaseOrder",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a specific purchase order",
      "parameters": [
        {
          "name": "PurchaseOrderID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a PurchaseOrder"
        },
        {
          "name": "PurchaseOrders",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/PurchaseOrders/{PurchaseOrderID}/Attachments",
      "method": "getPurchaseOrderAttachments",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves attachments for a specific purchase order",
      "parameters": [
        {
          "name": "PurchaseOrderID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for Purchase Orders object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/PurchaseOrders/{PurchaseOrderID}/Attachments/{AttachmentID}",
      "method": "getPurchaseOrderAttachmentById",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves specific attachment for a specific purchase order using a unique attachment Id",
      "parameters": [
        {
          "name": "PurchaseOrderID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for Purchase Order object"
        },
        {
          "name": "AttachmentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for Attachment object"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/PurchaseOrders/{PurchaseOrderID}/Attachments/{FileName}",
      "method": "getPurchaseOrder≠attachmentByFileName",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific attachment for a specific purchase order by filename",
      "parameters": [
        {
          "name": "PurchaseOrderID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for Purchase Order object"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "Name of the attachment"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/PurchaseOrders/{PurchaseOrderID}/Attachments/{FileName}",
      "method": "updatePurchaseOrderAttachmentByFileName",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a specific attachment for a specific purchase order by filename",
      "parameters": [
        {
          "name": "PurchaseOrderID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for Purchase Order object"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "Name of the attachment"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/PurchaseOrders/{PurchaseOrderID}/Attachments/{FileName}",
      "method": "createPurchaseOrderAttachmentByFileName",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates attachment for a specific purchase order",
      "parameters": [
        {
          "name": "PurchaseOrderID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for Purchase Order object"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "Name of the attachment"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/PurchaseOrders/{PurchaseOrderID}/History",
      "method": "getPurchaseOrderHistory",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves history for a specific purchase order",
      "parameters": [
        {
          "name": "PurchaseOrderID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a PurchaseOrder"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/PurchaseOrders/{PurchaseOrderID}/History",
      "method": "createPurchaseOrderHistory",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a history record for a specific purchase orders",
      "parameters": [
        {
          "name": "PurchaseOrderID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a PurchaseOrder"
        },
        {
          "name": "HistoryRecords",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/PurchaseOrders/{PurchaseOrderID}/pdf",
      "method": "getPurchaseOrderAsPdf",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves specific purchase order as PDF files using a unique purchase order Id",
      "parameters": [
        {
          "name": "PurchaseOrderID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Purchase Order"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/PurchaseOrders/{PurchaseOrderNumber}",
      "method": "getPurchaseOrderByNumber",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific purchase order using purchase order number",
      "parameters": [
        {
          "name": "PurchaseOrderNumber",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a PurchaseOrder"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Quotes",
      "method": "getQuotes",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves sales quotes",
      "parameters": [
        {
          "name": "If-Modified-Since",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "DateFrom",
          "schema": "string",
          "description": "Filter for quotes after a particular date"
        },
        {
          "name": "DateTo",
          "schema": "string",
          "description": "Filter for quotes before a particular date"
        },
        {
          "name": "ExpiryDateFrom",
          "schema": "string",
          "description": "Filter for quotes expiring after a particular date"
        },
        {
          "name": "ExpiryDateTo",
          "schema": "string",
          "description": "Filter for quotes before a particular date"
        },
        {
          "name": "ContactID",
          "schema": "string",
          "description": "Filter for quotes belonging to a particular contact"
        },
        {
          "name": "Status",
          "schema": "string",
          "description": "Filter for quotes of a particular Status"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "e.g. page=1 – Up to 100 Quotes will be returned in a single API call with line items shown for each quote"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        },
        {
          "name": "QuoteNumber",
          "schema": "string",
          "description": "Filter by quote number (e.g. GET https://.../Quotes?QuoteNumber=QU-0001)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Quotes",
      "method": "updateOrCreateQuotes",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates or creates one or more quotes",
      "parameters": [
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "Quotes",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Quotes",
      "method": "createQuotes",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Create one or more quotes",
      "parameters": [
        {
          "name": "summarizeErrors",
          "schema": "boolean",
          "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
        },
        {
          "name": "Quotes",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Quotes/{QuoteID}",
      "method": "getQuote",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific quote using a unique quote Id",
      "parameters": [
        {
          "name": "QuoteID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Quote"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Quotes/{QuoteID}",
      "method": "updateQuote",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a specific quote",
      "parameters": [
        {
          "name": "QuoteID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Quote"
        },
        {
          "name": "Quotes",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Quotes/{QuoteID}/Attachments",
      "method": "getQuoteAttachments",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves attachments for a specific quote",
      "parameters": [
        {
          "name": "QuoteID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for Quote object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Quotes/{QuoteID}/Attachments/{AttachmentID}",
      "method": "getQuoteAttachmentById",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific attachment from a specific quote using a unique attachment Id",
      "parameters": [
        {
          "name": "QuoteID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for Quote object"
        },
        {
          "name": "AttachmentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for Attachment object"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Quotes/{QuoteID}/Attachments/{FileName}",
      "method": "getQuoteAttachmentByFileName",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific attachment from a specific quote by filename",
      "parameters": [
        {
          "name": "QuoteID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for Quote object"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "Name of the attachment"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Quotes/{QuoteID}/Attachments/{FileName}",
      "method": "updateQuoteAttachmentByFileName",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a specific attachment from a specific quote by filename",
      "parameters": [
        {
          "name": "QuoteID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for Quote object"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "Name of the attachment"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Quotes/{QuoteID}/Attachments/{FileName}",
      "method": "createQuoteAttachmentByFileName",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates attachment for a specific quote",
      "parameters": [
        {
          "name": "QuoteID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for Quote object"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "Name of the attachment"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Quotes/{QuoteID}/History",
      "method": "getQuoteHistory",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves history records of a specific quote",
      "parameters": [
        {
          "name": "QuoteID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Quote"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Quotes/{QuoteID}/History",
      "method": "createQuoteHistory",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a history record for a specific quote",
      "parameters": [
        {
          "name": "QuoteID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Quote"
        },
        {
          "name": "HistoryRecords",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Quotes/{QuoteID}/pdf",
      "method": "getQuoteAsPdf",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific quote as a PDF file using a unique quote Id",
      "parameters": [
        {
          "name": "QuoteID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for an Quote"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Receipts",
      "method": "getReceipts",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves draft expense claim receipts for any user",
      "parameters": [
        {
          "name": "If-Modified-Since",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Receipts",
      "method": "createReceipt",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates draft expense claim receipts for any user",
      "parameters": [
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        },
        {
          "name": "Receipts",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Receipts/{ReceiptID}",
      "method": "getReceipt",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific draft expense claim receipt by using a unique receipt Id",
      "parameters": [
        {
          "name": "ReceiptID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Receipt"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Receipts/{ReceiptID}",
      "method": "updateReceipt",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a specific draft expense claim receipts",
      "parameters": [
        {
          "name": "ReceiptID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Receipt"
        },
        {
          "name": "unitdp",
          "schema": "integer",
          "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
        },
        {
          "name": "Receipts",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Receipts/{ReceiptID}/Attachments",
      "method": "getReceiptAttachments",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves attachments for a specific expense claim receipt",
      "parameters": [
        {
          "name": "ReceiptID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Receipt"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Receipts/{ReceiptID}/Attachments/{AttachmentID}",
      "method": "getReceiptAttachmentById",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific attachments from a specific expense claim receipts by using a unique attachment Id",
      "parameters": [
        {
          "name": "ReceiptID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Receipt"
        },
        {
          "name": "AttachmentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Attachment"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Receipts/{ReceiptID}/Attachments/{FileName}",
      "method": "getReceiptAttachmentByFileName",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific attachment from a specific expense claim receipts by file name",
      "parameters": [
        {
          "name": "ReceiptID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Receipt"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "The name of the file being attached to the Receipt"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Receipts/{ReceiptID}/Attachments/{FileName}",
      "method": "updateReceiptAttachmentByFileName",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a specific attachment on a specific expense claim receipts by file name",
      "parameters": [
        {
          "name": "ReceiptID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Receipt"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "The name of the file being attached to the Receipt"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Receipts/{ReceiptID}/Attachments/{FileName}",
      "method": "createReceiptAttachmentByFileName",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates an attachment on a specific expense claim receipts by file name",
      "parameters": [
        {
          "name": "ReceiptID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Receipt"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "The name of the file being attached to the Receipt"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Receipts/{ReceiptID}/History",
      "method": "getReceiptHistory",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a history record for a specific receipt",
      "parameters": [
        {
          "name": "ReceiptID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Receipt"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Receipts/{ReceiptID}/History",
      "method": "createReceiptHistory",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a history record for a specific receipt",
      "parameters": [
        {
          "name": "ReceiptID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Receipt"
        },
        {
          "name": "HistoryRecords",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/RepeatingInvoices",
      "method": "getRepeatingInvoices",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves repeating invoices",
      "parameters": [
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/RepeatingInvoices/{RepeatingInvoiceID}",
      "method": "getRepeatingInvoice",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific repeating invoice by using a unique repeating invoice Id",
      "parameters": [
        {
          "name": "RepeatingInvoiceID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Repeating Invoice"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/RepeatingInvoices/{RepeatingInvoiceID}/Attachments",
      "method": "getRepeatingInvoiceAttachments",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves attachments from a specific repeating invoice",
      "parameters": [
        {
          "name": "RepeatingInvoiceID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Repeating Invoice"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{AttachmentID}",
      "method": "getRepeatingInvoiceAttachmentById",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific attachment from a specific repeating invoice",
      "parameters": [
        {
          "name": "RepeatingInvoiceID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Repeating Invoice"
        },
        {
          "name": "AttachmentID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Attachment"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{FileName}",
      "method": "getRepeatingInvoiceAttachmentByFileName",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific attachment from a specific repeating invoices by file name",
      "parameters": [
        {
          "name": "RepeatingInvoiceID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Repeating Invoice"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "The name of the file being attached to a Repeating Invoice"
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{FileName}",
      "method": "updateRepeatingInvoiceAttachmentByFileName",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a specific attachment from a specific repeating invoices by file name",
      "parameters": [
        {
          "name": "RepeatingInvoiceID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Repeating Invoice"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "The name of the file being attached to a Repeating Invoice"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{FileName}",
      "method": "createRepeatingInvoiceAttachmentByFileName",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates an attachment from a specific repeating invoices by file name",
      "parameters": [
        {
          "name": "RepeatingInvoiceID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Repeating Invoice"
        },
        {
          "name": "FileName",
          "schema": "string",
          "required": true,
          "description": "The name of the file being attached to a Repeating Invoice"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/RepeatingInvoices/{RepeatingInvoiceID}/History",
      "method": "getRepeatingInvoiceHistory",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves history record for a specific repeating invoice",
      "parameters": [
        {
          "name": "RepeatingInvoiceID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Repeating Invoice"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/RepeatingInvoices/{RepeatingInvoiceID}/History",
      "method": "createRepeatingInvoiceHistory",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates a  history record for a specific repeating invoice",
      "parameters": [
        {
          "name": "RepeatingInvoiceID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Repeating Invoice"
        },
        {
          "name": "HistoryRecords",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Reports",
      "method": "getReportBaSorGstList",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves report for BAS (only valid for AU orgs)",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Reports/AgedPayablesByContact",
      "method": "getReportAgedPayablesByContact",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves report for aged payables by contact",
      "parameters": [
        {
          "name": "contactId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Contact"
        },
        {
          "name": "date",
          "schema": "string",
          "description": "The date of the Aged Payables By Contact report"
        },
        {
          "name": "fromDate",
          "schema": "string",
          "description": "The from date of the Aged Payables By Contact report"
        },
        {
          "name": "toDate",
          "schema": "string",
          "description": "The to date of the Aged Payables By Contact report"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Reports/AgedReceivablesByContact",
      "method": "getReportAgedReceivablesByContact",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves report for aged receivables by contact",
      "parameters": [
        {
          "name": "contactId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Contact"
        },
        {
          "name": "date",
          "schema": "string",
          "description": "The date of the Aged Receivables By Contact report"
        },
        {
          "name": "fromDate",
          "schema": "string",
          "description": "The from date of the Aged Receivables By Contact report"
        },
        {
          "name": "toDate",
          "schema": "string",
          "description": "The to date of the Aged Receivables By Contact report"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Reports/BalanceSheet",
      "method": "getReportBalanceSheet",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves report for balancesheet",
      "parameters": [
        {
          "name": "date",
          "schema": "string",
          "description": "The date of the Balance Sheet report"
        },
        {
          "name": "periods",
          "schema": "integer",
          "description": "The number of periods for the Balance Sheet report"
        },
        {
          "name": "timeframe",
          "schema": "string",
          "description": "The period size to compare to (MONTH, QUARTER, YEAR)"
        },
        {
          "name": "trackingOptionID1",
          "schema": "string",
          "description": "The tracking option 1 for the Balance Sheet report"
        },
        {
          "name": "trackingOptionID2",
          "schema": "string",
          "description": "The tracking option 2 for the Balance Sheet report"
        },
        {
          "name": "standardLayout",
          "schema": "boolean",
          "description": "The standard layout boolean for the Balance Sheet report"
        },
        {
          "name": "paymentsOnly",
          "schema": "boolean",
          "description": "return a cash basis for the Balance Sheet report"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Reports/BankSummary",
      "method": "getReportBankSummary",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves report for bank summary",
      "parameters": [
        {
          "name": "fromDate",
          "schema": "string",
          "description": "The from date for the Bank Summary report e.g. 2018-03-31"
        },
        {
          "name": "toDate",
          "schema": "string",
          "description": "The to date for the Bank Summary report e.g. 2018-03-31"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Reports/BudgetSummary",
      "method": "getReportBudgetSummary",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves report for budget summary",
      "parameters": [
        {
          "name": "date",
          "schema": "string",
          "description": "The date for the Bank Summary report e.g. 2018-03-31"
        },
        {
          "name": "period",
          "schema": "integer",
          "description": "The number of periods to compare (integer between 1 and 12)"
        },
        {
          "name": "timeframe",
          "schema": "integer",
          "description": "The period size to compare to (1=month, 3=quarter, 12=year)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Reports/ExecutiveSummary",
      "method": "getReportExecutiveSummary",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves report for executive summary",
      "parameters": [
        {
          "name": "date",
          "schema": "string",
          "description": "The date for the Bank Summary report e.g. 2018-03-31"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Reports/ProfitAndLoss",
      "method": "getReportProfitAndLoss",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves report for profit and loss",
      "parameters": [
        {
          "name": "fromDate",
          "schema": "string",
          "description": "The from date for the ProfitAndLoss report e.g. 2018-03-31"
        },
        {
          "name": "toDate",
          "schema": "string",
          "description": "The to date for the ProfitAndLoss report e.g. 2018-03-31"
        },
        {
          "name": "periods",
          "schema": "integer",
          "description": "The number of periods to compare (integer between 1 and 12)"
        },
        {
          "name": "timeframe",
          "schema": "string",
          "description": "The period size to compare to (MONTH, QUARTER, YEAR)"
        },
        {
          "name": "trackingCategoryID",
          "schema": "string",
          "description": "The trackingCategory 1 for the ProfitAndLoss report"
        },
        {
          "name": "trackingCategoryID2",
          "schema": "string",
          "description": "The trackingCategory 2 for the ProfitAndLoss report"
        },
        {
          "name": "trackingOptionID",
          "schema": "string",
          "description": "The tracking option 1 for the ProfitAndLoss report"
        },
        {
          "name": "trackingOptionID2",
          "schema": "string",
          "description": "The tracking option 2 for the ProfitAndLoss report"
        },
        {
          "name": "standardLayout",
          "schema": "boolean",
          "description": "Return the standard layout for the ProfitAndLoss report"
        },
        {
          "name": "paymentsOnly",
          "schema": "boolean",
          "description": "Return cash only basis for the ProfitAndLoss report"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Reports/TenNinetyNine",
      "method": "getReportTenNinetyNine",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieve reports for 1099",
      "parameters": [
        {
          "name": "reportYear",
          "schema": "string",
          "description": "The year of the 1099 report"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Reports/TrialBalance",
      "method": "getReportTrialBalance",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves report for trial balance",
      "parameters": [
        {
          "name": "date",
          "schema": "string",
          "description": "The date for the Trial Balance report e.g. 2018-03-31"
        },
        {
          "name": "paymentsOnly",
          "schema": "boolean",
          "description": "Return cash only basis for the Trial Balance report"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Reports/{ReportID}",
      "method": "getReportBaSorGst",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific report for BAS using a unique report Id (only valid for AU orgs)",
      "parameters": [
        {
          "name": "ReportID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Report"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Setup",
      "method": "postSetup",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Sets the chart of accounts, the conversion date and conversion balances",
      "parameters": [
        {
          "name": "Accounts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "ConversionBalances",
          "schema": "array",
          "description": ""
        },
        {
          "name": "ConversionDate",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/TaxRates",
      "method": "getTaxRates",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves tax rates",
      "parameters": [
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        },
        {
          "name": "TaxType",
          "schema": "string",
          "description": "Filter by tax type"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/TaxRates",
      "method": "updateTaxRate",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates tax rates",
      "parameters": [
        {
          "name": "TaxRates",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/TaxRates",
      "method": "createTaxRates",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates one or more tax rates",
      "parameters": [
        {
          "name": "TaxRates",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/TrackingCategories",
      "method": "getTrackingCategories",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves tracking categories and options",
      "parameters": [
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        },
        {
          "name": "includeArchived",
          "schema": "boolean",
          "description": "e.g. includeArchived=true - Categories and options with a status of ARCHIVED will be included in the response"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/TrackingCategories",
      "method": "createTrackingCategory",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Create tracking categories",
      "parameters": [
        {
          "name": "Name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Option",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Options",
          "schema": "array",
          "description": ""
        },
        {
          "name": "Status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "TrackingCategoryID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "TrackingOptionID",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/TrackingCategories/{TrackingCategoryID}",
      "method": "deleteTrackingCategory",
      "httpMethod": "delete",
      "tag": "Accounting",
      "description": "Deletes a specific tracking category",
      "parameters": [
        {
          "name": "TrackingCategoryID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a TrackingCategory"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/TrackingCategories/{TrackingCategoryID}",
      "method": "getTrackingCategory",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves specific tracking categories and options using a unique tracking category Id",
      "parameters": [
        {
          "name": "TrackingCategoryID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a TrackingCategory"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/TrackingCategories/{TrackingCategoryID}",
      "method": "updateTrackingCategory",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a specific tracking category",
      "parameters": [
        {
          "name": "TrackingCategoryID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a TrackingCategory"
        },
        {
          "name": "Name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Option",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Options",
          "schema": "array",
          "description": ""
        },
        {
          "name": "Status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "TrackingCategoryID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "TrackingOptionID",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/TrackingCategories/{TrackingCategoryID}/Options",
      "method": "createTrackingOptions",
      "httpMethod": "put",
      "tag": "Accounting",
      "description": "Creates options for a specific tracking category",
      "parameters": [
        {
          "name": "TrackingCategoryID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a TrackingCategory"
        },
        {
          "name": "Name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "TrackingCategoryID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "TrackingOptionID",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/TrackingCategories/{TrackingCategoryID}/Options/{TrackingOptionID}",
      "method": "deleteTrackingOptions",
      "httpMethod": "delete",
      "tag": "Accounting",
      "description": "Deletes a specific option for a specific tracking category",
      "parameters": [
        {
          "name": "TrackingCategoryID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a TrackingCategory"
        },
        {
          "name": "TrackingOptionID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Tracking Option"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/TrackingCategories/{TrackingCategoryID}/Options/{TrackingOptionID}",
      "method": "updateTrackingOptions",
      "httpMethod": "post",
      "tag": "Accounting",
      "description": "Updates a specific option for a specific tracking category",
      "parameters": [
        {
          "name": "TrackingCategoryID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a TrackingCategory"
        },
        {
          "name": "TrackingOptionID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a Tracking Option"
        },
        {
          "name": "Name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "TrackingCategoryID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "TrackingOptionID",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Users",
      "method": "getUsers",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves users",
      "parameters": [
        {
          "name": "If-Modified-Since",
          "schema": "string",
          "description": "Only records created or modified since this timestamp will be returned"
        },
        {
          "name": "where",
          "schema": "string",
          "description": "Filter by an any element"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order by an any element"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Users/{UserID}",
      "method": "getUser",
      "httpMethod": "get",
      "tag": "Accounting",
      "description": "Retrieves a specific user",
      "parameters": [
        {
          "name": "UserID",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a User"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.xero.com/api.xro/2.0",
  "apiTitle": "Xero Accounting API",
  "endpoints": 132,
  "sdkMethods": 357,
  "schemas": 126,
  "parameters": 555,
  "contactUrl": "https://developer.xero.com",
  "contactEmail": "api@xero.com",
  "difficultyScore": 558.75,
  "difficulty": "Very Hard"
}