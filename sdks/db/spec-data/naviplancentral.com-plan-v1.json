{
  "providerName": "naviplancentral.com",
  "openApiRaw": "https://demo.uat.naviplancentral.com/plan/swagger/docs/v1",
  "homepage": "naviplancentral.com",
  "serviceName": "plan",
  "apiVersion": "v1",
  "methods": [
    {
      "url": "/api/Advisors",
      "method": "advisorsGet",
      "httpMethod": "get",
      "tag": "Advisors",
      "description": "Retrieve Advisors",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Advisors/{householdId}/{clientId}",
      "method": "advisorsGetByHouseholdidClientid",
      "httpMethod": "get",
      "tag": "Advisors",
      "description": "Retrieve Advisors for a Client",
      "parameters": [
        {
          "name": "householdId",
          "schema": "integer",
          "required": true,
          "description": "Integer id of the household"
        },
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": "Guid id of the client."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Advisors/{id}",
      "method": "advisorsGetById",
      "httpMethod": "get",
      "tag": "Advisors",
      "description": "Retrieve an Advisor",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Guid id of the advisor"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Assumptions",
      "method": "assumptionsGetByPlanid",
      "httpMethod": "get",
      "tag": "Assumptions",
      "description": "Retrieve plan assumptions",
      "parameters": [
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/BusinessEntities",
      "method": "businessEntitiesGetByPlanid",
      "httpMethod": "get",
      "tag": "BusinessEntities",
      "description": "Retrieve business entities",
      "parameters": [
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/BusinessEntities/{id}",
      "method": "businessEntitiesGetByIdPlanid",
      "httpMethod": "get",
      "tag": "BusinessEntities",
      "description": "Retrieve a business entity",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of business entity to retrieve"
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Calculations/MonteCarlo",
      "method": "calculationsGetByPlanid",
      "httpMethod": "get",
      "tag": "Calculations",
      "description": "Retrieve Monte Carlo results from standalone calc service",
      "parameters": [
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/DefinedBenefitPensions",
      "method": "definedBenefitPensionsGetByPlanid",
      "httpMethod": "get",
      "tag": "DefinedBenefitPensions",
      "description": "Retrieve defined benefit pensions",
      "parameters": [
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/DefinedBenefitPensions/{id}",
      "method": "definedBenefitPensionsGetByIdPlanid",
      "httpMethod": "get",
      "tag": "DefinedBenefitPensions",
      "description": "Retrieve a definedBenefitPension",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of defined benefit pension to retrieve"
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Eula/Accept",
      "method": "eulaAccept",
      "httpMethod": "post",
      "tag": "Eula",
      "description": "Accepts the EULA",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/api/Family",
      "method": "familyGetByPlanid",
      "httpMethod": "get",
      "tag": "Family",
      "description": "Retrieve family",
      "parameters": [
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/GoalAdjustments/Education/{id}/Adjustments",
      "method": "goalAdjustmentsGetEducationByIdClientidPlanid",
      "httpMethod": "get",
      "tag": "GoalAdjustments",
      "description": "Retrieve the adjustments",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The id of the goal to retrieve adjustments for."
        },
        {
          "name": "clientId",
          "schema": "string",
          "required": false,
          "description": "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions."
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the Plan to retrieve or update data for (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/GoalAdjustments/Education/{id}/Calculations",
      "method": "goalAdjustmentsPostEducationByIdGoaladjustmentsPlanid",
      "httpMethod": "post",
      "tag": "GoalAdjustments",
      "description": "Perform calculations",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The id of the goal to retrieve adjustments for."
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the Plan to retrieve or update data for (e.g. 1001-11-3)."
        },
        {
          "name": "adjustedValues",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/GoalAdjustments/GoalSuccessRates",
      "method": "goalAdjustmentsGetGoalSuccessRatesByClientidPlanid",
      "httpMethod": "get",
      "tag": "GoalAdjustments",
      "description": "Returns a list of goals with their relevant success rates.",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": false,
          "description": "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions."
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the Plan to retrieve or update data for (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/GoalAdjustments/MajorPurchase/{id}/Adjustments",
      "method": "goalAdjustmentsGetMajorPurchaseByIdClientidPlanid",
      "httpMethod": "get",
      "tag": "GoalAdjustments",
      "description": "Retrieve the adjustments",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The id of the goal to retrieve adjustments for."
        },
        {
          "name": "clientId",
          "schema": "string",
          "required": false,
          "description": "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions."
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the Plan to retrieve or update data for (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/GoalAdjustments/MajorPurchase/{id}/Calculations",
      "method": "goalAdjustmentsPostMajorPurchaseByIdGoaladjustmentsPlanid",
      "httpMethod": "post",
      "tag": "GoalAdjustments",
      "description": "Perform calculations",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The id of the goal to retrieve adjustments for."
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the Plan to retrieve or update data for (e.g. 1001-11-3)."
        },
        {
          "name": "adjustedValues",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/GoalAdjustments/Restrictions",
      "method": "goalAdjustmentsGetGoalAdjustmentRestrictionsByClientidPlanid",
      "httpMethod": "get",
      "tag": "GoalAdjustments",
      "description": "Returns a list of goal adjustment restrictions.",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": false,
          "description": "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions."
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the Plan to retrieve or update data for (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/GoalAdjustments/Retirement/Adjustments",
      "method": "goalAdjustmentsGetRetirementByClientidPlanid",
      "httpMethod": "get",
      "tag": "GoalAdjustments",
      "description": "Retrieve the adjustments",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": false,
          "description": "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions."
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the Plan to retrieve or update data for (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/GoalAdjustments/Retirement/Calculations",
      "method": "goalAdjustmentsPostRetirementByGoaladjustmentsPlanid",
      "httpMethod": "post",
      "tag": "GoalAdjustments",
      "description": "Perform calculations",
      "parameters": [
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the Plan to retrieve or update data for (e.g. 1001-11-3)."
        },
        {
          "name": "adjustedValues",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/GoalAdjustments/{id}/WhatAreMyOptions",
      "method": "goalAdjustmentsGetWhatAreMyOptionsByIdClientidPlanid",
      "httpMethod": "get",
      "tag": "GoalAdjustments",
      "description": "Returns WAMO values for current goal",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The id of the goal to retrieve WAMO values for."
        },
        {
          "name": "clientId",
          "schema": "string",
          "required": false,
          "description": "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions."
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the Plan to retrieve or update data for (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Goals",
      "method": "goalsGetByPlanid",
      "httpMethod": "get",
      "tag": "Goals",
      "description": "Retrieve goals",
      "parameters": [
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Goals/{id}",
      "method": "goalsGetByIdPlanid",
      "httpMethod": "get",
      "tag": "Goals",
      "description": "Retrieve goals",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of goal to retrieve"
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/HoldingCompanies",
      "method": "holdingCompaniesGetByPlanid",
      "httpMethod": "get",
      "tag": "HoldingCompanies",
      "description": "Retrieve holding companies",
      "parameters": [
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/HoldingCompanies/{id}",
      "method": "holdingCompaniesGetByIdPlanid",
      "httpMethod": "get",
      "tag": "HoldingCompanies",
      "description": "Retrieve a holding company",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of holding company to retrieve"
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Households",
      "method": "householdsGetByHouseholdid",
      "httpMethod": "get",
      "tag": "Households",
      "description": "Retrieve all Households associated with the user",
      "parameters": [
        {
          "name": "householdId",
          "schema": "integer",
          "required": false,
          "description": "The Id of the specific household to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Liabilities",
      "method": "liabilitiesGetByPlanid",
      "httpMethod": "get",
      "tag": "Liabilities",
      "description": "Retrieve liabilities",
      "parameters": [
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Liabilities/{id}",
      "method": "liabilitiesGetByIdPlanid",
      "httpMethod": "get",
      "tag": "Liabilities",
      "description": "Retrieve a liability",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of liability to retrieve"
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/LifestyleAssets",
      "method": "lifestyleAssetsGetByPlanid",
      "httpMethod": "get",
      "tag": "LifestyleAssets",
      "description": "Retrieve lifestyle assets",
      "parameters": [
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/LifestyleAssets/{id}",
      "method": "lifestyleAssetsGetByIdPlanid",
      "httpMethod": "get",
      "tag": "LifestyleAssets",
      "description": "Retrieve lifestyle assets",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of lifestyle asset to retrieve"
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/LivePlan/Goals",
      "method": "livePlanGetGoalsByClientidPlanid",
      "httpMethod": "get",
      "tag": "LivePlan",
      "description": "Retrieves all goals from the live plan",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": false,
          "description": "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions."
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the Plan to retrieve or update data for (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/LivePlan/Goals/Funding",
      "method": "livePlanGetGoalFundingListByClientidPlanid",
      "httpMethod": "get",
      "tag": "LivePlan",
      "description": "Retrieve a list of funding accounts",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": false,
          "description": "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions."
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the Plan to retrieve or update data for (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/LivePlan/Goals/{id}/WhatAreMyOptions",
      "method": "livePlanGetWhatAreMyOptionsByIdClientidPlanid",
      "httpMethod": "get",
      "tag": "LivePlan",
      "description": "Retrieve WAMO values for a given goal",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The id of the goal"
        },
        {
          "name": "clientId",
          "schema": "string",
          "required": false,
          "description": "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions."
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the Plan to retrieve or update data for (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/LivePlan/NetWorth/Accounts",
      "method": "livePlanGetAccountsByClientidPlanid",
      "httpMethod": "get",
      "tag": "LivePlan",
      "description": "Retrieves accounts for a given plan",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": false,
          "description": "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions."
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the Plan to retrieve or update data for (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/LivePlan/NetWorth/Liabilities",
      "method": "livePlanGetLiabilitiesByClientidPlanid",
      "httpMethod": "get",
      "tag": "LivePlan",
      "description": "Retrieves liabilities for a given plan",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": false,
          "description": "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions."
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the Plan to retrieve or update data for (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/LivePlan/NetWorth/LifestyleAssets",
      "method": "livePlanGetLifestyleAssetsByClientidPlanid",
      "httpMethod": "get",
      "tag": "LivePlan",
      "description": "Retrieves lifestyle assets for a given plan",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": false,
          "description": "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions."
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the Plan to retrieve or update data for (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/LivePlan/NetWorth/RealEstate",
      "method": "livePlanGetRealEstateAssetsByClientidPlanid",
      "httpMethod": "get",
      "tag": "LivePlan",
      "description": "Retrieves real estate accounts for a given plan",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": false,
          "description": "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions."
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the Plan to retrieve or update data for (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/LivePlan/Projections/NetWorth",
      "method": "livePlanGetProjectedNetWorthByClientidPlanid",
      "httpMethod": "get",
      "tag": "LivePlan",
      "description": "Retrieves net worth projections",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": false,
          "description": "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions."
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the Plan to retrieve or update data for (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/LivePlan/Projections/{id}/NeedsVsAbilities",
      "method": "livePlanGetProjectedNeedsVsAbilitiesByIdClientidPlanid",
      "httpMethod": "get",
      "tag": "LivePlan",
      "description": "Retrieves needs vs abilities projections",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "clientId",
          "schema": "string",
          "required": false,
          "description": "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions."
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the Plan to retrieve or update data for (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/NetWorth",
      "method": "netWorthGetByPlanid",
      "httpMethod": "get",
      "tag": "NetWorth",
      "description": "Retrieve net worth",
      "parameters": [
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/Password/HasUserSetPassword",
      "method": "passwordHasUserSetPassword",
      "httpMethod": "post",
      "tag": "Password",
      "description": "Determines if the currently logged in user has set their own password",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/api/Password/PasswordRequirements",
      "method": "passwordPasswordRequirements",
      "httpMethod": "get",
      "tag": "Password",
      "description": "Gets the password complexity requirements",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/api/Password/Reset",
      "method": "passwordResetByModel",
      "httpMethod": "post",
      "tag": "Password",
      "description": "Resets the password for the supplied user name",
      "parameters": [
        {
          "name": "locale",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "userName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/Password/Set",
      "method": "passwordSetByModel",
      "httpMethod": "post",
      "tag": "Password",
      "description": "Sets the password for the currently logged in user",
      "parameters": [
        {
          "name": "newPassword",
          "schema": "string",
          "description": ""
        },
        {
          "name": "oldPassword",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/PlanInformation",
      "method": "planInformationGetByPlanid",
      "httpMethod": "get",
      "tag": "PlanInformation",
      "description": "Retrieve plan information",
      "parameters": [
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/PlanStatuses",
      "method": "planStatusesGetByPlanid",
      "httpMethod": "get",
      "tag": "PlanStatuses",
      "description": "Retrieve plan data statuses",
      "parameters": [
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/PortfolioAccounts",
      "method": "portfolioAccountsGetByPlanid",
      "httpMethod": "get",
      "tag": "PortfolioAccounts",
      "description": "Retrieve portfolio accounts",
      "parameters": [
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/PortfolioAccounts/{id}",
      "method": "portfolioAccountsGetByIdPlanid",
      "httpMethod": "get",
      "tag": "PortfolioAccounts",
      "description": "Retrieve a portfolio account",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of portfolio account to retrieve"
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/ProjectedAnnualSummary",
      "method": "projectedAnnualSummaryGetByPlanid",
      "httpMethod": "get",
      "tag": "ProjectedAnnualSummary",
      "description": "Retrieve projected annual summaries",
      "parameters": [
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/ProjectedAnnualSummary/{id}",
      "method": "projectedAnnualSummaryGetByIdPlanid",
      "httpMethod": "get",
      "tag": "ProjectedAnnualSummary",
      "description": "Retrieve projected annual summary by id",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Index into the list of annual projections"
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/ProjectedCashFlow",
      "method": "projectedCashFlowGetByPlanid",
      "httpMethod": "get",
      "tag": "ProjectedCashFlow",
      "description": "Retrieve projected cash flow",
      "parameters": [
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/ProjectedCashFlow/{id}",
      "method": "projectedCashFlowGetByIdPlanid",
      "httpMethod": "get",
      "tag": "ProjectedCashFlow",
      "description": "Retrieve projected cash flow by id",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Index into the list of annual projections"
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/ProjectedGoals/AssetsFundingGoals",
      "method": "projectedGoalsGetAssetsFundingGoalsByPlanid",
      "httpMethod": "get",
      "tag": "ProjectedGoals",
      "description": "Retrieve assets funding goals over time",
      "parameters": [
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/ProjectedGoals/NeedsVsAbilities",
      "method": "projectedGoalsGetNeedsVsAbilitiesByPlanid",
      "httpMethod": "get",
      "tag": "ProjectedGoals",
      "description": "Retrieve needs vs abilities data",
      "parameters": [
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/ProjectedNetWorth",
      "method": "projectedNetWorthGetByPlanid",
      "httpMethod": "get",
      "tag": "ProjectedNetWorth",
      "description": "Retrieve projected net worth",
      "parameters": [
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/ProjectedNetWorth/{id}",
      "method": "projectedNetWorthGetByIdPlanid",
      "httpMethod": "get",
      "tag": "ProjectedNetWorth",
      "description": "Retrieve projected net worth by id",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Index into the list of annual projections"
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/RestrictedStocks",
      "method": "restrictedStocksGetByPlanid",
      "httpMethod": "get",
      "tag": "RestrictedStocks",
      "description": "Retrieve restricted stocks",
      "parameters": [
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/RestrictedStocks/{id}",
      "method": "restrictedStocksGetByIdPlanid",
      "httpMethod": "get",
      "tag": "RestrictedStocks",
      "description": "Retrieve a restricted stock",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of restricted stock to retrieve"
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/ServiceInformation/Statistics",
      "method": "serviceInformationStatistics",
      "httpMethod": "get",
      "tag": "ServiceInformation",
      "description": "This resource can be used to check the status of the service.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/StockOptions",
      "method": "stockOptionsGetByPlanid",
      "httpMethod": "get",
      "tag": "StockOptions",
      "description": "Retrieve stock options",
      "parameters": [
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/StockOptions/{id}",
      "method": "stockOptionsGetByIdPlanid",
      "httpMethod": "get",
      "tag": "StockOptions",
      "description": "Retrieve a stock option",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "ID of stock option to retrieve"
        },
        {
          "name": "planId",
          "schema": "string",
          "required": true,
          "description": "Id of the plan to retrieve data from (e.g. 1001-11-3)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/auth/Login",
      "method": "authLoginByModel",
      "httpMethod": "post",
      "tag": "Auth",
      "description": "Start a session with the DomainProviders user store",
      "parameters": [
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/auth/LoginConfiguration",
      "method": "authPasswordRequirements",
      "httpMethod": "get",
      "tag": "Auth",
      "description": "Gets the login rules",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/api/auth/Logout",
      "method": "authLogout",
      "httpMethod": "post",
      "tag": "Auth",
      "description": "",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/api/auth/ResumeSession",
      "method": "authResumeSession",
      "httpMethod": "post",
      "tag": "Auth",
      "description": "Validate and extend the duration of a session",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://demo.uat.naviplancentral.com/plan",
  "apiDescription": "An API for accessing NaviPlan plan data for a client.",
  "apiTitle": "NaviPlan API",
  "endpoints": 64,
  "sdkMethods": 64,
  "schemas": 225,
  "parameters": 97,
  "difficultyScore": 200.75,
  "difficulty": "Hard"
}