{
  "providerName": "fire.com",
  "openApiRaw": "https://raw.githubusercontent.com/firefinancialservices/fire-business-api-openapi/master/fire-business-api-v1.yaml",
  "securitySchemes": {
    "bearerAuth": {
      "bearerFormat": "API Access Token",
      "scheme": "bearer",
      "type": "http"
    }
  },
  "categories": [
    "financial"
  ],
  "homepage": "fire.com",
  "apiVersion": "1.0",
  "methods": [
    {
      "url": "/v1/accounts",
      "method": "getAccounts",
      "httpMethod": "get",
      "tag": "Accounts",
      "typeScriptTag": "accounts",
      "description": "List all fire.com Accounts",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/accounts",
      "method": "addAccount",
      "httpMethod": "post",
      "tag": "Accounts",
      "typeScriptTag": "accounts",
      "description": "Add a new account",
      "parameters": [
        {
          "name": "acceptFeesAndCharges",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "accountName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/accounts/{ican}",
      "method": "getAccountById",
      "httpMethod": "get",
      "tag": "Accounts",
      "typeScriptTag": "accounts",
      "description": "Retrieve the details of a fire.com Account",
      "parameters": [
        {
          "name": "ican",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/accounts/{ican}/transactions",
      "method": "getTransactionsByAccountIdv1",
      "httpMethod": "get",
      "tag": "Transactions",
      "typeScriptTag": "transactions",
      "description": "List transactions for an account (v1)",
      "parameters": [
        {
          "name": "ican",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/accounts/{ican}/transactions/filter",
      "method": "getTransactionsByAccountIdFiltered",
      "httpMethod": "get",
      "tag": "Transactions",
      "typeScriptTag": "transactions",
      "description": "Filtered list of transactions for an account (v1)",
      "parameters": [
        {
          "name": "ican",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "dateRangeFrom",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "dateRangeTo",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "searchKeyword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "transactionTypes",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/apps",
      "method": "createApiApplication",
      "httpMethod": "post",
      "tag": "API",
      "typeScriptTag": "api",
      "description": "Create a new API Application",
      "parameters": [
        {
          "name": "applicationName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "expiry",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ican",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "numberOfPayeeApprovalsRequired",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "numberOfPaymentApprovalsRequired",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "permissions",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/apps/accesstokens",
      "method": "authenticate",
      "httpMethod": "post",
      "tag": "Authentication",
      "typeScriptTag": "authentication",
      "description": "Authenticate with the API.",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "clientSecret",
          "schema": "string",
          "description": ""
        },
        {
          "name": "grantType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "nonce",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "refreshToken",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/aspsps",
      "method": "getListOfAspsps",
      "httpMethod": "get",
      "tag": "Open Banking",
      "typeScriptTag": "openBanking",
      "description": "Get list of ASPSPs / Banks",
      "parameters": [
        {
          "name": "currency",
          "schema": "string",
          "required": false,
          "description": "The three letter code for the currency - either `EUR` or `GBP`. Use this to filter the list for banks that can be used to pay in a certain currency."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/batches",
      "method": "getBatches",
      "httpMethod": "get",
      "tag": "Payment Batches",
      "typeScriptTag": "paymentBatches",
      "description": "List batches",
      "parameters": [
        {
          "name": "batchStatus",
          "schema": "string",
          "description": ""
        },
        {
          "name": "batchTypes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "orderBy",
          "schema": "string",
          "description": ""
        },
        {
          "name": "order",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/batches",
      "method": "createBatchPayment",
      "httpMethod": "post",
      "tag": "Payment Batches",
      "typeScriptTag": "paymentBatches",
      "description": "Create a new batch of payments",
      "parameters": [
        {
          "name": "batchName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "callbackUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "description": ""
        },
        {
          "name": "jobNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/batches/{batchUuid}",
      "method": "cancelBatchPayment",
      "httpMethod": "delete",
      "tag": "Payment Batches",
      "typeScriptTag": "paymentBatches",
      "description": "Cancel a batch",
      "parameters": [
        {
          "name": "batchUuid",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v1/batches/{batchUuid}",
      "method": "getDetailsSingleBatch",
      "httpMethod": "get",
      "tag": "Payment Batches",
      "typeScriptTag": "paymentBatches",
      "description": "Get details of a single Batch",
      "parameters": [
        {
          "name": "batchUuid",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/batches/{batchUuid}",
      "method": "submitBatch",
      "httpMethod": "put",
      "tag": "Payment Batches",
      "typeScriptTag": "paymentBatches",
      "description": "Submit a batch for approval",
      "parameters": [
        {
          "name": "batchUuid",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v1/batches/{batchUuid}/approvals",
      "method": "getListofApproversForBatch",
      "httpMethod": "get",
      "tag": "Payment Batches",
      "typeScriptTag": "paymentBatches",
      "description": "List Approvers for a Batch",
      "parameters": [
        {
          "name": "batchUuid",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/batches/{batchUuid}/banktransfers",
      "method": "getItemsBatchBankTransfer",
      "httpMethod": "get",
      "tag": "Payment Batches",
      "typeScriptTag": "paymentBatches",
      "description": "List items in a Batch (Bank Transfers)",
      "parameters": [
        {
          "name": "batchUuid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/batches/{batchUuid}/banktransfers",
      "method": "addBankTransferBatchPayment",
      "httpMethod": "post",
      "tag": "Payment Batches",
      "typeScriptTag": "paymentBatches",
      "description": "Add a bank transfer payment to the batch.",
      "parameters": [
        {
          "name": "batchUuid",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/batches/{batchUuid}/banktransfers/{itemUuid}",
      "method": "deleteBankTransferBatchPayment",
      "httpMethod": "delete",
      "tag": "Payment Batches",
      "typeScriptTag": "paymentBatches",
      "description": "Remove a Payment from the Batch (Bank Transfers)",
      "parameters": [
        {
          "name": "batchUuid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "itemUuid",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v1/batches/{batchUuid}/internaltransfers",
      "method": "getItemsBatchInternalTrasnfer",
      "httpMethod": "get",
      "tag": "Payment Batches",
      "typeScriptTag": "paymentBatches",
      "description": "List items in a Batch (Internal Transfers)",
      "parameters": [
        {
          "name": "batchUuid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/batches/{batchUuid}/internaltransfers",
      "method": "addInternalTransferBatchPayment",
      "httpMethod": "post",
      "tag": "Payment Batches",
      "typeScriptTag": "paymentBatches",
      "description": "Add an internal transfer payment to the batch",
      "parameters": [
        {
          "name": "batchUuid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "amount",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "icanFrom",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "icanTo",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ref",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/batches/{batchUuid}/internaltransfers/{itemUuid}",
      "method": "deleteInternalTransferBatchPayment",
      "httpMethod": "delete",
      "tag": "Payment Batches",
      "typeScriptTag": "paymentBatches",
      "description": "Remove a Payment from the Batch (Internal Transfer)",
      "parameters": [
        {
          "name": "batchUuid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "itemUuid",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v1/cards",
      "method": "getListofCards",
      "httpMethod": "get",
      "tag": "Cards",
      "typeScriptTag": "cards",
      "description": "View List of Cards.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/cards",
      "method": "createNewCard",
      "httpMethod": "post",
      "tag": "Cards",
      "typeScriptTag": "cards",
      "description": "Create a new debit card.",
      "parameters": [
        {
          "name": "acceptFeesAndCharges",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "addressType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "cardPin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "eurIcan",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "gbpIcan",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "userId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/cards/{cardId}/block",
      "method": "blockCard",
      "httpMethod": "post",
      "tag": "Cards",
      "typeScriptTag": "cards",
      "description": "Block a card",
      "parameters": [
        {
          "name": "cardId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v1/cards/{cardId}/transactions",
      "method": "getListofCardTransactions",
      "httpMethod": "get",
      "tag": "Cards",
      "typeScriptTag": "cards",
      "description": "List Card Transactions.",
      "parameters": [
        {
          "name": "cardId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/cards/{cardId}/unblock",
      "method": "unblockCard",
      "httpMethod": "post",
      "tag": "Cards",
      "typeScriptTag": "cards",
      "description": "Unblock a card",
      "parameters": [
        {
          "name": "cardId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v1/directdebits",
      "method": "getDirectDebitsForMandateUuid",
      "httpMethod": "get",
      "tag": "Direct Debits",
      "typeScriptTag": "directDebits",
      "description": "Get all DD payments associated with a direct debit mandate",
      "parameters": [
        {
          "name": "mandateUuid",
          "schema": "string",
          "required": true,
          "description": "The mandate UUID to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/directdebits/{directDebitUuid}",
      "method": "getDirectDebitByUuid",
      "httpMethod": "get",
      "tag": "Direct Debits",
      "typeScriptTag": "directDebits",
      "description": "Get the details of a direct debit",
      "parameters": [
        {
          "name": "directDebitUuid",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/directdebits/{directDebitUuid}/reject",
      "method": "rejectDirectDebit",
      "httpMethod": "post",
      "tag": "Direct Debits",
      "typeScriptTag": "directDebits",
      "description": "Reject a direct debit payment",
      "parameters": [
        {
          "name": "directDebitUuid",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v1/mandates",
      "method": "getDirectDebitMandates",
      "httpMethod": "get",
      "tag": "Direct Debits",
      "typeScriptTag": "directDebits",
      "description": "List all direct debit mandates",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/mandates/{mandateUuid}",
      "method": "getMandate",
      "httpMethod": "get",
      "tag": "Direct Debits",
      "typeScriptTag": "directDebits",
      "description": "Get direct debit mandate details",
      "parameters": [
        {
          "name": "mandateUuid",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/mandates/{mandateUuid}",
      "method": "updateMandateAlias",
      "httpMethod": "post",
      "tag": "Direct Debits",
      "typeScriptTag": "directDebits",
      "description": "Update a direct debit mandate alias",
      "parameters": [
        {
          "name": "mandateUuid",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v1/mandates/{mandateUuid}/activate",
      "method": "activateMandate",
      "httpMethod": "post",
      "tag": "Direct Debits",
      "typeScriptTag": "directDebits",
      "description": "Activate a direct debit mandate",
      "parameters": [
        {
          "name": "mandateUuid",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v1/mandates/{mandateUuid}/cancel",
      "method": "cancelMandateByUuid",
      "httpMethod": "post",
      "tag": "Direct Debits",
      "typeScriptTag": "directDebits",
      "description": "Cancel a direct debit mandate",
      "parameters": [
        {
          "name": "mandateUuid",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v1/payees",
      "method": "getPayees",
      "httpMethod": "get",
      "tag": "Payee Bank Accounts",
      "typeScriptTag": "payeeBankAccounts",
      "description": "List all Payee Bank Accounts",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/paymentrequests",
      "method": "newPaymentRequest",
      "httpMethod": "post",
      "tag": "Open Banking",
      "typeScriptTag": "openBanking",
      "description": "Create a Fire Open Payment request",
      "parameters": [
        {
          "name": "additionalFields",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "amount",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "collectFields",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "expiry",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "icanTo",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "mandatoryFields",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "maxNumberPayments",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "myRef",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orderDetails",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "returnUrl",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/payments/{paymentUuid}",
      "method": "getPaymentDetails",
      "httpMethod": "get",
      "tag": "Open Banking",
      "typeScriptTag": "openBanking",
      "description": "Get Payment Details",
      "parameters": [
        {
          "name": "paymentUuid",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/user/{userId}",
      "method": "getUser",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Returns details of a specific fire.com user.",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/users",
      "method": "getUsers",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Returns list of all users on your fire.com account",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/batches/{batchUuid}/internationaltransfers",
      "method": "getItemsBatchInternationalTransfer",
      "httpMethod": "get",
      "tag": "Payment Batches",
      "typeScriptTag": "paymentBatches",
      "description": "List items in a Batch (International Transfers)",
      "parameters": [
        {
          "name": "batchUuid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/batches/{batchUuid}/internationaltransfers",
      "method": "addInternationalTransferBatchPayment",
      "httpMethod": "post",
      "tag": "Payment Batches",
      "typeScriptTag": "paymentBatches",
      "description": "Add an international transfer payment to the batch.",
      "parameters": [
        {
          "name": "batchUuid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "amount",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "icanFrom",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "myRef",
          "schema": "string",
          "description": ""
        },
        {
          "name": "payeeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "paymentReason",
          "schema": "string",
          "description": ""
        },
        {
          "name": "yourRef",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/batches/{batchUuid}/internationaltransfers/{itemUuid}",
      "method": "deleteInternationalTransferBatchPayment",
      "httpMethod": "delete",
      "tag": "Payment Batches",
      "typeScriptTag": "paymentBatches",
      "description": "Remove a Payment from the Batch (International Transfers)",
      "parameters": [
        {
          "name": "batchUuid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "itemUuid",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/accounts/{ican}/transactions",
      "method": "getTransactionsByAccountIdv3",
      "httpMethod": "get",
      "tag": "Transactions",
      "typeScriptTag": "transactions",
      "description": "List transactions for an account (v3)",
      "parameters": [
        {
          "name": "ican",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "dateRangeFrom",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "dateRangeTo",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "startAfter",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.fire.com/business",
  "apiDescription": "The fire.com API allows you to deeply integrate Business Account features into your application or back-office systems.\n\nThe API provides read access to your profile, accounts and transactions, event-driven notifications of activity on the account and payment initiation via batches. Each feature has its own HTTP endpoint and every endpoint has its own permission.\n\n\nThe API exposes 3 main areas of functionality: financial functions, service information and service configuration.\n## Financial Functions\nThese functions provide access to your account details, transactions, payee accounts, payment initiation etc.\n## Service Functions\nThese provide information about the fees and limits applied to your account.\n## Service configuration\nThese provide information about your service configs - applications, webhooks, API tokens, etc.\n",
  "apiTitle": "Fire Financial Services Business API",
  "endpoints": 33,
  "sdkMethods": 42,
  "schemas": 0,
  "parameters": 105,
  "contactUrl": "https://docs.fire.com",
  "contactEmail": "api@fire.com",
  "difficultyScore": 68.25,
  "difficulty": "Easy"
}