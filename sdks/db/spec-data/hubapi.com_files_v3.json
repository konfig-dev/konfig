{
  "providerName": "hubapi.com",
  "openApiRaw": "https://api.hubspot.com/api-catalog-public/v1/apis/files/v3/files",
  "securitySchemes": {
    "oauth2_legacy": {
      "flows": {
        "authorizationCode": {
          "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
          "scopes": {
            "files": "Read from and write to my Files",
            "files.ui_hidden.read": "View hidden files"
          },
          "tokenUrl": "https://api.hubapi.com/oauth/v1/token"
        }
      },
      "type": "oauth2"
    },
    "private_apps_legacy": {
      "in": "header",
      "name": "private-app-legacy",
      "type": "apiKey"
    }
  },
  "homepage": "hubapi.com",
  "serviceName": "files",
  "apiVersion": "v3",
  "methods": [
    {
      "url": "/files/v3/files",
      "method": "post-/files/v3/filesUpload",
      "httpMethod": "post",
      "tag": "Files",
      "description": "Upload file",
      "parameters": [
        {
          "name": "charsetHunch",
          "schema": "string",
          "description": ""
        },
        {
          "name": "file",
          "schema": "string",
          "description": ""
        },
        {
          "name": "fileName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "folderId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "folderPath",
          "schema": "string",
          "description": ""
        },
        {
          "name": "options",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "File"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/files/v3/files/import-from-url/async",
      "method": "post-/files/v3/files/importFromUrl/asyncImportFromUrl",
      "httpMethod": "post",
      "tag": "Files",
      "description": "Import a file from a URL into the file manager.",
      "parameters": [
        {
          "name": "access",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "duplicateValidationScope",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "duplicateValidationStrategy",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "folderId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "folderPath",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "overwrite",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "ttl",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": "Information on the task that has been started, and where to check it's status."
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/files/v3/files/import-from-url/async/tasks/{taskId}/status",
      "method": "get-/files/v3/files/importFromUrl/async/tasks/{taskId}/statusCheckImport",
      "httpMethod": "get",
      "tag": "Files",
      "description": "Check import status.",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "Import by URL task ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/files/v3/files/search",
      "method": "get-/files/v3/files/searchDoSearch",
      "httpMethod": "get",
      "tag": "Files",
      "description": "Search files",
      "parameters": [
        {
          "name": "properties",
          "schema": "array",
          "required": false,
          "description": "Desired file properties in the return object."
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "The maximum offset of items for a given search is 10000. Narrow your search down if you are reaching this limit."
        },
        {
          "name": "before",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of items to return. Maximum limit is 100."
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Sort files by a given field."
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": "Search files by given ID."
        },
        {
          "name": "createdAt",
          "schema": "string",
          "required": false,
          "description": "Search files by time of creation."
        },
        {
          "name": "createdAtLte",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdAtGte",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updatedAt",
          "schema": "string",
          "required": false,
          "description": "Search files by time of latest updated."
        },
        {
          "name": "updatedAtLte",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updatedAtGte",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Search for files containing the given name."
        },
        {
          "name": "path",
          "schema": "string",
          "required": false,
          "description": "Search files by path."
        },
        {
          "name": "parentFolderId",
          "schema": "integer",
          "required": false,
          "description": "Search files within given folderId."
        },
        {
          "name": "size",
          "schema": "integer",
          "required": false,
          "description": "Query by file size."
        },
        {
          "name": "height",
          "schema": "integer",
          "required": false,
          "description": "Search files by height of image or video."
        },
        {
          "name": "width",
          "schema": "integer",
          "required": false,
          "description": "Search files by width of image or video."
        },
        {
          "name": "encoding",
          "schema": "string",
          "required": false,
          "description": "Search files with specified encoding."
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "Filter by provided file type."
        },
        {
          "name": "extension",
          "schema": "string",
          "required": false,
          "description": "Search files by given extension."
        },
        {
          "name": "url",
          "schema": "string",
          "required": false,
          "description": "Search for given URL"
        },
        {
          "name": "isUsableInContent",
          "schema": "boolean",
          "required": false,
          "description": "If true shows files that have been marked to be used in new content. It false shows files that should not be used in new content."
        },
        {
          "name": "allowsAnonymousAccess",
          "schema": "boolean",
          "required": false,
          "description": "If 'true' will show private files; if 'false' will show public files"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Collections of files"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/files/v3/files/stat/{path}",
      "method": "get-/files/v3/files/stat/{path}GetMetadata",
      "httpMethod": "get",
      "tag": "Files",
      "description": "",
      "parameters": [
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "properties",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/files/v3/files/{fileId}",
      "method": "delete-/files/v3/files/{fileId}Archive",
      "httpMethod": "delete",
      "tag": "Files",
      "description": "Delete file",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "FileId to delete"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/files/v3/files/{fileId}",
      "method": "get-/files/v3/files/{fileId}GetById",
      "httpMethod": "get",
      "tag": "Files",
      "description": "Get file.",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "ID of the desired file."
        },
        {
          "name": "properties",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "File"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/files/v3/files/{fileId}",
      "method": "patch-/files/v3/files/{fileId}UpdateProperties",
      "httpMethod": "patch",
      "tag": "Files",
      "description": "update file properties",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "ID of file to update"
        },
        {
          "name": "access",
          "schema": "string",
          "description": ""
        },
        {
          "name": "expiresAt",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "isUsableInContent",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "parentFolderId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "parentFolderPath",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "File"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/files/v3/files/{fileId}",
      "method": "put-/files/v3/files/{fileId}Replace",
      "httpMethod": "put",
      "tag": "Files",
      "description": "Replace file.",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "ID of the desired file."
        },
        {
          "name": "charsetHunch",
          "schema": "string",
          "description": ""
        },
        {
          "name": "file",
          "schema": "string",
          "description": ""
        },
        {
          "name": "options",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "File"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/files/v3/files/{fileId}/gdpr-delete",
      "method": "delete-/files/v3/files/{fileId}/gdprDeleteArchiveGdpr",
      "httpMethod": "delete",
      "tag": "Files",
      "description": "GDPR delete",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "ID of file to GDPR delete"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/files/v3/files/{fileId}/signed-url",
      "method": "get-/files/v3/files/{fileId}/signedUrlGetSignedUrl",
      "httpMethod": "get",
      "tag": "Files",
      "description": "Get signed URL to access private file.",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "ID of file."
        },
        {
          "name": "size",
          "schema": "string",
          "required": false,
          "description": "For image files. This will resize the image to the desired size before sharing. Does not affect the original file, just the file served by this signed URL."
        },
        {
          "name": "expirationSeconds",
          "schema": "integer",
          "required": false,
          "description": "How long in seconds the link will provide access to the file."
        },
        {
          "name": "upscale",
          "schema": "boolean",
          "required": false,
          "description": "If size is provided, this will upscale the image to fit the size dimensions."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Signed Url object with optional ancillary metadata of requested file"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/files/v3/folders",
      "method": "post-/files/v3/foldersCreate",
      "httpMethod": "post",
      "tag": "Folders",
      "description": "Create folder.",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "parentFolderId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "parentPath",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/files/v3/folders/search",
      "method": "get-/files/v3/folders/searchDoSearch",
      "httpMethod": "get",
      "tag": "Folders",
      "description": "Search folders",
      "parameters": [
        {
          "name": "properties",
          "schema": "array",
          "required": false,
          "description": "Properties that should be included in the returned folders."
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "The maximum offset of items for a given search is 10000. Narrow your search down if you are reaching this limit."
        },
        {
          "name": "before",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit of results to return. Max limit is 100."
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Sort results by given property. For example -name sorts by name field descending, name sorts by name field ascending."
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": "Search folder by given ID."
        },
        {
          "name": "createdAt",
          "schema": "string",
          "required": false,
          "description": "Search for folders with the given creation timestamp."
        },
        {
          "name": "createdAtLte",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdAtGte",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updatedAt",
          "schema": "string",
          "required": false,
          "description": "Search for folder at given update timestamp."
        },
        {
          "name": "updatedAtLte",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updatedAtGte",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Search for folders containing the specified name."
        },
        {
          "name": "path",
          "schema": "string",
          "required": false,
          "description": "Search for folders by path."
        },
        {
          "name": "parentFolderId",
          "schema": "integer",
          "required": false,
          "description": "Search for folders with the given parent folderId."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/files/v3/folders/update/async",
      "method": "post-/files/v3/folders/update/asyncUpdateProperties",
      "httpMethod": "post",
      "tag": "Folders",
      "description": "Update folder properties",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "parentFolderId",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": "Information on the task that has been started, and where to check it's status."
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/files/v3/folders/update/async/tasks/{taskId}/status",
      "method": "get-/files/v3/folders/update/async/tasks/{taskId}/statusCheckUpdateStatus",
      "httpMethod": "get",
      "tag": "Folders",
      "description": "Check folder update status.",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "TaskId of folder update"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/files/v3/folders/{folderId}",
      "method": "delete-/files/v3/folders/{folderId}Archive",
      "httpMethod": "delete",
      "tag": "Folders",
      "description": "Delete folder.",
      "parameters": [
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "ID of folder to delete."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/files/v3/folders/{folderId}",
      "method": "get-/files/v3/folders/{folderId}GetById",
      "httpMethod": "get",
      "tag": "Folders",
      "description": "Get folder",
      "parameters": [
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "ID of desired folder"
        },
        {
          "name": "properties",
          "schema": "array",
          "required": false,
          "description": "Properties to set on returned folder."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/files/v3/folders/{folderPath}",
      "method": "delete-/files/v3/folders/{folderPath}ArchiveByPath",
      "httpMethod": "delete",
      "tag": "Folders",
      "description": "Delete folder.",
      "parameters": [
        {
          "name": "folderPath",
          "schema": "string",
          "required": true,
          "description": "Path of folder to delete"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/files/v3/folders/{folderPath}",
      "method": "get-/files/v3/folders/{folderPath}GetByPath",
      "httpMethod": "get",
      "tag": "Folders",
      "description": "Get folder.",
      "parameters": [
        {
          "name": "folderPath",
          "schema": "string",
          "required": true,
          "description": "Path of desired folder."
        },
        {
          "name": "properties",
          "schema": "array",
          "required": false,
          "description": "Properties to set on returned folder."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.hubapi.com",
  "apiDescription": "Upload and manage files.",
  "apiTitle": "Files Files",
  "endpoints": 14,
  "sdkMethods": 19,
  "schemas": 20,
  "parameters": 89,
  "difficultyScore": 51.25,
  "difficulty": "Easy"
}