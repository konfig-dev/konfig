{
  "providerName": "gitlab.com",
  "openApiRaw": "https://axil.gitlab.io/swaggerapi/static/swagger.json",
  "securitySchemes": {
    "private_token_header": {
      "in": "header",
      "name": "PRIVATE_HEADER",
      "type": "apiKey"
    },
    "private_token_query": {
      "in": "query",
      "name": "private_token",
      "type": "apiKey"
    }
  },
  "homepage": "gitlab.com",
  "apiVersion": "v3",
  "methods": [
    {
      "url": "/v3/application/settings",
      "method": "getV3ApplicationSettings",
      "httpMethod": "get",
      "tag": "application",
      "typeScriptTag": "application",
      "description": "Get the current application settings",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Modify application settings"
        }
      ]
    },
    {
      "url": "/v3/application/settings",
      "method": "putV3ApplicationSettings",
      "httpMethod": "put",
      "tag": "application",
      "typeScriptTag": "application",
      "description": "Modify application settings",
      "parameters": [
        {
          "name": "default_branch_protection",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "default_project_visibility",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "default_snippet_visibility",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "default_group_visibility",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "restricted_visibility_levels",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "import_sources",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "disabled_oauth_sign_in_sources",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled_git_access_protocol",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "gravatar_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "default_projects_limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "max_attachment_size",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "session_expire_delay",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "user_oauth_applications",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "user_default_external",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "signup_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "send_user_confirmation_email",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "domain_whitelist",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "domain_blacklist_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "domain_blacklist",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "after_sign_up_text",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "signin_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "require_two_factor_authentication",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "two_factor_grace_period",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "home_page_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "after_sign_out_path",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sign_in_text",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "help_page_text",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "shared_runners_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "shared_runners_text",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "max_artifacts_size",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "container_registry_token_expire_delay",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "metrics_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "metrics_host",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "metrics_port",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "metrics_pool_size",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "metrics_timeout",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "metrics_method_call_threshold",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "metrics_sample_interval",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "metrics_packet_size",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "sidekiq_throttling_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "sidekiq_throttling_queus",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "sidekiq_throttling_factor",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "recaptcha_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "recaptcha_site_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "recaptcha_private_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "akismet_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "akismet_api_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "admin_notification_email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sentry_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "sentry_dsn",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "repository_storage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "repository_checks_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "koding_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "koding_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "plantuml_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "plantuml_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "version_check_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "email_author_in_body",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "html_emails_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "housekeeping_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "housekeeping_bitmaps_enabled",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "housekeeping_incremental_repack_period",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "housekeeping_full_repack_period",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "housekeeping_gc_period",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Modify application settings"
        }
      ]
    },
    {
      "url": "/v3/ci/lint",
      "method": "postV3CiLint",
      "httpMethod": "post",
      "tag": "ci",
      "typeScriptTag": "ci",
      "description": "Validation of .gitlab-ci.yml content",
      "parameters": [
        {
          "name": "content",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/deploy_keys",
      "method": "getV3DeployKeys",
      "httpMethod": "get",
      "tag": "deploy_keys",
      "typeScriptTag": "deployKeys",
      "description": "",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/v3/dockerfiles",
      "method": "getV3Dockerfiles",
      "httpMethod": "get",
      "tag": "dockerfiles",
      "typeScriptTag": "dockerfiles",
      "description": "Get the list of the available template",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0."
        }
      ]
    },
    {
      "url": "/v3/dockerfiles/{name}",
      "method": "getV3DockerfilesName",
      "httpMethod": "get",
      "tag": "dockerfiles",
      "typeScriptTag": "dockerfiles",
      "description": "Get the text for a specific template present in local filesystem",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The name of the template"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0."
        }
      ]
    },
    {
      "url": "/v3/gitignores",
      "method": "getV3Gitignores",
      "httpMethod": "get",
      "tag": "gitignores",
      "typeScriptTag": "gitignores",
      "description": "Get the list of the available template",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0."
        }
      ]
    },
    {
      "url": "/v3/gitignores/{name}",
      "method": "getV3GitignoresName",
      "httpMethod": "get",
      "tag": "gitignores",
      "typeScriptTag": "gitignores",
      "description": "Get the text for a specific template present in local filesystem",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The name of the template"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0."
        }
      ]
    },
    {
      "url": "/v3/gitlab_ci_ymls",
      "method": "getV3GitlabCiYmls",
      "httpMethod": "get",
      "tag": "gitlab_ci_ymls",
      "typeScriptTag": "gitlabCiYmls",
      "description": "Get the list of the available template",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0."
        }
      ]
    },
    {
      "url": "/v3/gitlab_ci_ymls/{name}",
      "method": "getV3GitlabCiYmlsName",
      "httpMethod": "get",
      "tag": "gitlab_ci_ymls",
      "typeScriptTag": "gitlabCiYmls",
      "description": "Get the text for a specific template present in local filesystem",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The name of the template"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0."
        }
      ]
    },
    {
      "url": "/v3/groups",
      "method": "getV3Groups",
      "httpMethod": "get",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Get a groups list",
      "parameters": [
        {
          "name": "statistics",
          "schema": "boolean",
          "required": false,
          "description": "Include project statistics"
        },
        {
          "name": "allAvailable",
          "schema": "boolean",
          "required": false,
          "description": "Show all group that you have access to"
        },
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Search for a specific group"
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Order by name or path"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort by asc (ascending) or desc (descending)"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        },
        {
          "name": "skip_groups",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Update a group. Available only for users who can administrate groups."
        }
      ]
    },
    {
      "url": "/v3/groups",
      "method": "postV3Groups",
      "httpMethod": "post",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Create a group. Available only for users who can create groups.",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "visibility_level",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "lfs_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "request_access_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Update a group. Available only for users who can administrate groups."
        }
      ]
    },
    {
      "url": "/v3/groups/owned",
      "method": "getV3GroupsOwned",
      "httpMethod": "get",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Get list of owned groups for authenticated user",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        },
        {
          "name": "statistics",
          "schema": "boolean",
          "required": false,
          "description": "Include project statistics"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Update a group. Available only for users who can administrate groups."
        }
      ]
    },
    {
      "url": "/v3/groups/{id}",
      "method": "deleteV3GroupsId",
      "httpMethod": "delete",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Remove a group.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a group"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/groups/{id}",
      "method": "getV3GroupsId",
      "httpMethod": "get",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Get a single group, with containing projects.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a group"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Transfer a project to the group namespace. Available only for admin."
        }
      ]
    },
    {
      "url": "/v3/groups/{id}",
      "method": "putV3GroupsId",
      "httpMethod": "put",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Update a group. Available only for users who can administrate groups.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a group"
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "visibility_level",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "lfs_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "request_access_enabled",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Update a group. Available only for users who can administrate groups."
        }
      ]
    },
    {
      "url": "/v3/groups/{id}/access_requests",
      "method": "getV3GroupsIdAccessRequests",
      "httpMethod": "get",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Gets a list of access requests for a group.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The group ID"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.11."
        }
      ]
    },
    {
      "url": "/v3/groups/{id}/access_requests",
      "method": "postV3GroupsIdAccessRequests",
      "httpMethod": "post",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Requests access for the authenticated user to a group.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The group ID"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "This feature was introduced in GitLab 8.11."
        }
      ]
    },
    {
      "url": "/v3/groups/{id}/access_requests/{user_id}",
      "method": "deleteV3GroupsIdAccessRequestsUserId",
      "httpMethod": "delete",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Denies an access request for the given user.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The group ID"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "The user ID of the access requester"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/groups/{id}/access_requests/{user_id}/approve",
      "method": "putV3GroupsIdAccessRequestsUserIdApprove",
      "httpMethod": "put",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Approves an access request for the given user.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The group ID"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "The user ID of the access requester"
        },
        {
          "name": "access_level",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Updates a member of a group or project."
        }
      ]
    },
    {
      "url": "/v3/groups/{id}/issues",
      "method": "getV3GroupsIdIssues",
      "httpMethod": "get",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Get a list of group issues",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a group"
        },
        {
          "name": "state",
          "schema": "string",
          "required": false,
          "description": "Return opened, closed, or all issues"
        },
        {
          "name": "labels",
          "schema": "string",
          "required": false,
          "description": "Comma-separated list of label names"
        },
        {
          "name": "milestone",
          "schema": "string",
          "required": false,
          "description": "Return issues for a specific milestone"
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Return issues ordered by `created_at` or `updated_at` fields."
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Return issues sorted in `asc` or `desc` order."
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get currently authenticated user's issues"
        }
      ]
    },
    {
      "url": "/v3/groups/{id}/members",
      "method": "getV3GroupsIdMembers",
      "httpMethod": "get",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Gets a list of group or project members viewable by the authenticated user.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The group ID"
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "A query string to search for members"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Updates a member of a group or project."
        }
      ]
    },
    {
      "url": "/v3/groups/{id}/members",
      "method": "postV3GroupsIdMembers",
      "httpMethod": "post",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Adds a member to a group or project.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The group ID"
        },
        {
          "name": "user_id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "access_level",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "expires_at",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Updates a member of a group or project."
        }
      ]
    },
    {
      "url": "/v3/groups/{id}/members/{user_id}",
      "method": "deleteV3GroupsIdMembersUserId",
      "httpMethod": "delete",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Removes a user from a group or project.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The group ID"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "The user ID of the member"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/groups/{id}/members/{user_id}",
      "method": "getV3GroupsIdMembersUserId",
      "httpMethod": "get",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Gets a member of a group or project.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The group ID"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "The user ID of the member"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Updates a member of a group or project."
        }
      ]
    },
    {
      "url": "/v3/groups/{id}/members/{user_id}",
      "method": "putV3GroupsIdMembersUserId",
      "httpMethod": "put",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Updates a member of a group or project.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The group ID"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "The user ID of the new member"
        },
        {
          "name": "access_level",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "expires_at",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Updates a member of a group or project."
        }
      ]
    },
    {
      "url": "/v3/groups/{id}/notification_settings",
      "method": "getV3GroupsIdNotificationSettings",
      "httpMethod": "get",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Get group level notification level settings, defaults to Global",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The group ID or project ID or project NAMESPACE/PROJECT_NAME"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.12"
        }
      ]
    },
    {
      "url": "/v3/groups/{id}/notification_settings",
      "method": "putV3GroupsIdNotificationSettings",
      "httpMethod": "put",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Update group level notification level settings, defaults to Global",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The group ID or project ID or project NAMESPACE/PROJECT_NAME"
        },
        {
          "name": "level",
          "schema": "string",
          "description": ""
        },
        {
          "name": "new_note",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "new_issue",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "reopen_issue",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "close_issue",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "reassign_issue",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "new_merge_request",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "reopen_merge_request",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "close_merge_request",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "reassign_merge_request",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "merge_merge_request",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "failed_pipeline",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "success_pipeline",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.12"
        }
      ]
    },
    {
      "url": "/v3/groups/{id}/projects",
      "method": "getV3GroupsIdProjects",
      "httpMethod": "get",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Get a list of projects in this group.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a group"
        },
        {
          "name": "archived",
          "schema": "boolean",
          "required": false,
          "description": "Limit by archived status"
        },
        {
          "name": "visibility",
          "schema": "string",
          "required": false,
          "description": "Limit by visibility"
        },
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Return list of authorized projects matching the search criteria"
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Return projects ordered by field"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Return projects sorted in ascending and descending order"
        },
        {
          "name": "simple",
          "schema": "boolean",
          "required": false,
          "description": "Return only the ID, URL, name, and path of each project"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unstar a project"
        }
      ]
    },
    {
      "url": "/v3/groups/{id}/projects/{project_id}",
      "method": "postV3GroupsIdProjectsProjectId",
      "httpMethod": "post",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Transfer a project to the group namespace. Available only for admin.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a group"
        },
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "The ID or path of the project"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Transfer a project to the group namespace. Available only for admin."
        }
      ]
    },
    {
      "url": "/v3/hooks",
      "method": "getV3Hooks",
      "httpMethod": "get",
      "tag": "hooks",
      "typeScriptTag": "hooks",
      "description": "Get the list of system hooks",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete a hook"
        }
      ]
    },
    {
      "url": "/v3/hooks",
      "method": "postV3Hooks",
      "httpMethod": "post",
      "tag": "hooks",
      "typeScriptTag": "hooks",
      "description": "Create a new system hook",
      "parameters": [
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "tag_push_events",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "enable_ssl_verification",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Delete a hook"
        }
      ]
    },
    {
      "url": "/v3/hooks/{id}",
      "method": "deleteV3HooksId",
      "httpMethod": "delete",
      "tag": "hooks",
      "typeScriptTag": "hooks",
      "description": "Delete a hook",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the system hook"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete a hook"
        }
      ]
    },
    {
      "url": "/v3/hooks/{id}",
      "method": "getV3HooksId",
      "httpMethod": "get",
      "tag": "hooks",
      "typeScriptTag": "hooks",
      "description": "Test a hook",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the system hook"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete a hook"
        }
      ]
    },
    {
      "url": "/v3/internal/allowed",
      "method": "postV3InternalAllowed",
      "httpMethod": "post",
      "tag": "internal",
      "typeScriptTag": "internal",
      "description": "",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/v3/internal/broadcast_message",
      "method": "getV3InternalBroadcastMessage",
      "httpMethod": "get",
      "tag": "internal",
      "typeScriptTag": "internal",
      "description": "",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/v3/internal/check",
      "method": "getV3InternalCheck",
      "httpMethod": "get",
      "tag": "internal",
      "typeScriptTag": "internal",
      "description": "",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/v3/internal/discover",
      "method": "getV3InternalDiscover",
      "httpMethod": "get",
      "tag": "internal",
      "typeScriptTag": "internal",
      "description": "",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/v3/internal/lfs_authenticate",
      "method": "postV3InternalLfsAuthenticate",
      "httpMethod": "post",
      "tag": "internal",
      "typeScriptTag": "internal",
      "description": "",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/v3/internal/merge_request_urls",
      "method": "getV3InternalMergeRequestUrls",
      "httpMethod": "get",
      "tag": "internal",
      "typeScriptTag": "internal",
      "description": "",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/v3/internal/two_factor_recovery_codes",
      "method": "postV3InternalTwoFactorRecoveryCodes",
      "httpMethod": "post",
      "tag": "internal",
      "typeScriptTag": "internal",
      "description": "",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/v3/issues",
      "method": "getV3Issues",
      "httpMethod": "get",
      "tag": "issues",
      "typeScriptTag": "issues",
      "description": "Get currently authenticated user's issues",
      "parameters": [
        {
          "name": "state",
          "schema": "string",
          "required": false,
          "description": "Return opened, closed, or all issues"
        },
        {
          "name": "labels",
          "schema": "string",
          "required": false,
          "description": "Comma-separated list of label names"
        },
        {
          "name": "milestone",
          "schema": "string",
          "required": false,
          "description": "Return issues for a specific milestone"
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Return issues ordered by `created_at` or `updated_at` fields."
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Return issues sorted in `asc` or `desc` order."
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get currently authenticated user's issues"
        }
      ]
    },
    {
      "url": "/v3/keys/{id}",
      "method": "getV3KeysId",
      "httpMethod": "get",
      "tag": "keys",
      "typeScriptTag": "keys",
      "description": "Get single ssh key by id. Only available to admin users",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get single ssh key by id. Only available to admin users"
        }
      ]
    },
    {
      "url": "/v3/licenses",
      "method": "getV3Licenses",
      "httpMethod": "get",
      "tag": "licenses",
      "typeScriptTag": "licenses",
      "description": "Get the list of the available license template",
      "parameters": [
        {
          "name": "popular",
          "schema": "boolean",
          "required": false,
          "description": "If passed, returns only popular licenses"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.7."
        }
      ]
    },
    {
      "url": "/v3/licenses/{name}",
      "method": "getV3LicensesName",
      "httpMethod": "get",
      "tag": "licenses",
      "typeScriptTag": "licenses",
      "description": "Get the text for a specific license",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The name of the template"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.7."
        }
      ]
    },
    {
      "url": "/v3/namespaces",
      "method": "getV3Namespaces",
      "httpMethod": "get",
      "tag": "namespaces",
      "typeScriptTag": "namespaces",
      "description": "Get a namespaces list",
      "parameters": [
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Search query for namespaces"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get a namespaces list"
        }
      ]
    },
    {
      "url": "/v3/notification_settings",
      "method": "getV3NotificationSettings",
      "httpMethod": "get",
      "tag": "notification_settings",
      "typeScriptTag": "notificationSettings",
      "description": "Get global notification level settings and email, defaults to Participate",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.12"
        }
      ]
    },
    {
      "url": "/v3/notification_settings",
      "method": "putV3NotificationSettings",
      "httpMethod": "put",
      "tag": "notification_settings",
      "typeScriptTag": "notificationSettings",
      "description": "Update global notification level settings and email, defaults to Participate",
      "parameters": [
        {
          "name": "level",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notification_email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "new_note",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "new_issue",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "reopen_issue",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "close_issue",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "reassign_issue",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "new_merge_request",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "reopen_merge_request",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "close_merge_request",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "reassign_merge_request",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "merge_merge_request",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "failed_pipeline",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "success_pipeline",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.12"
        }
      ]
    },
    {
      "url": "/v3/projects",
      "method": "getV3Projects",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a projects list for authenticated user",
      "parameters": [
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Return projects ordered by field"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Return projects sorted in ascending and descending order"
        },
        {
          "name": "archived",
          "schema": "boolean",
          "required": false,
          "description": "Limit by archived status"
        },
        {
          "name": "visibility",
          "schema": "string",
          "required": false,
          "description": "Limit by visibility"
        },
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Return list of authorized projects matching the search criteria"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        },
        {
          "name": "simple",
          "schema": "boolean",
          "required": false,
          "description": "Return only the ID, URL, name, and path of each project"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get all projects for admin user"
        }
      ]
    },
    {
      "url": "/v3/projects",
      "method": "postV3Projects",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Create new project",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "issues_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "merge_requests_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "wiki_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "builds_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "snippets_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "shared_runners_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "container_registry_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "lfs_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "public",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "visibility_level",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "public_builds",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "request_access_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "only_allow_merge_if_build_succeeds",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "only_allow_merge_if_all_discussions_are_resolved",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "namespace_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "import_url",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Unstar a project"
        }
      ]
    },
    {
      "url": "/v3/projects/all",
      "method": "getV3ProjectsAll",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get all projects for admin user",
      "parameters": [
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Return projects ordered by field"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Return projects sorted in ascending and descending order"
        },
        {
          "name": "archived",
          "schema": "boolean",
          "required": false,
          "description": "Limit by archived status"
        },
        {
          "name": "visibility",
          "schema": "string",
          "required": false,
          "description": "Limit by visibility"
        },
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Return list of authorized projects matching the search criteria"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        },
        {
          "name": "simple",
          "schema": "boolean",
          "required": false,
          "description": "Return only the ID, URL, name, and path of each project"
        },
        {
          "name": "statistics",
          "schema": "boolean",
          "required": false,
          "description": "Include project statistics"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get all projects for admin user"
        }
      ]
    },
    {
      "url": "/v3/projects/fork/{id}",
      "method": "postV3ProjectsForkId",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Fork new project for the current user or provided namespace.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "namespace",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Unstar a project"
        }
      ]
    },
    {
      "url": "/v3/projects/owned",
      "method": "getV3ProjectsOwned",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get an owned projects list for authenticated user",
      "parameters": [
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Return projects ordered by field"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Return projects sorted in ascending and descending order"
        },
        {
          "name": "archived",
          "schema": "boolean",
          "required": false,
          "description": "Limit by archived status"
        },
        {
          "name": "visibility",
          "schema": "string",
          "required": false,
          "description": "Limit by visibility"
        },
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Return list of authorized projects matching the search criteria"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        },
        {
          "name": "simple",
          "schema": "boolean",
          "required": false,
          "description": "Return only the ID, URL, name, and path of each project"
        },
        {
          "name": "statistics",
          "schema": "boolean",
          "required": false,
          "description": "Include project statistics"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get all projects for admin user"
        }
      ]
    },
    {
      "url": "/v3/projects/search/{query}",
      "method": "getV3ProjectsSearchQuery",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Search for projects the current user has access to",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "required": true,
          "description": "The project name to be searched"
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Return projects ordered by field"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Return projects sorted in ascending and descending order"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unstar a project"
        }
      ]
    },
    {
      "url": "/v3/projects/starred",
      "method": "getV3ProjectsStarred",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Gets starred project for the authenticated user",
      "parameters": [
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Return projects ordered by field"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Return projects sorted in ascending and descending order"
        },
        {
          "name": "archived",
          "schema": "boolean",
          "required": false,
          "description": "Limit by archived status"
        },
        {
          "name": "visibility",
          "schema": "string",
          "required": false,
          "description": "Limit by visibility"
        },
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Return list of authorized projects matching the search criteria"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        },
        {
          "name": "simple",
          "schema": "boolean",
          "required": false,
          "description": "Return only the ID, URL, name, and path of each project"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get all projects for admin user"
        }
      ]
    },
    {
      "url": "/v3/projects/user/{user_id}",
      "method": "postV3ProjectsUserUserId",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Create new project for a specified user. Only available to admin users.",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a user"
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "default_branch",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "issues_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "merge_requests_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "wiki_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "builds_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "snippets_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "shared_runners_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "container_registry_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "lfs_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "public",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "visibility_level",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "public_builds",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "request_access_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "only_allow_merge_if_build_succeeds",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "only_allow_merge_if_all_discussions_are_resolved",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "namespace_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "import_url",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Unstar a project"
        }
      ]
    },
    {
      "url": "/v3/projects/visible",
      "method": "getV3ProjectsVisible",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a list of visible projects for authenticated user",
      "parameters": [
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Return projects ordered by field"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Return projects sorted in ascending and descending order"
        },
        {
          "name": "archived",
          "schema": "boolean",
          "required": false,
          "description": "Limit by archived status"
        },
        {
          "name": "visibility",
          "schema": "string",
          "required": false,
          "description": "Limit by visibility"
        },
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Return list of authorized projects matching the search criteria"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        },
        {
          "name": "simple",
          "schema": "boolean",
          "required": false,
          "description": "Return only the ID, URL, name, and path of each project"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get all projects for admin user"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}",
      "method": "deleteV3ProjectsId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Remove a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}",
      "method": "getV3ProjectsId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a single project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get a single project"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}",
      "method": "putV3ProjectsId",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Update an existing project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "default_branch",
          "schema": "string",
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "issues_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "merge_requests_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "wiki_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "builds_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "snippets_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "shared_runners_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "container_registry_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "lfs_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "public",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "visibility_level",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "public_builds",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "request_access_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "only_allow_merge_if_build_succeeds",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "only_allow_merge_if_all_discussions_are_resolved",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unstar a project"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/(ref/{ref}/)trigger/builds",
      "method": "postV3ProjectsId(refRef)triggerBuilds",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Trigger a GitLab project build",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "ref",
          "schema": "string",
          "required": true,
          "description": "The commit sha or name of a branch or tag"
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Trigger a GitLab project build"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/access_requests",
      "method": "getV3ProjectsIdAccessRequests",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Gets a list of access requests for a project.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.11."
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/access_requests",
      "method": "postV3ProjectsIdAccessRequests",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Requests access for the authenticated user to a project.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "This feature was introduced in GitLab 8.11."
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/access_requests/{user_id}",
      "method": "deleteV3ProjectsIdAccessRequestsUserId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Denies an access request for the given user.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "The user ID of the access requester"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/access_requests/{user_id}/approve",
      "method": "putV3ProjectsIdAccessRequestsUserIdApprove",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Approves an access request for the given user.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "The user ID of the access requester"
        },
        {
          "name": "access_level",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Updates a member of a group or project."
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/archive",
      "method": "postV3ProjectsIdArchive",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Archive a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Unstar a project"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/boards",
      "method": "getV3ProjectsIdBoards",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get all project boards",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.13"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/boards/{board_id}/lists",
      "method": "getV3ProjectsIdBoardsBoardIdLists",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get the lists of a project board",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "boardId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a board"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.13"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/boards/{board_id}/lists",
      "method": "postV3ProjectsIdBoardsBoardIdLists",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Create a new board list",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "boardId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a board"
        },
        {
          "name": "label_id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "This feature was introduced in 8.13"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/boards/{board_id}/lists/{list_id}",
      "method": "deleteV3ProjectsIdBoardsBoardIdListsListId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete a board list",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "boardId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a board"
        },
        {
          "name": "listId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a board list"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.13"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/boards/{board_id}/lists/{list_id}",
      "method": "getV3ProjectsIdBoardsBoardIdListsListId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a list of a project board",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "boardId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a board"
        },
        {
          "name": "listId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a list"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.13"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/boards/{board_id}/lists/{list_id}",
      "method": "putV3ProjectsIdBoardsBoardIdListsListId",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Moves a board list to a new position",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "boardId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a board"
        },
        {
          "name": "listId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a list"
        },
        {
          "name": "position",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.13"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/builds",
      "method": "getV3ProjectsIdBuilds",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a project builds",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "scope",
          "schema": "string",
          "required": false,
          "description": "The scope of builds to show"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was added in GitLab 8.11"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/builds/artifacts/{ref_name}/download",
      "method": "getV3ProjectsIdBuildsArtifactsRefNameDownload",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Download the artifacts file from build",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "refName",
          "schema": "string",
          "required": true,
          "description": "The ref from repository"
        },
        {
          "name": "job",
          "schema": "string",
          "required": true,
          "description": "The name for the build"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/builds/{build_id}",
      "method": "getV3ProjectsIdBuildsBuildId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a specific build of a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "buildId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a build"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was added in GitLab 8.11"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/builds/{build_id}/artifacts",
      "method": "getV3ProjectsIdBuildsBuildIdArtifacts",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Download the artifacts file from build",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "buildId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a build"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/builds/{build_id}/artifacts/keep",
      "method": "postV3ProjectsIdBuildsBuildIdArtifactsKeep",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Keep the artifacts to prevent them from being deleted",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "buildId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a build"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "This feature was added in GitLab 8.11"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/builds/{build_id}/cancel",
      "method": "postV3ProjectsIdBuildsBuildIdCancel",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Cancel a specific build of a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "buildId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a build"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "This feature was added in GitLab 8.11"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/builds/{build_id}/erase",
      "method": "postV3ProjectsIdBuildsBuildIdErase",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Erase build (remove artifacts and build trace)",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "buildId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a build"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "This feature was added in GitLab 8.11"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/builds/{build_id}/play",
      "method": "postV3ProjectsIdBuildsBuildIdPlay",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Trigger a manual build",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "buildId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a Build"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "This feature was added in GitLab 8.11"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/builds/{build_id}/retry",
      "method": "postV3ProjectsIdBuildsBuildIdRetry",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Retry a specific build of a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "buildId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a build"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "This feature was added in GitLab 8.11"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/builds/{build_id}/trace",
      "method": "getV3ProjectsIdBuildsBuildIdTrace",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a trace of a specific build of a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "buildId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a build"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/deploy_keys",
      "method": "getV3ProjectsIdDeployKeys",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a specific project's deploy keys",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the project"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete an SSH key from the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/deploy_keys",
      "method": "postV3ProjectsIdDeployKeys",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Add new deploy key to currently authenticated user",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the project"
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Delete an SSH key from the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/deploy_keys/{key_id}",
      "method": "deleteV3ProjectsIdDeployKeysKeyId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete deploy key for a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the project"
        },
        {
          "name": "keyId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the deploy key"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete an SSH key from the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/deploy_keys/{key_id}",
      "method": "getV3ProjectsIdDeployKeysKeyId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get single deploy key",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the project"
        },
        {
          "name": "keyId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the deploy key"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete an SSH key from the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/deploy_keys/{key_id}/disable",
      "method": "deleteV3ProjectsIdDeployKeysKeyIdDisable",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Disable a deploy key for a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the project"
        },
        {
          "name": "keyId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the deploy key"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete an SSH key from the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/deploy_keys/{key_id}/enable",
      "method": "postV3ProjectsIdDeployKeysKeyIdEnable",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Enable a deploy key for a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the project"
        },
        {
          "name": "keyId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the deploy key"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Delete an SSH key from the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/deployments",
      "method": "getV3ProjectsIdDeployments",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get all deployments of the project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.11."
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/deployments/{deployment_id}",
      "method": "getV3ProjectsIdDeploymentsDeploymentId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Gets a specific deployment",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "deploymentId",
          "schema": "integer",
          "required": true,
          "description": "The deployment ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.11."
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/environments",
      "method": "getV3ProjectsIdEnvironments",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get all environments of the project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.11."
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/environments",
      "method": "postV3ProjectsIdEnvironments",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Creates a new environment",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "external_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "slug",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "This feature was introduced in GitLab 8.11."
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/environments/{environment_id}",
      "method": "deleteV3ProjectsIdEnvironmentsEnvironmentId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Deletes an existing environment",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "environmentId",
          "schema": "integer",
          "required": true,
          "description": "The environment ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.11."
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/environments/{environment_id}",
      "method": "putV3ProjectsIdEnvironmentsEnvironmentId",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Updates an existing environment",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "environmentId",
          "schema": "integer",
          "required": true,
          "description": "The environment ID"
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "external_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "slug",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.11."
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/events",
      "method": "getV3ProjectsIdEvents",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get events for a single project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.13."
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/fork",
      "method": "deleteV3ProjectsIdFork",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Remove a forked_from relationship",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/fork/{forked_from_id}",
      "method": "postV3ProjectsIdForkForkedFromId",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Mark this project as forked from another",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "forkedFromId",
          "schema": "string",
          "required": true,
          "description": "The ID of the project it was forked from"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/hooks",
      "method": "getV3ProjectsIdHooks",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get project hooks",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Deletes project hook"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/hooks",
      "method": "postV3ProjectsIdHooks",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Add hook to project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "issues_events",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "merge_requests_events",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "tag_push_events",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "note_events",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "build_events",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "pipeline_events",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "wiki_page_events",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "enable_ssl_verification",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Deletes project hook"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/hooks/{hook_id}",
      "method": "deleteV3ProjectsIdHooksHookId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Deletes project hook",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "hookId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the hook to delete"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Deletes project hook"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/hooks/{hook_id}",
      "method": "getV3ProjectsIdHooksHookId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a project hook",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "hookId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project hook"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Deletes project hook"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/hooks/{hook_id}",
      "method": "putV3ProjectsIdHooksHookId",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Update an existing project hook",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "hookId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the hook to update"
        },
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "issues_events",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "merge_requests_events",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "tag_push_events",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "note_events",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "build_events",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "pipeline_events",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "wiki_page_events",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "enable_ssl_verification",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Deletes project hook"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/issues",
      "method": "getV3ProjectsIdIssues",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a list of project issues",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "state",
          "schema": "string",
          "required": false,
          "description": "Return opened, closed, or all issues"
        },
        {
          "name": "iid",
          "schema": "integer",
          "required": false,
          "description": "Return the issue having the given `iid`"
        },
        {
          "name": "labels",
          "schema": "string",
          "required": false,
          "description": "Comma-separated list of label names"
        },
        {
          "name": "milestone",
          "schema": "string",
          "required": false,
          "description": "Return issues for a specific milestone"
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Return issues ordered by `created_at` or `updated_at` fields."
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Return issues sorted in `asc` or `desc` order."
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get currently authenticated user's issues"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/issues",
      "method": "postV3ProjectsIdIssues",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Create a new project issue",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "merge_request_for_resolving_discussions",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "assignee_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "milestone_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "due_date",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "confidential",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Get currently authenticated user's issues"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/issues/{issue_id}",
      "method": "deleteV3ProjectsIdIssuesIssueId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete a project issue",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "issueId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project issue"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/issues/{issue_id}",
      "method": "getV3ProjectsIdIssuesIssueId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a single project issue",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "issueId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project issue"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get currently authenticated user's issues"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/issues/{issue_id}",
      "method": "putV3ProjectsIdIssuesIssueId",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Update an existing issue",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "issueId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project issue"
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "state_event",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "assignee_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "milestone_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "labels",
          "schema": "string",
          "description": ""
        },
        {
          "name": "due_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "confidential",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get currently authenticated user's issues"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/issues/{issue_id}/add_spent_time",
      "method": "postV3ProjectsIdIssuesIssueIdAddSpentTime",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Add spent time for a project issue",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "issueId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project issue"
        },
        {
          "name": "duration",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/issues/{issue_id}/award_emoji",
      "method": "getV3ProjectsIdIssuesIssueIdAwardEmoji",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a list of project +awardable+ award emoji",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "issueId",
          "schema": "integer",
          "required": true,
          "description": "The ID of an Issue, Merge Request or Snippet"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/issues/{issue_id}/award_emoji",
      "method": "postV3ProjectsIdIssuesIssueIdAwardEmoji",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Award a new Emoji",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "issueId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}",
      "method": "deleteV3ProjectsIdIssuesIssueIdAwardEmojiAwardId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete a +awardables+ award emoji",
      "parameters": [
        {
          "name": "awardId",
          "schema": "integer",
          "required": true,
          "description": "The ID of an award emoji"
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "issueId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}",
      "method": "getV3ProjectsIdIssuesIssueIdAwardEmojiAwardId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a specific award emoji",
      "parameters": [
        {
          "name": "awardId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the award"
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "issueId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/issues/{issue_id}/move",
      "method": "postV3ProjectsIdIssuesIssueIdMove",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Move an existing issue",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "issueId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project issue"
        },
        {
          "name": "to_project_id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Get currently authenticated user's issues"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji",
      "method": "getV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmoji",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a list of project +awardable+ award emoji",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "issueId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "noteId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji",
      "method": "postV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmoji",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Award a new Emoji",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "issueId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "noteId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}",
      "method": "deleteV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmojiAwardId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete a +awardables+ award emoji",
      "parameters": [
        {
          "name": "awardId",
          "schema": "integer",
          "required": true,
          "description": "The ID of an award emoji"
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "issueId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "noteId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}",
      "method": "getV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmojiAwardId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a specific award emoji",
      "parameters": [
        {
          "name": "awardId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the award"
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "issueId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "noteId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/issues/{issue_id}/reset_spent_time",
      "method": "postV3ProjectsIdIssuesIssueIdResetSpentTime",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Reset spent time for a project issue",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "issueId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project issue"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/issues/{issue_id}/reset_time_estimate",
      "method": "postV3ProjectsIdIssuesIssueIdResetTimeEstimate",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Reset the time estimate for a project issue",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "issueId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project issue"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/issues/{issue_id}/time_estimate",
      "method": "postV3ProjectsIdIssuesIssueIdTimeEstimate",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set a time estimate for a project issue",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "issueId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project issue"
        },
        {
          "name": "duration",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/issues/{issue_id}/time_stats",
      "method": "getV3ProjectsIdIssuesIssueIdTimeStats",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Show time stats for a project issue",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "issueId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project issue"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/issues/{issue_id}/todo",
      "method": "postV3ProjectsIdIssuesIssueIdTodo",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Create a todo on an issuable",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "issueId",
          "schema": "integer",
          "required": true,
          "description": "The ID of an issuable"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Mark a todo as done"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/issues/{noteable_id}/notes",
      "method": "getV3ProjectsIdIssuesNoteableIdNotes",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a list of project +noteable+ notes",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "noteableId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the noteable"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete a +noteable+ note"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/issues/{noteable_id}/notes",
      "method": "postV3ProjectsIdIssuesNoteableIdNotes",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Create a new +noteable+ note",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "noteableId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the noteable"
        },
        {
          "name": "body",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Delete a +noteable+ note"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/issues/{noteable_id}/notes/{note_id}",
      "method": "deleteV3ProjectsIdIssuesNoteableIdNotesNoteId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete a +noteable+ note",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "noteableId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the noteable"
        },
        {
          "name": "noteId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a note"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete a +noteable+ note"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/issues/{noteable_id}/notes/{note_id}",
      "method": "getV3ProjectsIdIssuesNoteableIdNotesNoteId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a single +noteable+ note",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "noteId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a note"
        },
        {
          "name": "noteableId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the noteable"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete a +noteable+ note"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/issues/{noteable_id}/notes/{note_id}",
      "method": "putV3ProjectsIdIssuesNoteableIdNotesNoteId",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Update an existing +noteable+ note",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "noteableId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the noteable"
        },
        {
          "name": "noteId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a note"
        },
        {
          "name": "body",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete a +noteable+ note"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/issues/{subscribable_id}/subscription",
      "method": "deleteV3ProjectsIdIssuesSubscribableIdSubscription",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Unsubscribe from a resource",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "subscribableId",
          "schema": "string",
          "required": true,
          "description": "The ID of a resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get currently authenticated user's issues"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/issues/{subscribable_id}/subscription",
      "method": "postV3ProjectsIdIssuesSubscribableIdSubscription",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Subscribe to a resource",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "subscribableId",
          "schema": "string",
          "required": true,
          "description": "The ID of a resource"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Get currently authenticated user's issues"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/keys",
      "method": "getV3ProjectsIdKeys",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a specific project's deploy keys",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the project"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete an SSH key from the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/keys",
      "method": "postV3ProjectsIdKeys",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Add new deploy key to currently authenticated user",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the project"
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Delete an SSH key from the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/keys/{key_id}",
      "method": "deleteV3ProjectsIdKeysKeyId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete deploy key for a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the project"
        },
        {
          "name": "keyId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the deploy key"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete an SSH key from the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/keys/{key_id}",
      "method": "getV3ProjectsIdKeysKeyId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get single deploy key",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the project"
        },
        {
          "name": "keyId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the deploy key"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete an SSH key from the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/keys/{key_id}/disable",
      "method": "deleteV3ProjectsIdKeysKeyIdDisable",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Disable a deploy key for a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the project"
        },
        {
          "name": "keyId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the deploy key"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete an SSH key from the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/keys/{key_id}/enable",
      "method": "postV3ProjectsIdKeysKeyIdEnable",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Enable a deploy key for a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the project"
        },
        {
          "name": "keyId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the deploy key"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Delete an SSH key from the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/labels",
      "method": "deleteV3ProjectsIdLabels",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete an existing label",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The name of the label to be deleted"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unsubscribe from a resource"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/labels",
      "method": "getV3ProjectsIdLabels",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get all labels of the project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unsubscribe from a resource"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/labels",
      "method": "postV3ProjectsIdLabels",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Create a new label",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "color",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "priority",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Unsubscribe from a resource"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/labels",
      "method": "putV3ProjectsIdLabels",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Update an existing label. At least one optional parameter is required.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "new_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "color",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "priority",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unsubscribe from a resource"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/labels/{subscribable_id}/subscription",
      "method": "deleteV3ProjectsIdLabelsSubscribableIdSubscription",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Unsubscribe from a resource",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "subscribableId",
          "schema": "string",
          "required": true,
          "description": "The ID of a resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unsubscribe from a resource"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/labels/{subscribable_id}/subscription",
      "method": "postV3ProjectsIdLabelsSubscribableIdSubscription",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Subscribe to a resource",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "subscribableId",
          "schema": "string",
          "required": true,
          "description": "The ID of a resource"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Unsubscribe from a resource"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/members",
      "method": "getV3ProjectsIdMembers",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Gets a list of group or project members viewable by the authenticated user.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "A query string to search for members"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Updates a member of a group or project."
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/members",
      "method": "postV3ProjectsIdMembers",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Adds a member to a group or project.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "user_id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "access_level",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "expires_at",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Updates a member of a group or project."
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/members/{user_id}",
      "method": "deleteV3ProjectsIdMembersUserId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Removes a user from a group or project.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "The user ID of the member"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/members/{user_id}",
      "method": "getV3ProjectsIdMembersUserId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Gets a member of a group or project.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "The user ID of the member"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Updates a member of a group or project."
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/members/{user_id}",
      "method": "putV3ProjectsIdMembersUserId",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Updates a member of a group or project.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "The user ID of the new member"
        },
        {
          "name": "access_level",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "expires_at",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Updates a member of a group or project."
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_request/{merge_request_id}",
      "method": "getV3ProjectsIdMergeRequestMergeRequestId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a single merge request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a merge request"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unsubscribe from a resource"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_request/{merge_request_id}",
      "method": "putV3ProjectsIdMergeRequestMergeRequestId",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Update a merge request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "target_branch",
          "schema": "string",
          "description": ""
        },
        {
          "name": "state_event",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "assignee_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "milestone_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "labels",
          "schema": "string",
          "description": ""
        },
        {
          "name": "remove_source_branch",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unsubscribe from a resource"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds",
      "method": "postV3ProjectsIdMergeRequestMergeRequestIdCancelMergeWhenBuildSucceeds",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Unsubscribe from a resource"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_request/{merge_request_id}/changes",
      "method": "getV3ProjectsIdMergeRequestMergeRequestIdChanges",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Show the merge request changes",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Show the merge request changes"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_request/{merge_request_id}/closes_issues",
      "method": "getV3ProjectsIdMergeRequestMergeRequestIdClosesIssues",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "List issues that will be closed on merge",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List issues that will be closed on merge"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_request/{merge_request_id}/comments",
      "method": "getV3ProjectsIdMergeRequestMergeRequestIdComments",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get the comments of a merge request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List issues that will be closed on merge"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_request/{merge_request_id}/comments",
      "method": "postV3ProjectsIdMergeRequestMergeRequestIdComments",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Post a comment to a merge request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List issues that will be closed on merge"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_request/{merge_request_id}/commits",
      "method": "getV3ProjectsIdMergeRequestMergeRequestIdCommits",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get the commits of a merge request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get the commits of a merge request"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_request/{merge_request_id}/merge",
      "method": "putV3ProjectsIdMergeRequestMergeRequestIdMerge",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Merge a merge request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "merge_commit_message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "should_remove_source_branch",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "merge_when_build_succeeds",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "sha",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unsubscribe from a resource"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_request/{subscribable_id}/subscription",
      "method": "deleteV3ProjectsIdMergeRequestSubscribableIdSubscription",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Unsubscribe from a resource",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "subscribableId",
          "schema": "string",
          "required": true,
          "description": "The ID of a resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unsubscribe from a resource"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_request/{subscribable_id}/subscription",
      "method": "postV3ProjectsIdMergeRequestSubscribableIdSubscription",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Subscribe to a resource",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "subscribableId",
          "schema": "string",
          "required": true,
          "description": "The ID of a resource"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Unsubscribe from a resource"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests",
      "method": "getV3ProjectsIdMergeRequests",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "List merge requests",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "state",
          "schema": "string",
          "required": false,
          "description": "Return opened, closed, merged, or all merge requests"
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Return merge requests ordered by `created_at` or `updated_at` fields."
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Return merge requests sorted in `asc` or `desc` order."
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        },
        {
          "name": "iid",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unsubscribe from a resource"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests",
      "method": "postV3ProjectsIdMergeRequests",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Create a merge request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "source_branch",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "target_branch",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "target_project_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "assignee_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "milestone_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "remove_source_branch",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Unsubscribe from a resource"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}",
      "method": "deleteV3ProjectsIdMergeRequestsMergeRequestId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete a merge request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a merge request"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}",
      "method": "getV3ProjectsIdMergeRequestsMergeRequestId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a single merge request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unsubscribe from a resource"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}",
      "method": "putV3ProjectsIdMergeRequestsMergeRequestId",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Update a merge request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "target_branch",
          "schema": "string",
          "description": ""
        },
        {
          "name": "state_event",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "assignee_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "milestone_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "labels",
          "schema": "string",
          "description": ""
        },
        {
          "name": "remove_source_branch",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unsubscribe from a resource"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time",
      "method": "postV3ProjectsIdMergeRequestsMergeRequestIdAddSpentTime",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Add spent time for a project merge_request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project merge_request"
        },
        {
          "name": "duration",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji",
      "method": "getV3ProjectsIdMergeRequestsMergeRequestIdAwardEmoji",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a list of project +awardable+ award emoji",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": "The ID of an Issue, Merge Request or Snippet"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji",
      "method": "postV3ProjectsIdMergeRequestsMergeRequestIdAwardEmoji",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Award a new Emoji",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}",
      "method": "deleteV3ProjectsIdMergeRequestsMergeRequestIdAwardEmojiAwardId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete a +awardables+ award emoji",
      "parameters": [
        {
          "name": "awardId",
          "schema": "integer",
          "required": true,
          "description": "The ID of an award emoji"
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}",
      "method": "getV3ProjectsIdMergeRequestsMergeRequestIdAwardEmojiAwardId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a specific award emoji",
      "parameters": [
        {
          "name": "awardId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the award"
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds",
      "method": "postV3ProjectsIdMergeRequestsMergeRequestIdCancelMergeWhenBuildSucceeds",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Unsubscribe from a resource"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/changes",
      "method": "getV3ProjectsIdMergeRequestsMergeRequestIdChanges",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Show the merge request changes",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Show the merge request changes"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues",
      "method": "getV3ProjectsIdMergeRequestsMergeRequestIdClosesIssues",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "List issues that will be closed on merge",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List issues that will be closed on merge"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/comments",
      "method": "getV3ProjectsIdMergeRequestsMergeRequestIdComments",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get the comments of a merge request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List issues that will be closed on merge"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/comments",
      "method": "postV3ProjectsIdMergeRequestsMergeRequestIdComments",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Post a comment to a merge request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List issues that will be closed on merge"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/commits",
      "method": "getV3ProjectsIdMergeRequestsMergeRequestIdCommits",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get the commits of a merge request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get the commits of a merge request"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/merge",
      "method": "putV3ProjectsIdMergeRequestsMergeRequestIdMerge",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Merge a merge request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "merge_commit_message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "should_remove_source_branch",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "merge_when_build_succeeds",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "sha",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unsubscribe from a resource"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji",
      "method": "getV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmoji",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a list of project +awardable+ award emoji",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "noteId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji",
      "method": "postV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmoji",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Award a new Emoji",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "noteId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}",
      "method": "deleteV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmojiAwardId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete a +awardables+ award emoji",
      "parameters": [
        {
          "name": "awardId",
          "schema": "integer",
          "required": true,
          "description": "The ID of an award emoji"
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "noteId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}",
      "method": "getV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmojiAwardId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a specific award emoji",
      "parameters": [
        {
          "name": "awardId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the award"
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "noteId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time",
      "method": "postV3ProjectsIdMergeRequestsMergeRequestIdResetSpentTime",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Reset spent time for a project merge_request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project merge_request"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate",
      "method": "postV3ProjectsIdMergeRequestsMergeRequestIdResetTimeEstimate",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Reset the time estimate for a project merge_request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project merge_request"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate",
      "method": "postV3ProjectsIdMergeRequestsMergeRequestIdTimeEstimate",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set a time estimate for a project merge_request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project merge_request"
        },
        {
          "name": "duration",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/time_stats",
      "method": "getV3ProjectsIdMergeRequestsMergeRequestIdTimeStats",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Show time stats for a project merge_request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project merge_request"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/todo",
      "method": "postV3ProjectsIdMergeRequestsMergeRequestIdTodo",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Create a todo on an issuable",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": "The ID of an issuable"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Mark a todo as done"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/versions",
      "method": "getV3ProjectsIdMergeRequestsMergeRequestIdVersions",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a list of merge request diff versions",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a merge request"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.12."
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}",
      "method": "getV3ProjectsIdMergeRequestsMergeRequestIdVersionsVersionId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a single merge request diff version",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "mergeRequestId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a merge request"
        },
        {
          "name": "versionId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a merge request diff version"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.12."
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{noteable_id}/notes",
      "method": "getV3ProjectsIdMergeRequestsNoteableIdNotes",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a list of project +noteable+ notes",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "noteableId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the noteable"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete a +noteable+ note"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{noteable_id}/notes",
      "method": "postV3ProjectsIdMergeRequestsNoteableIdNotes",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Create a new +noteable+ note",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "noteableId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the noteable"
        },
        {
          "name": "body",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Delete a +noteable+ note"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}",
      "method": "deleteV3ProjectsIdMergeRequestsNoteableIdNotesNoteId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete a +noteable+ note",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "noteableId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the noteable"
        },
        {
          "name": "noteId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a note"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete a +noteable+ note"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}",
      "method": "getV3ProjectsIdMergeRequestsNoteableIdNotesNoteId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a single +noteable+ note",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "noteId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a note"
        },
        {
          "name": "noteableId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the noteable"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete a +noteable+ note"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}",
      "method": "putV3ProjectsIdMergeRequestsNoteableIdNotesNoteId",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Update an existing +noteable+ note",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "noteableId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the noteable"
        },
        {
          "name": "noteId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a note"
        },
        {
          "name": "body",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete a +noteable+ note"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{subscribable_id}/subscription",
      "method": "deleteV3ProjectsIdMergeRequestsSubscribableIdSubscription",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Unsubscribe from a resource",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "subscribableId",
          "schema": "string",
          "required": true,
          "description": "The ID of a resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unsubscribe from a resource"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/merge_requests/{subscribable_id}/subscription",
      "method": "postV3ProjectsIdMergeRequestsSubscribableIdSubscription",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Subscribe to a resource",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "subscribableId",
          "schema": "string",
          "required": true,
          "description": "The ID of a resource"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Unsubscribe from a resource"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/milestones",
      "method": "getV3ProjectsIdMilestones",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a list of project milestones",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "state",
          "schema": "string",
          "required": false,
          "description": "Return \"active\", \"closed\", or \"all\" milestones"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        },
        {
          "name": "iid",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Update an existing project milestone"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/milestones",
      "method": "postV3ProjectsIdMilestones",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Create a new project milestone",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "due_date",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "start_date",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Update an existing project milestone"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/milestones/{milestone_id}",
      "method": "getV3ProjectsIdMilestonesMilestoneId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a single project milestone",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "milestoneId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project milestone"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Update an existing project milestone"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/milestones/{milestone_id}",
      "method": "putV3ProjectsIdMilestonesMilestoneId",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Update an existing project milestone",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "milestoneId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project milestone"
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "state_event",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "due_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "start_date",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Update an existing project milestone"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/milestones/{milestone_id}/issues",
      "method": "getV3ProjectsIdMilestonesMilestoneIdIssues",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get all issues for a single project milestone",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "milestoneId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project milestone"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get currently authenticated user's issues"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/notification_settings",
      "method": "getV3ProjectsIdNotificationSettings",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get project level notification level settings, defaults to Global",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The group ID or project ID or project NAMESPACE/PROJECT_NAME"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.12"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/notification_settings",
      "method": "putV3ProjectsIdNotificationSettings",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Update project level notification level settings, defaults to Global",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The group ID or project ID or project NAMESPACE/PROJECT_NAME"
        },
        {
          "name": "level",
          "schema": "string",
          "description": ""
        },
        {
          "name": "new_note",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "new_issue",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "reopen_issue",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "close_issue",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "reassign_issue",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "new_merge_request",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "reopen_merge_request",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "close_merge_request",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "reassign_merge_request",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "merge_merge_request",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "failed_pipeline",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "success_pipeline",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.12"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/pipeline",
      "method": "postV3ProjectsIdPipeline",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Create a new pipeline",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "ref",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "This feature was introduced in GitLab 8.11."
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/pipelines",
      "method": "getV3ProjectsIdPipelines",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get all Pipelines of the project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        },
        {
          "name": "scope",
          "schema": "string",
          "required": false,
          "description": "Either running, branches, or tags"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.11."
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/pipelines/{pipeline_id}",
      "method": "getV3ProjectsIdPipelinesPipelineId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Gets a specific pipeline for the project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "pipelineId",
          "schema": "integer",
          "required": true,
          "description": "The pipeline ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.11."
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/pipelines/{pipeline_id}/cancel",
      "method": "postV3ProjectsIdPipelinesPipelineIdCancel",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Cancel all builds in the pipeline",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "pipelineId",
          "schema": "integer",
          "required": true,
          "description": "The pipeline ID"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "This feature was introduced in GitLab 8.11."
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/pipelines/{pipeline_id}/retry",
      "method": "postV3ProjectsIdPipelinesPipelineIdRetry",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Retry failed builds in the pipeline",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "pipelineId",
          "schema": "integer",
          "required": true,
          "description": "The pipeline ID"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "This feature was introduced in GitLab 8.11."
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/repository/archive",
      "method": "getV3ProjectsIdRepositoryArchive",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get an archive of the repository",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "sha",
          "schema": "string",
          "required": false,
          "description": "The commit sha of the archive to be downloaded"
        },
        {
          "name": "format",
          "schema": "string",
          "required": false,
          "description": "The archive format"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/repository/blobs/{sha}",
      "method": "getV3ProjectsIdRepositoryBlobsSha",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a raw file contents",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "sha",
          "schema": "string",
          "required": true,
          "description": "The commit, branch name, or tag name"
        },
        {
          "name": "filepath",
          "schema": "string",
          "required": true,
          "description": "The path to the file to display"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/repository/branches",
      "method": "getV3ProjectsIdRepositoryBranches",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a project repository branches",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create branch"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/repository/branches",
      "method": "postV3ProjectsIdRepositoryBranches",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Create branch",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "branch_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ref",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Create branch"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/repository/branches/{branch}",
      "method": "deleteV3ProjectsIdRepositoryBranchesBranch",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete a branch",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "branch",
          "schema": "string",
          "required": true,
          "description": "The name of the branch"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/repository/branches/{branch}",
      "method": "getV3ProjectsIdRepositoryBranchesBranch",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a single branch",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "branch",
          "schema": "string",
          "required": true,
          "description": "The name of the branch"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create branch"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/repository/branches/{branch}/protect",
      "method": "putV3ProjectsIdRepositoryBranchesBranchProtect",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Protect a single branch",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "branch",
          "schema": "string",
          "required": true,
          "description": "The name of the branch"
        },
        {
          "name": "developers_can_push",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "developers_can_merge",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create branch"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/repository/branches/{branch}/unprotect",
      "method": "putV3ProjectsIdRepositoryBranchesBranchUnprotect",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Unprotect a single branch",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "branch",
          "schema": "string",
          "required": true,
          "description": "The name of the branch"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create branch"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/repository/commits",
      "method": "getV3ProjectsIdRepositoryCommits",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a project repository commits",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "refName",
          "schema": "string",
          "required": false,
          "description": "The name of a repository branch or tag, if not given the default branch is used"
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": "Only commits after or in this date will be returned"
        },
        {
          "name": "until",
          "schema": "string",
          "required": false,
          "description": "Only commits before or in this date will be returned"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The page for pagination"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "The number of results per page"
        },
        {
          "name": "path",
          "schema": "string",
          "required": false,
          "description": "The file path"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get the commits of a merge request"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/repository/commits",
      "method": "postV3ProjectsIdRepositoryCommits",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Commit multiple file changes as one commit",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "branch_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "commit_message",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "actions",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "author_email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "author_name",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Get a specific commit of a project"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/repository/commits/{sha}",
      "method": "getV3ProjectsIdRepositoryCommitsSha",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a specific commit of a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "sha",
          "schema": "string",
          "required": true,
          "description": "A commit sha, or the name of a branch or tag"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get a specific commit of a project"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/repository/commits/{sha}/blob",
      "method": "getV3ProjectsIdRepositoryCommitsShaBlob",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a raw file contents",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "sha",
          "schema": "string",
          "required": true,
          "description": "The commit, branch name, or tag name"
        },
        {
          "name": "filepath",
          "schema": "string",
          "required": true,
          "description": "The path to the file to display"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/repository/commits/{sha}/builds",
      "method": "getV3ProjectsIdRepositoryCommitsShaBuilds",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get builds for a specific commit of a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "sha",
          "schema": "string",
          "required": true,
          "description": "The SHA id of a commit"
        },
        {
          "name": "scope",
          "schema": "string",
          "required": false,
          "description": "The scope of builds to show"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was added in GitLab 8.11"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/repository/commits/{sha}/cherry_pick",
      "method": "postV3ProjectsIdRepositoryCommitsShaCherryPick",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Cherry pick commit into a branch",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "sha",
          "schema": "string",
          "required": true,
          "description": "A commit sha to be cherry picked"
        },
        {
          "name": "branch",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Get the commits of a merge request"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/repository/commits/{sha}/comments",
      "method": "getV3ProjectsIdRepositoryCommitsShaComments",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a commit's comments",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        },
        {
          "name": "sha",
          "schema": "string",
          "required": true,
          "description": "A commit sha, or the name of a branch or tag"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Post comment to commit"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/repository/commits/{sha}/comments",
      "method": "postV3ProjectsIdRepositoryCommitsShaComments",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Post comment to commit",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "sha",
          "schema": "string",
          "required": true,
          "description": "The commit's SHA"
        },
        {
          "name": "note",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "line",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "line_type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Post comment to commit"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/repository/commits/{sha}/diff",
      "method": "getV3ProjectsIdRepositoryCommitsShaDiff",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get the diff for a specific commit of a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "sha",
          "schema": "string",
          "required": true,
          "description": "A commit sha, or the name of a branch or tag"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/repository/commits/{sha}/statuses",
      "method": "getV3ProjectsIdRepositoryCommitsShaStatuses",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a commit's statuses",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "sha",
          "schema": "string",
          "required": true,
          "description": "The commit hash"
        },
        {
          "name": "ref",
          "schema": "string",
          "required": false,
          "description": "The ref"
        },
        {
          "name": "stage",
          "schema": "string",
          "required": false,
          "description": "The stage"
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "The name"
        },
        {
          "name": "all",
          "schema": "string",
          "required": false,
          "description": "Show all statuses, default: false"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Post status to a commit"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/repository/compare",
      "method": "getV3ProjectsIdRepositoryCompare",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Compare two branches, tags, or commits",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": "The commit, branch name, or tag name to start comparison"
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": "The commit, branch name, or tag name to stop comparison"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Compare two branches, tags, or commits"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/repository/contributors",
      "method": "getV3ProjectsIdRepositoryContributors",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get repository contributors",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get repository contributors"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/repository/files",
      "method": "deleteV3ProjectsIdRepositoryFiles",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete an existing file in repository",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "filePath",
          "schema": "string",
          "required": true,
          "description": "The path to new file. Ex. lib/class.rb"
        },
        {
          "name": "branchName",
          "schema": "string",
          "required": true,
          "description": "The name of branch"
        },
        {
          "name": "commitMessage",
          "schema": "string",
          "required": true,
          "description": "Commit Message"
        },
        {
          "name": "authorEmail",
          "schema": "string",
          "required": false,
          "description": "The email of the author"
        },
        {
          "name": "authorName",
          "schema": "string",
          "required": false,
          "description": "The name of the author"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/repository/files",
      "method": "getV3ProjectsIdRepositoryFiles",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a file from repository",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "filePath",
          "schema": "string",
          "required": true,
          "description": "The path to the file. Ex. lib/class.rb"
        },
        {
          "name": "ref",
          "schema": "string",
          "required": true,
          "description": "The name of branch, tag, or commit"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/repository/files",
      "method": "postV3ProjectsIdRepositoryFiles",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Create new file in repository",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "file_path",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "branch_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "commit_message",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "author_email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "author_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "content",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "encoding",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/repository/files",
      "method": "putV3ProjectsIdRepositoryFiles",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Update existing file in repository",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The project ID"
        },
        {
          "name": "file_path",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "branch_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "commit_message",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "author_email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "author_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "content",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "encoding",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/repository/merged_branches",
      "method": "deleteV3ProjectsIdRepositoryMergedBranches",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/repository/raw_blobs/{sha}",
      "method": "getV3ProjectsIdRepositoryRawBlobsSha",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a raw blob contents by blob sha",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "sha",
          "schema": "string",
          "required": true,
          "description": "The commit, branch name, or tag name"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/repository/tags",
      "method": "getV3ProjectsIdRepositoryTags",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a project repository tags",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create a new repository tag"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/repository/tags",
      "method": "postV3ProjectsIdRepositoryTags",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Create a new repository tag",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "tag_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ref",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "message",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "release_description",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Create a new repository tag"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/repository/tags/{tag_name}",
      "method": "deleteV3ProjectsIdRepositoryTagsTagName",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete a repository tag",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "tagName",
          "schema": "string",
          "required": true,
          "description": "The name of the tag"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/repository/tags/{tag_name}",
      "method": "getV3ProjectsIdRepositoryTagsTagName",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a single repository tag",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "tagName",
          "schema": "string",
          "required": true,
          "description": "The name of the tag"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create a new repository tag"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/repository/tags/{tag_name}/release",
      "method": "postV3ProjectsIdRepositoryTagsTagNameRelease",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Add a release note to a tag",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "tagName",
          "schema": "string",
          "required": true,
          "description": "The name of the tag"
        },
        {
          "name": "description",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Update a tag's release note"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/repository/tags/{tag_name}/release",
      "method": "putV3ProjectsIdRepositoryTagsTagNameRelease",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Update a tag's release note",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "tagName",
          "schema": "string",
          "required": true,
          "description": "The name of the tag"
        },
        {
          "name": "description",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Update a tag's release note"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/repository/tree",
      "method": "getV3ProjectsIdRepositoryTree",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a project repository tree",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "refName",
          "schema": "string",
          "required": false,
          "description": "The name of a repository branch or tag, if not given the default branch is used"
        },
        {
          "name": "path",
          "schema": "string",
          "required": false,
          "description": "The path of the tree"
        },
        {
          "name": "recursive",
          "schema": "boolean",
          "required": false,
          "description": "Used to get a recursive tree"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get a project repository tree"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/runners",
      "method": "getV3ProjectsIdRunners",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get runners available for project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "scope",
          "schema": "string",
          "required": false,
          "description": "The scope of specific runners to show"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Remove a runner"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/runners",
      "method": "postV3ProjectsIdRunners",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Enable a runner for a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "runner_id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Remove a runner"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/runners/{runner_id}",
      "method": "deleteV3ProjectsIdRunnersRunnerId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Disable project's runner",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "runnerId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the runner"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Remove a runner"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/services/asana",
      "method": "putV3ProjectsIdServicesAsana",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set asana service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "api_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "restrict_to_branch",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/assembla",
      "method": "putV3ProjectsIdServicesAssembla",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set assembla service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "subdomain",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/bamboo",
      "method": "putV3ProjectsIdServicesBamboo",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set bamboo service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "bamboo_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "build_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/bugzilla",
      "method": "putV3ProjectsIdServicesBugzilla",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set bugzilla service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "new_issue_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "issues_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "project_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/buildkite",
      "method": "putV3ProjectsIdServicesBuildkite",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set buildkite service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "project_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "enable_ssl_verification",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/builds-email",
      "method": "putV3ProjectsIdServicesBuildsEmail",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set builds-email service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "recipients",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "add_pusher",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "notify_only_broken_builds",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "build_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/campfire",
      "method": "putV3ProjectsIdServicesCampfire",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set campfire service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "subdomain",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "room",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/custom-issue-tracker",
      "method": "putV3ProjectsIdServicesCustomIssueTracker",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set custom-issue-tracker service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "new_issue_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "issues_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "project_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/drone-ci",
      "method": "putV3ProjectsIdServicesDroneCi",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set drone-ci service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "drone_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "enable_ssl_verification",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "merge_request_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tag_push_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/emails-on-push",
      "method": "putV3ProjectsIdServicesEmailsOnPush",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set emails-on-push service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "recipients",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "disable_diffs",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "send_from_committer_email",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tag_push_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/external-wiki",
      "method": "putV3ProjectsIdServicesExternalWiki",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set external-wiki service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "external_wiki_url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/flowdock",
      "method": "putV3ProjectsIdServicesFlowdock",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set flowdock service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/gemnasium",
      "method": "putV3ProjectsIdServicesGemnasium",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set gemnasium service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "api_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/hipchat",
      "method": "putV3ProjectsIdServicesHipchat",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set hipchat service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "room",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "color",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notify",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "api_version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "server",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "issue_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "confidential_issue_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "merge_request_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "note_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tag_push_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "build_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/irker",
      "method": "putV3ProjectsIdServicesIrker",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set irker service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "recipients",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "default_irc_uri",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "server_host",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "server_port",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "colorize_messages",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/jira",
      "method": "putV3ProjectsIdServicesJira",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set jira service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "project_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "jira_issue_transition_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "commit_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "merge_request_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/kubernetes",
      "method": "putV3ProjectsIdServicesKubernetes",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set kubernetes service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "namespace",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "api_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ca_pem",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/mattermost",
      "method": "putV3ProjectsIdServicesMattermost",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set mattermost service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "webhook",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "issue_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "confidential_issue_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "merge_request_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "note_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tag_push_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "build_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pipeline_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "wiki_page_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/mattermost-slash-commands",
      "method": "putV3ProjectsIdServicesMattermostSlashCommands",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set mattermost-slash-commands service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/mattermost_slash_commands/trigger",
      "method": "postV3ProjectsIdServicesMattermostSlashCommandsTrigger",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Trigger a slash command for mattermost-slash-commands",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/pipelines-email",
      "method": "putV3ProjectsIdServicesPipelinesEmail",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set pipelines-email service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "recipients",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "notify_only_broken_builds",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "pipeline_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/pivotaltracker",
      "method": "putV3ProjectsIdServicesPivotaltracker",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set pivotaltracker service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "restrict_to_branch",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/pushover",
      "method": "putV3ProjectsIdServicesPushover",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set pushover service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "api_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "user_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "priority",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "device",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sound",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/redmine",
      "method": "putV3ProjectsIdServicesRedmine",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set redmine service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "new_issue_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "project_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "issues_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/slack",
      "method": "putV3ProjectsIdServicesSlack",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set slack service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "webhook",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "new_issue_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "channel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "issue_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "confidential_issue_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "merge_request_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "note_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tag_push_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "build_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pipeline_events",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "wiki_page_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/slack-slash-commands",
      "method": "putV3ProjectsIdServicesSlackSlashCommands",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set slack-slash-commands service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/slack_slash_commands/trigger",
      "method": "postV3ProjectsIdServicesSlackSlashCommandsTrigger",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Trigger a slash command for slack-slash-commands",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/teamcity",
      "method": "putV3ProjectsIdServicesTeamcity",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Set teamcity service for project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "teamcity_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "build_type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "push_events",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/{service_slug}",
      "method": "deleteV3ProjectsIdServicesServiceSlug",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete a service for project",
      "parameters": [
        {
          "name": "serviceSlug",
          "schema": "string",
          "required": true,
          "description": "The name of the service"
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/services/{service_slug}",
      "method": "getV3ProjectsIdServicesServiceSlug",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get the service settings for project",
      "parameters": [
        {
          "name": "serviceSlug",
          "schema": "string",
          "required": true,
          "description": "The name of the service"
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get the service settings for project"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/share",
      "method": "postV3ProjectsIdShare",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Share the project with a group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "group_id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "group_access",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "expires_at",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Share the project with a group"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/share/{group_id}",
      "method": "deleteV3ProjectsIdShareGroupId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "groupId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the group"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/snippets",
      "method": "getV3ProjectsIdSnippets",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get all project snippets",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Update an existing project snippet"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/snippets",
      "method": "postV3ProjectsIdSnippets",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Create a new project snippet",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "file_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "visibility_level",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Update an existing project snippet"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/snippets/{noteable_id}/notes",
      "method": "getV3ProjectsIdSnippetsNoteableIdNotes",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a list of project +noteable+ notes",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "noteableId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the noteable"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete a +noteable+ note"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/snippets/{noteable_id}/notes",
      "method": "postV3ProjectsIdSnippetsNoteableIdNotes",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Create a new +noteable+ note",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "noteableId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the noteable"
        },
        {
          "name": "body",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Delete a +noteable+ note"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}",
      "method": "deleteV3ProjectsIdSnippetsNoteableIdNotesNoteId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete a +noteable+ note",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "noteableId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the noteable"
        },
        {
          "name": "noteId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a note"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete a +noteable+ note"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}",
      "method": "getV3ProjectsIdSnippetsNoteableIdNotesNoteId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a single +noteable+ note",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "noteId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a note"
        },
        {
          "name": "noteableId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the noteable"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete a +noteable+ note"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}",
      "method": "putV3ProjectsIdSnippetsNoteableIdNotesNoteId",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Update an existing +noteable+ note",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "noteableId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the noteable"
        },
        {
          "name": "noteId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a note"
        },
        {
          "name": "body",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete a +noteable+ note"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/snippets/{snippet_id}",
      "method": "deleteV3ProjectsIdSnippetsSnippetId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete a project snippet",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "snippetId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project snippet"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/snippets/{snippet_id}",
      "method": "getV3ProjectsIdSnippetsSnippetId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a single project snippet",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "snippetId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project snippet"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Update an existing project snippet"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/snippets/{snippet_id}",
      "method": "putV3ProjectsIdSnippetsSnippetId",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Update an existing project snippet",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "snippetId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project snippet"
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "file_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "visibility_level",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Update an existing project snippet"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/snippets/{snippet_id}/award_emoji",
      "method": "getV3ProjectsIdSnippetsSnippetIdAwardEmoji",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a list of project +awardable+ award emoji",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "snippetId",
          "schema": "integer",
          "required": true,
          "description": "The ID of an Issue, Merge Request or Snippet"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/snippets/{snippet_id}/award_emoji",
      "method": "postV3ProjectsIdSnippetsSnippetIdAwardEmoji",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Award a new Emoji",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "snippetId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}",
      "method": "deleteV3ProjectsIdSnippetsSnippetIdAwardEmojiAwardId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete a +awardables+ award emoji",
      "parameters": [
        {
          "name": "awardId",
          "schema": "integer",
          "required": true,
          "description": "The ID of an award emoji"
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "snippetId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}",
      "method": "getV3ProjectsIdSnippetsSnippetIdAwardEmojiAwardId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a specific award emoji",
      "parameters": [
        {
          "name": "awardId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the award"
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "snippetId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji",
      "method": "getV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmoji",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a list of project +awardable+ award emoji",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "snippetId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "noteId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji",
      "method": "postV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmoji",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Award a new Emoji",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "snippetId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "noteId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}",
      "method": "deleteV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmojiAwardId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete a +awardables+ award emoji",
      "parameters": [
        {
          "name": "awardId",
          "schema": "integer",
          "required": true,
          "description": "The ID of an award emoji"
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "snippetId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "noteId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}",
      "method": "getV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmojiAwardId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a specific award emoji",
      "parameters": [
        {
          "name": "awardId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the award"
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "snippetId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "noteId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in 8.9"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/snippets/{snippet_id}/raw",
      "method": "getV3ProjectsIdSnippetsSnippetIdRaw",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a raw project snippet",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "snippetId",
          "schema": "integer",
          "required": true,
          "description": "The ID of a project snippet"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/star",
      "method": "deleteV3ProjectsIdStar",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Unstar a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Unstar a project"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/star",
      "method": "postV3ProjectsIdStar",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Star a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Unstar a project"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/statuses/{sha}",
      "method": "postV3ProjectsIdStatusesSha",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Post status to a commit",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "sha",
          "schema": "string",
          "required": true,
          "description": "The commit hash"
        },
        {
          "name": "state",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ref",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "target_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "context",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Post status to a commit"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/triggers",
      "method": "getV3ProjectsIdTriggers",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get triggers list",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete a trigger"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/triggers",
      "method": "postV3ProjectsIdTriggers",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Create a trigger",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Delete a trigger"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/triggers/{token}",
      "method": "deleteV3ProjectsIdTriggersToken",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete a trigger",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "The unique token of trigger"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete a trigger"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/triggers/{token}",
      "method": "getV3ProjectsIdTriggersToken",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get specific trigger of a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "The unique token of trigger"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete a trigger"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/unarchive",
      "method": "postV3ProjectsIdUnarchive",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Unarchive a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Unstar a project"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/uploads",
      "method": "postV3ProjectsIdUploads",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Upload a file",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "file",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/projects/{id}/users",
      "method": "getV3ProjectsIdUsers",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get the users list of a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Return list of users matching the search criteria"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get a single user"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/variables",
      "method": "getV3ProjectsIdVariables",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get project variables",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete an existing variable from a project"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/variables",
      "method": "postV3ProjectsIdVariables",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Create a new variable in a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "value",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Delete an existing variable from a project"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/variables/{key}",
      "method": "deleteV3ProjectsIdVariablesKey",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete an existing variable from a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "The key of the variable"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete an existing variable from a project"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/variables/{key}",
      "method": "getV3ProjectsIdVariablesKey",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Get a specific variable from a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "The key of the variable"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete an existing variable from a project"
        }
      ]
    },
    {
      "url": "/v3/projects/{id}/variables/{key}",
      "method": "putV3ProjectsIdVariablesKey",
      "httpMethod": "put",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Update an existing variable from a project",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a project"
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "The key of the variable"
        },
        {
          "name": "value",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete an existing variable from a project"
        }
      ]
    },
    {
      "url": "/v3/runners",
      "method": "getV3Runners",
      "httpMethod": "get",
      "tag": "runners",
      "typeScriptTag": "runners",
      "description": "Get runners available for user",
      "parameters": [
        {
          "name": "scope",
          "schema": "string",
          "required": false,
          "description": "The scope of specific runners to show"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Remove a runner"
        }
      ]
    },
    {
      "url": "/v3/runners/all",
      "method": "getV3RunnersAll",
      "httpMethod": "get",
      "tag": "runners",
      "typeScriptTag": "runners",
      "description": "Get all runners - shared and specific",
      "parameters": [
        {
          "name": "scope",
          "schema": "string",
          "required": false,
          "description": "The scope of specific runners to show"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Remove a runner"
        }
      ]
    },
    {
      "url": "/v3/runners/{id}",
      "method": "deleteV3RunnersId",
      "httpMethod": "delete",
      "tag": "runners",
      "typeScriptTag": "runners",
      "description": "Remove a runner",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the runner"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Remove a runner"
        }
      ]
    },
    {
      "url": "/v3/runners/{id}",
      "method": "getV3RunnersId",
      "httpMethod": "get",
      "tag": "runners",
      "typeScriptTag": "runners",
      "description": "Get runner's details",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the runner"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Update runner's details"
        }
      ]
    },
    {
      "url": "/v3/runners/{id}",
      "method": "putV3RunnersId",
      "httpMethod": "put",
      "tag": "runners",
      "typeScriptTag": "runners",
      "description": "Update runner's details",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the runner"
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "tag_list",
          "schema": "array",
          "description": ""
        },
        {
          "name": "run_untagged",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "locked",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Update runner's details"
        }
      ]
    },
    {
      "url": "/v3/session",
      "method": "postV3Session",
      "httpMethod": "post",
      "tag": "session",
      "typeScriptTag": "session",
      "description": "Login to get token",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Login to get token"
        }
      ]
    },
    {
      "url": "/v3/sidekiq/compound_metrics",
      "method": "getV3SidekiqCompoundMetrics",
      "httpMethod": "get",
      "tag": "sidekiq",
      "typeScriptTag": "sidekiq",
      "description": "Get the Sidekiq Compound metrics. Includes queue, process, and job statistics",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/v3/sidekiq/job_stats",
      "method": "getV3SidekiqJobStats",
      "httpMethod": "get",
      "tag": "sidekiq",
      "typeScriptTag": "sidekiq",
      "description": "Get the Sidekiq job statistics",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/v3/sidekiq/process_metrics",
      "method": "getV3SidekiqProcessMetrics",
      "httpMethod": "get",
      "tag": "sidekiq",
      "typeScriptTag": "sidekiq",
      "description": "Get the Sidekiq process metrics",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/v3/sidekiq/queue_metrics",
      "method": "getV3SidekiqQueueMetrics",
      "httpMethod": "get",
      "tag": "sidekiq",
      "typeScriptTag": "sidekiq",
      "description": "Get the Sidekiq queue metrics",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/v3/snippets",
      "method": "getV3Snippets",
      "httpMethod": "get",
      "tag": "snippets",
      "typeScriptTag": "snippets",
      "description": "Get a snippets list for authenticated user",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.15."
        }
      ]
    },
    {
      "url": "/v3/snippets",
      "method": "postV3Snippets",
      "httpMethod": "post",
      "tag": "snippets",
      "typeScriptTag": "snippets",
      "description": "Create new snippet",
      "parameters": [
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "file_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "content",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "visibility_level",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "This feature was introduced in GitLab 8.15."
        }
      ]
    },
    {
      "url": "/v3/snippets/public",
      "method": "getV3SnippetsPublic",
      "httpMethod": "get",
      "tag": "snippets",
      "typeScriptTag": "snippets",
      "description": "List all public snippets current_user has access to",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.15."
        }
      ]
    },
    {
      "url": "/v3/snippets/{id}",
      "method": "deleteV3SnippetsId",
      "httpMethod": "delete",
      "tag": "snippets",
      "typeScriptTag": "snippets",
      "description": "Remove snippet",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of a snippet"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.15."
        }
      ]
    },
    {
      "url": "/v3/snippets/{id}",
      "method": "getV3SnippetsId",
      "httpMethod": "get",
      "tag": "snippets",
      "typeScriptTag": "snippets",
      "description": "Get a single snippet",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of a snippet"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.15."
        }
      ]
    },
    {
      "url": "/v3/snippets/{id}",
      "method": "putV3SnippetsId",
      "httpMethod": "put",
      "tag": "snippets",
      "typeScriptTag": "snippets",
      "description": "Update an existing snippet",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of a snippet"
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "file_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "content",
          "schema": "string",
          "description": ""
        },
        {
          "name": "visibility_level",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.15."
        }
      ]
    },
    {
      "url": "/v3/snippets/{id}/raw",
      "method": "getV3SnippetsIdRaw",
      "httpMethod": "get",
      "tag": "snippets",
      "typeScriptTag": "snippets",
      "description": "Get a raw snippet",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of a snippet"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/templates/dockerfiles",
      "method": "getV3TemplatesDockerfiles",
      "httpMethod": "get",
      "tag": "templates",
      "typeScriptTag": "templates",
      "description": "Get the list of the available template",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0."
        }
      ]
    },
    {
      "url": "/v3/templates/dockerfiles/{name}",
      "method": "getV3TemplatesDockerfilesName",
      "httpMethod": "get",
      "tag": "templates",
      "typeScriptTag": "templates",
      "description": "Get the text for a specific template present in local filesystem",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The name of the template"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0."
        }
      ]
    },
    {
      "url": "/v3/templates/gitignores",
      "method": "getV3TemplatesGitignores",
      "httpMethod": "get",
      "tag": "templates",
      "typeScriptTag": "templates",
      "description": "Get the list of the available template",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0."
        }
      ]
    },
    {
      "url": "/v3/templates/gitignores/{name}",
      "method": "getV3TemplatesGitignoresName",
      "httpMethod": "get",
      "tag": "templates",
      "typeScriptTag": "templates",
      "description": "Get the text for a specific template present in local filesystem",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The name of the template"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0."
        }
      ]
    },
    {
      "url": "/v3/templates/gitlab_ci_ymls",
      "method": "getV3TemplatesGitlabCiYmls",
      "httpMethod": "get",
      "tag": "templates",
      "typeScriptTag": "templates",
      "description": "Get the list of the available template",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0."
        }
      ]
    },
    {
      "url": "/v3/templates/gitlab_ci_ymls/{name}",
      "method": "getV3TemplatesGitlabCiYmlsName",
      "httpMethod": "get",
      "tag": "templates",
      "typeScriptTag": "templates",
      "description": "Get the text for a specific template present in local filesystem",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The name of the template"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0."
        }
      ]
    },
    {
      "url": "/v3/templates/licenses",
      "method": "getV3TemplatesLicenses",
      "httpMethod": "get",
      "tag": "templates",
      "typeScriptTag": "templates",
      "description": "Get the list of the available license template",
      "parameters": [
        {
          "name": "popular",
          "schema": "boolean",
          "required": false,
          "description": "If passed, returns only popular licenses"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.7."
        }
      ]
    },
    {
      "url": "/v3/templates/licenses/{name}",
      "method": "getV3TemplatesLicensesName",
      "httpMethod": "get",
      "tag": "templates",
      "typeScriptTag": "templates",
      "description": "Get the text for a specific license",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "The name of the template"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.7."
        }
      ]
    },
    {
      "url": "/v3/todos",
      "method": "deleteV3Todos",
      "httpMethod": "delete",
      "tag": "todos",
      "typeScriptTag": "todos",
      "description": "Mark all todos as done",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/v3/todos",
      "method": "getV3Todos",
      "httpMethod": "get",
      "tag": "todos",
      "typeScriptTag": "todos",
      "description": "Get a todo list",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Mark a todo as done"
        }
      ]
    },
    {
      "url": "/v3/todos/{id}",
      "method": "deleteV3TodosId",
      "httpMethod": "delete",
      "tag": "todos",
      "typeScriptTag": "todos",
      "description": "Mark a todo as done",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the todo being marked as done"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Mark a todo as done"
        }
      ]
    },
    {
      "url": "/v3/user",
      "method": "getV3User",
      "httpMethod": "get",
      "tag": "user",
      "typeScriptTag": "user",
      "description": "Get the currently authenticated user",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/user/emails",
      "method": "getV3UserEmails",
      "httpMethod": "get",
      "tag": "user",
      "typeScriptTag": "user",
      "description": "Get the currently authenticated user's email addresses",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Add new email address to the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/user/emails",
      "method": "postV3UserEmails",
      "httpMethod": "post",
      "tag": "user",
      "typeScriptTag": "user",
      "description": "Add new email address to the currently authenticated user",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Add new email address to the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/user/emails/{email_id}",
      "method": "deleteV3UserEmailsEmailId",
      "httpMethod": "delete",
      "tag": "user",
      "typeScriptTag": "user",
      "description": "Delete an email address from the currently authenticated user",
      "parameters": [
        {
          "name": "emailId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the email"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/user/emails/{email_id}",
      "method": "getV3UserEmailsEmailId",
      "httpMethod": "get",
      "tag": "user",
      "typeScriptTag": "user",
      "description": "Get a single email address owned by the currently authenticated user",
      "parameters": [
        {
          "name": "emailId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the email"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Add new email address to the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/user/keys",
      "method": "getV3UserKeys",
      "httpMethod": "get",
      "tag": "user",
      "typeScriptTag": "user",
      "description": "Get the currently authenticated user's SSH keys",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete an SSH key from the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/user/keys",
      "method": "postV3UserKeys",
      "httpMethod": "post",
      "tag": "user",
      "typeScriptTag": "user",
      "description": "Add a new SSH key to the currently authenticated user",
      "parameters": [
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Delete an SSH key from the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/user/keys/{key_id}",
      "method": "deleteV3UserKeysKeyId",
      "httpMethod": "delete",
      "tag": "user",
      "typeScriptTag": "user",
      "description": "Delete an SSH key from the currently authenticated user",
      "parameters": [
        {
          "name": "keyId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the SSH key"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete an SSH key from the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/user/keys/{key_id}",
      "method": "getV3UserKeysKeyId",
      "httpMethod": "get",
      "tag": "user",
      "typeScriptTag": "user",
      "description": "Get a single key owned by currently authenticated user",
      "parameters": [
        {
          "name": "keyId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the SSH key"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete an SSH key from the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/users",
      "method": "getV3Users",
      "httpMethod": "get",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Get the list of users",
      "parameters": [
        {
          "name": "username",
          "schema": "string",
          "required": false,
          "description": "Get a single user with a specific username"
        },
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Search for a username"
        },
        {
          "name": "active",
          "schema": "boolean",
          "required": false,
          "description": "Filters only active users"
        },
        {
          "name": "external",
          "schema": "boolean",
          "required": false,
          "description": "Filters only external users"
        },
        {
          "name": "blocked",
          "schema": "boolean",
          "required": false,
          "description": "Filters only blocked users"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get a single user"
        }
      ]
    },
    {
      "url": "/v3/users",
      "method": "postV3Users",
      "httpMethod": "post",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Create a user. Available only for admins.",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "skype",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "linkedin",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "twitter",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "website_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "organization",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "projects_limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "extern_uid",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "provider",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "bio",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "location",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "admin",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "can_create_group",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "confirm",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "external",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Get the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/users/{id}",
      "method": "deleteV3UsersId",
      "httpMethod": "delete",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Delete a user. Available only for admins.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the user"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Add new email address to the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/users/{id}",
      "method": "getV3UsersId",
      "httpMethod": "get",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Get a single user",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the user"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get a single user"
        }
      ]
    },
    {
      "url": "/v3/users/{id}",
      "method": "putV3UsersId",
      "httpMethod": "put",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Update a user. Available only for admins.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the user"
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        },
        {
          "name": "skype",
          "schema": "string",
          "description": ""
        },
        {
          "name": "linkedin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "twitter",
          "schema": "string",
          "description": ""
        },
        {
          "name": "website_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "organization",
          "schema": "string",
          "description": ""
        },
        {
          "name": "projects_limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "extern_uid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "provider",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bio",
          "schema": "string",
          "description": ""
        },
        {
          "name": "location",
          "schema": "string",
          "description": ""
        },
        {
          "name": "admin",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "can_create_group",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "confirm",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "external",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/users/{id}/block",
      "method": "putV3UsersIdBlock",
      "httpMethod": "put",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Block a user. Available only for admins.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the user"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/users/{id}/emails",
      "method": "getV3UsersIdEmails",
      "httpMethod": "get",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Get the emails addresses of a specified user. Available only for admins.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the user"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Add new email address to the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/users/{id}/emails",
      "method": "postV3UsersIdEmails",
      "httpMethod": "post",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Add an email address to a specified user. Available only for admins.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the user"
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Add new email address to the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/users/{id}/emails/{email_id}",
      "method": "deleteV3UsersIdEmailsEmailId",
      "httpMethod": "delete",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Delete an email address of a specified user. Available only for admins.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the user"
        },
        {
          "name": "emailId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the email"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Add new email address to the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/users/{id}/events",
      "method": "getV3UsersIdEvents",
      "httpMethod": "get",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Get the contribution events of a specified user",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the user"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Current page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of items per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This feature was introduced in GitLab 8.13."
        }
      ]
    },
    {
      "url": "/v3/users/{id}/keys",
      "method": "getV3UsersIdKeys",
      "httpMethod": "get",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Get the SSH keys of a specified user. Available only for admins.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the user"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete an SSH key from the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/users/{id}/keys",
      "method": "postV3UsersIdKeys",
      "httpMethod": "post",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Add an SSH key to a specified user. Available only for admins.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the user"
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Delete an SSH key from the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/users/{id}/keys/{key_id}",
      "method": "deleteV3UsersIdKeysKeyId",
      "httpMethod": "delete",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Delete an existing SSH key from a specified user. Available only for admins.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the user"
        },
        {
          "name": "keyId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the SSH key"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Delete an SSH key from the currently authenticated user"
        }
      ]
    },
    {
      "url": "/v3/users/{id}/unblock",
      "method": "putV3UsersIdUnblock",
      "httpMethod": "put",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Unblock a user. Available only for admins.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the user"
        }
      ],
      "responses": []
    },
    {
      "url": "/v3/version",
      "method": "getV3Version",
      "httpMethod": "get",
      "tag": "version",
      "typeScriptTag": "version",
      "description": "Get the version information of the GitLab instance.",
      "parameters": [],
      "responses": []
    }
  ],
  "apiBaseUrl": "https://gitlab.com/api",
  "apiDescription": "The platform for modern developers\nGitLab unifies issues, code review, CI and CD into a single UI",
  "apiTitle": "Gitlab",
  "endpoints": 251,
  "sdkMethods": 358,
  "schemas": 68,
  "parameters": 1291,
  "difficultyScore": 714.75,
  "difficulty": "Very Hard"
}