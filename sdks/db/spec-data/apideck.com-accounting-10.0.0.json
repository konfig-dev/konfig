{
  "providerName": "apideck.com",
  "openApiRaw": "https://raw.githubusercontent.com/apideck-libraries/openapi-specs/master/accounting.yml",
  "securitySchemes": {
    "apiKey": {
      "description": "To use API you have to sign up and get your own API key. Unify API accounts have sandbox mode and live mode API keys. \nTo change modes just use the appropriate key to get a live or test object. You can find your API keys on the unify settings of your Apideck app.\nYour Apideck application_id can also be found on the same page.\n\nAuthenticate your API requests by including your test or live secret API key in the request header. \n\n- Bearer authorization header: `Authorization: Bearer <your-apideck-api-key>`\n- Application id header: `x-apideck-app-id: <your-apideck-app-id>`\n\nYou should use the public keys on the SDKs and the secret keys to authenticate API requests.\n\n**Do not share or include your secret API keys on client side code.** Your API keys carry significant privileges. Please ensure to keep them 100% secure and be sure to not share your secret API keys in areas that are publicly accessible like GitHub.\n\nLearn how to set the Authorization header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key\n\nGo to Unify to grab your API KEY https://app.apideck.com/unify/api-keys\n",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "homepage": "apideck.com",
  "serviceName": "accounting",
  "apiVersion": "10.0.0",
  "methods": [
    {
      "url": "/accounting/balance-sheet",
      "method": "balanceSheetOne",
      "httpMethod": "get",
      "tag": "Balance Sheet",
      "description": "Get BalanceSheet",
      "parameters": [
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "pass_through",
          "schema": "object",
          "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads"
        },
        {
          "name": "filter",
          "schema": "object",
          "description": "Apply filters"
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/bills",
      "method": "billsAll",
      "httpMethod": "get",
      "tag": "Bills",
      "description": "List Bills",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
        },
        {
          "name": "sort",
          "schema": "object",
          "description": "Apply sorting"
        },
        {
          "name": "pass_through",
          "schema": "object",
          "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/bills",
      "method": "billsAdd",
      "httpMethod": "post",
      "tag": "Bills",
      "description": "Create Bill",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "accounting_by_row",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "balance",
          "schema": "number",
          "description": ""
        },
        {
          "name": "bank_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "bill_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bill_number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "channel",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency_rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "deposit",
          "schema": "number",
          "description": ""
        },
        {
          "name": "discount_percentage",
          "schema": "number",
          "description": ""
        },
        {
          "name": "downstream_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "due_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ledger_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "line_items",
          "schema": "array",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "paid_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "payment_method",
          "schema": "string",
          "description": ""
        },
        {
          "name": "po_number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sub_total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "supplier",
          "schema": "object",
          "description": ""
        },
        {
          "name": "tax_code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tax_inclusive",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "terms",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "total_tax",
          "schema": "number",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/bills/{id}",
      "method": "billsDelete",
      "httpMethod": "delete",
      "tag": "Bills",
      "description": "Delete Bill",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/bills/{id}",
      "method": "billsOne",
      "httpMethod": "get",
      "tag": "Bills",
      "description": "Get Bill",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/bills/{id}",
      "method": "billsUpdate",
      "httpMethod": "patch",
      "tag": "Bills",
      "description": "Update Bill",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "accounting_by_row",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "balance",
          "schema": "number",
          "description": ""
        },
        {
          "name": "bank_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "bill_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bill_number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "channel",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency_rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "deposit",
          "schema": "number",
          "description": ""
        },
        {
          "name": "discount_percentage",
          "schema": "number",
          "description": ""
        },
        {
          "name": "downstream_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "due_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ledger_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "line_items",
          "schema": "array",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "paid_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "payment_method",
          "schema": "string",
          "description": ""
        },
        {
          "name": "po_number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sub_total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "supplier",
          "schema": "object",
          "description": ""
        },
        {
          "name": "tax_code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tax_inclusive",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "terms",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "total_tax",
          "schema": "number",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/company-info",
      "method": "companyInfoOne",
      "httpMethod": "get",
      "tag": "Company Info",
      "description": "Get company info",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/credit-notes",
      "method": "creditNotesAll",
      "httpMethod": "get",
      "tag": "Credit Notes",
      "description": "List Credit Notes",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
        },
        {
          "name": "pass_through",
          "schema": "object",
          "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/credit-notes",
      "method": "creditNotesAdd",
      "httpMethod": "post",
      "tag": "Credit Notes",
      "description": "Create Credit Note",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "account",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "allocations",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "balance",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currency_rate",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customer",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "date_issued",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "date_paid",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "line_items",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "remaining_credit",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sub_total",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "tax_code",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tax_inclusive",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "terms",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "total_amount",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "total_tax",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/credit-notes/{id}",
      "method": "creditNotesDelete",
      "httpMethod": "delete",
      "tag": "Credit Notes",
      "description": "Delete Credit Note",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/credit-notes/{id}",
      "method": "creditNotesOne",
      "httpMethod": "get",
      "tag": "Credit Notes",
      "description": "Get Credit Note",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/credit-notes/{id}",
      "method": "creditNotesUpdate",
      "httpMethod": "patch",
      "tag": "Credit Notes",
      "description": "Update Credit Note",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "account",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "allocations",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "balance",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currency_rate",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customer",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "date_issued",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "date_paid",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "line_items",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "remaining_credit",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sub_total",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "tax_code",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tax_inclusive",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "terms",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "total_amount",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "total_tax",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/customers",
      "method": "customersAll",
      "httpMethod": "get",
      "tag": "Customers",
      "description": "List Customers",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
        },
        {
          "name": "filter",
          "schema": "object",
          "description": "Apply filters"
        },
        {
          "name": "pass_through",
          "schema": "object",
          "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/customers",
      "method": "customersAdd",
      "httpMethod": "post",
      "tag": "Customers",
      "description": "Create Customer",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "account",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "addresses",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "bank_accounts",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "channel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "company_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "display_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "display_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "downstream_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emails",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "individual",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "middle_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "parent",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "payment_method",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "phone_numbers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "project",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "suffix",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tax_number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tax_rate",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "websites",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/customers/{id}",
      "method": "customersDelete",
      "httpMethod": "delete",
      "tag": "Customers",
      "description": "Delete Customer",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/customers/{id}",
      "method": "customersOne",
      "httpMethod": "get",
      "tag": "Customers",
      "description": "Get Customer",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/customers/{id}",
      "method": "customersUpdate",
      "httpMethod": "patch",
      "tag": "Customers",
      "description": "Update Customer",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "account",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "addresses",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "bank_accounts",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "channel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "company_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "display_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "display_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "downstream_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emails",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "individual",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "middle_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "parent",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "payment_method",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "phone_numbers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "project",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "suffix",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tax_number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tax_rate",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "websites",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/invoice-items",
      "method": "invoiceItemsAll",
      "httpMethod": "get",
      "tag": "Invoice Items",
      "description": "List Invoice Items",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
        },
        {
          "name": "filter",
          "schema": "object",
          "description": "Apply filters"
        },
        {
          "name": "pass_through",
          "schema": "object",
          "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/invoice-items",
      "method": "invoiceItemsAdd",
      "httpMethod": "post",
      "tag": "Invoice Items",
      "description": "Create Invoice Item",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "asset_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "expense_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "income_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "inventory_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "purchase_details",
          "schema": "object",
          "description": ""
        },
        {
          "name": "purchased",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "number",
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sales_details",
          "schema": "object",
          "description": ""
        },
        {
          "name": "sold",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "taxable",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "tracked",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "tracking_category",
          "schema": "object",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "unit_price",
          "schema": "number",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/invoice-items/{id}",
      "method": "invoiceItemsDelete",
      "httpMethod": "delete",
      "tag": "Invoice Items",
      "description": "Delete Invoice Item",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/invoice-items/{id}",
      "method": "invoiceItemsOne",
      "httpMethod": "get",
      "tag": "Invoice Items",
      "description": "Get Invoice Item",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/invoice-items/{id}",
      "method": "invoiceItemsUpdate",
      "httpMethod": "patch",
      "tag": "Invoice Items",
      "description": "Update Invoice Item",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "asset_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "expense_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "income_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "inventory_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "purchase_details",
          "schema": "object",
          "description": ""
        },
        {
          "name": "purchased",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "number",
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sales_details",
          "schema": "object",
          "description": ""
        },
        {
          "name": "sold",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "taxable",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "tracked",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "tracking_category",
          "schema": "object",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "unit_price",
          "schema": "number",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/invoices",
      "method": "invoicesAll",
      "httpMethod": "get",
      "tag": "Invoices",
      "description": "List Invoices",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
        },
        {
          "name": "sort",
          "schema": "object",
          "description": "Apply sorting"
        },
        {
          "name": "pass_through",
          "schema": "object",
          "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/invoices",
      "method": "invoicesAdd",
      "httpMethod": "post",
      "tag": "Invoices",
      "description": "Create Invoice",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "accounting_by_row",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "balance",
          "schema": "number",
          "description": ""
        },
        {
          "name": "bank_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "billing_address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "channel",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency_rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customer",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customer_memo",
          "schema": "string",
          "description": ""
        },
        {
          "name": "deposit",
          "schema": "number",
          "description": ""
        },
        {
          "name": "discount_amount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "discount_percentage",
          "schema": "number",
          "description": ""
        },
        {
          "name": "downstream_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "due_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "invoice_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "invoice_sent",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ledger_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "line_items",
          "schema": "array",
          "description": ""
        },
        {
          "name": "number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "payment_method",
          "schema": "string",
          "description": ""
        },
        {
          "name": "po_number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "shipping_address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "source_document_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sub_total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "tax_code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tax_inclusive",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "template_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "terms",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "total_tax",
          "schema": "number",
          "description": ""
        },
        {
          "name": "tracking_category",
          "schema": "object",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/invoices/{id}",
      "method": "invoicesDelete",
      "httpMethod": "delete",
      "tag": "Invoices",
      "description": "Delete Invoice",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/invoices/{id}",
      "method": "invoicesOne",
      "httpMethod": "get",
      "tag": "Invoices",
      "description": "Get Invoice",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/invoices/{id}",
      "method": "invoicesUpdate",
      "httpMethod": "patch",
      "tag": "Invoices",
      "description": "Update Invoice",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "accounting_by_row",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "balance",
          "schema": "number",
          "description": ""
        },
        {
          "name": "bank_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "billing_address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "channel",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency_rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customer",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customer_memo",
          "schema": "string",
          "description": ""
        },
        {
          "name": "deposit",
          "schema": "number",
          "description": ""
        },
        {
          "name": "discount_amount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "discount_percentage",
          "schema": "number",
          "description": ""
        },
        {
          "name": "downstream_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "due_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "invoice_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "invoice_sent",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ledger_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "line_items",
          "schema": "array",
          "description": ""
        },
        {
          "name": "number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "payment_method",
          "schema": "string",
          "description": ""
        },
        {
          "name": "po_number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "shipping_address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "source_document_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sub_total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "tax_code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tax_inclusive",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "template_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "terms",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "total_tax",
          "schema": "number",
          "description": ""
        },
        {
          "name": "tracking_category",
          "schema": "object",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/journal-entries",
      "method": "journalEntriesAll",
      "httpMethod": "get",
      "tag": "Journal Entries",
      "description": "List Journal Entries",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
        },
        {
          "name": "pass_through",
          "schema": "object",
          "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/journal-entries",
      "method": "journalEntriesAdd",
      "httpMethod": "post",
      "tag": "Journal Entries",
      "description": "Create Journal Entry",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency_rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "journal_symbol",
          "schema": "string",
          "description": ""
        },
        {
          "name": "line_items",
          "schema": "array",
          "description": ""
        },
        {
          "name": "memo",
          "schema": "string",
          "description": ""
        },
        {
          "name": "number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "posted_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tax_code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tax_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/journal-entries/{id}",
      "method": "journalEntriesDelete",
      "httpMethod": "delete",
      "tag": "Journal Entries",
      "description": "Delete Journal Entry",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/journal-entries/{id}",
      "method": "journalEntriesOne",
      "httpMethod": "get",
      "tag": "Journal Entries",
      "description": "Get Journal Entry",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/journal-entries/{id}",
      "method": "journalEntriesUpdate",
      "httpMethod": "patch",
      "tag": "Journal Entries",
      "description": "Update Journal Entry",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency_rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "journal_symbol",
          "schema": "string",
          "description": ""
        },
        {
          "name": "line_items",
          "schema": "array",
          "description": ""
        },
        {
          "name": "memo",
          "schema": "string",
          "description": ""
        },
        {
          "name": "number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "posted_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tax_code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tax_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/ledger-accounts",
      "method": "ledgerAccountsAll",
      "httpMethod": "get",
      "tag": "Ledger Accounts",
      "description": "List Ledger Accounts",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
        },
        {
          "name": "pass_through",
          "schema": "object",
          "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/ledger-accounts",
      "method": "ledgerAccountsAdd",
      "httpMethod": "post",
      "tag": "Ledger Accounts",
      "description": "Create Ledger Account",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "bank_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "categories",
          "schema": "array",
          "description": ""
        },
        {
          "name": "classification",
          "schema": "string",
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "description": ""
        },
        {
          "name": "current_balance",
          "schema": "number",
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "display_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "fully_qualified_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "header",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "last_reconciliation_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "level",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "nominal_code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "opening_balance",
          "schema": "number",
          "description": ""
        },
        {
          "name": "parent_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sub_account",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "sub_accounts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "sub_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tax_rate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "tax_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/ledger-accounts/{id}",
      "method": "ledgerAccountsDelete",
      "httpMethod": "delete",
      "tag": "Ledger Accounts",
      "description": "Delete Ledger Account",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/ledger-accounts/{id}",
      "method": "ledgerAccountsOne",
      "httpMethod": "get",
      "tag": "Ledger Accounts",
      "description": "Get Ledger Account",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/ledger-accounts/{id}",
      "method": "ledgerAccountsUpdate",
      "httpMethod": "patch",
      "tag": "Ledger Accounts",
      "description": "Update Ledger Account",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "bank_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "categories",
          "schema": "array",
          "description": ""
        },
        {
          "name": "classification",
          "schema": "string",
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "description": ""
        },
        {
          "name": "current_balance",
          "schema": "number",
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "display_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "fully_qualified_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "header",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "last_reconciliation_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "level",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "nominal_code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "opening_balance",
          "schema": "number",
          "description": ""
        },
        {
          "name": "parent_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sub_account",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "sub_accounts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "sub_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tax_rate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "tax_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/payments",
      "method": "paymentsAll",
      "httpMethod": "get",
      "tag": "Payments",
      "description": "List Payments",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
        },
        {
          "name": "filter",
          "schema": "object",
          "description": "Apply filters"
        },
        {
          "name": "pass_through",
          "schema": "object",
          "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/payments",
      "method": "paymentsAdd",
      "httpMethod": "post",
      "tag": "Payments",
      "description": "Create Payment",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "account",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "accounts_receivable_account_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "accounts_receivable_account_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "allocations",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currency_rate",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customer",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "display_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "downstream_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "payment_method",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "payment_method_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "payment_method_reference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reconciled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "supplier",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "total_amount",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "transaction_date",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/payments/{id}",
      "method": "paymentsDelete",
      "httpMethod": "delete",
      "tag": "Payments",
      "description": "Delete Payment",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/payments/{id}",
      "method": "paymentsOne",
      "httpMethod": "get",
      "tag": "Payments",
      "description": "Get Payment",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/payments/{id}",
      "method": "paymentsUpdate",
      "httpMethod": "patch",
      "tag": "Payments",
      "description": "Update Payment",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "account",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "accounts_receivable_account_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "accounts_receivable_account_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "allocations",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currency_rate",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customer",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "display_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "downstream_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "payment_method",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "payment_method_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "payment_method_reference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reconciled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "supplier",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "total_amount",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "transaction_date",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/profit-and-loss",
      "method": "profitAndLossOne",
      "httpMethod": "get",
      "tag": "Profit and Loss",
      "description": "Get Profit and Loss",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "filter",
          "schema": "object",
          "description": "Apply filters"
        },
        {
          "name": "pass_through",
          "schema": "object",
          "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/purchase-orders",
      "method": "purchaseOrdersAll",
      "httpMethod": "get",
      "tag": "Purchase Orders",
      "description": "List Purchase Orders",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
        },
        {
          "name": "pass_through",
          "schema": "object",
          "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/purchase-orders",
      "method": "purchaseOrdersAdd",
      "httpMethod": "post",
      "tag": "Purchase Orders",
      "description": "Create Purchase Order",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "accounting_by_row",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "bank_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "channel",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency_rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "delivery_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "discount_percentage",
          "schema": "number",
          "description": ""
        },
        {
          "name": "downstream_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "due_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "expected_arrival_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "issued_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ledger_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "line_items",
          "schema": "array",
          "description": ""
        },
        {
          "name": "memo",
          "schema": "string",
          "description": ""
        },
        {
          "name": "payment_method",
          "schema": "string",
          "description": ""
        },
        {
          "name": "po_number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "shipping_address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sub_total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "supplier",
          "schema": "object",
          "description": ""
        },
        {
          "name": "tax_code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tax_inclusive",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "template_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "total_tax",
          "schema": "number",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/purchase-orders/{id}",
      "method": "purchaseOrdersDelete",
      "httpMethod": "delete",
      "tag": "Purchase Orders",
      "description": "Delete Purchase Order",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/purchase-orders/{id}",
      "method": "purchaseOrdersOne",
      "httpMethod": "get",
      "tag": "Purchase Orders",
      "description": "Get Purchase Order",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/purchase-orders/{id}",
      "method": "purchaseOrdersUpdate",
      "httpMethod": "patch",
      "tag": "Purchase Orders",
      "description": "Update Purchase Order",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "accounting_by_row",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "bank_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "channel",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency_rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "delivery_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "discount_percentage",
          "schema": "number",
          "description": ""
        },
        {
          "name": "downstream_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "due_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "expected_arrival_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "issued_date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ledger_account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "line_items",
          "schema": "array",
          "description": ""
        },
        {
          "name": "memo",
          "schema": "string",
          "description": ""
        },
        {
          "name": "payment_method",
          "schema": "string",
          "description": ""
        },
        {
          "name": "po_number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "shipping_address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sub_total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "supplier",
          "schema": "object",
          "description": ""
        },
        {
          "name": "tax_code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tax_inclusive",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "template_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "total_tax",
          "schema": "number",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/suppliers",
      "method": "suppliersAll",
      "httpMethod": "get",
      "tag": "Suppliers",
      "description": "List Suppliers",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
        },
        {
          "name": "filter",
          "schema": "object",
          "description": "Apply filters"
        },
        {
          "name": "pass_through",
          "schema": "object",
          "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/suppliers",
      "method": "suppliersAdd",
      "httpMethod": "post",
      "tag": "Suppliers",
      "description": "Create Supplier",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "account",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "addresses",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "bank_accounts",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "channel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "company_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "display_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "display_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "downstream_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emails",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "individual",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "middle_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "payment_method",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "phone_numbers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "suffix",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tax_number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tax_rate",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "websites",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/suppliers/{id}",
      "method": "suppliersDelete",
      "httpMethod": "delete",
      "tag": "Suppliers",
      "description": "Delete Supplier",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/suppliers/{id}",
      "method": "suppliersOne",
      "httpMethod": "get",
      "tag": "Suppliers",
      "description": "Get Supplier",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/suppliers/{id}",
      "method": "suppliersUpdate",
      "httpMethod": "patch",
      "tag": "Suppliers",
      "description": "Update Supplier",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "account",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "addresses",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "bank_accounts",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "channel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "company_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "display_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "display_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "downstream_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emails",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "individual",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "middle_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "payment_method",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "phone_numbers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "suffix",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tax_number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tax_rate",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "websites",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/tax-rates",
      "method": "taxRatesAll",
      "httpMethod": "get",
      "tag": "Tax Rates",
      "description": "List Tax Rates",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Number of results to return. Minimum 1, Maximum 200, Default 20"
        },
        {
          "name": "filter",
          "schema": "object",
          "description": "Apply filters"
        },
        {
          "name": "pass_through",
          "schema": "object",
          "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/tax-rates",
      "method": "taxRatesAdd",
      "httpMethod": "post",
      "tag": "Tax Rates",
      "description": "Create Tax Rate",
      "parameters": [
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "components",
          "schema": "array",
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "effective_tax_rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "original_tax_rate_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "report_tax_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tax_payable_account_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tax_remitted_account_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total_tax_rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/tax-rates/{id}",
      "method": "taxRatesDelete",
      "httpMethod": "delete",
      "tag": "Tax Rates",
      "description": "Delete Tax Rate",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/tax-rates/{id}",
      "method": "taxRatesOne",
      "httpMethod": "get",
      "tag": "Tax Rates",
      "description": "Get Tax Rate",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/tax-rates/{id}",
      "method": "taxRatesUpdate",
      "httpMethod": "patch",
      "tag": "Tax Rates",
      "description": "Update Tax Rate",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the record you are acting upon."
        },
        {
          "name": "x-apideck-consumer-id",
          "schema": "string",
          "required": true,
          "description": "ID of the consumer which you want to get or push data from"
        },
        {
          "name": "x-apideck-app-id",
          "schema": "string",
          "required": true,
          "description": "The ID of your Unify application"
        },
        {
          "name": "x-apideck-service-id",
          "schema": "string",
          "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
        },
        {
          "name": "raw",
          "schema": "boolean",
          "description": "Include raw response. Mostly used for debugging purposes"
        },
        {
          "name": "code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "components",
          "schema": "array",
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "string",
          "description": ""
        },
        {
          "name": "custom_mappings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "effective_tax_rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "original_tax_rate_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "report_tax_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "row_version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tax_payable_account_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tax_remitted_account_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total_tax_rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_by",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://unify.apideck.com",
  "apiDescription": "Welcome to the Accounting API.\n\nYou can use this API to access all Accounting API endpoints.\n\n## Base URL\n\nThe base URL for all API requests is `https://unify.apideck.com`\n\n## Headers\n\nCustom headers that are expected as part of the request. Note that [RFC7230](https://tools.ietf.org/html/rfc7230) states header names are case insensitive.\n\n| Name                  | Type    | Required | Description                                                                                                                                                    |\n| --------------------- | ------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| x-apideck-consumer-id | String  | Yes      | The id of the customer stored inside Apideck Vault. This can be a user id, account id, device id or whatever entity that can have integration within your app. |\n| x-apideck-service-id  | String  | No       | Describe the service you want to call (e.g., pipedrive). Only needed when a customer has activated multiple integrations for the same Unified API.             |\n| x-apideck-raw         | Boolean | No       | Include raw response. Mostly used for debugging purposes.                                                                                                      |\n| x-apideck-app-id      | String  | Yes      | The application id of your Unify application. Available at https://app.apideck.com/unify/api-keys.                                                             |\n| Authorization         | String  | Yes      | Bearer API KEY                                                                                                                                                 |\n\n## Authorization\n\nYou can interact with the API through the authorization methods below.\n\n<!-- ReDoc-Inject: <security-definitions> -->\n\n## Pagination\n\nAll API resources have support for bulk retrieval via list APIs.  Apideck uses cursor-based pagination via the optional `cursor` and `limit` parameters.\n\nTo fetch the first page of results, call the list API without a `cursor` parameter. Afterwards you can fetch subsequent pages by providing a cursor parameter. You will find the next cursor in the response body in `meta.cursors.next`. If `meta.cursors.next` is `null` you're at the end of the list.\n\nIn the REST API you can also use the `links` from the response for added convenience. Simply call the URL in `links.next` to get the next page of results.\n\n### Query Parameters\n\n| Name   | Type   | Required | Description                                                                                                        |\n| ------ | ------ | -------- | ------------------------------------------------------------------------------------------------------------------ |\n| cursor | String | No       | Cursor to start from. You can find cursors for next & previous pages in the meta.cursors property of the response. |\n| limit  | Number | No       | Number of results to return. Minimum 1, Maximum 200, Default 20                                                    |\n\n### Response Body\n\n| Name                  | Type   | Description                                                        |\n| --------------------- | ------ | ------------------------------------------------------------------ |\n| meta.cursors.previous | String | Cursor to navigate to the previous page of results through the API |\n| meta.cursors.current  | String | Cursor to navigate to the current page of results through the API  |\n| meta.cursors.next     | String | Cursor to navigate to the next page of results through the API     |\n| meta.items_on_page    | Number | Number of items returned in the data property of the response      |\n| links.previous        | String | Link to navigate to the previous page of results through the API   |\n| links.current         | String | Link to navigate to the current page of results through the API    |\n| links.next            | String | Link to navigate to the next page of results through the API       |\n\n⚠️ `meta.cursors.previous`/`links.previous` is not available for all connectors.\n\n## SDKs and API Clients\n\nWe currently offer a [Node.js](https://developers.apideck.com/sdks/node), [PHP](https://developers.apideck.com/sdks/php) and [.NET](https://developers.apideck.com/sdks/dot-net) SDK.\nNeed another SDK? [Request the SDK of your choice](https://integrations.apideck.com/request).\n\n## Debugging\n\nBecause of the nature of the abstraction we do in Apideck Unify we still provide the option to the receive raw requests and responses being handled underlying. By including the raw flag `?raw=true` in your requests you can still receive the full request. Please note that this increases the response size and can introduce extra latency.\n\n## Errors\n\nThe API returns standard HTTP response codes to indicate success or failure of the API requests. For errors, we also return a customized error message inside the JSON response. You can see the returned HTTP status codes below.\n\n| Code | Title                | Description                                                                                                                                                                                              |\n| ---- | -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| 200  | OK                   | The request message has been successfully processed, and it has produced a response. The response message varies, depending on the request method and the requested data.                                |\n| 201  | Created              | The request has been fulfilled and has resulted in one or more new resources being created.                                                                                                              |\n| 204  | No Content           | The server has successfully fulfilled the request and that there is no additional content to send in the response payload body.                                                                          |\n| 400  | Bad Request          | The receiving server cannot understand the request because of malformed syntax. Do not repeat the request without first modifying it; check the request for errors, fix them and then retry the request. |\n| 401  | Unauthorized         | The request has not been applied because it lacks valid authentication credentials for the target resource.                                                                                              |\n| 402  | Payment Required     | Subscription data is incomplete or out of date. You'll need to provide payment details to continue.                                                                                                      |\n| 403  | Forbidden            | You do not have the appropriate user rights to access the request. Do not repeat the request.                                                                                                            |\n| 404  | Not Found            | The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.                                                                           |\n| 409  | Conflict             | The request could not be completed due to a conflict with the current state of the target resource.                                                                                                      |\n| 422  | Unprocessable Entity | The server understands the content type of the request entity, and the syntax of the request entity is correct but was unable to process the contained instructions.                                     |\n| 429  | Too Many Requests    | You sent too many requests in a given amount of time (\"rate limit\"). Try again later                                                                                                                     |\n| 5xx  | Server Errors        | Something went wrong with the Unify API. These errors are logged on our side. You can contact our team to resolve the issue.                                                                             |\n\n### Handling errors\n\nThe Unify API and SDKs can produce errors for many reasons, such as a failed requests due to misconfigured integrations, invalid parameters, authentication errors, and network unavailability.\n\n### Error Types\n\n#### RequestValidationError\n\nRequest is not valid for the current endpoint. The response body will include details on the validation error. Check the spelling and types of your attributes, and ensure you are not passing data that is outside of the specification.\n\n#### UnsupportedFiltersError\n\nFilters in the request are valid, but not supported by the connector. Remove the unsupported filter(s) to get a successful response.\n\n#### UnsupportedSortFieldError\n\nSort field (`sort[by]`) in the request is valid, but not supported by the connector. Replace or remove the sort field to get a successful response.\n\n#### InvalidCursorError\n\nPagination cursor in the request is not valid for the current connector. Make sure to use a cursor returned from the API, for the same connector.\n\n#### ConnectorExecutionError\n\nA Unified API request made via one of our downstream connectors returned an unexpected error. The `status_code` returned is proxied through to error response along with their original response via the error detail.\n\n#### UnauthorizedError\n\nWe were unable to authorize the request as made. This can happen for a number of reasons, from missing header params to passing an incorrect authorization token. Verify your Api Key is being set correctly in the authorization header. ie: `Authorization: 'Bearer sk_live_***'`\n\n#### ConnectorCredentialsError\n\nA request using a given connector has not been authorized. Ensure the connector you are trying to use has been configured correctly and been authorized for use.\n\n#### ConnectorDisabledError\n\nA request has been made to a connector that has since been disabled. This may be temporary - You can contact our team to resolve the issue.\n\n#### ConnectorRateLimitError\n\nYou sent too many request to a connector. These rate limits vary from connector to connector. You will need to try again later.\n\n#### RequestLimitError\n\nYou have reached the number of requests included in your Free Tier Subscription. You will no be able to make further requests until this limit resets at the end of the month, or talk to us about upgrading your subscription to continue immediately.\n\n#### EntityNotFoundError\n\nYou've made a request for a resource or route that does not exist. Verify your path parameters or any identifiers used to fetch this resource.\n\n#### OAuthCredentialsNotFoundError\n\nWhen adding a connector integration that implements OAuth, both a `client_id` and `client_secret` must be provided before any authorizations can be performed. Verify the integration has been configured properly before continuing.\n\n#### IntegrationNotFoundError\n\nThe requested connector integration could not be found associated to your `application_id`. Verify your `application_id` is correct, and that this connector has been added and configured for your application.\n\n#### ConnectionNotFoundError\n\nA valid connection could not be found associated to your `application_id`. Something _may_ have interrupted the authorization flow. You may need to start the connector authorization process again.\n\n#### ConnectionSettingsError\n\nThe connector has required settings that were not supplied. Verify `connection.settings` contains all required settings for the connector to be callable.\n\n#### ConnectorNotFoundError\n\nA request was made for an unknown connector. Verify your `service_id` is spelled correctly, and that this connector is enabled for your provided `unified_api`.\n\n#### OAuthRedirectUriError\n\nA request was made either in a connector authorization flow, or attempting to revoke connector access without a valid `redirect_uri`. This is the url the user should be returned to on completion of process.\n\n#### OAuthInvalidStateError\n\nThe state param is required and is used to ensure the outgoing authorization state has not been altered before the user is redirected back. It also contains required params needed to identify the connector being used. If this has been altered, the authorization will not succeed.\n\n#### OAuthCodeExchangeError\n\nWhen attempting to exchange the authorization code for an `access_token` during an OAuth flow, an error occurred. This may be temporary. You can reattempt authorization or contact our team to resolve the issue.\n\n#### OAuthConnectorError\n\nIt seems something went wrong on the connector side. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### MappingError\n\nThere was an error attempting to retrieve the mapping for a given attribute. We've been notified and are working to fix this issue.\n\n#### ConnectorMappingNotFoundError\n\nIt seems the implementation for this connector is incomplete. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorResponseMappingNotFoundError\n\nWe were unable to retrieve the response mapping for this connector. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorOperationMappingNotFoundError\n\nConnector mapping has not been implemented for the requested operation. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorWorkflowMappingError\n\nThe composite api calls required for this operation have not been mapped entirely. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorOperationUnsupportedError\n\nYou're attempting a call that is not supported by the connector. It's likely this operation is supported by another connector, but we're unable to implement for this one.\n\n#### PaginationNotSupportedError\n\nPagination is not yet supported for this connector, try removing limit and/or cursor from the query. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n## API Design\n\n### API Styles and data formats\n\n#### REST API\n\nThe API is organized around [REST](https://restfulapi.net/), providing simple and predictable URIs to access and modify objects. Requests support standard HTTP methods like GET, PUT, POST, and DELETE and standard status codes. JSON is returned by all API responses, including errors. In all API requests, you must set the content-type HTTP header to application/json. All API requests must be made over HTTPS. Calls made over HTTP will fail.\n\n##### Available HTTP methods\n\nThe Apideck API uses HTTP verbs to understand if you want to read (GET), delete (DELETE) or create (POST) an object. When your web application cannot do a POST or DELETE, we provide the ability to set the method through the query parameter \\_method.\n\n```\nPOST /messages\nGET /messages\nGET /messages/{messageId}\nPATCH /messages/{messageId}\nDELETE /messages/{messageId}\n```\n\nResponse bodies are always UTF-8 encoded JSON objects, unless explicitly documented otherwise. For some endpoints and use cases we divert from REST to provide a better developer experience.\n\n### Schema\n\nAll API requests and response bodies adhere to a common JSON format representing individual items, collections of items, links to related items and additional meta data.\n\n### Meta\n\nMeta data can be represented as a top level member named “meta”. Any information may be provided in the meta data. It’s most common use is to return the total number of records when requesting a collection of resources.\n\n### Idempotence (upcoming)\n\nTo prevent the creation of duplicate resources, every POST method (such as one that creates a consumer record) must specify a unique value for the X-Unique-Transaction-ID header name. Uniquely identifying each unique POST request ensures that the API processes a given request once and only once.\n\nUniquely identifying new resource-creation POSTs is especially important when the outcome of a response is ambiguous because of a transient service interruption, such as a server-side timeout or network disruption. If a service interruption occurs, then the client application can safely retry the uniquely identified request without creating duplicate operations. (API endpoints that guarantee that every uniquely identified request is processed only once no matter how many times that uniquely identifiable request is made are described as idempotent.)\n\n### Request IDs\n\nEach API request has an associated request identifier. You can find this value in the response headers, under Request-Id. You can also find request identifiers in the URLs of individual request logs in your Dashboard. If you need to contact us about a specific request, providing the request identifier will ensure the fastest possible resolution.\n\n### Fixed field types\n\n#### Dates\n\nThe dates returned by the API are all represented in UTC (ISO8601 format).\n\nThis example `2019-11-14T00:55:31.820Z` is defined by the ISO 8601 standard. The T in the middle separates the year-month-day portion from the hour-minute-second portion. The Z on the end means UTC, that is, an offset-from-UTC of zero hours-minutes-seconds. The Z is pronounced \"Zulu\" per military/aviation tradition.\n\nThe ISO 8601 standard is more modern. The formats are wisely designed to be easy to parse by machine as well as easy to read by humans across cultures.\n\n#### Prices and Currencies\n\nAll prices returned by the API are represented as integer amounts in a currency’s smallest unit. For example, $5 USD would be returned as 500 (i.e, 500 cents).\n\nFor zero-decimal currencies, amounts will still be provided as an integer but without the need to divide by 100. For example, an amount of ¥5 (JPY) would be returned as 5.\n\nAll currency codes conform to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\n\n## Support\n\nIf you have problems or need help with your case, you can always reach out to our Support.\n\n",
  "apiTitle": "Accounting API",
  "endpoints": 25,
  "sdkMethods": 58,
  "schemas": 155,
  "parameters": 969,
  "contactUrl": "https://developers.apideck.com",
  "contactEmail": "hello@apideck.com",
  "difficultyScore": 377.75,
  "difficulty": "Hard"
}