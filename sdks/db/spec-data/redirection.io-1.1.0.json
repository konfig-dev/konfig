{
  "providerName": "redirection.io",
  "openApiRaw": "https://api.redirection.io/docs.json",
  "homepage": "redirection.io",
  "apiVersion": "1.1.0",
  "methods": [
    {
      "url": "/agent-flush-aggregate-requests",
      "method": "postAgentFlushAggregateRequestCollection",
      "httpMethod": "post",
      "tag": "AgentFlushAggregateRequest",
      "description": "Creates a AgentFlushAggregateRequest resource.",
      "parameters": [
        {
          "name": "instanceName",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "instanceTime",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "logs",
          "schema": "undefined",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/agent-flush-requests",
      "method": "/agentFlushRequestsPost",
      "httpMethod": "post",
      "tag": "AgentFlushRequest",
      "description": "Creates a AgentFlushRequest resource.",
      "parameters": [
        {
          "name": "instanceName",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "instanceTime",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "logs",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/agent-instance-updates",
      "method": "postInstanceCollection",
      "httpMethod": "post",
      "tag": "Instance",
      "description": "Creates a Instance resource.",
      "parameters": [
        {
          "name": "agentDuration",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rulesCount",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "rulesHash",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/agent-instance-updates/{id}",
      "method": "putInstanceItem",
      "httpMethod": "put",
      "tag": "Instance",
      "description": "Replaces the Instance resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "agentDuration",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rulesCount",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "rulesHash",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/agent-rule-complexes",
      "method": "agentLegacyComplexRuleCollection",
      "httpMethod": "get",
      "tag": "Rule",
      "description": "Retrieves the collection of Rule resources.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/agent-rule-straights",
      "method": "agentLegacyStraightRuleCollection",
      "httpMethod": "get",
      "tag": "Rule",
      "description": "Retrieves the collection of Rule resources.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/agent-rules",
      "method": "agentRuleCollection",
      "httpMethod": "get",
      "tag": "Rule",
      "description": "Retrieves the collection of Rule resources.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/aggregate-logs",
      "method": "getAggregateLogCollection",
      "httpMethod": "get",
      "tag": "AggregateLog",
      "description": "Retrieves the collection of AggregateLog resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "projectId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdAt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "source",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "target",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "statusCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "referrer",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "userAgent",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "userAgentType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "simplifiedUserAgent",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ruleId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "instanceName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "excludeUrls",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "excludeEmptyReferrer",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdAt_gt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdAt_gte",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdAt_lt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdAt_lte",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "statusCode_gt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "statusCode_gte",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "statusCode_lt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "statusCode_lte",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/aggregate-logs/{id}",
      "method": "getAggregateLogItem",
      "httpMethod": "get",
      "tag": "AggregateLog",
      "description": "Retrieves a AggregateLog resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/crawl-urls",
      "method": "getCrawlUrlCollection",
      "httpMethod": "get",
      "tag": "CrawlUrl",
      "description": "Retrieves the collection of CrawlUrl resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/crawl-urls/{id}",
      "method": "getCrawlUrlItem",
      "httpMethod": "get",
      "tag": "CrawlUrl",
      "description": "Retrieves a CrawlUrl resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/crawls",
      "method": "getCrawlCollection",
      "httpMethod": "get",
      "tag": "Crawl",
      "description": "Retrieves the collection of Crawl resources.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firstUrl",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sort[createdAt]",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/crawls",
      "method": "postCrawlCollection",
      "httpMethod": "post",
      "tag": "Crawl",
      "description": "Creates a Crawl resource.",
      "parameters": [
        {
          "name": "concurrency",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "firstUrl",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "headers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "httpBasicPassword",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "httpBasicUser",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "maxDepth",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "maxDuration",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "maxUrls",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "otherDomains",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "project",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sslCheckingDisabled",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "subdomainIncluded",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "userAgent",
          "schema": "undefined",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/crawls/{id}",
      "method": "getCrawlItem",
      "httpMethod": "get",
      "tag": "Crawl",
      "description": "Retrieves a Crawl resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/crawls/{id}/cancel",
      "method": "cancelCrawlItem",
      "httpMethod": "post",
      "tag": "Crawl",
      "description": "Creates a Crawl resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "archived",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "author",
          "schema": "object",
          "description": ""
        },
        {
          "name": "createdAt",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currentConcurrency",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "error",
          "schema": "string",
          "description": ""
        },
        {
          "name": "finishedAt",
          "schema": "string",
          "description": ""
        },
        {
          "name": "firstUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "marking",
          "schema": "array",
          "description": ""
        },
        {
          "name": "stats",
          "schema": "array",
          "description": ""
        },
        {
          "name": "trigger",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updatedAt",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/explain-urls",
      "method": "postExplainUrlCollection",
      "httpMethod": "post",
      "tag": "ExplainUrl",
      "description": "Creates a ExplainUrl resource.",
      "parameters": [
        {
          "name": "project",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/explain-urls/{id}",
      "method": "getExplainUrlItem",
      "httpMethod": "get",
      "tag": "ExplainUrl",
      "description": "Retrieves a ExplainUrl resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/export-rules",
      "method": "exportRuleCollection",
      "httpMethod": "get",
      "tag": "Rule",
      "description": "Retrieves the collection of Rule resources.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sort[id]",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sort[viewCount]",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/impact-rule-changes",
      "method": "postImpactRuleChangeCollection",
      "httpMethod": "post",
      "tag": "ImpactRuleChange",
      "description": "Creates a ImpactRuleChange resource.",
      "parameters": [
        {
          "name": "project",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ruleChange",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/impact-rule-changes/{id}",
      "method": "getImpactRuleChangeItem",
      "httpMethod": "get",
      "tag": "ImpactRuleChange",
      "description": "Retrieves a ImpactRuleChange resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/impact-smart-lists",
      "method": "postImpactSmartListCollection",
      "httpMethod": "post",
      "tag": "ImpactSmartList",
      "description": "Creates a ImpactSmartList resource.",
      "parameters": [
        {
          "name": "project",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smartListId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "smartListVersion",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/impact-smart-lists/{id}",
      "method": "getImpactSmartListItem",
      "httpMethod": "get",
      "tag": "ImpactSmartList",
      "description": "Retrieves a ImpactSmartList resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/imports",
      "method": "getImportCollection",
      "httpMethod": "get",
      "tag": "Import",
      "description": "Retrieves the collection of Import resources.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/imports",
      "method": "postImportCollection",
      "httpMethod": "post",
      "tag": "Import",
      "description": "Creates a Import resource.",
      "parameters": [
        {
          "name": "csvContent",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "project",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/imports/{id}",
      "method": "getImportItem",
      "httpMethod": "get",
      "tag": "Import",
      "description": "Retrieves a Import resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/instances",
      "method": "getInstanceCollection",
      "httpMethod": "get",
      "tag": "Instance",
      "description": "Retrieves the collection of Instance resources.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/instances/{id}",
      "method": "getInstanceItem",
      "httpMethod": "get",
      "tag": "Instance",
      "description": "Retrieves a Instance resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/instances/{id}",
      "method": "loggingInstanceItem",
      "httpMethod": "put",
      "tag": "Instance",
      "description": "Replaces the Instance resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "agentDuration",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rulesCount",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "rulesHash",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/instances/{id}/live",
      "method": "liveInstanceItem",
      "httpMethod": "put",
      "tag": "Instance",
      "description": "Replaces the Instance resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "agentDuration",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rulesCount",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "rulesHash",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/invitations",
      "method": "getInvitationCollection",
      "httpMethod": "get",
      "tag": "Invitation",
      "description": "Retrieves the collection of Invitation resources.",
      "parameters": [
        {
          "name": "targetId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "targetType",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/invitations",
      "method": "postInvitationCollection",
      "httpMethod": "post",
      "tag": "Invitation",
      "description": "Creates a Invitation resource.",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "target",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/invitations/accept/{token}",
      "method": "acceptInvitationItem",
      "httpMethod": "post",
      "tag": "Invitation",
      "description": "Creates a Invitation resource.",
      "parameters": [
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "The invitation acceptation token"
        },
        {
          "name": "createdAt",
          "schema": "string",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/invitations/{id}",
      "method": "deleteInvitationItem",
      "httpMethod": "delete",
      "tag": "Invitation",
      "description": "Removes the Invitation resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/invitations/{id}",
      "method": "getInvitationItem",
      "httpMethod": "get",
      "tag": "Invitation",
      "description": "Retrieves a Invitation resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/logs",
      "method": "getLogCollection",
      "httpMethod": "get",
      "tag": "Log",
      "description": "Retrieves the collection of Log resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        },
        {
          "name": "projectId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdAt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "source",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "target",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "statusCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "referrer",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "userAgent",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "userAgentType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "simplifiedUserAgent",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ruleId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "instanceName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "excludeUrls",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "excludeEmptyReferrer",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdAt_gt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdAt_gte",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdAt_lt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdAt_lte",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "statusCode_gt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "statusCode_gte",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "statusCode_lt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "statusCode_lte",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/logs/{id}",
      "method": "getLogItem",
      "httpMethod": "get",
      "tag": "Log",
      "description": "Retrieves a Log resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/markers",
      "method": "postMarkerCollection",
      "httpMethod": "post",
      "tag": "Marker",
      "description": "Creates a Marker resource.",
      "parameters": [
        {
          "name": "maximumOccurrence",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "minimumOccurrence",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "options",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "transformers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/markers/{id}",
      "method": "deleteMarkerItem",
      "httpMethod": "delete",
      "tag": "Marker",
      "description": "Removes the Marker resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/markers/{id}",
      "method": "getMarkerItem",
      "httpMethod": "get",
      "tag": "Marker",
      "description": "Retrieves a Marker resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/markers/{id}",
      "method": "putMarkerItem",
      "httpMethod": "put",
      "tag": "Marker",
      "description": "Replaces the Marker resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "maximumOccurrence",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "minimumOccurrence",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "options",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "regex",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transformers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/matching-urls",
      "method": "postMatchingUrlCollection",
      "httpMethod": "post",
      "tag": "MatchingUrl",
      "description": "Creates a MatchingUrl resource.",
      "parameters": [
        {
          "name": "project",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ruleChange",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/matching-urls/{id}",
      "method": "getMatchingUrlItem",
      "httpMethod": "get",
      "tag": "MatchingUrl",
      "description": "Retrieves a MatchingUrl resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/notifications",
      "method": "getNotificationCollection",
      "httpMethod": "get",
      "tag": "Notification",
      "description": "Retrieves the collection of Notification resources.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/notifications/{id}",
      "method": "getNotificationItem",
      "httpMethod": "get",
      "tag": "Notification",
      "description": "Retrieves a Notification resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations",
      "method": "postOrganizationCollection",
      "httpMethod": "post",
      "tag": "Organization",
      "description": "Creates a Organization resource.",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{id}",
      "method": "deleteOrganizationItem",
      "httpMethod": "delete",
      "tag": "Organization",
      "description": "Removes the Organization resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/organizations/{id}",
      "method": "getOrganizationItem",
      "httpMethod": "get",
      "tag": "Organization",
      "description": "Retrieves a Organization resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organizations/{id}",
      "method": "putOrganizationItem",
      "httpMethod": "put",
      "tag": "Organization",
      "description": "Replaces the Organization resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/post-logs",
      "method": "/postLogsPost",
      "httpMethod": "post",
      "tag": "AgentFlushRequest",
      "description": "Creates a AgentFlushRequest resource.",
      "parameters": [
        {
          "name": "instanceName",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "instanceTime",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "logs",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects",
      "method": "getProjectCollection",
      "httpMethod": "get",
      "tag": "Project",
      "description": "Retrieves the collection of Project resources.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects",
      "method": "postProjectCollection",
      "httpMethod": "post",
      "tag": "Project",
      "description": "Creates a Project resource.",
      "parameters": [
        {
          "name": "ignoreProjectTypes",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "onboardingCompletedDemos",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "organization",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{id}",
      "method": "deleteProjectItem",
      "httpMethod": "delete",
      "tag": "Project",
      "description": "Removes the Project resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/projects/{id}",
      "method": "getProjectItem",
      "httpMethod": "get",
      "tag": "Project",
      "description": "Retrieves a Project resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{id}",
      "method": "putProjectItem",
      "httpMethod": "put",
      "tag": "Project",
      "description": "Replaces the Project resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ignoreProjectTypes",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "onboardingCompletedDemos",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/publish-histories",
      "method": "getPublishHistoryCollection",
      "httpMethod": "get",
      "tag": "PublishHistory",
      "description": "Retrieves the collection of PublishHistory resources.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "createdAt[before]",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdAt[strictly_before]",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdAt[after]",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdAt[strictly_after]",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/publish-histories/{id}",
      "method": "getPublishHistoryItem",
      "httpMethod": "get",
      "tag": "PublishHistory",
      "description": "Retrieves a PublishHistory resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rule-changes",
      "method": "getRuleChangeCollection",
      "httpMethod": "get",
      "tag": "RuleChange",
      "description": "Retrieves the collection of RuleChange resources.",
      "parameters": [
        {
          "name": "versionId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rule-changes",
      "method": "postRuleChangeCollection",
      "httpMethod": "post",
      "tag": "RuleChange",
      "description": "Creates a RuleChange resource.",
      "parameters": [
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "actions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "examples",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "formattedSource",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "markers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "matchOnResponseStatus",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "rank",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "ruleId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/rule-changes/{id}",
      "method": "deleteRuleChangeItem",
      "httpMethod": "delete",
      "tag": "RuleChange",
      "description": "Removes the RuleChange resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/rule-changes/{id}",
      "method": "getRuleChangeItem",
      "httpMethod": "get",
      "tag": "RuleChange",
      "description": "Retrieves a RuleChange resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rule-set-versions",
      "method": "getRuleSetVersionCollection",
      "httpMethod": "get",
      "tag": "RuleSetVersion",
      "description": "Retrieves the collection of RuleSetVersion resources.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sort[createdAt]",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rule-set-versions/{id}",
      "method": "getRuleSetVersionItem",
      "httpMethod": "get",
      "tag": "RuleSetVersion",
      "description": "Retrieves a RuleSetVersion resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rule-set-versions/{id}/clear",
      "method": "clearRuleSetVersionItem",
      "httpMethod": "post",
      "tag": "RuleSetVersion",
      "description": "Clear a version",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the version"
        },
        {
          "name": "createdAt",
          "schema": "string",
          "description": ""
        },
        {
          "name": "current",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "isSnapshot",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "mergedRulesCount",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "publishedAt",
          "schema": "string",
          "description": ""
        },
        {
          "name": "working",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/rule-set-versions/{id}/publish",
      "method": "publishRuleSetVersionItem",
      "httpMethod": "post",
      "tag": "RuleSetVersion",
      "description": "Publish a version",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the version"
        },
        {
          "name": "createdAt",
          "schema": "string",
          "description": ""
        },
        {
          "name": "current",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "isSnapshot",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "mergedRulesCount",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "publishedAt",
          "schema": "string",
          "description": ""
        },
        {
          "name": "working",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/rule-statistics",
      "method": "getRuleStatisticCollection",
      "httpMethod": "get",
      "tag": "RuleStatistic",
      "description": "Retrieves the collection of RuleStatistic resources.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rule-statistics/{id}",
      "method": "getRuleStatisticItem",
      "httpMethod": "get",
      "tag": "RuleStatistic",
      "description": "Retrieves a RuleStatistic resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rules",
      "method": "getRuleCollection",
      "httpMethod": "get",
      "tag": "Rule",
      "description": "Retrieves the collection of Rule resources.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sort[id]",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sort[viewCount]",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "The collection page number"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rules/{id}",
      "method": "getRuleItem",
      "httpMethod": "get",
      "tag": "Rule",
      "description": "Retrieves a Rule resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/smart-lists",
      "method": "getSmartListCollection",
      "httpMethod": "get",
      "tag": "SmartList",
      "description": "Retrieves the collection of SmartList resources.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/smart-lists/{id}",
      "method": "getSmartListItem",
      "httpMethod": "get",
      "tag": "SmartList",
      "description": "Retrieves a SmartList resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/user-organizations",
      "method": "postUserOrganizationCollection",
      "httpMethod": "post",
      "tag": "UserOrganization",
      "description": "Creates a UserOrganization resource.",
      "parameters": [
        {
          "name": "functionalRoles",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "organization",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "user",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/user-organizations/{id}",
      "method": "deleteUserOrganizationItem",
      "httpMethod": "delete",
      "tag": "UserOrganization",
      "description": "Removes the UserOrganization resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/user-organizations/{id}",
      "method": "getUserOrganizationItem",
      "httpMethod": "get",
      "tag": "UserOrganization",
      "description": "Retrieves a UserOrganization resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/user-organizations/{id}",
      "method": "putUserOrganizationItem",
      "httpMethod": "put",
      "tag": "UserOrganization",
      "description": "Replaces the UserOrganization resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "functionalRoles",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/user-project-flatteneds/{id}",
      "method": "getUserProjectFlattenedItem",
      "httpMethod": "get",
      "tag": "UserProjectFlattened",
      "description": "Retrieves a UserProjectFlattened resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/user-projects",
      "method": "postUserProjectCollection",
      "httpMethod": "post",
      "tag": "UserProject",
      "description": "Creates a UserProject resource.",
      "parameters": [
        {
          "name": "functionalRoles",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "project",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "user",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/user-projects/{id}",
      "method": "deleteUserProjectItem",
      "httpMethod": "delete",
      "tag": "UserProject",
      "description": "Removes the UserProject resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/user-projects/{id}",
      "method": "getUserProjectItem",
      "httpMethod": "get",
      "tag": "UserProject",
      "description": "Retrieves a UserProject resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/user-projects/{id}",
      "method": "putUserProjectItem",
      "httpMethod": "put",
      "tag": "UserProject",
      "description": "Replaces the UserProject resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "functionalRoles",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users",
      "method": "getUserCollection",
      "httpMethod": "get",
      "tag": "User",
      "description": "Retrieves the collection of User resources.",
      "parameters": [
        {
          "name": "organizationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users",
      "method": "postUserCollection",
      "httpMethod": "post",
      "tag": "User",
      "description": "Creates a User resource.",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/forgot-password-request",
      "method": "postForgotPasswordRequestCollection",
      "httpMethod": "post",
      "tag": "ForgotPasswordRequest",
      "description": "Creates a ForgotPasswordRequest resource.",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/forgot-password/{resetToken}",
      "method": "forgotPasswordUserItem",
      "httpMethod": "put",
      "tag": "User",
      "description": "Replaces the User resource.",
      "parameters": [
        {
          "name": "resetToken",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "plainPassword",
          "schema": "string",
          "description": ""
        },
        {
          "name": "plainPasswordRepeat",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{id}",
      "method": "deleteUserItem",
      "httpMethod": "delete",
      "tag": "User",
      "description": "Removes the User resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/users/{id}",
      "method": "getUserItem",
      "httpMethod": "get",
      "tag": "User",
      "description": "Retrieves a User resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{id}/confirm-new-email/{newEmailToken}",
      "method": "confirmNewEmailUserItem",
      "httpMethod": "get",
      "tag": "User",
      "description": "Retrieves a User resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "newEmailToken",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{id}/edit-email",
      "method": "editEmailUserItem",
      "httpMethod": "put",
      "tag": "User",
      "description": "Replaces the User resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{id}/edit-info",
      "method": "editInfoUserItem",
      "httpMethod": "put",
      "tag": "User",
      "description": "Replaces the User resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{id}/edit-password",
      "method": "editPasswordUserItem",
      "httpMethod": "put",
      "tag": "User",
      "description": "Replaces the User resource.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.redirection.io",
  "apiDescription": "API documentation for redirection.io",
  "apiTitle": "redirection.io",
  "endpoints": 69,
  "sdkMethods": 89,
  "schemas": 64,
  "parameters": 260,
  "difficultyScore": 186,
  "difficulty": "Hard"
}