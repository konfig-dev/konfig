{
  "providerName": "mailscript.com",
  "openApiRaw": "http://api.mailscript.com/v2/swagger",
  "securitySchemes": {
    "bearerAuth": {
      "bearerFormat": "JWT",
      "scheme": "bearer",
      "type": "http"
    }
  },
  "homepage": "mailscript.com",
  "apiVersion": "0.4.0",
  "methods": [
    {
      "url": "/actions",
      "method": "getAllActions",
      "httpMethod": "get",
      "tag": "actions",
      "typeScriptTag": "actions",
      "description": "Get all actions for the user",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/actions",
      "method": "addAction",
      "httpMethod": "post",
      "tag": "actions",
      "typeScriptTag": "actions",
      "description": "Add an action",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/actions/{action}",
      "method": "deleteAction",
      "httpMethod": "delete",
      "tag": "actions",
      "typeScriptTag": "actions",
      "description": "Delete an action",
      "parameters": [
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": "ID of the action"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/actions/{action}",
      "method": "updateAction",
      "httpMethod": "put",
      "tag": "actions",
      "typeScriptTag": "actions",
      "description": "Update an action key",
      "parameters": [
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": "ID of action"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/addresses",
      "method": "getAllAddresses",
      "httpMethod": "get",
      "tag": "addresses",
      "typeScriptTag": "addresses",
      "description": "Get all addresses you have access to",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/addresses",
      "method": "addAddress",
      "httpMethod": "post",
      "tag": "addresses",
      "typeScriptTag": "addresses",
      "description": "Claim a new Mailscript address",
      "parameters": [
        {
          "name": "address",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/addresses/{address}",
      "method": "deleteAddress",
      "httpMethod": "delete",
      "tag": "addresses",
      "typeScriptTag": "addresses",
      "description": "Delete a mailscript address",
      "parameters": [
        {
          "name": "address",
          "schema": "string",
          "required": true,
          "description": "ID of address"
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/addresses/{address}/keys",
      "method": "getAllKeys",
      "httpMethod": "get",
      "tag": "keys",
      "typeScriptTag": "keys",
      "description": "List address keys",
      "parameters": [
        {
          "name": "address",
          "schema": "string",
          "required": true,
          "description": "ID of address"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/addresses/{address}/keys",
      "method": "addKey",
      "httpMethod": "post",
      "tag": "keys",
      "typeScriptTag": "keys",
      "description": "Add address key",
      "parameters": [
        {
          "name": "address",
          "schema": "string",
          "required": true,
          "description": "ID of address"
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "read",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "write",
          "schema": "boolean",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/addresses/{address}/keys/{key}",
      "method": "deleteKey",
      "httpMethod": "delete",
      "tag": "keys",
      "typeScriptTag": "keys",
      "description": "Delete address key",
      "parameters": [
        {
          "name": "address",
          "schema": "string",
          "required": true,
          "description": "ID of address"
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "ID of key"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/addresses/{address}/keys/{key}",
      "method": "getKey",
      "httpMethod": "get",
      "tag": "keys",
      "typeScriptTag": "keys",
      "description": "Get address key",
      "parameters": [
        {
          "name": "address",
          "schema": "string",
          "required": true,
          "description": "ID of address"
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "ID of key"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/addresses/{address}/keys/{key}",
      "method": "updateKey",
      "httpMethod": "put",
      "tag": "keys",
      "typeScriptTag": "keys",
      "description": "Update an address key",
      "parameters": [
        {
          "name": "address",
          "schema": "string",
          "required": true,
          "description": "ID of address"
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "ID of key"
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "read",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "write",
          "schema": "boolean",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/daemons/{daemon}/token",
      "method": "getDaemonToken",
      "httpMethod": "get",
      "tag": "daemon",
      "typeScriptTag": "daemon",
      "description": "Get a token for opening a daemon connection",
      "parameters": [
        {
          "name": "daemon",
          "schema": "string",
          "required": true,
          "description": "name of Daemon"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/domains",
      "method": "getAllDomains",
      "httpMethod": "get",
      "tag": "domains",
      "typeScriptTag": "domains",
      "description": "Get all domains you have access to",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/domains",
      "method": "addDomain",
      "httpMethod": "post",
      "tag": "domains",
      "typeScriptTag": "domains",
      "description": "Claim a new Domain",
      "parameters": [
        {
          "name": "domain",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/domains/verify/{domain}",
      "method": "getDomainVerify",
      "httpMethod": "get",
      "tag": "domains",
      "typeScriptTag": "domains",
      "description": "Get domain verification",
      "parameters": [
        {
          "name": "domain",
          "schema": "string",
          "required": true,
          "description": "Full Top-level domain name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/domains/verify/{domain}",
      "method": "checkDomainVerify",
      "httpMethod": "post",
      "tag": "domains",
      "typeScriptTag": "domains",
      "description": "Check a new Domain",
      "parameters": [
        {
          "name": "domain",
          "schema": "string",
          "required": true,
          "description": "Full Top-level domain name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/domains/{domain}",
      "method": "removeDomainVerify",
      "httpMethod": "delete",
      "tag": "domains",
      "typeScriptTag": "domains",
      "description": "Remove a domain",
      "parameters": [
        {
          "name": "domain",
          "schema": "string",
          "required": true,
          "description": "Full Top-level domain name"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/inputs",
      "method": "getAllInputs",
      "httpMethod": "get",
      "tag": "inputs",
      "typeScriptTag": "inputs",
      "description": "Get all inputs you have access to",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/integrations",
      "method": "getAllIntegrations",
      "httpMethod": "get",
      "tag": "integrations",
      "typeScriptTag": "integrations",
      "description": "Get all integrations for the user",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/integrations/{integration}",
      "method": "deleteIntegration",
      "httpMethod": "delete",
      "tag": "integrations",
      "typeScriptTag": "integrations",
      "description": "Delete an integration",
      "parameters": [
        {
          "name": "integration",
          "schema": "string",
          "required": true,
          "description": "ID of the integration"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/send",
      "method": "send",
      "httpMethod": "post",
      "tag": "send",
      "typeScriptTag": "send",
      "description": "Send an email",
      "parameters": [
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "html",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "subject",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "text",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/triggers",
      "method": "getAllTriggers",
      "httpMethod": "get",
      "tag": "triggers",
      "typeScriptTag": "triggers",
      "description": "Get all triggers you have access to",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/triggers",
      "method": "addTrigger",
      "httpMethod": "post",
      "tag": "triggers",
      "typeScriptTag": "triggers",
      "description": "Setup a trigger",
      "parameters": [
        {
          "name": "criteria",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/triggers/{trigger}",
      "method": "deleteTrigger",
      "httpMethod": "delete",
      "tag": "triggers",
      "typeScriptTag": "triggers",
      "description": "Delete a trigger",
      "parameters": [
        {
          "name": "trigger",
          "schema": "string",
          "required": true,
          "description": "ID of the trigger"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/triggers/{trigger}",
      "method": "updateTrigger",
      "httpMethod": "put",
      "tag": "triggers",
      "typeScriptTag": "triggers",
      "description": "Update a trigger",
      "parameters": [
        {
          "name": "trigger",
          "schema": "string",
          "required": true,
          "description": "ID of the trigger"
        },
        {
          "name": "criteria",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/user",
      "method": "getAuthenticatedUser",
      "httpMethod": "get",
      "tag": "user",
      "typeScriptTag": "user",
      "description": "Get the authenticated user",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/user",
      "method": "updateUser",
      "httpMethod": "put",
      "tag": "user",
      "typeScriptTag": "user",
      "description": "Update a user",
      "parameters": [
        {
          "name": "displayName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/verifications",
      "method": "getAllVerifications",
      "httpMethod": "get",
      "tag": "verifications",
      "typeScriptTag": "verifications",
      "description": "Get all verificats for the user",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/verifications",
      "method": "addVerification",
      "httpMethod": "post",
      "tag": "verifications",
      "typeScriptTag": "verifications",
      "description": "Start verification process for external email address or sms number",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/verifications/{verification}/verify",
      "method": "verify",
      "httpMethod": "post",
      "tag": "verifications",
      "typeScriptTag": "verifications",
      "description": "Verify an email address or sms number with a code",
      "parameters": [
        {
          "name": "verification",
          "schema": "string",
          "required": true,
          "description": "ID of the verification entry"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workflows",
      "method": "getAllWorkflows",
      "httpMethod": "get",
      "tag": "workflows",
      "typeScriptTag": "workflows",
      "description": "Get all workflows you have access to",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/workflows",
      "method": "addWorkflow",
      "httpMethod": "post",
      "tag": "workflows",
      "typeScriptTag": "workflows",
      "description": "Setup workflow",
      "parameters": [
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "active",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "input",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "trigger",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/workflows/set",
      "method": "setWorkflow",
      "httpMethod": "post",
      "tag": "workflows",
      "typeScriptTag": "workflows",
      "description": "Set a property on a workflow",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "pairs",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workflows/{workflow}",
      "method": "deleteWorkflow",
      "httpMethod": "delete",
      "tag": "workflows",
      "typeScriptTag": "workflows",
      "description": "Delete a workflow",
      "parameters": [
        {
          "name": "workflow",
          "schema": "string",
          "required": true,
          "description": "ID of the workflow"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workflows/{workflow}",
      "method": "updateWorkflow",
      "httpMethod": "put",
      "tag": "workflows",
      "typeScriptTag": "workflows",
      "description": "Update an workflow",
      "parameters": [
        {
          "name": "workflow",
          "schema": "string",
          "required": true,
          "description": "ID of the workflow"
        },
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "active",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "input",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "trigger",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces",
      "method": "getAllWorkspaces",
      "httpMethod": "get",
      "tag": "workspaces",
      "typeScriptTag": "workspaces",
      "description": "Get all workspaces you have access to",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces",
      "method": "addWorkspace",
      "httpMethod": "post",
      "tag": "workspaces",
      "typeScriptTag": "workspaces",
      "description": "Claim a Mailscript workspace",
      "parameters": [
        {
          "name": "workspace",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.mailscript.com/v2",
  "apiTitle": "Mailscript",
  "endpoints": 23,
  "sdkMethods": 38,
  "schemas": 55,
  "parameters": 53,
  "difficultyScore": 78.75,
  "difficulty": "Easy"
}