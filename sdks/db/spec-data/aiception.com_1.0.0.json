{
  "providerName": "aiception.com",
  "openApiRaw": "https://aiception.com/static/swagger.json",
  "securitySchemes": {
    "UserSecurity": {
      "type": "http",
      "scheme": "basic"
    }
  },
  "homepage": "aiception.com",
  "apiVersion": "1.0.0",
  "methods": [
    {
      "url": "/adult_content",
      "method": "/adultContentPost",
      "httpMethod": "post",
      "tag": "vision",
      "typeScriptTag": "vision",
      "description": "Image contains nudity or sexually explicit content? [ image_url -> id ]",
      "parameters": [
        {
          "name": "async",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "image_url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/adult_content/{taskId}",
      "method": "/adultContent/{taskId}Get",
      "httpMethod": "get",
      "tag": "vision",
      "typeScriptTag": "vision",
      "description": "Gets the adult_content task [ id -> adult content task ]",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "An internal id for the task"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/artistic_image",
      "method": "/artisticImagePost",
      "httpMethod": "post",
      "tag": "creative",
      "typeScriptTag": "creative",
      "description": "Create an artistic image [ image_url, style_url -> id ]",
      "parameters": [
        {
          "name": "async",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "image_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "style_url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/artistic_image/{taskId}",
      "method": "/artisticImage/{taskId}Get",
      "httpMethod": "get",
      "tag": "creative",
      "typeScriptTag": "creative",
      "description": "Gets a artistic image by task id [ id -> artistic image task ]",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "An internal id for the task"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/detect_object",
      "method": "/detectObjectPost",
      "httpMethod": "post",
      "tag": "vision",
      "typeScriptTag": "vision",
      "description": "What is that object? [ image_url -> id ]",
      "parameters": [
        {
          "name": "async",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "image_url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/detect_object/{taskId}",
      "method": "/detectObject/{taskId}Get",
      "httpMethod": "get",
      "tag": "vision",
      "typeScriptTag": "vision",
      "description": "Gets the detect_object task [ id -> detect object task]",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "An internal id for the task"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/face",
      "method": "/facePost",
      "httpMethod": "post",
      "tag": "vision",
      "typeScriptTag": "vision",
      "description": "Find all faces in the image [ image_url -> id ]",
      "parameters": [
        {
          "name": "async",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "image_url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/face/{taskId}",
      "method": "/face/{taskId}Get",
      "httpMethod": "get",
      "tag": "vision",
      "typeScriptTag": "vision",
      "description": "Gets the face task [ id -> face task ]",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "An internal id for the task"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/face_age",
      "method": "/faceAgePost",
      "httpMethod": "post",
      "tag": "vision",
      "typeScriptTag": "vision",
      "description": "How old is the person in the image? [ image_url -> id ]",
      "parameters": [
        {
          "name": "async",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "image_url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/face_age/{taskId}",
      "method": "/faceAge/{taskId}Get",
      "httpMethod": "get",
      "tag": "vision",
      "typeScriptTag": "vision",
      "description": "Gets the face_age task [ id -> face age task ]",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "An internal id for the task"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://aiception.com/api/v2.1",
  "apiDescription": "Here you can play & test & prototype all the endpoints using just your browser! Go ahead!",
  "apiTitle": "AIception Interactive",
  "endpoints": 10,
  "sdkMethods": 10,
  "schemas": 4,
  "parameters": 16,
  "difficultyScore": 16,
  "difficulty": "Easy"
}