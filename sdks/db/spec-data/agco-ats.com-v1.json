{
  "providerName": "agco-ats.com",
  "openApiRaw": "https://secure.agco-ats.com:443/swagger/docs/v1",
  "securitySchemes": {},
  "homepage": "agco-ats.com",
  "apiVersion": "v1",
  "methods": [
    {
      "url": "/api/v2/AftermarketServices/Certificates",
      "method": "aftermarketServicesGetCerts",
      "httpMethod": "get",
      "tag": "AftermarketServices",
      "description": "No Documentation Found.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AftermarketServices/ECUs/{serialNumber}",
      "method": "aftermarketServicesPutEcu",
      "httpMethod": "put",
      "tag": "AftermarketServices",
      "description": "Activate or Deactivate an ECU, or Report an ECU as Damaged.",
      "parameters": [
        {
          "name": "serialNumber",
          "schema": "string",
          "required": true,
          "description": "The serial number of the ECU."
        },
        {
          "name": "edtInstanceId",
          "schema": "string",
          "required": true,
          "description": "The EDT Instance Id of the kit calling this method."
        },
        {
          "name": "ActivationCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "DamagedDescription",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "EngineSerialNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ReplacesECUSerialNumber",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "SerialNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "State",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An AGCO Power ECU"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AftermarketServices/Engines/{serialNumber}/IQACodes",
      "method": "aftermarketServicesGetEngineIqaCodes",
      "httpMethod": "get",
      "tag": "AftermarketServices",
      "description": "Get injector codes given engine.",
      "parameters": [
        {
          "name": "serialNumber",
          "schema": "string",
          "required": true,
          "description": "The serial number of the engine."
        },
        {
          "name": "edtInstanceId",
          "schema": "string",
          "required": true,
          "description": "The EDT Instance Id of the kit calling this method."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AftermarketServices/Engines/{serialNumber}/IQACodes",
      "method": "aftermarketServicesPutIqaCodes",
      "httpMethod": "put",
      "tag": "AftermarketServices",
      "description": "Report the IQA codes used by an engine",
      "parameters": [
        {
          "name": "serialNumber",
          "schema": "string",
          "required": true,
          "description": "The serial number of the Engine"
        },
        {
          "name": "edtInstanceId",
          "schema": "string",
          "required": true,
          "description": "The EDT Instance Id of the kit calling this method."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AftermarketServices/Engines/{serialNumber}/ProductionData",
      "method": "aftermarketServicesGetProductionData",
      "httpMethod": "get",
      "tag": "AftermarketServices",
      "description": "Get production calibration data for given engine.",
      "parameters": [
        {
          "name": "serialNumber",
          "schema": "string",
          "required": true,
          "description": "The serial number of the engine."
        },
        {
          "name": "edtInstanceId",
          "schema": "string",
          "required": true,
          "description": "The EDT Instance Id of the kit calling this method."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AftermarketServices/Hello",
      "method": "aftermarketServicesGetConnectionStatus",
      "httpMethod": "get",
      "tag": "AftermarketServices",
      "description": "Check whether there is connectivity to AGCO Power Web Services",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AftermarketServices/UserStatuses",
      "method": "aftermarketServicesGetUserStatus",
      "httpMethod": "get",
      "tag": "AftermarketServices",
      "description": "Retrieve the status of an EDT Kit Registration with AGCO Power Web Services",
      "parameters": [
        {
          "name": "voucherCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dealerCode",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Status of a voucher in the AGCO Power system"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AftermarketServices/UserStatuses",
      "method": "aftermarketServicesUpdateUserStatus",
      "httpMethod": "put",
      "tag": "AftermarketServices",
      "description": "Update the status of an EDT Kit Registration with AGCO Power Web Services",
      "parameters": [
        {
          "name": "DealerCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "State",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "VoucherCode",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthenticatedUsers/{UserID}/Tokens",
      "method": "authenticationPutManageTokens",
      "httpMethod": "put",
      "tag": "Authentication",
      "description": "Manage API tokens.",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "BearerAction",
          "schema": "string",
          "description": ""
        },
        {
          "name": "MACAction",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v2/Authentication",
      "method": "authenticationDefault",
      "httpMethod": "post",
      "tag": "Authentication",
      "description": "Authenticate a user.",
      "parameters": [
        {
          "name": "BearerAction",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "MACAction",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Authentication/IsAlive",
      "method": "authenticationIsAlive",
      "httpMethod": "get",
      "tag": "Authentication",
      "description": "Acknowledges the connection to the API",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/api/v2/Authentication/RequestPasswordReset",
      "method": "authenticationRequestPasswordReset",
      "httpMethod": "post",
      "tag": "Authentication",
      "description": "Request a password reset.",
      "parameters": [
        {
          "name": "ParameterName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Username",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v2/Authentication/ResetPasword",
      "method": "authenticationResetPasword",
      "httpMethod": "post",
      "tag": "Authentication",
      "description": "Reset a password",
      "parameters": [
        {
          "name": "NewPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Token",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v2/AuthorizationCategories",
      "method": "authorizationCategoriesGet",
      "httpMethod": "get",
      "tag": "AuthorizationCategories",
      "description": "Get authorization categories.",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit.  If not specified, the default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset.  If not specified, the default page offset is 0."
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "Optional. Filter by categories visible to the provided user with the provided userID."
        },
        {
          "name": "definitionId",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter by categories containing a definition with the provided ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationCategories",
      "method": "authorizationCategoriesPost",
      "httpMethod": "post",
      "tag": "AuthorizationCategories",
      "description": "Add an authorization category.",
      "parameters": [
        {
          "name": "Description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationCategories/Users",
      "method": "authorizationCategoriesGetUsers",
      "httpMethod": "get",
      "tag": "AuthorizationCategories",
      "description": "Returns a report of access that users have to Authorization Categories.",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. Defaults to 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. Defaults to 0."
        },
        {
          "name": "userIDs",
          "schema": "string",
          "required": false,
          "description": "Optional. Includes only users with IDs on the provided comma-separated list."
        },
        {
          "name": "categoryIDs",
          "schema": "string",
          "required": false,
          "description": "Optional. Includes only users with categories with IDs on the provided comma-separated list."
        },
        {
          "name": "includeCategories",
          "schema": "boolean",
          "required": false,
          "description": "If true, include full Authorization Category detail. Defaults to false."
        },
        {
          "name": "includeUsers",
          "schema": "boolean",
          "required": false,
          "description": "If true, include full User detail. Defaults to false."
        },
        {
          "name": "userSearch",
          "schema": "string",
          "required": false,
          "description": "Optional. Includes only users with a Name, Username, or Email containing the provided value."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationCategories/{id}",
      "method": "authorizationCategoriesDelete",
      "httpMethod": "delete",
      "tag": "AuthorizationCategories",
      "description": "Remove an authorization category.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the authorization category."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationCategories/{id}",
      "method": "authorizationCategoriesPut",
      "httpMethod": "put",
      "tag": "AuthorizationCategories",
      "description": "Update an authorization category.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationCategories/{id}/Users/{userID}",
      "method": "authorizationCategoriesRemoveUser",
      "httpMethod": "delete",
      "tag": "AuthorizationCategories",
      "description": "Deletes a category a user could see.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationCategories/{id}/Users/{userID}",
      "method": "authorizationCategoriesAddUser",
      "httpMethod": "post",
      "tag": "AuthorizationCategories",
      "description": "Add a category that a user can see.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationCodeDefinitions",
      "method": "authorizationCodeDefinitionsGetAuthorizationCodeDefinition",
      "httpMethod": "get",
      "tag": "AuthorizationCodeDefinitions",
      "description": "Get authorization code definitions.",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit.  If not specified, the default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset.  If not specified, the default page offset is 0."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Optional. If specified, filters definitions by name. Starting and ending wildcards (*) supported."
        },
        {
          "name": "createdByUserId",
          "schema": "integer",
          "required": false,
          "description": "Optional. If specified, filters definitions to those created by the given User ID."
        },
        {
          "name": "deletedByUserId",
          "schema": "integer",
          "required": false,
          "description": "Optional. If specified, filters definitions to those deleted by the given User ID."
        },
        {
          "name": "includeDeleted",
          "schema": "boolean",
          "required": false,
          "description": "Optional. Whether to include deleted definitions. 'False' by default."
        },
        {
          "name": "categoryId",
          "schema": "string",
          "required": false,
          "description": "Optional. If specified, filters definitions with the designated categoryID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationCodeDefinitions",
      "method": "authorizationCodeDefinitionsPostAuthorizationCodeDefinition",
      "httpMethod": "post",
      "tag": "AuthorizationCodeDefinitions",
      "description": "Add an authorization code definition.",
      "parameters": [
        {
          "name": "AuthorizationID",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "CreatedByUserID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "CreatedDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "DataFields",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "DeletedByUserID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "DeletedDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "DurationAccuracy",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "DurationAmount",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "DurationUnits",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "HashLength",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "ID",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "IsDeleted",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "RandomLength",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "ValidationFields",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationCodeDefinitions/{ID}/Categories/{categoryID}",
      "method": "authorizationCodeDefinitionsRemoveCategoryFromDefinition",
      "httpMethod": "delete",
      "tag": "AuthorizationCodeDefinitions",
      "description": "Deletes the category from the authorization code definition.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "categoryId",
          "schema": "string",
          "required": true,
          "description": "A category ID, as a GUID."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationCodeDefinitions/{ID}/Categories/{categoryID}",
      "method": "authorizationCodeDefinitionsAddCategoryToDefinition",
      "httpMethod": "post",
      "tag": "AuthorizationCodeDefinitions",
      "description": "Add a category to an authorizationCodeDefintion.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "categoryId",
          "schema": "string",
          "required": true,
          "description": "A category ID, as a GUID."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationCodeDefinitions/{id}",
      "method": "authorizationCodeDefinitionsDeleteAuthorizationCodeDefinition",
      "httpMethod": "delete",
      "tag": "AuthorizationCodeDefinitions",
      "description": "Disable an authorization code definition",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the authorization code definition."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationCodeDefinitions/{id}",
      "method": "/api/v2/authorizationCodeDefinitions/{id}Get",
      "httpMethod": "get",
      "tag": "AuthorizationCodeDefinitions",
      "description": "Get an authorization code definition by its ID",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the authorization code definition."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the model used to define how a type of authorization code is generated."
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationCodeDefinitions/{id}",
      "method": "authorizationCodeDefinitionsPutAuthorizationCodeDefinition",
      "httpMethod": "put",
      "tag": "AuthorizationCodeDefinitions",
      "description": "Update an authorization code definition",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the authorization code definition."
        },
        {
          "name": "AuthorizationID",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "CreatedByUserID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "CreatedDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "DataFields",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "DeletedByUserID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "DeletedDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "DurationAccuracy",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "DurationAmount",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "DurationUnits",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "HashLength",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "ID",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "IsDeleted",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "RandomLength",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "ValidationFields",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationCodes",
      "method": "authorizationCodesGetAuthorizationCodes",
      "httpMethod": "get",
      "tag": "AuthorizationCodes",
      "description": "Get authorization codes.",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": false,
          "description": "Optional. If provided, searches for entities with the provided authorization code."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit.  If not specified, the default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset.  If not specified, the default page offset is 0."
        },
        {
          "name": "definitionId",
          "schema": "string",
          "required": false,
          "description": "Optional. If specified, filters codes by definition id."
        },
        {
          "name": "createdByUserId",
          "schema": "integer",
          "required": false,
          "description": "Optional. If specified, filters codes to those created by the given User ID."
        },
        {
          "name": "deletedByUserId",
          "schema": "integer",
          "required": false,
          "description": "Optional. If specified, filters codes to those deleted by the given User ID."
        },
        {
          "name": "includeDeleted",
          "schema": "boolean",
          "required": false,
          "description": "Optional. Whether to include deleted codes. 'False' by default."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationCodes",
      "method": "authorizationCodesPostAuthorizationCode",
      "httpMethod": "post",
      "tag": "AuthorizationCodes",
      "description": "Generates an authorization code using the provided definition and parameters.",
      "parameters": [
        {
          "name": "Code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "CreatedByUserID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "CreatedDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "DataParameters",
          "schema": "array",
          "description": ""
        },
        {
          "name": "DefinitionID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "DeletedByUserID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "DeletedDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "EffectiveDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "IsDeleted",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "ValidationParameters",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationCodes/{id}",
      "method": "authorizationCodesDeleteAuthorizationCode",
      "httpMethod": "delete",
      "tag": "AuthorizationCodes",
      "description": "Hide an authorization code.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The id of the authorization code."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationCodes/{id}",
      "method": "authorizationCodesGetAuthorizationCode",
      "httpMethod": "get",
      "tag": "AuthorizationCodes",
      "description": "Get an authorization code by its ID.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The id of the authorization code."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationCodes/{id}",
      "method": "authorizationCodesPutAuthorizationCode",
      "httpMethod": "put",
      "tag": "AuthorizationCodes",
      "description": "Update an authorization code.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The id of the authorization code."
        },
        {
          "name": "Code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "CreatedByUserID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "CreatedDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "DataParameters",
          "schema": "array",
          "description": ""
        },
        {
          "name": "DefinitionID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "DeletedByUserID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "DeletedDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "EffectiveDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "IsDeleted",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "ValidationParameters",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationCodes/{id}/ContactInformation",
      "method": "authorizationCodesGetContactInformation",
      "httpMethod": "get",
      "tag": "AuthorizationCodes",
      "description": "Get contact information for an authorization code.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The id of the authorization code."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationCodes/{id}/Validate",
      "method": "authorizationCodesValidateAuthorizationCode",
      "httpMethod": "get",
      "tag": "AuthorizationCodes",
      "description": "No Documentation Found.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationContactInformation",
      "method": "authorizationContactInformationGet",
      "httpMethod": "get",
      "tag": "AuthorizationContactInformation",
      "description": "Get contact information for authorization codes.",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit.  If not specified, the default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset.  If not specified, the default page offset is 0."
        },
        {
          "name": "authorizationCode",
          "schema": "string",
          "required": false,
          "description": "Optional. Search by authorization code."
        },
        {
          "name": "afterDate",
          "schema": "string",
          "required": false,
          "description": "Optional. Include only data for authorization codes created after a provided date."
        },
        {
          "name": "beforeDate",
          "schema": "string",
          "required": false,
          "description": "Optional. Include only data for authorization codes created before a provided date."
        },
        {
          "name": "dealerCode",
          "schema": "string",
          "required": false,
          "description": "Optional. Search by dealer code."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/AuthorizationContactInformation",
      "method": "authorizationContactInformationPost",
      "httpMethod": "post",
      "tag": "AuthorizationContactInformation",
      "description": "Add contact information for authorization code.",
      "parameters": [
        {
          "name": "AuthorizationCodeID",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "Code",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Contact",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "CreatedBy",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "CreatedDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "DealerCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Dealership",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "DefinitionName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Notes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Phone",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Brands",
      "method": "brandsBrands",
      "httpMethod": "get",
      "tag": "Brands",
      "description": "Gets a list of Brands.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Bundles",
      "method": "bundlesGetBundles",
      "httpMethod": "get",
      "tag": "Bundles",
      "description": "Get the list of bundles.",
      "parameters": [
        {
          "name": "updateGroupId",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter by UpdateGroup ID."
        },
        {
          "name": "active",
          "schema": "boolean",
          "required": false,
          "description": "Optional. Filter by active status."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        },
        {
          "name": "bundleNumber",
          "schema": "integer",
          "required": false,
          "description": "Optional. If provided, filters by BundleNumber."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Bundles",
      "method": "bundlesPostBundle",
      "httpMethod": "post",
      "tag": "Bundles",
      "description": "Add a Bundle to the Update System.",
      "parameters": [
        {
          "name": "Active",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "BundleID",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "BundleNumber",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "UpdateGroupID",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Bundles/{ID}",
      "method": "bundlesDeleteBundle",
      "httpMethod": "delete",
      "tag": "Bundles",
      "description": "Delete a Bundle.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The Bundle ID to Delete"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Bundles/{ID}",
      "method": "bundlesGetBundle",
      "httpMethod": "get",
      "tag": "Bundles",
      "description": "Get a specific Bundle by ID.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The Bundle ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Bundles/{ID}",
      "method": "bundlesPutBundle",
      "httpMethod": "put",
      "tag": "Bundles",
      "description": "Modify a Bundle in the Update System.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique ID of the Bundle"
        },
        {
          "name": "Active",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "BundleID",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "BundleNumber",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "UpdateGroupID",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Clients",
      "method": "clientsGet",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Get a List of Clients in the Update System.",
      "parameters": [
        {
          "name": "tag",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter clients by Tag. Wildcards are supported (*)."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Clients/{ClientID}/CachedFiles",
      "method": "updateSystemGetCachedFiles",
      "httpMethod": "get",
      "tag": "UpdateSystem",
      "description": "Get a list of Cached Files installed on the client Machine.",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": "The ClientID of the Client"
        },
        {
          "name": "expired",
          "schema": "boolean",
          "required": true,
          "description": "Only Expired Files (true|false)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Clients/{ClientID}/PackageReports",
      "method": "packageReportsDefault",
      "httpMethod": "get",
      "tag": "PackageReports",
      "description": "Get the package reports for a client.",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": "The Client ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Clients/{ClientID}/PackageReports",
      "method": "/api/v2/clients/{clientId}/packageReportsPut",
      "httpMethod": "put",
      "tag": "PackageReports",
      "description": "Submit a package report",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": "The Client ID"
        },
        {
          "name": "Categories",
          "schema": "array",
          "description": ""
        },
        {
          "name": "PackageDescription",
          "schema": "string",
          "description": ""
        },
        {
          "name": "PackageID",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Clients/{ClientID}/PackageReports/Batch",
      "method": "packageReportsBatch",
      "httpMethod": "put",
      "tag": "PackageReports",
      "description": "Submit a batch of package reports",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": "The Client ID"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Clients/{ID}",
      "method": "/api/v2/clients/{id}Get",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Get a Client in the Update System.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The Client ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Clients/{ID}",
      "method": "clientsPut",
      "httpMethod": "put",
      "tag": "Clients",
      "description": "Update a Client.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The Client ID"
        },
        {
          "name": "ClientID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "LastCheckin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Tag",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Clients/{ID}/AvailableUpdateGroupSubscriptions",
      "method": "clientsGetAvailableSubscriptions",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Get a Client's Available Update Group Subscriptions",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The Client ID"
        },
        {
          "name": "updateGroupId",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter by Update Group."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Clients/{ID}/UpdateGroupSubscriptions",
      "method": "clientsGetSubscriptions",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Get a Client's Current Update Group Subscriptions",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The Client ID"
        },
        {
          "name": "updateGroupId",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter by Update Group."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentDefinitionAttributes/Batch",
      "method": "contentDefinitionsPutContentDefinitionAttributes",
      "httpMethod": "put",
      "tag": "ContentDefinitions",
      "description": "No Documentation Found.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentDefinitionAttributes/{contentDefinitionAttributeID}",
      "method": "contentDefinitionsDeleteContentDefinitionAttribute",
      "httpMethod": "delete",
      "tag": "ContentDefinitions",
      "description": "Remove an Attribute from a ContentDefinition",
      "parameters": [
        {
          "name": "contentDefinitionAttributeId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the Attribute to remove."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentDefinitionAttributes/{contentDefinitionAttributeID}",
      "method": "contentDefinitionsPutContentDefinitionAttributeAsync",
      "httpMethod": "put",
      "tag": "ContentDefinitions",
      "description": "Update an Attribute for a ContentDefinition",
      "parameters": [
        {
          "name": "contentDefinitionAttributeId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the Attribute to update."
        },
        {
          "name": "ContentDefinitionID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "ID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Value",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentDefinitions",
      "method": "contentDefinitionsGetContentDefinitions",
      "httpMethod": "get",
      "tag": "ContentDefinitions",
      "description": "Get ContentDefinitions",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit.  If not specified, the default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset.  If not specified, the default page offset is 0."
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "Optional. Filter by UserID."
        },
        {
          "name": "includeAttributes",
          "schema": "string",
          "required": false,
          "description": "Names of Attributes to include when retrieving this definition. This should be a comma-separated list. If not provided, Attributes are not included. If '*', all Attributes are included."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter by Name. Supports beginning and ending wildcard (*)."
        },
        {
          "name": "typeId",
          "schema": "integer",
          "required": false,
          "description": "Optional. Filter by TypeID."
        },
        {
          "name": "packageTypeId",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter by PackageTypeID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentDefinitions",
      "method": "contentDefinitionsPostContentDefinition",
      "httpMethod": "post",
      "tag": "ContentDefinitions",
      "description": "Create a ContentDefinition",
      "parameters": [
        {
          "name": "Attributes",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "ContentDefinitionID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "PackageTypeID",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "TypeID",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentDefinitions/{contentDefinitionID}",
      "method": "contentDefinitionsDeleteContentDefinition",
      "httpMethod": "delete",
      "tag": "ContentDefinitions",
      "description": "Delete a ContentDefinition",
      "parameters": [
        {
          "name": "contentDefinitionId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the ContentDefinition to delete"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentDefinitions/{contentDefinitionID}",
      "method": "contentDefinitionsGetContentDefinition",
      "httpMethod": "get",
      "tag": "ContentDefinitions",
      "description": "Get a ContentDefinition by ID",
      "parameters": [
        {
          "name": "contentDefinitionId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the ContentDefinition to get."
        },
        {
          "name": "includeAttributes",
          "schema": "string",
          "required": false,
          "description": "Names of Attributes to include when retrieving this definition. This should be a comma-separated list. If not provided, Attributes are not included. If '*', all Attributes are included."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The definition of the content for submission"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentDefinitions/{contentDefinitionID}",
      "method": "contentDefinitionsPutContentDefinition",
      "httpMethod": "put",
      "tag": "ContentDefinitions",
      "description": "Update a ContentDefinition",
      "parameters": [
        {
          "name": "contentDefinitionId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the ContentDefinition to update"
        },
        {
          "name": "Attributes",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "ContentDefinitionID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "PackageTypeID",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "TypeID",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentDefinitions/{contentDefinitionID}/Attributes",
      "method": "contentDefinitionsGetContentDefinitionAttributes",
      "httpMethod": "get",
      "tag": "ContentDefinitions",
      "description": "Get Attributes for a ContentDefinition",
      "parameters": [
        {
          "name": "contentDefinitionId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the ContentDefinition."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit.  If not specified, the default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset.  If not specified, the default page offset is 0."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter the attributes by Name."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentDefinitions/{contentDefinitionID}/Attributes",
      "method": "contentDefinitionsPostContentDefinitionAttribute",
      "httpMethod": "post",
      "tag": "ContentDefinitions",
      "description": "Add an Attribute to a ContentDefinition",
      "parameters": [
        {
          "name": "contentDefinitionId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the ContentDefinition"
        },
        {
          "name": "ContentDefinitionID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "ID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Value",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentDefinitions/{contentDefinitionID}/Attributes/Batch",
      "method": "contentDefinitionsPostContentDefinitionAttributes",
      "httpMethod": "post",
      "tag": "ContentDefinitions",
      "description": "No Documentation Found.",
      "parameters": [
        {
          "name": "contentDefinitionId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentReleases",
      "method": "contentReleaseGetContentReleaseVersion",
      "httpMethod": "get",
      "tag": "ContentRelease",
      "description": "Get ContentReleaseVersion",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit.  If not specified, the default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset.  If not specified, the default page offset is 0."
        },
        {
          "name": "deleted",
          "schema": "boolean",
          "required": false,
          "description": "Optional. Filter by deleted."
        },
        {
          "name": "releaseId",
          "schema": "integer",
          "required": false,
          "description": "Optional. Filter by releaseID."
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "Optional. Filter by UserID."
        },
        {
          "name": "contentDefinitionId",
          "schema": "integer",
          "required": false,
          "description": "Optional. Filter by ContentDefinitionID."
        },
        {
          "name": "version",
          "schema": "integer",
          "required": false,
          "description": "Optional. Filter by Version."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentReleases",
      "method": "contentReleasePostContentRelease",
      "httpMethod": "post",
      "tag": "ContentRelease",
      "description": "Create a ContentReleaseVersion",
      "parameters": [
        {
          "name": "ContentDefinitionID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ContentReleaseID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "Deleted",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "PublisherUserID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ReleaseID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "TestReportUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "UpdatedDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Version",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentReleases/{ContentReleaseId}",
      "method": "contentReleaseDeleteContentReleaseVersionn",
      "httpMethod": "delete",
      "tag": "ContentRelease",
      "description": "Delete a ContentReleaseVersion",
      "parameters": [
        {
          "name": "contentReleaseId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the ContentReleaseVersion to delete"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentReleases/{ContentReleaseId}",
      "method": "/api/v2/contentReleases/{contentReleaseId}Get",
      "httpMethod": "get",
      "tag": "ContentRelease",
      "description": "Get a Content Release Version by ID",
      "parameters": [
        {
          "name": "contentReleaseId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the ContentReleaseVersion to get."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "ContentReleaseVersion class"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentReleases/{ContentReleaseId}",
      "method": "contentReleasePutContentDefinition",
      "httpMethod": "put",
      "tag": "ContentRelease",
      "description": "Update a ContentReleaseVersion",
      "parameters": [
        {
          "name": "contentReleaseId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the ContentReleaseVersion to update"
        },
        {
          "name": "ContentDefinitionID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ContentReleaseID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "Deleted",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "PublisherUserID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ReleaseID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "TestReportUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "UpdatedDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Version",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentSubmissionAttributes/Batch",
      "method": "contentSubmissionsPutContentSubmissionAttributes",
      "httpMethod": "put",
      "tag": "ContentSubmissions",
      "description": "No Documentation Found.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentSubmissionAttributes/{contentSubmissionAttributeID}",
      "method": "contentSubmissionsDeleteContentSubmissionAttribute",
      "httpMethod": "delete",
      "tag": "ContentSubmissions",
      "description": "Remove an Attribute from a ContentSubmission",
      "parameters": [
        {
          "name": "contentSubmissionAttributeId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the Attribute to remove."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentSubmissionAttributes/{contentSubmissionAttributeID}",
      "method": "contentSubmissionsPutContentSubmissionAttributeAsync",
      "httpMethod": "put",
      "tag": "ContentSubmissions",
      "description": "Update an Attribute for a ContentSubmission",
      "parameters": [
        {
          "name": "contentSubmissionAttributeId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the Attribute to update."
        },
        {
          "name": "ContentSubmissionID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "ID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Value",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentSubmissionTypes",
      "method": "contentSubmissionTypesGetContentSubmissionTypes",
      "httpMethod": "get",
      "tag": "ContentSubmissionTypes",
      "description": "Returns available Content Submission Types.",
      "parameters": [
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentSubmissionTypes",
      "method": "contentSubmissionTypesPostContentSubmissionType",
      "httpMethod": "post",
      "tag": "ContentSubmissionTypes",
      "description": "Add a Content Submission Type",
      "parameters": [
        {
          "name": "AttributeTemplate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "BuildDefinitionID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "CategoryTemplate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "ID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "InventoryPackageID",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "JobID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ReleaseNotesDescription",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentSubmissionTypes/{id}",
      "method": "contentSubmissionTypesDeleteContentSubmissionType",
      "httpMethod": "delete",
      "tag": "ContentSubmissionTypes",
      "description": "Remove a Content Submission Type",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the Content Submission Type"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentSubmissionTypes/{id}",
      "method": "contentSubmissionTypesGetContentSubmissionType",
      "httpMethod": "get",
      "tag": "ContentSubmissionTypes",
      "description": "Retrieves a Content Submission Type by its ID.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the Content Submission Type"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A type of content available for submission"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentSubmissionTypes/{id}",
      "method": "contentSubmissionTypesPutContentSubmissionType",
      "httpMethod": "put",
      "tag": "ContentSubmissionTypes",
      "description": "Update a Content Submission Type",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the Content Submission Type"
        },
        {
          "name": "AttributeTemplate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "BuildDefinitionID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "CategoryTemplate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "ID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "InventoryPackageID",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "JobID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ReleaseNotesDescription",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentSubmissions",
      "method": "contentSubmissionsGetContentSubmissions",
      "httpMethod": "get",
      "tag": "ContentSubmissions",
      "description": "Get ContentSubmissions",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit.  If not specified, the default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset.  If not specified, the default page offset is 0."
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "Optional. Filter by UserID."
        },
        {
          "name": "contentDefinitionId",
          "schema": "integer",
          "required": false,
          "description": "Optional. Filter by ContentDefinitionID"
        },
        {
          "name": "includeAttributes",
          "schema": "string",
          "required": false,
          "description": "Names of Attributes to include when retrieving this submission. This should be a comma-separated list. If not provided, Attributes are not included. If '*', all Attributes are included."
        },
        {
          "name": "releaseId",
          "schema": "integer",
          "required": false,
          "description": "Optional. Filter the submissions by whether they are part of the Release with the specified Release ID."
        },
        {
          "name": "typeId",
          "schema": "integer",
          "required": false,
          "description": "Optional. Filter submissions by their ContentDefinition's Type ID."
        },
        {
          "name": "version",
          "schema": "integer",
          "required": false,
          "description": "Optional. Filter submissions by their Version."
        },
        {
          "name": "includeDefinition",
          "schema": "boolean",
          "required": false,
          "description": "Optional. If true, includes the ContentDefinition for each submission."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentSubmissions",
      "method": "contentSubmissionsPostContentSubmission",
      "httpMethod": "post",
      "tag": "ContentSubmissions",
      "description": "Create a ContentSubmission",
      "parameters": [
        {
          "name": "Attributes",
          "schema": "array",
          "description": ""
        },
        {
          "name": "BuildID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ContentDefinitionID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ContentSubmissionID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "Definition",
          "schema": "object",
          "description": ""
        },
        {
          "name": "JobRunID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "PackageID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ReleaseNotes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Repository",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Revision",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "SubmissionDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "UserID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "Version",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentSubmissions/{contentSubmissionID}",
      "method": "contentSubmissionsDeleteContentSubmission",
      "httpMethod": "delete",
      "tag": "ContentSubmissions",
      "description": "Delete a ContentSubmission",
      "parameters": [
        {
          "name": "contentSubmissionId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the ContentSubmission to delete"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentSubmissions/{contentSubmissionID}",
      "method": "contentSubmissionsGetContentSubmission",
      "httpMethod": "get",
      "tag": "ContentSubmissions",
      "description": "Get a ContentSubmission by ID",
      "parameters": [
        {
          "name": "contentSubmissionId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the ContentSubmission to get."
        },
        {
          "name": "includeAttributes",
          "schema": "string",
          "required": false,
          "description": "Names of Attributes to include when retrieving this submission. This should be a comma-separated list."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A content submission"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentSubmissions/{contentSubmissionID}",
      "method": "contentSubmissionsPutContentSubmission",
      "httpMethod": "put",
      "tag": "ContentSubmissions",
      "description": "Update a ContentSubmission",
      "parameters": [
        {
          "name": "contentSubmissionId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the ContentSubmission to update"
        },
        {
          "name": "Attributes",
          "schema": "array",
          "description": ""
        },
        {
          "name": "BuildID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ContentDefinitionID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ContentSubmissionID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "Definition",
          "schema": "object",
          "description": ""
        },
        {
          "name": "JobRunID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "PackageID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ReleaseNotes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Repository",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Revision",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "SubmissionDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "UserID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "Version",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentSubmissions/{contentSubmissionID}/Attributes",
      "method": "contentSubmissionsGetContentSubmissionAttributes",
      "httpMethod": "get",
      "tag": "ContentSubmissions",
      "description": "Get Attributes for a ContentSubmission",
      "parameters": [
        {
          "name": "contentSubmissionId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the ContentSubmission."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit.  If not specified, the default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset.  If not specified, the default page offset is 0."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter the attributes by Name."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentSubmissions/{contentSubmissionID}/Attributes",
      "method": "contentSubmissionsPostContentSubmissionAttribute",
      "httpMethod": "post",
      "tag": "ContentSubmissions",
      "description": "Add an Attribute to a ContentSubmission",
      "parameters": [
        {
          "name": "contentSubmissionId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the ContentSubmission"
        },
        {
          "name": "ContentSubmissionID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "ID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Value",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentSubmissions/{contentSubmissionID}/Attributes/Batch",
      "method": "contentSubmissionsPostContentSubmissionAttributes",
      "httpMethod": "post",
      "tag": "ContentSubmissions",
      "description": "No Documentation Found.",
      "parameters": [
        {
          "name": "contentSubmissionId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/ContentSubmissions/{contentSubmissionID}/Status",
      "method": "contentSubmissionsGetContentSubmissionStatus",
      "httpMethod": "get",
      "tag": "ContentSubmissions",
      "description": "Get the status of a ContentSubmission",
      "parameters": [
        {
          "name": "contentSubmissionId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the ContentSubmission to get."
        },
        {
          "name": "includeActivityRunDetails",
          "schema": "boolean",
          "required": false,
          "description": "True to include all status details if JobRun. Defaults to false"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "interface of JobRun"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/DealerByCountry",
      "method": "dealerByCountryGetCountries",
      "httpMethod": "get",
      "tag": "DealerByCountry",
      "description": "Get a total count of dealers per country",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Dealers",
      "method": "dealersGetDealers",
      "httpMethod": "get",
      "tag": "Dealers",
      "description": "Get a list of dealers.",
      "parameters": [
        {
          "name": "brand",
          "schema": "string",
          "required": false,
          "description": "The brand to filter by."
        },
        {
          "name": "shippingCountry",
          "schema": "string",
          "required": false,
          "description": "The country to filter by."
        },
        {
          "name": "dealerName",
          "schema": "string",
          "required": false,
          "description": "The partial Dealer Name to filter by. Wildcard supported (*)."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Dealers/{DealerCode}",
      "method": "dealersGetDealerbyDealerCode",
      "httpMethod": "get",
      "tag": "Dealers",
      "description": "Lookup a dealer using a dealer code.",
      "parameters": [
        {
          "name": "dealerCode",
          "schema": "string",
          "required": true,
          "description": "The Dealer Code to Search for"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Files",
      "method": "filesGetFiles",
      "httpMethod": "get",
      "tag": "Files",
      "description": "Get a paged response of file metadata.",
      "parameters": [
        {
          "name": "includeDeleted",
          "schema": "boolean",
          "required": false,
          "description": "Indicates whether to include files marked as removed."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Files",
      "method": "filesPostFile",
      "httpMethod": "post",
      "tag": "Files",
      "description": "Create the metadata for a file before uploading. The State of the File should be 'Created'.",
      "parameters": [
        {
          "name": "CRC",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ContentType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "IsPublic",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Path",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Size",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "State",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Files/{ID}",
      "method": "filesDeleteFile",
      "httpMethod": "delete",
      "tag": "Files",
      "description": "Mark a file as 'Removed'. Disables download of the file and hides metadata from GET all method",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The file's id."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Files/{ID}",
      "method": "filesGetFile",
      "httpMethod": "get",
      "tag": "Files",
      "description": "Gets a file's metadata.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A language used for string translations."
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Files/{ID}",
      "method": "filesPutFile",
      "httpMethod": "put",
      "tag": "Files",
      "description": "Update the metadata for a file. Size may not be modified by the client.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The file's id"
        },
        {
          "name": "CRC",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ContentType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "IsPublic",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Path",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Size",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "State",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Files/{ID}/FileContents",
      "method": "filesGetFileContents",
      "httpMethod": "get",
      "tag": "Files",
      "description": "Download the contents of a file. The current State of the File should be 'Available'.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The file's metadata."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Files/{ID}/FileContents",
      "method": "filesPutFileContents",
      "httpMethod": "put",
      "tag": "Files",
      "description": "Upload the contents of a file. The current State of the File should be 'Created'.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The file's metadata."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/GlobalImageCategories",
      "method": "globalImageCategoriesGetFiles",
      "httpMethod": "get",
      "tag": "GlobalImageCategories",
      "description": "Get a paged response of file metadata.",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/GlobalImageCategories",
      "method": "globalImageCategoriesPostFile",
      "httpMethod": "post",
      "tag": "GlobalImageCategories",
      "description": "Create the metadata for a file before uploading. The State should be 'Created'.",
      "parameters": [
        {
          "name": "Id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/GlobalImageCategories/{ID}",
      "method": "globalImageCategoriesGetFile",
      "httpMethod": "get",
      "tag": "GlobalImageCategories",
      "description": "Gets a file's metadata.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The file's id."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An image category from the Global Image library."
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/GlobalImages",
      "method": "globalImagesGetGlobalImages",
      "httpMethod": "get",
      "tag": "GlobalImages",
      "description": "Get a paged response of GlobalImage.",
      "parameters": [
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Optional. Searches for matching global images with the matching Category Name, Publisher or Description"
        },
        {
          "name": "categoryId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "publisher",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "includeDeleted",
          "schema": "boolean",
          "required": false,
          "description": "Indicates whether to include GlobalImages marked as removed."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/GlobalImages",
      "method": "globalImagesPostGlobalImage",
      "httpMethod": "post",
      "tag": "GlobalImages",
      "description": "Create the metadata for a GlobalImage before uploading. The State should be 'Created'.",
      "parameters": [
        {
          "name": "overridePublisherOrDate",
          "schema": "boolean",
          "required": false,
          "description": "Whether to set the publisher and date to the provided values."
        },
        {
          "name": "CRC",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Categories",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Height",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "Id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Publisher",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Size",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "State",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ThumbnailCRC",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ThumbnailSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Width",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/GlobalImages/{ID}",
      "method": "globalImagesDeleteFile",
      "httpMethod": "delete",
      "tag": "GlobalImages",
      "description": "Mark a file as 'Removed'. Disables download of the image and hides metadata from GET all method",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The GlobalImage's id."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/GlobalImages/{ID}",
      "method": "globalImagesGetGlobalImage",
      "httpMethod": "get",
      "tag": "GlobalImages",
      "description": "Gets a GlobalImage's metadata.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The GlobalImage's id."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An image from the Global Image library."
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/GlobalImages/{ID}",
      "method": "globalImagesPutGlobalImage",
      "httpMethod": "put",
      "tag": "GlobalImages",
      "description": "Update the metadata for an image.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The GlobalImage's id."
        },
        {
          "name": "overridePublisherOrDate",
          "schema": "boolean",
          "required": false,
          "description": "Whether to set the publisher and date to the provided values."
        },
        {
          "name": "CRC",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Categories",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "Date",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Height",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "Id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Publisher",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Size",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "State",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ThumbnailCRC",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ThumbnailSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Width",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/GlobalImages/{ID}/ImageContents",
      "method": "globalImagesGetGlobalImageContents",
      "httpMethod": "get",
      "tag": "GlobalImages",
      "description": "Download the contents of a GlobalImage. The current State of the GlobalImage should be 'Available'.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The global image metadata id."
        },
        {
          "name": "isFullImage",
          "schema": "boolean",
          "required": false,
          "description": "Indicated whether to download the full image or the thumbnail. Defaults to 'true'."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/GlobalImages/{ID}/ImageContents",
      "method": "globalImagesPutGlobalImageContents",
      "httpMethod": "put",
      "tag": "GlobalImages",
      "description": "Upload the contents of a GlobalImage. The current State of the File for the GlobalImage should be 'Created'.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The global image metadata id."
        },
        {
          "name": "isFullImage",
          "schema": "boolean",
          "required": false,
          "description": "Indicated whether this is the full image or the thumbnail. Defaults to 'true'."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Languages",
      "method": "languagesGetLanguages",
      "httpMethod": "get",
      "tag": "Languages",
      "description": "Get a list of the languages for which translations are supported. Returns a PagedResponse of Language objects.",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "limit the number of Language objects returned. Optional (defaults to 10)."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "the number of Language objects to skip. Optional (defaults to 0)."
        },
        {
          "name": "includeDeleted",
          "schema": "boolean",
          "required": false,
          "description": "whether to include languages marked as deleted. Defaults to false"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Languages",
      "method": "languagesCreateLanguage",
      "httpMethod": "post",
      "tag": "Languages",
      "description": "Add a Language to support for translations. Accepts a Language object. Returns the Id of the created object.",
      "parameters": [
        {
          "name": "Description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "IsDeleted",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "LocaleId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Languages/{LocaleID}",
      "method": "languagesDeleteLanguage",
      "httpMethod": "delete",
      "tag": "Languages",
      "description": "Remove a Language from those supported for translations. Marks language as deleted.",
      "parameters": [
        {
          "name": "localeId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Languages/{LocaleID}",
      "method": "languagesGetLanguage",
      "httpMethod": "get",
      "tag": "Languages",
      "description": "Get a language by its id. Returns a Language object",
      "parameters": [
        {
          "name": "localeId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A language used for string translations."
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Languages/{LocaleID}",
      "method": "languagesUpdateLanguage",
      "httpMethod": "put",
      "tag": "Languages",
      "description": "Update a language’s description. Accepts a Language object.",
      "parameters": [
        {
          "name": "localeId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "IsDeleted",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "LocaleId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/LicenseActivations",
      "method": "licenseActivationsPost",
      "httpMethod": "post",
      "tag": "LicenseActivations",
      "description": "Create a license activation.",
      "parameters": [
        {
          "name": "DealerCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "LicenseActivationType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "PostalCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "SystemInfo",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "VoucherCode",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/LicenseActivations/RegisterEDTLite",
      "method": "licenseActivationsPostRegisterEdtLite",
      "httpMethod": "post",
      "tag": "LicenseActivations",
      "description": "Register an EDT Lite with the Server",
      "parameters": [
        {
          "name": "DealerCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ExpirationDate",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "InstanceID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "VoucherCode",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/LicenseActivations/{ID}",
      "method": "licenseActivationsPut",
      "httpMethod": "put",
      "tag": "LicenseActivations",
      "description": "Update a license activiation.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the license."
        },
        {
          "name": "LicenseVersion",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "SystemInfo",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/LicenseActivations/{ID}/Confirm",
      "method": "licenseActivationsPutConfirm",
      "httpMethod": "put",
      "tag": "LicenseActivations",
      "description": "Confirm that the client has applied the updated license.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the license"
        },
        {
          "name": "LicenseVersion",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Licenses",
      "method": "licensesGet",
      "httpMethod": "get",
      "tag": "Licenses",
      "description": "Gets a list of licenses with the specified criteria.",
      "parameters": [
        {
          "name": "voucherCode",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter by VoucherCode"
        },
        {
          "name": "dealerCode",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter by DealerCode"
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter by Status.  By default only active licenses will be returned."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Licenses/{ID}",
      "method": "/api/v2/licenses/{id}Get",
      "httpMethod": "get",
      "tag": "Licenses",
      "description": "Get a license.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the license to get."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Logs",
      "method": "logsGetLogs",
      "httpMethod": "get",
      "tag": "Logs",
      "description": "Get the API System logs, most recent first.",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Logs",
      "method": "logsPostLog",
      "httpMethod": "post",
      "tag": "Logs",
      "description": "Add a Log entry",
      "parameters": [
        {
          "name": "message",
          "schema": "string",
          "required": true,
          "description": "Message to enter into the log"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Logs/{ID}",
      "method": "logsGetLog",
      "httpMethod": "get",
      "tag": "Logs",
      "description": "Get a log by ID",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The Log ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Notifications",
      "method": "notificationsPostMail",
      "httpMethod": "post",
      "tag": "Notifications",
      "description": "Sends an email message.",
      "parameters": [
        {
          "name": "CC_Addresses",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "IsBodyHtml",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "MessageBody",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Subject",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "To_Addresses",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/PackageTypes",
      "method": "packageTypesGet",
      "httpMethod": "get",
      "tag": "PackageTypes",
      "description": "Get all of the Package Types.",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "Optional. The user ID to sort packageTypes by the user's access"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/PackageTypes",
      "method": "packageTypesPost",
      "httpMethod": "post",
      "tag": "PackageTypes",
      "description": "Add a Package Type.",
      "parameters": [
        {
          "name": "Attribute",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Category",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Icon",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "InventoryFrequency",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "InventoryPackage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "LocalizedDescription",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "LocalizedName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "MaxDeltaPackages",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "PackageTypeID",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/PackageTypes/{ID}",
      "method": "packageTypesDelete",
      "httpMethod": "delete",
      "tag": "PackageTypes",
      "description": "Delete a Package Type.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The Package Type ID"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/PackageTypes/{ID}",
      "method": "/api/v2/packageTypes/{id}Get",
      "httpMethod": "get",
      "tag": "PackageTypes",
      "description": "Get a specific Package Type.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The Package Type ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/PackageTypes/{ID}",
      "method": "packageTypesPut",
      "httpMethod": "put",
      "tag": "PackageTypes",
      "description": "Modify a Package Type.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the Package Type"
        },
        {
          "name": "Attribute",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Category",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Icon",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "InventoryFrequency",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "InventoryPackage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "LocalizedDescription",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "LocalizedName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "MaxDeltaPackages",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "PackageTypeID",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/PackageTypes/{id}/Users/{userID}",
      "method": "packageTypesRemovePackageTypeUser",
      "httpMethod": "delete",
      "tag": "PackageTypes",
      "description": "Deletes a package type a user could see.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the Package Type"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "The userID to link to the package type"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/PackageTypes/{id}/Users/{userID}",
      "method": "packageTypesAddPackageTypeUser",
      "httpMethod": "post",
      "tag": "PackageTypes",
      "description": "Add a package type that a user can see.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the Package Type"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "The userID to link to the package type"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/PackageTypetoBundles",
      "method": "packageTypetoBundlesDelete",
      "httpMethod": "delete",
      "tag": "PackageTypetoBundles",
      "description": "Delete a Package Type to Bundle Relationship.",
      "parameters": [
        {
          "name": "bundleId",
          "schema": "string",
          "required": true,
          "description": "The BundleID"
        },
        {
          "name": "packageTypeId",
          "schema": "string",
          "required": true,
          "description": "The PackageTypeID"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/PackageTypetoBundles",
      "method": "packageTypetoBundlesGet",
      "httpMethod": "get",
      "tag": "PackageTypetoBundles",
      "description": "Get all of the Package Type to Bundle Relationships.",
      "parameters": [
        {
          "name": "bundleId",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter by BundleID."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/PackageTypetoBundles",
      "method": "packageTypetoBundlesPost",
      "httpMethod": "post",
      "tag": "PackageTypetoBundles",
      "description": "Add a new Package Type ID to Bundle Relationship.",
      "parameters": [
        {
          "name": "BundleID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "PackageTypeID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "PackageVersion",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "Priority",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "SubscriptionType",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/PackageTypetoBundles",
      "method": "packageTypetoBundlesPut",
      "httpMethod": "put",
      "tag": "PackageTypetoBundles",
      "description": "Update a Package Type ID to Bundle Relationship.",
      "parameters": [
        {
          "name": "BundleID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "PackageTypeID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "PackageVersion",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "Priority",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "SubscriptionType",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Packages",
      "method": "packagesGetPackages",
      "httpMethod": "get",
      "tag": "Packages",
      "description": "List Packages.",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        },
        {
          "name": "packageTypeId",
          "schema": "string",
          "required": false,
          "description": "Optional. If provided, filters by PackageTypeID."
        },
        {
          "name": "version",
          "schema": "integer",
          "required": false,
          "description": "Optional. If provided, filters by Version."
        },
        {
          "name": "released",
          "schema": "boolean",
          "required": false,
          "description": "Optional. If provided, filters by Released."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Packages",
      "method": "packagesPostPackage",
      "httpMethod": "post",
      "tag": "Packages",
      "description": "Add a Package to the Update System.",
      "parameters": [
        {
          "name": "Autorun",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "CRC",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "LocalizedName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Notes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "PackageID",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "PackageTypeID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "PreviousVersion",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "ReleaseDate",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Released",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "RemoveOnSuccess",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "Size",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Switches",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Version",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Packages/{ID}",
      "method": "packagesDeletePackage",
      "httpMethod": "delete",
      "tag": "Packages",
      "description": "Delete a Package.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The Package ID to Delete"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Packages/{ID}",
      "method": "packagesGetPackage",
      "httpMethod": "get",
      "tag": "Packages",
      "description": "Find a Package.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The Package ID to Search for"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Packages/{ID}",
      "method": "packagesPutPackage",
      "httpMethod": "put",
      "tag": "Packages",
      "description": "Modify a Packge to the Update System.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique ID of the Package"
        },
        {
          "name": "Autorun",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "CRC",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "LocalizedName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Notes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "PackageID",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "PackageTypeID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "PreviousVersion",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "ReleaseDate",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Released",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "RemoveOnSuccess",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "Size",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Switches",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Version",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Permissions",
      "method": "permissionsGetPermissions",
      "httpMethod": "get",
      "tag": "Permissions",
      "description": "List Permissions",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Filter by permission name. Supports ending wildcard (*). Optional."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        }
      ]
    },
    {
      "url": "/api/v2/Permissions",
      "method": "permissionsPostPermission",
      "httpMethod": "post",
      "tag": "Permissions",
      "description": "Adds a Permission",
      "parameters": [
        {
          "name": "DataDescription",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "DataRequired",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Permissions/{id}",
      "method": "permissionsDeletePermission",
      "httpMethod": "delete",
      "tag": "Permissions",
      "description": "Deletes a Permission",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Permission"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v2/Permissions/{id}",
      "method": "permissionsGetPermission",
      "httpMethod": "get",
      "tag": "Permissions",
      "description": "Gets a Permission",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Permission"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Permissions/{id}",
      "method": "permissionsPutPermission",
      "httpMethod": "put",
      "tag": "Permissions",
      "description": "Updates a Permission",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of Permission"
        },
        {
          "name": "DataDescription",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "DataRequired",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v2/PriorityPackages",
      "method": "priorityPackagesGetPriorityPackages",
      "httpMethod": "get",
      "tag": "PriorityPackages",
      "description": "Get a list of Priority Packages by Client.",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter priority packages by ClientID."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter returned packages by status. By default only active packages will be returned."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/PriorityPackages",
      "method": "priorityPackagesPostPriorityPackages",
      "httpMethod": "post",
      "tag": "PriorityPackages",
      "description": "Add a Priority Package for a Client.",
      "parameters": [
        {
          "name": "Autorun",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "CRC",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ClientID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Notes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "PackageID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "PackageTypeID",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "PreviousVersion",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "PriorityPackageID",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ReleaseDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Released",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "RemoveOnSuccess",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "Size",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Switches",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "TimeStamp",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Version",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/PriorityPackages/{ID}",
      "method": "priorityPackagesDeletePriorityPackages",
      "httpMethod": "delete",
      "tag": "PriorityPackages",
      "description": "Delete a Priority Package for a Client.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The Priority Package ID"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/PriorityPackages/{ID}",
      "method": "priorityPackagesGetPriorityPackage",
      "httpMethod": "get",
      "tag": "PriorityPackages",
      "description": "Get a Priority Packages for a Client.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The Priority Package ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Releases",
      "method": "releaseGetReleases",
      "httpMethod": "get",
      "tag": "Release",
      "description": "Get Release",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit.  If not specified, the default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset.  If not specified, the default page offset is 0."
        },
        {
          "name": "visible",
          "schema": "boolean",
          "required": false,
          "description": "Optional. Filter by visible."
        },
        {
          "name": "bundleId",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter by BundleID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Releases",
      "method": "releasePostRelease",
      "httpMethod": "post",
      "tag": "Release",
      "description": "Create a Release",
      "parameters": [
        {
          "name": "BuildDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "BundleIDs",
          "schema": "array",
          "description": ""
        },
        {
          "name": "ReleaseDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ReleaseID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ReleaseNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Visible",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Releases/{ReleaseId}",
      "method": "releaseGetRelease",
      "httpMethod": "get",
      "tag": "Release",
      "description": "Get a  Release by ID",
      "parameters": [
        {
          "name": "releaseId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the Release to get."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Release class"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Releases/{ReleaseId}/Bundle/{BundleId}",
      "method": "releaseDeleteReleaseBundle",
      "httpMethod": "delete",
      "tag": "Release",
      "description": "Deletes the association between a release and a bundle.",
      "parameters": [
        {
          "name": "releaseId",
          "schema": "integer",
          "required": true,
          "description": "The release identifier."
        },
        {
          "name": "bundleId",
          "schema": "string",
          "required": true,
          "description": "The bundle identifier."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Releases/{ReleaseId}/Bundle/{BundleId}",
      "method": "releasePostReleaseBundle",
      "httpMethod": "post",
      "tag": "Release",
      "description": "Associates the release with a bundle.",
      "parameters": [
        {
          "name": "releaseId",
          "schema": "integer",
          "required": true,
          "description": "The release identifier."
        },
        {
          "name": "bundleId",
          "schema": "string",
          "required": true,
          "description": "The bundle identifier."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Releases/{releaseId}",
      "method": "releasePutContentDefinition",
      "httpMethod": "put",
      "tag": "Release",
      "description": "Update a Release",
      "parameters": [
        {
          "name": "releaseId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the Release to update"
        },
        {
          "name": "BuildDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "BundleIDs",
          "schema": "array",
          "description": ""
        },
        {
          "name": "ReleaseDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ReleaseID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ReleaseNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Visible",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Reporting/BundleStatusSummary",
      "method": "reportingBundleStatusSummary",
      "httpMethod": "get",
      "tag": "Reporting",
      "description": "Get a summary of all Packages in a Bundle",
      "parameters": [
        {
          "name": "bundleId",
          "schema": "string",
          "required": true,
          "description": "The BundleID"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Reporting/BundlesInUpdateGroup",
      "method": "reportingBundlesInUpdateGroup",
      "httpMethod": "get",
      "tag": "Reporting",
      "description": "Get a list of bundles for UpdateGroup.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The UpdateGroupID"
        },
        {
          "name": "includeInactive",
          "schema": "boolean",
          "required": true,
          "description": "Include Inactive Bundles (true|false)"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Reporting/ClientInfo",
      "method": "reportingClientInfo",
      "httpMethod": "get",
      "tag": "Reporting",
      "description": "Get Client Information",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": "The Client ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Reporting/CurrentPackagesInUpdateGroup",
      "method": "reportingCurrentPackagesInUpdateGroup",
      "httpMethod": "get",
      "tag": "Reporting",
      "description": "Get the current packages for an update group.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The UpdateGroupID"
        },
        {
          "name": "subscriptionTypeFilter",
          "schema": "string",
          "required": false,
          "description": "Optional.  The subscription type filter to use.  By default the Default packages (Required and IncludeByDefault) will be returned."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Reporting/GetClient",
      "method": "reportingGetClient",
      "httpMethod": "get",
      "tag": "Reporting",
      "description": "Get a Client in the Update System.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The Client ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Reporting/GetSubscriptions",
      "method": "reportingGetSubscriptions",
      "httpMethod": "get",
      "tag": "Reporting",
      "description": "Get a list of current Client Subscriptions.",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter by Client ID"
        },
        {
          "name": "updateGroupId",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter by Update Group ID"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Reporting/PackageStatusSummary",
      "method": "reportingPackageStatusSummary",
      "httpMethod": "get",
      "tag": "Reporting",
      "description": "Get a summary report for a Specific Package",
      "parameters": [
        {
          "name": "packageId",
          "schema": "string",
          "required": true,
          "description": "The Package ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Reporting/RegisteredClients",
      "method": "reportingRegisteredClients",
      "httpMethod": "get",
      "tag": "Reporting",
      "description": "Get a list of subscribed clients",
      "parameters": [
        {
          "name": "updateGroupId",
          "schema": "string",
          "required": false,
          "description": "Optional but required when including any or all of following parameters: ReportValue, ReportResult, ReportResultIsValid. The Update Group ID. If not provided, all clients will be returned."
        },
        {
          "name": "clientId",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter where ClientID matches a value. Wildcards are supported (*)."
        },
        {
          "name": "tag",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter where Tag matches a value. Wildcards are supported (*)."
        },
        {
          "name": "reportResult",
          "schema": "string",
          "required": false,
          "description": "Optional and UpdateGroupID must be included. Filter where ReportResult matches a value. Wildcards are supported (*)."
        },
        {
          "name": "reportResultIsValid",
          "schema": "boolean",
          "required": false,
          "description": "Optional and UpdateGroupID must be included. When 'true' filters results where ReportResult equals ReportResultExpected.  When 'false' filters results where ValueToValidate does not equal ReportResults."
        },
        {
          "name": "reportValue",
          "schema": "string",
          "required": false,
          "description": "Optional and UpdateGroupID must be included. Filter where ReportValue matches a value. Wildcards are supported (*)."
        },
        {
          "name": "lastCheckInBefore",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter where LastCheckIn occured before the provided date."
        },
        {
          "name": "lastCheckInAfter",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter where LastCheckIn occured after the provided date."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Optional. Specify the order in which results should be returned. Use this format: [FieldName] [ASC|ASCENDING|DESC|DESCENDING],...   \r\n            If sort direction is not provided for a field, it will be sorted ascending."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Reporting/UpdateGroups",
      "method": "reportingUpdateGroups",
      "httpMethod": "get",
      "tag": "Reporting",
      "description": "Get a list of Update Groups.  Update Groups are used by the client to register for a specific type of update.",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Reporting/UpdateMetrics",
      "method": "reportingUpdateMetrics",
      "httpMethod": "get",
      "tag": "Reporting",
      "description": "Get data for pie charts in UpdateMetrics.",
      "parameters": [
        {
          "name": "updateGroupId",
          "schema": "string",
          "required": true,
          "description": "The UpdateType in which clients must be for the report to include them."
        },
        {
          "name": "bundleNumber",
          "schema": "integer",
          "required": false,
          "description": "Optional. Tells us which chart to show based upon filter."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Model that retrieves the data for UpdateMetrics"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Roles",
      "method": "rolesGetRoles",
      "httpMethod": "get",
      "tag": "Roles",
      "description": "List Roles",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Optional. Finds a role with the given name."
        },
        {
          "name": "permissionId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "permissionName",
          "schema": "string",
          "required": false,
          "description": "Optional. Filters roles by whether they contain the provided permission."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        }
      ]
    },
    {
      "url": "/api/v2/Roles",
      "method": "rolesPostRole",
      "httpMethod": "post",
      "tag": "Roles",
      "description": "Adds a User Role",
      "parameters": [
        {
          "name": "Description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Roles/{id}",
      "method": "rolesDeleteRole",
      "httpMethod": "delete",
      "tag": "Roles",
      "description": "Deletes a User Role",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The role's id"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v2/Roles/{id}",
      "method": "rolesGetRole",
      "httpMethod": "get",
      "tag": "Roles",
      "description": "Gets a User Role",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The role's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines an API Role"
        }
      ]
    },
    {
      "url": "/api/v2/Roles/{id}",
      "method": "rolesPutRole",
      "httpMethod": "put",
      "tag": "Roles",
      "description": "Updates a User Role",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The role's id"
        },
        {
          "name": "Description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v2/Roles/{id}/Permissions",
      "method": "rolesGetRolePermissions",
      "httpMethod": "get",
      "tag": "Roles",
      "description": "Get the Permissions for a Role",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The id of the Role"
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Filter by permission name. Optional."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        }
      ]
    },
    {
      "url": "/api/v2/Roles/{id}/Permissions",
      "method": "rolesPutRolePermissions",
      "httpMethod": "put",
      "tag": "Roles",
      "description": "Manage the Permissions for a Role",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The id of the Role"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v2/Roles/{id}/Users",
      "method": "userPermissionsGetUsers",
      "httpMethod": "get",
      "tag": "UserPermissions",
      "description": "Get all user's in a role",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The Role's ID"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Roles/{id}/Users",
      "method": "/api/v2/roles/{id}/usersPut",
      "httpMethod": "put",
      "tag": "UserPermissions",
      "description": "Update a Role's users",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The Role's ID"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/StringDefinitions",
      "method": "stringDefinitionsGetDefinitions",
      "httpMethod": "get",
      "tag": "StringDefinitions",
      "description": "Get a paged response of Global String Definitions.",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10. Ignored if 'stringIds' is provided."
        },
        {
          "name": "modifiedAfterTimestamp",
          "schema": "string",
          "required": false,
          "description": "Optional. Return only the StringDefinition objects that have a Timestamp value greater than that provided. This will be an encoded byte array."
        },
        {
          "name": "includeTranslations",
          "schema": "boolean",
          "required": false,
          "description": "Optional. Indicates whether to include the StringTranslations for the StringDefinition. Defaults to false."
        },
        {
          "name": "stringText",
          "schema": "string",
          "required": false,
          "description": "Optional. The text for which to search in the StringDefinition object’s translations. Only StringDefinition objects for matching StringTranslation objects are returned. Does not filter if no value is provided. Supports beginning and/or ending wildcards. includeTranslations must be true."
        },
        {
          "name": "descriptionText",
          "schema": "string",
          "required": false,
          "description": "Optional. The text for which to search in the StringDefinition description field. Only matching objects are returned. Does not filter if no value is provided. Supports beginning and/or ending wildcards."
        },
        {
          "name": "useFullText",
          "schema": "boolean",
          "required": false,
          "description": "Optional. This flag is used to determin whether to use the FullText Search or not."
        },
        {
          "name": "includeDeletedLanguages",
          "schema": "boolean",
          "required": false,
          "description": "Optional. Indicates whether to include languages marked as deleted. includeTranslations must be true. Defaults to false."
        },
        {
          "name": "languageIds",
          "schema": "string",
          "required": false,
          "description": "Optional. A comma-delimited list of language ids. Only StringTranslation objects with a matching language id will be returned. Optional. By default all locales are returned. includeTranslations must be true. The StringDefinition is still returned even if the filtered translations list is empty."
        },
        {
          "name": "stringIds",
          "schema": "string",
          "required": false,
          "description": "Optional. A comma-delimited list of string ids. Up to 40 string IDs may be provided. May not be used with 'modifiedAfterTimestamp', 'stringText', 'descriptionText', or 'useFullText'."
        },
        {
          "name": "matchingTranslationsOnly",
          "schema": "boolean",
          "required": false,
          "description": "Optional. If false, all translations for returned String Definitions are included. Must be used with 'stringText' provided and 'includeTranslations' = true."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/StringDefinitions/Batch",
      "method": "stringDefinitionsPostDefinition",
      "httpMethod": "post",
      "tag": "StringDefinitions",
      "description": "Create StringDefinition object. The originating translation must be provided. Accepts an array of StringDefinition objects. Returns nothing.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/StringDefinitions/Batch",
      "method": "stringDefinitionsUpdateDefinitions",
      "httpMethod": "put",
      "tag": "StringDefinitions",
      "description": "Update StringDefinition objects. Accepts an array of StringDefinition objects. This endpoint will add StringDefinitionChange objects to the database. The DescriptionForTranslator may not be modified after a String is submitted for translation.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/StringDefinitions/{ID}",
      "method": "stringDefinitionsGetDefinition",
      "httpMethod": "get",
      "tag": "StringDefinitions",
      "description": "Get a paged response of Global String Definitions.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "includeTranslations",
          "schema": "boolean",
          "required": false,
          "description": "Optional. Indicates whether to include the StringTranslations for the StringDefinition. Defaults to false."
        },
        {
          "name": "includeDeletedLanguages",
          "schema": "boolean",
          "required": false,
          "description": "Optional. Indicates whether to include languages marked as deleted. includeTranslations must be true. Defaults to false."
        },
        {
          "name": "languageIds",
          "schema": "string",
          "required": false,
          "description": "Optional. A comma-delimited list of language ids. Only StringTranslation objects with a matching language id will be returned. Optional. By default all locales are returned. includeTranslations must be true. The StringDefinition is still returned even if the filtered translations list is empty."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The definition of a string to be translated"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/StringTranslations",
      "method": "stringTranslationsGetTranslations",
      "httpMethod": "get",
      "tag": "StringTranslations",
      "description": "Get a paged response of Global String Translations.",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "modifiedAfterTimestamp",
          "schema": "string",
          "required": false,
          "description": "Optional. Return only the StringDefinition objects that have a Timestamp value greater than that provided. This will be an encoded byte array."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/StringTranslations/Batch",
      "method": "stringTranslationsUpdateTranslations",
      "httpMethod": "put",
      "tag": "StringTranslations",
      "description": "Update corrections to string translations",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/StringTranslations/{stringId}/{languageId}",
      "method": "stringTranslationsGetTranslation",
      "httpMethod": "get",
      "tag": "StringTranslations",
      "description": "Get a single translation based upon stringId and languageId",
      "parameters": [
        {
          "name": "stringId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "languageId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A translation of a string in a specific language"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/StringTranslations/{stringId}/{languageId}",
      "method": "stringTranslationsUpdateTranslation",
      "httpMethod": "put",
      "tag": "StringTranslations",
      "description": "Update a string value or a state for a string translation.",
      "parameters": [
        {
          "name": "stringId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "languageId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "AuthorId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "LanguageId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "State",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "StringId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "StringValue",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Timestamp",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationKeys",
      "method": "translationKeysGet",
      "httpMethod": "get",
      "tag": "TranslationKeys",
      "description": "Get a paged response of TranslationKeys.",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "keyNames",
          "schema": "string",
          "required": false,
          "description": "Can filter by keyNames, a comma deliminated list."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationKeys",
      "method": "translationKeysCreateTranslationKey",
      "httpMethod": "post",
      "tag": "TranslationKeys",
      "description": "Create a translationKey object.",
      "parameters": [
        {
          "name": "ID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "KeyName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "StringID",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationKeys/{ID}",
      "method": "translationKeysGetTranslationKey",
      "httpMethod": "get",
      "tag": "TranslationKeys",
      "description": "Get TranslationKey by ID",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A translation key to map the relationship of keyNames, usually for ODX, and string Ids"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationKeys/{ID}",
      "method": "translationKeysUpdateTranslationKey",
      "httpMethod": "put",
      "tag": "TranslationKeys",
      "description": "Update the StringID of the translationKey object.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "ID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "KeyName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "StringID",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationRequests",
      "method": "translationRequestsGetTranslationRequests",
      "httpMethod": "get",
      "tag": "TranslationRequests",
      "description": "Get all TranslationRequest objects. Returns a PagedResponse of TranslationRequest objects with their language ids and string ids.",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationRequests",
      "method": "translationRequestsCreateTranslationRequest",
      "httpMethod": "post",
      "tag": "TranslationRequests",
      "description": "Create a translation request. Accepts a TranslationRequest object. Returns the Id of the created object. The state of the TranslationRequest must be ‘NotSubmitted’.",
      "parameters": [
        {
          "name": "ApprovalUserId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "CCEmailAddresses",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "ChargeToAccount",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Deadline",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "LocaleIds",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "Notes",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "QuestionsUserId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "State",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "SubmittedBy",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "TranslatorEmail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "TranslatorName",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationRequests/{Id}",
      "method": "translationRequestsGetTranslationRequest",
      "httpMethod": "get",
      "tag": "TranslationRequests",
      "description": "Get a TranslationRequest object by id. Returns TranslationRequest object with its language ids and string ids.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A request to translate specified strings into specified locales"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationRequests/{Id}",
      "method": "translationRequestsUpdateTranslationRequest",
      "httpMethod": "put",
      "tag": "TranslationRequests",
      "description": "Update a TranslationRequest object by id. Accepts a TranslationRequest object.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "doResendRequest",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "ApprovalUserId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "CCEmailAddresses",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "ChargeToAccount",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Deadline",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "LocaleIds",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "Notes",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "QuestionsUserId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "State",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "SubmittedBy",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "TranslatorEmail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "TranslatorName",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationRequests/{Id}/Strings",
      "method": "translationRequestsUpdateTranslationRequestStrings",
      "httpMethod": "put",
      "tag": "TranslationRequests",
      "description": "No Documentation Found.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationSetAttributes/Batch",
      "method": "translationSetsUpdateTranslationSetAttributes",
      "httpMethod": "put",
      "tag": "TranslationSets",
      "description": "No Documentation Found.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationSetAttributes/{ID}",
      "method": "translationSetsDeleteTranslationSetAttribute",
      "httpMethod": "delete",
      "tag": "TranslationSets",
      "description": "Delete a set of TranslationSetAttribute object",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationSetAttributes/{ID}",
      "method": "translationSetsUpdateTranslationSetAttribute",
      "httpMethod": "put",
      "tag": "TranslationSets",
      "description": "Update a TranslationSetAttribute object",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "ID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "TranslationSetID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Value",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationSets",
      "method": "translationSetsGetTranslationSets",
      "httpMethod": "get",
      "tag": "TranslationSets",
      "description": "Get a PagedResponse of TranslationSet objects. Related TranslationSetStrings are NOT returned",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "translationRequestId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "state",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "stringId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "languageId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "includeAttributes",
          "schema": "string",
          "required": false,
          "description": "Names of Attributes to include when retrieving this submission. This should be a comma-separated list. If not provided, Attributes are not included. If '*', all Attributes are included."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationSets/{ID}",
      "method": "translationSetsGetTranslationSet",
      "httpMethod": "get",
      "tag": "TranslationSets",
      "description": "Get a TranslationSet object by its id. Related TranslationSetStrings are NOT returned.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "includeAttributes",
          "schema": "string",
          "required": false,
          "description": "Names of Attributes to include when retrieving this Translation set. This should be a comma-separated list. If not provided, Attributes are not included. If '*', all Attributes are included."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A set of strings submitted for translation"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationSets/{ID}",
      "method": "translationSetsUpdateTranslationSet",
      "httpMethod": "put",
      "tag": "TranslationSets",
      "description": "Update a Translation Set. Accepts a TranslationSet object. Only the state property may be updated.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "Attributes",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "FileIDs",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "Id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "InDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Notes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "OutDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "State",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "TranslationRequestID",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationSets/{ID}/Attributes",
      "method": "translationSetsGetTranslationSetAttributes",
      "httpMethod": "get",
      "tag": "TranslationSets",
      "description": "Get a PagedResponse of TranslationSetAttribute objects",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationSets/{ID}/Attributes",
      "method": "translationSetsPostTranslationSetAttribute",
      "httpMethod": "post",
      "tag": "TranslationSets",
      "description": "Create a TranslationSetAttribute object",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "ID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "TranslationSetID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Value",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationSets/{ID}/Attributes/Batch",
      "method": "translationSetsPostTranslationSetAttributes",
      "httpMethod": "post",
      "tag": "TranslationSets",
      "description": "No Documentation Found.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationSets/{ID}/SourceStrings",
      "method": "translationSetsGetSourceStrings",
      "httpMethod": "get",
      "tag": "TranslationSets",
      "description": "Gets the information needed to translate a string in a translation set",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationSets/{ID}/Statistics",
      "method": "translationSetsGetStatistics",
      "httpMethod": "get",
      "tag": "TranslationSets",
      "description": "Gets the statistics for translation sets such as the language ids and count of string definitions.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Statistics for a translation set"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationSets/{ID}/Strings",
      "method": "translationSetsGetTranslationSetStrings",
      "httpMethod": "get",
      "tag": "TranslationSets",
      "description": "Get a PagedResponse of TranslationSetString objects",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/TranslationSets/{ID}/Strings",
      "method": "translationSetsUpdateTranslationSetStrings",
      "httpMethod": "put",
      "tag": "TranslationSets",
      "description": "No Documentation Found.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UpdateGroupClientRelationships",
      "method": "updateGroupClientRelationshipsGetSubscriptions",
      "httpMethod": "get",
      "tag": "UpdateGroupClientRelationships",
      "description": "Get a list of current Client Subscriptions.",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter by Client ID"
        },
        {
          "name": "updateGroupId",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter by Update Group ID"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        },
        {
          "name": "active",
          "schema": "boolean",
          "required": false,
          "description": "Optional. Filter by Active"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UpdateGroupClientRelationships",
      "method": "updateGroupClientRelationshipsPostSubscription",
      "httpMethod": "post",
      "tag": "UpdateGroupClientRelationships",
      "description": "Add a subscription",
      "parameters": [
        {
          "name": "Active",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "ClientID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "LastCheckin",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "RelationshipID",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "UpdateGroupID",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UpdateGroupClientRelationships",
      "method": "updateGroupClientRelationshipsPutSubscriptionByClientIdUpdateGroupId",
      "httpMethod": "put",
      "tag": "UpdateGroupClientRelationships",
      "description": "DEPRECATED. Set client subscription status for an update group.",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": "The Client ID.  This can be a client ID that has not been registered yet."
        },
        {
          "name": "updateGroupId",
          "schema": "string",
          "required": true,
          "description": "The Update Group ID"
        },
        {
          "name": "active",
          "schema": "boolean",
          "required": true,
          "description": "Subscribe the client to the Update Group."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UpdateGroupClientRelationships/{RelationshipID}",
      "method": "updateGroupClientRelationshipsGetSubscription",
      "httpMethod": "get",
      "tag": "UpdateGroupClientRelationships",
      "description": "Get a subscription by RelationshipID",
      "parameters": [
        {
          "name": "relationshipId",
          "schema": "string",
          "required": true,
          "description": "The RelationshipID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UpdateGroupClientRelationships/{RelationshipID}",
      "method": "updateGroupClientRelationshipsPutSubscription",
      "httpMethod": "put",
      "tag": "UpdateGroupClientRelationships",
      "description": "Updates a Subscription",
      "parameters": [
        {
          "name": "relationshipId",
          "schema": "string",
          "required": true,
          "description": "The relationship id of the UpdateGroupClientRelationship"
        },
        {
          "name": "Active",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "ClientID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "LastCheckin",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "RelationshipID",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "UpdateGroupID",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UpdateGroupSubscriptions",
      "method": "updateGroupSubscriptionsGetUpdateGroupSubscriptions",
      "httpMethod": "get",
      "tag": "UpdateGroupSubscriptions",
      "description": "Get Update Group Subscriptions",
      "parameters": [
        {
          "name": "updateGroupId",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter by Update Group ID."
        },
        {
          "name": "packageTypeId",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter by Package Type ID."
        },
        {
          "name": "clientId",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter by Client ID."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UpdateGroupSubscriptions",
      "method": "updateGroupSubscriptionsPostUpdateGroupSubscription",
      "httpMethod": "post",
      "tag": "UpdateGroupSubscriptions",
      "description": "Add an Update Group Subscription",
      "parameters": [
        {
          "name": "ClientID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Include",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "PackageTypeID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "UpdateGroupID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "UpdateGroupSubscriptionID",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UpdateGroupSubscriptions/Batch",
      "method": "updateGroupSubscriptionsPostUpdateGroupSubscriptions",
      "httpMethod": "post",
      "tag": "UpdateGroupSubscriptions",
      "description": "No Documentation Found.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UpdateGroupSubscriptions/Batch",
      "method": "updateGroupSubscriptionsPutUpdateGroupSubscriptions",
      "httpMethod": "put",
      "tag": "UpdateGroupSubscriptions",
      "description": "No Documentation Found.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UpdateGroupSubscriptions/{UpdateGroupSubscriptionID}",
      "method": "updateGroupSubscriptionsDeleteUpdateGroupSubscription",
      "httpMethod": "delete",
      "tag": "UpdateGroupSubscriptions",
      "description": "Delete an Update Group Subscription",
      "parameters": [
        {
          "name": "updateGroupSubscriptionId",
          "schema": "integer",
          "required": true,
          "description": "The Update Group Subscription ID to delete"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UpdateGroupSubscriptions/{UpdateGroupSubscriptionID}",
      "method": "updateGroupSubscriptionsGetUpdateGroupSubscription",
      "httpMethod": "get",
      "tag": "UpdateGroupSubscriptions",
      "description": "Get an Update Group Subscription",
      "parameters": [
        {
          "name": "updateGroupSubscriptionId",
          "schema": "integer",
          "required": true,
          "description": "The Update Group Subscription ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UpdateGroupSubscriptions/{UpdateGroupSubscriptionID}",
      "method": "updateGroupSubscriptionsPutUpdateGroupSubscription",
      "httpMethod": "put",
      "tag": "UpdateGroupSubscriptions",
      "description": "Update an Update Group Subscription",
      "parameters": [
        {
          "name": "updateGroupSubscriptionId",
          "schema": "integer",
          "required": true,
          "description": "The Update Group Subscription ID"
        },
        {
          "name": "ClientID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Include",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "PackageTypeID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "UpdateGroupID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "UpdateGroupSubscriptionID",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UpdateGroups",
      "method": "updateGroupsGet",
      "httpMethod": "get",
      "tag": "UpdateGroups",
      "description": "Get a list of Update Groups.  Update Groups are used by the client to register for a specific type of update.",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "Optional. The user ID to sort update groups by the user's access"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UpdateGroups",
      "method": "updateGroupsPost",
      "httpMethod": "post",
      "tag": "UpdateGroups",
      "description": "Add a new Update Group.  The report field is a string that has a dot based request for a specific piece of submitted data.",
      "parameters": [
        {
          "name": "Description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ID",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "InventoryFrequency",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "InventoryPackage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "LocalizedDescription",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "LocalizedName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Priority",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "ReportField",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "UpdateType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ValidatingField",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ValueToValidate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Version",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UpdateGroups/{ID}",
      "method": "updateGroupsDelete",
      "httpMethod": "delete",
      "tag": "UpdateGroups",
      "description": "Delete an Update Group.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the Update Group to Delete"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UpdateGroups/{ID}",
      "method": "/api/v2/updateGroups/{id}Get",
      "httpMethod": "get",
      "tag": "UpdateGroups",
      "description": "Get a specific Update Group by ID.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the Update Group"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UpdateGroups/{ID}",
      "method": "updateGroupsPut",
      "httpMethod": "put",
      "tag": "UpdateGroups",
      "description": "Modify an Update Group.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Update Group"
        },
        {
          "name": "Description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ID",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "InventoryFrequency",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "InventoryPackage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "LocalizedDescription",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "LocalizedName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Priority",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "ReportField",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "UpdateType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ValidatingField",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ValueToValidate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Version",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UpdateGroups/{ID}/Bundles",
      "method": "updateGroupsGetUpdateGroupBundles",
      "httpMethod": "get",
      "tag": "UpdateGroups",
      "description": "Get a list of bundles for UpdateGroup.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The UpdateGroupID"
        },
        {
          "name": "includeInactive",
          "schema": "boolean",
          "required": true,
          "description": "Include Inactive Bundles (true|false)"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UpdateGroups/{id}/Users/{userID}",
      "method": "updateGroupsRemoveUpdateGroupUser",
      "httpMethod": "delete",
      "tag": "UpdateGroups",
      "description": "Deletes an update group a user could see.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the update group"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "The userID to link to the update group"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UpdateGroups/{id}/Users/{userID}",
      "method": "updateGroupsAddUpdateGroupUser",
      "httpMethod": "post",
      "tag": "UpdateGroups",
      "description": "Add an updateGroup that a user can see.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the update group"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "The userID to link to the update group"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UpdateSystem",
      "method": "updateSystemGetCheckin",
      "httpMethod": "get",
      "tag": "UpdateSystem",
      "description": "Checks the Client ID into the Update System.",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": "The Client ID to check-in.  If this is a new client ID it will be added to Clients."
        },
        {
          "name": "preview",
          "schema": "boolean",
          "required": true,
          "description": "Get Pkgs w\\o updating Datetimes(true|false)"
        },
        {
          "name": "runAllInventories",
          "schema": "boolean",
          "required": false,
          "description": "Force return inventories. Defaults to false."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UserContentDefinitions",
      "method": "userContentDefinitionsGetUserContentDefinitions",
      "httpMethod": "get",
      "tag": "UserContentDefinitions",
      "description": "Get UserContentDefinitions",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit.  If not specified, the default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset.  If not specified, the default page offset is 0."
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "Optional. Filter by UserID."
        },
        {
          "name": "contentDefinitionId",
          "schema": "integer",
          "required": false,
          "description": "Optional. Filter by ContentDefinitionID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UserContentDefinitions",
      "method": "userContentDefinitionsPostUserContentDefinition",
      "httpMethod": "post",
      "tag": "UserContentDefinitions",
      "description": "Create a UserContentDefinition",
      "parameters": [
        {
          "name": "ContentDefinitionID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "UserContentDefinitionID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "UserID",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UserContentDefinitions/{userContentDefinitionID}",
      "method": "userContentDefinitionsDeleteUserContentDefinition",
      "httpMethod": "delete",
      "tag": "UserContentDefinitions",
      "description": "Delete a UserContentDefinition",
      "parameters": [
        {
          "name": "userContentDefinitionId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the UserContentDefinition to delete"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/UserContentDefinitions/{userContentDefinitionID}",
      "method": "userContentDefinitionsGetUserContentDefinition",
      "httpMethod": "get",
      "tag": "UserContentDefinitions",
      "description": "Get a UserContentDefinition by ID",
      "parameters": [
        {
          "name": "userContentDefinitionId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the UserContentDefinition to get."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Relationship indicating that a User can manage submissions for the Content"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Users",
      "method": "usersGet",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Get users",
      "parameters": [
        {
          "name": "username",
          "schema": "string",
          "required": false,
          "description": "Optional. Search by username. Supports beginning and ending wildcards (*)."
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": "Optional. Search by email. Supports beginning and ending wildcards (*)."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Optional. Search by name. Supports beginning and ending wildcards (*)."
        },
        {
          "name": "hasRole",
          "schema": "string",
          "required": false,
          "description": "Optional. Return only users having the provided role name."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        }
      ]
    },
    {
      "url": "/api/v2/Users",
      "method": "usersPost",
      "httpMethod": "post",
      "tag": "Users",
      "description": "Create a user",
      "parameters": [
        {
          "name": "ChangePassword",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "UserID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "Username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Users/Current",
      "method": "usersGetCurrentUser",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Gets the current user",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Users/Current",
      "method": "usersPutCurrentUser",
      "httpMethod": "put",
      "tag": "Users",
      "description": "Update a user",
      "parameters": [
        {
          "name": "ChangePassword",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "UserID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "Username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v2/Users/Current/Permissions",
      "method": "/api/v2/users/current/permissionsGet",
      "httpMethod": "get",
      "tag": "UserPermissions",
      "description": "Get a user's permissions",
      "parameters": [
        {
          "name": "permission",
          "schema": "string",
          "required": false,
          "description": "Filter by permission name. Supports ending wildcard (*). Optional."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Users/Current/Roles",
      "method": "userPermissionsGetCurrentUserRoles",
      "httpMethod": "get",
      "tag": "UserPermissions",
      "description": "Gets the current user's roles",
      "parameters": [
        {
          "name": "role",
          "schema": "string",
          "required": false,
          "description": "Filter by role name. Supports ending wildcard (*). Optional."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Users/{id}",
      "method": "usersDelete",
      "httpMethod": "delete",
      "tag": "Users",
      "description": "Delete a user",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The user id"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v2/Users/{id}",
      "method": "/api/v2/users/{id}Get",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Get a specific user",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The user ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Users/{id}",
      "method": "usersPut",
      "httpMethod": "put",
      "tag": "Users",
      "description": "Update a user",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The user id"
        },
        {
          "name": "ChangePassword",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "UserID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "Username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v2/Users/{id}/Permissions",
      "method": "userPermissionsGetPermissions",
      "httpMethod": "get",
      "tag": "UserPermissions",
      "description": "Get a user's permissions",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The User's ID"
        },
        {
          "name": "permission",
          "schema": "string",
          "required": false,
          "description": "Filter by permission name. Supports ending wildcard (*). Optional."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Users/{id}/Roles",
      "method": "userPermissionsGetRoles",
      "httpMethod": "get",
      "tag": "UserPermissions",
      "description": "Get a user's roles",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The User's ID"
        },
        {
          "name": "role",
          "schema": "string",
          "required": false,
          "description": "Filter by role name. Supports ending wildcard (*). Optional."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Users/{id}/Roles",
      "method": "userPermissionsPut",
      "httpMethod": "put",
      "tag": "UserPermissions",
      "description": "Update a user's roles",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "The User's ID"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/VoucherHistory",
      "method": "voucherHistoryGetVoucherHistory",
      "httpMethod": "get",
      "tag": "VoucherHistory",
      "description": "Gets voucher history data",
      "parameters": [
        {
          "name": "voucherCode",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter history data by Voucher Code."
        },
        {
          "name": "changedBefore",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter history data where changes occured before provided date."
        },
        {
          "name": "changedAfter",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter history data where changes occured after provided date."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        }
      ]
    },
    {
      "url": "/api/v2/Vouchers",
      "method": "vouchersGet",
      "httpMethod": "get",
      "tag": "Vouchers",
      "description": "Gets a list of vouchers",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter vouchers by Type"
        },
        {
          "name": "dealerCode",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter vouchers by DealerCode"
        },
        {
          "name": "licenseTo",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter vouchers by LicenseTo. Wildcard supported (*)."
        },
        {
          "name": "purpose",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter vouchers by Purpose. Wildcard supported (*)."
        },
        {
          "name": "orderNumber",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter vouchers by OrderNumber"
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter vouchers by Email. Wildcard supported (*)."
        },
        {
          "name": "modifiedBy",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter vouchers by ModifiedBy"
        },
        {
          "name": "createdAfter",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter vouchers by CreatedDate"
        },
        {
          "name": "createdBefore",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter vouchers by CreatedDate"
        },
        {
          "name": "punchedAfter",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter vouchers by PunchedDate"
        },
        {
          "name": "punchedBefore",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter vouchers by PunchedDate"
        },
        {
          "name": "punched",
          "schema": "boolean",
          "required": false,
          "description": "Optional. Filter vouchers by Punched status"
        },
        {
          "name": "expirationAfter",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter vouchers by ExpirationDate"
        },
        {
          "name": "expirationBefore",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter vouchers by ExpirationDate"
        },
        {
          "name": "deleted",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter vouchers by Deleted state. By default only vouchers that are not deleted are returned."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        }
      ]
    },
    {
      "url": "/api/v2/Vouchers",
      "method": "vouchersPost",
      "httpMethod": "post",
      "tag": "Vouchers",
      "description": "Create a voucher",
      "parameters": [
        {
          "name": "CreatedDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "DealerCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Deleted",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "Email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ExpirationDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "LicenseTo",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ModifiedBy",
          "schema": "string",
          "description": ""
        },
        {
          "name": "OrderNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Punched",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "PunchedDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Purpose",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "VoucherCode",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/Vouchers/{VoucherCode}",
      "method": "vouchersDelete",
      "httpMethod": "delete",
      "tag": "Vouchers",
      "description": "Delete a voucher",
      "parameters": [
        {
          "name": "voucherCode",
          "schema": "string",
          "required": true,
          "description": "The voucher code of the voucher to delete."
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v2/Vouchers/{VoucherCode}",
      "method": "/api/v2/vouchers/{voucherCode}Get",
      "httpMethod": "get",
      "tag": "Vouchers",
      "description": "Get a voucher",
      "parameters": [
        {
          "name": "voucherCode",
          "schema": "string",
          "required": true,
          "description": "The voucher code of the voucher to get."
        },
        {
          "name": "deleted",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter vouchers by Deleted state. By default only vouchers that are not deleted are returned."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A voucher for EDT activation"
        }
      ]
    },
    {
      "url": "/api/v2/Vouchers/{VoucherCode}",
      "method": "vouchersPut",
      "httpMethod": "put",
      "tag": "Vouchers",
      "description": "Update a voucher",
      "parameters": [
        {
          "name": "voucherCode",
          "schema": "string",
          "required": true,
          "description": "The voucher code of the voucher to update."
        },
        {
          "name": "CreatedDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "DealerCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Deleted",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "Email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ExpirationDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "LicenseTo",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ModifiedBy",
          "schema": "string",
          "description": ""
        },
        {
          "name": "OrderNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Punched",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "PunchedDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Purpose",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "VoucherCode",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v2/Vouchers/{VoucherCode}/VoucherHistory",
      "method": "vouchersGetVoucherHistory",
      "httpMethod": "get",
      "tag": "Vouchers",
      "description": "Get a voucher's history.",
      "parameters": [
        {
          "name": "voucherCode",
          "schema": "string",
          "required": true,
          "description": "The voucher code to get history for."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit. The default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset. The default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        }
      ]
    },
    {
      "url": "/api/v2/activities",
      "method": "activitiesGetActivities",
      "httpMethod": "get",
      "tag": "Activities",
      "description": "Get Activities",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit.  If not specified, the default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset.  If not specified, the default page offset is 0."
        },
        {
          "name": "isIncludeDeleted",
          "schema": "boolean",
          "required": false,
          "description": "Does it include deleted activity, or not"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/activities",
      "method": "activitiesPostActivity",
      "httpMethod": "post",
      "tag": "Activities",
      "description": "Create an Activity",
      "parameters": [
        {
          "name": "ActivityID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "Deleted",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Parameters",
          "schema": "array",
          "description": ""
        },
        {
          "name": "Steps",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/activities/{activityID}",
      "method": "activitiesDeleteActivity",
      "httpMethod": "delete",
      "tag": "Activities",
      "description": "Mark the delete flag for the Activity",
      "parameters": [
        {
          "name": "activityId",
          "schema": "integer",
          "required": true,
          "description": "The id of the activity to delete"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/activities/{activityID}",
      "method": "activitiesGetActivity",
      "httpMethod": "get",
      "tag": "Activities",
      "description": "Get an Activity by ID",
      "parameters": [
        {
          "name": "activityId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the Activity to get."
        },
        {
          "name": "isIncludeDeleted",
          "schema": "boolean",
          "required": false,
          "description": "Does it include deleted activity, or not"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A DTO for an IActivity"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/activities/{activityID}",
      "method": "activitiesPutActivity",
      "httpMethod": "put",
      "tag": "Activities",
      "description": "Update an Activity",
      "parameters": [
        {
          "name": "activityId",
          "schema": "integer",
          "required": true,
          "description": "The id of the activity to update"
        },
        {
          "name": "ActivityID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "Deleted",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Parameters",
          "schema": "array",
          "description": ""
        },
        {
          "name": "Steps",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/activityRuns",
      "method": "activityRunsGetActivityRuns",
      "httpMethod": "get",
      "tag": "ActivityRuns",
      "description": "Get ActivityRuns",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit.  If not specified, the default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset.  If not specified, the default page offset is 0."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Optional. Filter activity runs by status.  Value should be a comma separated list of status to include.\r\n            If not specified, the default status filter is “InProgress”."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/activityRuns/{activityRunID}",
      "method": "activityRunsGetActivityRun",
      "httpMethod": "get",
      "tag": "ActivityRuns",
      "description": "Get an ActivityRun by ID",
      "parameters": [
        {
          "name": "activityRunId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the ActivityRun to get."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A DTO for an IActivityRun"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/activityRuns/{activityRunID}",
      "method": "activityRunsPutActivityRun",
      "httpMethod": "put",
      "tag": "ActivityRuns",
      "description": "Update an ActivityRun",
      "parameters": [
        {
          "name": "activityRunId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the ActivityRun to update ActivityRunStatus for."
        },
        {
          "name": "ActivityRunID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "EndDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "JobActivityID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "JobRunID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Parameters",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "StartDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Status",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "Steps",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/activityRuns/{activityRunID}/status",
      "method": "activityRunsGetActivityRunStatus",
      "httpMethod": "get",
      "tag": "ActivityRuns",
      "description": "Get the ActivityRunStatus of an ActivityRun",
      "parameters": [
        {
          "name": "activityRunId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the ActivityRun to get ActivityRunStatus for."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A DTO for an IActivityRunStatus"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/activityRuns/{activityRunID}/status",
      "method": "activityRunsPutActivityRunStatus",
      "httpMethod": "put",
      "tag": "ActivityRuns",
      "description": "Update the ActivityRunStatus of an ActivityRun",
      "parameters": [
        {
          "name": "activityRunId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the ActivityRun to update ActivityRunStatus for."
        },
        {
          "name": "CurrentStep",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "Status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "StepProgress",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "StepStatus",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/agents",
      "method": "agentsGetAgents",
      "httpMethod": "get",
      "tag": "Agents",
      "description": "Get Agents",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit.  If not specified, the default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset.  If not specified, the default page offset is 0."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/agents",
      "method": "agentsPostAgent",
      "httpMethod": "post",
      "tag": "Agents",
      "description": "Create an Agent",
      "parameters": [
        {
          "name": "AgentID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "KeepAliveInterval",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "MachineName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Status",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "StepConfigurations",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "UserID",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/agents/Current",
      "method": "agentsGetCurrentAgentAsync",
      "httpMethod": "get",
      "tag": "Agents",
      "description": "Get Agent associated with the current user",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "A DTO for an IAgent"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/agents/Current/ActivityRun",
      "method": "agentsGetCurrentAgentActivityRun",
      "httpMethod": "get",
      "tag": "Agents",
      "description": "Get the ActivityRun of Agent associated with the current user",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "A DTO for an IActivityRun"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/agents/{agentID}",
      "method": "agentsDeleteAgent",
      "httpMethod": "delete",
      "tag": "Agents",
      "description": "Delete an Agent",
      "parameters": [
        {
          "name": "agentId",
          "schema": "integer",
          "required": true,
          "description": "The id of the Agent to delete."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/agents/{agentID}",
      "method": "agentsGetAgentAsync",
      "httpMethod": "get",
      "tag": "Agents",
      "description": "Get Agent",
      "parameters": [
        {
          "name": "agentId",
          "schema": "integer",
          "required": true,
          "description": "The id of the Agent to get."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A DTO for an IAgent"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/agents/{agentID}",
      "method": "agentsPutAgent",
      "httpMethod": "put",
      "tag": "Agents",
      "description": "Update an Agent",
      "parameters": [
        {
          "name": "agentId",
          "schema": "integer",
          "required": true,
          "description": "The id of the Agent to update."
        },
        {
          "name": "AgentID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "KeepAliveInterval",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "MachineName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Status",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "StepConfigurations",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "UserID",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/agents/{agentID}/ActivityRun",
      "method": "agentsGetAgentActivityRun",
      "httpMethod": "get",
      "tag": "Agents",
      "description": "Get an Agent's ActivityRun",
      "parameters": [
        {
          "name": "agentId",
          "schema": "integer",
          "required": true,
          "description": "The id of the Agent to get."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A DTO for an IActivityRun"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/agents/{agentID}/ActivityRun",
      "method": "agentsPutAgentActivityRun",
      "httpMethod": "put",
      "tag": "Agents",
      "description": "Update the ActivityRun assigned to the Agent.",
      "parameters": [
        {
          "name": "agentId",
          "schema": "integer",
          "required": true,
          "description": "The id of the Agent to update."
        },
        {
          "name": "ActivityRunID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "EndDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "JobActivityID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "JobRunID",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Parameters",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "StartDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Status",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "Steps",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/agents/{agentID}/Status",
      "method": "agentsPutAgentStatus",
      "httpMethod": "put",
      "tag": "Agents",
      "description": "Update an Agent",
      "parameters": [
        {
          "name": "agentId",
          "schema": "integer",
          "required": true,
          "description": "The id of the Agent to update."
        },
        {
          "name": "LastStatusUpdate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Online",
          "schema": "boolean",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/jobRuns",
      "method": "jobRunsGetJobRuns",
      "httpMethod": "get",
      "tag": "JobRuns",
      "description": "Get JobRuns",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit.  If not specified, the default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset.  If not specified, the default page offset is 0."
        },
        {
          "name": "includeActivityRunDetails",
          "schema": "boolean",
          "required": false,
          "description": "Optional. Indicates whether to include ActivityRun details.  Defaults to false."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/jobRuns",
      "method": "jobRunsPostJobRun",
      "httpMethod": "post",
      "tag": "JobRuns",
      "description": "Create a JobRun",
      "parameters": [
        {
          "name": "ActivityRuns",
          "schema": "array",
          "description": ""
        },
        {
          "name": "EndDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "JobID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "JobRunID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "Parameters",
          "schema": "array",
          "description": ""
        },
        {
          "name": "StartDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/jobRuns/{jobRunID}",
      "method": "jobRunsDeleteJobRun",
      "httpMethod": "delete",
      "tag": "JobRuns",
      "description": "Delete a JobRun",
      "parameters": [
        {
          "name": "jobRunId",
          "schema": "integer",
          "required": true,
          "description": "The id of the JobRun to delete"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/jobRuns/{jobRunID}",
      "method": "jobRunsGetJobRun",
      "httpMethod": "get",
      "tag": "JobRuns",
      "description": "Get a JobRun by ID",
      "parameters": [
        {
          "name": "jobRunId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the JobRun to get."
        },
        {
          "name": "includeActivityRunDetails",
          "schema": "boolean",
          "required": false,
          "description": "Optional. Indicates whether to include ActivityRun details.  Defaults to false."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A DTO for an IJobRun"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/jobRuns/{jobRunID}",
      "method": "jobRunsPutJobRun",
      "httpMethod": "put",
      "tag": "JobRuns",
      "description": "Update a JobRun",
      "parameters": [
        {
          "name": "jobRunId",
          "schema": "integer",
          "required": true,
          "description": "The id of the JobRun to update"
        },
        {
          "name": "ActivityRuns",
          "schema": "array",
          "description": ""
        },
        {
          "name": "EndDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "JobID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "JobRunID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "Parameters",
          "schema": "array",
          "description": ""
        },
        {
          "name": "StartDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/jobs",
      "method": "jobsGetJobs",
      "httpMethod": "get",
      "tag": "Jobs",
      "description": "Get Jobs",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit.  If not specified, the default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset.  If not specified, the default page offset is 0."
        },
        {
          "name": "isIncludeDeleted",
          "schema": "boolean",
          "required": false,
          "description": "Does it include deleted job, or not"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/jobs",
      "method": "jobsPostJob",
      "httpMethod": "post",
      "tag": "Jobs",
      "description": "Create a Job",
      "parameters": [
        {
          "name": "Activities",
          "schema": "array",
          "description": ""
        },
        {
          "name": "Deleted",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "JobID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Parameters",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/jobs/{jobID}",
      "method": "jobsDeleteJob",
      "httpMethod": "delete",
      "tag": "Jobs",
      "description": "Mark the delete flag for the Job",
      "parameters": [
        {
          "name": "jobId",
          "schema": "integer",
          "required": true,
          "description": "The id of the job to delete"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/jobs/{jobID}",
      "method": "jobsGetJob",
      "httpMethod": "get",
      "tag": "Jobs",
      "description": "Get a Job by ID",
      "parameters": [
        {
          "name": "jobId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the Job to get."
        },
        {
          "name": "isIncludeDeleted",
          "schema": "boolean",
          "required": false,
          "description": "Does it include deleted job, or not"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A DTO for an IJob"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/jobs/{jobID}",
      "method": "jobsPutJob",
      "httpMethod": "put",
      "tag": "Jobs",
      "description": "Update a Job",
      "parameters": [
        {
          "name": "jobId",
          "schema": "integer",
          "required": true,
          "description": "The id of the job to update"
        },
        {
          "name": "Activities",
          "schema": "array",
          "description": ""
        },
        {
          "name": "Deleted",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "JobID",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Parameters",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/steps",
      "method": "stepsGetSteps",
      "httpMethod": "get",
      "tag": "Steps",
      "description": "Get Steps",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page limit.  If not specified, the default page limit is 10."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Optional. The page offset.  If not specified, the default page offset is 0."
        },
        {
          "name": "includeDeleted",
          "schema": "boolean",
          "required": false,
          "description": "Does it include deleted step, or not"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing a page of results and metadata concerning the results"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/steps",
      "method": "stepsPostStep",
      "httpMethod": "post",
      "tag": "Steps",
      "description": "Create a Step",
      "parameters": [
        {
          "name": "ConfigRequired",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "Deleted",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ImplementationID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Parameters",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "StepID",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/steps/{stepID}",
      "method": "stepsGetStep",
      "httpMethod": "get",
      "tag": "Steps",
      "description": "Get a Step by ID",
      "parameters": [
        {
          "name": "stepId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the Step to get."
        },
        {
          "name": "isIncludeDeleted",
          "schema": "boolean",
          "required": false,
          "description": "Does it include deleted step, or not"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Step"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v2/steps/{stepID}",
      "method": "stepsPutStep",
      "httpMethod": "put",
      "tag": "Steps",
      "description": "Update a Step",
      "parameters": [
        {
          "name": "stepId",
          "schema": "integer",
          "required": true,
          "description": "The step ID of the step to update"
        },
        {
          "name": "ConfigRequired",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "Deleted",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "Description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ImplementationID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Parameters",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "StepID",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://secure.agco-ats.com",
  "apiTitle": "AGCO API",
  "endpoints": 160,
  "sdkMethods": 277,
  "schemas": 157,
  "parameters": 1077,
  "difficultyScore": 624.75,
  "difficulty": "Very Hard"
}