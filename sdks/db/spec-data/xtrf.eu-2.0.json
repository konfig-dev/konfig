{
  "providerName": "xtrf.eu",
  "openApiRaw": "https://presentation.s.xtrf.eu/home-api/openapi.json",
  "securitySchemes": {
    "X-AUTH-ACCESS-TOKEN": {
      "in": "header",
      "name": "X-AUTH-ACCESS-TOKEN",
      "type": "apiKey"
    }
  },
  "homepage": "xtrf.eu",
  "apiVersion": "2.0",
  "methods": [
    {
      "url": "/accounting/customers/invoices",
      "method": "getAll",
      "httpMethod": "get",
      "tag": "Client Invoices",
      "description": "Lists all client invoices in all statuses (including not ready and drafts) that have been updated since a specific date.",
      "parameters": [
        {
          "name": "updatedSince",
          "schema": "integer",
          "description": "only client invoices modified since this timestamp"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/customers/invoices",
      "method": "create1",
      "httpMethod": "post",
      "tag": "Client Invoices",
      "description": "Creates a new invoice.",
      "parameters": [
        {
          "name": "prepaymentsIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "tasksIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/customers/invoices/documents",
      "method": "downloadDocuments",
      "httpMethod": "post",
      "tag": "Client Invoices",
      "description": "Generates client invoices' documents.",
      "parameters": [
        {
          "name": "ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/customers/invoices/ids",
      "method": "getAllIds",
      "httpMethod": "get",
      "tag": "Client Invoices",
      "description": "Returns client invoices' internal identifiers.",
      "parameters": [
        {
          "name": "updatedSince",
          "schema": "integer",
          "description": "only client invoices modified since this timestamp"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/customers/invoices/sendReminders",
      "method": "sendReminders",
      "httpMethod": "post",
      "tag": "Client Invoices",
      "description": "Sends reminders. Returns number of sent e-mails.",
      "parameters": [
        {
          "name": "ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/customers/invoices/{invoiceId}",
      "method": "delete1",
      "httpMethod": "delete",
      "tag": "Client Invoices",
      "description": "Removes a client invoice.",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "integer",
          "required": true,
          "description": "client invoice's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/accounting/customers/invoices/{invoiceId}",
      "method": "getById",
      "httpMethod": "get",
      "tag": "Client Invoices",
      "description": "Returns client invoice details.",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "integer",
          "required": true,
          "description": "client invoice's internal identifier"
        },
        {
          "name": "embed",
          "schema": "string",
          "description": "list of adittional fields which should be embedded in the response (ie. tasks)"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/customers/invoices/{invoiceId}/dates",
      "method": "getDates",
      "httpMethod": "get",
      "tag": "Client Invoices",
      "description": "Returns dates of a given client invoice.",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "integer",
          "required": true,
          "description": "client invoice's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/customers/invoices/{invoiceId}/document",
      "method": "getDocument",
      "httpMethod": "get",
      "tag": "Client Invoices",
      "description": "Generates client invoice document (PDF).",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "integer",
          "required": true,
          "description": "client invoice's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/customers/invoices/{invoiceId}/duplicate",
      "method": "duplicate",
      "httpMethod": "post",
      "tag": "Client Invoices",
      "description": "Duplicate client invoice.",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "integer",
          "required": true,
          "description": "client invoice's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/customers/invoices/{invoiceId}/duplicate/proForma",
      "method": "duplicateAsProForma",
      "httpMethod": "post",
      "tag": "Client Invoices",
      "description": "Duplicate client invoice as pro forma.",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "integer",
          "required": true,
          "description": "client invoice's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/customers/invoices/{invoiceId}/paymentTerms",
      "method": "getPaymentTerms",
      "httpMethod": "get",
      "tag": "Client Invoices",
      "description": "Returns payment terms of a given client invoice.",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "integer",
          "required": true,
          "description": "client invoice's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/customers/invoices/{invoiceId}/payments",
      "method": "getPayments",
      "httpMethod": "get",
      "tag": "Client Invoices",
      "description": "Returns all payments for the client invoice.",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "integer",
          "required": true,
          "description": "client invoice's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/customers/invoices/{invoiceId}/payments",
      "method": "createPayment",
      "httpMethod": "post",
      "tag": "Client Invoices",
      "description": "Adds a new payment to the client invoice. The invoice payment status (Not Paid, Partially Paid, Fully Paid) is automatically recalculated.",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "integer",
          "required": true,
          "description": "client invoice's internal identifier"
        },
        {
          "name": "amount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "paymentDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentMethodId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/accounting/customers/invoices/{invoiceId}/sendReminder",
      "method": "sendReminder",
      "httpMethod": "post",
      "tag": "Client Invoices",
      "description": "Sends reminder.",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "integer",
          "required": true,
          "description": "client invoice's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/accounting/customers/payments/{paymentId}",
      "method": "delete2",
      "httpMethod": "delete",
      "tag": "Client Invoices",
      "description": "Removes a customer payment.",
      "parameters": [
        {
          "name": "paymentId",
          "schema": "integer",
          "required": true,
          "description": "customer payment's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/accounting/providers/invoices",
      "method": "getAll2",
      "httpMethod": "get",
      "tag": "Vendor Invoices",
      "description": "Lists all vendor invoices in all statuses (including not ready and drafts) that have been updated since a specific date.",
      "parameters": [
        {
          "name": "updatedSince",
          "schema": "integer",
          "description": "only vendor invoices modified since this timestamp"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/providers/invoices",
      "method": "create4",
      "httpMethod": "post",
      "tag": "Vendor Invoices",
      "description": "Creates a new invoice.",
      "parameters": [
        {
          "name": "jobsIds",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/providers/invoices/ids",
      "method": "getAllIds3",
      "httpMethod": "get",
      "tag": "Vendor Invoices",
      "description": "Returns vendor invoices' internal identifiers.",
      "parameters": [
        {
          "name": "updatedSince",
          "schema": "integer",
          "description": "only vendor invoices modified since this timestamp"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/providers/invoices/{invoiceId}",
      "method": "delete6",
      "httpMethod": "delete",
      "tag": "Vendor Invoices",
      "description": "Removes a provider invoice.",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "integer",
          "required": true,
          "description": "provider invoice's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/accounting/providers/invoices/{invoiceId}",
      "method": "getById3",
      "httpMethod": "get",
      "tag": "Vendor Invoices",
      "description": "Returns provider invoice details.",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "integer",
          "required": true,
          "description": "provider invoice's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/providers/invoices/{invoiceId}/document",
      "method": "getDocument1",
      "httpMethod": "get",
      "tag": "Vendor Invoices",
      "description": "Generates provider invoice document (PDF).",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "integer",
          "required": true,
          "description": "provider invoice's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/providers/invoices/{invoiceId}/payments",
      "method": "getPayments1",
      "httpMethod": "get",
      "tag": "Vendor Invoices",
      "description": "Returns all payments for the vendor invoice.",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "integer",
          "required": true,
          "description": "vendor invoice's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounting/providers/invoices/{invoiceId}/payments",
      "method": "createPayment1",
      "httpMethod": "post",
      "tag": "Vendor Invoices",
      "description": "Creates a new payment on the vendor account and assigns the payment to the invoice.",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "integer",
          "required": true,
          "description": "vendor invoice's internal identifier"
        },
        {
          "name": "amount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "paymentDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentMethodId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/accounting/providers/invoices/{invoiceId}/send",
      "method": "send",
      "httpMethod": "post",
      "tag": "Vendor Invoices",
      "description": "Sends a provider invoice.",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "integer",
          "required": true,
          "description": "provider invoice's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/accounting/providers/invoices/{invoiceId}/status",
      "method": "setStatus",
      "httpMethod": "post",
      "tag": "Vendor Invoices",
      "description": "Changes invoice status to given status.",
      "parameters": [
        {
          "name": "invoiceId",
          "schema": "integer",
          "required": true,
          "description": "provider invoice's internal identifier"
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/accounting/providers/payments/{paymentId}",
      "method": "delete7",
      "httpMethod": "delete",
      "tag": "Vendor Invoices",
      "description": "Removes a provider payment.",
      "parameters": [
        {
          "name": "paymentId",
          "schema": "integer",
          "required": true,
          "description": "provider payment's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/browser",
      "method": "browseJson",
      "httpMethod": "get",
      "tag": "Browser",
      "description": "Searches for data (ie. customer, task, etc) and returns it in a tabular form.",
      "parameters": [
        {
          "name": "viewId",
          "schema": "integer",
          "description": "view's identifier"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "additionalOrder",
          "schema": "string",
          "description": ""
        },
        {
          "name": "useDeferredColumns",
          "schema": "string",
          "description": ""
        },
        {
          "name": "maxRows",
          "schema": "integer",
          "description": "overrides view's default rows limit, supported values 10 to 1000"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/csv",
      "method": "browseCsv",
      "httpMethod": "get",
      "tag": "Browser",
      "description": "Searches for data (ie. customer, task, etc) and returns it in a CSV form.",
      "parameters": [
        {
          "name": "viewId",
          "schema": "integer",
          "description": "view's identifier"
        },
        {
          "name": "separator",
          "schema": "string",
          "description": "csv field separator"
        },
        {
          "name": "secondarySeparator",
          "schema": "string",
          "description": "secondary csv field separator"
        },
        {
          "name": "additionalOrder",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/details/for/{className}",
      "method": "getCurrentViewDetails",
      "httpMethod": "get",
      "tag": "Browser",
      "description": "Returns current view's detailed information, suitable for browser.",
      "parameters": [
        {
          "name": "className",
          "schema": "string",
          "required": true,
          "description": "views' class name"
        },
        {
          "name": "placeName",
          "schema": "string",
          "description": "place name (denotes specific place in system with the table)"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/details/for/{className}/{viewId}",
      "method": "getViewDetails",
      "httpMethod": "get",
      "tag": "Browser",
      "description": "Returns view's detailed information, suitable for browser.",
      "parameters": [
        {
          "name": "className",
          "schema": "string",
          "required": true,
          "description": "views' class name"
        },
        {
          "name": "placeName",
          "schema": "string",
          "description": "place name (denotes specific place in system with the table)"
        },
        {
          "name": "viewId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/details/for/{className}/{viewId}",
      "method": "selectViewAndGetItsDetails",
      "httpMethod": "post",
      "tag": "Browser",
      "description": "Selects given view as current and returns its detailed information, suitable for browser.",
      "parameters": [
        {
          "name": "className",
          "schema": "string",
          "required": true,
          "description": "views' class name"
        },
        {
          "name": "place name (denotes specific place in system with the table)",
          "schema": "string",
          "description": ""
        },
        {
          "name": "viewId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/for/{className}",
      "method": "getViewsBrief",
      "httpMethod": "get",
      "tag": "Browser",
      "description": "Returns views' brief.",
      "parameters": [
        {
          "name": "className",
          "schema": "string",
          "required": true,
          "description": "views' class name"
        },
        {
          "name": "placeName",
          "schema": "string",
          "description": "place name (denotes specific place in system with the table)"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/for/{className}",
      "method": "create",
      "httpMethod": "post",
      "tag": "Browser",
      "description": "Creates view for given class.",
      "parameters": [
        {
          "name": "className",
          "schema": "string",
          "required": true,
          "description": "view's class name"
        },
        {
          "name": "columns",
          "schema": "array",
          "description": ""
        },
        {
          "name": "order",
          "schema": "object",
          "description": ""
        },
        {
          "name": "permissions",
          "schema": "object",
          "description": ""
        },
        {
          "name": "settings",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/{viewId}",
      "method": "delete",
      "httpMethod": "delete",
      "tag": "Browser",
      "description": "Removes a view.",
      "parameters": [
        {
          "name": "viewId",
          "schema": "integer",
          "required": true,
          "description": "view's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/browser/views/{viewId}",
      "method": "get",
      "httpMethod": "get",
      "tag": "Browser",
      "description": "Returns all view's information.",
      "parameters": [
        {
          "name": "viewId",
          "schema": "integer",
          "required": true,
          "description": "view's identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/{viewId}",
      "method": "update",
      "httpMethod": "put",
      "tag": "Browser",
      "description": "Updates all view's information.",
      "parameters": [
        {
          "name": "viewId",
          "schema": "integer",
          "required": true,
          "description": "view's identifier"
        },
        {
          "name": "columns",
          "schema": "array",
          "description": ""
        },
        {
          "name": "order",
          "schema": "object",
          "description": ""
        },
        {
          "name": "permissions",
          "schema": "object",
          "description": ""
        },
        {
          "name": "settings",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/{viewId}/columns",
      "method": "getColumns",
      "httpMethod": "get",
      "tag": "Browser",
      "description": "Returns columns defined in view.",
      "parameters": [
        {
          "name": "viewId",
          "schema": "integer",
          "required": true,
          "description": "view's identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/{viewId}/columns",
      "method": "updateColumns",
      "httpMethod": "put",
      "tag": "Browser",
      "description": "Updates columns in view.",
      "parameters": [
        {
          "name": "viewId",
          "schema": "integer",
          "required": true,
          "description": "view's identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/{viewId}/columns/{columnName}",
      "method": "deleteColumn",
      "httpMethod": "delete",
      "tag": "Browser",
      "description": "Deletes a single column from view.",
      "parameters": [
        {
          "name": "viewId",
          "schema": "integer",
          "required": true,
          "description": "view's identifier"
        },
        {
          "name": "columnName",
          "schema": "string",
          "required": true,
          "description": "column's name"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/{viewId}/columns/{columnName}/settings",
      "method": "getColumnSettings",
      "httpMethod": "get",
      "tag": "Browser",
      "description": "Returns column's specific settings.",
      "parameters": [
        {
          "name": "viewId",
          "schema": "integer",
          "required": true,
          "description": "view's identifier"
        },
        {
          "name": "columnName",
          "schema": "string",
          "required": true,
          "description": "column's name"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/{viewId}/columns/{columnName}/settings",
      "method": "updateColumnSettings",
      "httpMethod": "put",
      "tag": "Browser",
      "description": "Updates column's specific settings.",
      "parameters": [
        {
          "name": "viewId",
          "schema": "integer",
          "required": true,
          "description": "view's identifier"
        },
        {
          "name": "columnName",
          "schema": "string",
          "required": true,
          "description": "column's name"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/{viewId}/filter",
      "method": "getFilter",
      "httpMethod": "get",
      "tag": "Browser",
      "description": "Returns view's filter.",
      "parameters": [
        {
          "name": "viewId",
          "schema": "integer",
          "required": true,
          "description": "view's identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/{viewId}/filter",
      "method": "updateFilter",
      "httpMethod": "put",
      "tag": "Browser",
      "description": "Updates view's filter.",
      "parameters": [
        {
          "name": "viewId",
          "schema": "integer",
          "required": true,
          "description": "view's identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/{viewId}/filter/{filterProperty}",
      "method": "updateFilterProperty",
      "httpMethod": "put",
      "tag": "Browser",
      "description": "Updates view's filter property.",
      "parameters": [
        {
          "name": "viewId",
          "schema": "integer",
          "required": true,
          "description": "view's identifier"
        },
        {
          "name": "filterProperty",
          "schema": "string",
          "required": true,
          "description": "view's filter property name"
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "settings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "settingsPresent",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/{viewId}/order",
      "method": "getOrder",
      "httpMethod": "get",
      "tag": "Browser",
      "description": "Returns view's order settings.",
      "parameters": [
        {
          "name": "viewId",
          "schema": "integer",
          "required": true,
          "description": "view's identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/{viewId}/order",
      "method": "updateOrder",
      "httpMethod": "put",
      "tag": "Browser",
      "description": "Updates view's order settings.",
      "parameters": [
        {
          "name": "viewId",
          "schema": "integer",
          "required": true,
          "description": "view's identifier"
        },
        {
          "name": "column",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/{viewId}/permissions",
      "method": "getPermissions",
      "httpMethod": "get",
      "tag": "Browser",
      "description": "Returns view's permissions.",
      "parameters": [
        {
          "name": "viewId",
          "schema": "integer",
          "required": true,
          "description": "view's identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/{viewId}/permissions",
      "method": "updatePermissions",
      "httpMethod": "put",
      "tag": "Browser",
      "description": "Updates view's permissions.",
      "parameters": [
        {
          "name": "viewId",
          "schema": "integer",
          "required": true,
          "description": "view's identifier"
        },
        {
          "name": "sharedGroups",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/{viewId}/settings",
      "method": "getSettings",
      "httpMethod": "get",
      "tag": "Browser",
      "description": "Returns view's settings.",
      "parameters": [
        {
          "name": "viewId",
          "schema": "integer",
          "required": true,
          "description": "view's identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/{viewId}/settings",
      "method": "updateSettings",
      "httpMethod": "put",
      "tag": "Browser",
      "description": "Updates view's settings.",
      "parameters": [
        {
          "name": "viewId",
          "schema": "integer",
          "required": true,
          "description": "view's identifier"
        },
        {
          "name": "local",
          "schema": "object",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/{viewId}/settings/local",
      "method": "getLocalSettings",
      "httpMethod": "get",
      "tag": "Browser",
      "description": "Returns view's local settings (for current user).",
      "parameters": [
        {
          "name": "viewId",
          "schema": "integer",
          "required": true,
          "description": "view's identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/browser/views/{viewId}/settings/local",
      "method": "updateLocalSettings",
      "httpMethod": "put",
      "tag": "Browser",
      "description": "Updates view's local settings (for current user).",
      "parameters": [
        {
          "name": "viewId",
          "schema": "integer",
          "required": true,
          "description": "view's identifier"
        },
        {
          "name": "maxLinesInRow",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "maxRows",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers",
      "method": "getAllNamesWithIds",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Returns list of simple clients representations",
      "parameters": [
        {
          "name": "updatedSince",
          "schema": "integer",
          "description": "only clients modified since this timestamp"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers",
      "method": "create3",
      "httpMethod": "post",
      "tag": "Clients",
      "description": "Creates a new client.",
      "parameters": [
        {
          "name": "accountOnCustomerServer",
          "schema": "string",
          "description": ""
        },
        {
          "name": "accounting",
          "schema": "object",
          "description": ""
        },
        {
          "name": "billingAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "branchId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "categoriesIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "clientFirstProjectDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "clientFirstQuoteDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "clientLastProjectDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "clientLastQuoteDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "clientNumberOfProjects",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "clientNumberOfQuotes",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contractNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "correspondenceAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "fullName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "idNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "industriesIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "leadSourceId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "limitAccessToPeopleResponsible",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "persons",
          "schema": "array",
          "description": ""
        },
        {
          "name": "responsiblePersons",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesNotes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/ids",
      "method": "getAllIds2",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Returns clients' internal identifiers.",
      "parameters": [
        {
          "name": "updatedSince",
          "schema": "integer",
          "description": "only clients modified since this timestamp"
        },
        {
          "name": "nameEquals",
          "schema": "string",
          "description": "exact name of client"
        },
        {
          "name": "emailEquals",
          "schema": "string",
          "description": "exact email of client"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/persons",
      "method": "create2",
      "httpMethod": "post",
      "tag": "Clients",
      "description": "Creates a new person.",
      "parameters": [
        {
          "name": "active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customerId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "firstProjectDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "firstQuoteDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lastProjectDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lastQuoteDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "motherTonguesIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "numberOfProjects",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "numberOfQuotes",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "positionId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "CustomerPerson"
        }
      ]
    },
    {
      "url": "/customers/persons/accessToken",
      "method": "generateSingleUseSignInToken",
      "httpMethod": "post",
      "tag": "Clients",
      "description": "Generates a single use sign-in token.",
      "parameters": [
        {
          "name": "loginOrEmail",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/persons/ids",
      "method": "getAllIds1",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Returns persons' internal identifiers.",
      "parameters": [
        {
          "name": "updatedSince",
          "schema": "integer",
          "description": "only persons modified since this timestamp"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/persons/{personId}",
      "method": "delete3",
      "httpMethod": "delete",
      "tag": "Clients",
      "description": "Removes a person.",
      "parameters": [
        {
          "name": "personId",
          "schema": "integer",
          "required": true,
          "description": "person's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/customers/persons/{personId}",
      "method": "getById1",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Returns person details.",
      "parameters": [
        {
          "name": "personId",
          "schema": "integer",
          "required": true,
          "description": "person's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "CustomerPerson"
        }
      ]
    },
    {
      "url": "/customers/persons/{personId}",
      "method": "update1",
      "httpMethod": "put",
      "tag": "Clients",
      "description": "Updates an existing person.",
      "parameters": [
        {
          "name": "personId",
          "schema": "integer",
          "required": true,
          "description": "person's internal identifier"
        },
        {
          "name": "active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customerId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "firstProjectDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "firstQuoteDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lastProjectDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lastQuoteDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "motherTonguesIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "numberOfProjects",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "numberOfQuotes",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "positionId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "CustomerPerson"
        }
      ]
    },
    {
      "url": "/customers/persons/{personId}/contact",
      "method": "getContact",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Returns contact of a given person.",
      "parameters": [
        {
          "name": "personId",
          "schema": "integer",
          "required": true,
          "description": "person's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/persons/{personId}/contact",
      "method": "updateContact",
      "httpMethod": "put",
      "tag": "Clients",
      "description": "Updates contact of a given person.",
      "parameters": [
        {
          "name": "personId",
          "schema": "integer",
          "required": true,
          "description": "person's internal identifier"
        },
        {
          "name": "emails",
          "schema": "object",
          "description": ""
        },
        {
          "name": "fax",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phones",
          "schema": "array",
          "description": ""
        },
        {
          "name": "sms",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/persons/{personId}/customFields",
      "method": "getCustomFields",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Returns custom fields of a given person.",
      "parameters": [
        {
          "name": "personId",
          "schema": "integer",
          "required": true,
          "description": "person's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/persons/{personId}/customFields",
      "method": "updateCustomFields",
      "httpMethod": "put",
      "tag": "Clients",
      "description": "Updates custom fields of a given person.",
      "parameters": [
        {
          "name": "personId",
          "schema": "integer",
          "required": true,
          "description": "person's internal identifier"
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "empty",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/priceLists/{priceListId}",
      "method": "delete4",
      "httpMethod": "delete",
      "tag": "Clients",
      "description": "Removes a customer price list.",
      "parameters": [
        {
          "name": "priceListId",
          "schema": "integer",
          "required": true,
          "description": "customer price list's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/customers/{customerId}",
      "method": "delete5",
      "httpMethod": "delete",
      "tag": "Clients",
      "description": "Removes a client.",
      "parameters": [
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "client's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/customers/{customerId}",
      "method": "getById2",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Returns client details.",
      "parameters": [
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "client's internal identifier"
        },
        {
          "name": "embed",
          "schema": "string",
          "description": "list of additional fields which should be embedded in the response (available options: persons)"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{customerId}",
      "method": "update2",
      "httpMethod": "put",
      "tag": "Clients",
      "description": "Updates an existing client.",
      "parameters": [
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "client's internal identifier"
        },
        {
          "name": "accountOnCustomerServer",
          "schema": "string",
          "description": ""
        },
        {
          "name": "accounting",
          "schema": "object",
          "description": ""
        },
        {
          "name": "billingAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "branchId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "categoriesIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "clientFirstProjectDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "clientFirstQuoteDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "clientLastProjectDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "clientLastQuoteDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "clientNumberOfProjects",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "clientNumberOfQuotes",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contractNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "correspondenceAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "fullName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "idNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "industriesIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "leadSourceId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "limitAccessToPeopleResponsible",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "persons",
          "schema": "array",
          "description": ""
        },
        {
          "name": "responsiblePersons",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesNotes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{customerId}/address",
      "method": "getAddress",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Returns address of a given client.",
      "parameters": [
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "client's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{customerId}/address",
      "method": "updateAddress",
      "httpMethod": "put",
      "tag": "Clients",
      "description": "Updates address of a given client.",
      "parameters": [
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "client's internal identifier"
        },
        {
          "name": "addressLine1",
          "schema": "string",
          "description": ""
        },
        {
          "name": "addressLine2",
          "schema": "string",
          "description": ""
        },
        {
          "name": "city",
          "schema": "string",
          "description": ""
        },
        {
          "name": "countryId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "postalCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "provinceId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "sameAsBillingAddress",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{customerId}/categories",
      "method": "getCategories",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Returns categories of a given client.",
      "parameters": [
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "client's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{customerId}/categories",
      "method": "updateCategories",
      "httpMethod": "put",
      "tag": "Clients",
      "description": "Updates categories of a given client.",
      "parameters": [
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "client's internal identifier"
        },
        {
          "name": "empty",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{customerId}/contact",
      "method": "getContact1",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Returns contact of a given client.",
      "parameters": [
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "client's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{customerId}/contact",
      "method": "updateContact1",
      "httpMethod": "put",
      "tag": "Clients",
      "description": "Updates contact of a given client.",
      "parameters": [
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "client's internal identifier"
        },
        {
          "name": "emails",
          "schema": "object",
          "description": ""
        },
        {
          "name": "fax",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phones",
          "schema": "array",
          "description": ""
        },
        {
          "name": "sms",
          "schema": "string",
          "description": ""
        },
        {
          "name": "websites",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{customerId}/correspondenceAddress",
      "method": "getCorrespondenceAddress",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Returns correspondence address of a given client.",
      "parameters": [
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "client's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{customerId}/correspondenceAddress",
      "method": "updateCorrespondenceAddress",
      "httpMethod": "put",
      "tag": "Clients",
      "description": "Updates correspondence address of a given client.",
      "parameters": [
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "client's internal identifier"
        },
        {
          "name": "addressLine1",
          "schema": "string",
          "description": ""
        },
        {
          "name": "addressLine2",
          "schema": "string",
          "description": ""
        },
        {
          "name": "city",
          "schema": "string",
          "description": ""
        },
        {
          "name": "countryId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "postalCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "provinceId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "sameAsBillingAddress",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{customerId}/customFields",
      "method": "getCustomFields1",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Returns custom fields of a given client.",
      "parameters": [
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "client's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{customerId}/customFields",
      "method": "updateCustomFields1",
      "httpMethod": "put",
      "tag": "Clients",
      "description": "Updates custom fields of a given client.",
      "parameters": [
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "client's internal identifier"
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "empty",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{customerId}/customFields/{customFieldKey}",
      "method": "getCustomField",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Returns custom field of a given client.",
      "parameters": [
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "client's internal identifier"
        },
        {
          "name": "customFieldKey",
          "schema": "string",
          "required": true,
          "description": "custom field's key"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{customerId}/customFields/{customFieldKey}",
      "method": "updateCustomField",
      "httpMethod": "put",
      "tag": "Clients",
      "description": "Updates given custom field of a given client.",
      "parameters": [
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "client's internal identifier"
        },
        {
          "name": "customFieldKey",
          "schema": "string",
          "required": true,
          "description": "custom field's key"
        },
        {
          "name": "key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "value",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{customerId}/industries",
      "method": "getIndustries",
      "httpMethod": "get",
      "tag": "Clients",
      "description": "Returns industries of a given client.",
      "parameters": [
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "client's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/customers/{customerId}/industries",
      "method": "updateIndustries",
      "httpMethod": "put",
      "tag": "Clients",
      "description": "Updates industries of a given client.",
      "parameters": [
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "client's internal identifier"
        },
        {
          "name": "empty",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dictionaries/active",
      "method": "getActive",
      "httpMethod": "get",
      "tag": "Dictionaries",
      "description": "Returns active dictionary entities for all types.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dictionaries/all",
      "method": "getAll1",
      "httpMethod": "get",
      "tag": "Dictionaries",
      "description": "Returns dictionary entities for all types. Both active and not active ones.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dictionaries/currency/{isoCode}/exchangeRate",
      "method": "getByIsoCode",
      "httpMethod": "get",
      "tag": "Currency exchange rates",
      "description": "Returns currency exchange rates.",
      "parameters": [
        {
          "name": "isoCode",
          "schema": "string",
          "required": true,
          "description": "iso code, https://www.xe.com/iso4217.php"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dictionaries/currency/{isoCode}/exchangeRate",
      "method": "createExchangeRate",
      "httpMethod": "post",
      "tag": "Currency exchange rates",
      "description": "Adding currency exchange rates.",
      "parameters": [
        {
          "name": "isoCode",
          "schema": "string",
          "required": true,
          "description": "iso code, https://www.xe.com/iso4217.php"
        },
        {
          "name": "dateFrom",
          "schema": "object",
          "description": ""
        },
        {
          "name": "exchangeRate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lastModification",
          "schema": "object",
          "description": ""
        },
        {
          "name": "originDetails",
          "schema": "string",
          "description": ""
        },
        {
          "name": "publicationDate",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/dictionaries/{type}/active",
      "method": "getActiveByType",
      "httpMethod": "get",
      "tag": "Dictionaries",
      "description": "Returns active values from a given dictionary.",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "dictionary type"
        },
        {
          "name": "nameEquals",
          "schema": "string",
          "description": "exact name of entity"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dictionaries/{type}/all",
      "method": "getAllByType",
      "httpMethod": "get",
      "tag": "Dictionaries",
      "description": "Returns all values (both active and not active) from a given dictionary.",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "dictionary type"
        },
        {
          "name": "nameEquals",
          "schema": "string",
          "description": "exact name of entity"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dictionaries/{type}/{id}",
      "method": "getByTypeAndId",
      "httpMethod": "get",
      "tag": "Dictionaries",
      "description": "Returns specific value from a given dictionary.",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "dictionary type"
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "dictionary value identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/files",
      "method": "uploadFile",
      "httpMethod": "post",
      "tag": "Files",
      "description": "Uploads a temporary file (ie. for XML import). Returns token which can be used in other API calls.",
      "parameters": [
        {
          "name": "file",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/jobs/{jobId}",
      "method": "getJobDetails",
      "httpMethod": "get",
      "tag": "Jobs (Classic)",
      "description": "Returns job details by jobId.",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/jobs/{jobId}/dates",
      "method": "updateDates",
      "httpMethod": "put",
      "tag": "Jobs (Classic)",
      "description": "Updates dates of a given job.",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        },
        {
          "name": "actualEndDate",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "actualStartDate",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "deadline",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "startDate",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/jobs/{jobId}/files",
      "method": "getJobFiles",
      "httpMethod": "get",
      "tag": "Jobs (Classic)",
      "description": "Returns list of input and output files of a job.",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/jobs/{jobId}/files/output",
      "method": "assignFileToJobOutput",
      "httpMethod": "post",
      "tag": "Jobs (Classic)",
      "description": "",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        },
        {
          "name": "category",
          "schema": "string",
          "description": ""
        },
        {
          "name": "content",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/jobs/{jobId}/files/{fileId}",
      "method": "getJobFiles1",
      "httpMethod": "get",
      "tag": "Jobs (Classic)",
      "description": "Returns file metadata.",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        },
        {
          "name": "fileId",
          "schema": "integer",
          "required": true,
          "description": "file's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/jobs/{jobId}/instructions",
      "method": "updateInstructions",
      "httpMethod": "put",
      "tag": "Jobs (Classic)",
      "description": "Updates instructions for a job.",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        },
        {
          "name": "forProvider",
          "schema": "string",
          "description": ""
        },
        {
          "name": "fromCustomer",
          "schema": "string",
          "description": ""
        },
        {
          "name": "internal",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "paymentNoteForCustomer",
          "schema": "string",
          "description": ""
        },
        {
          "name": "paymentNoteForVendor",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/jobs/{jobId}/status",
      "method": "changeStatus",
      "httpMethod": "put",
      "tag": "Jobs (Classic)",
      "description": "Changes job status if possible (400 Bad Request is returned otherwise).",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        },
        {
          "name": "externalId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/jobs/{jobId}/vendor",
      "method": "assignVendor",
      "httpMethod": "put",
      "tag": "Jobs (Classic)",
      "description": "Assigns vendor to a job in a project.",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        },
        {
          "name": "recalculateRates",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "vendorPriceProfileId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/license",
      "method": "getLicense",
      "httpMethod": "get",
      "tag": "License",
      "description": "Returns license content.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/license/refresh",
      "method": "refresh",
      "httpMethod": "post",
      "tag": "License",
      "description": "Refreshes license content.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/macros/{macroId}/run",
      "method": "run",
      "httpMethod": "post",
      "tag": "Macros",
      "description": "Executes a macro.",
      "parameters": [
        {
          "name": "macroId",
          "schema": "integer",
          "required": true,
          "description": "macro internal identifier"
        },
        {
          "name": "async",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "params",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects",
      "method": "create5",
      "httpMethod": "post",
      "tag": "Projects (Classic)",
      "description": "Creates a new Classic Project.",
      "parameters": [
        {
          "name": "categoriesIds",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "dates",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "inputFiles",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "instructions",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "people",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "serviceId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "sourceLanguageId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "specializationId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "targetLanguagesIds",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/files/{fileId}/download",
      "method": "getFileById",
      "httpMethod": "get",
      "tag": "Projects (Classic)",
      "description": "Downloads a file.",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "file's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/ids",
      "method": "getAllIds6",
      "httpMethod": "get",
      "tag": "Projects (Classic)",
      "description": "Returns projects' internal identifiers.",
      "parameters": [
        {
          "name": "updatedSince",
          "schema": "integer",
          "description": "only projects modified since this timestamp"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{projectId}",
      "method": "delete12",
      "httpMethod": "delete",
      "tag": "Projects (Classic)",
      "description": "Removes a project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/projects/{projectId}",
      "method": "getById7",
      "httpMethod": "get",
      "tag": "Projects (Classic)",
      "description": "Returns project details.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "embed",
          "schema": "string",
          "description": "list of additional fields which should be embedded in the response (available options: tasks)"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{projectId}/contacts",
      "method": "getContacts",
      "httpMethod": "get",
      "tag": "Projects (Classic)",
      "description": "Returns contacts of a given project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{projectId}/contacts",
      "method": "updateContacts",
      "httpMethod": "put",
      "tag": "Projects (Classic)",
      "description": "Updates contacts of a given project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "additionalIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "primaryId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "sendBackToId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{projectId}/customFields",
      "method": "getCustomFields5",
      "httpMethod": "get",
      "tag": "Projects (Classic)",
      "description": "Returns custom fields of a given project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{projectId}/customFields",
      "method": "updateCustomFields3",
      "httpMethod": "put",
      "tag": "Projects (Classic)",
      "description": "Updates custom fields of a given project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "empty",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{projectId}/dates",
      "method": "getDates1",
      "httpMethod": "get",
      "tag": "Projects (Classic)",
      "description": "Returns dates of a given project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{projectId}/dates",
      "method": "updateDates1",
      "httpMethod": "put",
      "tag": "Projects (Classic)",
      "description": "Updates dates of a given project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "actualDeliveryDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "actualStartDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "deadline",
          "schema": "object",
          "description": ""
        },
        {
          "name": "startDate",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{projectId}/finance",
      "method": "getFinance",
      "httpMethod": "get",
      "tag": "Projects (Classic)",
      "description": "Returns finance of a given project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{projectId}/finance/payables",
      "method": "createPayable",
      "httpMethod": "post",
      "tag": "Projects (Classic)",
      "description": "Adds a payable to a project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "calculationUnitId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "catLogFile",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ignoreMinimumCharge",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "invoiceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "jobId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "jobTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "languageCombination",
          "schema": "object",
          "description": ""
        },
        {
          "name": "languageCombinationIdNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minimumCharge",
          "schema": "number",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rateOrigin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{projectId}/finance/payables/{payableId}",
      "method": "deletePayable",
      "httpMethod": "delete",
      "tag": "Projects (Classic)",
      "description": "Deletes a payable.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "payableId",
          "schema": "integer",
          "required": true,
          "description": "payable's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/projects/{projectId}/finance/payables/{payableId}",
      "method": "updatePayable",
      "httpMethod": "put",
      "tag": "Projects (Classic)",
      "description": "Updates a payable.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "payableId",
          "schema": "integer",
          "required": true,
          "description": "payable's internal identifier"
        },
        {
          "name": "calculationUnitId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ignoreMinimumCharge",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "invoiceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "jobId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "jobTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "languageCombination",
          "schema": "object",
          "description": ""
        },
        {
          "name": "languageCombinationIdNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minimumCharge",
          "schema": "number",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rateOrigin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{projectId}/finance/receivables",
      "method": "createReceivable",
      "httpMethod": "post",
      "tag": "Projects (Classic)",
      "description": "Adds a receivable to a project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "calculationUnitId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "catLogFile",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ignoreMinimumCharge",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "invoiceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "jobTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "languageCombination",
          "schema": "object",
          "description": ""
        },
        {
          "name": "languageCombinationIdNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minimumCharge",
          "schema": "number",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rateOrigin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taskId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{projectId}/finance/receivables/{receivableId}",
      "method": "deleteReceivable",
      "httpMethod": "delete",
      "tag": "Projects (Classic)",
      "description": "Deletes a receivable.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "receivableId",
          "schema": "integer",
          "required": true,
          "description": "receivable's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/projects/{projectId}/finance/receivables/{receivableId}",
      "method": "updateReceivable",
      "httpMethod": "put",
      "tag": "Projects (Classic)",
      "description": "Updates a receivable.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "receivableId",
          "schema": "integer",
          "required": true,
          "description": "receivable's internal identifier"
        },
        {
          "name": "calculationUnitId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ignoreMinimumCharge",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "invoiceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "jobTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "languageCombination",
          "schema": "object",
          "description": ""
        },
        {
          "name": "languageCombinationIdNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minimumCharge",
          "schema": "number",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rateOrigin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taskId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{projectId}/instructions",
      "method": "getInstructions",
      "httpMethod": "get",
      "tag": "Projects (Classic)",
      "description": "Returns instructions of a given project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{projectId}/instructions",
      "method": "updateInstructions1",
      "httpMethod": "put",
      "tag": "Projects (Classic)",
      "description": "Updates instructions of a given project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "forProvider",
          "schema": "string",
          "description": ""
        },
        {
          "name": "fromCustomer",
          "schema": "string",
          "description": ""
        },
        {
          "name": "internal",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "paymentNoteForCustomer",
          "schema": "string",
          "description": ""
        },
        {
          "name": "paymentNoteForVendor",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects/{projectId}/languageCombinations",
      "method": "createLanguageCombination",
      "httpMethod": "post",
      "tag": "Projects (Classic)",
      "description": "Creates a new language combination for a given project without creating a task.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "sourceLanguageId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "targetLanguageId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "language combination (ie. PL -> EN)"
        }
      ]
    },
    {
      "url": "/projects/{projectId}/tasks",
      "method": "createTask",
      "httpMethod": "post",
      "tag": "Projects (Classic)",
      "description": "Creates a new task for a given project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "clientTaskPONumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dates",
          "schema": "object",
          "description": ""
        },
        {
          "name": "files",
          "schema": "array",
          "description": ""
        },
        {
          "name": "instructions",
          "schema": "object",
          "description": ""
        },
        {
          "name": "languageCombination",
          "schema": "object",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "people",
          "schema": "object",
          "description": ""
        },
        {
          "name": "specializationId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "workflowId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/providers/ids",
      "method": "getAllIds5",
      "httpMethod": "get",
      "tag": "Vendors",
      "description": "Returns providers' internal identifiers.",
      "parameters": [
        {
          "name": "updatedSince",
          "schema": "integer",
          "description": "only providers modified since this timestamp"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/providers/persons/ids",
      "method": "getAllIds4",
      "httpMethod": "get",
      "tag": "Vendors",
      "description": "Returns persons' internal identifiers.",
      "parameters": [
        {
          "name": "updatedSince",
          "schema": "integer",
          "description": "only persons modified since this timestamp"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/providers/persons/{personId}",
      "method": "delete8",
      "httpMethod": "delete",
      "tag": "Vendors",
      "description": "Removes a person.",
      "parameters": [
        {
          "name": "personId",
          "schema": "integer",
          "required": true,
          "description": "person's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/providers/persons/{personId}",
      "method": "getById4",
      "httpMethod": "get",
      "tag": "Vendors",
      "description": "Returns person details.",
      "parameters": [
        {
          "name": "personId",
          "schema": "integer",
          "required": true,
          "description": "person's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/providers/persons/{personId}/contact",
      "method": "getContact2",
      "httpMethod": "get",
      "tag": "Vendors",
      "description": "Returns contact of a given person.",
      "parameters": [
        {
          "name": "personId",
          "schema": "integer",
          "required": true,
          "description": "person's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/providers/persons/{personId}/customFields",
      "method": "getCustomFields2",
      "httpMethod": "get",
      "tag": "Vendors",
      "description": "Returns custom fields of a given person.",
      "parameters": [
        {
          "name": "personId",
          "schema": "integer",
          "required": true,
          "description": "person's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/providers/persons/{personId}/notification/invitation",
      "method": "sendInvitations",
      "httpMethod": "post",
      "tag": "Vendors",
      "description": "Sends invitation to Vendor Portal.",
      "parameters": [
        {
          "name": "personId",
          "schema": "integer",
          "required": true,
          "description": "person's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/providers/priceLists/{priceListId}",
      "method": "delete9",
      "httpMethod": "delete",
      "tag": "Vendors",
      "description": "Removes a provider price list.",
      "parameters": [
        {
          "name": "priceListId",
          "schema": "integer",
          "required": true,
          "description": "provider price list's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/providers/{providerId}",
      "method": "delete10",
      "httpMethod": "delete",
      "tag": "Vendors",
      "description": "Removes a provider.",
      "parameters": [
        {
          "name": "providerId",
          "schema": "integer",
          "required": true,
          "description": "provider's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/providers/{providerId}",
      "method": "getById5",
      "httpMethod": "get",
      "tag": "Vendors",
      "description": "Returns provider details.",
      "parameters": [
        {
          "name": "providerId",
          "schema": "integer",
          "required": true,
          "description": "provider's internal identifier"
        },
        {
          "name": "embed",
          "schema": "string",
          "description": "list of adittional fields which should be embedded in the response (ie. persons)"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/providers/{providerId}/address",
      "method": "getAddress1",
      "httpMethod": "get",
      "tag": "Vendors",
      "description": "Returns address of a given provider.",
      "parameters": [
        {
          "name": "providerId",
          "schema": "integer",
          "required": true,
          "description": "provider's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/providers/{providerId}/competencies",
      "method": "getCompetencies",
      "httpMethod": "get",
      "tag": "Vendors",
      "description": "Returns competencies of a given provider.",
      "parameters": [
        {
          "name": "providerId",
          "schema": "integer",
          "required": true,
          "description": "provider's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/providers/{providerId}/contact",
      "method": "getContact3",
      "httpMethod": "get",
      "tag": "Vendors",
      "description": "Returns contact of a given provider.",
      "parameters": [
        {
          "name": "providerId",
          "schema": "integer",
          "required": true,
          "description": "provider's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/providers/{providerId}/correspondenceAddress",
      "method": "getCorrespondenceAddress1",
      "httpMethod": "get",
      "tag": "Vendors",
      "description": "Returns correspondence address of a given provider.",
      "parameters": [
        {
          "name": "providerId",
          "schema": "integer",
          "required": true,
          "description": "provider's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/providers/{providerId}/customFields",
      "method": "getCustomFields3",
      "httpMethod": "get",
      "tag": "Vendors",
      "description": "Returns custom fields of a given provider.",
      "parameters": [
        {
          "name": "providerId",
          "schema": "integer",
          "required": true,
          "description": "provider's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/providers/{providerId}/notification/invitation",
      "method": "sendInvitations1",
      "httpMethod": "post",
      "tag": "Vendors",
      "description": "Sends invitations to Vendor Portal.",
      "parameters": [
        {
          "name": "providerId",
          "schema": "integer",
          "required": true,
          "description": "provider's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/quotes/ids",
      "method": "getAllIds7",
      "httpMethod": "get",
      "tag": "Quotes (Classic)",
      "description": "Returns quotes' internal identifiers.",
      "parameters": [
        {
          "name": "updatedSince",
          "schema": "integer",
          "description": "only quotes modified since this timestamp"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/quotes/{quoteId}",
      "method": "delete13",
      "httpMethod": "delete",
      "tag": "Quotes (Classic)",
      "description": "Removes a quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/quotes/{quoteId}",
      "method": "getById8",
      "httpMethod": "get",
      "tag": "Quotes (Classic)",
      "description": "Returns quote details.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "embed",
          "schema": "string",
          "description": "list of adittional fields which should be embedded in the response (ie. tasks)"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/quotes/{quoteId}/confirmation/send",
      "method": "send1",
      "httpMethod": "post",
      "tag": "Quotes (Classic)",
      "description": "Sends a quote for customer confirmation.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/quotes/{quoteId}/customFields",
      "method": "getCustomFields6",
      "httpMethod": "get",
      "tag": "Quotes (Classic)",
      "description": "Returns custom fields of a given quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/quotes/{quoteId}/customFields",
      "method": "updateCustomFields4",
      "httpMethod": "put",
      "tag": "Quotes (Classic)",
      "description": "Updates custom fields of a given quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "empty",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/quotes/{quoteId}/dates",
      "method": "getDates2",
      "httpMethod": "get",
      "tag": "Quotes (Classic)",
      "description": "Returns dates of a given quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/quotes/{quoteId}/finance",
      "method": "getFinance1",
      "httpMethod": "get",
      "tag": "Quotes (Classic)",
      "description": "Returns finance of a given quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/quotes/{quoteId}/finance/payables",
      "method": "createPayable1",
      "httpMethod": "post",
      "tag": "Quotes (Classic)",
      "description": "Adds a payable.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "calculationUnitId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "catLogFile",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ignoreMinimumCharge",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "invoiceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "jobId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "jobTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "languageCombination",
          "schema": "object",
          "description": ""
        },
        {
          "name": "languageCombinationIdNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minimumCharge",
          "schema": "number",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rateOrigin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/quotes/{quoteId}/finance/payables/{payableId}",
      "method": "deletePayable1",
      "httpMethod": "delete",
      "tag": "Quotes (Classic)",
      "description": "Deletes a payable.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quoteId's internal identifier"
        },
        {
          "name": "payableId",
          "schema": "integer",
          "required": true,
          "description": "payable's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/quotes/{quoteId}/finance/payables/{payableId}",
      "method": "updatePayable1",
      "httpMethod": "put",
      "tag": "Quotes (Classic)",
      "description": "Updates a payable.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "payableId",
          "schema": "integer",
          "required": true,
          "description": "payable's internal identifier"
        },
        {
          "name": "calculationUnitId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ignoreMinimumCharge",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "invoiceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "jobId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "jobTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "languageCombination",
          "schema": "object",
          "description": ""
        },
        {
          "name": "languageCombinationIdNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minimumCharge",
          "schema": "number",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rateOrigin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/quotes/{quoteId}/finance/receivables",
      "method": "createReceivable1",
      "httpMethod": "post",
      "tag": "Quotes (Classic)",
      "description": "Adds a receivable.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "calculationUnitId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "catLogFile",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ignoreMinimumCharge",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "invoiceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "jobTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "languageCombination",
          "schema": "object",
          "description": ""
        },
        {
          "name": "languageCombinationIdNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minimumCharge",
          "schema": "number",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rateOrigin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taskId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/quotes/{quoteId}/finance/receivables/{receivableId}",
      "method": "deleteReceivable1",
      "httpMethod": "delete",
      "tag": "Quotes (Classic)",
      "description": "Deletes a receivable.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quoteId's internal identifier"
        },
        {
          "name": "receivableId",
          "schema": "integer",
          "required": true,
          "description": "receivable's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/quotes/{quoteId}/finance/receivables/{receivableId}",
      "method": "updateReceivable1",
      "httpMethod": "put",
      "tag": "Quotes (Classic)",
      "description": "Updates a receivable.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "receivableId",
          "schema": "integer",
          "required": true,
          "description": "receivable's internal identifier"
        },
        {
          "name": "calculationUnitId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ignoreMinimumCharge",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "invoiceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "jobTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "languageCombination",
          "schema": "object",
          "description": ""
        },
        {
          "name": "languageCombinationIdNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minimumCharge",
          "schema": "number",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rateOrigin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taskId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/quotes/{quoteId}/instructions",
      "method": "getInstructions1",
      "httpMethod": "get",
      "tag": "Quotes (Classic)",
      "description": "Returns instructions of a given quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/quotes/{quoteId}/instructions",
      "method": "updateInstructions2",
      "httpMethod": "put",
      "tag": "Quotes (Classic)",
      "description": "Updates instructions of a given quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "forProvider",
          "schema": "string",
          "description": ""
        },
        {
          "name": "fromCustomer",
          "schema": "string",
          "description": ""
        },
        {
          "name": "internal",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "paymentNoteForCustomer",
          "schema": "string",
          "description": ""
        },
        {
          "name": "paymentNoteForVendor",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/quotes/{quoteId}/languageCombinations",
      "method": "createLanguageCombination1",
      "httpMethod": "post",
      "tag": "Quotes (Classic)",
      "description": "Creates a new language combination for a given quote without creating a task.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "sourceLanguageId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "targetLanguageId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "language combination (ie. PL -> EN)"
        }
      ]
    },
    {
      "url": "/quotes/{quoteId}/start",
      "method": "start",
      "httpMethod": "post",
      "tag": "Quotes (Classic)",
      "description": "Starts a quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/quotes/{quoteId}/tasks",
      "method": "createTask1",
      "httpMethod": "post",
      "tag": "Quotes (Classic)",
      "description": "Creates a new task for a given quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "clientTaskPONumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "dates",
          "schema": "object",
          "description": ""
        },
        {
          "name": "finance",
          "schema": "object",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "idNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "instructions",
          "schema": "object",
          "description": ""
        },
        {
          "name": "jobs",
          "schema": "object",
          "description": ""
        },
        {
          "name": "languageCombination",
          "schema": "object",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "people",
          "schema": "object",
          "description": ""
        },
        {
          "name": "projectId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "quoteId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/reports/export/xml",
      "method": "exportToXml",
      "httpMethod": "post",
      "tag": "Reports",
      "description": "Exports reports definition to XML.",
      "parameters": [
        {
          "name": "ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/reports/import/xml",
      "method": "importFromXml",
      "httpMethod": "post",
      "tag": "Reports",
      "description": "Imports reports definition from XML.",
      "parameters": [
        {
          "name": "fileToken",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/reports/{reportId}",
      "method": "delete11",
      "httpMethod": "delete",
      "tag": "Reports",
      "description": "Removes a report.",
      "parameters": [
        {
          "name": "reportId",
          "schema": "integer",
          "required": true,
          "description": "report's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/reports/{reportId}/duplicate",
      "method": "duplicate1",
      "httpMethod": "post",
      "tag": "Reports",
      "description": "Duplicates a report.",
      "parameters": [
        {
          "name": "reportId",
          "schema": "integer",
          "required": true,
          "description": "report's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/reports/{reportId}/preferred",
      "method": "setPreferred",
      "httpMethod": "put",
      "tag": "Reports",
      "description": "Marks report as preferred or not.",
      "parameters": [
        {
          "name": "reportId",
          "schema": "integer",
          "required": true,
          "description": "report's internal identifier"
        },
        {
          "name": "preferred",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/reports/{reportId}/result/csv",
      "method": "generateCsv",
      "httpMethod": "get",
      "tag": "Reports",
      "description": "Generates CSV content for a report.",
      "parameters": [
        {
          "name": "reportId",
          "schema": "integer",
          "required": true,
          "description": "report's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/reports/{reportId}/result/printerFriendly",
      "method": "generatePrinterFriendly",
      "httpMethod": "get",
      "tag": "Reports",
      "description": "Generates printer friendly content for a report.",
      "parameters": [
        {
          "name": "reportId",
          "schema": "integer",
          "required": true,
          "description": "report's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/services/active",
      "method": "getAllActive",
      "httpMethod": "get",
      "tag": "Dictionaries",
      "description": "Returns active services list",
      "parameters": [
        {
          "name": "nameEquals",
          "schema": "string",
          "description": "exact name of entity"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/services/all",
      "method": "getAll3",
      "httpMethod": "get",
      "tag": "Dictionaries",
      "description": "Returns services list",
      "parameters": [
        {
          "name": "nameEquals",
          "schema": "string",
          "description": "exact name of entity"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/subscription",
      "method": "getAll4",
      "httpMethod": "get",
      "tag": "Subscription",
      "description": "Returns all subscriptions",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/subscription",
      "method": "subscribe",
      "httpMethod": "post",
      "tag": "Subscription",
      "description": "Subscribe to event",
      "parameters": [
        {
          "name": "embed",
          "schema": "string",
          "description": ""
        },
        {
          "name": "event",
          "schema": "string",
          "description": ""
        },
        {
          "name": "filter",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/subscription/supports",
      "method": "areHooksSupported",
      "httpMethod": "get",
      "tag": "Subscription",
      "description": "This method can be used to determine if hooks are supported.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/subscription/{subscriptionId}",
      "method": "unsubscribe",
      "httpMethod": "delete",
      "tag": "Subscription",
      "description": "Unsubscribe from event",
      "parameters": [
        {
          "name": "subscriptionId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/tasks/{taskId}",
      "method": "delete14",
      "httpMethod": "delete",
      "tag": "Tasks (Classic)",
      "description": "Removes a task.",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "task's internal identifier"
        },
        {
          "name": "removeFilesFromDisc",
          "schema": "boolean",
          "description": "remove files from disc"
        },
        {
          "name": "removeExternalProjects",
          "schema": "boolean",
          "description": "remove external projects (ie. from CAT Tool)"
        },
        {
          "name": "forceJobsRemoval",
          "schema": "boolean",
          "description": "force jobs removal (ie. started or ready)"
        }
      ],
      "responses": []
    },
    {
      "url": "/tasks/{taskId}/clientTaskPONumber",
      "method": "updateClientTaskPoNumber",
      "httpMethod": "put",
      "tag": "Tasks (Classic)",
      "description": "Updates Client Task PO Number of a given task.",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "task's internal identifier"
        },
        {
          "name": "value",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/tasks/{taskId}/contacts",
      "method": "getContacts1",
      "httpMethod": "get",
      "tag": "Tasks (Classic)",
      "description": "Returns contacts of a given task.",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "task's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/tasks/{taskId}/contacts",
      "method": "updateContacts1",
      "httpMethod": "put",
      "tag": "Tasks (Classic)",
      "description": "Updates contacts of a given task.",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "task's internal identifier"
        },
        {
          "name": "additionalIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "primaryId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "sendBackToId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/tasks/{taskId}/customFields",
      "method": "getCustomFields7",
      "httpMethod": "get",
      "tag": "Tasks (Classic)",
      "description": "Returns custom fields of a given task.",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "task's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/tasks/{taskId}/customFields",
      "method": "updateCustomFields5",
      "httpMethod": "put",
      "tag": "Tasks (Classic)",
      "description": "Updates custom fields of a given task.",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "task's internal identifier"
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "empty",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/tasks/{taskId}/dates",
      "method": "getDates3",
      "httpMethod": "get",
      "tag": "Tasks (Classic)",
      "description": "Returns dates of a given task.",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "task's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/tasks/{taskId}/dates",
      "method": "updateDates2",
      "httpMethod": "put",
      "tag": "Tasks (Classic)",
      "description": "Updates dates of a given task.",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "task's internal identifier"
        },
        {
          "name": "actualDeliveryDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "actualStartDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "deadline",
          "schema": "object",
          "description": ""
        },
        {
          "name": "startDate",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/tasks/{taskId}/files",
      "method": "getTaskFiles",
      "httpMethod": "get",
      "tag": "Tasks (Classic)",
      "description": "Returns lists of files of a given task.",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "task's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/tasks/{taskId}/files/input",
      "method": "addFile",
      "httpMethod": "post",
      "tag": "Tasks (Classic)",
      "description": "Adds files to a given task.",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "task's internal identifier"
        },
        {
          "name": "content",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/tasks/{taskId}/instructions",
      "method": "getInstructions2",
      "httpMethod": "get",
      "tag": "Tasks (Classic)",
      "description": "Returns instructions of a given task.",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "task's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/tasks/{taskId}/instructions",
      "method": "updateInstructions3",
      "httpMethod": "put",
      "tag": "Tasks (Classic)",
      "description": "Updates instructions of a given task.",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "task's internal identifier"
        },
        {
          "name": "forProvider",
          "schema": "string",
          "description": ""
        },
        {
          "name": "fromCustomer",
          "schema": "string",
          "description": ""
        },
        {
          "name": "internal",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "paymentNoteForCustomer",
          "schema": "string",
          "description": ""
        },
        {
          "name": "paymentNoteForVendor",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/tasks/{taskId}/name",
      "method": "updateName",
      "httpMethod": "put",
      "tag": "Tasks (Classic)",
      "description": "Updates name of a given task.",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "task's internal identifier"
        },
        {
          "name": "value",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/tasks/{taskId}/progress",
      "method": "getProgress",
      "httpMethod": "get",
      "tag": "Tasks (Classic)",
      "description": "Returns progress of a given task.",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "task's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/tasks/{taskId}/start",
      "method": "start1",
      "httpMethod": "post",
      "tag": "Tasks (Classic)",
      "description": "Starts a task.",
      "parameters": [
        {
          "name": "taskId",
          "schema": "string",
          "required": true,
          "description": "task's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/users",
      "method": "getAllNamesWithIds1",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Returns list of simple users representations",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/me",
      "method": "getMe",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Returns currently signed in user details.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/me/timeZone",
      "method": "getTimeZone",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Returns time zone preferred by user currently signed in.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}",
      "method": "getById6",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Returns user details.",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "user's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}",
      "method": "update3",
      "httpMethod": "put",
      "tag": "Users",
      "description": "Updates an existing user.",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "user's internal identifier"
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "login",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mobilePhone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "positionName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timeZoneId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userGroupName",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}/customFields",
      "method": "getCustomFields4",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Returns custom fields of a given user.",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "user's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}/customFields",
      "method": "updateCustomFields2",
      "httpMethod": "put",
      "tag": "Users",
      "description": "Updates custom fields of a given user.",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "user's internal identifier"
        },
        {
          "name": "customFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "empty",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}/customFields/{customFieldKey}",
      "method": "getCustomField1",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Returns custom field of a given user.",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "user's internal identifier"
        },
        {
          "name": "customFieldKey",
          "schema": "string",
          "required": true,
          "description": "custom field's key"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}/customFields/{customFieldKey}",
      "method": "updateCustomField1",
      "httpMethod": "put",
      "tag": "Users",
      "description": "Updates given custom field of a given user.",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "user's internal identifier"
        },
        {
          "name": "customFieldKey",
          "schema": "string",
          "required": true,
          "description": "custom field's key"
        },
        {
          "name": "key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "value",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userId}/password",
      "method": "changePassword",
      "httpMethod": "put",
      "tag": "Users",
      "description": "Sets user's password to a new value.",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "user's internal identifier"
        },
        {
          "name": "newPassword",
          "schema": "string",
          "description": ""
        },
        {
          "name": "oldPassword",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/jobs/for-external-id",
      "method": "getByExternalId",
      "httpMethod": "get",
      "tag": "Jobs (Smart)(v2)",
      "description": "",
      "parameters": [
        {
          "name": "externalProjectId",
          "schema": "string",
          "description": "job's externalProjectId"
        },
        {
          "name": "externalId",
          "schema": "string",
          "description": "job's external identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/jobs/{jobId}",
      "method": "getFileById1",
      "httpMethod": "get",
      "tag": "Jobs (Smart)(v2)",
      "description": "Returns details for a job.",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/jobs/{jobId}/dates",
      "method": "changeDates",
      "httpMethod": "put",
      "tag": "Jobs (Smart)(v2)",
      "description": "Updates dates of a given job.",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        },
        {
          "name": "actualEndDate",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "actualStartDate",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "deadline",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "startDate",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/jobs/{jobId}/files/addExternalLink",
      "method": "addExternalFileLink",
      "httpMethod": "post",
      "tag": "Jobs (Smart)(v2)",
      "description": "",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        },
        {
          "name": "category",
          "schema": "string",
          "description": ""
        },
        {
          "name": "externalInfo",
          "schema": "object",
          "description": ""
        },
        {
          "name": "filename",
          "schema": "string",
          "description": ""
        },
        {
          "name": "languageCombinationIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "languageIds",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/jobs/{jobId}/files/delivered",
      "method": "getDeliveredFiles",
      "httpMethod": "get",
      "tag": "Jobs (Smart)(v2)",
      "description": "Returns list of files delivered in the job.",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/jobs/{jobId}/files/delivered/add",
      "method": "addFiles",
      "httpMethod": "put",
      "tag": "Jobs (Smart)(v2)",
      "description": "Adds files to the project as delivered in the job.",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        },
        {
          "name": "files",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/jobs/{jobId}/files/delivered/addLink",
      "method": "addFileLinks",
      "httpMethod": "post",
      "tag": "Jobs (Smart)(v2)",
      "description": "Adds file link to the project as a link delivered in the job.",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        },
        {
          "name": "fileLinks",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/jobs/{jobId}/files/delivered/upload",
      "method": "uploadFile1",
      "httpMethod": "post",
      "tag": "Jobs (Smart)(v2)",
      "description": "Uploads file to the project as a file delivered in the job.",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        },
        {
          "name": "file",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/jobs/{jobId}/files/sharedReferenceFiles",
      "method": "getSharedReferenceFiles",
      "httpMethod": "get",
      "tag": "Jobs (Smart)(v2)",
      "description": "Returns list of files shared with the job as Reference Files.",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/jobs/{jobId}/files/sharedReferenceFiles/share",
      "method": "shareAsReferenceFiles",
      "httpMethod": "put",
      "tag": "Jobs (Smart)(v2)",
      "description": "Shares selected files as Reference Files with a job in a project.",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        },
        {
          "name": "files",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/jobs/{jobId}/files/sharedWorkFiles",
      "method": "getSharedWorkFiles",
      "httpMethod": "get",
      "tag": "Jobs (Smart)(v2)",
      "description": "Returns list of files shared with the job as Work Files.",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/jobs/{jobId}/files/sharedWorkFiles/share",
      "method": "shareAsWorkFiles",
      "httpMethod": "put",
      "tag": "Jobs (Smart)(v2)",
      "description": "Shares selected files as Work Files with a job in a project.",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        },
        {
          "name": "files",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/jobs/{jobId}/files/stopSharing",
      "method": "stopSharing",
      "httpMethod": "put",
      "tag": "Jobs (Smart)(v2)",
      "description": "Stops sharing selected files with a job in a project.",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        },
        {
          "name": "files",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/jobs/{jobId}/instructions",
      "method": "updateInstructions4",
      "httpMethod": "put",
      "tag": "Jobs (Smart)(v2)",
      "description": "Updates instructions for a job.",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        },
        {
          "name": "value",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/jobs/{jobId}/status",
      "method": "changeStatus1",
      "httpMethod": "put",
      "tag": "Jobs (Smart)(v2)",
      "description": "Changes job status if possible (400 Bad Request is returned otherwise).",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        },
        {
          "name": "externalId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/jobs/{jobId}/vendor",
      "method": "assignVendor1",
      "httpMethod": "put",
      "tag": "Jobs (Smart)(v2)",
      "description": "Assigns vendor to a job in a project.",
      "parameters": [
        {
          "name": "jobId",
          "schema": "string",
          "required": true,
          "description": "job's internal identifier"
        },
        {
          "name": "vendorPriceProfileId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/projects",
      "method": "create6",
      "httpMethod": "post",
      "tag": "Projects (Smart)(v2)",
      "description": "Creates a new Smart Project.",
      "parameters": [
        {
          "name": "clientId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "externalId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "serviceId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/files/archive",
      "method": "archive",
      "httpMethod": "post",
      "tag": "Projects (Smart)(v2)",
      "description": "Prepares a ZIP archive that contains the specified files.",
      "parameters": [
        {
          "name": "files",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/files/{fileId}",
      "method": "getFileById2",
      "httpMethod": "get",
      "tag": "Projects (Smart)(v2)",
      "description": "Returns details of a file.",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "file's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/files/{fileId}/download/{fileName}",
      "method": "getFileContentById",
      "httpMethod": "get",
      "tag": "Projects (Smart)(v2)",
      "description": "Downloads a file content.",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "file's internal identifier"
        },
        {
          "name": "fileName",
          "schema": "string",
          "required": true,
          "description": "file's name"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/for-external-id/{externalProjectId}",
      "method": "getByExternalId1",
      "httpMethod": "get",
      "tag": "Projects (Smart)(v2)",
      "description": "Returns project details.",
      "parameters": [
        {
          "name": "externalProjectId",
          "schema": "string",
          "required": true,
          "description": "project's external identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/{projectId}",
      "method": "getById9",
      "httpMethod": "get",
      "tag": "Projects (Smart)(v2)",
      "description": "Returns project details.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/{projectId}/addJob",
      "method": "addJobToProcess",
      "httpMethod": "post",
      "tag": "Projects (Smart)(v2)",
      "description": "Returns process id.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/{projectId}/catToolProject",
      "method": "getCatToolProjectInfo",
      "httpMethod": "get",
      "tag": "Projects (Smart)(v2)",
      "description": "Returns if cat tool project is created or queued.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/{projectId}/clientContacts",
      "method": "getContacts2",
      "httpMethod": "get",
      "tag": "Projects (Smart)(v2)",
      "description": "Returns Client Contacts information for a project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/{projectId}/clientContacts",
      "method": "updateContacts2",
      "httpMethod": "put",
      "tag": "Projects (Smart)(v2)",
      "description": "Updates Client Contacts for a project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "additionalIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "primaryId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/{projectId}/clientDeadline",
      "method": "updateClientDeadline",
      "httpMethod": "put",
      "tag": "Projects (Smart)(v2)",
      "description": "Updates Client Deadline for a project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "value",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/projects/{projectId}/clientNotes",
      "method": "updateClientNotes",
      "httpMethod": "put",
      "tag": "Projects (Smart)(v2)",
      "description": "Updates Client Notes for a project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "value",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/projects/{projectId}/clientReferenceNumber",
      "method": "updateClientReferenceNumber",
      "httpMethod": "put",
      "tag": "Projects (Smart)(v2)",
      "description": "Updates Client Reference Number for a project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "value",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/projects/{projectId}/customFields",
      "method": "getCustomFields8",
      "httpMethod": "get",
      "tag": "Projects (Smart)(v2)",
      "description": "Returns a list of custom field keys and values for a project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/{projectId}/customFields/{key}",
      "method": "updateCustomField2",
      "httpMethod": "put",
      "tag": "Projects (Smart)(v2)",
      "description": "Updates a custom field with a specified key in a project",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "custom field's key"
        },
        {
          "name": "value",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/projects/{projectId}/files",
      "method": "getFiles",
      "httpMethod": "get",
      "tag": "Projects (Smart)(v2)",
      "description": "Returns list of files in a project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/{projectId}/files/add",
      "method": "addFiles1",
      "httpMethod": "put",
      "tag": "Projects (Smart)(v2)",
      "description": "Adds files to the project as added by PM.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "files",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/projects/{projectId}/files/addExternalLink",
      "method": "addExternalFileLinks",
      "httpMethod": "post",
      "tag": "Projects (Smart)(v2)",
      "description": "",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "category",
          "schema": "string",
          "description": ""
        },
        {
          "name": "externalInfo",
          "schema": "object",
          "description": ""
        },
        {
          "name": "filename",
          "schema": "string",
          "description": ""
        },
        {
          "name": "languageCombinationIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "languageIds",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/{projectId}/files/addLink",
      "method": "addFileLinks1",
      "httpMethod": "post",
      "tag": "Projects (Smart)(v2)",
      "description": "Adds file links to the project as added by PM.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "fileLinks",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/{projectId}/files/deliverable",
      "method": "getDeliverableFiles",
      "httpMethod": "get",
      "tag": "Projects (Smart)(v2)",
      "description": "Returns list of files in a project, that are ready to be delivered to client.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/{projectId}/files/upload",
      "method": "uploadFile2",
      "httpMethod": "post",
      "tag": "Projects (Smart)(v2)",
      "description": "Uploads file to the project as a file uploaded by PM.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "file",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/{projectId}/finance",
      "method": "getFinance2",
      "httpMethod": "get",
      "tag": "Projects (Smart)(v2)",
      "description": "Returns finance information for a project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/{projectId}/finance/payables",
      "method": "createPayable2",
      "httpMethod": "post",
      "tag": "Projects (Smart)(v2)",
      "description": "Adds a payable to a project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "calculationUnitId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "catLogFile",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ignoreMinimumCharge",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "invoiceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "jobId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "jobTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "languageCombination",
          "schema": "object",
          "description": ""
        },
        {
          "name": "languageCombinationIdNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minimumCharge",
          "schema": "number",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rateOrigin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/{projectId}/finance/payables/{payableId}",
      "method": "deletePayable2",
      "httpMethod": "delete",
      "tag": "Projects (Smart)(v2)",
      "description": "Deletes a payable.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "payableId",
          "schema": "integer",
          "required": true,
          "description": "payable's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/projects/{projectId}/finance/payables/{payableId}",
      "method": "updatePayable2",
      "httpMethod": "put",
      "tag": "Projects (Smart)(v2)",
      "description": "Updates a payable.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "payableId",
          "schema": "integer",
          "required": true,
          "description": "payable's internal identifier"
        },
        {
          "name": "calculationUnitId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ignoreMinimumCharge",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "invoiceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "jobId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "jobTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "languageCombination",
          "schema": "object",
          "description": ""
        },
        {
          "name": "languageCombinationIdNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minimumCharge",
          "schema": "number",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rateOrigin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/{projectId}/finance/receivables",
      "method": "createReceivable2",
      "httpMethod": "post",
      "tag": "Projects (Smart)(v2)",
      "description": "Adds a receivable to a project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "calculationUnitId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "catLogFile",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ignoreMinimumCharge",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "invoiceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "jobTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "languageCombination",
          "schema": "object",
          "description": ""
        },
        {
          "name": "languageCombinationIdNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minimumCharge",
          "schema": "number",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rateOrigin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taskId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/{projectId}/finance/receivables/{receivableId}",
      "method": "deleteReceivable2",
      "httpMethod": "delete",
      "tag": "Projects (Smart)(v2)",
      "description": "Deletes a receivable.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "receivableId",
          "schema": "integer",
          "required": true,
          "description": "receivable's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/projects/{projectId}/finance/receivables/{receivableId}",
      "method": "updateReceivable2",
      "httpMethod": "put",
      "tag": "Projects (Smart)(v2)",
      "description": "Updates a receivable.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "receivableId",
          "schema": "integer",
          "required": true,
          "description": "receivable's internal identifier"
        },
        {
          "name": "calculationUnitId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ignoreMinimumCharge",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "invoiceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "jobTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "languageCombination",
          "schema": "object",
          "description": ""
        },
        {
          "name": "languageCombinationIdNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minimumCharge",
          "schema": "number",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rateOrigin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taskId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/{projectId}/internalNotes",
      "method": "updateInternalNotes",
      "httpMethod": "put",
      "tag": "Projects (Smart)(v2)",
      "description": "Updates Internal Notes for a project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "value",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/projects/{projectId}/jobs",
      "method": "getJobs",
      "httpMethod": "get",
      "tag": "Projects (Smart)(v2)",
      "description": "Returns list of jobs in a project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/{projectId}/orderDate",
      "method": "updateOrderedOn",
      "httpMethod": "put",
      "tag": "Projects (Smart)(v2)",
      "description": "Updates Order Date for a project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "value",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/projects/{projectId}/process",
      "method": "getProcessId",
      "httpMethod": "get",
      "tag": "Projects (Smart)(v2)",
      "description": "Returns process id.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/projects/{projectId}/sourceLanguage",
      "method": "updateSourceLanguage",
      "httpMethod": "put",
      "tag": "Projects (Smart)(v2)",
      "description": "Updates source language for a project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "sourceLanguageId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/projects/{projectId}/specialization",
      "method": "updateSpecialization",
      "httpMethod": "put",
      "tag": "Projects (Smart)(v2)",
      "description": "Updates specialization for a project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "specializationId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/projects/{projectId}/status",
      "method": "changeStatus2",
      "httpMethod": "put",
      "tag": "Projects (Smart)(v2)",
      "description": "Changes project status if possible (400 Bad Request is returned otherwise).",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/projects/{projectId}/targetLanguages",
      "method": "updateTargetLanguages",
      "httpMethod": "put",
      "tag": "Projects (Smart)(v2)",
      "description": "Updates target languages for a project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "targetLanguageIds",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/projects/{projectId}/vendorInstructions",
      "method": "updateVendorInstructions",
      "httpMethod": "put",
      "tag": "Projects (Smart)(v2)",
      "description": "Updates instructions for all vendors performing the jobs in a project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "value",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/projects/{projectId}/volume",
      "method": "updateVolume",
      "httpMethod": "put",
      "tag": "Projects (Smart)(v2)",
      "description": "Updates volume for a project.",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "project's internal identifier"
        },
        {
          "name": "value",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/quotes",
      "method": "create7",
      "httpMethod": "post",
      "tag": "Quotes (Smart)(v2)",
      "description": "Creates a new Smart Quote.",
      "parameters": [
        {
          "name": "clientId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "opportunityOfferId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "serviceId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/quotes/files/archive",
      "method": "archive1",
      "httpMethod": "post",
      "tag": "Quotes (Smart)(v2)",
      "description": "Prepares a ZIP archive that contains the specified files.",
      "parameters": [
        {
          "name": "files",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/quotes/files/{fileId}",
      "method": "getFileById3",
      "httpMethod": "get",
      "tag": "Quotes (Smart)(v2)",
      "description": "Returns details of a file.",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "file's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/quotes/files/{fileId}/download/{fileName}",
      "method": "getFileContentById1",
      "httpMethod": "get",
      "tag": "Quotes (Smart)(v2)",
      "description": "Downloads a file content.",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "file's internal identifier"
        },
        {
          "name": "fileName",
          "schema": "string",
          "required": true,
          "description": "file's name"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/quotes/{quoteId}",
      "method": "getById10",
      "httpMethod": "get",
      "tag": "Quotes (Smart)(v2)",
      "description": "Returns quote details.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/quotes/{quoteId}/businessDays",
      "method": "updateBusinessDays",
      "httpMethod": "put",
      "tag": "Quotes (Smart)(v2)",
      "description": "Updates Business Days for a quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/quotes/{quoteId}/clientContacts",
      "method": "getContacts3",
      "httpMethod": "get",
      "tag": "Quotes (Smart)(v2)",
      "description": "Returns Client Contacts information for a quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/quotes/{quoteId}/clientContacts",
      "method": "updateContacts3",
      "httpMethod": "put",
      "tag": "Quotes (Smart)(v2)",
      "description": "Updates Client Contacts for a quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "additionalIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "primaryId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/quotes/{quoteId}/clientNotes",
      "method": "updateClientNotes1",
      "httpMethod": "put",
      "tag": "Quotes (Smart)(v2)",
      "description": "Updates Client Notes for a quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "value",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/quotes/{quoteId}/clientReferenceNumber",
      "method": "updateClientReferenceNumber1",
      "httpMethod": "put",
      "tag": "Quotes (Smart)(v2)",
      "description": "Updates Client Reference Number for a quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "value",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/quotes/{quoteId}/customFields",
      "method": "getCustomFields9",
      "httpMethod": "get",
      "tag": "Quotes (Smart)(v2)",
      "description": "Returns a list of custom field keys and values for a project.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/quotes/{quoteId}/customFields/{key}",
      "method": "updateCustomField3",
      "httpMethod": "put",
      "tag": "Quotes (Smart)(v2)",
      "description": "Updates a custom field with a specified key in a quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "custom field's key"
        },
        {
          "name": "value",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/quotes/{quoteId}/expectedDeliveryDate",
      "method": "updateExpectedDeliveryDate",
      "httpMethod": "put",
      "tag": "Quotes (Smart)(v2)",
      "description": "Updates Expected Delivery Date for a quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "value",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/quotes/{quoteId}/files",
      "method": "getFiles1",
      "httpMethod": "get",
      "tag": "Quotes (Smart)(v2)",
      "description": "Returns list of files in a quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/quotes/{quoteId}/files/add",
      "method": "addFiles2",
      "httpMethod": "put",
      "tag": "Quotes (Smart)(v2)",
      "description": "Adds files to the quote as added by PM.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "value",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/quotes/{quoteId}/files/upload",
      "method": "uploadFile3",
      "httpMethod": "post",
      "tag": "Quotes (Smart)(v2)",
      "description": "Uploads file to the quote as a file uploaded by PM.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "file",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/quotes/{quoteId}/finance",
      "method": "getFinance3",
      "httpMethod": "get",
      "tag": "Quotes (Smart)(v2)",
      "description": "Returns finance information for a quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/quotes/{quoteId}/finance/payables",
      "method": "createPayable3",
      "httpMethod": "post",
      "tag": "Quotes (Smart)(v2)",
      "description": "Adds a payable to a quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "calculationUnitId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "catLogFile",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ignoreMinimumCharge",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "invoiceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "jobId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "jobTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "languageCombination",
          "schema": "object",
          "description": ""
        },
        {
          "name": "languageCombinationIdNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minimumCharge",
          "schema": "number",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rateOrigin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/quotes/{quoteId}/finance/payables/{payableId}",
      "method": "deletePayable3",
      "httpMethod": "delete",
      "tag": "Quotes (Smart)(v2)",
      "description": "Deletes a payable.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "payableId",
          "schema": "integer",
          "required": true,
          "description": "payable's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/quotes/{quoteId}/finance/payables/{payableId}",
      "method": "updatePayable3",
      "httpMethod": "put",
      "tag": "Quotes (Smart)(v2)",
      "description": "Updates a payable.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "payableId",
          "schema": "integer",
          "required": true,
          "description": "payable's internal identifier"
        },
        {
          "name": "calculationUnitId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ignoreMinimumCharge",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "invoiceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "jobId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "jobTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "languageCombination",
          "schema": "object",
          "description": ""
        },
        {
          "name": "languageCombinationIdNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minimumCharge",
          "schema": "number",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rateOrigin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/quotes/{quoteId}/finance/receivables",
      "method": "createReceivable3",
      "httpMethod": "post",
      "tag": "Quotes (Smart)(v2)",
      "description": "Adds a receivable to a quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "calculationUnitId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "catLogFile",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ignoreMinimumCharge",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "invoiceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "jobTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "languageCombination",
          "schema": "object",
          "description": ""
        },
        {
          "name": "languageCombinationIdNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minimumCharge",
          "schema": "number",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rateOrigin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taskId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/quotes/{quoteId}/finance/receivables/{receivableId}",
      "method": "deleteReceivable3",
      "httpMethod": "delete",
      "tag": "Quotes (Smart)(v2)",
      "description": "Deletes a receivable.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "receivableId",
          "schema": "integer",
          "required": true,
          "description": "receivable's internal identifier"
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/quotes/{quoteId}/finance/receivables/{receivableId}",
      "method": "updateReceivable3",
      "httpMethod": "put",
      "tag": "Quotes (Smart)(v2)",
      "description": "Updates a receivable.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "receivableId",
          "schema": "integer",
          "required": true,
          "description": "receivable's internal identifier"
        },
        {
          "name": "calculationUnitId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ignoreMinimumCharge",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "invoiceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "jobTypeId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "languageCombination",
          "schema": "object",
          "description": ""
        },
        {
          "name": "languageCombinationIdNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minimumCharge",
          "schema": "number",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rateOrigin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taskId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "total",
          "schema": "number",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/quotes/{quoteId}/internalNotes",
      "method": "updateInternalNotes1",
      "httpMethod": "put",
      "tag": "Quotes (Smart)(v2)",
      "description": "Updates Internal Notes for a quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "value",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/quotes/{quoteId}/jobs",
      "method": "getJobs1",
      "httpMethod": "get",
      "tag": "Quotes (Smart)(v2)",
      "description": "Returns list of jobs in a quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/quotes/{quoteId}/quoteExpiry",
      "method": "updateQuoteExpiry",
      "httpMethod": "put",
      "tag": "Quotes (Smart)(v2)",
      "description": "Updates Quote Expiry Date for a quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "value",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/quotes/{quoteId}/sourceLanguage",
      "method": "updateSourceLanguage1",
      "httpMethod": "put",
      "tag": "Quotes (Smart)(v2)",
      "description": "Updates source language for a quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "sourceLanguageId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/quotes/{quoteId}/specialization",
      "method": "updateSpecialization1",
      "httpMethod": "put",
      "tag": "Quotes (Smart)(v2)",
      "description": "Updates specialization for a quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "specializationId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/quotes/{quoteId}/status",
      "method": "changeStatus3",
      "httpMethod": "put",
      "tag": "Quotes (Smart)(v2)",
      "description": "Changes quote status if possible (400 Bad Request is returned otherwise).",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/quotes/{quoteId}/targetLanguages",
      "method": "updateTargetLanguages1",
      "httpMethod": "put",
      "tag": "Quotes (Smart)(v2)",
      "description": "Updates target languages for a quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "targetLanguageIds",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/quotes/{quoteId}/vendorInstructions",
      "method": "updateVendorInstructions1",
      "httpMethod": "put",
      "tag": "Quotes (Smart)(v2)",
      "description": "Updates instructions for all vendors performing the jobs in a quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "value",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/quotes/{quoteId}/volume",
      "method": "updateVolume1",
      "httpMethod": "put",
      "tag": "Quotes (Smart)(v2)",
      "description": "Updates volume for a quote.",
      "parameters": [
        {
          "name": "quoteId",
          "schema": "string",
          "required": true,
          "description": "quote's internal identifier"
        },
        {
          "name": "value",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": []
    }
  ],
  "apiBaseUrl": "https://presentation.s.xtrf.eu/home-api",
  "apiDescription": "XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>\n  The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: ",
  "apiTitle": "XTRF Home Portal API",
  "endpoints": 224,
  "sdkMethods": 284,
  "schemas": 171,
  "parameters": 936,
  "difficultyScore": 603.5,
  "difficulty": "Very Hard"
}