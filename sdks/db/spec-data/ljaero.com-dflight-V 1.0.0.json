{
  "providerName": "ljaero.com",
  "openApiRaw": "https://dflight-api.ljaero.com/openapi.json",
  "securitySchemes": {},
  "homepage": "ljaero.com",
  "serviceName": "dflight",
  "apiVersion": "V 1.0.0",
  "methods": [
    {
      "url": "/us/v1/aerodromes/distance-query",
      "method": "aerodromesByDistanceUsV1AerodromesDistanceQueryPost",
      "httpMethod": "post",
      "tag": "Aerodromes",
      "description": "Retrieve aerodromes within given distance of location.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "distance",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "latitude",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "longitude",
          "schema": "undefined",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/aerodromes/polygon-query",
      "method": "aerodromesByPolyUsV1AerodromesPolygonQueryPost",
      "httpMethod": "post",
      "tag": "Aerodromes",
      "description": "Retrieve aerodromes located within given area.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "poly",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/aerodromes/route-query",
      "method": "aerodromesByRouteUsV1AerodromesRouteQueryPost",
      "httpMethod": "post",
      "tag": "Aerodromes",
      "description": "Retrieve aerodromes found along a route.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "route",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/airspace/distance-query",
      "method": "aspByDistanceUsV1AirspaceDistanceQueryPost",
      "httpMethod": "post",
      "tag": "Airspace",
      "description": "Retrieve all requested types of airspace located within given distance of location.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "asptypes",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "distance",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "latitude",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "longitude",
          "schema": "undefined",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/airspace/polygon-query",
      "method": "aspByPolyUsV1AirspacePolygonQueryPost",
      "httpMethod": "post",
      "tag": "Airspace",
      "description": "Retrieve all requested types of airspace located within given GeoJSON Polygon.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "asptypes",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "poly",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/airspace/route-query",
      "method": "aspByRouteUsV1AirspaceRouteQueryPost",
      "httpMethod": "post",
      "tag": "Airspace",
      "description": "Retrieve all requested types of airspace traversed by route.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "asptypes",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "route",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/obstacles/distance-query",
      "method": "obstaclesByDistanceUsV1ObstaclesDistanceQueryPost",
      "httpMethod": "post",
      "tag": "Surface Obstacles",
      "description": "Retrieve obstacles within given distance of location.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "distance",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "latitude",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "longitude",
          "schema": "undefined",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/obstacles/polygon-query",
      "method": "obstaclesByPolyUsV1ObstaclesPolygonQueryPost",
      "httpMethod": "post",
      "tag": "Surface Obstacles",
      "description": "Retrieve obstacles located within given area.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "poly",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/obstacles/route-query",
      "method": "obstaclesByRouteUsV1ObstaclesRouteQueryPost",
      "httpMethod": "post",
      "tag": "Surface Obstacles",
      "description": "Retrieve obstacles found along a route.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "route",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/restrictions/distance-query",
      "method": "tfrByDistanceUsV1RestrictionsDistanceQueryPost",
      "httpMethod": "post",
      "tag": "Flight Restrictions",
      "description": "Retrieve flight restrictions applicable within given distance of location.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "distance",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "latitude",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "longitude",
          "schema": "undefined",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/restrictions/polygon-query",
      "method": "tfrByPolyUsV1RestrictionsPolygonQueryPost",
      "httpMethod": "post",
      "tag": "Flight Restrictions",
      "description": "Retrieve flight restrictions applicable within given area.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "poly",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/restrictions/route-query",
      "method": "tfrByRouteUsV1RestrictionsRouteQueryPost",
      "httpMethod": "post",
      "tag": "Flight Restrictions",
      "description": "Retrieve flight restrictions applicable along route.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "route",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/ssa/distance-query",
      "method": "ssaByDistanceUsV1SsaDistanceQueryPost",
      "httpMethod": "post",
      "tag": "Special Security Areas",
      "description": "Retrieve all special security areas located within given distance of location.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "distance",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "latitude",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "longitude",
          "schema": "undefined",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/ssa/polygon-query",
      "method": "ssaByPolyUsV1SsaPolygonQueryPost",
      "httpMethod": "post",
      "tag": "Special Security Areas",
      "description": "Retrieve all special security areas located within given GeoJSON Polygon.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "poly",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/ssa/route-query",
      "method": "ssaByRouteUsV1SsaRouteQueryPost",
      "httpMethod": "post",
      "tag": "Special Security Areas",
      "description": "Retrieve all special security areas traversed by route.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "route",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/uoa/distance-query",
      "method": "uoaByDistanceUsV1UoaDistanceQueryPost",
      "httpMethod": "post",
      "tag": "UAS Operating Areas",
      "description": "Retrieve UAS Operating Areas (UOAs) found within given distance of location.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "distance",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "latitude",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "longitude",
          "schema": "undefined",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/uoa/polygon-query",
      "method": "uoaByPolyUsV1UoaPolygonQueryPost",
      "httpMethod": "post",
      "tag": "UAS Operating Areas",
      "description": "Retrieve UAS Operating Areas (UOAs) found within given area.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "poly",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/uoa/route-query",
      "method": "uoaByRouteUsV1UoaRouteQueryPost",
      "httpMethod": "post",
      "tag": "UAS Operating Areas",
      "description": "Retrieve UAS Operating Areas (UOAs) found along route.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "route",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/venues/distance-query",
      "method": "venByDistanceUsV1VenuesDistanceQueryPost",
      "httpMethod": "post",
      "tag": "Restricted Public Venues",
      "description": "Retrieve all restricted public venues located within given distance of location.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "distance",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "latitude",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "longitude",
          "schema": "undefined",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/venues/polygon-query",
      "method": "venByPolyUsV1VenuesPolygonQueryPost",
      "httpMethod": "post",
      "tag": "Restricted Public Venues",
      "description": "Retrieve all restricted public venues located within given GeoJSON Polygon.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "poly",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/venues/route-query",
      "method": "venByRouteUsV1VenuesRouteQueryPost",
      "httpMethod": "post",
      "tag": "Restricted Public Venues",
      "description": "Retrieve all restricted public venues traversed by route.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "route",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/wx-forecast/distance-query",
      "method": "wxByDistanceUsV1WxForecastDistanceQueryPost",
      "httpMethod": "post",
      "tag": "Weather",
      "description": "Retrieve forecast values within given distance of location for all requested weather elements and time periods.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "distance",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "hours",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "latitude",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "longitude",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "wxtypes",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/wx-forecast/polygon-query",
      "method": "wxByPolyUsV1WxForecastPolygonQueryPost",
      "httpMethod": "post",
      "tag": "Weather",
      "description": "Retrieve forecast values within given GeoJSON polygon for all requested weather elements and time periods.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "hours",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "poly",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "wxtypes",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/us/v1/wx-forecast/route-query",
      "method": "wxByRouteUsV1WxForecastRouteQueryPost",
      "httpMethod": "post",
      "tag": "Weather",
      "description": "Retrieve forecast values along a route for all requested weather elements and time periods.",
      "parameters": [
        {
          "name": "x-api-key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "hours",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "route",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "wxtypes",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://dflight-api.ljaero.com/",
  "apiDescription": "[DFlight API](https://ljaero.com/solutions/dflight/) supplies the up-to-date information needed for compliance with UAV preflight assessment requirements. Separate endpoints are available for each of the following information categories:\n- Airspace\n- Weather\n- Temporary Flight Restrictions\n- Special Security Areas\n- Restricted Public Venues\n- Surface Obstacles\n- Aerodromes\n- UAS Operating Areas\n\nYou can define your geographic area of interest in one of three convenient ways:\n- Providing a latitude/longitude point and distance around that point\n- Providing a GeoJSON LineString defining your route\n- Providing an arbitrary GeoJSON Polygon defining your area of interest",
  "apiTitle": "DFlight API",
  "endpoints": 24,
  "sdkMethods": 24,
  "schemas": 50,
  "parameters": 73,
  "difficultyScore": 67.25,
  "difficulty": "Easy"
}