{
  "providerName": "files.com",
  "openApiRaw": "https://app.files.com/api/rest/v1/swagger_doc.json",
  "securitySchemes": {
    "api_key": {
      "description": "API Key - supports user-based or site-wide API keys",
      "in": "header",
      "name": "X-FilesAPI-Key",
      "type": "apiKey"
    }
  },
  "categories": [
    "developer_tools"
  ],
  "homepage": "files.com",
  "apiVersion": "0.0.1",
  "methods": [
    {
      "url": "/action_notification_export_results",
      "method": "getActionNotificationExportResults",
      "httpMethod": "get",
      "tag": "action_notification_export_results",
      "typeScriptTag": "actionNotificationExportResults",
      "description": "List Action Notification Export Results",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "actionNotificationExportId",
          "schema": "integer",
          "required": true,
          "description": "ID of the associated action notification export."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/action_notification_exports",
      "method": "postActionNotificationExports",
      "httpMethod": "post",
      "tag": "action_notification_exports",
      "typeScriptTag": "actionNotificationExports",
      "description": "Create Action Notification Export",
      "parameters": [
        {
          "name": "end_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_folder",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_path",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_request_method",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_request_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_success",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "start_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Show Action Notification Export"
        }
      ]
    },
    {
      "url": "/action_notification_exports/{id}",
      "method": "getActionNotificationExportsId",
      "httpMethod": "get",
      "tag": "action_notification_exports",
      "typeScriptTag": "actionNotificationExports",
      "description": "Show Action Notification Export",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Action Notification Export ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Show Action Notification Export"
        }
      ]
    },
    {
      "url": "/action_webhook_failures/{id}/retry",
      "method": "postActionWebhookFailuresIdRetry",
      "httpMethod": "post",
      "tag": "action_webhook_failures",
      "typeScriptTag": "actionWebhookFailures",
      "description": "retry Action Webhook Failure",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Action Webhook Failure ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/api_key",
      "method": "apiKeyDeleteCurrent",
      "httpMethod": "delete",
      "tag": "api_key",
      "typeScriptTag": "apiKey",
      "description": "Delete current API key.  (Requires current API connection to be using an API key.)",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/api_key",
      "method": "apiKeyFindCurrent",
      "httpMethod": "get",
      "tag": "api_key",
      "typeScriptTag": "apiKey",
      "description": "Show information about current API key.  (Requires current API connection to be using an API key.)",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Api Keys"
        }
      ]
    },
    {
      "url": "/api_key",
      "method": "apiKeyUpdateCurrent",
      "httpMethod": "patch",
      "tag": "api_key",
      "typeScriptTag": "apiKey",
      "description": "Update current API key.  (Requires current API connection to be using an API key.)",
      "parameters": [
        {
          "name": "expires_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "permission_set",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Api Keys"
        }
      ]
    },
    {
      "url": "/api_keys",
      "method": "getApiKeys",
      "httpMethod": "get",
      "tag": "api_keys",
      "typeScriptTag": "apiKeys",
      "description": "List Api Keys",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[expires_at]=desc`). Valid fields are `expires_at`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `expires_at`."
        },
        {
          "name": "filterGt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `expires_at`."
        },
        {
          "name": "filterGteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `expires_at`."
        },
        {
          "name": "filterLt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `expires_at`."
        },
        {
          "name": "filterLteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `expires_at`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api_keys",
      "method": "postApiKeys",
      "httpMethod": "post",
      "tag": "api_keys",
      "typeScriptTag": "apiKeys",
      "description": "Create Api Key",
      "parameters": [
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "expires_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "description": ""
        },
        {
          "name": "permission_set",
          "schema": "string",
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Api Keys"
        }
      ]
    },
    {
      "url": "/api_keys/{id}",
      "method": "deleteApiKeysId",
      "httpMethod": "delete",
      "tag": "api_keys",
      "typeScriptTag": "apiKeys",
      "description": "Delete Api Key",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Api Key ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/api_keys/{id}",
      "method": "getApiKeysId",
      "httpMethod": "get",
      "tag": "api_keys",
      "typeScriptTag": "apiKeys",
      "description": "Show Api Key",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Api Key ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Api Keys"
        }
      ]
    },
    {
      "url": "/api_keys/{id}",
      "method": "patchApiKeysId",
      "httpMethod": "patch",
      "tag": "api_keys",
      "typeScriptTag": "apiKeys",
      "description": "Update Api Key",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Api Key ID."
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "expires_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "permission_set",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Api Keys"
        }
      ]
    },
    {
      "url": "/apps",
      "method": "getApps",
      "httpMethod": "get",
      "tag": "apps",
      "typeScriptTag": "apps",
      "description": "List Apps",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[name]=desc`). Valid fields are `name` and `app_type`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `name` and `app_type`. Valid field combinations are `[ name, app_type ]` and `[ app_type, name ]`."
        },
        {
          "name": "filterPrefix",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `name`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/as2_incoming_messages",
      "method": "getAs2IncomingMessages",
      "httpMethod": "get",
      "tag": "as2_incoming_messages",
      "typeScriptTag": "as2IncomingMessages",
      "description": "List As2 Incoming Messages",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[created_at]=desc`). Valid fields are `created_at` and `as2_partner_id`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterGt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterGteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterLt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterLteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "as2PartnerId",
          "schema": "integer",
          "required": false,
          "description": "As2 Partner ID.  If provided, will return message specific to that partner."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/as2_outgoing_messages",
      "method": "getAs2OutgoingMessages",
      "httpMethod": "get",
      "tag": "as2_outgoing_messages",
      "typeScriptTag": "as2OutgoingMessages",
      "description": "List As2 Outgoing Messages",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[created_at]=desc`). Valid fields are `created_at` and `as2_partner_id`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterGt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterGteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterLt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterLteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "as2PartnerId",
          "schema": "integer",
          "required": false,
          "description": "As2 Partner ID.  If provided, will return message specific to that partner."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/as2_partners",
      "method": "getAs2Partners",
      "httpMethod": "get",
      "tag": "as2_partners",
      "typeScriptTag": "as2Partners",
      "description": "List As2 Partners",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/as2_partners",
      "method": "postAs2Partners",
      "httpMethod": "post",
      "tag": "as2_partners",
      "typeScriptTag": "as2Partners",
      "description": "Create As2 Partner",
      "parameters": [
        {
          "name": "as2_station_id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "enable_dedicated_ips",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "public_certificate",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "server_certificate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "uri",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Create As2 Partner"
        }
      ]
    },
    {
      "url": "/as2_partners/{id}",
      "method": "deleteAs2PartnersId",
      "httpMethod": "delete",
      "tag": "as2_partners",
      "typeScriptTag": "as2Partners",
      "description": "Delete As2 Partner",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "As2 Partner ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/as2_partners/{id}",
      "method": "getAs2PartnersId",
      "httpMethod": "get",
      "tag": "as2_partners",
      "typeScriptTag": "as2Partners",
      "description": "Show As2 Partner",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "As2 Partner ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create As2 Partner"
        }
      ]
    },
    {
      "url": "/as2_partners/{id}",
      "method": "patchAs2PartnersId",
      "httpMethod": "patch",
      "tag": "as2_partners",
      "typeScriptTag": "as2Partners",
      "description": "Update As2 Partner",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "As2 Partner ID."
        },
        {
          "name": "enable_dedicated_ips",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "public_certificate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "server_certificate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "uri",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create As2 Partner"
        }
      ]
    },
    {
      "url": "/as2_stations",
      "method": "getAs2Stations",
      "httpMethod": "get",
      "tag": "as2_stations",
      "typeScriptTag": "as2Stations",
      "description": "List As2 Stations",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/as2_stations",
      "method": "postAs2Stations",
      "httpMethod": "post",
      "tag": "as2_stations",
      "typeScriptTag": "as2Stations",
      "description": "Create As2 Station",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "private_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "private_key_password",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "public_certificate",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Create As2 Station"
        }
      ]
    },
    {
      "url": "/as2_stations/{id}",
      "method": "deleteAs2StationsId",
      "httpMethod": "delete",
      "tag": "as2_stations",
      "typeScriptTag": "as2Stations",
      "description": "Delete As2 Station",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "As2 Station ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/as2_stations/{id}",
      "method": "getAs2StationsId",
      "httpMethod": "get",
      "tag": "as2_stations",
      "typeScriptTag": "as2Stations",
      "description": "Show As2 Station",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "As2 Station ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create As2 Station"
        }
      ]
    },
    {
      "url": "/as2_stations/{id}",
      "method": "patchAs2StationsId",
      "httpMethod": "patch",
      "tag": "as2_stations",
      "typeScriptTag": "as2Stations",
      "description": "Update As2 Station",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "As2 Station ID."
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "private_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "private_key_password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "public_certificate",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create As2 Station"
        }
      ]
    },
    {
      "url": "/automation_runs",
      "method": "getAutomationRuns",
      "httpMethod": "get",
      "tag": "automation_runs",
      "typeScriptTag": "automationRuns",
      "description": "List Automation Runs",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[created_at]=desc`). Valid fields are `created_at` and `status`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `status`."
        },
        {
          "name": "automationId",
          "schema": "integer",
          "required": true,
          "description": "ID of the associated Automation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/automation_runs/{id}",
      "method": "getAutomationRunsId",
      "httpMethod": "get",
      "tag": "automation_runs",
      "typeScriptTag": "automationRuns",
      "description": "Show Automation Run",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Automation Run ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Automation Runs"
        }
      ]
    },
    {
      "url": "/automations",
      "method": "getAutomations",
      "httpMethod": "get",
      "tag": "automations",
      "typeScriptTag": "automations",
      "description": "List Automations",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[automation]=desc`). Valid fields are `automation`, `disabled`, `last_modified_at` or `name`."
        },
        {
          "name": "automation",
          "schema": "string",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `disabled`, `last_modified_at` or `automation`. Valid field combinations are `[ automation, disabled ]` and `[ disabled, automation ]`."
        },
        {
          "name": "filterGt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `last_modified_at`."
        },
        {
          "name": "filterGteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `last_modified_at`."
        },
        {
          "name": "filterLt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `last_modified_at`."
        },
        {
          "name": "filterLteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `last_modified_at`."
        },
        {
          "name": "withDeleted",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to include deleted automations in the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/automations",
      "method": "postAutomations",
      "httpMethod": "post",
      "tag": "automations",
      "typeScriptTag": "automations",
      "description": "Create Automation",
      "parameters": [
        {
          "name": "automation",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "destination",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "destination_replace_from",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "destination_replace_to",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "destinations",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "disabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "group_ids",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "interval",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "recurring_day",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "schedule",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "source",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sync_ids",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "trigger",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "trigger_actions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "user_ids",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "value",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Automations"
        }
      ]
    },
    {
      "url": "/automations/{id}",
      "method": "deleteAutomationsId",
      "httpMethod": "delete",
      "tag": "automations",
      "typeScriptTag": "automations",
      "description": "Delete Automation",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Automation ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/automations/{id}",
      "method": "getAutomationsId",
      "httpMethod": "get",
      "tag": "automations",
      "typeScriptTag": "automations",
      "description": "Show Automation",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Automation ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Automations"
        }
      ]
    },
    {
      "url": "/automations/{id}",
      "method": "patchAutomationsId",
      "httpMethod": "patch",
      "tag": "automations",
      "typeScriptTag": "automations",
      "description": "Update Automation",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Automation ID."
        },
        {
          "name": "automation",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "destination",
          "schema": "string",
          "description": ""
        },
        {
          "name": "destination_replace_from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "destination_replace_to",
          "schema": "string",
          "description": ""
        },
        {
          "name": "destinations",
          "schema": "array",
          "description": ""
        },
        {
          "name": "disabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "group_ids",
          "schema": "string",
          "description": ""
        },
        {
          "name": "interval",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "description": ""
        },
        {
          "name": "recurring_day",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "schedule",
          "schema": "object",
          "description": ""
        },
        {
          "name": "source",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sync_ids",
          "schema": "string",
          "description": ""
        },
        {
          "name": "trigger",
          "schema": "string",
          "description": ""
        },
        {
          "name": "trigger_actions",
          "schema": "array",
          "description": ""
        },
        {
          "name": "user_ids",
          "schema": "string",
          "description": ""
        },
        {
          "name": "value",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Automations"
        }
      ]
    },
    {
      "url": "/bandwidth_snapshots",
      "method": "getBandwidthSnapshots",
      "httpMethod": "get",
      "tag": "bandwidth_snapshots",
      "typeScriptTag": "bandwidthSnapshots",
      "description": "List Bandwidth Snapshots",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[logged_at]=desc`). Valid fields are `logged_at`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `logged_at`."
        },
        {
          "name": "filterGt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `logged_at`."
        },
        {
          "name": "filterGteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `logged_at`."
        },
        {
          "name": "filterLt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `logged_at`."
        },
        {
          "name": "filterLteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `logged_at`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/behaviors",
      "method": "getBehaviors",
      "httpMethod": "get",
      "tag": "behaviors",
      "typeScriptTag": "behaviors",
      "description": "List Behaviors",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[behavior]=desc`). Valid fields are `behavior`."
        },
        {
          "name": "behavior",
          "schema": "string",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `behavior`."
        },
        {
          "name": "filterPrefix",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `behavior`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/behaviors",
      "method": "postBehaviors",
      "httpMethod": "post",
      "tag": "behaviors",
      "typeScriptTag": "behaviors",
      "description": "Create Behavior",
      "parameters": [
        {
          "name": "attachment_file",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "behavior",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "value",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Behaviors"
        }
      ]
    },
    {
      "url": "/behaviors/folders/{path}",
      "method": "behaviorListForPath",
      "httpMethod": "get",
      "tag": "behaviors",
      "typeScriptTag": "behaviors",
      "description": "List Behaviors by path",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[behavior]=desc`). Valid fields are `behavior`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `behavior`."
        },
        {
          "name": "filterPrefix",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `behavior`."
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "Path to operate on."
        },
        {
          "name": "recursive",
          "schema": "string",
          "required": false,
          "description": "Show behaviors above this path?"
        },
        {
          "name": "behavior",
          "schema": "string",
          "required": false,
          "description": "DEPRECATED: If set only shows folder behaviors matching this behavior type. Use `filter[behavior]` instead."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/behaviors/webhook/test",
      "method": "postBehaviorsWebhookTest",
      "httpMethod": "post",
      "tag": "behaviors",
      "typeScriptTag": "behaviors",
      "description": "Test webhook.",
      "parameters": [
        {
          "name": "action",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "body",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "encoding",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "headers",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "method",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Test webhook."
        }
      ]
    },
    {
      "url": "/behaviors/{id}",
      "method": "deleteBehaviorsId",
      "httpMethod": "delete",
      "tag": "behaviors",
      "typeScriptTag": "behaviors",
      "description": "Delete Behavior",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Behavior ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/behaviors/{id}",
      "method": "getBehaviorsId",
      "httpMethod": "get",
      "tag": "behaviors",
      "typeScriptTag": "behaviors",
      "description": "Show Behavior",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Behavior ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Behaviors"
        }
      ]
    },
    {
      "url": "/behaviors/{id}",
      "method": "patchBehaviorsId",
      "httpMethod": "patch",
      "tag": "behaviors",
      "typeScriptTag": "behaviors",
      "description": "Update Behavior",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Behavior ID."
        },
        {
          "name": "attachment_delete",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "attachment_file",
          "schema": "string",
          "description": ""
        },
        {
          "name": "behavior",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "description": ""
        },
        {
          "name": "value",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Behaviors"
        }
      ]
    },
    {
      "url": "/bundle_downloads",
      "method": "getBundleDownloads",
      "httpMethod": "get",
      "tag": "bundle_downloads",
      "typeScriptTag": "bundleDownloads",
      "description": "List Bundle Downloads",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[created_at]=desc`). Valid fields are `created_at`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterGt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterGteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterLt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterLteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "bundleId",
          "schema": "integer",
          "required": false,
          "description": "Bundle ID"
        },
        {
          "name": "bundleRegistrationId",
          "schema": "integer",
          "required": false,
          "description": "BundleRegistration ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bundle_notifications",
      "method": "getBundleNotifications",
      "httpMethod": "get",
      "tag": "bundle_notifications",
      "typeScriptTag": "bundleNotifications",
      "description": "List Bundle Notifications",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[bundle_id]=desc`). Valid fields are `bundle_id`."
        },
        {
          "name": "bundleId",
          "schema": "string",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `bundle_id`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bundle_notifications",
      "method": "postBundleNotifications",
      "httpMethod": "post",
      "tag": "bundle_notifications",
      "typeScriptTag": "bundleNotifications",
      "description": "Create Bundle Notification",
      "parameters": [
        {
          "name": "bundle_id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "notify_on_registration",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "notify_on_upload",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Bundle Notifications"
        }
      ]
    },
    {
      "url": "/bundle_notifications/{id}",
      "method": "deleteBundleNotificationsId",
      "httpMethod": "delete",
      "tag": "bundle_notifications",
      "typeScriptTag": "bundleNotifications",
      "description": "Delete Bundle Notification",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Bundle Notification ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/bundle_notifications/{id}",
      "method": "getBundleNotificationsId",
      "httpMethod": "get",
      "tag": "bundle_notifications",
      "typeScriptTag": "bundleNotifications",
      "description": "Show Bundle Notification",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Bundle Notification ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Bundle Notifications"
        }
      ]
    },
    {
      "url": "/bundle_notifications/{id}",
      "method": "patchBundleNotificationsId",
      "httpMethod": "patch",
      "tag": "bundle_notifications",
      "typeScriptTag": "bundleNotifications",
      "description": "Update Bundle Notification",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Bundle Notification ID."
        },
        {
          "name": "notify_on_registration",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "notify_on_upload",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Bundle Notifications"
        }
      ]
    },
    {
      "url": "/bundle_recipients",
      "method": "getBundleRecipients",
      "httpMethod": "get",
      "tag": "bundle_recipients",
      "typeScriptTag": "bundleRecipients",
      "description": "List Bundle Recipients",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[has_registrations]=desc`). Valid fields are `has_registrations`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `has_registrations`."
        },
        {
          "name": "bundleId",
          "schema": "integer",
          "required": true,
          "description": "List recipients for the bundle with this ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bundle_recipients",
      "method": "postBundleRecipients",
      "httpMethod": "post",
      "tag": "bundle_recipients",
      "typeScriptTag": "bundleRecipients",
      "description": "Create Bundle Recipient",
      "parameters": [
        {
          "name": "bundle_id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "company",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "recipient",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "share_after_create",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Bundle Recipients"
        }
      ]
    },
    {
      "url": "/bundle_registrations",
      "method": "getBundleRegistrations",
      "httpMethod": "get",
      "tag": "bundle_registrations",
      "typeScriptTag": "bundleRegistrations",
      "description": "List Bundle Registrations",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "bundleId",
          "schema": "integer",
          "required": false,
          "description": "ID of the associated Bundle"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bundles",
      "method": "getBundles",
      "httpMethod": "get",
      "tag": "bundles",
      "typeScriptTag": "bundles",
      "description": "List Bundles",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[created_at]=desc`). Valid fields are `created_at` and `code`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterGt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterGteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterLt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterLteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `created_at`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bundles",
      "method": "postBundles",
      "httpMethod": "post",
      "tag": "bundles",
      "typeScriptTag": "bundles",
      "description": "Create Bundle",
      "parameters": [
        {
          "name": "clickwrap_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dont_separate_submissions_by_folder",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "expires_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "form_field_set_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "inbox_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "max_uses",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "path_template",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "paths",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "permissions",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "preview_only",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "require_registration",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "require_share_recipient",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "send_email_receipt_to_uploader",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "skip_company",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "skip_email",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "skip_name",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "watermark_attachment_file",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Create Bundle"
        }
      ]
    },
    {
      "url": "/bundles/{id}",
      "method": "deleteBundlesId",
      "httpMethod": "delete",
      "tag": "bundles",
      "typeScriptTag": "bundles",
      "description": "Delete Bundle",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Bundle ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/bundles/{id}",
      "method": "getBundlesId",
      "httpMethod": "get",
      "tag": "bundles",
      "typeScriptTag": "bundles",
      "description": "Show Bundle",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Bundle ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create Bundle"
        }
      ]
    },
    {
      "url": "/bundles/{id}",
      "method": "patchBundlesId",
      "httpMethod": "patch",
      "tag": "bundles",
      "typeScriptTag": "bundles",
      "description": "Update Bundle",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Bundle ID."
        },
        {
          "name": "clickwrap_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dont_separate_submissions_by_folder",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "expires_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "form_field_set_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "inbox_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "max_uses",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "path_template",
          "schema": "string",
          "description": ""
        },
        {
          "name": "paths",
          "schema": "array",
          "description": ""
        },
        {
          "name": "permissions",
          "schema": "string",
          "description": ""
        },
        {
          "name": "preview_only",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "require_registration",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "require_share_recipient",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "send_email_receipt_to_uploader",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "skip_company",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "skip_email",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "skip_name",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "watermark_attachment_delete",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "watermark_attachment_file",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create Bundle"
        }
      ]
    },
    {
      "url": "/bundles/{id}/share",
      "method": "postBundlesIdShare",
      "httpMethod": "post",
      "tag": "bundles",
      "typeScriptTag": "bundles",
      "description": "Send email(s) with a link to bundle",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Bundle ID."
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "recipients",
          "schema": "array",
          "description": ""
        },
        {
          "name": "to",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/clickwraps",
      "method": "getClickwraps",
      "httpMethod": "get",
      "tag": "clickwraps",
      "typeScriptTag": "clickwraps",
      "description": "List Clickwraps",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/clickwraps",
      "method": "postClickwraps",
      "httpMethod": "post",
      "tag": "clickwraps",
      "typeScriptTag": "clickwraps",
      "description": "Create Clickwrap",
      "parameters": [
        {
          "name": "body",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "use_with_bundles",
          "schema": "string",
          "description": ""
        },
        {
          "name": "use_with_inboxes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "use_with_users",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Create Clickwrap"
        }
      ]
    },
    {
      "url": "/clickwraps/{id}",
      "method": "deleteClickwrapsId",
      "httpMethod": "delete",
      "tag": "clickwraps",
      "typeScriptTag": "clickwraps",
      "description": "Delete Clickwrap",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Clickwrap ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/clickwraps/{id}",
      "method": "getClickwrapsId",
      "httpMethod": "get",
      "tag": "clickwraps",
      "typeScriptTag": "clickwraps",
      "description": "Show Clickwrap",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Clickwrap ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create Clickwrap"
        }
      ]
    },
    {
      "url": "/clickwraps/{id}",
      "method": "patchClickwrapsId",
      "httpMethod": "patch",
      "tag": "clickwraps",
      "typeScriptTag": "clickwraps",
      "description": "Update Clickwrap",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Clickwrap ID."
        },
        {
          "name": "body",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "use_with_bundles",
          "schema": "string",
          "description": ""
        },
        {
          "name": "use_with_inboxes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "use_with_users",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create Clickwrap"
        }
      ]
    },
    {
      "url": "/dns_records",
      "method": "getDnsRecords",
      "httpMethod": "get",
      "tag": "dns_records",
      "typeScriptTag": "dnsRecords",
      "description": "Show site DNS configuration.",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/external_events",
      "method": "getExternalEvents",
      "httpMethod": "get",
      "tag": "external_events",
      "typeScriptTag": "externalEvents",
      "description": "List External Events",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[remote_server_type]=desc`). Valid fields are `remote_server_type`, `site_id`, `folder_behavior_id`, `event_type`, `created_at` or `status`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`, `event_type`, `remote_server_type`, `status` or `folder_behavior_id`. Valid field combinations are `[ event_type, status, created_at ]`, `[ event_type, created_at ]` or `[ status, created_at ]`."
        },
        {
          "name": "filterGt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterGteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterPrefix",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `remote_server_type`."
        },
        {
          "name": "filterLt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterLteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `created_at`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/external_events",
      "method": "postExternalEvents",
      "httpMethod": "post",
      "tag": "external_events",
      "typeScriptTag": "externalEvents",
      "description": "Create External Event",
      "parameters": [
        {
          "name": "body",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List External Events"
        }
      ]
    },
    {
      "url": "/external_events/{id}",
      "method": "getExternalEventsId",
      "httpMethod": "get",
      "tag": "external_events",
      "typeScriptTag": "externalEvents",
      "description": "Show External Event",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "External Event ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List External Events"
        }
      ]
    },
    {
      "url": "/file_actions/begin_upload/{path}",
      "method": "fileActionBeginUpload",
      "httpMethod": "post",
      "tag": "file_actions",
      "typeScriptTag": "fileActions",
      "description": "Begin file upload",
      "parameters": [
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "Path to operate on."
        },
        {
          "name": "mkdir_parents",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "part",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "parts",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ref",
          "schema": "string",
          "description": ""
        },
        {
          "name": "restart",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "size",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "with_rename",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/file_actions/copy/{path}",
      "method": "fileActionCopy",
      "httpMethod": "post",
      "tag": "file_actions",
      "typeScriptTag": "fileActions",
      "description": "Copy file/folder",
      "parameters": [
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "Path to operate on."
        },
        {
          "name": "destination",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "structure",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Move file/folder"
        }
      ]
    },
    {
      "url": "/file_actions/metadata/{path}",
      "method": "fileActionFind",
      "httpMethod": "get",
      "tag": "file_actions",
      "typeScriptTag": "fileActions",
      "description": "Find file/folder by path",
      "parameters": [
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "Path to operate on."
        },
        {
          "name": "previewSize",
          "schema": "string",
          "required": false,
          "description": "Request a preview size.  Can be `small` (default), `large`, `xlarge`, or `pdf`."
        },
        {
          "name": "withPreviews",
          "schema": "boolean",
          "required": false,
          "description": "Include file preview information?"
        },
        {
          "name": "withPriorityColor",
          "schema": "boolean",
          "required": false,
          "description": "Include file priority color information?"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Folders by path"
        }
      ]
    },
    {
      "url": "/file_actions/move/{path}",
      "method": "fileActionMove",
      "httpMethod": "post",
      "tag": "file_actions",
      "typeScriptTag": "fileActions",
      "description": "Move file/folder",
      "parameters": [
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "Path to operate on."
        },
        {
          "name": "destination",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Move file/folder"
        }
      ]
    },
    {
      "url": "/file_comment_reactions",
      "method": "postFileCommentReactions",
      "httpMethod": "post",
      "tag": "file_comment_reactions",
      "typeScriptTag": "fileCommentReactions",
      "description": "Create File Comment Reaction",
      "parameters": [
        {
          "name": "emoji",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "file_comment_id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Create File Comment Reaction"
        }
      ]
    },
    {
      "url": "/file_comment_reactions/{id}",
      "method": "deleteFileCommentReactionsId",
      "httpMethod": "delete",
      "tag": "file_comment_reactions",
      "typeScriptTag": "fileCommentReactions",
      "description": "Delete File Comment Reaction",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "File Comment Reaction ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/file_comments",
      "method": "postFileComments",
      "httpMethod": "post",
      "tag": "file_comments",
      "typeScriptTag": "fileComments",
      "description": "Create File Comment",
      "parameters": [
        {
          "name": "body",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List File Comments by path"
        }
      ]
    },
    {
      "url": "/file_comments/files/{path}",
      "method": "fileCommentListForPath",
      "httpMethod": "get",
      "tag": "file_comments",
      "typeScriptTag": "fileComments",
      "description": "List File Comments by path",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "Path to operate on."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/file_comments/{id}",
      "method": "deleteFileCommentsId",
      "httpMethod": "delete",
      "tag": "file_comments",
      "typeScriptTag": "fileComments",
      "description": "Delete File Comment",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "File Comment ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/file_comments/{id}",
      "method": "patchFileCommentsId",
      "httpMethod": "patch",
      "tag": "file_comments",
      "typeScriptTag": "fileComments",
      "description": "Update File Comment",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "File Comment ID."
        },
        {
          "name": "body",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List File Comments by path"
        }
      ]
    },
    {
      "url": "/file_migrations/{id}",
      "method": "getFileMigrationsId",
      "httpMethod": "get",
      "tag": "file_migrations",
      "typeScriptTag": "fileMigrations",
      "description": "Show File Migration",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "File Migration ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Show File Migration"
        }
      ]
    },
    {
      "url": "/files/{path}",
      "method": "deleteFilesPath",
      "httpMethod": "delete",
      "tag": "files",
      "typeScriptTag": "files",
      "description": "Delete file/folder",
      "parameters": [
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "Path to operate on."
        },
        {
          "name": "recursive",
          "schema": "boolean",
          "required": false,
          "description": "If true, will recursively delete folers.  Otherwise, will error on non-empty folders."
        }
      ],
      "responses": []
    },
    {
      "url": "/files/{path}",
      "method": "fileDownload",
      "httpMethod": "get",
      "tag": "files",
      "typeScriptTag": "files",
      "description": "Download file",
      "parameters": [
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "Path to operate on."
        },
        {
          "name": "action",
          "schema": "string",
          "required": false,
          "description": "Can be blank, `redirect` or `stat`.  If set to `stat`, we will return file information but without a download URL, and without logging a download.  If set to `redirect` we will serve a 302 redirect directly to the file.  This is used for integrations with Zapier, and is not recommended for most integrations."
        },
        {
          "name": "previewSize",
          "schema": "string",
          "required": false,
          "description": "Request a preview size.  Can be `small` (default), `large`, `xlarge`, or `pdf`."
        },
        {
          "name": "withPreviews",
          "schema": "boolean",
          "required": false,
          "description": "Include file preview information?"
        },
        {
          "name": "withPriorityColor",
          "schema": "boolean",
          "required": false,
          "description": "Include file priority color information?"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Folders by path"
        }
      ]
    },
    {
      "url": "/files/{path}",
      "method": "patchFilesPath",
      "httpMethod": "patch",
      "tag": "files",
      "typeScriptTag": "files",
      "description": "Update file/folder metadata",
      "parameters": [
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "Path to operate on."
        },
        {
          "name": "priority_color",
          "schema": "string",
          "description": ""
        },
        {
          "name": "provided_mtime",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Folders by path"
        }
      ]
    },
    {
      "url": "/files/{path}",
      "method": "postFilesPath",
      "httpMethod": "post",
      "tag": "files",
      "typeScriptTag": "files",
      "description": "Upload file",
      "parameters": [
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "Path to operate on."
        },
        {
          "name": "action",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "etags[etag]",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "etags[part]",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "length",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "mkdir_parents",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "part",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "parts",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "provided_mtime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ref",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "restart",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "size",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "structure",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "with_rename",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Folders by path"
        }
      ]
    },
    {
      "url": "/folders/{path}",
      "method": "folderListForPath",
      "httpMethod": "get",
      "tag": "folders",
      "typeScriptTag": "folders",
      "description": "List Folders by path",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Send cursor to resume an existing list from the point at which you left off.  Get a cursor from an existing list via the X-Files-Cursor-Next header or the X-Files-Cursor-Prev header."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "Path to operate on."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "If specified, will filter folders/files list by this string.  Wildcards of `*` and `?` are acceptable here."
        },
        {
          "name": "previewSize",
          "schema": "string",
          "required": false,
          "description": "Request a preview size.  Can be `small` (default), `large`, `xlarge`, or `pdf`."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "Search by field and direction. Valid fields are `path`, `size`, `modified_at_datetime`, `provided_modified_at`.  Valid directions are `asc` and `desc`.  Defaults to `{\"path\":\"asc\"}`."
        },
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "If `search_all` is `true`, provide the search string here.  Otherwise, this parameter acts like an alias of `filter`."
        },
        {
          "name": "searchAll",
          "schema": "boolean",
          "required": false,
          "description": "Search entire site?  If set, we will ignore the folder path provided and search the entire site.  This is the same API used by the search bar in the UI.  Search results are a best effort, not real time, and not guaranteed to match every file.  This field should only be used for ad-hoc (human) searching, and not as part of an automated process."
        },
        {
          "name": "withPreviews",
          "schema": "boolean",
          "required": false,
          "description": "Include file previews?"
        },
        {
          "name": "withPriorityColor",
          "schema": "boolean",
          "required": false,
          "description": "Include file priority color information?"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/folders/{path}",
      "method": "postFoldersPath",
      "httpMethod": "post",
      "tag": "folders",
      "typeScriptTag": "folders",
      "description": "Create folder",
      "parameters": [
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "Path to operate on."
        },
        {
          "name": "mkdir_parents",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "provided_mtime",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Folders by path"
        }
      ]
    },
    {
      "url": "/form_field_sets",
      "method": "getFormFieldSets",
      "httpMethod": "get",
      "tag": "form_field_sets",
      "typeScriptTag": "formFieldSets",
      "description": "List Form Field Sets",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/form_field_sets",
      "method": "postFormFieldSets",
      "httpMethod": "post",
      "tag": "form_field_sets",
      "typeScriptTag": "formFieldSets",
      "description": "Create Form Field Set",
      "parameters": [
        {
          "name": "form_fields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "skip_company",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "skip_email",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "skip_name",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Form Field Sets"
        }
      ]
    },
    {
      "url": "/form_field_sets/{id}",
      "method": "deleteFormFieldSetsId",
      "httpMethod": "delete",
      "tag": "form_field_sets",
      "typeScriptTag": "formFieldSets",
      "description": "Delete Form Field Set",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Form Field Set ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/form_field_sets/{id}",
      "method": "getFormFieldSetsId",
      "httpMethod": "get",
      "tag": "form_field_sets",
      "typeScriptTag": "formFieldSets",
      "description": "Show Form Field Set",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Form Field Set ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Form Field Sets"
        }
      ]
    },
    {
      "url": "/form_field_sets/{id}",
      "method": "patchFormFieldSetsId",
      "httpMethod": "patch",
      "tag": "form_field_sets",
      "typeScriptTag": "formFieldSets",
      "description": "Update Form Field Set",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Form Field Set ID."
        },
        {
          "name": "form_fields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "skip_company",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "skip_email",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "skip_name",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Form Field Sets"
        }
      ]
    },
    {
      "url": "/group_users",
      "method": "getGroupUsers",
      "httpMethod": "get",
      "tag": "group_users",
      "typeScriptTag": "groupUsers",
      "description": "List Group Users",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID.  If provided, will return group_users of this user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "groupId",
          "schema": "integer",
          "required": false,
          "description": "Group ID.  If provided, will return group_users of this group."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/group_users",
      "method": "postGroupUsers",
      "httpMethod": "post",
      "tag": "group_users",
      "typeScriptTag": "groupUsers",
      "description": "Create Group User",
      "parameters": [
        {
          "name": "admin",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "group_id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Create Group User"
        }
      ]
    },
    {
      "url": "/group_users/{id}",
      "method": "deleteGroupUsersId",
      "httpMethod": "delete",
      "tag": "group_users",
      "typeScriptTag": "groupUsers",
      "description": "Delete Group User",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Group User ID."
        },
        {
          "name": "groupId",
          "schema": "integer",
          "required": true,
          "description": "Group ID from which to remove user."
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID to remove from group."
        }
      ],
      "responses": []
    },
    {
      "url": "/group_users/{id}",
      "method": "patchGroupUsersId",
      "httpMethod": "patch",
      "tag": "group_users",
      "typeScriptTag": "groupUsers",
      "description": "Update Group User",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Group User ID."
        },
        {
          "name": "admin",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "group_id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create Group User"
        }
      ]
    },
    {
      "url": "/groups",
      "method": "getGroups",
      "httpMethod": "get",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "List Groups",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[name]=desc`). Valid fields are `name`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `name`."
        },
        {
          "name": "filterPrefix",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `name`."
        },
        {
          "name": "ids",
          "schema": "string",
          "required": false,
          "description": "Comma-separated list of group ids to include in results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/groups",
      "method": "postGroups",
      "httpMethod": "post",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Create Group",
      "parameters": [
        {
          "name": "admin_ids",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "user_ids",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Groups"
        }
      ]
    },
    {
      "url": "/groups/{group_id}/memberships/{user_id}",
      "method": "deleteGroupsGroupIdMembershipsUserId",
      "httpMethod": "delete",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Delete Group User",
      "parameters": [
        {
          "name": "groupId",
          "schema": "integer",
          "required": true,
          "description": "Group ID from which to remove user."
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID to remove from group."
        }
      ],
      "responses": []
    },
    {
      "url": "/groups/{group_id}/memberships/{user_id}",
      "method": "patchGroupsGroupIdMembershipsUserId",
      "httpMethod": "patch",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Update Group User",
      "parameters": [
        {
          "name": "groupId",
          "schema": "integer",
          "required": true,
          "description": "Group ID to add user to."
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID to add to group."
        },
        {
          "name": "admin",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create Group User"
        }
      ]
    },
    {
      "url": "/groups/{group_id}/permissions",
      "method": "getGroupsGroupIdPermissions",
      "httpMethod": "get",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "List Permissions",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[group_id]=desc`). Valid fields are `group_id`, `path`, `user_id` or `permission`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `group_id`, `user_id` or `path`. Valid field combinations are `[ group_id, path ]` and `[ user_id, path ]`."
        },
        {
          "name": "filterPrefix",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`."
        },
        {
          "name": "path",
          "schema": "string",
          "required": false,
          "description": "DEPRECATED: Permission path.  If provided, will scope permissions to this path. Use `filter[path]` instead."
        },
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "DEPRECATED: Group ID.  If provided, will scope permissions to this group. Use `filter[group_id]` instead.`"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": false,
          "description": "DEPRECATED: User ID.  If provided, will scope permissions to this user. Use `filter[user_id]` instead.`"
        },
        {
          "name": "includeGroups",
          "schema": "boolean",
          "required": false,
          "description": "If searching by user or group, also include user's permissions that are inherited from its groups?"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/groups/{group_id}/users",
      "method": "getGroupsGroupIdUsers",
      "httpMethod": "get",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "List Group Users",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID.  If provided, will return group_users of this user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "groupId",
          "schema": "integer",
          "required": true,
          "description": "Group ID.  If provided, will return group_users of this group."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/groups/{group_id}/users",
      "method": "postGroupsGroupIdUsers",
      "httpMethod": "post",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Create User",
      "parameters": [
        {
          "name": "groupId",
          "schema": "integer",
          "required": true,
          "description": "Group ID to associate this user with."
        },
        {
          "name": "allowed_ips",
          "schema": "string",
          "description": ""
        },
        {
          "name": "announcements_read",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "attachments_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "authenticate_until",
          "schema": "string",
          "description": ""
        },
        {
          "name": "authentication_method",
          "schema": "string",
          "description": ""
        },
        {
          "name": "avatar_delete",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "avatar_file",
          "schema": "string",
          "description": ""
        },
        {
          "name": "billing_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "bypass_inactive_disable",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "bypass_site_allowed_ips",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "change_password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "change_password_confirmation",
          "schema": "string",
          "description": ""
        },
        {
          "name": "company",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dav_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "disabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ftp_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "grant_permission",
          "schema": "string",
          "description": ""
        },
        {
          "name": "group_ids",
          "schema": "string",
          "description": ""
        },
        {
          "name": "header_text",
          "schema": "string",
          "description": ""
        },
        {
          "name": "imported_password_hash",
          "schema": "string",
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notification_daily_send_time",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "office_integration_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password_confirmation",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password_validity_days",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "receive_admin_alerts",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "require_2fa",
          "schema": "string",
          "description": ""
        },
        {
          "name": "require_password_change",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "restapi_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "self_managed",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "sftp_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "site_admin",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "skip_welcome_screen",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "ssl_required",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sso_strategy_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "subscribe_to_newsletter",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "time_zone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "user_root",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Create User"
        }
      ]
    },
    {
      "url": "/groups/{id}",
      "method": "deleteGroupsId",
      "httpMethod": "delete",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Delete Group",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Group ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/groups/{id}",
      "method": "getGroupsId",
      "httpMethod": "get",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Show Group",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Group ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Groups"
        }
      ]
    },
    {
      "url": "/groups/{id}",
      "method": "patchGroupsId",
      "httpMethod": "patch",
      "tag": "groups",
      "typeScriptTag": "groups",
      "description": "Update Group",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Group ID."
        },
        {
          "name": "admin_ids",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "user_ids",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Groups"
        }
      ]
    },
    {
      "url": "/history",
      "method": "historyList",
      "httpMethod": "get",
      "tag": "history",
      "typeScriptTag": "history",
      "description": "List site full action history.",
      "parameters": [
        {
          "name": "startAt",
          "schema": "string",
          "required": false,
          "description": "Leave blank or set to a date/time to filter earlier entries."
        },
        {
          "name": "endAt",
          "schema": "string",
          "required": false,
          "description": "Leave blank or set to a date/time to filter later entries."
        },
        {
          "name": "display",
          "schema": "string",
          "required": false,
          "description": "Display format. Leave blank or set to `full` or `parent`."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[path]=desc`). Valid fields are `path`, `folder`, `user_id` or `created_at`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `user_id`, `folder` or `path`."
        },
        {
          "name": "filterPrefix",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/history/files/{path}",
      "method": "historyListForFile",
      "httpMethod": "get",
      "tag": "history",
      "typeScriptTag": "history",
      "description": "List history for specific file.",
      "parameters": [
        {
          "name": "startAt",
          "schema": "string",
          "required": false,
          "description": "Leave blank or set to a date/time to filter earlier entries."
        },
        {
          "name": "endAt",
          "schema": "string",
          "required": false,
          "description": "Leave blank or set to a date/time to filter later entries."
        },
        {
          "name": "display",
          "schema": "string",
          "required": false,
          "description": "Display format. Leave blank or set to `full` or `parent`."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[user_id]=desc`). Valid fields are `user_id` and `created_at`."
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "Path to operate on."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/history/folders/{path}",
      "method": "historyListForFolder",
      "httpMethod": "get",
      "tag": "history",
      "typeScriptTag": "history",
      "description": "List history for specific folder.",
      "parameters": [
        {
          "name": "startAt",
          "schema": "string",
          "required": false,
          "description": "Leave blank or set to a date/time to filter earlier entries."
        },
        {
          "name": "endAt",
          "schema": "string",
          "required": false,
          "description": "Leave blank or set to a date/time to filter later entries."
        },
        {
          "name": "display",
          "schema": "string",
          "required": false,
          "description": "Display format. Leave blank or set to `full` or `parent`."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[user_id]=desc`). Valid fields are `user_id` and `created_at`."
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "Path to operate on."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/history/login",
      "method": "historyListLogins",
      "httpMethod": "get",
      "tag": "history",
      "typeScriptTag": "history",
      "description": "List site login history.",
      "parameters": [
        {
          "name": "startAt",
          "schema": "string",
          "required": false,
          "description": "Leave blank or set to a date/time to filter earlier entries."
        },
        {
          "name": "endAt",
          "schema": "string",
          "required": false,
          "description": "Leave blank or set to a date/time to filter later entries."
        },
        {
          "name": "display",
          "schema": "string",
          "required": false,
          "description": "Display format. Leave blank or set to `full` or `parent`."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[user_id]=desc`). Valid fields are `user_id` and `created_at`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/history/users/{user_id}",
      "method": "historyListForUser",
      "httpMethod": "get",
      "tag": "history",
      "typeScriptTag": "history",
      "description": "List history for specific user.",
      "parameters": [
        {
          "name": "startAt",
          "schema": "string",
          "required": false,
          "description": "Leave blank or set to a date/time to filter earlier entries."
        },
        {
          "name": "endAt",
          "schema": "string",
          "required": false,
          "description": "Leave blank or set to a date/time to filter later entries."
        },
        {
          "name": "display",
          "schema": "string",
          "required": false,
          "description": "Display format. Leave blank or set to `full` or `parent`."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[user_id]=desc`). Valid fields are `user_id` and `created_at`."
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/history_export_results",
      "method": "getHistoryExportResults",
      "httpMethod": "get",
      "tag": "history_export_results",
      "typeScriptTag": "historyExportResults",
      "description": "List History Export Results",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "historyExportId",
          "schema": "integer",
          "required": true,
          "description": "ID of the associated history export."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/history_exports",
      "method": "postHistoryExports",
      "httpMethod": "post",
      "tag": "history_exports",
      "typeScriptTag": "historyExports",
      "description": "Create History Export",
      "parameters": [
        {
          "name": "end_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_action",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_destination",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_failure_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_file_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_folder",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_interface",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_ip",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_parent_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_path",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_src",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_target_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_target_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_target_permission",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_target_permission_set",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_target_platform",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_target_user_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_target_username",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_user_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "query_username",
          "schema": "string",
          "description": ""
        },
        {
          "name": "start_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Show History Export"
        }
      ]
    },
    {
      "url": "/history_exports/{id}",
      "method": "getHistoryExportsId",
      "httpMethod": "get",
      "tag": "history_exports",
      "typeScriptTag": "historyExports",
      "description": "Show History Export",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "History Export ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Show History Export"
        }
      ]
    },
    {
      "url": "/inbox_recipients",
      "method": "getInboxRecipients",
      "httpMethod": "get",
      "tag": "inbox_recipients",
      "typeScriptTag": "inboxRecipients",
      "description": "List Inbox Recipients",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[has_registrations]=desc`). Valid fields are `has_registrations`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `has_registrations`."
        },
        {
          "name": "inboxId",
          "schema": "integer",
          "required": true,
          "description": "List recipients for the inbox with this ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/inbox_recipients",
      "method": "postInboxRecipients",
      "httpMethod": "post",
      "tag": "inbox_recipients",
      "typeScriptTag": "inboxRecipients",
      "description": "Create Inbox Recipient",
      "parameters": [
        {
          "name": "company",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "inbox_id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "recipient",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "share_after_create",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Inbox Recipients"
        }
      ]
    },
    {
      "url": "/inbox_registrations",
      "method": "getInboxRegistrations",
      "httpMethod": "get",
      "tag": "inbox_registrations",
      "typeScriptTag": "inboxRegistrations",
      "description": "List Inbox Registrations",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "folderBehaviorId",
          "schema": "integer",
          "required": false,
          "description": "ID of the associated Inbox."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/inbox_uploads",
      "method": "getInboxUploads",
      "httpMethod": "get",
      "tag": "inbox_uploads",
      "typeScriptTag": "inboxUploads",
      "description": "List Inbox Uploads",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[created_at]=desc`). Valid fields are `created_at`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterGt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterGteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterLt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "filterLteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `created_at`."
        },
        {
          "name": "inboxRegistrationId",
          "schema": "integer",
          "required": false,
          "description": "InboxRegistration ID"
        },
        {
          "name": "inboxId",
          "schema": "integer",
          "required": false,
          "description": "Inbox ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoices",
      "method": "getInvoices",
      "httpMethod": "get",
      "tag": "invoices",
      "typeScriptTag": "invoices",
      "description": "List Invoices",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/invoices/{id}",
      "method": "getInvoicesId",
      "httpMethod": "get",
      "tag": "invoices",
      "typeScriptTag": "invoices",
      "description": "Show Invoice",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Invoice ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Payments"
        }
      ]
    },
    {
      "url": "/ip_addresses",
      "method": "getIpAddresses",
      "httpMethod": "get",
      "tag": "ip_addresses",
      "typeScriptTag": "ipAddresses",
      "description": "List IP Addresses associated with the current site",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ip_addresses/exavault-reserved",
      "method": "getIpAddressesExavaultReserved",
      "httpMethod": "get",
      "tag": "ip_addresses",
      "typeScriptTag": "ipAddresses",
      "description": "List all possible public ExaVault IP addresses",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ip_addresses/reserved",
      "method": "getIpAddressesReserved",
      "httpMethod": "get",
      "tag": "ip_addresses",
      "typeScriptTag": "ipAddresses",
      "description": "List all possible public IP addresses",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/locks/{path}",
      "method": "deleteLocksPath",
      "httpMethod": "delete",
      "tag": "locks",
      "typeScriptTag": "locks",
      "description": "Delete Lock",
      "parameters": [
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "Path"
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "Lock token"
        }
      ],
      "responses": []
    },
    {
      "url": "/locks/{path}",
      "method": "lockListForPath",
      "httpMethod": "get",
      "tag": "locks",
      "typeScriptTag": "locks",
      "description": "List Locks by path",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "Path to operate on."
        },
        {
          "name": "includeChildren",
          "schema": "boolean",
          "required": false,
          "description": "Include locks from children objects?"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/locks/{path}",
      "method": "postLocksPath",
      "httpMethod": "post",
      "tag": "locks",
      "typeScriptTag": "locks",
      "description": "Create Lock",
      "parameters": [
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "Path"
        },
        {
          "name": "allow_access_by_any_user",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "exclusive",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "recursive",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timeout",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Locks by path"
        }
      ]
    },
    {
      "url": "/message_comment_reactions",
      "method": "getMessageCommentReactions",
      "httpMethod": "get",
      "tag": "message_comment_reactions",
      "typeScriptTag": "messageCommentReactions",
      "description": "List Message Comment Reactions",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "messageCommentId",
          "schema": "integer",
          "required": true,
          "description": "Message comment to return reactions for."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/message_comment_reactions",
      "method": "postMessageCommentReactions",
      "httpMethod": "post",
      "tag": "message_comment_reactions",
      "typeScriptTag": "messageCommentReactions",
      "description": "Create Message Comment Reaction",
      "parameters": [
        {
          "name": "emoji",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Message Comment Reactions"
        }
      ]
    },
    {
      "url": "/message_comment_reactions/{id}",
      "method": "deleteMessageCommentReactionsId",
      "httpMethod": "delete",
      "tag": "message_comment_reactions",
      "typeScriptTag": "messageCommentReactions",
      "description": "Delete Message Comment Reaction",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Message Comment Reaction ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/message_comment_reactions/{id}",
      "method": "getMessageCommentReactionsId",
      "httpMethod": "get",
      "tag": "message_comment_reactions",
      "typeScriptTag": "messageCommentReactions",
      "description": "Show Message Comment Reaction",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Message Comment Reaction ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Message Comment Reactions"
        }
      ]
    },
    {
      "url": "/message_comments",
      "method": "getMessageComments",
      "httpMethod": "get",
      "tag": "message_comments",
      "typeScriptTag": "messageComments",
      "description": "List Message Comments",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "messageId",
          "schema": "integer",
          "required": true,
          "description": "Message comment to return comments for."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/message_comments",
      "method": "postMessageComments",
      "httpMethod": "post",
      "tag": "message_comments",
      "typeScriptTag": "messageComments",
      "description": "Create Message Comment",
      "parameters": [
        {
          "name": "body",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Message Comments"
        }
      ]
    },
    {
      "url": "/message_comments/{id}",
      "method": "deleteMessageCommentsId",
      "httpMethod": "delete",
      "tag": "message_comments",
      "typeScriptTag": "messageComments",
      "description": "Delete Message Comment",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Message Comment ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/message_comments/{id}",
      "method": "getMessageCommentsId",
      "httpMethod": "get",
      "tag": "message_comments",
      "typeScriptTag": "messageComments",
      "description": "Show Message Comment",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Message Comment ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Message Comments"
        }
      ]
    },
    {
      "url": "/message_comments/{id}",
      "method": "patchMessageCommentsId",
      "httpMethod": "patch",
      "tag": "message_comments",
      "typeScriptTag": "messageComments",
      "description": "Update Message Comment",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Message Comment ID."
        },
        {
          "name": "body",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Message Comments"
        }
      ]
    },
    {
      "url": "/message_reactions",
      "method": "getMessageReactions",
      "httpMethod": "get",
      "tag": "message_reactions",
      "typeScriptTag": "messageReactions",
      "description": "List Message Reactions",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "messageId",
          "schema": "integer",
          "required": true,
          "description": "Message to return reactions for."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/message_reactions",
      "method": "postMessageReactions",
      "httpMethod": "post",
      "tag": "message_reactions",
      "typeScriptTag": "messageReactions",
      "description": "Create Message Reaction",
      "parameters": [
        {
          "name": "emoji",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Message Reactions"
        }
      ]
    },
    {
      "url": "/message_reactions/{id}",
      "method": "deleteMessageReactionsId",
      "httpMethod": "delete",
      "tag": "message_reactions",
      "typeScriptTag": "messageReactions",
      "description": "Delete Message Reaction",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Message Reaction ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/message_reactions/{id}",
      "method": "getMessageReactionsId",
      "httpMethod": "get",
      "tag": "message_reactions",
      "typeScriptTag": "messageReactions",
      "description": "Show Message Reaction",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Message Reaction ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Message Reactions"
        }
      ]
    },
    {
      "url": "/messages",
      "method": "getMessages",
      "httpMethod": "get",
      "tag": "messages",
      "typeScriptTag": "messages",
      "description": "List Messages",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "projectId",
          "schema": "integer",
          "required": true,
          "description": "Project for which to return messages."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/messages",
      "method": "postMessages",
      "httpMethod": "post",
      "tag": "messages",
      "typeScriptTag": "messages",
      "description": "Create Message",
      "parameters": [
        {
          "name": "body",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "project_id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "subject",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Messages"
        }
      ]
    },
    {
      "url": "/messages/{id}",
      "method": "deleteMessagesId",
      "httpMethod": "delete",
      "tag": "messages",
      "typeScriptTag": "messages",
      "description": "Delete Message",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Message ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/messages/{id}",
      "method": "getMessagesId",
      "httpMethod": "get",
      "tag": "messages",
      "typeScriptTag": "messages",
      "description": "Show Message",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Message ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Messages"
        }
      ]
    },
    {
      "url": "/messages/{id}",
      "method": "patchMessagesId",
      "httpMethod": "patch",
      "tag": "messages",
      "typeScriptTag": "messages",
      "description": "Update Message",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Message ID."
        },
        {
          "name": "body",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "project_id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "subject",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Messages"
        }
      ]
    },
    {
      "url": "/notifications",
      "method": "getNotifications",
      "httpMethod": "get",
      "tag": "notifications",
      "typeScriptTag": "notifications",
      "description": "List Notifications",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "DEPRECATED: Show notifications for this User ID. Use `filter[user_id]` instead."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[path]=desc`). Valid fields are `path`, `user_id` or `group_id`."
        },
        {
          "name": "groupId",
          "schema": "string",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `path`, `user_id` or `group_id`."
        },
        {
          "name": "filterPrefix",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`."
        },
        {
          "name": "path",
          "schema": "string",
          "required": false,
          "description": "Show notifications for this Path."
        },
        {
          "name": "includeAncestors",
          "schema": "boolean",
          "required": false,
          "description": "If `include_ancestors` is `true` and `path` is specified, include notifications for any parent paths. Ignored if `path` is not specified."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/notifications",
      "method": "postNotifications",
      "httpMethod": "post",
      "tag": "notifications",
      "typeScriptTag": "notifications",
      "description": "Create Notification",
      "parameters": [
        {
          "name": "group_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notify_on_copy",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "notify_on_delete",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "notify_on_download",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "notify_on_move",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "notify_on_upload",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "notify_user_actions",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "description": ""
        },
        {
          "name": "recursive",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "send_interval",
          "schema": "string",
          "description": ""
        },
        {
          "name": "trigger_by_share_recipients",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "triggering_filenames",
          "schema": "array",
          "description": ""
        },
        {
          "name": "triggering_group_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "triggering_user_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Notifications"
        }
      ]
    },
    {
      "url": "/notifications/{id}",
      "method": "deleteNotificationsId",
      "httpMethod": "delete",
      "tag": "notifications",
      "typeScriptTag": "notifications",
      "description": "Delete Notification",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Notification ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/notifications/{id}",
      "method": "getNotificationsId",
      "httpMethod": "get",
      "tag": "notifications",
      "typeScriptTag": "notifications",
      "description": "Show Notification",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Notification ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Notifications"
        }
      ]
    },
    {
      "url": "/notifications/{id}",
      "method": "patchNotificationsId",
      "httpMethod": "patch",
      "tag": "notifications",
      "typeScriptTag": "notifications",
      "description": "Update Notification",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Notification ID."
        },
        {
          "name": "message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notify_on_copy",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "notify_on_delete",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "notify_on_download",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "notify_on_move",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "notify_on_upload",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "notify_user_actions",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "recursive",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "send_interval",
          "schema": "string",
          "description": ""
        },
        {
          "name": "trigger_by_share_recipients",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "triggering_filenames",
          "schema": "array",
          "description": ""
        },
        {
          "name": "triggering_group_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "triggering_user_ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Notifications"
        }
      ]
    },
    {
      "url": "/payments",
      "method": "getPayments",
      "httpMethod": "get",
      "tag": "payments",
      "typeScriptTag": "payments",
      "description": "List Payments",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/payments/{id}",
      "method": "getPaymentsId",
      "httpMethod": "get",
      "tag": "payments",
      "typeScriptTag": "payments",
      "description": "Show Payment",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Payment ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Payments"
        }
      ]
    },
    {
      "url": "/permissions",
      "method": "getPermissions",
      "httpMethod": "get",
      "tag": "permissions",
      "typeScriptTag": "permissions",
      "description": "List Permissions",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[group_id]=desc`). Valid fields are `group_id`, `path`, `user_id` or `permission`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `group_id`, `user_id` or `path`. Valid field combinations are `[ group_id, path ]` and `[ user_id, path ]`."
        },
        {
          "name": "filterPrefix",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`."
        },
        {
          "name": "path",
          "schema": "string",
          "required": false,
          "description": "DEPRECATED: Permission path.  If provided, will scope permissions to this path. Use `filter[path]` instead."
        },
        {
          "name": "groupId",
          "schema": "string",
          "required": false,
          "description": "DEPRECATED: Group ID.  If provided, will scope permissions to this group. Use `filter[group_id]` instead.`"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": false,
          "description": "DEPRECATED: User ID.  If provided, will scope permissions to this user. Use `filter[user_id]` instead.`"
        },
        {
          "name": "includeGroups",
          "schema": "boolean",
          "required": false,
          "description": "If searching by user or group, also include user's permissions that are inherited from its groups?"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/permissions",
      "method": "postPermissions",
      "httpMethod": "post",
      "tag": "permissions",
      "typeScriptTag": "permissions",
      "description": "Create Permission",
      "parameters": [
        {
          "name": "group_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "description": ""
        },
        {
          "name": "permission",
          "schema": "string",
          "description": ""
        },
        {
          "name": "recursive",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Permissions"
        }
      ]
    },
    {
      "url": "/permissions/{id}",
      "method": "deletePermissionsId",
      "httpMethod": "delete",
      "tag": "permissions",
      "typeScriptTag": "permissions",
      "description": "Delete Permission",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Permission ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/priorities",
      "method": "getPriorities",
      "httpMethod": "get",
      "tag": "priorities",
      "typeScriptTag": "priorities",
      "description": "List Priorities",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "The path to query for priorities"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects",
      "method": "getProjects",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "List Projects",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/projects",
      "method": "postProjects",
      "httpMethod": "post",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Create Project",
      "parameters": [
        {
          "name": "global_access",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Projects"
        }
      ]
    },
    {
      "url": "/projects/{id}",
      "method": "deleteProjectsId",
      "httpMethod": "delete",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Delete Project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Project ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/projects/{id}",
      "method": "getProjectsId",
      "httpMethod": "get",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Show Project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Project ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Projects"
        }
      ]
    },
    {
      "url": "/projects/{id}",
      "method": "patchProjectsId",
      "httpMethod": "patch",
      "tag": "projects",
      "typeScriptTag": "projects",
      "description": "Update Project",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Project ID."
        },
        {
          "name": "global_access",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Projects"
        }
      ]
    },
    {
      "url": "/public_keys",
      "method": "getPublicKeys",
      "httpMethod": "get",
      "tag": "public_keys",
      "typeScriptTag": "publicKeys",
      "description": "List Public Keys",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/public_keys",
      "method": "postPublicKeys",
      "httpMethod": "post",
      "tag": "public_keys",
      "typeScriptTag": "publicKeys",
      "description": "Create Public Key",
      "parameters": [
        {
          "name": "public_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Public Keys"
        }
      ]
    },
    {
      "url": "/public_keys/{id}",
      "method": "deletePublicKeysId",
      "httpMethod": "delete",
      "tag": "public_keys",
      "typeScriptTag": "publicKeys",
      "description": "Delete Public Key",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Public Key ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/public_keys/{id}",
      "method": "getPublicKeysId",
      "httpMethod": "get",
      "tag": "public_keys",
      "typeScriptTag": "publicKeys",
      "description": "Show Public Key",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Public Key ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Public Keys"
        }
      ]
    },
    {
      "url": "/public_keys/{id}",
      "method": "patchPublicKeysId",
      "httpMethod": "patch",
      "tag": "public_keys",
      "typeScriptTag": "publicKeys",
      "description": "Update Public Key",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Public Key ID."
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Public Keys"
        }
      ]
    },
    {
      "url": "/remote_bandwidth_snapshots",
      "method": "getRemoteBandwidthSnapshots",
      "httpMethod": "get",
      "tag": "remote_bandwidth_snapshots",
      "typeScriptTag": "remoteBandwidthSnapshots",
      "description": "List Remote Bandwidth Snapshots",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[logged_at]=desc`). Valid fields are `logged_at`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `logged_at`."
        },
        {
          "name": "filterGt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `logged_at`."
        },
        {
          "name": "filterGteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `logged_at`."
        },
        {
          "name": "filterLt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `logged_at`."
        },
        {
          "name": "filterLteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `logged_at`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/remote_servers",
      "method": "getRemoteServers",
      "httpMethod": "get",
      "tag": "remote_servers",
      "typeScriptTag": "remoteServers",
      "description": "List Remote Servers",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/remote_servers",
      "method": "postRemoteServers",
      "httpMethod": "post",
      "tag": "remote_servers",
      "typeScriptTag": "remoteServers",
      "description": "Create Remote Server",
      "parameters": [
        {
          "name": "aws_access_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "aws_secret_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "azure_blob_storage_access_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "azure_blob_storage_account",
          "schema": "string",
          "description": ""
        },
        {
          "name": "azure_blob_storage_container",
          "schema": "string",
          "description": ""
        },
        {
          "name": "azure_blob_storage_sas_token",
          "schema": "string",
          "description": ""
        },
        {
          "name": "azure_files_storage_access_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "azure_files_storage_account",
          "schema": "string",
          "description": ""
        },
        {
          "name": "azure_files_storage_sas_token",
          "schema": "string",
          "description": ""
        },
        {
          "name": "azure_files_storage_share_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "backblaze_b2_application_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "backblaze_b2_bucket",
          "schema": "string",
          "description": ""
        },
        {
          "name": "backblaze_b2_key_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "backblaze_b2_s3_endpoint",
          "schema": "string",
          "description": ""
        },
        {
          "name": "enable_dedicated_ips",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "filebase_access_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "filebase_bucket",
          "schema": "string",
          "description": ""
        },
        {
          "name": "filebase_secret_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "files_agent_permission_set",
          "schema": "string",
          "description": ""
        },
        {
          "name": "files_agent_root",
          "schema": "string",
          "description": ""
        },
        {
          "name": "google_cloud_storage_bucket",
          "schema": "string",
          "description": ""
        },
        {
          "name": "google_cloud_storage_credentials_json",
          "schema": "string",
          "description": ""
        },
        {
          "name": "google_cloud_storage_project_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "description": ""
        },
        {
          "name": "max_connections",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "one_drive_account_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "pin_to_site_region",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "port",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "private_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "private_key_passphrase",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rackspace_api_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rackspace_container",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rackspace_region",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rackspace_username",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reset_authentication",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "s3_bucket",
          "schema": "string",
          "description": ""
        },
        {
          "name": "s3_compatible_access_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "s3_compatible_bucket",
          "schema": "string",
          "description": ""
        },
        {
          "name": "s3_compatible_endpoint",
          "schema": "string",
          "description": ""
        },
        {
          "name": "s3_compatible_region",
          "schema": "string",
          "description": ""
        },
        {
          "name": "s3_compatible_secret_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "s3_region",
          "schema": "string",
          "description": ""
        },
        {
          "name": "server_certificate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "server_host_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "server_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ssl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ssl_certificate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wasabi_access_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wasabi_bucket",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wasabi_region",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wasabi_secret_key",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Create Remote Server"
        }
      ]
    },
    {
      "url": "/remote_servers/{id}",
      "method": "deleteRemoteServersId",
      "httpMethod": "delete",
      "tag": "remote_servers",
      "typeScriptTag": "remoteServers",
      "description": "Delete Remote Server",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Remote Server ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/remote_servers/{id}",
      "method": "getRemoteServersId",
      "httpMethod": "get",
      "tag": "remote_servers",
      "typeScriptTag": "remoteServers",
      "description": "Show Remote Server",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Remote Server ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create Remote Server"
        }
      ]
    },
    {
      "url": "/remote_servers/{id}",
      "method": "patchRemoteServersId",
      "httpMethod": "patch",
      "tag": "remote_servers",
      "typeScriptTag": "remoteServers",
      "description": "Update Remote Server",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Remote Server ID."
        },
        {
          "name": "aws_access_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "aws_secret_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "azure_blob_storage_access_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "azure_blob_storage_account",
          "schema": "string",
          "description": ""
        },
        {
          "name": "azure_blob_storage_container",
          "schema": "string",
          "description": ""
        },
        {
          "name": "azure_blob_storage_sas_token",
          "schema": "string",
          "description": ""
        },
        {
          "name": "azure_files_storage_access_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "azure_files_storage_account",
          "schema": "string",
          "description": ""
        },
        {
          "name": "azure_files_storage_sas_token",
          "schema": "string",
          "description": ""
        },
        {
          "name": "azure_files_storage_share_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "backblaze_b2_application_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "backblaze_b2_bucket",
          "schema": "string",
          "description": ""
        },
        {
          "name": "backblaze_b2_key_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "backblaze_b2_s3_endpoint",
          "schema": "string",
          "description": ""
        },
        {
          "name": "enable_dedicated_ips",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "filebase_access_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "filebase_bucket",
          "schema": "string",
          "description": ""
        },
        {
          "name": "filebase_secret_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "files_agent_permission_set",
          "schema": "string",
          "description": ""
        },
        {
          "name": "files_agent_root",
          "schema": "string",
          "description": ""
        },
        {
          "name": "google_cloud_storage_bucket",
          "schema": "string",
          "description": ""
        },
        {
          "name": "google_cloud_storage_credentials_json",
          "schema": "string",
          "description": ""
        },
        {
          "name": "google_cloud_storage_project_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "description": ""
        },
        {
          "name": "max_connections",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "one_drive_account_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "pin_to_site_region",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "port",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "private_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "private_key_passphrase",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rackspace_api_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rackspace_container",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rackspace_region",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rackspace_username",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reset_authentication",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "s3_bucket",
          "schema": "string",
          "description": ""
        },
        {
          "name": "s3_compatible_access_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "s3_compatible_bucket",
          "schema": "string",
          "description": ""
        },
        {
          "name": "s3_compatible_endpoint",
          "schema": "string",
          "description": ""
        },
        {
          "name": "s3_compatible_region",
          "schema": "string",
          "description": ""
        },
        {
          "name": "s3_compatible_secret_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "s3_region",
          "schema": "string",
          "description": ""
        },
        {
          "name": "server_certificate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "server_host_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "server_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ssl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ssl_certificate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wasabi_access_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wasabi_bucket",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wasabi_region",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wasabi_secret_key",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create Remote Server"
        }
      ]
    },
    {
      "url": "/remote_servers/{id}/configuration_file",
      "method": "getRemoteServersIdConfigurationFile",
      "httpMethod": "get",
      "tag": "remote_servers",
      "typeScriptTag": "remoteServers",
      "description": "Download configuration file (required for some Remote Server integrations, such as the Files.com Agent)",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Remote Server ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Download configuration file (required for some Remote Server integrations, such as the Files.com Agent)"
        }
      ]
    },
    {
      "url": "/remote_servers/{id}/configuration_file",
      "method": "postRemoteServersIdConfigurationFile",
      "httpMethod": "post",
      "tag": "remote_servers",
      "typeScriptTag": "remoteServers",
      "description": "Post local changes, check in, and download configuration file (used by some Remote Server integrations, such as the Files.com Agent)",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Remote Server ID."
        },
        {
          "name": "api_token",
          "schema": "string",
          "description": ""
        },
        {
          "name": "config_version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "description": ""
        },
        {
          "name": "permission_set",
          "schema": "string",
          "description": ""
        },
        {
          "name": "port",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "private_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "public_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "root",
          "schema": "string",
          "description": ""
        },
        {
          "name": "server_host_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "subdomain",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Download configuration file (required for some Remote Server integrations, such as the Files.com Agent)"
        }
      ]
    },
    {
      "url": "/requests",
      "method": "getRequests",
      "httpMethod": "get",
      "tag": "requests",
      "typeScriptTag": "requests",
      "description": "List Requests",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[destination]=desc`). Valid fields are `destination`."
        },
        {
          "name": "mine",
          "schema": "boolean",
          "required": false,
          "description": "Only show requests of the current user?  (Defaults to true if current user is not a site admin.)"
        },
        {
          "name": "path",
          "schema": "string",
          "required": false,
          "description": "Path to show requests for.  If omitted, shows all paths. Send `/` to represent the root directory."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/requests",
      "method": "postRequests",
      "httpMethod": "post",
      "tag": "requests",
      "typeScriptTag": "requests",
      "description": "Create Request",
      "parameters": [
        {
          "name": "destination",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "group_ids",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "user_ids",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Requests"
        }
      ]
    },
    {
      "url": "/requests/folders/{path}",
      "method": "getRequestsFoldersPath",
      "httpMethod": "get",
      "tag": "requests",
      "typeScriptTag": "requests",
      "description": "List Requests",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[destination]=desc`). Valid fields are `destination`."
        },
        {
          "name": "mine",
          "schema": "boolean",
          "required": false,
          "description": "Only show requests of the current user?  (Defaults to true if current user is not a site admin.)"
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "Path to show requests for.  If omitted, shows all paths. Send `/` to represent the root directory."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/requests/{id}",
      "method": "deleteRequestsId",
      "httpMethod": "delete",
      "tag": "requests",
      "typeScriptTag": "requests",
      "description": "Delete Request",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Request ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/sessions",
      "method": "deleteSessions",
      "httpMethod": "delete",
      "tag": "sessions",
      "typeScriptTag": "sessions",
      "description": "Delete user session (log out)",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/sessions",
      "method": "postSessions",
      "httpMethod": "post",
      "tag": "sessions",
      "typeScriptTag": "sessions",
      "description": "Create user session (log in)",
      "parameters": [
        {
          "name": "otp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "partial_session_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Create user session (log in)"
        }
      ]
    },
    {
      "url": "/settings_changes",
      "method": "getSettingsChanges",
      "httpMethod": "get",
      "tag": "settings_changes",
      "typeScriptTag": "settingsChanges",
      "description": "List Settings Changes",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[api_key_id]=desc`). Valid fields are `api_key_id`, `created_at` or `user_id`."
        },
        {
          "name": "apiKeyId",
          "schema": "string",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value."
        },
        {
          "name": "userId",
          "schema": "string",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `api_key_id` and `user_id`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sftp_host_keys",
      "method": "getSftpHostKeys",
      "httpMethod": "get",
      "tag": "sftp_host_keys",
      "typeScriptTag": "sftpHostKeys",
      "description": "List Sftp Host Keys",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sftp_host_keys",
      "method": "postSftpHostKeys",
      "httpMethod": "post",
      "tag": "sftp_host_keys",
      "typeScriptTag": "sftpHostKeys",
      "description": "Create Sftp Host Key",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "private_key",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Create Sftp Host Key"
        }
      ]
    },
    {
      "url": "/sftp_host_keys/{id}",
      "method": "deleteSftpHostKeysId",
      "httpMethod": "delete",
      "tag": "sftp_host_keys",
      "typeScriptTag": "sftpHostKeys",
      "description": "Delete Sftp Host Key",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Sftp Host Key ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/sftp_host_keys/{id}",
      "method": "getSftpHostKeysId",
      "httpMethod": "get",
      "tag": "sftp_host_keys",
      "typeScriptTag": "sftpHostKeys",
      "description": "Show Sftp Host Key",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Sftp Host Key ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create Sftp Host Key"
        }
      ]
    },
    {
      "url": "/sftp_host_keys/{id}",
      "method": "patchSftpHostKeysId",
      "httpMethod": "patch",
      "tag": "sftp_host_keys",
      "typeScriptTag": "sftpHostKeys",
      "description": "Update Sftp Host Key",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Sftp Host Key ID."
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "private_key",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create Sftp Host Key"
        }
      ]
    },
    {
      "url": "/site",
      "method": "getSite",
      "httpMethod": "get",
      "tag": "site",
      "typeScriptTag": "site",
      "description": "Show site settings",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Show site settings"
        }
      ]
    },
    {
      "url": "/site",
      "method": "patchSite",
      "httpMethod": "patch",
      "tag": "site",
      "typeScriptTag": "site",
      "description": "Update site settings.",
      "parameters": [
        {
          "name": "active_sftp_host_key_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "allow_bundle_names",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "allowed_2fa_method_bypass_for_ftp_sftp_dav",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "allowed_2fa_method_sms",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "allowed_2fa_method_totp",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "allowed_2fa_method_u2f",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "allowed_2fa_method_webauthn",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "allowed_2fa_method_yubi",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "allowed_countries",
          "schema": "string",
          "description": ""
        },
        {
          "name": "allowed_ips",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ask_about_overwrites",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "bundle_activity_notifications",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bundle_expiration",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "bundle_password_required",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "bundle_registration_notifications",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bundle_require_share_recipient",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "bundle_upload_receipt_notifications",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bundle_watermark_attachment_delete",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "bundle_watermark_attachment_file",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bundle_watermark_value",
          "schema": "object",
          "description": ""
        },
        {
          "name": "color2_left",
          "schema": "string",
          "description": ""
        },
        {
          "name": "color2_link",
          "schema": "string",
          "description": ""
        },
        {
          "name": "color2_text",
          "schema": "string",
          "description": ""
        },
        {
          "name": "color2_top",
          "schema": "string",
          "description": ""
        },
        {
          "name": "color2_top_text",
          "schema": "string",
          "description": ""
        },
        {
          "name": "custom_namespace",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "days_to_retain_backups",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "default_time_zone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "desktop_app",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "desktop_app_session_ip_pinning",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "desktop_app_session_lifetime",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "disable_2fa_with_delay",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "disable_files_certificate_generation",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "disable_password_reset",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "disable_users_from_inactivity_period_days",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "disallowed_countries",
          "schema": "string",
          "description": ""
        },
        {
          "name": "domain",
          "schema": "string",
          "description": ""
        },
        {
          "name": "domain_hsts_header",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "domain_letsencrypt_chain",
          "schema": "string",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "folder_permissions_groups_only",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "ftp_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "icon128_delete",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "icon128_file",
          "schema": "string",
          "description": ""
        },
        {
          "name": "icon16_delete",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "icon16_file",
          "schema": "string",
          "description": ""
        },
        {
          "name": "icon32_delete",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "icon32_file",
          "schema": "string",
          "description": ""
        },
        {
          "name": "icon48_delete",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "icon48_file",
          "schema": "string",
          "description": ""
        },
        {
          "name": "immutable_files",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "include_password_in_welcome_email",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ldap_base_dn",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ldap_domain",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ldap_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "ldap_group_action",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ldap_group_exclusion",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ldap_group_inclusion",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ldap_host",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ldap_host_2",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ldap_host_3",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ldap_password_change",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ldap_password_change_confirmation",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ldap_port",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ldap_secure",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "ldap_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ldap_user_action",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ldap_user_include_groups",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ldap_username",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ldap_username_field",
          "schema": "string",
          "description": ""
        },
        {
          "name": "login_help_text",
          "schema": "string",
          "description": ""
        },
        {
          "name": "logo_delete",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "logo_file",
          "schema": "string",
          "description": ""
        },
        {
          "name": "max_prior_passwords",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "mobile_app",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "mobile_app_session_ip_pinning",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "mobile_app_session_lifetime",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "motd_text",
          "schema": "string",
          "description": ""
        },
        {
          "name": "motd_use_for_ftp",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "motd_use_for_sftp",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "non_sso_groups_allowed",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "non_sso_users_allowed",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "office_integration_available",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "office_integration_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "opt_out_global",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "password_min_length",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "password_require_letter",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "password_require_mixed",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "password_require_number",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "password_require_special",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "password_require_unbreached",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "password_requirements_apply_to_bundles",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "password_validity_days",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "pin_all_remote_servers_to_site_region",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "reply_to_email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "require_2fa",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "require_2fa_user_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "session_expiry",
          "schema": "number",
          "description": ""
        },
        {
          "name": "session_expiry_minutes",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "session_pinned_by_ip",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "sftp_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "sftp_host_key_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sftp_insecure_ciphers",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "sftp_user_root_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "sharing_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "show_request_access_link",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "site_footer",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_header",
          "schema": "string",
          "description": ""
        },
        {
          "name": "smtp_address",
          "schema": "string",
          "description": ""
        },
        {
          "name": "smtp_authentication",
          "schema": "string",
          "description": ""
        },
        {
          "name": "smtp_from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "smtp_password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "smtp_port",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "smtp_username",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ssl_required",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "subdomain",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tls_disabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "uploads_via_email_authentication",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "use_provided_modified_at",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "user_lockout",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "user_lockout_lock_period",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "user_lockout_tries",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "user_lockout_within",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "user_requests_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "user_requests_notify_admins",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "welcome_custom_text",
          "schema": "string",
          "description": ""
        },
        {
          "name": "welcome_email_cc",
          "schema": "string",
          "description": ""
        },
        {
          "name": "welcome_email_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "welcome_email_subject",
          "schema": "string",
          "description": ""
        },
        {
          "name": "welcome_screen",
          "schema": "string",
          "description": ""
        },
        {
          "name": "windows_mode_ftp",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Show site settings"
        }
      ]
    },
    {
      "url": "/site/api_keys",
      "method": "getSiteApiKeys",
      "httpMethod": "get",
      "tag": "site",
      "typeScriptTag": "site",
      "description": "List Api Keys",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[expires_at]=desc`). Valid fields are `expires_at`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `expires_at`."
        },
        {
          "name": "filterGt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `expires_at`."
        },
        {
          "name": "filterGteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `expires_at`."
        },
        {
          "name": "filterLt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `expires_at`."
        },
        {
          "name": "filterLteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `expires_at`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/site/api_keys",
      "method": "postSiteApiKeys",
      "httpMethod": "post",
      "tag": "site",
      "typeScriptTag": "site",
      "description": "Create Api Key",
      "parameters": [
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "expires_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "description": ""
        },
        {
          "name": "permission_set",
          "schema": "string",
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Api Keys"
        }
      ]
    },
    {
      "url": "/site/dns_records",
      "method": "getSiteDnsRecords",
      "httpMethod": "get",
      "tag": "site",
      "typeScriptTag": "site",
      "description": "Show site DNS configuration.",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/site/ip_addresses",
      "method": "getSiteIpAddresses",
      "httpMethod": "get",
      "tag": "site",
      "typeScriptTag": "site",
      "description": "List IP Addresses associated with the current site",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/site/test-webhook",
      "method": "postSiteTestWebhook",
      "httpMethod": "post",
      "tag": "site",
      "typeScriptTag": "site",
      "description": "Test webhook.",
      "parameters": [
        {
          "name": "action",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "body",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "encoding",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "headers",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "method",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Test webhook."
        }
      ]
    },
    {
      "url": "/site/usage",
      "method": "getSiteUsage",
      "httpMethod": "get",
      "tag": "site",
      "typeScriptTag": "site",
      "description": "Get the most recent usage snapshot (usage data for billing purposes) for a Site.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Usage Snapshots"
        }
      ]
    },
    {
      "url": "/sso_strategies",
      "method": "getSsoStrategies",
      "httpMethod": "get",
      "tag": "sso_strategies",
      "typeScriptTag": "ssoStrategies",
      "description": "List Sso Strategies",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sso_strategies/{id}",
      "method": "getSsoStrategiesId",
      "httpMethod": "get",
      "tag": "sso_strategies",
      "typeScriptTag": "ssoStrategies",
      "description": "Show Sso Strategy",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Sso Strategy ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Sso Strategies"
        }
      ]
    },
    {
      "url": "/sso_strategies/{id}/sync",
      "method": "postSsoStrategiesIdSync",
      "httpMethod": "post",
      "tag": "sso_strategies",
      "typeScriptTag": "ssoStrategies",
      "description": "Synchronize provisioning data with the SSO remote server.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Sso Strategy ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/styles/{path}",
      "method": "deleteStylesPath",
      "httpMethod": "delete",
      "tag": "styles",
      "typeScriptTag": "styles",
      "description": "Delete Style",
      "parameters": [
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "Style path."
        }
      ],
      "responses": []
    },
    {
      "url": "/styles/{path}",
      "method": "getStylesPath",
      "httpMethod": "get",
      "tag": "styles",
      "typeScriptTag": "styles",
      "description": "Show Style",
      "parameters": [
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "Style path."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Show Style"
        }
      ]
    },
    {
      "url": "/styles/{path}",
      "method": "patchStylesPath",
      "httpMethod": "patch",
      "tag": "styles",
      "typeScriptTag": "styles",
      "description": "Update Style",
      "parameters": [
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "Style path."
        },
        {
          "name": "file",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Show Style"
        }
      ]
    },
    {
      "url": "/usage_daily_snapshots",
      "method": "getUsageDailySnapshots",
      "httpMethod": "get",
      "tag": "usage_daily_snapshots",
      "typeScriptTag": "usageDailySnapshots",
      "description": "List Usage Daily Snapshots",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[date]=desc`). Valid fields are `date` and `usage_snapshot_id`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `date` and `usage_snapshot_id`. Valid field combinations are `[ usage_snapshot_id, date ]`."
        },
        {
          "name": "filterGt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `date`."
        },
        {
          "name": "filterGteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `date`."
        },
        {
          "name": "filterLt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `date`."
        },
        {
          "name": "filterLteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `date`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/usage_snapshots",
      "method": "getUsageSnapshots",
      "httpMethod": "get",
      "tag": "usage_snapshots",
      "typeScriptTag": "usageSnapshots",
      "description": "List Usage Snapshots",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/user",
      "method": "patchUser",
      "httpMethod": "patch",
      "tag": "user",
      "typeScriptTag": "user",
      "description": "Update User",
      "parameters": [
        {
          "name": "allowed_ips",
          "schema": "string",
          "description": ""
        },
        {
          "name": "announcements_read",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "attachments_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "authenticate_until",
          "schema": "string",
          "description": ""
        },
        {
          "name": "authentication_method",
          "schema": "string",
          "description": ""
        },
        {
          "name": "avatar_delete",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "avatar_file",
          "schema": "string",
          "description": ""
        },
        {
          "name": "billing_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "bypass_inactive_disable",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "bypass_site_allowed_ips",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "change_password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "change_password_confirmation",
          "schema": "string",
          "description": ""
        },
        {
          "name": "company",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dav_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "disabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ftp_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "grant_permission",
          "schema": "string",
          "description": ""
        },
        {
          "name": "group_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "group_ids",
          "schema": "string",
          "description": ""
        },
        {
          "name": "header_text",
          "schema": "string",
          "description": ""
        },
        {
          "name": "imported_password_hash",
          "schema": "string",
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notification_daily_send_time",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "office_integration_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password_confirmation",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password_validity_days",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "receive_admin_alerts",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "require_2fa",
          "schema": "string",
          "description": ""
        },
        {
          "name": "require_password_change",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "restapi_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "self_managed",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "sftp_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "site_admin",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "skip_welcome_screen",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "ssl_required",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sso_strategy_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "subscribe_to_newsletter",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "time_zone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "user_root",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create User"
        }
      ]
    },
    {
      "url": "/user/api_keys",
      "method": "getUserApiKeys",
      "httpMethod": "get",
      "tag": "user",
      "typeScriptTag": "user",
      "description": "List Api Keys",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[expires_at]=desc`). Valid fields are `expires_at`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `expires_at`."
        },
        {
          "name": "filterGt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `expires_at`."
        },
        {
          "name": "filterGteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `expires_at`."
        },
        {
          "name": "filterLt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `expires_at`."
        },
        {
          "name": "filterLteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `expires_at`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/user/api_keys",
      "method": "postUserApiKeys",
      "httpMethod": "post",
      "tag": "user",
      "typeScriptTag": "user",
      "description": "Create Api Key",
      "parameters": [
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "expires_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "description": ""
        },
        {
          "name": "permission_set",
          "schema": "string",
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Api Keys"
        }
      ]
    },
    {
      "url": "/user/groups",
      "method": "getUserGroups",
      "httpMethod": "get",
      "tag": "user",
      "typeScriptTag": "user",
      "description": "List Group Users",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID.  If provided, will return group_users of this user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "groupId",
          "schema": "integer",
          "required": false,
          "description": "Group ID.  If provided, will return group_users of this group."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/user/public_keys",
      "method": "getUserPublicKeys",
      "httpMethod": "get",
      "tag": "user",
      "typeScriptTag": "user",
      "description": "List Public Keys",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/user/public_keys",
      "method": "postUserPublicKeys",
      "httpMethod": "post",
      "tag": "user",
      "typeScriptTag": "user",
      "description": "Create Public Key",
      "parameters": [
        {
          "name": "public_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Public Keys"
        }
      ]
    },
    {
      "url": "/user_cipher_uses",
      "method": "getUserCipherUses",
      "httpMethod": "get",
      "tag": "user_cipher_uses",
      "typeScriptTag": "userCipherUses",
      "description": "List User Cipher Uses",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/user_requests",
      "method": "getUserRequests",
      "httpMethod": "get",
      "tag": "user_requests",
      "typeScriptTag": "userRequests",
      "description": "List User Requests",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/user_requests",
      "method": "postUserRequests",
      "httpMethod": "post",
      "tag": "user_requests",
      "typeScriptTag": "userRequests",
      "description": "Create User Request",
      "parameters": [
        {
          "name": "details",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Create User Request"
        }
      ]
    },
    {
      "url": "/user_requests/{id}",
      "method": "deleteUserRequestsId",
      "httpMethod": "delete",
      "tag": "user_requests",
      "typeScriptTag": "userRequests",
      "description": "Delete User Request",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "User Request ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/user_requests/{id}",
      "method": "getUserRequestsId",
      "httpMethod": "get",
      "tag": "user_requests",
      "typeScriptTag": "userRequests",
      "description": "Show User Request",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "User Request ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create User Request"
        }
      ]
    },
    {
      "url": "/users",
      "method": "getUsers",
      "httpMethod": "get",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "List Users",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[authenticate_until]=desc`). Valid fields are `authenticate_until`, `active`, `email`, `last_desktop_login_at`, `last_login_at`, `username`, `company`, `name`, `site_admin`, `receive_admin_alerts`, `password_validity_days`, `ssl_required` or `not_site_admin`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `username`, `email`, `company`, `site_admin`, `password_validity_days`, `ssl_required`, `last_login_at`, `authenticate_until` or `not_site_admin`. Valid field combinations are `[ not_site_admin, username ]`."
        },
        {
          "name": "filterGt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `password_validity_days`, `last_login_at` or `authenticate_until`."
        },
        {
          "name": "filterGteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `password_validity_days`, `last_login_at` or `authenticate_until`."
        },
        {
          "name": "filterPrefix",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `username`, `email` or `company`."
        },
        {
          "name": "filterLt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `password_validity_days`, `last_login_at` or `authenticate_until`."
        },
        {
          "name": "filterLteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `password_validity_days`, `last_login_at` or `authenticate_until`."
        },
        {
          "name": "ids",
          "schema": "string",
          "required": false,
          "description": "comma-separated list of User IDs"
        },
        {
          "name": "q[username]",
          "schema": "string",
          "required": false,
          "description": "List users matching username."
        },
        {
          "name": "q[email]",
          "schema": "string",
          "required": false,
          "description": "List users matching email."
        },
        {
          "name": "q[notes]",
          "schema": "string",
          "required": false,
          "description": "List users matching notes field."
        },
        {
          "name": "q[admin]",
          "schema": "string",
          "required": false,
          "description": "If `true`, list only admin users."
        },
        {
          "name": "q[allowedIps]",
          "schema": "string",
          "required": false,
          "description": "If set, list only users with overridden allowed IP setting."
        },
        {
          "name": "q[passwordValidityDays]",
          "schema": "string",
          "required": false,
          "description": "If set, list only users with overridden password validity days setting."
        },
        {
          "name": "q[sslRequired]",
          "schema": "string",
          "required": false,
          "description": "If set, list only users with overridden SSL required setting."
        },
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Searches for partial matches of name, username, or email."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users",
      "method": "postUsers",
      "httpMethod": "post",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Create User",
      "parameters": [
        {
          "name": "allowed_ips",
          "schema": "string",
          "description": ""
        },
        {
          "name": "announcements_read",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "attachments_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "authenticate_until",
          "schema": "string",
          "description": ""
        },
        {
          "name": "authentication_method",
          "schema": "string",
          "description": ""
        },
        {
          "name": "avatar_delete",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "avatar_file",
          "schema": "string",
          "description": ""
        },
        {
          "name": "billing_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "bypass_inactive_disable",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "bypass_site_allowed_ips",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "change_password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "change_password_confirmation",
          "schema": "string",
          "description": ""
        },
        {
          "name": "company",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dav_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "disabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ftp_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "grant_permission",
          "schema": "string",
          "description": ""
        },
        {
          "name": "group_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "group_ids",
          "schema": "string",
          "description": ""
        },
        {
          "name": "header_text",
          "schema": "string",
          "description": ""
        },
        {
          "name": "imported_password_hash",
          "schema": "string",
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notification_daily_send_time",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "office_integration_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password_confirmation",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password_validity_days",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "receive_admin_alerts",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "require_2fa",
          "schema": "string",
          "description": ""
        },
        {
          "name": "require_password_change",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "restapi_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "self_managed",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "sftp_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "site_admin",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "skip_welcome_screen",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "ssl_required",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sso_strategy_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "subscribe_to_newsletter",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "time_zone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "user_root",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Create User"
        }
      ]
    },
    {
      "url": "/users/{id}",
      "method": "deleteUsersId",
      "httpMethod": "delete",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Delete User",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "User ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/users/{id}",
      "method": "getUsersId",
      "httpMethod": "get",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Show User",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "User ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create User"
        }
      ]
    },
    {
      "url": "/users/{id}",
      "method": "patchUsersId",
      "httpMethod": "patch",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Update User",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "User ID."
        },
        {
          "name": "allowed_ips",
          "schema": "string",
          "description": ""
        },
        {
          "name": "announcements_read",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "attachments_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "authenticate_until",
          "schema": "string",
          "description": ""
        },
        {
          "name": "authentication_method",
          "schema": "string",
          "description": ""
        },
        {
          "name": "avatar_delete",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "avatar_file",
          "schema": "string",
          "description": ""
        },
        {
          "name": "billing_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "bypass_inactive_disable",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "bypass_site_allowed_ips",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "change_password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "change_password_confirmation",
          "schema": "string",
          "description": ""
        },
        {
          "name": "company",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dav_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "disabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ftp_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "grant_permission",
          "schema": "string",
          "description": ""
        },
        {
          "name": "group_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "group_ids",
          "schema": "string",
          "description": ""
        },
        {
          "name": "header_text",
          "schema": "string",
          "description": ""
        },
        {
          "name": "imported_password_hash",
          "schema": "string",
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notification_daily_send_time",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "office_integration_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password_confirmation",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password_validity_days",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "receive_admin_alerts",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "require_2fa",
          "schema": "string",
          "description": ""
        },
        {
          "name": "require_password_change",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "restapi_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "self_managed",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "sftp_permission",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "site_admin",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "skip_welcome_screen",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "ssl_required",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sso_strategy_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "subscribe_to_newsletter",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "time_zone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "user_root",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Create User"
        }
      ]
    },
    {
      "url": "/users/{id}/2fa/reset",
      "method": "postUsersId2FaReset",
      "httpMethod": "post",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Trigger 2FA Reset process for user who has lost access to their existing 2FA methods.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "User ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/users/{id}/resend_welcome_email",
      "method": "postUsersIdResendWelcomeEmail",
      "httpMethod": "post",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Resend user welcome email",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "User ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/users/{id}/unlock",
      "method": "postUsersIdUnlock",
      "httpMethod": "post",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Unlock user who has been locked out due to failed logins.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "User ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/users/{user_id}/api_keys",
      "method": "getUsersUserIdApiKeys",
      "httpMethod": "get",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "List Api Keys",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[expires_at]=desc`). Valid fields are `expires_at`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `expires_at`."
        },
        {
          "name": "filterGt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `expires_at`."
        },
        {
          "name": "filterGteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `expires_at`."
        },
        {
          "name": "filterLt",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `expires_at`."
        },
        {
          "name": "filterLteq",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `expires_at`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/api_keys",
      "method": "postUsersUserIdApiKeys",
      "httpMethod": "post",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Create Api Key",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "expires_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "description": ""
        },
        {
          "name": "permission_set",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Api Keys"
        }
      ]
    },
    {
      "url": "/users/{user_id}/cipher_uses",
      "method": "getUsersUserIdCipherUses",
      "httpMethod": "get",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "List User Cipher Uses",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/groups",
      "method": "getUsersUserIdGroups",
      "httpMethod": "get",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "List Group Users",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID.  If provided, will return group_users of this user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "groupId",
          "schema": "integer",
          "required": false,
          "description": "Group ID.  If provided, will return group_users of this group."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/permissions",
      "method": "getUsersUserIdPermissions",
      "httpMethod": "get",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "List Permissions",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        },
        {
          "name": "sortBy",
          "schema": "object",
          "required": false,
          "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[group_id]=desc`). Valid fields are `group_id`, `path`, `user_id` or `permission`."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `group_id`, `user_id` or `path`. Valid field combinations are `[ group_id, path ]` and `[ user_id, path ]`."
        },
        {
          "name": "filterPrefix",
          "schema": "object",
          "required": false,
          "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`."
        },
        {
          "name": "path",
          "schema": "string",
          "required": false,
          "description": "DEPRECATED: Permission path.  If provided, will scope permissions to this path. Use `filter[path]` instead."
        },
        {
          "name": "groupId",
          "schema": "string",
          "required": false,
          "description": "DEPRECATED: Group ID.  If provided, will scope permissions to this group. Use `filter[group_id]` instead.`"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "DEPRECATED: User ID.  If provided, will scope permissions to this user. Use `filter[user_id]` instead.`"
        },
        {
          "name": "includeGroups",
          "schema": "boolean",
          "required": false,
          "description": "If searching by user or group, also include user's permissions that are inherited from its groups?"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/public_keys",
      "method": "getUsersUserIdPublicKeys",
      "httpMethod": "get",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "List Public Keys",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/public_keys",
      "method": "postUsersUserIdPublicKeys",
      "httpMethod": "post",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Create Public Key",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID.  Provide a value of `0` to operate the current session's user."
        },
        {
          "name": "public_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List Public Keys"
        }
      ]
    },
    {
      "url": "/webhook_tests",
      "method": "postWebhookTests",
      "httpMethod": "post",
      "tag": "webhook_tests",
      "typeScriptTag": "webhookTests",
      "description": "Create Webhook Test",
      "parameters": [
        {
          "name": "action",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "body",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "encoding",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "file_as_body",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "file_form_field",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "headers",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "method",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "raw_body",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Create Webhook Test"
        }
      ]
    }
  ],
  "apiBaseUrl": "//app.files.com/api/rest/v1",
  "apiTitle": "Files.com API",
  "endpoints": 134,
  "sdkMethods": 222,
  "schemas": 74,
  "parameters": 1311,
  "contactEmail": "support@files.com",
  "difficultyScore": 586.75,
  "difficulty": "Very Hard"
}