{
  "providerName": "contribly.com",
  "openApiRaw": "https://api.contribly.com/1/swagger.json",
  "homepage": "contribly.com",
  "apiVersion": "1.0.0",
  "methods": [
    {
      "url": "/artifact-formats",
      "method": "/artifactFormatsGet",
      "httpMethod": "get",
      "tag": "info",
      "description": "Artifact formats",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/assignments",
      "method": "/assignmentsGet",
      "httpMethod": "get",
      "tag": "assignment",
      "description": "List assignments",
      "parameters": [
        {
          "name": "ownedBy",
          "schema": "string",
          "required": false,
          "description": "Restrict results to assignments owned by this user."
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Pagination page"
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination page size"
        },
        {
          "name": "q",
          "schema": "string",
          "required": false,
          "description": "Restrict results to assignments whose name or description matches this keyword."
        },
        {
          "name": "urlWords",
          "schema": "string",
          "required": false,
          "description": "Select an assignment by urlWords."
        },
        {
          "name": "open",
          "schema": "boolean",
          "required": false,
          "description": "Select open or closed assignments"
        },
        {
          "name": "alwaysOpen",
          "schema": "boolean",
          "required": false,
          "description": "Select assignments with no closing date."
        },
        {
          "name": "tag",
          "schema": "string",
          "required": false,
          "description": "Restrict results to assignments which are tagged with this tag."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Restrict results to the assignment (or potentially assignments) with this exact name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/assignments",
      "method": "/assignmentsPost",
      "httpMethod": "post",
      "tag": "assignment",
      "description": "Create a new assignment",
      "parameters": [
        {
          "name": "allowsAnonymousContributions",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "cover",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "embargo",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ends",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "featured",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mediaRequired",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "moderator",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "receiptMessage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "starts",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "urlWords",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/assignments/{id}",
      "method": "/assignments/{id}Delete",
      "httpMethod": "delete",
      "tag": "assignment",
      "description": "Delete this assignment and all of it's contributions",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the assignment to return"
        }
      ],
      "responses": []
    },
    {
      "url": "/assignments/{id}",
      "method": "/assignments/{id}Get",
      "httpMethod": "get",
      "tag": "assignment",
      "description": "Get a single assigment by id",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the assignment to return"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/change-log",
      "method": "/changeLogGet",
      "httpMethod": "get",
      "tag": "info",
      "description": "Recent changes",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/contribution-refinement-types",
      "method": "/contributionRefinementTypesGet",
      "httpMethod": "get",
      "tag": "contribution",
      "description": "List valid contribution refinement types",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/contribution-refinements",
      "method": "/contributionRefinementsGet",
      "httpMethod": "get",
      "tag": "contribution",
      "description": "List contribution refinement options",
      "parameters": [
        {
          "name": "assignment",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions submitted to this assignment."
        },
        {
          "name": "country",
          "schema": "string",
          "required": false,
          "description": "Limit results to contributions which have a publicly visible location within the given country (specified by two letter country code)."
        },
        {
          "name": "createdBefore",
          "schema": "string",
          "required": false,
          "description": "Limit results to contributions created before this date time."
        },
        {
          "name": "createdAfter",
          "schema": "string",
          "required": false,
          "description": "Limit results to contributions created after this date time."
        },
        {
          "name": "geohash",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions which have specified a location which falls within this geohash (or comma seperated list of multiple geohashes)"
        },
        {
          "name": "hasLocation",
          "schema": "boolean",
          "required": false,
          "description": "Restrict results to contributions which have a publicly visible location."
        },
        {
          "name": "latLong",
          "schema": "string",
          "required": false,
          "description": "Limit results to contributions with location near this latitude and longitude (comma seperated lat/long pair). Also see radius"
        },
        {
          "name": "radius",
          "schema": "number",
          "required": false,
          "description": "When limiting result by location with the latLong parameter, specify the radius in kilometers."
        },
        {
          "name": "mediaType",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions which include a media file of the given type (ie. image / video)"
        },
        {
          "name": "ownedBy",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions which are fall under the jurisdiction by this user."
        },
        {
          "name": "q",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions whose headline text matches this keyword."
        },
        {
          "name": "urlWords",
          "schema": "string",
          "required": false,
          "description": "Locate a specific contribution by URL words"
        },
        {
          "name": "user",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions by this user identified by id."
        },
        {
          "name": "refinements",
          "schema": "string",
          "required": false,
          "description": "Comma seperated list of refinement names."
        },
        {
          "name": "refinementSize",
          "schema": "number",
          "required": false,
          "description": "Number of refinement options to return."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/contributions",
      "method": "/contributionsGet",
      "httpMethod": "get",
      "tag": "contribution",
      "description": "List contributions",
      "parameters": [
        {
          "name": "assignment",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions submitted to this assignment."
        },
        {
          "name": "country",
          "schema": "string",
          "required": false,
          "description": "Limit results to contributions which have a publicly visible location within the given country (specified by two letter country code)."
        },
        {
          "name": "createdBefore",
          "schema": "string",
          "required": false,
          "description": "Limit results to contributions created before this date time."
        },
        {
          "name": "createdAfter",
          "schema": "string",
          "required": false,
          "description": "Limit results to contributions created after this date time."
        },
        {
          "name": "createdDay",
          "schema": "string",
          "required": false,
          "description": "Limit results to contributions created on this day."
        },
        {
          "name": "createdMonth",
          "schema": "string",
          "required": false,
          "description": "Limit results to contributions created during this month."
        },
        {
          "name": "geohash",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions which have specified a location which falls within this geohash (or comma seperated list of multiple geohashes)"
        },
        {
          "name": "hasLocation",
          "schema": "boolean",
          "required": false,
          "description": "Restrict results to contributions which have a publicly visible location."
        },
        {
          "name": "latLong",
          "schema": "string",
          "required": false,
          "description": "Limit results to contributions with location near this latitude and longitude (comma seperated lat/long pair). Also see radius"
        },
        {
          "name": "radius",
          "schema": "number",
          "required": false,
          "description": "When limiting result by location with the latLong parameter, specify the radius in kilometers."
        },
        {
          "name": "mediaType",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions which include a media file of the given type (ie. image / video)"
        },
        {
          "name": "ownedBy",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions which are fall under the jurisdiction by this user."
        },
        {
          "name": "q",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions whose headline text matches this keyword."
        },
        {
          "name": "urlWords",
          "schema": "string",
          "required": false,
          "description": "Locate a specific contribution by URL words"
        },
        {
          "name": "user",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions by this user identified by id."
        },
        {
          "name": "ids",
          "schema": "string",
          "required": false,
          "description": "Restrict results to a list of specific contributions identified by a comma seperated list of ids."
        },
        {
          "name": "format",
          "schema": "string",
          "required": false,
          "description": "Select output format. 'json' or 'rss'. Defaults to JSON."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/contributions",
      "method": "/contributionsPost",
      "httpMethod": "post",
      "tag": "contribution",
      "description": "Create a new contribution",
      "parameters": [
        {
          "name": "assignment",
          "schema": "object",
          "description": ""
        },
        {
          "name": "attribution",
          "schema": "string",
          "description": ""
        },
        {
          "name": "body",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created",
          "schema": "string",
          "description": ""
        },
        {
          "name": "headline",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mediaUsages",
          "schema": "array",
          "description": ""
        },
        {
          "name": "moderationHistory",
          "schema": "array",
          "description": ""
        },
        {
          "name": "place",
          "schema": "object",
          "description": ""
        },
        {
          "name": "urlWords",
          "schema": "string",
          "description": ""
        },
        {
          "name": "via",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/contributions/{id}",
      "method": "/contributions/{id}Delete",
      "httpMethod": "delete",
      "tag": "contribution",
      "description": "Delete this contribution",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the contribution to delete"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/contributions/{id}",
      "method": "/contributions/{id}Get",
      "httpMethod": "get",
      "tag": "contribution",
      "description": "Get a single contribution by id",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the contribution to return"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/contributions/{id}/flag",
      "method": "/contributions/{id}/flagPost",
      "httpMethod": "post",
      "tag": "contribution",
      "description": "Raise a flag against this contribution",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the contribution to flag"
        },
        {
          "name": "date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/contributions/{id}/like",
      "method": "/contributions/{id}/likePost",
      "httpMethod": "post",
      "tag": "contribution",
      "description": "Allows a user to mark a contribution as liked",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the contribution"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/contributions/{id}/likes",
      "method": "/contributions/{id}/likesGet",
      "httpMethod": "get",
      "tag": "contribution",
      "description": "List users who have liked this contributions",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the contribution"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/contributions/{id}/moderate",
      "method": "/contributions/{id}/moderatePost",
      "httpMethod": "post",
      "tag": "contribution",
      "description": "Perform a moderation action on this contribution",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the contribution to moderate"
        },
        {
          "name": "action",
          "schema": "object",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/credentials",
      "method": "/credentialsGet",
      "httpMethod": "get",
      "tag": "auth",
      "description": "List the credentials associated with the authenticated user.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/event-types",
      "method": "/eventTypesGet",
      "httpMethod": "get",
      "tag": "info",
      "description": "Event types",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/export",
      "method": "/exportPost",
      "httpMethod": "post",
      "tag": "contribution",
      "description": "Export contributions.",
      "parameters": [
        {
          "name": "assignment",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions submitted to this assignment."
        },
        {
          "name": "country",
          "schema": "string",
          "required": false,
          "description": "Limit results to contributions which have a publicly visible location within the given country (specified by two letter country code)."
        },
        {
          "name": "createdBefore",
          "schema": "string",
          "required": false,
          "description": "Limit results to contributions created before this date time."
        },
        {
          "name": "createdAfter",
          "schema": "string",
          "required": false,
          "description": "Limit results to contributions created after this date time."
        },
        {
          "name": "geohash",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions which have specified a location which falls within this geohash (or comma seperated list of multiple geohashes)"
        },
        {
          "name": "hasLocation",
          "schema": "boolean",
          "required": false,
          "description": "Restrict results to contributions which have a publicly visible location."
        },
        {
          "name": "latLong",
          "schema": "string",
          "required": false,
          "description": "Limit results to contributions with location near this latitude and longitude (comma seperated lat/long pair). Also see radius"
        },
        {
          "name": "radius",
          "schema": "number",
          "required": false,
          "description": "When limiting result by location with the latLong parameter, specify the radius in kilometers."
        },
        {
          "name": "mediaType",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions which include a media file of the given type (ie. image / video)"
        },
        {
          "name": "ownedBy",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions which are fall under the jurisdiction by this user."
        },
        {
          "name": "q",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions whose headline text matches this keyword."
        },
        {
          "name": "urlWords",
          "schema": "string",
          "required": false,
          "description": "Locate a specific contribution by URL words"
        },
        {
          "name": "user",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions by this user identified by id."
        },
        {
          "name": "tagged",
          "schema": "boolean",
          "required": false,
          "description": "Should exported media files be tagged with metadata. Deprecated; use format instead."
        },
        {
          "name": "combined",
          "schema": "boolean",
          "required": false,
          "description": "Included a combined file with all contribution text."
        },
        {
          "name": "individual",
          "schema": "boolean",
          "required": false,
          "description": "Include individual text files for each contribution."
        },
        {
          "name": "format",
          "schema": "string",
          "required": false,
          "description": "Media format to export; none, fullsize, tagged or original."
        },
        {
          "name": "json",
          "schema": "boolean",
          "required": false,
          "description": "Include raw JSON for each contribution."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/export-summary",
      "method": "/exportSummaryPost",
      "httpMethod": "post",
      "tag": "contribution",
      "description": "Export contributions preflight summary.",
      "parameters": [
        {
          "name": "assignment",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions submitted to this assignment."
        },
        {
          "name": "country",
          "schema": "string",
          "required": false,
          "description": "Limit results to contributions which have a publicly visible location within the given country (specified by two letter country code)."
        },
        {
          "name": "createdBefore",
          "schema": "string",
          "required": false,
          "description": "Limit results to contributions created before this date time."
        },
        {
          "name": "createdAfter",
          "schema": "string",
          "required": false,
          "description": "Limit results to contributions created after this date time."
        },
        {
          "name": "geohash",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions which have specified a location which falls within this geohash (or comma seperated list of multiple geohashes)"
        },
        {
          "name": "hasLocation",
          "schema": "boolean",
          "required": false,
          "description": "Restrict results to contributions which have a publicly visible location."
        },
        {
          "name": "latLong",
          "schema": "string",
          "required": false,
          "description": "Limit results to contributions with location near this latitude and longitude (comma seperated lat/long pair). Also see radius"
        },
        {
          "name": "radius",
          "schema": "number",
          "required": false,
          "description": "When limiting result by location with the latLong parameter, specify the radius in kilometers."
        },
        {
          "name": "mediaType",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions which include a media file of the given type (ie. image / video)"
        },
        {
          "name": "ownedBy",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions which are fall under the jurisdiction by this user."
        },
        {
          "name": "q",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions whose headline text matches this keyword."
        },
        {
          "name": "urlWords",
          "schema": "string",
          "required": false,
          "description": "Locate a specific contribution by URL words"
        },
        {
          "name": "user",
          "schema": "string",
          "required": false,
          "description": "Restrict results to contributions by this user identified by id."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/exports/{id}",
      "method": "/exports/{id}Get",
      "httpMethod": "get",
      "tag": "contribution",
      "description": "Get a single export job; poll to follow export progress.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the export job to return"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/form-responses",
      "method": "/formResponsesGet",
      "httpMethod": "get",
      "tag": "form",
      "description": "List form responses",
      "parameters": [
        {
          "name": "user",
          "schema": "string",
          "required": false,
          "description": "Restrict results to responses submitted by this user."
        },
        {
          "name": "form",
          "schema": "string",
          "required": false,
          "description": "Restrict results to responses submitted to this form."
        },
        {
          "name": "contribution",
          "schema": "string",
          "required": false,
          "description": "Restrict results to responses relating to this contribution."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/form-responses",
      "method": "/formResponsesPost",
      "httpMethod": "post",
      "tag": "form",
      "description": "Submit a response to a form",
      "parameters": [
        {
          "name": "contribution",
          "schema": "string",
          "description": ""
        },
        {
          "name": "form",
          "schema": "string",
          "description": ""
        },
        {
          "name": "responses",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/form-responses/{id}",
      "method": "/formResponses/{id}Get",
      "httpMethod": "get",
      "tag": "form",
      "description": "Get a single form response by id",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the assignment to return"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms",
      "method": "/formsGet",
      "httpMethod": "get",
      "tag": "form",
      "description": "List forms",
      "parameters": [
        {
          "name": "ownedBy",
          "schema": "string",
          "required": true,
          "description": "Restrict results to forms owned by this user."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms",
      "method": "/formsPost",
      "httpMethod": "post",
      "tag": "form",
      "description": "Create a form",
      "parameters": [
        {
          "name": "callToAction",
          "schema": "string",
          "description": ""
        },
        {
          "name": "cssUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "fields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "heading",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "noCss",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/{id}",
      "method": "/forms/{id}Delete",
      "httpMethod": "delete",
      "tag": "form",
      "description": "Delete this form and all of it's responses.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the form to delete"
        }
      ],
      "responses": []
    },
    {
      "url": "/forms/{id}",
      "method": "/forms/{id}Get",
      "httpMethod": "get",
      "tag": "form",
      "description": "Get a single form by id",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the form to return"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/media",
      "method": "/mediaPost",
      "httpMethod": "post",
      "tag": "media",
      "description": "Submit a new media file",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/notifications/contributions/{id}/preview",
      "method": "/notifications/contributions/{id}/previewGet",
      "httpMethod": "get",
      "tag": "notifications",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the contribution to preview a notification for"
        },
        {
          "name": "message",
          "schema": "string",
          "required": true,
          "description": "Type of message to preview."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/scopes",
      "method": "/scopesGet",
      "httpMethod": "get",
      "tag": "auth",
      "description": "Scopes",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/subscription-types",
      "method": "/subscriptionTypesGet",
      "httpMethod": "get",
      "tag": "subscriptions",
      "description": "Subscription types",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/subscriptions",
      "method": "/subscriptionsGet",
      "httpMethod": "get",
      "tag": "subscriptions",
      "description": "List subscriptions for the authorised user.",
      "parameters": [
        {
          "name": "assignment",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "includeBody",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "includeThumbenail",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "slackChannel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "types",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/subscriptions/{id}",
      "method": "/subscriptions/{id}Delete",
      "httpMethod": "delete",
      "tag": "subscriptions",
      "description": "Delete a subscription.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the subscription to delete"
        }
      ],
      "responses": []
    },
    {
      "url": "/tags",
      "method": "/tagsGet",
      "httpMethod": "get",
      "tag": "tag",
      "description": "List tags",
      "parameters": [
        {
          "name": "ownedBy",
          "schema": "string",
          "required": false,
          "description": "Restrict results to those owned by this user."
        },
        {
          "name": "tagSet",
          "schema": "string",
          "required": false,
          "description": "Restrict results to tags belonging to this tag set."
        },
        {
          "name": "urlWords",
          "schema": "string",
          "required": false,
          "description": "Restrict results by urlWords. Should be used with ownedBy when searching for one of your own tags."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/tags",
      "method": "/tagsPost",
      "httpMethod": "post",
      "tag": "tag",
      "description": "Create a new tag",
      "parameters": [
        {
          "name": "colour",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "tagSet",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "urlWords",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/tags/{id}",
      "method": "/tags/{id}Get",
      "httpMethod": "get",
      "tag": "tag",
      "description": "Retrieve a single tag by id",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the tag to return"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/tagsets",
      "method": "/tagsetsGet",
      "httpMethod": "get",
      "tag": "tag",
      "description": "List tag sets",
      "parameters": [
        {
          "name": "ownedBy",
          "schema": "string",
          "required": false,
          "description": "Restrict results to those owned by this user."
        },
        {
          "name": "urlWords",
          "schema": "string",
          "required": false,
          "description": "Restrict results by urlWords. Should be used with ownedBy when searching for one of your own tag sets."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/tagsets",
      "method": "/tagsetsPost",
      "httpMethod": "post",
      "tag": "tag",
      "description": "Create a new tag set",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "urlWords",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/tagsets/{id}",
      "method": "/tagsets/{id}Get",
      "httpMethod": "get",
      "tag": "tag",
      "description": "Retrieve a single tag set by id",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the tag set to return"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users",
      "method": "/usersGet",
      "httpMethod": "get",
      "tag": "user",
      "description": "List users",
      "parameters": [
        {
          "name": "assignment",
          "schema": "string",
          "required": false,
          "description": "Restrict results to the users who have contributed to this assignment."
        },
        {
          "name": "country",
          "schema": "string",
          "required": false,
          "description": "Restrict results to the users who have submitted a contribution with a public location located within this country."
        },
        {
          "name": "minimumContributions",
          "schema": "number",
          "required": false,
          "description": "Restrict results to the users who have submitted at least this many contributions."
        },
        {
          "name": "linkedProfile",
          "schema": "string",
          "required": false,
          "description": "Restrict results to the users who a linked profile of this type."
        },
        {
          "name": "ownedBy",
          "schema": "string",
          "required": false,
          "description": "Restrict results to the users who are owned by of this owner."
        },
        {
          "name": "submittedBefore",
          "schema": "string",
          "required": false,
          "description": "Limit results to users who have submitted at least one contribution before this date time."
        },
        {
          "name": "submittedAfter",
          "schema": "string",
          "required": false,
          "description": "Limit results to users who have submitted at least one contribution after this date time."
        },
        {
          "name": "username",
          "schema": "string",
          "required": false,
          "description": "Restrict results to the user with this username."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{id}",
      "method": "/users/{id}Get",
      "httpMethod": "get",
      "tag": "user",
      "description": "Retrieve a single user by id",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the user to return"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{id}/linked/{type}",
      "method": "/users/{id}/linked/{type}Get",
      "httpMethod": "get",
      "tag": "user",
      "description": "Retrieve a users linked profile by type",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the user to return"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Type of the linked profile to fetch"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/verify",
      "method": "/verifyPost",
      "httpMethod": "post",
      "tag": "auth",
      "description": "Verify token and return details of the owning user",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.contribly.com/1",
  "apiTitle": "Contribly",
  "endpoints": 35,
  "sdkMethods": 44,
  "schemas": 42,
  "parameters": 163,
  "difficultyScore": 105.75,
  "difficulty": "Medium"
}