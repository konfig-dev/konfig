{
  "providerName": "gov.bc.ca",
  "openApiRaw": "https://raw.githubusercontent.com/bcgov/api-specs/master/bcgnws/bcgnws.json",
  "securitySchemes": {},
  "homepage": "gov.bc.ca",
  "serviceName": "bcgnws",
  "apiVersion": "3.x.x",
  "methods": [
    {
      "url": "/featureCategories",
      "method": "/featureCategoriesGet",
      "httpMethod": "get",
      "tag": "feature taxonomy",
      "typeScriptTag": "featureTaxonomy",
      "description": "Get all feature categories",
      "parameters": [
        {
          "name": "outputFormat",
          "schema": "string",
          "required": true,
          "description": "The format of the output."
        }
      ],
      "responses": []
    },
    {
      "url": "/featureClasses",
      "method": "/featureClassesGet",
      "httpMethod": "get",
      "tag": "feature taxonomy",
      "typeScriptTag": "featureTaxonomy",
      "description": "Get all feature classes",
      "parameters": [
        {
          "name": "outputFormat",
          "schema": "string",
          "required": true,
          "description": "The format of the output."
        }
      ],
      "responses": []
    },
    {
      "url": "/featureTypes",
      "method": "/featureTypesGet",
      "httpMethod": "get",
      "tag": "feature taxonomy",
      "typeScriptTag": "featureTaxonomy",
      "description": "Get all feature types",
      "parameters": [
        {
          "name": "outputFormat",
          "schema": "string",
          "required": true,
          "description": "The format of the output."
        }
      ],
      "responses": []
    },
    {
      "url": "/features/{featureId}",
      "method": "/features/{featureId}Get",
      "httpMethod": "get",
      "tag": "feature",
      "typeScriptTag": "feature",
      "description": "Get a feature by its featureId",
      "parameters": [
        {
          "name": "featureId",
          "schema": "integer",
          "required": true,
          "description": "The unique identifier for a feature"
        }
      ],
      "responses": []
    },
    {
      "url": "/nameAuthorities",
      "method": "/nameAuthoritiesGet",
      "httpMethod": "get",
      "tag": "name authority",
      "typeScriptTag": "nameAuthority",
      "description": "Get all name authorities",
      "parameters": [
        {
          "name": "outputFormat",
          "schema": "string",
          "required": true,
          "description": "The format of the output."
        }
      ],
      "responses": []
    },
    {
      "url": "/names/changes",
      "method": "/names/changesGet",
      "httpMethod": "get",
      "tag": "search",
      "typeScriptTag": "search",
      "description": "Search for names with metadata changes in a given period",
      "parameters": [
        {
          "name": "outputFormat",
          "schema": "string",
          "required": true,
          "description": "The format of the output."
        },
        {
          "name": "fromDate",
          "schema": "integer",
          "required": true,
          "description": "Defines the earliest date (YYYY-MM-DD format) of the change time window for the search"
        },
        {
          "name": "toDate",
          "schema": "integer",
          "required": true,
          "description": "Defines the latest date (YYYY-MM-DD format) of the change time window for the search"
        },
        {
          "name": "featureClass",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'class'  The value of this parameter should be a 'featureClassCode' value returned by the /featureClasses resource, or an asterisk (*) to request that all feature classes be included."
        },
        {
          "name": "featureCategory",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'category'  The value of this parameter should be a 'featureCategoryCode' value returned by the /featureCategories resource, or an asterisk (*) to request that all feature categories be included."
        },
        {
          "name": "featureType",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'type'  The value of this parameter should be a 'featureTypeCode' value returned by the /featureTypes resource, or an asterisk (*) to request that all feature types be included"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint."
        },
        {
          "name": "outputSrs",
          "schema": "integer",
          "required": false,
          "description": "The EPSG code of the spatial reference system (SRS) to use for output geometries."
        },
        {
          "name": "embed",
          "schema": "integer",
          "required": false,
          "description": "A flag to indicate whether to embed the corresponding 'feature' into each matching name"
        },
        {
          "name": "outputStyle",
          "schema": "string",
          "required": false,
          "description": "A flag indicating whether to include with each matching name a succinct list of attributes (summary), or a comprehensive list of attributes (detail)"
        },
        {
          "name": "itemsPerPage",
          "schema": "integer",
          "required": false,
          "description": "The number of search results to return (1-200)"
        },
        {
          "name": "startIndex",
          "schema": "integer",
          "required": false,
          "description": "The index of the first record to be returned (>= 1)"
        }
      ],
      "responses": []
    },
    {
      "url": "/names/decisions/recent",
      "method": "/names/decisions/recentGet",
      "httpMethod": "get",
      "tag": "search",
      "typeScriptTag": "search",
      "description": "Search for names affected by recent naming decision",
      "parameters": [
        {
          "name": "outputFormat",
          "schema": "string",
          "required": true,
          "description": "The format of the output."
        },
        {
          "name": "days",
          "schema": "integer",
          "required": true,
          "description": "The number of days used to define the time window of naming decisions to search.  The number is interpreted as searching for 'names affected by decisions within the last X days'."
        },
        {
          "name": "featureClass",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'class'  The value of this parameter should be a 'featureClassCode' value returned by the /featureClasses resource, or an asterisk (*) to request that all feature classes be included."
        },
        {
          "name": "featureCategory",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'category'  The value of this parameter should be a 'featureCategoryCode' value returned by the /featureCategories resource, or an asterisk (*) to request that all feature categories be included."
        },
        {
          "name": "featureType",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'type'  The value of this parameter should be a 'featureTypeCode' value returned by the /featureTypes resource, or an asterisk (*) to request that all feature types be included"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint."
        },
        {
          "name": "outputSrs",
          "schema": "integer",
          "required": false,
          "description": "The EPSG code of the spatial reference system (SRS) to use for output geometries."
        },
        {
          "name": "embed",
          "schema": "integer",
          "required": false,
          "description": "A flag to indicate whether to embed the corresponding 'feature' into each matching name"
        },
        {
          "name": "outputStyle",
          "schema": "string",
          "required": false,
          "description": "A flag indicating whether to include with each matching name a succinct list of attributes (summary), or a comprehensive list of attributes (detail)"
        },
        {
          "name": "itemsPerPage",
          "schema": "integer",
          "required": false,
          "description": "The number of search results to return (1-200)"
        },
        {
          "name": "startIndex",
          "schema": "integer",
          "required": false,
          "description": "The index of the first record to be returned (>= 1)"
        }
      ],
      "responses": []
    },
    {
      "url": "/names/decisions/year",
      "method": "/names/decisions/yearGet",
      "httpMethod": "get",
      "tag": "search",
      "typeScriptTag": "search",
      "description": "Search for names affected by naming decisions in a given year",
      "parameters": [
        {
          "name": "outputFormat",
          "schema": "string",
          "required": true,
          "description": "The format of the output."
        },
        {
          "name": "year",
          "schema": "integer",
          "required": true,
          "description": "The year in which to search for names affected by naming decisions'."
        },
        {
          "name": "featureClass",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'class'  The value of this parameter should be a 'featureClassCode' value returned by the /featureClasses resource, or an asterisk (*) to request that all feature classes be included."
        },
        {
          "name": "featureCategory",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'category'  The value of this parameter should be a 'featureCategoryCode' value returned by the /featureCategories resource, or an asterisk (*) to request that all feature categories be included."
        },
        {
          "name": "featureType",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'type'  The value of this parameter should be a 'featureTypeCode' value returned by the /featureTypes resource, or an asterisk (*) to request that all feature types be included"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint."
        },
        {
          "name": "outputSrs",
          "schema": "integer",
          "required": false,
          "description": "The EPSG code of the spatial reference system (SRS) to use for output geometries."
        },
        {
          "name": "embed",
          "schema": "integer",
          "required": false,
          "description": "A flag to indicate whether to embed the corresponding 'feature' into each matching name"
        },
        {
          "name": "outputStyle",
          "schema": "string",
          "required": false,
          "description": "A flag indicating whether to include with each matching name a succinct list of attributes (summary), or a comprehensive list of attributes (detail)"
        },
        {
          "name": "itemsPerPage",
          "schema": "integer",
          "required": false,
          "description": "The number of search results to return (1-200)"
        },
        {
          "name": "startIndex",
          "schema": "integer",
          "required": false,
          "description": "The index of the first record to be returned (>= 1)"
        }
      ],
      "responses": []
    },
    {
      "url": "/names/inside",
      "method": "/names/insideGet",
      "httpMethod": "get",
      "tag": "search",
      "typeScriptTag": "search",
      "description": "Search in a geographic area",
      "parameters": [
        {
          "name": "outputFormat",
          "schema": "string",
          "required": true,
          "description": "The format of the output."
        },
        {
          "name": "bbox",
          "schema": "string",
          "required": true,
          "description": "A geographic bounding box defining the search area.  Must be specified as a string of the form 'minLongitude,minLatitude,maxLongitude,maxLatitude' (WGS84). e.g. -119,49,-118,50"
        },
        {
          "name": "featureClass",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'class'  The value of this parameter should be a 'featureClassCode' value returned by the /featureClasses resource, or an asterisk (*) to request that all feature classes be included."
        },
        {
          "name": "featureCategory",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'category'  The value of this parameter should be a 'featureCategoryCode' value returned by the /featureCategories resource, or an asterisk (*) to request that all feature categories be included."
        },
        {
          "name": "featureType",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'type'  The value of this parameter should be a 'featureTypeCode' value returned by the /featureTypes resource, or an asterisk (*) to request that all feature types be included"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint."
        },
        {
          "name": "outputSrs",
          "schema": "integer",
          "required": false,
          "description": "The EPSG code of the spatial reference system (SRS) to use for output geometries."
        },
        {
          "name": "embed",
          "schema": "integer",
          "required": false,
          "description": "A flag to indicate whether to embed the corresponding 'feature' into each matching name"
        },
        {
          "name": "outputStyle",
          "schema": "string",
          "required": false,
          "description": "A flag indicating whether to include with each matching name a succinct list of attributes (summary), or a comprehensive list of attributes (detail)"
        },
        {
          "name": "itemsPerPage",
          "schema": "integer",
          "required": false,
          "description": "The number of search results to return (1-200)"
        },
        {
          "name": "startIndex",
          "schema": "integer",
          "required": false,
          "description": "The index of the first record to be returned (>= 1)"
        }
      ],
      "responses": []
    },
    {
      "url": "/names/near",
      "method": "/names/nearGet",
      "httpMethod": "get",
      "tag": "search",
      "typeScriptTag": "search",
      "description": "Search near to a geographic point",
      "parameters": [
        {
          "name": "outputFormat",
          "schema": "string",
          "required": true,
          "description": "The format of the output."
        },
        {
          "name": "featurePoint",
          "schema": "string",
          "required": true,
          "description": "A geographic coordinate specifying the centre point of the search area.  Must be specified as a string of the form 'longitude,latitude' (WGS84).  e.g. -120,51"
        },
        {
          "name": "distance",
          "schema": "string",
          "required": true,
          "description": "A radius (in kilometres) around the centre point."
        },
        {
          "name": "featureClass",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'class'  The value of this parameter should be a 'featureClassCode' value returned by the /featureClasses resource, or an asterisk (*) to request that all feature classes be included."
        },
        {
          "name": "featureCategory",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'category'  The value of this parameter should be a 'featureCategoryCode' value returned by the /featureCategories resource, or an asterisk (*) to request that all feature categories be included."
        },
        {
          "name": "featureType",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'type'  The value of this parameter should be a 'featureTypeCode' value returned by the /featureTypes resource, or an asterisk (*) to request that all feature types be included"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint."
        },
        {
          "name": "outputSrs",
          "schema": "integer",
          "required": false,
          "description": "The EPSG code of the spatial reference system (SRS) to use for output geometries."
        },
        {
          "name": "embed",
          "schema": "integer",
          "required": false,
          "description": "A flag to indicate whether to embed the corresponding 'feature' into each matching name"
        },
        {
          "name": "outputStyle",
          "schema": "string",
          "required": false,
          "description": "A flag indicating whether to include with each matching name a succinct list of attributes (summary), or a comprehensive list of attributes (detail)"
        },
        {
          "name": "itemsPerPage",
          "schema": "integer",
          "required": false,
          "description": "The number of search results to return (1-200)"
        },
        {
          "name": "startIndex",
          "schema": "integer",
          "required": false,
          "description": "The index of the first record to be returned (>= 1)"
        }
      ],
      "responses": []
    },
    {
      "url": "/names/notOfficial/search",
      "method": "/names/notOfficial/searchGet",
      "httpMethod": "get",
      "tag": "search",
      "typeScriptTag": "search",
      "description": "Search by name, limit to unofficial names only",
      "parameters": [
        {
          "name": "outputFormat",
          "schema": "string",
          "required": true,
          "description": "The format of the output."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "A filter to search based on the the text of the name itself.  Use the asterisk (*) as a wildcard character.  For example 'vancouv*'"
        },
        {
          "name": "exactSpelling",
          "schema": "integer",
          "required": false,
          "description": "If the 'name' parameter is specified, 'exactSpelling' specifies whether to include only names that exactly match the search text (exactSpelling=1), or whether to also include names with similar spellings (exactSpelling=0)"
        },
        {
          "name": "featureClass",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'class'  The value of this parameter should be a 'featureClassCode' value returned by the /featureClasses resource, or an asterisk (*) to request that all feature classes be included."
        },
        {
          "name": "featureCategory",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'category'  The value of this parameter should be a 'featureCategoryCode' value returned by the /featureCategories resource, or an asterisk (*) to request that all feature categories be included."
        },
        {
          "name": "featureType",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'type'  The value of this parameter should be a 'featureTypeCode' value returned by the /featureTypes resource, or an asterisk (*) to request that all feature types be included"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint."
        },
        {
          "name": "outputSrs",
          "schema": "integer",
          "required": false,
          "description": "The EPSG code of the spatial reference system (SRS) to use for output geometries."
        },
        {
          "name": "embed",
          "schema": "integer",
          "required": false,
          "description": "A flag to indicate whether to embed the corresponding 'feature' into each matching name"
        },
        {
          "name": "outputStyle",
          "schema": "string",
          "required": false,
          "description": "A flag indicating whether to include with each matching name a succinct list of attributes (summary), or a comprehensive list of attributes (detail)"
        },
        {
          "name": "itemsPerPage",
          "schema": "integer",
          "required": false,
          "description": "The number of search results to return (1-200)"
        },
        {
          "name": "startIndex",
          "schema": "integer",
          "required": false,
          "description": "The index of the first record to be returned (>= 1)"
        }
      ],
      "responses": []
    },
    {
      "url": "/names/official/search",
      "method": "/names/official/searchGet",
      "httpMethod": "get",
      "tag": "search",
      "typeScriptTag": "search",
      "description": "Search by name, limit to official names only",
      "parameters": [
        {
          "name": "outputFormat",
          "schema": "string",
          "required": true,
          "description": "The format of the output."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "A filter to search based on the the text of the name itself.  Use the asterisk (*) as a wildcard character.  For example 'vancouv*'"
        },
        {
          "name": "exactSpelling",
          "schema": "integer",
          "required": false,
          "description": "If the 'name' parameter is specified, 'exactSpelling' specifies whether to include only names that exactly match the search text (exactSpelling=1), or whether to also include names with similar spellings (exactSpelling=0)"
        },
        {
          "name": "featureClass",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'class'  The value of this parameter should be a 'featureClassCode' value returned by the /featureClasses resource, or an asterisk (*) to request that all feature classes be included."
        },
        {
          "name": "featureCategory",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'category'  The value of this parameter should be a 'featureCategoryCode' value returned by the /featureCategories resource, or an asterisk (*) to request that all feature categories be included."
        },
        {
          "name": "featureType",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'type'  The value of this parameter should be a 'featureTypeCode' value returned by the /featureTypes resource, or an asterisk (*) to request that all feature types be included"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint."
        },
        {
          "name": "outputSrs",
          "schema": "integer",
          "required": false,
          "description": "The EPSG code of the spatial reference system (SRS) to use for output geometries."
        },
        {
          "name": "embed",
          "schema": "integer",
          "required": false,
          "description": "A flag to indicate whether to embed the corresponding 'feature' into each matching name"
        },
        {
          "name": "outputStyle",
          "schema": "string",
          "required": false,
          "description": "A flag indicating whether to include with each matching name a succinct list of attributes (summary), or a comprehensive list of attributes (detail)"
        },
        {
          "name": "itemsPerPage",
          "schema": "integer",
          "required": false,
          "description": "The number of search results to return (1-200)"
        },
        {
          "name": "startIndex",
          "schema": "integer",
          "required": false,
          "description": "The index of the first record to be returned (>= 1)"
        }
      ],
      "responses": []
    },
    {
      "url": "/names/search",
      "method": "/names/searchGet",
      "httpMethod": "get",
      "tag": "search",
      "typeScriptTag": "search",
      "description": "Search by name",
      "parameters": [
        {
          "name": "outputFormat",
          "schema": "string",
          "required": true,
          "description": "The format of the output."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "A filter to search based on the the text of the name itself.  Use the asterisk (*) as a wildcard character.  For example 'vancouv*'"
        },
        {
          "name": "exactSpelling",
          "schema": "integer",
          "required": false,
          "description": "If the 'name' parameter is specified, 'exactSpelling' specifies whether to include only names that exactly match the search text (exactSpelling=1), or whether to also include names with similar spellings (exactSpelling=0)"
        },
        {
          "name": "featureClass",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'class'  The value of this parameter should be a 'featureClassCode' value returned by the /featureClasses resource, or an asterisk (*) to request that all feature classes be included."
        },
        {
          "name": "featureCategory",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'category'  The value of this parameter should be a 'featureCategoryCode' value returned by the /featureCategories resource, or an asterisk (*) to request that all feature categories be included."
        },
        {
          "name": "featureType",
          "schema": "string",
          "required": false,
          "description": "A filter to limit the search to names associated with features of a certain 'type'  The value of this parameter should be a 'featureTypeCode' value returned by the /featureTypes resource, or an asterisk (*) to request that all feature types be included"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint."
        },
        {
          "name": "outputSrs",
          "schema": "integer",
          "required": false,
          "description": "The EPSG code of the spatial reference system (SRS) to use for output geometries."
        },
        {
          "name": "embed",
          "schema": "integer",
          "required": false,
          "description": "A flag to indicate whether to embed the corresponding 'feature' into each matching name"
        },
        {
          "name": "outputStyle",
          "schema": "string",
          "required": false,
          "description": "A flag indicating whether to include with each matching name a succinct list of attributes (summary), or a comprehensive list of attributes (detail)"
        },
        {
          "name": "itemsPerPage",
          "schema": "integer",
          "required": false,
          "description": "The number of search results to return (1-200)"
        },
        {
          "name": "startIndex",
          "schema": "integer",
          "required": false,
          "description": "The index of the first record to be returned (>= 1)"
        }
      ],
      "responses": []
    },
    {
      "url": "/names/{nameId}.{outputFormat}",
      "method": "/names/{nameId}.{outputFormat}Get",
      "httpMethod": "get",
      "tag": "name",
      "typeScriptTag": "name",
      "description": "Get a name by its nameId",
      "parameters": [
        {
          "name": "nameId",
          "schema": "integer",
          "required": true,
          "description": "The unique identifier for a name"
        },
        {
          "name": "outputFormat",
          "schema": "string",
          "required": true,
          "description": "The format of the output."
        }
      ],
      "responses": []
    }
  ],
  "apiBaseUrl": "https://apps.gov.bc.ca/pub/bcgnws",
  "apiDescription": "This REST API provides searchable access to information about geographical names in the province of British Columbia, including name status and details about the corresponding geographic feature. \n\nPlease note that you may experience issues when submitting requests to the delivery or test environment if using this [OpenAPI specification](https://github.com/bcgov/api-specs) in other API console viewers.",
  "apiTitle": "BC Geographical Names Web Service - REST API",
  "endpoints": 14,
  "sdkMethods": 14,
  "schemas": 0,
  "parameters": 100,
  "contactUrl": "https://www2.gov.bc.ca/gov/content?id=A3C60F17CE934B1ABFA366F28C66E370",
  "contactEmail": "geographical.names@gov.bc.ca",
  "difficultyScore": 39,
  "difficulty": "Easy"
}