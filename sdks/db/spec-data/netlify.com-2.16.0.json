{
  "providerName": "netlify.com",
  "openApiRaw": "https://raw.githubusercontent.com/netlify/open-api/master/swagger.yml",
  "homepage": "netlify.com",
  "apiVersion": "2.16.0",
  "methods": [
    {
      "url": "/accounts",
      "method": "listAccountsForUser",
      "httpMethod": "get",
      "tag": "accountMembership",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts",
      "method": "createAccount",
      "httpMethod": "post",
      "tag": "accountMembership",
      "description": "",
      "parameters": [
        {
          "name": "extra_seats_block",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "payment_method_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "period",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/types",
      "method": "listAccountTypesForUser",
      "httpMethod": "get",
      "tag": "accountType",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{account_id}",
      "method": "cancelAccount",
      "httpMethod": "delete",
      "tag": "accountMembership",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{account_id}",
      "method": "getAccount",
      "httpMethod": "get",
      "tag": "accountMembership",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{account_id}",
      "method": "updateAccount",
      "httpMethod": "put",
      "tag": "accountMembership",
      "description": "",
      "parameters": [
        {
          "name": "billing_details",
          "schema": "string",
          "description": ""
        },
        {
          "name": "billing_email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "billing_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "extra_seats_block",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "slug",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{account_id}/audit",
      "method": "listAccountAuditEvents",
      "httpMethod": "get",
      "tag": "auditLog",
      "description": "",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "description": ""
        },
        {
          "name": "log_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "per_page",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{account_id}/env",
      "method": "getEnvVars",
      "httpMethod": "get",
      "tag": "environmentVariables",
      "description": "Returns all environment variables for an account or site. An account corresponds to a team in the Netlify UI. To use this endpoint, your site must no longer be using the <a href=\"https://docs.netlify.com/environment-variables/classic-experience/\">classic environment variables experience</a>.  Migrate now with the Netlify UI.",
      "parameters": [
        {
          "name": "account_id",
          "schema": "string",
          "required": true,
          "description": "Scope response to account_id"
        },
        {
          "name": "context_name",
          "schema": "string",
          "required": false,
          "description": "Filter by deploy context"
        },
        {
          "name": "scope",
          "schema": "string",
          "required": false,
          "description": "Filter by scope"
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": "If specified, only return environment variables set on this site"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{account_id}/env",
      "method": "createEnvVars",
      "httpMethod": "post",
      "tag": "environmentVariables",
      "description": "Creates new environment variables. Granular scopes are available on Pro plans and above.  To use this endpoint, your site must no longer be using the <a href=\"https://docs.netlify.com/environment-variables/classic-experience/\">classic environment variables experience</a>.  Migrate now with the Netlify UI.",
      "parameters": [
        {
          "name": "account_id",
          "schema": "string",
          "required": true,
          "description": "Scope response to account_id"
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": "If provided, create an environment variable on the site level, not the account level"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{account_id}/env/{key}",
      "method": "deleteEnvVar",
      "httpMethod": "delete",
      "tag": "environmentVariables",
      "description": "Deletes an environment variable. To use this endpoint, your site must no longer be using the <a href=\"https://docs.netlify.com/environment-variables/classic-experience/\">classic environment variables experience</a>.  Migrate now with the Netlify UI.",
      "parameters": [
        {
          "name": "account_id",
          "schema": "string",
          "required": true,
          "description": "Scope response to account_id"
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "The environment variable key (case-sensitive)"
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": "If provided, delete the environment variable from this site"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{account_id}/env/{key}",
      "method": "getEnvVar",
      "httpMethod": "get",
      "tag": "environmentVariables",
      "description": "Returns an individual environment variable. To use this endpoint, your site must no longer be using the <a href=\"https://docs.netlify.com/environment-variables/classic-experience/\">classic environment variables experience</a>.  Migrate now with the Netlify UI.",
      "parameters": [
        {
          "name": "account_id",
          "schema": "string",
          "required": true,
          "description": "Scope response to account_id"
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "The environment variable key (case-sensitive)"
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": "If provided, return the environment variable for a specific site (no merging is performed)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Environment variable model definition"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{account_id}/env/{key}",
      "method": "setEnvVarValue",
      "httpMethod": "patch",
      "tag": "environmentVariables",
      "description": "Updates or creates a new value for an existing environment variable. To use this endpoint, your site must no longer be using the <a href=\"https://docs.netlify.com/environment-variables/classic-experience/\">classic environment variables experience</a>.  Migrate now with the Netlify UI.",
      "parameters": [
        {
          "name": "account_id",
          "schema": "string",
          "required": true,
          "description": "Scope response to account_id"
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "The existing environment variable key name (case-sensitive)"
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": "If provided, update an environment variable set on this site"
        },
        {
          "name": "context",
          "schema": "string",
          "description": ""
        },
        {
          "name": "value",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Environment variable model definition"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{account_id}/env/{key}",
      "method": "updateEnvVar",
      "httpMethod": "put",
      "tag": "environmentVariables",
      "description": "Updates an existing environment variable and all of its values. Existing values will be replaced by values provided. To use this endpoint, your site must no longer be using the <a href=\"https://docs.netlify.com/environment-variables/classic-experience/\">classic environment variables experience</a>.  Migrate now with the Netlify UI.",
      "parameters": [
        {
          "name": "account_id",
          "schema": "string",
          "required": true,
          "description": "Scope response to account_id"
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "The existing environment variable key name (case-sensitive)"
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": "If provided, update an environment variable set on this site"
        },
        {
          "name": "key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "scopes",
          "schema": "array",
          "description": ""
        },
        {
          "name": "values",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Environment variable model definition"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/accounts/{account_id}/env/{key}/value/{id}",
      "method": "deleteEnvVarValue",
      "httpMethod": "delete",
      "tag": "environmentVariables",
      "description": "Deletes a specific environment variable value. To use this endpoint, your site must no longer be using the <a href=\"https://docs.netlify.com/environment-variables/classic-experience/\">classic environment variables experience</a>.  Migrate now with the Netlify UI.",
      "parameters": [
        {
          "name": "account_id",
          "schema": "string",
          "required": true,
          "description": "Scope response to account_id"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The environment variable value's ID"
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "The environment variable key name (case-sensitive)"
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": "If provided, delete the value from an environment variable on this site"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/billing/payment_methods",
      "method": "listPaymentMethodsForUser",
      "httpMethod": "get",
      "tag": "paymentMethod",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/builds/{build_id}",
      "method": "getSiteBuild",
      "httpMethod": "get",
      "tag": "build",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/builds/{build_id}/log",
      "method": "updateSiteBuildLog",
      "httpMethod": "post",
      "tag": "buildLogMsg",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/builds/{build_id}/start",
      "method": "notifyBuildStart",
      "httpMethod": "post",
      "tag": "build",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/deploy_keys",
      "method": "listDeployKeys",
      "httpMethod": "get",
      "tag": "deployKey",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/deploy_keys",
      "method": "createDeployKey",
      "httpMethod": "post",
      "tag": "deployKey",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/deploy_keys/{key_id}",
      "method": "deleteDeployKey",
      "httpMethod": "delete",
      "tag": "deployKey",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/deploy_keys/{key_id}",
      "method": "getDeployKey",
      "httpMethod": "get",
      "tag": "deployKey",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/deploys/{deploy_id}",
      "method": "deleteDeploy",
      "httpMethod": "delete",
      "tag": "deploy",
      "description": "",
      "parameters": [
        {
          "name": "deploy_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/deploys/{deploy_id}",
      "method": "getDeploy",
      "httpMethod": "get",
      "tag": "deploy",
      "description": "",
      "parameters": [
        {
          "name": "deploy_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/deploys/{deploy_id}/cancel",
      "method": "cancelSiteDeploy",
      "httpMethod": "post",
      "tag": "deploy",
      "description": "",
      "parameters": [
        {
          "name": "deploy_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/deploys/{deploy_id}/files/{path}",
      "method": "uploadDeployFile",
      "httpMethod": "put",
      "tag": "file",
      "description": "",
      "parameters": [
        {
          "name": "deploy_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "size",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/deploys/{deploy_id}/functions/{name}",
      "method": "uploadDeployFunction",
      "httpMethod": "put",
      "tag": "function",
      "description": "",
      "parameters": [
        {
          "name": "deploy_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "runtime",
          "schema": "string",
          "description": ""
        },
        {
          "name": "size",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "X-Nf-Retry-Count",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/deploys/{deploy_id}/lock",
      "method": "lockDeploy",
      "httpMethod": "post",
      "tag": "deploy",
      "description": "",
      "parameters": [
        {
          "name": "deploy_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/deploys/{deploy_id}/plugin_runs",
      "method": "createPluginRun",
      "httpMethod": "post",
      "tag": "x-internal",
      "description": "This is an internal-only endpoint.",
      "parameters": [
        {
          "name": "deploy_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "package",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reporting_event",
          "schema": "string",
          "description": ""
        },
        {
          "name": "state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "summary",
          "schema": "string",
          "description": ""
        },
        {
          "name": "text",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "version",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/deploys/{deploy_id}/unlock",
      "method": "unlockDeploy",
      "httpMethod": "post",
      "tag": "deploy",
      "description": "",
      "parameters": [
        {
          "name": "deploy_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dns_zones",
      "method": "getDnsZones",
      "httpMethod": "get",
      "tag": "dnsZone",
      "description": "",
      "parameters": [
        {
          "name": "account_slug",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dns_zones",
      "method": "createDnsZone",
      "httpMethod": "post",
      "tag": "dnsZone",
      "description": "",
      "parameters": [
        {
          "name": "account_slug",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dns_zones/{zone_id}",
      "method": "deleteDnsZone",
      "httpMethod": "delete",
      "tag": "dnsZone",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dns_zones/{zone_id}",
      "method": "getDnsZone",
      "httpMethod": "get",
      "tag": "dnsZone",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dns_zones/{zone_id}/dns_records",
      "method": "getDnsRecords",
      "httpMethod": "get",
      "tag": "dnsZone",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dns_zones/{zone_id}/dns_records",
      "method": "createDnsRecord",
      "httpMethod": "post",
      "tag": "dnsZone",
      "description": "",
      "parameters": [
        {
          "name": "flag",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "description": ""
        },
        {
          "name": "port",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "priority",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "tag",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ttl",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "value",
          "schema": "string",
          "description": ""
        },
        {
          "name": "weight",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dns_zones/{zone_id}/dns_records/{dns_record_id}",
      "method": "deleteDnsRecord",
      "httpMethod": "delete",
      "tag": "dnsZone",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dns_zones/{zone_id}/dns_records/{dns_record_id}",
      "method": "getIndividualDnsRecord",
      "httpMethod": "get",
      "tag": "dnsZone",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/dns_zones/{zone_id}/transfer",
      "method": "transferDnsZone",
      "httpMethod": "put",
      "tag": "dnsZone",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/{form_id}/submissions",
      "method": "listFormSubmissions",
      "httpMethod": "get",
      "tag": "submission",
      "description": "",
      "parameters": [
        {
          "name": "form_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "per_page",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/hooks",
      "method": "listHooksBySiteId",
      "httpMethod": "get",
      "tag": "hook",
      "description": "",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/hooks",
      "method": "createHookBySiteId",
      "httpMethod": "post",
      "tag": "hook",
      "description": "",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "data",
          "schema": "object",
          "description": ""
        },
        {
          "name": "disabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "event",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/hooks/types",
      "method": "listHookTypes",
      "httpMethod": "get",
      "tag": "hookType",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/hooks/{hook_id}",
      "method": "deleteHook",
      "httpMethod": "delete",
      "tag": "hook",
      "description": "",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/hooks/{hook_id}",
      "method": "getHook",
      "httpMethod": "get",
      "tag": "hook",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/hooks/{hook_id}",
      "method": "updateHook",
      "httpMethod": "put",
      "tag": "hook",
      "description": "",
      "parameters": [
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "data",
          "schema": "object",
          "description": ""
        },
        {
          "name": "disabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "event",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/hooks/{hook_id}/enable",
      "method": "enableHook",
      "httpMethod": "post",
      "tag": "hook",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/oauth/tickets",
      "method": "createTicket",
      "httpMethod": "post",
      "tag": "ticket",
      "description": "",
      "parameters": [
        {
          "name": "client_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/oauth/tickets/{ticket_id}",
      "method": "showTicket",
      "httpMethod": "get",
      "tag": "ticket",
      "description": "",
      "parameters": [
        {
          "name": "ticket_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/oauth/tickets/{ticket_id}/exchange",
      "method": "exchangeTicket",
      "httpMethod": "post",
      "tag": "accessToken",
      "description": "",
      "parameters": [
        {
          "name": "ticket_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/services/",
      "method": "getServices",
      "httpMethod": "get",
      "tag": "service",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/services/{addonName}",
      "method": "showService",
      "httpMethod": "get",
      "tag": "service",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/services/{addonName}/manifest",
      "method": "showServiceManifest",
      "httpMethod": "get",
      "tag": "service",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites",
      "method": "listSites",
      "httpMethod": "get",
      "tag": "site",
      "description": "**Note:** Environment variable keys and values will soon be moved from `build_settings.env` and `repo.env` to a new endpoint. Please use [getEnvVars](#tag/environmentVariables/operation/getEnvVars) to retrieve site environment variables.",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "filter",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "per_page",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites",
      "method": "createSite",
      "httpMethod": "post",
      "tag": "site",
      "description": "**Note:** Environment variable keys and values will soon be moved from `build_settings.env` and `repo.env` to a new endpoint. Please use [createEnvVars](#tag/environmentVariables/operation/createEnvVars) to create environment variables for a site.",
      "parameters": [
        {
          "name": "configure_dns",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}",
      "method": "deleteSite",
      "httpMethod": "delete",
      "tag": "site",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}",
      "method": "getSite",
      "httpMethod": "get",
      "tag": "site",
      "description": "**Note:** Environment variable keys and values will soon be moved from `build_settings.env` and `repo.env` to a new endpoint. Please use [getEnvVars](#tag/environmentVariables/operation/getEnvVars) to retrieve site environment variables.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}",
      "method": "updateSite",
      "httpMethod": "patch",
      "tag": "site",
      "description": "**Note:** Environment variable keys and values will soon be moved from `build_settings.env` and `repo.env` to a new endpoint. Please use [updateEnvVar](#tag/environmentVariables/operation/updateEnvVar) to update a site's environment variables.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/assets",
      "method": "listSiteAssets",
      "httpMethod": "get",
      "tag": "asset",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/assets",
      "method": "createSiteAsset",
      "httpMethod": "post",
      "tag": "asset",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "size",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "content_type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "visibility",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/assets/{asset_id}",
      "method": "deleteSiteAsset",
      "httpMethod": "delete",
      "tag": "asset",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/assets/{asset_id}",
      "method": "getSiteAssetInfo",
      "httpMethod": "get",
      "tag": "asset",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/assets/{asset_id}",
      "method": "updateSiteAsset",
      "httpMethod": "put",
      "tag": "asset",
      "description": "",
      "parameters": [
        {
          "name": "state",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/assets/{asset_id}/public_signature",
      "method": "getSiteAssetPublicSignature",
      "httpMethod": "get",
      "tag": "assetPublicSignature",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/build_hooks",
      "method": "listSiteBuildHooks",
      "httpMethod": "get",
      "tag": "buildHook",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/build_hooks",
      "method": "createSiteBuildHook",
      "httpMethod": "post",
      "tag": "buildHook",
      "description": "",
      "parameters": [
        {
          "name": "branch",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/build_hooks/{id}",
      "method": "deleteSiteBuildHook",
      "httpMethod": "delete",
      "tag": "buildHook",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/build_hooks/{id}",
      "method": "getSiteBuildHook",
      "httpMethod": "get",
      "tag": "buildHook",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/build_hooks/{id}",
      "method": "updateSiteBuildHook",
      "httpMethod": "put",
      "tag": "buildHook",
      "description": "",
      "parameters": [
        {
          "name": "branch",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/builds",
      "method": "listSiteBuilds",
      "httpMethod": "get",
      "tag": "build",
      "description": "",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "per_page",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/builds",
      "method": "createSiteBuild",
      "httpMethod": "post",
      "tag": "build",
      "description": "",
      "parameters": [
        {
          "name": "clear_cache",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "image",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/deployed-branches",
      "method": "listSiteDeployedBranches",
      "httpMethod": "get",
      "tag": "deployedBranch",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/deploys",
      "method": "listSiteDeploys",
      "httpMethod": "get",
      "tag": "deploy",
      "description": "",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "per_page",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/deploys",
      "method": "createSiteDeploy",
      "httpMethod": "post",
      "tag": "deploy",
      "description": "",
      "parameters": [
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "async",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "branch",
          "schema": "string",
          "description": ""
        },
        {
          "name": "draft",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "files",
          "schema": "object",
          "description": ""
        },
        {
          "name": "framework",
          "schema": "string",
          "description": ""
        },
        {
          "name": "function_schedules",
          "schema": "array",
          "description": ""
        },
        {
          "name": "functions",
          "schema": "object",
          "description": ""
        },
        {
          "name": "functions_config",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/deploys/{deploy_id}",
      "method": "deleteSiteDeploy",
      "httpMethod": "delete",
      "tag": "deploy",
      "description": "",
      "parameters": [
        {
          "name": "deploy_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/deploys/{deploy_id}",
      "method": "getSiteDeploy",
      "httpMethod": "get",
      "tag": "deploy",
      "description": "",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "deploy_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/deploys/{deploy_id}",
      "method": "updateSiteDeploy",
      "httpMethod": "put",
      "tag": "deploy",
      "description": "",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "deploy_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "async",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "branch",
          "schema": "string",
          "description": ""
        },
        {
          "name": "draft",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "files",
          "schema": "object",
          "description": ""
        },
        {
          "name": "framework",
          "schema": "string",
          "description": ""
        },
        {
          "name": "function_schedules",
          "schema": "array",
          "description": ""
        },
        {
          "name": "functions",
          "schema": "object",
          "description": ""
        },
        {
          "name": "functions_config",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/deploys/{deploy_id}/restore",
      "method": "restoreSiteDeploy",
      "httpMethod": "post",
      "tag": "deploy",
      "description": "",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "deploy_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/dns",
      "method": "getDnsForSite",
      "httpMethod": "get",
      "tag": "dnsZone",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/dns",
      "method": "configureDnsForSite",
      "httpMethod": "put",
      "tag": "dnsZone",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/files",
      "method": "listSiteFiles",
      "httpMethod": "get",
      "tag": "file",
      "description": "",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/files/{file_path}",
      "method": "getSiteFileByPathName",
      "httpMethod": "get",
      "tag": "file",
      "description": "",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "file_path",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/forms",
      "method": "listSiteForms",
      "httpMethod": "get",
      "tag": "form",
      "description": "",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/forms/{form_id}",
      "method": "deleteSiteForm",
      "httpMethod": "delete",
      "tag": "form",
      "description": "",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "form_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/metadata",
      "method": "getSiteMetadata",
      "httpMethod": "get",
      "tag": "metadata",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/metadata",
      "method": "updateSiteMetadata",
      "httpMethod": "put",
      "tag": "metadata",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/plugin_runs/latest",
      "method": "getLatestPluginRuns",
      "httpMethod": "get",
      "tag": "x-internal",
      "description": "This is an internal-only endpoint.",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "packages",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "state",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/plugins/{package}",
      "method": "updatePlugin",
      "httpMethod": "put",
      "tag": "x-internal",
      "description": "This is an internal-only endpoint.",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "package",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pinned_version",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/rollback",
      "method": "rollbackSiteDeploy",
      "httpMethod": "put",
      "tag": "deploy",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/service-instances",
      "method": "listServiceInstancesForSite",
      "httpMethod": "get",
      "tag": "serviceInstance",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/services/{addon}/instances",
      "method": "createServiceInstance",
      "httpMethod": "post",
      "tag": "serviceInstance",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/services/{addon}/instances/{instance_id}",
      "method": "deleteServiceInstance",
      "httpMethod": "delete",
      "tag": "serviceInstance",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/services/{addon}/instances/{instance_id}",
      "method": "showServiceInstance",
      "httpMethod": "get",
      "tag": "serviceInstance",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/services/{addon}/instances/{instance_id}",
      "method": "updateServiceInstance",
      "httpMethod": "put",
      "tag": "serviceInstance",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/snippets",
      "method": "listSiteSnippets",
      "httpMethod": "get",
      "tag": "snippet",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/snippets",
      "method": "createSiteSnippet",
      "httpMethod": "post",
      "tag": "snippet",
      "description": "",
      "parameters": [
        {
          "name": "general",
          "schema": "string",
          "description": ""
        },
        {
          "name": "general_position",
          "schema": "string",
          "description": ""
        },
        {
          "name": "goal",
          "schema": "string",
          "description": ""
        },
        {
          "name": "goal_position",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/snippets/{snippet_id}",
      "method": "deleteSiteSnippet",
      "httpMethod": "delete",
      "tag": "snippet",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/snippets/{snippet_id}",
      "method": "getSiteSnippet",
      "httpMethod": "get",
      "tag": "snippet",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/snippets/{snippet_id}",
      "method": "updateSiteSnippet",
      "httpMethod": "put",
      "tag": "snippet",
      "description": "",
      "parameters": [
        {
          "name": "general",
          "schema": "string",
          "description": ""
        },
        {
          "name": "general_position",
          "schema": "string",
          "description": ""
        },
        {
          "name": "goal",
          "schema": "string",
          "description": ""
        },
        {
          "name": "goal_position",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/ssl",
      "method": "showSiteTlsCertificate",
      "httpMethod": "get",
      "tag": "sniCertificate",
      "description": "",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/ssl",
      "method": "provisionSiteTlsCertificate",
      "httpMethod": "post",
      "tag": "sniCertificate",
      "description": "",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "certificate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ca_certificates",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/submissions",
      "method": "listSiteSubmissions",
      "httpMethod": "get",
      "tag": "submission",
      "description": "",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "per_page",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/traffic_splits",
      "method": "getSplitTests",
      "httpMethod": "get",
      "tag": "splitTest",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/traffic_splits",
      "method": "createSplitTest",
      "httpMethod": "post",
      "tag": "splitTest",
      "description": "",
      "parameters": [
        {
          "name": "branch_tests",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/traffic_splits/{split_test_id}",
      "method": "getSplitTest",
      "httpMethod": "get",
      "tag": "splitTest",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/traffic_splits/{split_test_id}",
      "method": "updateSplitTest",
      "httpMethod": "put",
      "tag": "splitTest",
      "description": "",
      "parameters": [
        {
          "name": "branch_tests",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/traffic_splits/{split_test_id}/publish",
      "method": "enableSplitTest",
      "httpMethod": "post",
      "tag": "splitTest",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/traffic_splits/{split_test_id}/unpublish",
      "method": "disableSplitTest",
      "httpMethod": "post",
      "tag": "splitTest",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sites/{site_id}/unlink_repo",
      "method": "unlinkSiteRepo",
      "httpMethod": "put",
      "tag": "site",
      "description": "[Beta] Unlinks the repo from the site.\n\nThis action will also:\n- Delete associated deploy keys\n- Delete outgoing webhooks for the repo\n- Delete the site's build hooks",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/submissions/{submission_id}",
      "method": "deleteSubmission",
      "httpMethod": "delete",
      "tag": "submission",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/submissions/{submission_id}",
      "method": "listFormSubmission",
      "httpMethod": "get",
      "tag": "submission",
      "description": "",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "per_page",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/user",
      "method": "getCurrentUser",
      "httpMethod": "get",
      "tag": "user",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/{account_id}/builds/status",
      "method": "getAccountBuildStatus",
      "httpMethod": "get",
      "tag": "build",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/{account_slug}/members",
      "method": "listMembersForAccount",
      "httpMethod": "get",
      "tag": "member",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/{account_slug}/members",
      "method": "addMemberToAccount",
      "httpMethod": "post",
      "tag": "member",
      "description": "",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "role",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/{account_slug}/members/{member_id}",
      "method": "removeAccountMember",
      "httpMethod": "delete",
      "tag": "member",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/{account_slug}/members/{member_id}",
      "method": "getAccountMember",
      "httpMethod": "get",
      "tag": "member",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/{account_slug}/members/{member_id}",
      "method": "updateAccountMember",
      "httpMethod": "put",
      "tag": "member",
      "description": "",
      "parameters": [
        {
          "name": "role",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_access",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/{account_slug}/sites",
      "method": "listSitesForAccount",
      "httpMethod": "get",
      "tag": "site",
      "description": "**Note:** Environment variable keys and values will soon be moved from `build_settings.env` and `repo.env` to a new endpoint. Please use [getEnvVars](#tag/environmentVariables/operation/getEnvVars) to retrieve site environment variables.",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "account_slug",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "per_page",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/{account_slug}/sites",
      "method": "createSiteInTeam",
      "httpMethod": "post",
      "tag": "site",
      "description": "**Note:** Environment variable keys and values will soon be moved from `build_settings.env` and `repo.env` to a new endpoint. Please use [createEnvVars](#tag/environmentVariables/operation/createEnvVars) to create environment variables for a site.",
      "parameters": [
        {
          "name": "configure_dns",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "account_slug",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.netlify.com/api/v1",
  "apiDescription": "Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.\n\nThis document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlify’s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).\n\nAdditionally, we have two API clients for your convenience:\n- [Go Client](https://github.com/netlify/open-api#go-client)\n- [JS Client](https://github.com/netlify/build/tree/main/packages/js-client)",
  "apiTitle": "Netlify's API documentation",
  "endpoints": 75,
  "sdkMethods": 161,
  "schemas": 61,
  "parameters": 196,
  "difficultyScore": 240.5,
  "difficulty": "Hard"
}