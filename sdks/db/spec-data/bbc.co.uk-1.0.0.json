{
  "providerName": "bbc.co.uk",
  "openApiRaw": "https://rms.api.bbc.co.uk/docs/swagger.json",
  "homepage": "bbc.co.uk",
  "apiVersion": "1.0.0",
  "methods": [
    {
      "url": "/broadcasts",
      "method": "/broadcastsGet",
      "httpMethod": "get",
      "tag": "Broadcasts",
      "description": "Broadcasts",
      "parameters": [
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        },
        {
          "name": "service_id",
          "schema": "string",
          "required": false,
          "description": "Filter by Service ID. E.g. bbc_radio_fourfm"
        },
        {
          "name": "date",
          "schema": "string",
          "required": false,
          "description": "Filter by date. E.g. 2016-06-17"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort by provided query. E.g. 'start_at' sorts in ascending order, and '-start_at' sorts in descending order"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/broadcasts/latest",
      "method": "/broadcasts/latestGet",
      "httpMethod": "get",
      "tag": "Broadcasts",
      "description": "Latest Broadcasts",
      "parameters": [
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        },
        {
          "name": "service_id",
          "schema": "string",
          "required": false,
          "description": "Filter by Service ID. E.g. bbc_radio_fourfm"
        },
        {
          "name": "on_air",
          "schema": "string",
          "required": false,
          "description": "Filter what is on air. E.g. 'now' returns current programme being broadcasted."
        },
        {
          "name": "next",
          "schema": "string",
          "required": false,
          "description": "Filter what will be on air next in minutes. E.g. '240' returns programmes broadcasted in the next four hurs"
        },
        {
          "name": "previous",
          "schema": "string",
          "required": false,
          "description": "Filter what was on air previously in minutes. E.g. '240' returns programmes broadcasted in the previous four hurs"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort by provided query. E.g. 'start_at' sorts in ascending order, and '-start_at' sorts in descending order"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/broadcasts/{pid}",
      "method": "getBroadcastByPid",
      "httpMethod": "get",
      "tag": "Broadcasts",
      "description": "Broadcasts by PID",
      "parameters": [
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "pid",
          "schema": "string",
          "required": true,
          "description": "pid"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/categories",
      "method": "/categoriesGet",
      "httpMethod": "get",
      "tag": "Categories",
      "description": "List of categories",
      "parameters": [
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "kind",
          "schema": "string",
          "required": false,
          "description": "Filter by provided query. E.g. 'promoted' returns promoted categories"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/categories/{id}",
      "method": "/categories/{id}Get",
      "httpMethod": "get",
      "tag": "Categories",
      "description": "Category by ID",
      "parameters": [
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Retrieve information about the category. E.g. 'sport-football-europeanchampionship'"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/collections/{pid}/members",
      "method": "getCollectionMembers",
      "httpMethod": "get",
      "tag": "Collections",
      "description": "Collection Members",
      "parameters": [
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "pid",
          "schema": "string",
          "required": true,
          "description": "pid"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/experience/homepage",
      "method": "getExperienceHomepage",
      "httpMethod": "get",
      "tag": "Experience",
      "description": "Homepage Experience",
      "parameters": [
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/music/popular/artists",
      "method": "getMusicPopularArtists",
      "httpMethod": "get",
      "tag": "Music",
      "description": "Popular Artists",
      "parameters": [
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": "ISO 8601 Date yyyy-mm-dd.  Returns items between given time period and now"
        },
        {
          "name": "until",
          "schema": "string",
          "required": false,
          "description": "ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since' and 'until' date params"
        },
        {
          "name": "decomposed",
          "schema": "boolean",
          "required": false,
          "description": "In addition to the overall score, return a list of scores broken down by day N.B Must be used in conjunction with since and/or until and since is >= 31 days"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/music/popular/artists/{id}",
      "method": "getMusicPopularArtistById",
      "httpMethod": "get",
      "tag": "Music",
      "description": "Single Artist Popularity",
      "parameters": [
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": "ISO 8601 Date yyyy-mm-dd.  Returns items between given time period and now"
        },
        {
          "name": "until",
          "schema": "string",
          "required": false,
          "description": "ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since' and 'until' date params"
        },
        {
          "name": "decomposed",
          "schema": "boolean",
          "required": false,
          "description": "In addition to the overall score, return a list of scores broken down by day N.B Must be used in conjunction with since and/or until and since is >= 31 days"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "MusicBrainz Id - Used to get single resource score"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/music/popular/playlists",
      "method": "getMusicPopularPlaylists",
      "httpMethod": "get",
      "tag": "Music",
      "description": "Popular Playlists",
      "parameters": [
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": "ISO 8601 Date yyyy-mm-dd.  Returns items between given time period and now"
        },
        {
          "name": "until",
          "schema": "string",
          "required": false,
          "description": "ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since' and 'until' date params"
        },
        {
          "name": "decomposed",
          "schema": "boolean",
          "required": false,
          "description": "In addition to the overall score, return a list of scores broken down by day N.B Must be used in conjunction with since and/or until and since is >= 31 days"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/music/popular/playlists/{id}",
      "method": "getMusicPopularPlaylistById",
      "httpMethod": "get",
      "tag": "Music",
      "description": "Single Playlist Popularity",
      "parameters": [
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": "ISO 8601 Date yyyy-mm-dd.  Returns items between given time period and now"
        },
        {
          "name": "until",
          "schema": "string",
          "required": false,
          "description": "ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since' and 'until' date params"
        },
        {
          "name": "decomposed",
          "schema": "boolean",
          "required": false,
          "description": "In addition to the overall score, return a list of scores broken down by day N.B Must be used in conjunction with since and/or until and since is >= 31 days"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "BBC Music Playlist Id - Used to get single resource score"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/music/popular/tracks",
      "method": "getMusicPopularTracks",
      "httpMethod": "get",
      "tag": "Music",
      "description": "Popular Tracks",
      "parameters": [
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": "ISO 8601 Date yyyy-mm-dd.  Returns items between given time period and now"
        },
        {
          "name": "until",
          "schema": "string",
          "required": false,
          "description": "ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since' and 'until' date params"
        },
        {
          "name": "network",
          "schema": "string",
          "required": false,
          "description": "Return items with given Network ID"
        },
        {
          "name": "programme",
          "schema": "string",
          "required": false,
          "description": "Items with given Programme Pid"
        },
        {
          "name": "artist",
          "schema": "string",
          "required": false,
          "description": "MusicBrainz artist ID"
        },
        {
          "name": "decomposed",
          "schema": "boolean",
          "required": false,
          "description": "In addition to the overall score, return a list of scores broken down by day N.B Must be used in conjunction with since and/or until and since is >= 31 days"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/music/popular/tracks/{id}",
      "method": "getMusicPopularTrackById",
      "httpMethod": "get",
      "tag": "Music",
      "description": "Single Track Popularity",
      "parameters": [
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": "ISO 8601 Date yyyy-mm-dd.  Returns items between given time period and now"
        },
        {
          "name": "until",
          "schema": "string",
          "required": false,
          "description": "ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since' and 'until' date params"
        },
        {
          "name": "network",
          "schema": "string",
          "required": false,
          "description": "Return items with given Network ID"
        },
        {
          "name": "programme",
          "schema": "string",
          "required": false,
          "description": "Items with given Programme Pid"
        },
        {
          "name": "artist",
          "schema": "string",
          "required": false,
          "description": "MusicBrainz artist ID"
        },
        {
          "name": "decomposed",
          "schema": "boolean",
          "required": false,
          "description": "In addition to the overall score, return a list of scores broken down by day N.B Must be used in conjunction with since and/or until and since is >= 31 days"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "BBC Music Track Id - Used to get single resource score"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/categories/follows",
      "method": "/my/categories/followsDelete",
      "httpMethod": "delete",
      "tag": "Personalised Categories",
      "description": "Unfollow category",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "category_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "platform",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/categories/follows",
      "method": "/my/categories/followsGet",
      "httpMethod": "get",
      "tag": "Personalised Categories",
      "description": "List of followed categories",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/categories/follows",
      "method": "/my/categories/followsPost",
      "httpMethod": "post",
      "tag": "Personalised Categories",
      "description": "Follow category",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "category_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "platform",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/export",
      "method": "getMusicExport",
      "httpMethod": "get",
      "tag": "Music Export",
      "description": "Music Exports",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/exports/jobs",
      "method": "getMusicExportJobs",
      "httpMethod": "get",
      "tag": "Music Export",
      "description": "Music Export Jobs",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "over16",
          "schema": "boolean",
          "required": true,
          "description": "Boolean age check"
        },
        {
          "name": "vendor",
          "schema": "string",
          "required": false,
          "description": "Specify Vendor Jobs"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/exports/jobs",
      "method": "postMusicExportJob",
      "httpMethod": "post",
      "tag": "Music Export",
      "description": "Music Export Jobs",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "over16",
          "schema": "boolean",
          "required": true,
          "description": "Boolean age check"
        },
        {
          "name": "vendor",
          "schema": "string",
          "required": false,
          "description": "Specify Vendor Jobs"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/exports/tracks",
      "method": "getMusicExportTracks",
      "httpMethod": "get",
      "tag": "Music Export",
      "description": "Music Export Tracks",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "over16",
          "schema": "boolean",
          "required": true,
          "description": "Boolean age check"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        },
        {
          "name": "vendor",
          "schema": "string",
          "required": false,
          "description": "Specify Vendor Tracks"
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Specify Track status"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/favourites",
      "method": "getPersonalisedMusicFavourites",
      "httpMethod": "get",
      "tag": "Music",
      "description": "Favourite Tracks or Clips",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        },
        {
          "name": "action",
          "schema": "string",
          "required": false,
          "description": "Filters activities based on the type of action"
        },
        {
          "name": "music-data",
          "schema": "boolean",
          "required": false,
          "description": "Omits music data from the response, defaults to true"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/favourites",
      "method": "postPersonalisedMusicFavouritesBatch",
      "httpMethod": "post",
      "tag": "Music",
      "description": "Favourite Tracks or Clips",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/favourites",
      "method": "putPersonalisedMusicFavouritesBatch",
      "httpMethod": "put",
      "tag": "Music",
      "description": "Favourite Tracks or Clips",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/favourites/{type}",
      "method": "getPersonalisedMusicFavouritesByType",
      "httpMethod": "get",
      "tag": "Music",
      "description": "Favourite Tracks or Clips by Type",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Supported Music favourite types: Clips or Tracks"
        },
        {
          "name": "action",
          "schema": "string",
          "required": false,
          "description": "Filters activities based on the type of action"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/favourites/{type}/{id}",
      "method": "deletePersonalisedMusicFavouritesByTypeById",
      "httpMethod": "delete",
      "tag": "Music",
      "description": "Favourite Track or Clip",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Supported Music favourite types: Clips or Tracks"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Clip PID or Track ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/favourites/{type}/{id}",
      "method": "getPersonalisedMusicFavouritesByTypeById",
      "httpMethod": "get",
      "tag": "Music",
      "description": "Favourite Track or Clip",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Supported Music favourite types: Clips or Tracks"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Clip PID or Track ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/favourites/{type}/{id}",
      "method": "postPersonalisedMusicFavouritesByTypeById",
      "httpMethod": "post",
      "tag": "Music",
      "description": "Favourite Track or Clip",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Supported Music favourite types: Clips or Tracks"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Clip PID or Track ID"
        },
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "added_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "context",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "meta_data",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/favourites/{type}/{id}",
      "method": "putPersonalisedMusicFavouritesByTypeById",
      "httpMethod": "put",
      "tag": "Music",
      "description": "Favourite Track or Clip",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Supported Music favourite types: Clips or Tracks"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Clip PID or Track ID"
        },
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "added_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "context",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "meta_data",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/follows",
      "method": "getPersonalisedMusicFollows",
      "httpMethod": "get",
      "tag": "Music",
      "description": "Followed Networks, Categories, Artists, Playlists and Genres",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "action",
          "schema": "string",
          "required": false,
          "description": "Filters activities based on the type of action"
        },
        {
          "name": "music-data",
          "schema": "boolean",
          "required": false,
          "description": "Omits music data from the response, defaults to true"
        },
        {
          "name": "music_context",
          "schema": "string",
          "required": false,
          "description": "Specify context to be passed to Music API"
        },
        {
          "name": "music_within_uk",
          "schema": "boolean",
          "required": false,
          "description": "Specify location to be passed to Music API"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/follows",
      "method": "postPersonalisedMusicFollowsBatch",
      "httpMethod": "post",
      "tag": "Music",
      "description": "Followed Networks, Categories, Artists, Playlists and Genres",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "action",
          "schema": "string",
          "required": false,
          "description": "Filters activities based on the type of action"
        },
        {
          "name": "music-data",
          "schema": "boolean",
          "required": false,
          "description": "Omits music data from the response, defaults to true"
        },
        {
          "name": "music_context",
          "schema": "string",
          "required": false,
          "description": "Specify context to be passed to Music API"
        },
        {
          "name": "music_within_uk",
          "schema": "boolean",
          "required": false,
          "description": "Specify location to be passed to Music API"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/follows",
      "method": "putPersonalisedMusicFollowsBatch",
      "httpMethod": "put",
      "tag": "Music",
      "description": "Followed Networks, Categories, Artists, Playlists and Genres",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "action",
          "schema": "string",
          "required": false,
          "description": "Filters activities based on the type of action"
        },
        {
          "name": "music-data",
          "schema": "boolean",
          "required": false,
          "description": "Omits music data from the response, defaults to true"
        },
        {
          "name": "music_context",
          "schema": "string",
          "required": false,
          "description": "Specify context to be passed to Music API"
        },
        {
          "name": "music_within_uk",
          "schema": "boolean",
          "required": false,
          "description": "Specify location to be passed to Music API"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/follows/{type}",
      "method": "getPersonalisedMusicFollowsByType",
      "httpMethod": "get",
      "tag": "Music",
      "description": "Followed Networks, Categories, Artists, Playlists and Genres by Type",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Supported Music follows types: Playlists, Services, Genres & Artists"
        },
        {
          "name": "action",
          "schema": "string",
          "required": false,
          "description": "Filters activities based on the type of action"
        },
        {
          "name": "music-data",
          "schema": "boolean",
          "required": false,
          "description": "Omits music data from the response, defaults to true"
        },
        {
          "name": "music_context",
          "schema": "string",
          "required": false,
          "description": "Specify context to be passed to Music API"
        },
        {
          "name": "music_within_uk",
          "schema": "boolean",
          "required": false,
          "description": "Specify location to be passed to Music API"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/follows/{type}/{id}",
      "method": "deletePersonalisedMusicFollowsByTypeById",
      "httpMethod": "delete",
      "tag": "Music",
      "description": "Followed Network, Category, Artist, Playlist and Genre",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Supported Music follows types: Playlists, Services, Genres & Artists"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Playlists, Services, Networks, Genres, Categories or Artists ID"
        },
        {
          "name": "music-data",
          "schema": "boolean",
          "required": false,
          "description": "Omits music data from the response, defaults to true"
        },
        {
          "name": "music_context",
          "schema": "string",
          "required": false,
          "description": "Specify context to be passed to Music API"
        },
        {
          "name": "music_within_uk",
          "schema": "boolean",
          "required": false,
          "description": "Specify location to be passed to Music API"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/follows/{type}/{id}",
      "method": "getPersonalisedMusicFollowsByTypeById",
      "httpMethod": "get",
      "tag": "Music",
      "description": "Followed Network, Category, Artist, Playlist and Genre",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Supported Music follows types: Playlists, Services, Genres & Artists"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Playlists, Services, Networks, Genres, Categories or Artists ID"
        },
        {
          "name": "music-data",
          "schema": "boolean",
          "required": false,
          "description": "Omits music data from the response, defaults to true"
        },
        {
          "name": "music_context",
          "schema": "string",
          "required": false,
          "description": "Specify context to be passed to Music API"
        },
        {
          "name": "music_within_uk",
          "schema": "boolean",
          "required": false,
          "description": "Specify location to be passed to Music API"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/follows/{type}/{id}",
      "method": "postPersonalisedMusicFollowsByTypeById",
      "httpMethod": "post",
      "tag": "Music",
      "description": "Followed Network, Category, Artist, Playlist and Genre",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Supported Music follows types: Playlists, Services, Genres & Artists"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Playlists, Services, Networks, Genres, Categories or Artists ID"
        },
        {
          "name": "music-data",
          "schema": "boolean",
          "required": false,
          "description": "Omits music data from the response, defaults to true"
        },
        {
          "name": "music_context",
          "schema": "string",
          "required": false,
          "description": "Specify context to be passed to Music API"
        },
        {
          "name": "music_within_uk",
          "schema": "boolean",
          "required": false,
          "description": "Specify location to be passed to Music API"
        },
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "added_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "context",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "meta_data",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/follows/{type}/{id}",
      "method": "putPersonalisedMusicFollowsByTypeById",
      "httpMethod": "put",
      "tag": "Music",
      "description": "Followed Network, Category, Artist, Playlist and Genre",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Supported Music follows types: Playlists, Services, Genres & Artists"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Playlists, Services, Networks, Genres, Categories or Artists ID"
        },
        {
          "name": "music-data",
          "schema": "boolean",
          "required": false,
          "description": "Omits music data from the response, defaults to true"
        },
        {
          "name": "music_context",
          "schema": "string",
          "required": false,
          "description": "Specify context to be passed to Music API"
        },
        {
          "name": "music_within_uk",
          "schema": "boolean",
          "required": false,
          "description": "Specify location to be passed to Music API"
        },
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "added_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "context",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "meta_data",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/preferences/export",
      "method": "deleteMusicPreferencesExport",
      "httpMethod": "delete",
      "tag": "Music Export",
      "description": "Music Export Preferences",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/preferences/export",
      "method": "getMusicPreferencesExport",
      "httpMethod": "get",
      "tag": "Music Export",
      "description": "Music Export Preferences",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/preferences/export",
      "method": "postMusicPreferencesExport",
      "httpMethod": "post",
      "tag": "Music Export",
      "description": "Music Export Preferences",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "access_expires_at",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "access_token",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "add_plus_export",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "authorization_code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "last_export",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "legacy_state",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partner_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "refresh_token",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "terms",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "vendor",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/preferences/export/{vendor}",
      "method": "deleteMusicPreferencesExportVendor",
      "httpMethod": "delete",
      "tag": "Music Export",
      "description": "Music Export Vendor Preferences",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "vendor",
          "schema": "string",
          "required": true,
          "description": "Supported 3rd Party Vendor"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/preferences/export/{vendor}",
      "method": "getMusicPreferencesExportVendor",
      "httpMethod": "get",
      "tag": "Music Export",
      "description": "Music Export Vendor Preferences",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "vendor",
          "schema": "string",
          "required": true,
          "description": "Supported 3rd Party Vendor"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/preferences/export/{vendor}",
      "method": "postMusicPreferencesExportVendor",
      "httpMethod": "post",
      "tag": "Music Export",
      "description": "Music Export Vendor Preferences",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "vendor",
          "schema": "string",
          "required": true,
          "description": "Supported 3rd Party Vendor"
        },
        {
          "name": "access_expires_at",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "access_token",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "add_plus_export",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "authorization_code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "last_export",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "legacy_state",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partner_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "refresh_token",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "terms",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "vendor",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/music/preferences/export/{vendor}",
      "method": "putMusicPreferencesExportVendor",
      "httpMethod": "put",
      "tag": "Music Export",
      "description": "Music Export Vendor Preferences",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "vendor",
          "schema": "string",
          "required": true,
          "description": "Supported 3rd Party Vendor"
        },
        {
          "name": "access_expires_at",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "access_token",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "add_plus_export",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "authorization_code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "last_export",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "legacy_state",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "partner_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "refresh_token",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "terms",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "vendor",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/networks/follows",
      "method": "/my/networks/followsDelete",
      "httpMethod": "delete",
      "tag": "Personalised Networks",
      "description": "Unfollow network",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        },
        {
          "name": "platform",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "service_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/networks/follows",
      "method": "/my/networks/followsGet",
      "httpMethod": "get",
      "tag": "Personalised Networks",
      "description": "List of followed networks",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/networks/follows",
      "method": "/my/networks/followsPost",
      "httpMethod": "post",
      "tag": "Personalised Networks",
      "description": "Follow network",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        },
        {
          "name": "platform",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "service_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/plays",
      "method": "/my/playsPost",
      "httpMethod": "post",
      "tag": "Personalised Plays",
      "description": "Write Play Event",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "elapsed_time",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "pid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "resource_type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "version_pid",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/playspace/containers/suggested",
      "method": "suggestContainer",
      "httpMethod": "get",
      "tag": "Playspace",
      "description": "Suggested Playspace Container",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "previous_pid",
          "schema": "string",
          "required": true,
          "description": "Clip or Episode PID of the previous or first content item in the Playspace stream."
        },
        {
          "name": "previous_container",
          "schema": "string",
          "required": false,
          "description": "Container ID of the previous container in the Playspace stream."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/playspace/containers/{id}",
      "method": "getContainer",
      "httpMethod": "get",
      "tag": "Playspace",
      "description": "Playspace Container by ID",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Playspace Container ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/programmes/recommendations",
      "method": "getRecommendations",
      "httpMethod": "get",
      "tag": "Programmes",
      "description": "Recommended Programmes",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        },
        {
          "name": "rights",
          "schema": "string",
          "required": true,
          "description": "Only return available results for the web/mobile."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/radio/favourites",
      "method": "getPersonalisedRadioFavourites",
      "httpMethod": "get",
      "tag": "Radio",
      "description": "Favourite Episodes and Clips",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort order for Personalised Radio results"
        },
        {
          "name": "show_all_activity",
          "schema": "boolean",
          "required": false,
          "description": "Include items which have been 'soft' unfavourited in response. I.e items with UAS type of 'unfavourited'"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/radio/favourites",
      "method": "postPersonalisedRadioBatch",
      "httpMethod": "post",
      "tag": "Radio",
      "description": "Favourite Episodes and Clips",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/radio/favourites",
      "method": "putPersonalisedRadioBatch",
      "httpMethod": "put",
      "tag": "Radio",
      "description": "Favourite Episodes and Clips",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/radio/favourites/{type}",
      "method": "getPersonalisedRadioFavouritesByType",
      "httpMethod": "get",
      "tag": "Radio",
      "description": "Favourite Episodes and Clips by Type",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Supported Radio favourite types: Clips or Episodes"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort order for Personalised Radio results"
        },
        {
          "name": "show_all_activity",
          "schema": "boolean",
          "required": false,
          "description": "Include items which have been 'soft' unfavourited in response. I.e items with UAS type of 'unfavourited'"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/radio/favourites/{type}/{pid}",
      "method": "deletePersonalisedRadioByActivityTypeById",
      "httpMethod": "delete",
      "tag": "Radio",
      "description": "Favourite Episode or Clip",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Supported Radio favourite types: Clips or Episodes"
        },
        {
          "name": "pid",
          "schema": "string",
          "required": true,
          "description": "pid"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/radio/favourites/{type}/{pid}",
      "method": "getPersonalisedRadioByActivityTypeById",
      "httpMethod": "get",
      "tag": "Radio",
      "description": "Favourite Episode or Clip",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Supported Radio favourite types: Clips or Episodes"
        },
        {
          "name": "pid",
          "schema": "string",
          "required": true,
          "description": "pid"
        },
        {
          "name": "show_all_activity",
          "schema": "boolean",
          "required": false,
          "description": "Include items which have been 'soft' unfavourited in response. I.e items with UAS type of 'unfavourited'"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/radio/favourites/{type}/{pid}",
      "method": "postPersonalisedRadioByActivityTypeById",
      "httpMethod": "post",
      "tag": "Radio",
      "description": "Favourite Episode or Clip",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Supported Radio favourite types: Clips or Episodes"
        },
        {
          "name": "pid",
          "schema": "string",
          "required": true,
          "description": "pid"
        },
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "added_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "context",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/radio/favourites/{type}/{pid}",
      "method": "putPersonalisedRadioByActivityTypeById",
      "httpMethod": "put",
      "tag": "Radio",
      "description": "Favourite Episode or Clip",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Supported Radio favourite types: Clips or Episodes"
        },
        {
          "name": "pid",
          "schema": "string",
          "required": true,
          "description": "pid"
        },
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "added_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "context",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/radio/follows",
      "method": "getPersonalisedRadioFollows",
      "httpMethod": "get",
      "tag": "Radio",
      "description": "Followed Brands and Series",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort order for Personalised Radio results"
        },
        {
          "name": "show_all_activity",
          "schema": "boolean",
          "required": false,
          "description": "Include items which have been 'soft' unfollowed in response. I.e items with UAS type of 'unfollowed'"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/radio/follows",
      "method": "postPersonalisedRadioFollowsBatch",
      "httpMethod": "post",
      "tag": "Radio",
      "description": "Followed Brands and Series",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/radio/follows",
      "method": "putPersonalisedRadioFollowsBatch",
      "httpMethod": "put",
      "tag": "Radio",
      "description": "Followed Brands and Series",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/radio/follows/{type}",
      "method": "getPersonalisedRadioFollowsByType",
      "httpMethod": "get",
      "tag": "Radio",
      "description": "Followed Brands or Series by Type",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Supported Radio follows types: Brands or Series"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort order for Personalised Radio results"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        },
        {
          "name": "show_all_activity",
          "schema": "boolean",
          "required": false,
          "description": "Include items which have been 'soft' unfollowed in response. I.e items with UAS type of 'unfollowed'"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/radio/follows/{type}/{pid}",
      "method": "deletePersonalisedRadioFollowsByTypeById",
      "httpMethod": "delete",
      "tag": "Radio",
      "description": "Followed Brand or Series",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Supported Radio follows types: Brands or Series"
        },
        {
          "name": "pid",
          "schema": "string",
          "required": true,
          "description": "pid"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/radio/follows/{type}/{pid}",
      "method": "getPersonalisedRadioFollowsByTypeById",
      "httpMethod": "get",
      "tag": "Radio",
      "description": "Followed Brand or Series",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Supported Radio follows types: Brands or Series"
        },
        {
          "name": "pid",
          "schema": "string",
          "required": true,
          "description": "pid"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/radio/follows/{type}/{pid}",
      "method": "postPersonalisedRadioFollowsByTypeById",
      "httpMethod": "post",
      "tag": "Radio",
      "description": "Followed Brand or Series",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Supported Radio follows types: Brands or Series"
        },
        {
          "name": "pid",
          "schema": "string",
          "required": true,
          "description": "pid"
        },
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "added_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "context",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/radio/follows/{type}/{pid}",
      "method": "putPersonalisedRadioFollowsByTypeById",
      "httpMethod": "put",
      "tag": "Radio",
      "description": "Followed Brand or Series",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Supported Radio follows types: Brands or Series"
        },
        {
          "name": "pid",
          "schema": "string",
          "required": true,
          "description": "pid"
        },
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "added_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "context",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/my/radio/plays",
      "method": "getPersonalisedRadioPlays",
      "httpMethod": "get",
      "tag": "Radio",
      "description": "Played Episode or Clip",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer OAUTH_TOKEN"
        },
        {
          "name": "X-Authentication-Provider",
          "schema": "string",
          "required": true,
          "description": "Authentication type"
        },
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort order for Personalised Radio results"
        },
        {
          "name": "show_all_activity",
          "schema": "boolean",
          "required": false,
          "description": "Include expired/unavailable items"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/podcasts",
      "method": "getPodcasts",
      "httpMethod": "get",
      "tag": "Podcasts",
      "description": "All Podcasts",
      "parameters": [
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort order for Podcasts results"
        },
        {
          "name": "network",
          "schema": "string",
          "required": false,
          "description": "Network Master Brand ID (mid)"
        },
        {
          "name": "network_url_key",
          "schema": "string",
          "required": false,
          "description": "Network URL key"
        },
        {
          "name": "category",
          "schema": "string",
          "required": false,
          "description": "Category ID"
        },
        {
          "name": "q",
          "schema": "string",
          "required": false,
          "description": "Search query String"
        },
        {
          "name": "coverage",
          "schema": "string",
          "required": false,
          "description": "Local, National or Regional Coverage"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/podcasts/featured",
      "method": "getPodcastsFeatured",
      "httpMethod": "get",
      "tag": "Podcasts",
      "description": "Featured Podcasts",
      "parameters": [
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/podcasts/{pid}",
      "method": "getPodcastByPid",
      "httpMethod": "get",
      "tag": "Podcasts",
      "description": "Podcast",
      "parameters": [
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "pid",
          "schema": "string",
          "required": true,
          "description": "pid"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/podcasts/{pid}/episodes",
      "method": "getPodcastEpisodes",
      "httpMethod": "get",
      "tag": "Podcasts",
      "description": "Podcast Episodes",
      "parameters": [
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "pid",
          "schema": "string",
          "required": true,
          "description": "pid"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Paginated results offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Paginated results limit"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/radio/networks.json",
      "method": "getRadioNetworks",
      "httpMethod": "get",
      "tag": "Networks",
      "description": "Networks",
      "parameters": [
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "preset",
          "schema": "boolean",
          "required": false,
          "description": "Returns all networks needed for iPlayer Radio responsive web navigation"
        },
        {
          "name": "international",
          "schema": "boolean",
          "required": false,
          "description": "Returns all networks available internationally"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/radio/popular",
      "method": "getPopularEpisodesClips",
      "httpMethod": "get",
      "tag": "Programmes",
      "description": "Popular Episodes & Clips",
      "parameters": [
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "Programme type required. Accepts comma separated values"
        },
        {
          "name": "distinct",
          "schema": "string",
          "required": false,
          "description": "Filter by deduplication rule. E.g. 'tleo' returns programmes with distinct top level episode objects"
        },
        {
          "name": "network",
          "schema": "string",
          "required": false,
          "description": "Filter by network master brand ID (mid). Accepts comma separated values"
        },
        {
          "name": "network_url_key",
          "schema": "string",
          "required": false,
          "description": "Filter by network URL key. Accepts comma separated values"
        },
        {
          "name": "category",
          "schema": "string",
          "required": false,
          "description": "Filter by category. Accepts comma separated values"
        },
        {
          "name": "format",
          "schema": "string",
          "required": false,
          "description": "Filter by format. Accepts comma separated values"
        },
        {
          "name": "group",
          "schema": "string",
          "required": false,
          "description": "Filter by group. Accepts comma separated values"
        },
        {
          "name": "media_type",
          "schema": "string",
          "required": false,
          "description": "Filter by programme media type. Accepts comma separated values"
        },
        {
          "name": "container",
          "schema": "string",
          "required": false,
          "description": "Filter by container. Accepts any pid e.g. brand,series,episode"
        },
        {
          "name": "media_set",
          "schema": "array",
          "required": false,
          "description": "Filter by media set name. Accepts comma separated combinations of the following: pc,mobile-download,android-download-high,apple-ios-download-high,mobile-cellular-main,mobile-phone-main,iptv-all"
        },
        {
          "name": "q",
          "schema": "string",
          "required": false,
          "description": "Search query String"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/radio/programmes",
      "method": "getRadioProgrammes",
      "httpMethod": "get",
      "tag": "Programmes",
      "description": "Radio programmes",
      "parameters": [
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "kind",
          "schema": "string",
          "required": false,
          "description": "Filter by provided query. E.g. 'tleo' returns top level objects, ie. brands, orphaned series, and orphaned episodes"
        },
        {
          "name": "network",
          "schema": "string",
          "required": false,
          "description": "Filter by network master brand ID (mid). Accepts comma separated values"
        },
        {
          "name": "network_url_key",
          "schema": "string",
          "required": false,
          "description": "Filter by network URL key. Accepts comma separated values"
        },
        {
          "name": "category",
          "schema": "string",
          "required": false,
          "description": "Filter by category id. Accepts comma separated values. See /category endpoint below for the type of response provided"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort by provided query. E.g. 'title' sorts in ascending order, and -title sorts in descending order"
        },
        {
          "name": "container",
          "schema": "string",
          "required": false,
          "description": "Filter by container. Accepts any brand or series pid"
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "Filter by programme type. Accepts comma separated values"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/radio/programmes/{pid}",
      "method": "getRadioProgrammesByPid",
      "httpMethod": "get",
      "tag": "Programmes",
      "description": "Available radio programme by Pid",
      "parameters": [
        {
          "name": "X-API-Key",
          "schema": "string",
          "required": true,
          "description": "API_KEY"
        },
        {
          "name": "pid",
          "schema": "string",
          "required": true,
          "description": "pid"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://rms.api.bbc.co.uk",
  "apiDescription": "We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.",
  "apiTitle": "Radio & Music Services",
  "endpoints": 45,
  "sdkMethods": 75,
  "schemas": 107,
  "parameters": 459,
  "difficultyScore": 243.25,
  "difficulty": "Hard"
}