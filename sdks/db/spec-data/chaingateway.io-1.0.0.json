{
  "providerName": "chaingateway.io",
  "openApiRaw": "https://raw.githubusercontent.com/chaingateway/api-specification/main/Chaingateway.io.postman_collection.json",
  "securitySchemes": {},
  "homepage": "chaingateway.io",
  "apiVersion": "1.0.0",
  "methods": [
    {
      "url": "/v2/bitcoin/blocks/number",
      "method": "getlastblocknumber4",
      "httpMethod": "get",
      "tag": "Bitcoin",
      "description": "getLastBlockNumber",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bitcoin/blocks/{block}",
      "method": "getblock4",
      "httpMethod": "get",
      "tag": "Bitcoin",
      "description": "getBlock",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bitcoin/fees",
      "method": "getfees",
      "httpMethod": "get",
      "tag": "Bitcoin",
      "description": "getFees",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bitcoin/info",
      "method": "getblockchaininfo",
      "httpMethod": "get",
      "tag": "Bitcoin",
      "description": "getBlockchaIninfo",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bitcoin/transactions",
      "method": "sendtransaction4",
      "httpMethod": "post",
      "tag": "Bitcoin",
      "description": "sendTransaction",
      "parameters": [
        {
          "name": "amount",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "speed",
          "schema": "string",
          "description": ""
        },
        {
          "name": "subtractfee",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "description": ""
        },
        {
          "name": "walletname",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bitcoin/transactions/{id}/decoded",
      "method": "gettransaction4",
      "httpMethod": "get",
      "tag": "Bitcoin",
      "description": "getTransaction",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bitcoin/wallets",
      "method": "getwallet",
      "httpMethod": "get",
      "tag": "Bitcoin",
      "description": "getWallet",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bitcoin/wallets",
      "method": "createwallet",
      "httpMethod": "post",
      "tag": "Bitcoin",
      "description": "createWallet",
      "parameters": [
        {
          "name": "password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bitcoin/wallets/{name}/addresses/{address}/export",
      "method": "exportaddressprivatekey",
      "httpMethod": "post",
      "tag": "Bitcoin",
      "description": "exportAddressPrivateKey",
      "parameters": [
        {
          "name": "password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bitcoin/wallets/{wallet_name}/addresses",
      "method": "getwalletaddresses",
      "httpMethod": "get",
      "tag": "Bitcoin",
      "description": "getWalletAddresses",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bitcoin/wallets/{wallet_name}/addresses",
      "method": "createwalletaddress",
      "httpMethod": "post",
      "tag": "Bitcoin",
      "description": "createWalletAddress",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bitcoin/wallets/{walletname}",
      "method": "deletewallet",
      "httpMethod": "delete",
      "tag": "Bitcoin",
      "description": "deleteWallet",
      "parameters": [
        {
          "name": "password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bitcoin/webhooks",
      "method": "listsubscribedaddresses4",
      "httpMethod": "get",
      "tag": "Bitcoin",
      "description": "listSubscribedAddresses",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bitcoin/webhooks",
      "method": "subscribeaddress4",
      "httpMethod": "post",
      "tag": "Bitcoin",
      "description": "subscribeAddress",
      "parameters": [
        {
          "name": "from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bitcoin/webhooks/notifications/failed",
      "method": "listfailedipns4",
      "httpMethod": "get",
      "tag": "Bitcoin",
      "description": "listFailedIPNs",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bitcoin/webhooks/notifications/failed/{notification_id}",
      "method": "resendfailedipn4",
      "httpMethod": "post",
      "tag": "Bitcoin",
      "description": "resendFailedIPN",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bitcoin/webhooks/{id}",
      "method": "unsubscribeaddress4",
      "httpMethod": "delete",
      "tag": "Bitcoin",
      "description": "unsubscribeAddress",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/addresses",
      "method": "listaddress",
      "httpMethod": "get",
      "tag": "BinanceSmartChain",
      "description": "listAddress",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/addresses",
      "method": "newaddress2",
      "httpMethod": "post",
      "tag": "BinanceSmartChain",
      "description": "newAddress",
      "parameters": [
        {
          "name": "password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/addresses/export/{address}",
      "method": "exportaddress2",
      "httpMethod": "post",
      "tag": "BinanceSmartChain",
      "description": "exportAddress",
      "parameters": [
        {
          "name": "password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/addresses/import",
      "method": "importaddress2",
      "httpMethod": "post",
      "tag": "BinanceSmartChain",
      "description": "importAddress",
      "parameters": [
        {
          "name": "content",
          "schema": "object",
          "description": ""
        },
        {
          "name": "filename",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/addresses/{address}",
      "method": "deleteaddress2",
      "httpMethod": "delete",
      "tag": "BinanceSmartChain",
      "description": "deleteAddress",
      "parameters": [
        {
          "name": "password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/addresses/{address}/transactions/{page}",
      "method": "listtransactionsbyaddress2",
      "httpMethod": "get",
      "tag": "BinanceSmartChain",
      "description": "ListTransactionsByAddress",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/balances/{address}",
      "method": "getbinancecoinbalance",
      "httpMethod": "get",
      "tag": "BinanceSmartChain",
      "description": "getBinanceCoinBalance",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/balances/{contract}/bep20/{token_id}",
      "method": "getbep20Balance",
      "httpMethod": "get",
      "tag": "BinanceSmartChain",
      "description": "getBEP20Balance",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/bep20/{contract}",
      "method": "getbep20",
      "httpMethod": "get",
      "tag": "BinanceSmartChain",
      "description": "getBEP20",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/blocks/number",
      "method": "getlastblocknumber2",
      "httpMethod": "get",
      "tag": "BinanceSmartChain",
      "description": "getLastBlocknumber",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/blocks/{block}",
      "method": "getblock2",
      "httpMethod": "get",
      "tag": "BinanceSmartChain",
      "description": "getBlock",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/gasprice",
      "method": "getgasprice2",
      "httpMethod": "get",
      "tag": "BinanceSmartChain",
      "description": "getGasPrice",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/nfts/{contract}/owner/{token_id}",
      "method": "getnftowner2",
      "httpMethod": "get",
      "tag": "BinanceSmartChain",
      "description": "getNFTOwner",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/nfts/{contract}/uri/{token_id}",
      "method": "getnfturi2",
      "httpMethod": "get",
      "tag": "BinanceSmartChain",
      "description": "getNFTUri",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/transactions",
      "method": "sendtransaction2",
      "httpMethod": "post",
      "tag": "BinanceSmartChain",
      "description": "sendTransaction",
      "parameters": [
        {
          "name": "amount",
          "schema": "string",
          "description": ""
        },
        {
          "name": "from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/bsc/transactions/bep20",
      "method": "sendbep20",
      "httpMethod": "post",
      "tag": "BinanceSmartChain",
      "description": "sendBEP20",
      "parameters": [
        {
          "name": "amount",
          "schema": "string",
          "description": ""
        },
        {
          "name": "contractaddress",
          "schema": "string",
          "description": ""
        },
        {
          "name": "from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "gas",
          "schema": "number",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/bsc/transactions/bep721",
      "method": "sendbep721",
      "httpMethod": "post",
      "tag": "BinanceSmartChain",
      "description": "sendBEP721",
      "parameters": [
        {
          "name": "contractaddress",
          "schema": "string",
          "description": ""
        },
        {
          "name": "from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tokenid",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/bsc/transactions/broadcast",
      "method": "broadcasttransaction2",
      "httpMethod": "post",
      "tag": "BinanceSmartChain",
      "description": "broadcastTransaction",
      "parameters": [
        {
          "name": "data",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/transactions/{transaction}/decoded",
      "method": "gettransaction2",
      "httpMethod": "get",
      "tag": "BinanceSmartChain",
      "description": "getTransaction",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/transactions/{transaction}/receipt/decoded",
      "method": "gettransactionreceipt2",
      "httpMethod": "get",
      "tag": "BinanceSmartChain",
      "description": "getTransactionReceipt",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/webhooks",
      "method": "listsubscribedaddresses2",
      "httpMethod": "get",
      "tag": "BinanceSmartChain",
      "description": "listSubscribedAddresses",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/webhooks",
      "method": "subscribeaddress2",
      "httpMethod": "post",
      "tag": "BinanceSmartChain",
      "description": "subscribeAddress",
      "parameters": [
        {
          "name": "contractaddress",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ethereumaddress",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/webhooks/notifications/failed",
      "method": "listfailedipns2",
      "httpMethod": "get",
      "tag": "BinanceSmartChain",
      "description": "listFailedIPNs",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/webhooks/notifications/failed/{notification_id}",
      "method": "resendfailedipn2",
      "httpMethod": "post",
      "tag": "BinanceSmartChain",
      "description": "resendFailedIPN",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/bsc/webhooks/{webhook}",
      "method": "unsubscribeaddress2",
      "httpMethod": "delete",
      "tag": "BinanceSmartChain",
      "description": "unsubscribeAddress",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/eth/transactions/broadcast",
      "method": "broadcasttransaction",
      "httpMethod": "post",
      "tag": "Ethereum",
      "description": "broadcastTransaction",
      "parameters": [
        {
          "name": "data",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/addresses",
      "method": "listaddresses",
      "httpMethod": "get",
      "tag": "Ethereum",
      "description": "listAddresses",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/addresses",
      "method": "newaddress",
      "httpMethod": "post",
      "tag": "Ethereum",
      "description": "newAddress",
      "parameters": [
        {
          "name": "password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/addresses/export/{address}",
      "method": "exportaddress",
      "httpMethod": "post",
      "tag": "Ethereum",
      "description": "exportAddress",
      "parameters": [
        {
          "name": "password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/addresses/import",
      "method": "importaddress",
      "httpMethod": "post",
      "tag": "Ethereum",
      "description": "importAddress",
      "parameters": [
        {
          "name": "content",
          "schema": "object",
          "description": ""
        },
        {
          "name": "filename",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/addresses/{address}",
      "method": "deleteaddress",
      "httpMethod": "delete",
      "tag": "Ethereum",
      "description": "deleteAddress",
      "parameters": [
        {
          "name": "ethereumaddress",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/addresses/{address}/transactions/{page}",
      "method": "listtransactionsbyaddress",
      "httpMethod": "get",
      "tag": "Ethereum",
      "description": "ListTransactionsByAddress",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/balances/{address}",
      "method": "getethereumbalance",
      "httpMethod": "get",
      "tag": "Ethereum",
      "description": "getEthereumBalance",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/balances/{address}/erc20/{erc20_token}",
      "method": "getallerc20Balance",
      "httpMethod": "get",
      "tag": "Ethereum",
      "description": "getAllERC20Balance",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/blocks/number",
      "method": "getlastblocknumber",
      "httpMethod": "get",
      "tag": "Ethereum",
      "description": "getLastBlockNumber",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/blocks/{block}",
      "method": "getblock",
      "httpMethod": "get",
      "tag": "Ethereum",
      "description": "getBlock",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/erc20/{erc20_token}",
      "method": "geterc20",
      "httpMethod": "get",
      "tag": "Ethereum",
      "description": "getERC20",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/gasprice",
      "method": "getgasprice",
      "httpMethod": "get",
      "tag": "Ethereum",
      "description": "getGasPrice",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/nfts/{contract}/owner/{token_id}",
      "method": "getnftowner",
      "httpMethod": "get",
      "tag": "Ethereum",
      "description": "getNFTOwner",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/nfts/{contract}/uri/{token_id}",
      "method": "getnfturi",
      "httpMethod": "get",
      "tag": "Ethereum",
      "description": "getNFTUri",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/transactions",
      "method": "sendtransaction",
      "httpMethod": "post",
      "tag": "Ethereum",
      "description": "sendTransaction",
      "parameters": [
        {
          "name": "amount",
          "schema": "string",
          "description": ""
        },
        {
          "name": "from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "gas",
          "schema": "number",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/ethereum/transactions/erc20",
      "method": "senderc20",
      "httpMethod": "post",
      "tag": "Ethereum",
      "description": "sendERC20",
      "parameters": [
        {
          "name": "amount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "contractaddress",
          "schema": "string",
          "description": ""
        },
        {
          "name": "from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "gas",
          "schema": "number",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/ethereum/transactions/erc721",
      "method": "senderc721",
      "httpMethod": "post",
      "tag": "Ethereum",
      "description": "sendERC721",
      "parameters": [
        {
          "name": "contractaddress",
          "schema": "string",
          "description": ""
        },
        {
          "name": "from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tokenid",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/ethereum/transactions/{transaction}/decoded",
      "method": "gettransaction",
      "httpMethod": "get",
      "tag": "Ethereum",
      "description": "getTransaction",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/transactions/{transaction}/receipt/decoded",
      "method": "gettransactionreceipt",
      "httpMethod": "get",
      "tag": "Ethereum",
      "description": "getTransactionReceipt",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/webhooks",
      "method": "listsubscribedaddresses",
      "httpMethod": "get",
      "tag": "Ethereum",
      "description": "listSubscribedAddresses",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/webhooks",
      "method": "subscribeaddress",
      "httpMethod": "post",
      "tag": "Ethereum",
      "description": "subscribeAddress",
      "parameters": [
        {
          "name": "to",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/webhooks/notifications/failed/{notification}",
      "method": "resendfailedipn",
      "httpMethod": "post",
      "tag": "Ethereum",
      "description": "resendFailedIPN",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/webhooks/{webhook}",
      "method": "unsubscribeaddress",
      "httpMethod": "delete",
      "tag": "Ethereum",
      "description": "unsubscribeAddress",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/webkhooks/notifications/failed",
      "method": "listipnsbywebhookid",
      "httpMethod": "get",
      "tag": "Ethereum",
      "description": "listIPNsByWebhookId",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/ethereum/webkhooks/{webhook}/notifications/failed",
      "method": "listfailedipns",
      "httpMethod": "get",
      "tag": "Ethereum",
      "description": "listFailedIPNs",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/markets/currencies",
      "method": "getcurrencies",
      "httpMethod": "get",
      "tag": "Market",
      "description": "getCurrencies",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/markets/data/{currency1}/{currency2}",
      "method": "getpricedatabycurrency",
      "httpMethod": "get",
      "tag": "Market",
      "description": "getPriceDataByCurrency",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/markets/prices/{currency1}/{currency2}",
      "method": "getratebycurrency",
      "httpMethod": "get",
      "tag": "Market",
      "description": "getRateByCurrency",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/markets/prices/{currency1}/{currency2}/atl",
      "method": "getalltimelow",
      "httpMethod": "get",
      "tag": "Market",
      "description": "getAllTimeLow",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/markets/prices/{currency1}/{currenty2}/ath",
      "method": "getalltimehigh",
      "httpMethod": "get",
      "tag": "Market",
      "description": "getAllTimeHigh",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/addresses",
      "method": "listaddresses1",
      "httpMethod": "get",
      "tag": "Polygon",
      "description": "listAddresses",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/addresses",
      "method": "newaddress1",
      "httpMethod": "post",
      "tag": "Polygon",
      "description": "newAddress",
      "parameters": [
        {
          "name": "password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/addresses/export/{address}",
      "method": "exportaddress1",
      "httpMethod": "post",
      "tag": "Polygon",
      "description": "exportAddress",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/addresses/import",
      "method": "importaddress1",
      "httpMethod": "post",
      "tag": "Polygon",
      "description": "importAddress",
      "parameters": [
        {
          "name": "content",
          "schema": "object",
          "description": ""
        },
        {
          "name": "filename",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/addresses/{address}",
      "method": "deleteaddress1",
      "httpMethod": "delete",
      "tag": "Polygon",
      "description": "deleteAddress",
      "parameters": [
        {
          "name": "ethereumaddress",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/addresses/{address}/transactions/{page}",
      "method": "listtransactionsbyaddress1",
      "httpMethod": "get",
      "tag": "Polygon",
      "description": "ListTransactionsByAddress",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/balances/{address}",
      "method": "getpolygonbalance",
      "httpMethod": "get",
      "tag": "Polygon",
      "description": "getPolygonBalance",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/balances/{address}/erc20/{erc20_token}",
      "method": "geterc20Balance1",
      "httpMethod": "get",
      "tag": "Polygon",
      "description": "getERC20Balance",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/blocks/number",
      "method": "getlastblocknumber1",
      "httpMethod": "get",
      "tag": "Polygon",
      "description": "getLastBlockNumber",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/blocks/{block}",
      "method": "getblock1",
      "httpMethod": "get",
      "tag": "Polygon",
      "description": "getBlock",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/erc20/{erc20_token}",
      "method": "geterc201",
      "httpMethod": "get",
      "tag": "Polygon",
      "description": "getERC20",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/gasprice",
      "method": "getgasprice1",
      "httpMethod": "get",
      "tag": "Polygon",
      "description": "getGasPrice",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/nfts/{contract}/owner/{token_id}",
      "method": "getnftowner1",
      "httpMethod": "get",
      "tag": "Polygon",
      "description": "getNFTOwner",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/nfts/{ft_contract}/uri/{token_id}",
      "method": "getnfturi1",
      "httpMethod": "get",
      "tag": "Polygon",
      "description": "getNFTUri",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/transactions",
      "method": "sendtransaction1",
      "httpMethod": "post",
      "tag": "Polygon",
      "description": "sendTransaction",
      "parameters": [
        {
          "name": "amount",
          "schema": "string",
          "description": ""
        },
        {
          "name": "from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "gas",
          "schema": "number",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/polygon/transactions/broadcast",
      "method": "broadcasttransaction1",
      "httpMethod": "post",
      "tag": "Polygon",
      "description": "broadcastTransaction",
      "parameters": [
        {
          "name": "data",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/transactions/erc20",
      "method": "senderc201",
      "httpMethod": "post",
      "tag": "Polygon",
      "description": "sendERC20",
      "parameters": [
        {
          "name": "amount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "contractaddress",
          "schema": "string",
          "description": ""
        },
        {
          "name": "from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "gas",
          "schema": "number",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/polygon/transactions/erc721",
      "method": "senderc7211",
      "httpMethod": "post",
      "tag": "Polygon",
      "description": "sendERC721",
      "parameters": [
        {
          "name": "contractaddress",
          "schema": "string",
          "description": ""
        },
        {
          "name": "from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tokenid",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v2/polygon/transactions/{transaction}/decoded",
      "method": "gettransaction1",
      "httpMethod": "get",
      "tag": "Polygon",
      "description": "getTransaction",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/transactions/{transaction}/receipt/decoded",
      "method": "gettransactionreceipt1",
      "httpMethod": "get",
      "tag": "Polygon",
      "description": "getTransactionReceipt",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/webhooks",
      "method": "listsubscribedaddresses1",
      "httpMethod": "get",
      "tag": "Polygon",
      "description": "listSubscribedAddresses",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/webhooks",
      "method": "subscribeaddress1",
      "httpMethod": "post",
      "tag": "Polygon",
      "description": "subscribeAddress",
      "parameters": [
        {
          "name": "to",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/webhooks/notifications/failed/{notification_id}",
      "method": "resendfailedipn1",
      "httpMethod": "post",
      "tag": "Polygon",
      "description": "resendFailedIPN",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/webhooks/{webhook}",
      "method": "unsubscribeaddress1",
      "httpMethod": "delete",
      "tag": "Polygon",
      "description": "unsubscribeAddress",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/webkhooks/notifications/failed",
      "method": "listipnsbywebhookid1",
      "httpMethod": "get",
      "tag": "Polygon",
      "description": "listIPNsByWebhookId",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/polygon/webkhooks/{webhook}/notifications/failed",
      "method": "listfailedipns1",
      "httpMethod": "get",
      "tag": "Polygon",
      "description": "listFailedIPNs",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/tron/account/{address}/resources",
      "method": "getaccountresources",
      "httpMethod": "get",
      "tag": "Tron",
      "description": "getAccountResources",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/tron/addresses",
      "method": "newaddress3",
      "httpMethod": "post",
      "tag": "Tron",
      "description": "newAddress",
      "parameters": [
        {
          "name": "password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/tron/addresses/{address}/transactions/{page}",
      "method": "listtransactionsbyaddress3",
      "httpMethod": "get",
      "tag": "Tron",
      "description": "ListTransactionsByAddress",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/tron/balances/{account}/trc10/{tokenId}",
      "method": "gettrc10Balance",
      "httpMethod": "get",
      "tag": "Tron",
      "description": "getTRC10Balance",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/tron/balances/{account}/trc20/{token}",
      "method": "gettrc20Balance",
      "httpMethod": "get",
      "tag": "Tron",
      "description": "getTRC20Balance",
      "parameters": [
        {
          "name": "contractaddress",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tronaddress",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/tron/balances/{address}",
      "method": "gettronbalance",
      "httpMethod": "get",
      "tag": "Tron",
      "description": "getTronBalance",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/tron/blocks/number",
      "method": "getlastblocknumber3",
      "httpMethod": "get",
      "tag": "Tron",
      "description": "getLastBlockNumber",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/tron/blocks/{block}",
      "method": "getblock3",
      "httpMethod": "get",
      "tag": "Tron",
      "description": "getBlock",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/tron/chainparameters",
      "method": "getchainparameters",
      "httpMethod": "get",
      "tag": "Tron",
      "description": "getChainParameters",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/tron/transactions",
      "method": "sendtransaction3",
      "httpMethod": "post",
      "tag": "Tron",
      "description": "sendTransaction",
      "parameters": [
        {
          "name": "amount",
          "schema": "string",
          "description": ""
        },
        {
          "name": "privatekey",
          "schema": "string",
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/tron/transactions/trc10",
      "method": "sendtrc10",
      "httpMethod": "post",
      "tag": "Tron",
      "description": "sendTRC10",
      "parameters": [
        {
          "name": "amount",
          "schema": "string",
          "description": ""
        },
        {
          "name": "privatekey",
          "schema": "string",
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tokenId",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/tron/transactions/trc20",
      "method": "sendtrc20",
      "httpMethod": "post",
      "tag": "Tron",
      "description": "sendTRC20",
      "parameters": [
        {
          "name": "amount",
          "schema": "string",
          "description": ""
        },
        {
          "name": "contractaddress",
          "schema": "string",
          "description": ""
        },
        {
          "name": "from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "privatekey",
          "schema": "string",
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/tron/transactions/trc721",
      "method": "sendtrc721",
      "httpMethod": "post",
      "tag": "Tron",
      "description": "sendTRC721",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/v2/tron/transactions/{transaction}/decoded",
      "method": "gettransaction3",
      "httpMethod": "get",
      "tag": "Tron",
      "description": "getTransaction",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/tron/transactions/{transaction}/receipt/decoded",
      "method": "gettransactionreceipt3",
      "httpMethod": "get",
      "tag": "Tron",
      "description": "getTransactionReceipt",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/tron/webhooks",
      "method": "listsubscribedaddresses3",
      "httpMethod": "get",
      "tag": "Tron",
      "description": "listSubscribedAddresses",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/tron/webhooks",
      "method": "subscribeaddress3",
      "httpMethod": "post",
      "tag": "Tron",
      "description": "subscribeAddress",
      "parameters": [
        {
          "name": "from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/tron/webhooks/notifications/failed",
      "method": "listfailedipns3",
      "httpMethod": "get",
      "tag": "Tron",
      "description": "listFailedIPNs",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/tron/webhooks/notifications/failed/62640817eb594da78c7bee00",
      "method": "resendfailedipn3",
      "httpMethod": "post",
      "tag": "Tron",
      "description": "resendFailedIPN",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/tron/webhooks/{webhookid}",
      "method": "unsubscribeaddress3",
      "httpMethod": "delete",
      "tag": "Tron",
      "description": "unsubscribeAddress",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://dev.api.chaingateway.io",
  "apiDescription": "This API allows you to interact with Ethereum, Binance smart chain, Polygon and Tron blockchain. If you ever looked for a possibility to automate token or payments this is the right place.  \nYou still have no idea for real use cases? Let me give you some examples: Accept your own token as payment method for your shop, distribute airdrop tokens of your ICO, convert your site currency to a token that can be traded on exchanges and many more.  \nThere are a lot of use cases which are not only limited to sending tokens but also receiving them. You could even create a secure wallet for your token which only the wallet owner has access to. Additionally we offer a lot of functions for retrieving blockchain data, including transactions. Using our webhook system, it is possible to receive notifications when events on the blockchain occur, for example when a transfer to a specific address is happening.\n\n# Registering\n\nTo use this Blockchain API, you need to register for a free account on [Chaingateway.io](https://chaingateway.io)\n\nOnce you have created your account, you can create an API key in your Account panel to use with our API.\n\n# Postman\n\nPostman is a great software to test APIs, it helped us a lot when developing this API. If you haven't installed it yet, we recommend to do so\n\nWe have created a Postman collection that allows to import all functions and their settings, including descriptions in Postman. This way you can test all functions with the click of a button (just change the parameters before).\n\n# API Specifications\n\nFor many API clients, websites and development projects you may need a file which specifies all function endpoints of our API. These files can be found in our [Github repository](https://github.com/chaingateway/api-specification), always updated in the formats \"Postman Collection\" and \"OPENAPI/SWAGGER\".\n\n# Authorization\n\nYou can get your personal API Key from your account dashboard. It is used by us to determine who is accessing the API and to count the requests by that account. There are 2 possibilities to use it in your requests:\n\nAdd it in the HTTP header as\n\n`Authorization: q9PdaWuD4j6DK6vsUgehhL8pgarSrS9m`\n\nPlease do not share your api key! If you did so by mistake, immediately regenerate it in your account panel!",
  "apiTitle": "Chaingateway.io V2",
  "endpoints": 109,
  "sdkMethods": 180,
  "schemas": 0,
  "parameters": 107,
  "difficultyScore": 206.75,
  "difficulty": "Hard"
}