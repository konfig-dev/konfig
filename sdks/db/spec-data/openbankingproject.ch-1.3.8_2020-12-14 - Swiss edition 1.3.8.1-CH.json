{
  "providerName": "openbankingproject.ch",
  "openApiRaw": "https://raw.githubusercontent.com/openbankingproject-ch/obp-apis/master/swiss-ng-api.yaml",
  "securitySchemes": {
    "BearerAuthOAuth": {
      "description": "Bearer Token. \n\nIs contained only, if an OAuth2 based authentication was performed in a pre-step or \nan OAuth2 based SCA was performed in a preceding AIS service in the same session.\n",
      "scheme": "bearer",
      "type": "http"
    }
  },
  "homepage": "openbankingproject.ch",
  "apiVersion": "1.3.8_2020-12-14 - Swiss edition 1.3.8.1-CH",
  "methods": [
    {
      "url": "/v1/accounts",
      "method": "getAccountList",
      "httpMethod": "get",
      "tag": "Account Information Service (AIS)",
      "description": "Read account list",
      "parameters": [
        {
          "name": "withBalance",
          "schema": "boolean",
          "required": false,
          "description": "If contained, this function reads the list of accessible payment accounts including the booking balance,\nif granted by the PSU in the related consent and available by the ASPSP.\nThis parameter might be ignored by the ASPSP.\n"
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "consentId",
          "schema": "string",
          "required": true,
          "description": "This then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding HTTP request\nIP Address field between PSU and TPP.\nIt shall be contained if and only if this request was actively initiated by the PSU.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of accounts with details.\n"
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "406",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 406.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        },
        {
          "statusCode": "429",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 429.\n"
        }
      ]
    },
    {
      "url": "/v1/accounts/{account-id}",
      "method": "readAccountDetails",
      "httpMethod": "get",
      "tag": "Account Information Service (AIS)",
      "description": "Read account details",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "This identification is denoting the addressed (card) account. \nThe account-id is retrieved by using a \"Read Account List\" or \"Read Card Account list\" call. \nThe account-id is the \"resourceId\" attribute of the account structure. \nIts value is constant at least throughout the lifecycle of a given consent.\n"
        },
        {
          "name": "withBalance",
          "schema": "boolean",
          "required": false,
          "description": "If contained, this function reads the list of accessible payment accounts including the booking balance,\nif granted by the PSU in the related consent and available by the ASPSP.\nThis parameter might be ignored by the ASPSP.\n"
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "consentId",
          "schema": "string",
          "required": true,
          "description": "This then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding HTTP request\nIP Address field between PSU and TPP.\nIt shall be contained if and only if this request was actively initiated by the PSU.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "406",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 406.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        },
        {
          "statusCode": "429",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 429.\n"
        }
      ]
    },
    {
      "url": "/v1/accounts/{account-id}/balances",
      "method": "getBalances",
      "httpMethod": "get",
      "tag": "Account Information Service (AIS)",
      "description": "Read balance",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "This identification is denoting the addressed (card) account. \nThe account-id is retrieved by using a \"Read Account List\" or \"Read Card Account list\" call. \nThe account-id is the \"resourceId\" attribute of the account structure. \nIts value is constant at least throughout the lifecycle of a given consent.\n"
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "consentId",
          "schema": "string",
          "required": true,
          "description": "This then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding HTTP request\nIP Address field between PSU and TPP.\nIt shall be contained if and only if this request was actively initiated by the PSU.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Body of the response for a successful read balance for an account request."
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "406",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 406.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        },
        {
          "statusCode": "429",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 429.\n"
        }
      ]
    },
    {
      "url": "/v1/accounts/{account-id}/transactions",
      "method": "getTransactionList",
      "httpMethod": "get",
      "tag": "Account Information Service (AIS)",
      "description": "Read transaction list of an account",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "This identification is denoting the addressed (card) account. \nThe account-id is retrieved by using a \"Read Account List\" or \"Read Card Account list\" call. \nThe account-id is the \"resourceId\" attribute of the account structure. \nIts value is constant at least throughout the lifecycle of a given consent.\n"
        },
        {
          "name": "dateFrom",
          "schema": "string",
          "required": false,
          "description": "Conditional: Starting date (inclusive the date dateFrom) of the transaction list, mandated if no delta access is required\nand if bookingStatus does not equal \"information\".\n\nFor booked transactions, the relevant date is the booking date. \n\nFor pending transactions, the relevant date is the entry date, which may not be transparent \nneither in this API nor other channels of the ASPSP.\n"
        },
        {
          "name": "dateTo",
          "schema": "string",
          "required": false,
          "description": "End date (inclusive the data dateTo) of the transaction list, default is \"now\" if not given.\n\nMight be ignored if a delta function is used.\n\nFor booked transactions, the relevant date is the booking date.\n\nFor pending transactions, the relevant date is the entry date, which may not be transparent\nneither in this API nor other channels of the ASPSP.\n"
        },
        {
          "name": "entryReferenceFrom",
          "schema": "string",
          "required": false,
          "description": "This data attribute is indicating that the AISP is in favour to get all transactions after\nthe transaction with identification entryReferenceFrom alternatively to the above defined period.\nThis is a implementation of a delta access.\nIf this data element is contained, the entries \"dateFrom\" and \"dateTo\" might be ignored by the ASPSP\nif a delta report is supported.\n\nOptional if supported by API provider.\n"
        },
        {
          "name": "bookingStatus",
          "schema": "string",
          "required": true,
          "description": "Permitted codes are \n  * \"information\",\n  * \"booked\",\n  * \"pending\", and \n  * \"both\"\n\"booked\" shall be supported by the ASPSP.\nTo support the \"pending\" and \"both\" feature is optional for the ASPSP,\nError code if not supported in the online banking frontend\n"
        },
        {
          "name": "deltaList",
          "schema": "boolean",
          "description": "This data attribute is indicating that the AISP is in favour to get all transactions after the last report access for this PSU on the addressed account. This is another implementation of a delta access-report.\nThis delta indicator might be rejected by the ASPSP if this function is not supported.\nOptional if supported by API provider"
        },
        {
          "name": "withBalance",
          "schema": "boolean",
          "required": false,
          "description": "If contained, this function reads the list of accessible payment accounts including the booking balance,\nif granted by the PSU in the related consent and available by the ASPSP.\nThis parameter might be ignored by the ASPSP.\n"
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "consentId",
          "schema": "string",
          "required": true,
          "description": "This then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding HTTP request\nIP Address field between PSU and TPP.\nIt shall be contained if and only if this request was actively initiated by the PSU.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Body of the JSON response for a successful read transaction list request.\nThis account report contains transactions resulting from the query parameters.\n"
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "406",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 406.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        },
        {
          "statusCode": "429",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 429.\n"
        }
      ]
    },
    {
      "url": "/v1/accounts/{account-id}/transactions/{transactionId}",
      "method": "getTransactionDetails",
      "httpMethod": "get",
      "tag": "Account Information Service (AIS)",
      "description": "Read transaction details",
      "parameters": [
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "This identification is denoting the addressed (card) account. \nThe account-id is retrieved by using a \"Read Account List\" or \"Read Card Account list\" call. \nThe account-id is the \"resourceId\" attribute of the account structure. \nIts value is constant at least throughout the lifecycle of a given consent.\n"
        },
        {
          "name": "transactionId",
          "schema": "string",
          "required": true,
          "description": "This identification is given by the attribute transactionId of the corresponding entry of a transaction list.\n"
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "consentId",
          "schema": "string",
          "required": true,
          "description": "This then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding HTTP request\nIP Address field between PSU and TPP.\nIt shall be contained if and only if this request was actively initiated by the PSU.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "406",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 406.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        },
        {
          "statusCode": "429",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 429.\n"
        }
      ]
    },
    {
      "url": "/v1/consents",
      "method": "createConsent",
      "httpMethod": "post",
      "tag": "Account Information Service (AIS)",
      "description": "Create consent",
      "parameters": [
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuId",
          "schema": "string",
          "required": false,
          "description": "Client ID of the PSU in the ASPSP client interface.\n\nMight be mandated in the ASPSP's documentation.\n\nIt might be contained even if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding\nAIS service in the same session.\nIn this case the ASPSP might check whether PSU-ID and token match,\naccording to ASPSP documentation.\n"
        },
        {
          "name": "psuIdType",
          "schema": "string",
          "required": false,
          "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n\nIn this case, the mean and use are then defined in the ASPSP's documentation.\n"
        },
        {
          "name": "psuCorporateId",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "psuCorporateIdType",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "tppRedirectPreferred",
          "schema": "boolean",
          "required": false,
          "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach.\nIf it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled\nSCA approach, depending on the choice of the SCA procedure by the TPP/PSU.\nIf the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the\nTPP/PSU.\n"
        },
        {
          "name": "tppRedirectUri",
          "schema": "string",
          "required": false,
          "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect.\n\nMandated for the Redirect SCA Approach, specifically\nwhen TPP-Redirect-Preferred equals \"true\".\nIt is recommended to always use this header field.\n\n**Remark for Future:**\nThis field might be changed to mandatory in the next version of the specification.\n"
        },
        {
          "name": "tppNokRedirectUri",
          "schema": "string",
          "required": false,
          "description": "If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case\nof a negative result of the redirect SCA method. This might be ignored by the ASPSP.\n"
        },
        {
          "name": "tppExplicitAuthorisationPreferred",
          "schema": "boolean",
          "required": false,
          "description": "If it equals \"true\", the TPP prefers to start the authorisation process separately,\ne.g. because of the usage of a signing basket.\nThis preference might be ignored by the ASPSP, if a signing basket is not supported as functionality.\n\nIf it equals \"false\" or if the parameter is not used, there is no preference of the TPP.\nThis especially indicates that the TPP assumes a direct authorisation of the transaction in the next step,\nwithout using a signing basket.\n"
        },
        {
          "name": "tppBrandLoggingInformation",
          "schema": "string",
          "required": false,
          "description": "This header might be used by TPPs to inform the ASPSP about the brand used by the TPP towards the PSU. \nThis information is meant for logging entries to enhance communication between ASPSP and PSU or ASPSP and TPP. \nThis header might be ignored by the ASPSP.\n"
        },
        {
          "name": "tppNotificationUri",
          "schema": "string",
          "required": false,
          "description": "URI for the Endpoint of the TPP-API to which the status of the payment initiation should be sent.\nThis header field may by ignored by the ASPSP.\n\nFor security reasons, it shall be ensured that the TPP-Notification-URI as introduced above is secured by the TPP eIDAS QWAC used for identification of the TPP. The following applies:\n\nURIs which are provided by TPPs in TPP-Notification-URI shall comply with the domain secured by the eIDAS QWAC certificate of the TPP in the field CN or SubjectAltName of the certificate. Please note that in case of example-TPP.com as certificate entry TPP- Notification-URI like www.example-TPP.com/xs2a-client/v1/ASPSPidentifcation/mytransaction- id/notifications or notifications.example-TPP.com/xs2a-client/v1/ASPSPidentifcation/mytransaction- id/notifications would be compliant.\n\nWildcard definitions shall be taken into account for compliance checks by the ASPSP.\n ASPSPs may respond with ASPSP-Notification-Support set to false, if the provided URIs do not comply.\n"
        },
        {
          "name": "tppNotificationContentPreferred",
          "schema": "string",
          "required": false,
          "description": "The string has the form\n\nstatus=X1, ..., Xn\n\nwhere Xi is one of the constants SCA, PROCESS, LAST and where constants are not\nrepeated.\nThe usage of the constants supports the of following semantics:\n\n  SCA: A notification on every change of the scaStatus attribute for all related authorisation processes is preferred by the TPP.\n\n  PROCESS: A notification on all changes of consentStatus or transactionStatus attributes is preferred by the TPP.\n  LAST: Only a notification on the last consentStatus or transactionStatus as available in the XS2A interface is preferred by the TPP.\n\nThis header field may be ignored, if the ASPSP does not support resource notification services for the related TPP.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": true,
          "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\nIf not available, the TPP shall use the IP Address used by the TPP when submitting this request.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        },
        {
          "name": "access",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "combinedServiceIndicator",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "frequencyPerDay",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "recurringIndicator",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "validUntil",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Body of the JSON response for a successful consent request."
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "406",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 406.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        },
        {
          "statusCode": "429",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 429.\n"
        }
      ]
    },
    {
      "url": "/v1/consents/{consentId}",
      "method": "deleteConsent",
      "httpMethod": "delete",
      "tag": "Account Information Service (AIS)",
      "description": "Delete Consent",
      "parameters": [
        {
          "name": "consentId",
          "schema": "string",
          "required": true,
          "description": "ID of the corresponding consent object as returned by an account information consent request.\n"
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding HTTP request\nIP Address field between PSU and TPP.\nIt shall be contained if and only if this request was actively initiated by the PSU.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "406",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 406.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        },
        {
          "statusCode": "429",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 429.\n"
        }
      ]
    },
    {
      "url": "/v1/consents/{consentId}",
      "method": "getConsentInformation",
      "httpMethod": "get",
      "tag": "Account Information Service (AIS)",
      "description": "Get consent request",
      "parameters": [
        {
          "name": "consentId",
          "schema": "string",
          "required": true,
          "description": "ID of the corresponding consent object as returned by an account information consent request.\n"
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding HTTP request\nIP Address field between PSU and TPP.\nIt shall be contained if and only if this request was actively initiated by the PSU.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Body of the JSON response for a successfull get consent request."
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "406",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 406.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        },
        {
          "statusCode": "429",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 429.\n"
        }
      ]
    },
    {
      "url": "/v1/consents/{consentId}/authorisations",
      "method": "getConsentAuthorisation",
      "httpMethod": "get",
      "tag": "Account Information Service (AIS)",
      "description": "Get consent authorisation sub-resources request",
      "parameters": [
        {
          "name": "consentId",
          "schema": "string",
          "required": true,
          "description": "ID of the corresponding consent object as returned by an account information consent request.\n"
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding HTTP request\nIP Address field between PSU and TPP.\nIt shall be contained if and only if this request was actively initiated by the PSU.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An array of all authorisationIds."
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "406",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 406.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        },
        {
          "statusCode": "429",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 429.\n"
        }
      ]
    },
    {
      "url": "/v1/consents/{consentId}/authorisations",
      "method": "startConsentAuthorisation",
      "httpMethod": "post",
      "tag": "Account Information Service (AIS)",
      "description": "Start the authorisation process for a consent",
      "parameters": [
        {
          "name": "consentId",
          "schema": "string",
          "required": true,
          "description": "ID of the corresponding consent object as returned by an account information consent request.\n"
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuId",
          "schema": "string",
          "required": false,
          "description": "Client ID of the PSU in the ASPSP client interface.\n\nMight be mandated in the ASPSP's documentation.\n\nIt might be contained even if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding\nAIS service in the same session.\nIn this case the ASPSP might check whether PSU-ID and token match,\naccording to ASPSP documentation.\n"
        },
        {
          "name": "psuIdType",
          "schema": "string",
          "required": false,
          "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n\nIn this case, the mean and use are then defined in the ASPSP's documentation.\n"
        },
        {
          "name": "psuCorporateId",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "psuCorporateIdType",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "tppRedirectPreferred",
          "schema": "boolean",
          "required": false,
          "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach.\nIf it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled\nSCA approach, depending on the choice of the SCA procedure by the TPP/PSU.\nIf the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the\nTPP/PSU.\n"
        },
        {
          "name": "tppRedirectUri",
          "schema": "string",
          "required": false,
          "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect.\n\nMandated for the Redirect SCA Approach, specifically\nwhen TPP-Redirect-Preferred equals \"true\".\nIt is recommended to always use this header field.\n\n**Remark for Future:**\nThis field might be changed to mandatory in the next version of the specification.\n"
        },
        {
          "name": "tppNokRedirectUri",
          "schema": "string",
          "required": false,
          "description": "If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case\nof a negative result of the redirect SCA method. This might be ignored by the ASPSP.\n"
        },
        {
          "name": "tppNotificationUri",
          "schema": "string",
          "required": false,
          "description": "URI for the Endpoint of the TPP-API to which the status of the payment initiation should be sent.\nThis header field may by ignored by the ASPSP.\n\nFor security reasons, it shall be ensured that the TPP-Notification-URI as introduced above is secured by the TPP eIDAS QWAC used for identification of the TPP. The following applies:\n\nURIs which are provided by TPPs in TPP-Notification-URI shall comply with the domain secured by the eIDAS QWAC certificate of the TPP in the field CN or SubjectAltName of the certificate. Please note that in case of example-TPP.com as certificate entry TPP- Notification-URI like www.example-TPP.com/xs2a-client/v1/ASPSPidentifcation/mytransaction- id/notifications or notifications.example-TPP.com/xs2a-client/v1/ASPSPidentifcation/mytransaction- id/notifications would be compliant.\n\nWildcard definitions shall be taken into account for compliance checks by the ASPSP.\n ASPSPs may respond with ASPSP-Notification-Support set to false, if the provided URIs do not comply.\n"
        },
        {
          "name": "tppNotificationContentPreferred",
          "schema": "string",
          "required": false,
          "description": "The string has the form\n\nstatus=X1, ..., Xn\n\nwhere Xi is one of the constants SCA, PROCESS, LAST and where constants are not\nrepeated.\nThe usage of the constants supports the of following semantics:\n\n  SCA: A notification on every change of the scaStatus attribute for all related authorisation processes is preferred by the TPP.\n\n  PROCESS: A notification on all changes of consentStatus or transactionStatus attributes is preferred by the TPP.\n  LAST: Only a notification on the last consentStatus or transactionStatus as available in the XS2A interface is preferred by the TPP.\n\nThis header field may be ignored, if the ASPSP does not support resource notification services for the related TPP.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding HTTP request\nIP Address field between PSU and TPP.\nIt shall be contained if and only if this request was actively initiated by the PSU.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Body of the JSON response for a Start SCA authorisation request."
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "406",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 406.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        },
        {
          "statusCode": "429",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 429.\n"
        }
      ]
    },
    {
      "url": "/v1/consents/{consentId}/authorisations/{authorisationId}",
      "method": "getConsentScaStatus",
      "httpMethod": "get",
      "tag": "Account Information Service (AIS)",
      "description": "Read the SCA status of the consent authorisation",
      "parameters": [
        {
          "name": "consentId",
          "schema": "string",
          "required": true,
          "description": "ID of the corresponding consent object as returned by an account information consent request.\n"
        },
        {
          "name": "authorisationId",
          "schema": "string",
          "required": true,
          "description": "Resource identification of the related SCA."
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding HTTP request\nIP Address field between PSU and TPP.\nIt shall be contained if and only if this request was actively initiated by the PSU.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Body of the JSON response with SCA Status."
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "406",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 406.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        },
        {
          "statusCode": "429",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 429.\n"
        }
      ]
    },
    {
      "url": "/v1/consents/{consentId}/authorisations/{authorisationId}",
      "method": "updateConsentsPsuData",
      "httpMethod": "put",
      "tag": "Account Information Service (AIS)",
      "description": "Update PSU Data for consents",
      "parameters": [
        {
          "name": "consentId",
          "schema": "string",
          "required": true,
          "description": "ID of the corresponding consent object as returned by an account information consent request.\n"
        },
        {
          "name": "authorisationId",
          "schema": "string",
          "required": true,
          "description": "Resource identification of the related SCA."
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuId",
          "schema": "string",
          "required": false,
          "description": "Client ID of the PSU in the ASPSP client interface.\n\nMight be mandated in the ASPSP's documentation.\n\nIt might be contained even if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding\nAIS service in the same session.\nIn this case the ASPSP might check whether PSU-ID and token match,\naccording to ASPSP documentation.\n"
        },
        {
          "name": "psuIdType",
          "schema": "string",
          "required": false,
          "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n\nIn this case, the mean and use are then defined in the ASPSP's documentation.\n"
        },
        {
          "name": "psuCorporateId",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "psuCorporateIdType",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding HTTP request\nIP Address field between PSU and TPP.\nIt shall be contained if and only if this request was actively initiated by the PSU.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "406",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 406.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        },
        {
          "statusCode": "429",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 429.\n"
        }
      ]
    },
    {
      "url": "/v1/consents/{consentId}/status",
      "method": "getConsentStatus",
      "httpMethod": "get",
      "tag": "Account Information Service (AIS)",
      "description": "Consent status request",
      "parameters": [
        {
          "name": "consentId",
          "schema": "string",
          "required": true,
          "description": "ID of the corresponding consent object as returned by an account information consent request.\n"
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding HTTP request\nIP Address field between PSU and TPP.\nIt shall be contained if and only if this request was actively initiated by the PSU.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Body of the JSON response for a successful get status request for a consent."
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "406",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 406.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        },
        {
          "statusCode": "429",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 429.\n"
        }
      ]
    },
    {
      "url": "/v1/funds-confirmations",
      "method": "checkAvailabilityOfFunds",
      "httpMethod": "post",
      "tag": "Confirmation of Funds Service (PIIS)",
      "description": "Confirmation of funds request",
      "parameters": [
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "authorization",
          "schema": "string",
          "required": false,
          "description": "This field  might be used in case where a consent was agreed between ASPSP and PSU through an OAuth2 based protocol,\nfacilitated by the TPP.\n"
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "account",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "cardNumber",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "instructedAmount",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "payee",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Equals \"true\" if sufficient funds are available at the time of the request,\n\"false\" otherwise.\n"
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        }
      ]
    },
    {
      "url": "/v1/signing-baskets",
      "method": "createSigningBasket",
      "httpMethod": "post",
      "tag": "Signing Baskets Service (SBS)",
      "description": "Create a signing basket resource",
      "parameters": [
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuId",
          "schema": "string",
          "required": false,
          "description": "Client ID of the PSU in the ASPSP client interface.\n\nMight be mandated in the ASPSP's documentation.\n\nIt might be contained even if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding\nAIS service in the same session.\nIn this case the ASPSP might check whether PSU-ID and token match,\naccording to ASPSP documentation.\n"
        },
        {
          "name": "psuIdType",
          "schema": "string",
          "required": false,
          "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n\nIn this case, the mean and use are then defined in the ASPSP's documentation.\n"
        },
        {
          "name": "psuCorporateId",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "psuCorporateIdType",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "consentId",
          "schema": "string",
          "required": false,
          "description": "This data element may be contained, if the payment initiation transaction is part of a session, i.e. combined AIS/PIS service.\nThis then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": true,
          "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\nIf not available, the TPP shall use the IP Address used by the TPP when submitting this request.\n"
        },
        {
          "name": "tppRedirectPreferred",
          "schema": "boolean",
          "required": false,
          "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach.\nIf it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled\nSCA approach, depending on the choice of the SCA procedure by the TPP/PSU.\nIf the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the\nTPP/PSU.\n"
        },
        {
          "name": "tppRedirectUri",
          "schema": "string",
          "required": false,
          "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect.\n\nMandated for the Redirect SCA Approach, specifically\nwhen TPP-Redirect-Preferred equals \"true\".\nIt is recommended to always use this header field.\n\n**Remark for Future:**\nThis field might be changed to mandatory in the next version of the specification.\n"
        },
        {
          "name": "tppNokRedirectUri",
          "schema": "string",
          "required": false,
          "description": "If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case\nof a negative result of the redirect SCA method. This might be ignored by the ASPSP.\n"
        },
        {
          "name": "tppExplicitAuthorisationPreferred",
          "schema": "boolean",
          "required": false,
          "description": "If it equals \"true\", the TPP prefers to start the authorisation process separately,\ne.g. because of the usage of a signing basket.\nThis preference might be ignored by the ASPSP, if a signing basket is not supported as functionality.\n\nIf it equals \"false\" or if the parameter is not used, there is no preference of the TPP.\nThis especially indicates that the TPP assumes a direct authorisation of the transaction in the next step,\nwithout using a signing basket.\n"
        },
        {
          "name": "tppNotificationUri",
          "schema": "string",
          "required": false,
          "description": "URI for the Endpoint of the TPP-API to which the status of the payment initiation should be sent.\nThis header field may by ignored by the ASPSP.\n\nFor security reasons, it shall be ensured that the TPP-Notification-URI as introduced above is secured by the TPP eIDAS QWAC used for identification of the TPP. The following applies:\n\nURIs which are provided by TPPs in TPP-Notification-URI shall comply with the domain secured by the eIDAS QWAC certificate of the TPP in the field CN or SubjectAltName of the certificate. Please note that in case of example-TPP.com as certificate entry TPP- Notification-URI like www.example-TPP.com/xs2a-client/v1/ASPSPidentifcation/mytransaction- id/notifications or notifications.example-TPP.com/xs2a-client/v1/ASPSPidentifcation/mytransaction- id/notifications would be compliant.\n\nWildcard definitions shall be taken into account for compliance checks by the ASPSP.\n ASPSPs may respond with ASPSP-Notification-Support set to false, if the provided URIs do not comply.\n"
        },
        {
          "name": "tppNotificationContentPreferred",
          "schema": "string",
          "required": false,
          "description": "The string has the form\n\nstatus=X1, ..., Xn\n\nwhere Xi is one of the constants SCA, PROCESS, LAST and where constants are not\nrepeated.\nThe usage of the constants supports the of following semantics:\n\n  SCA: A notification on every change of the scaStatus attribute for all related authorisation processes is preferred by the TPP.\n\n  PROCESS: A notification on all changes of consentStatus or transactionStatus attributes is preferred by the TPP.\n  LAST: Only a notification on the last consentStatus or transactionStatus as available in the XS2A interface is preferred by the TPP.\n\nThis header field may be ignored, if the ASPSP does not support resource notification services for the related TPP.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        },
        {
          "name": "consentIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "paymentIds",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Body of the JSON response for a successful create signing basket request."
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        }
      ]
    },
    {
      "url": "/v1/signing-baskets/{basketId}",
      "method": "deleteSigningBasket",
      "httpMethod": "delete",
      "tag": "Signing Baskets Service (SBS)",
      "description": "Delete the signing basket",
      "parameters": [
        {
          "name": "basketId",
          "schema": "string",
          "required": true,
          "description": "This identification of the corresponding signing basket object.\n"
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        }
      ]
    },
    {
      "url": "/v1/signing-baskets/{basketId}",
      "method": "getSigningBasket",
      "httpMethod": "get",
      "tag": "Signing Baskets Service (SBS)",
      "description": "Returns the content of an signing basket object",
      "parameters": [
        {
          "name": "basketId",
          "schema": "string",
          "required": true,
          "description": "This identification of the corresponding signing basket object.\n"
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Body of the JSON response for a successful get signing basket request.\n\n  * 'payments': payment initiations which shall be authorised through this signing basket.\n  * 'consents': consent objects which shall be authorised through this signing basket.\n  * 'transactionStatus': Only the codes RCVD, ACTC, RJCT are used.\n  * '_links': The ASPSP might integrate hyperlinks to indicate next (authorisation) steps to be taken.\n"
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        }
      ]
    },
    {
      "url": "/v1/signing-baskets/{basketId}/authorisations",
      "method": "getSigningBasketAuthorisation",
      "httpMethod": "get",
      "tag": "Signing Baskets Service (SBS)",
      "description": "Get signing basket authorisation sub-resources request",
      "parameters": [
        {
          "name": "basketId",
          "schema": "string",
          "required": true,
          "description": "This identification of the corresponding signing basket object.\n"
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An array of all authorisationIds."
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        }
      ]
    },
    {
      "url": "/v1/signing-baskets/{basketId}/authorisations",
      "method": "startSigningBasketAuthorisation",
      "httpMethod": "post",
      "tag": "Signing Baskets Service (SBS)",
      "description": "Start the authorisation process for a signing basket",
      "parameters": [
        {
          "name": "basketId",
          "schema": "string",
          "required": true,
          "description": "This identification of the corresponding signing basket object.\n"
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuId",
          "schema": "string",
          "required": false,
          "description": "Client ID of the PSU in the ASPSP client interface.\n\nMight be mandated in the ASPSP's documentation.\n\nIt might be contained even if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding\nAIS service in the same session.\nIn this case the ASPSP might check whether PSU-ID and token match,\naccording to ASPSP documentation.\n"
        },
        {
          "name": "psuIdType",
          "schema": "string",
          "required": false,
          "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n\nIn this case, the mean and use are then defined in the ASPSP's documentation.\n"
        },
        {
          "name": "psuCorporateId",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "psuCorporateIdType",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "tppRedirectPreferred",
          "schema": "boolean",
          "required": false,
          "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach.\nIf it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled\nSCA approach, depending on the choice of the SCA procedure by the TPP/PSU.\nIf the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the\nTPP/PSU.\n"
        },
        {
          "name": "tppRedirectUri",
          "schema": "string",
          "required": false,
          "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect.\n\nMandated for the Redirect SCA Approach, specifically\nwhen TPP-Redirect-Preferred equals \"true\".\nIt is recommended to always use this header field.\n\n**Remark for Future:**\nThis field might be changed to mandatory in the next version of the specification.\n"
        },
        {
          "name": "tppNokRedirectUri",
          "schema": "string",
          "required": false,
          "description": "If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case\nof a negative result of the redirect SCA method. This might be ignored by the ASPSP.\n"
        },
        {
          "name": "tppNotificationUri",
          "schema": "string",
          "required": false,
          "description": "URI for the Endpoint of the TPP-API to which the status of the payment initiation should be sent.\nThis header field may by ignored by the ASPSP.\n\nFor security reasons, it shall be ensured that the TPP-Notification-URI as introduced above is secured by the TPP eIDAS QWAC used for identification of the TPP. The following applies:\n\nURIs which are provided by TPPs in TPP-Notification-URI shall comply with the domain secured by the eIDAS QWAC certificate of the TPP in the field CN or SubjectAltName of the certificate. Please note that in case of example-TPP.com as certificate entry TPP- Notification-URI like www.example-TPP.com/xs2a-client/v1/ASPSPidentifcation/mytransaction- id/notifications or notifications.example-TPP.com/xs2a-client/v1/ASPSPidentifcation/mytransaction- id/notifications would be compliant.\n\nWildcard definitions shall be taken into account for compliance checks by the ASPSP.\n ASPSPs may respond with ASPSP-Notification-Support set to false, if the provided URIs do not comply.\n"
        },
        {
          "name": "tppNotificationContentPreferred",
          "schema": "string",
          "required": false,
          "description": "The string has the form\n\nstatus=X1, ..., Xn\n\nwhere Xi is one of the constants SCA, PROCESS, LAST and where constants are not\nrepeated.\nThe usage of the constants supports the of following semantics:\n\n  SCA: A notification on every change of the scaStatus attribute for all related authorisation processes is preferred by the TPP.\n\n  PROCESS: A notification on all changes of consentStatus or transactionStatus attributes is preferred by the TPP.\n  LAST: Only a notification on the last consentStatus or transactionStatus as available in the XS2A interface is preferred by the TPP.\n\nThis header field may be ignored, if the ASPSP does not support resource notification services for the related TPP.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Body of the JSON response for a Start SCA authorisation request."
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        }
      ]
    },
    {
      "url": "/v1/signing-baskets/{basketId}/authorisations/{authorisationId}",
      "method": "getSigningBasketScaStatus",
      "httpMethod": "get",
      "tag": "Signing Baskets Service (SBS)",
      "description": "Read the SCA status of the signing basket authorisation",
      "parameters": [
        {
          "name": "basketId",
          "schema": "string",
          "required": true,
          "description": "This identification of the corresponding signing basket object.\n"
        },
        {
          "name": "authorisationId",
          "schema": "string",
          "required": true,
          "description": "Resource identification of the related SCA."
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Body of the JSON response with SCA Status."
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        }
      ]
    },
    {
      "url": "/v1/signing-baskets/{basketId}/authorisations/{authorisationId}",
      "method": "updateSigningBasketPsuData",
      "httpMethod": "put",
      "tag": "Signing Baskets Service (SBS)",
      "description": "Update PSU data for signing basket",
      "parameters": [
        {
          "name": "basketId",
          "schema": "string",
          "required": true,
          "description": "This identification of the corresponding signing basket object.\n"
        },
        {
          "name": "authorisationId",
          "schema": "string",
          "required": true,
          "description": "Resource identification of the related SCA."
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuId",
          "schema": "string",
          "required": false,
          "description": "Client ID of the PSU in the ASPSP client interface.\n\nMight be mandated in the ASPSP's documentation.\n\nIt might be contained even if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding\nAIS service in the same session.\nIn this case the ASPSP might check whether PSU-ID and token match,\naccording to ASPSP documentation.\n"
        },
        {
          "name": "psuIdType",
          "schema": "string",
          "required": false,
          "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n\nIn this case, the mean and use are then defined in the ASPSP's documentation.\n"
        },
        {
          "name": "psuCorporateId",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "psuCorporateIdType",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        }
      ]
    },
    {
      "url": "/v1/signing-baskets/{basketId}/status",
      "method": "getSigningBasketStatus",
      "httpMethod": "get",
      "tag": "Signing Baskets Service (SBS)",
      "description": "Read the status of the signing basket",
      "parameters": [
        {
          "name": "basketId",
          "schema": "string",
          "required": true,
          "description": "This identification of the corresponding signing basket object.\n"
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuId",
          "schema": "string",
          "required": false,
          "description": "Client ID of the PSU in the ASPSP client interface.\n\nMight be mandated in the ASPSP's documentation.\n\nIt might be contained even if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding\nAIS service in the same session.\nIn this case the ASPSP might check whether PSU-ID and token match,\naccording to ASPSP documentation.\n"
        },
        {
          "name": "psuIdType",
          "schema": "string",
          "required": false,
          "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n\nIn this case, the mean and use are then defined in the ASPSP's documentation.\n"
        },
        {
          "name": "psuCorporateId",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "psuCorporateIdType",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        }
      ]
    },
    {
      "url": "/v1/{payment-service}/{payment-product}",
      "method": "initiatePayment",
      "httpMethod": "post",
      "tag": "Payment Initiation Service (PIS)",
      "description": "Payment initiation request",
      "parameters": [
        {
          "name": "paymentService",
          "schema": "string",
          "required": true,
          "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n"
        },
        {
          "name": "paymentProduct",
          "schema": "string",
          "required": true,
          "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - domestic-swiss-credit-transfers-isr\n  - domestic-swiss-credit-transfers\n  - domestic-swiss-credit-transfers-qr\n  - domestic-swiss-foreign-credit-transfers\n  - swiss-sepa-credit-transfers\n  - swiss-cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-cross-border-credit-transfers\n  - pain.001-swiss-six-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding,\nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content.\nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist.\nThere are plenty of country specificic scheme variants.\n"
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuId",
          "schema": "string",
          "required": false,
          "description": "Client ID of the PSU in the ASPSP client interface.\n\nMight be mandated in the ASPSP's documentation.\n\nIt might be contained even if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding\nAIS service in the same session.\nIn this case the ASPSP might check whether PSU-ID and token match,\naccording to ASPSP documentation.\n"
        },
        {
          "name": "psuIdType",
          "schema": "string",
          "required": false,
          "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n\nIn this case, the mean and use are then defined in the ASPSP's documentation.\n"
        },
        {
          "name": "psuCorporateId",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "psuCorporateIdType",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "consentId",
          "schema": "string",
          "required": false,
          "description": "This data element may be contained, if the payment initiation transaction is part of a session, i.e. combined AIS/PIS service.\nThis then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": true,
          "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\nIf not available, the TPP shall use the IP Address used by the TPP when submitting this request.\n"
        },
        {
          "name": "tppRedirectPreferred",
          "schema": "boolean",
          "required": false,
          "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach.\nIf it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled\nSCA approach, depending on the choice of the SCA procedure by the TPP/PSU.\nIf the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the\nTPP/PSU.\n"
        },
        {
          "name": "tppRedirectUri",
          "schema": "string",
          "required": false,
          "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect.\n\nMandated for the Redirect SCA Approach, specifically\nwhen TPP-Redirect-Preferred equals \"true\".\nIt is recommended to always use this header field.\n\n**Remark for Future:**\nThis field might be changed to mandatory in the next version of the specification.\n"
        },
        {
          "name": "tppNokRedirectUri",
          "schema": "string",
          "required": false,
          "description": "If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case\nof a negative result of the redirect SCA method. This might be ignored by the ASPSP.\n"
        },
        {
          "name": "tppExplicitAuthorisationPreferred",
          "schema": "boolean",
          "required": false,
          "description": "If it equals \"true\", the TPP prefers to start the authorisation process separately,\ne.g. because of the usage of a signing basket.\nThis preference might be ignored by the ASPSP, if a signing basket is not supported as functionality.\n\nIf it equals \"false\" or if the parameter is not used, there is no preference of the TPP.\nThis especially indicates that the TPP assumes a direct authorisation of the transaction in the next step,\nwithout using a signing basket.\n"
        },
        {
          "name": "tppRejectionNoFundsPreferred",
          "schema": "boolean",
          "required": false,
          "description": "If it equals \"true\" then the TPP prefers a rejection of the payment initiation in case the ASPSP is\nproviding an integrated confirmation of funds request an the result of this is that not sufficient\nfunds are available.\n\nIf it equals \"false\" then the TPP prefers that the ASPSP is dealing with the payment initiation like\nin the ASPSPs online channel, potentially waiting for a certain time period for funds to arrive to initiate the payment.\n\nThis parameter might be ignored by the ASPSP.\n"
        },
        {
          "name": "tppBrandLoggingInformation",
          "schema": "string",
          "required": false,
          "description": "This header might be used by TPPs to inform the ASPSP about the brand used by the TPP towards the PSU. \nThis information is meant for logging entries to enhance communication between ASPSP and PSU or ASPSP and TPP. \nThis header might be ignored by the ASPSP.\n"
        },
        {
          "name": "tppNotificationUri",
          "schema": "string",
          "required": false,
          "description": "URI for the Endpoint of the TPP-API to which the status of the payment initiation should be sent.\nThis header field may by ignored by the ASPSP.\n\nFor security reasons, it shall be ensured that the TPP-Notification-URI as introduced above is secured by the TPP eIDAS QWAC used for identification of the TPP. The following applies:\n\nURIs which are provided by TPPs in TPP-Notification-URI shall comply with the domain secured by the eIDAS QWAC certificate of the TPP in the field CN or SubjectAltName of the certificate. Please note that in case of example-TPP.com as certificate entry TPP- Notification-URI like www.example-TPP.com/xs2a-client/v1/ASPSPidentifcation/mytransaction- id/notifications or notifications.example-TPP.com/xs2a-client/v1/ASPSPidentifcation/mytransaction- id/notifications would be compliant.\n\nWildcard definitions shall be taken into account for compliance checks by the ASPSP.\n ASPSPs may respond with ASPSP-Notification-Support set to false, if the provided URIs do not comply.\n"
        },
        {
          "name": "tppNotificationContentPreferred",
          "schema": "string",
          "required": false,
          "description": "The string has the form\n\nstatus=X1, ..., Xn\n\nwhere Xi is one of the constants SCA, PROCESS, LAST and where constants are not\nrepeated.\nThe usage of the constants supports the of following semantics:\n\n  SCA: A notification on every change of the scaStatus attribute for all related authorisation processes is preferred by the TPP.\n\n  PROCESS: A notification on all changes of consentStatus or transactionStatus attributes is preferred by the TPP.\n  LAST: Only a notification on the last consentStatus or transactionStatus as available in the XS2A interface is preferred by the TPP.\n\nThis header field may be ignored, if the ASPSP does not support resource notification services for the related TPP.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Body of the response for a successful payment initiation request."
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        }
      ]
    },
    {
      "url": "/v1/{payment-service}/{payment-product}/{paymentId}",
      "method": "cancelPayment",
      "httpMethod": "delete",
      "tag": "Payment Initiation Service (PIS)",
      "description": "Payment cancellation request",
      "parameters": [
        {
          "name": "paymentService",
          "schema": "string",
          "required": true,
          "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n"
        },
        {
          "name": "paymentProduct",
          "schema": "string",
          "required": true,
          "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - domestic-swiss-credit-transfers-isr\n  - domestic-swiss-credit-transfers\n  - domestic-swiss-credit-transfers-qr\n  - domestic-swiss-foreign-credit-transfers\n  - swiss-sepa-credit-transfers\n  - swiss-cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-cross-border-credit-transfers\n  - pain.001-swiss-six-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding,\nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content.\nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist.\nThere are plenty of country specificic scheme variants.\n"
        },
        {
          "name": "paymentId",
          "schema": "string",
          "required": true,
          "description": "Resource identification of the generated payment initiation resource."
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "tppRedirectPreferred",
          "schema": "boolean",
          "required": false,
          "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach.\nIf it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled\nSCA approach, depending on the choice of the SCA procedure by the TPP/PSU.\nIf the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the\nTPP/PSU.\n"
        },
        {
          "name": "tppNokRedirectUri",
          "schema": "string",
          "required": false,
          "description": "If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case\nof a negative result of the redirect SCA method. This might be ignored by the ASPSP.\n"
        },
        {
          "name": "tppRedirectUri",
          "schema": "string",
          "required": false,
          "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect.\n\nMandated for the Redirect SCA Approach, specifically\nwhen TPP-Redirect-Preferred equals \"true\".\nIt is recommended to always use this header field.\n\n**Remark for Future:**\nThis field might be changed to mandatory in the next version of the specification.\n"
        },
        {
          "name": "tppExplicitAuthorisationPreferred",
          "schema": "boolean",
          "required": false,
          "description": "If it equals \"true\", the TPP prefers to start the authorisation process separately,\ne.g. because of the usage of a signing basket.\nThis preference might be ignored by the ASPSP, if a signing basket is not supported as functionality.\n\nIf it equals \"false\" or if the parameter is not used, there is no preference of the TPP.\nThis especially indicates that the TPP assumes a direct authorisation of the transaction in the next step,\nwithout using a signing basket.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": "Body of the response for a successful cancel payment request."
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        }
      ]
    },
    {
      "url": "/v1/{payment-service}/{payment-product}/{paymentId}",
      "method": "getPaymentInformation",
      "httpMethod": "get",
      "tag": "Payment Initiation Service (PIS)",
      "description": "Get payment information",
      "parameters": [
        {
          "name": "paymentService",
          "schema": "string",
          "required": true,
          "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n"
        },
        {
          "name": "paymentProduct",
          "schema": "string",
          "required": true,
          "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - domestic-swiss-credit-transfers-isr\n  - domestic-swiss-credit-transfers\n  - domestic-swiss-credit-transfers-qr\n  - domestic-swiss-foreign-credit-transfers\n  - swiss-sepa-credit-transfers\n  - swiss-cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-cross-border-credit-transfers\n  - pain.001-swiss-six-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding,\nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content.\nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist.\nThere are plenty of country specificic scheme variants.\n"
        },
        {
          "name": "paymentId",
          "schema": "string",
          "required": true,
          "description": "Resource identification of the generated payment initiation resource."
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        }
      ]
    },
    {
      "url": "/v1/{payment-service}/{payment-product}/{paymentId}/authorisations",
      "method": "getPaymentInitiationAuthorisation",
      "httpMethod": "get",
      "tag": "Payment Initiation Service (PIS)",
      "description": "Get payment initiation authorisation sub-resources request",
      "parameters": [
        {
          "name": "paymentService",
          "schema": "string",
          "required": true,
          "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n"
        },
        {
          "name": "paymentProduct",
          "schema": "string",
          "required": true,
          "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - domestic-swiss-credit-transfers-isr\n  - domestic-swiss-credit-transfers\n  - domestic-swiss-credit-transfers-qr\n  - domestic-swiss-foreign-credit-transfers\n  - swiss-sepa-credit-transfers\n  - swiss-cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-cross-border-credit-transfers\n  - pain.001-swiss-six-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding,\nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content.\nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist.\nThere are plenty of country specificic scheme variants.\n"
        },
        {
          "name": "paymentId",
          "schema": "string",
          "required": true,
          "description": "Resource identification of the generated payment initiation resource."
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An array of all authorisationIds."
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        }
      ]
    },
    {
      "url": "/v1/{payment-service}/{payment-product}/{paymentId}/authorisations",
      "method": "startPaymentAuthorisation",
      "httpMethod": "post",
      "tag": "Payment Initiation Service (PIS)",
      "description": "Start the authorisation process for a payment initiation",
      "parameters": [
        {
          "name": "paymentService",
          "schema": "string",
          "required": true,
          "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n"
        },
        {
          "name": "paymentProduct",
          "schema": "string",
          "required": true,
          "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - domestic-swiss-credit-transfers-isr\n  - domestic-swiss-credit-transfers\n  - domestic-swiss-credit-transfers-qr\n  - domestic-swiss-foreign-credit-transfers\n  - swiss-sepa-credit-transfers\n  - swiss-cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-cross-border-credit-transfers\n  - pain.001-swiss-six-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding,\nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content.\nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist.\nThere are plenty of country specificic scheme variants.\n"
        },
        {
          "name": "paymentId",
          "schema": "string",
          "required": true,
          "description": "Resource identification of the generated payment initiation resource."
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "psuId",
          "schema": "string",
          "required": false,
          "description": "Client ID of the PSU in the ASPSP client interface.\n\nMight be mandated in the ASPSP's documentation.\n\nIt might be contained even if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding\nAIS service in the same session.\nIn this case the ASPSP might check whether PSU-ID and token match,\naccording to ASPSP documentation.\n"
        },
        {
          "name": "psuIdType",
          "schema": "string",
          "required": false,
          "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n\nIn this case, the mean and use are then defined in the ASPSP's documentation.\n"
        },
        {
          "name": "psuCorporateId",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "psuCorporateIdType",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "tppRedirectPreferred",
          "schema": "boolean",
          "required": false,
          "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach.\nIf it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled\nSCA approach, depending on the choice of the SCA procedure by the TPP/PSU.\nIf the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the\nTPP/PSU.\n"
        },
        {
          "name": "tppRedirectUri",
          "schema": "string",
          "required": false,
          "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect.\n\nMandated for the Redirect SCA Approach, specifically\nwhen TPP-Redirect-Preferred equals \"true\".\nIt is recommended to always use this header field.\n\n**Remark for Future:**\nThis field might be changed to mandatory in the next version of the specification.\n"
        },
        {
          "name": "tppNokRedirectUri",
          "schema": "string",
          "required": false,
          "description": "If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case\nof a negative result of the redirect SCA method. This might be ignored by the ASPSP.\n"
        },
        {
          "name": "tppNotificationUri",
          "schema": "string",
          "required": false,
          "description": "URI for the Endpoint of the TPP-API to which the status of the payment initiation should be sent.\nThis header field may by ignored by the ASPSP.\n\nFor security reasons, it shall be ensured that the TPP-Notification-URI as introduced above is secured by the TPP eIDAS QWAC used for identification of the TPP. The following applies:\n\nURIs which are provided by TPPs in TPP-Notification-URI shall comply with the domain secured by the eIDAS QWAC certificate of the TPP in the field CN or SubjectAltName of the certificate. Please note that in case of example-TPP.com as certificate entry TPP- Notification-URI like www.example-TPP.com/xs2a-client/v1/ASPSPidentifcation/mytransaction- id/notifications or notifications.example-TPP.com/xs2a-client/v1/ASPSPidentifcation/mytransaction- id/notifications would be compliant.\n\nWildcard definitions shall be taken into account for compliance checks by the ASPSP.\n ASPSPs may respond with ASPSP-Notification-Support set to false, if the provided URIs do not comply.\n"
        },
        {
          "name": "tppNotificationContentPreferred",
          "schema": "string",
          "required": false,
          "description": "The string has the form\n\nstatus=X1, ..., Xn\n\nwhere Xi is one of the constants SCA, PROCESS, LAST and where constants are not\nrepeated.\nThe usage of the constants supports the of following semantics:\n\n  SCA: A notification on every change of the scaStatus attribute for all related authorisation processes is preferred by the TPP.\n\n  PROCESS: A notification on all changes of consentStatus or transactionStatus attributes is preferred by the TPP.\n  LAST: Only a notification on the last consentStatus or transactionStatus as available in the XS2A interface is preferred by the TPP.\n\nThis header field may be ignored, if the ASPSP does not support resource notification services for the related TPP.\n"
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Body of the JSON response for a Start SCA authorisation request."
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        }
      ]
    },
    {
      "url": "/v1/{payment-service}/{payment-product}/{paymentId}/authorisations/{authorisationId}",
      "method": "getPaymentInitiationScaStatus",
      "httpMethod": "get",
      "tag": "Payment Initiation Service (PIS)",
      "description": "Read the SCA status of the payment authorisation",
      "parameters": [
        {
          "name": "paymentService",
          "schema": "string",
          "required": true,
          "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n"
        },
        {
          "name": "paymentProduct",
          "schema": "string",
          "required": true,
          "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - domestic-swiss-credit-transfers-isr\n  - domestic-swiss-credit-transfers\n  - domestic-swiss-credit-transfers-qr\n  - domestic-swiss-foreign-credit-transfers\n  - swiss-sepa-credit-transfers\n  - swiss-cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-cross-border-credit-transfers\n  - pain.001-swiss-six-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding,\nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content.\nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist.\nThere are plenty of country specificic scheme variants.\n"
        },
        {
          "name": "paymentId",
          "schema": "string",
          "required": true,
          "description": "Resource identification of the generated payment initiation resource."
        },
        {
          "name": "authorisationId",
          "schema": "string",
          "required": true,
          "description": "Resource identification of the related SCA."
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Body of the JSON response with SCA Status."
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        }
      ]
    },
    {
      "url": "/v1/{payment-service}/{payment-product}/{paymentId}/authorisations/{authorisationId}",
      "method": "updatePaymentPsuData",
      "httpMethod": "put",
      "tag": "Payment Initiation Service (PIS)",
      "description": "Update PSU data for payment initiation",
      "parameters": [
        {
          "name": "paymentService",
          "schema": "string",
          "required": true,
          "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n"
        },
        {
          "name": "paymentProduct",
          "schema": "string",
          "required": true,
          "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - domestic-swiss-credit-transfers-isr\n  - domestic-swiss-credit-transfers\n  - domestic-swiss-credit-transfers-qr\n  - domestic-swiss-foreign-credit-transfers\n  - swiss-sepa-credit-transfers\n  - swiss-cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-cross-border-credit-transfers\n  - pain.001-swiss-six-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding,\nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content.\nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist.\nThere are plenty of country specificic scheme variants.\n"
        },
        {
          "name": "paymentId",
          "schema": "string",
          "required": true,
          "description": "Resource identification of the generated payment initiation resource."
        },
        {
          "name": "authorisationId",
          "schema": "string",
          "required": true,
          "description": "Resource identification of the related SCA."
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuId",
          "schema": "string",
          "required": false,
          "description": "Client ID of the PSU in the ASPSP client interface.\n\nMight be mandated in the ASPSP's documentation.\n\nIt might be contained even if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding\nAIS service in the same session.\nIn this case the ASPSP might check whether PSU-ID and token match,\naccording to ASPSP documentation.\n"
        },
        {
          "name": "psuIdType",
          "schema": "string",
          "required": false,
          "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n\nIn this case, the mean and use are then defined in the ASPSP's documentation.\n"
        },
        {
          "name": "psuCorporateId",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "psuCorporateIdType",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        }
      ]
    },
    {
      "url": "/v1/{payment-service}/{payment-product}/{paymentId}/cancellation-authorisations",
      "method": "getPaymentInitiationCancellationAuthorisationInformation",
      "httpMethod": "get",
      "tag": "Payment Initiation Service (PIS)",
      "description": "Will deliver an array of resource identifications to all generated cancellation authorisation sub-resources",
      "parameters": [
        {
          "name": "paymentService",
          "schema": "string",
          "required": true,
          "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n"
        },
        {
          "name": "paymentProduct",
          "schema": "string",
          "required": true,
          "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - domestic-swiss-credit-transfers-isr\n  - domestic-swiss-credit-transfers\n  - domestic-swiss-credit-transfers-qr\n  - domestic-swiss-foreign-credit-transfers\n  - swiss-sepa-credit-transfers\n  - swiss-cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-cross-border-credit-transfers\n  - pain.001-swiss-six-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding,\nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content.\nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist.\nThere are plenty of country specificic scheme variants.\n"
        },
        {
          "name": "paymentId",
          "schema": "string",
          "required": true,
          "description": "Resource identification of the generated payment initiation resource."
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An array of all authorisationIds."
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        }
      ]
    },
    {
      "url": "/v1/{payment-service}/{payment-product}/{paymentId}/cancellation-authorisations",
      "method": "startPaymentInitiationCancellationAuthorisation",
      "httpMethod": "post",
      "tag": "Payment Initiation Service (PIS)",
      "description": "Start the authorisation process for the cancellation of the addressed payment",
      "parameters": [
        {
          "name": "paymentService",
          "schema": "string",
          "required": true,
          "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n"
        },
        {
          "name": "paymentProduct",
          "schema": "string",
          "required": true,
          "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - domestic-swiss-credit-transfers-isr\n  - domestic-swiss-credit-transfers\n  - domestic-swiss-credit-transfers-qr\n  - domestic-swiss-foreign-credit-transfers\n  - swiss-sepa-credit-transfers\n  - swiss-cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-cross-border-credit-transfers\n  - pain.001-swiss-six-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding,\nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content.\nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist.\nThere are plenty of country specificic scheme variants.\n"
        },
        {
          "name": "paymentId",
          "schema": "string",
          "required": true,
          "description": "Resource identification of the generated payment initiation resource."
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuId",
          "schema": "string",
          "required": false,
          "description": "Client ID of the PSU in the ASPSP client interface.\n\nMight be mandated in the ASPSP's documentation.\n\nIt might be contained even if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding\nAIS service in the same session.\nIn this case the ASPSP might check whether PSU-ID and token match,\naccording to ASPSP documentation.\n"
        },
        {
          "name": "psuIdType",
          "schema": "string",
          "required": false,
          "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n\nIn this case, the mean and use are then defined in the ASPSP's documentation.\n"
        },
        {
          "name": "psuCorporateId",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "psuCorporateIdType",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "tppRedirectPreferred",
          "schema": "boolean",
          "required": false,
          "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach.\nIf it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled\nSCA approach, depending on the choice of the SCA procedure by the TPP/PSU.\nIf the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the\nTPP/PSU.\n"
        },
        {
          "name": "tppRedirectUri",
          "schema": "string",
          "required": false,
          "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect.\n\nMandated for the Redirect SCA Approach, specifically\nwhen TPP-Redirect-Preferred equals \"true\".\nIt is recommended to always use this header field.\n\n**Remark for Future:**\nThis field might be changed to mandatory in the next version of the specification.\n"
        },
        {
          "name": "tppNokRedirectUri",
          "schema": "string",
          "required": false,
          "description": "If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case\nof a negative result of the redirect SCA method. This might be ignored by the ASPSP.\n"
        },
        {
          "name": "tppNotificationUri",
          "schema": "string",
          "required": false,
          "description": "URI for the Endpoint of the TPP-API to which the status of the payment initiation should be sent.\nThis header field may by ignored by the ASPSP.\n\nFor security reasons, it shall be ensured that the TPP-Notification-URI as introduced above is secured by the TPP eIDAS QWAC used for identification of the TPP. The following applies:\n\nURIs which are provided by TPPs in TPP-Notification-URI shall comply with the domain secured by the eIDAS QWAC certificate of the TPP in the field CN or SubjectAltName of the certificate. Please note that in case of example-TPP.com as certificate entry TPP- Notification-URI like www.example-TPP.com/xs2a-client/v1/ASPSPidentifcation/mytransaction- id/notifications or notifications.example-TPP.com/xs2a-client/v1/ASPSPidentifcation/mytransaction- id/notifications would be compliant.\n\nWildcard definitions shall be taken into account for compliance checks by the ASPSP.\n ASPSPs may respond with ASPSP-Notification-Support set to false, if the provided URIs do not comply.\n"
        },
        {
          "name": "tppNotificationContentPreferred",
          "schema": "string",
          "required": false,
          "description": "The string has the form\n\nstatus=X1, ..., Xn\n\nwhere Xi is one of the constants SCA, PROCESS, LAST and where constants are not\nrepeated.\nThe usage of the constants supports the of following semantics:\n\n  SCA: A notification on every change of the scaStatus attribute for all related authorisation processes is preferred by the TPP.\n\n  PROCESS: A notification on all changes of consentStatus or transactionStatus attributes is preferred by the TPP.\n  LAST: Only a notification on the last consentStatus or transactionStatus as available in the XS2A interface is preferred by the TPP.\n\nThis header field may be ignored, if the ASPSP does not support resource notification services for the related TPP.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Body of the JSON response for a Start SCA authorisation request."
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        }
      ]
    },
    {
      "url": "/v1/{payment-service}/{payment-product}/{paymentId}/cancellation-authorisations/{authorisationId}",
      "method": "getPaymentCancellationScaStatus",
      "httpMethod": "get",
      "tag": "Payment Initiation Service (PIS)",
      "description": "Read the SCA status of the payment cancellation's authorisation",
      "parameters": [
        {
          "name": "paymentService",
          "schema": "string",
          "required": true,
          "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n"
        },
        {
          "name": "paymentProduct",
          "schema": "string",
          "required": true,
          "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - domestic-swiss-credit-transfers-isr\n  - domestic-swiss-credit-transfers\n  - domestic-swiss-credit-transfers-qr\n  - domestic-swiss-foreign-credit-transfers\n  - swiss-sepa-credit-transfers\n  - swiss-cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-cross-border-credit-transfers\n  - pain.001-swiss-six-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding,\nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content.\nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist.\nThere are plenty of country specificic scheme variants.\n"
        },
        {
          "name": "paymentId",
          "schema": "string",
          "required": true,
          "description": "Resource identification of the generated payment initiation resource."
        },
        {
          "name": "authorisationId",
          "schema": "string",
          "required": true,
          "description": "Resource identification of the related SCA."
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Body of the JSON response with SCA Status."
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        }
      ]
    },
    {
      "url": "/v1/{payment-service}/{payment-product}/{paymentId}/cancellation-authorisations/{authorisationId}",
      "method": "updatePaymentCancellationPsuData",
      "httpMethod": "put",
      "tag": "Payment Initiation Service (PIS)",
      "description": "Update PSU data for payment initiation cancellation",
      "parameters": [
        {
          "name": "paymentService",
          "schema": "string",
          "required": true,
          "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n"
        },
        {
          "name": "paymentProduct",
          "schema": "string",
          "required": true,
          "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - domestic-swiss-credit-transfers-isr\n  - domestic-swiss-credit-transfers\n  - domestic-swiss-credit-transfers-qr\n  - domestic-swiss-foreign-credit-transfers\n  - swiss-sepa-credit-transfers\n  - swiss-cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-cross-border-credit-transfers\n  - pain.001-swiss-six-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding,\nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content.\nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist.\nThere are plenty of country specificic scheme variants.\n"
        },
        {
          "name": "paymentId",
          "schema": "string",
          "required": true,
          "description": "Resource identification of the generated payment initiation resource."
        },
        {
          "name": "authorisationId",
          "schema": "string",
          "required": true,
          "description": "Resource identification of the related SCA."
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuId",
          "schema": "string",
          "required": false,
          "description": "Client ID of the PSU in the ASPSP client interface.\n\nMight be mandated in the ASPSP's documentation.\n\nIt might be contained even if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding\nAIS service in the same session.\nIn this case the ASPSP might check whether PSU-ID and token match,\naccording to ASPSP documentation.\n"
        },
        {
          "name": "psuIdType",
          "schema": "string",
          "required": false,
          "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n\nIn this case, the mean and use are then defined in the ASPSP's documentation.\n"
        },
        {
          "name": "psuCorporateId",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "psuCorporateIdType",
          "schema": "string",
          "required": false,
          "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        }
      ]
    },
    {
      "url": "/v1/{payment-service}/{payment-product}/{paymentId}/status",
      "method": "getPaymentInitiationStatus",
      "httpMethod": "get",
      "tag": "Payment Initiation Service (PIS)",
      "description": "Payment initiation status request",
      "parameters": [
        {
          "name": "paymentService",
          "schema": "string",
          "required": true,
          "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n"
        },
        {
          "name": "paymentProduct",
          "schema": "string",
          "required": true,
          "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - domestic-swiss-credit-transfers-isr\n  - domestic-swiss-credit-transfers\n  - domestic-swiss-credit-transfers-qr\n  - domestic-swiss-foreign-credit-transfers\n  - swiss-sepa-credit-transfers\n  - swiss-cross-border-credit-transfers\n  - pain.001-sepa-credit-transfers\n  - pain.001-cross-border-credit-transfers\n  - pain.001-swiss-six-credit-transfers\n\n**Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding,\nthe XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content.\nFurther XML schemes might be supported by some communities.\n\n**Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist.\nThere are plenty of country specificic scheme variants.\n"
        },
        {
          "name": "paymentId",
          "schema": "string",
          "required": true,
          "description": "Resource identification of the generated payment initiation resource."
        },
        {
          "name": "xRequestId",
          "schema": "string",
          "required": true,
          "description": "ID of the request, unique to the call, as determined by the initiating party."
        },
        {
          "name": "digest",
          "schema": "string",
          "required": false,
          "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request."
        },
        {
          "name": "signature",
          "schema": "string",
          "required": false,
          "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n"
        },
        {
          "name": "tppSignatureCertificate",
          "schema": "string",
          "required": false,
          "description": "The certificate used for signing the request, in base64 encoding.\nMust be contained if a signature is contained.\n"
        },
        {
          "name": "psuIpAddress",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n"
        },
        {
          "name": "psuIpPort",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAccept",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptCharset",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptEncoding",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuAcceptLanguage",
          "schema": "string",
          "required": false,
          "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n"
        },
        {
          "name": "psuUserAgent",
          "schema": "string",
          "required": false,
          "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n"
        },
        {
          "name": "psuHttpMethod",
          "schema": "string",
          "required": false,
          "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n"
        },
        {
          "name": "psuDeviceId",
          "schema": "string",
          "required": false,
          "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n"
        },
        {
          "name": "psuGeoLocation",
          "schema": "string",
          "required": false,
          "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Body of the response for a successful payment initiation status request in case of an JSON based endpoint."
        },
        {
          "statusCode": "400",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 400.\n"
        },
        {
          "statusCode": "401",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "403",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 403.\n"
        },
        {
          "statusCode": "404",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 404.\n"
        },
        {
          "statusCode": "405",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 401.\n"
        },
        {
          "statusCode": "409",
          "description": "NextGen specific definition of reporting error information in case of a HTTP error code 409.\n"
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.dev.openbankingproject.ch",
  "apiDescription": "# Summary\nThe **Swiss NextGen API** is based on the NextGenPSD2 *Framework Version 1.3.4* of the Berlin Group which offers a modern, open, harmonised and interoperable set of\nApplication Programming Interfaces (APIs) as the safest and most efficient way to provide data securely.\nThe NextGen Framework reduces XS2A complexity and costs, addresses the problem of multiple competing standards\nin Europe and, aligned with the goals of the Euro Retail Payments Board,\nenables European banking customers to benefit from innovative products and services ('Banking as a Service')\nby granting TPPs safe and secure (authenticated and authorised) access to their bank accounts and financial data.\n\nThe Swiss edtion refines the message formats specific to Switzerland and defines some matching examples.\n\nThe possible Approaches are:\n  * Redirect SCA Approach\n  * *(Not recommended by obp.ch community) OAuth SCA Approach*\n  * *(Not recommended by obp.ch community) Decoupled SCA Approach*\n  * *(Not recommended by obp.ch community) Embedded SCA Approach without SCA method*\n  * *(Not recommended by obp.ch community) Embedded SCA Approach with only one SCA method available*\n  * *(Not recommended by obp.ch community) Embedded SCA Approach with Selection of a SCA method*\n\n  Not every message defined in this API definition is necessary for all approaches.\n  Furthermore this API definition does not differ between methods which are mandatory, conditional, or optional\n  Therefore for a particular implementation of a compliant API it is only necessary to support\n  a certain subset of the methods defined in this API definition.\n\n  **Please have a look at the implementation guidelines if you are not sure\n  which message has to be used for the approach you are going to use.**\n\n## Some General Remarks Related to this version of the OpenAPI Specification:\n* **This API definition is based on the Implementation Guidelines of the [Berlin Group API](https://www.berlin-group.org/nextgenpsd2-downloads).**\n  It is not a replacement in any sense.\n  The main specification is (at the moment) always the Implementation Guidelines of the Berlin Group API.\n* **This API definition contains the REST-API for requests from the PISP to the ASPSP.**\n* **This API definition contains the messages for all different approaches defined in the Implementation Guidelines.**\n* According to the OpenAPI-Specification [https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md]\n\n    \"If in is \"header\" and the name field is \"Accept\", \"Content-Type\" or \"Authorization\", the parameter definition SHALL be ignored.\"\n\n  The element \"Accept\" will not be defined in this file at any place.\n\n  The elements \"Content-Type\" and \"Authorization\" are implicitly defined by the OpenApi tags \"content\" and \"security\".\n\n* There are several predefined types which might occur in payment initiation messages,\n  but are not used in the standard JSON messages in the Implementation Guidelines.\n  Therefore they are not used in the corresponding messages in this file either.\n  We added them for the convenience of the user.\n  If there is a payment product, which needs these fields, one can easily use the predefined types.\n  But the ASPSP need not to accept them in general.\n\n* **We omit the definition of all standard HTTP header elements (mandatory/optional/conditional)\n  except they are mentioned in the Implementation Guidelines.**\n  Therefore the implementer might add these in his own realisation of a comlient API in addition to the elements defined in this file.\n\n## General Remarks on Data Types\n\nThe Berlin Group definition of UTF-8 strings in context of the API have to support at least the following characters\n\na b c d e f g h i j k l m n o p q r s t u v w x y z\n\nA B C D E F G H I J K L M N O P Q R S T U V W X Y Z\n\n0 1 2 3 4 5 6 7 8 9\n\n/ - ? : ( ) . , ' +\n\nSpace\n",
  "apiTitle": "Swiss NextGen Banking API-Framework",
  "endpoints": 23,
  "sdkMethods": 34,
  "schemas": 289,
  "parameters": 648,
  "contactUrl": "https://www.openbankingproject.ch",
  "contactEmail": "info@obp.ch",
  "difficultyScore": 340.5,
  "difficulty": "Hard"
}