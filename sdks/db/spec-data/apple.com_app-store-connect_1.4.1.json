{
  "providerName": "apple.com",
  "openApiRaw": "app-store-connect-openapi-specification.json",
  "securitySchemes": {
    "itc-bearer-token": {
      "bearerFormat": "JWT",
      "scheme": "bearer",
      "type": "http"
    }
  },
  "homepage": "apple.com",
  "serviceName": "app-store-connect",
  "apiVersion": "1.4.1",
  "methods": [
    {
      "url": "/v1/ageRatingDeclarations/{id}",
      "method": "ageRatingDeclarationsUpdateInstance",
      "httpMethod": "patch",
      "tag": "AgeRatingDeclarations",
      "typeScriptTag": "ageRatingDeclarations",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appCategories",
      "method": "appCategoriesGetCollection",
      "httpMethod": "get",
      "tag": "AppCategories",
      "typeScriptTag": "appCategories",
      "description": "",
      "parameters": [
        {
          "name": "filter[platforms]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'platforms'"
        },
        {
          "name": "exists[parent]",
          "schema": "array",
          "required": false,
          "description": "filter by existence or non-existence of related 'parent'"
        },
        {
          "name": "fields[appCategories]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appCategories"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "limit[subcategories]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related subcategories returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appCategories/{id}",
      "method": "appCategoriesGetInstance",
      "httpMethod": "get",
      "tag": "AppCategories",
      "typeScriptTag": "appCategories",
      "description": "",
      "parameters": [
        {
          "name": "fields[appCategories]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appCategories"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "limit[subcategories]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related subcategories returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appCategories/{id}/parent",
      "method": "appCategoriesParentGetToOneRelated",
      "httpMethod": "get",
      "tag": "AppCategories",
      "typeScriptTag": "appCategories",
      "description": "",
      "parameters": [
        {
          "name": "fields[appCategories]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appCategories"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appCategories/{id}/subcategories",
      "method": "appCategoriesSubcategoriesGetToManyRelated",
      "httpMethod": "get",
      "tag": "AppCategories",
      "typeScriptTag": "appCategories",
      "description": "",
      "parameters": [
        {
          "name": "fields[appCategories]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appCategories"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appEncryptionDeclarations",
      "method": "appEncryptionDeclarationsGetCollection",
      "httpMethod": "get",
      "tag": "AppEncryptionDeclarations",
      "typeScriptTag": "appEncryptionDeclarations",
      "description": "",
      "parameters": [
        {
          "name": "filter[platform]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'platform'"
        },
        {
          "name": "filter[app]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'app'"
        },
        {
          "name": "filter[builds]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'builds'"
        },
        {
          "name": "fields[appEncryptionDeclarations]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appEncryptionDeclarations"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appEncryptionDeclarations/{id}",
      "method": "appEncryptionDeclarationsGetInstance",
      "httpMethod": "get",
      "tag": "AppEncryptionDeclarations",
      "typeScriptTag": "appEncryptionDeclarations",
      "description": "",
      "parameters": [
        {
          "name": "fields[appEncryptionDeclarations]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appEncryptionDeclarations"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appEncryptionDeclarations/{id}/app",
      "method": "appEncryptionDeclarationsAppGetToOneRelated",
      "httpMethod": "get",
      "tag": "AppEncryptionDeclarations",
      "typeScriptTag": "appEncryptionDeclarations",
      "description": "",
      "parameters": [
        {
          "name": "fields[apps]",
          "schema": "array",
          "description": "the fields to include for returned resources of type apps"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appEncryptionDeclarations/{id}/relationships/builds",
      "method": "appEncryptionDeclarationsBuildsCreateToManyRelationship",
      "httpMethod": "post",
      "tag": "AppEncryptionDeclarations",
      "typeScriptTag": "appEncryptionDeclarations",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appInfoLocalizations",
      "method": "appInfoLocalizationsCreateInstance",
      "httpMethod": "post",
      "tag": "AppInfoLocalizations",
      "typeScriptTag": "appInfoLocalizations",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appInfoLocalizations/{id}",
      "method": "appInfoLocalizationsDeleteInstance",
      "httpMethod": "delete",
      "tag": "AppInfoLocalizations",
      "typeScriptTag": "appInfoLocalizations",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appInfoLocalizations/{id}",
      "method": "appInfoLocalizationsGetInstance",
      "httpMethod": "get",
      "tag": "AppInfoLocalizations",
      "typeScriptTag": "appInfoLocalizations",
      "description": "",
      "parameters": [
        {
          "name": "fields[appInfoLocalizations]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appInfoLocalizations"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appInfoLocalizations/{id}",
      "method": "appInfoLocalizationsUpdateInstance",
      "httpMethod": "patch",
      "tag": "AppInfoLocalizations",
      "typeScriptTag": "appInfoLocalizations",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appInfos/{id}",
      "method": "appInfosGetInstance",
      "httpMethod": "get",
      "tag": "AppInfos",
      "typeScriptTag": "appInfos",
      "description": "",
      "parameters": [
        {
          "name": "fields[appInfos]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appInfos"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[ageRatingDeclarations]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type ageRatingDeclarations"
        },
        {
          "name": "fields[appCategories]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appCategories"
        },
        {
          "name": "fields[appInfoLocalizations]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appInfoLocalizations"
        },
        {
          "name": "limit[appInfoLocalizations]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related appInfoLocalizations returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appInfos/{id}",
      "method": "appInfosUpdateInstance",
      "httpMethod": "patch",
      "tag": "AppInfos",
      "typeScriptTag": "appInfos",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appInfos/{id}/ageRatingDeclaration",
      "method": "appInfosAgeRatingDeclarationGetToOneRelated",
      "httpMethod": "get",
      "tag": "AppInfos",
      "typeScriptTag": "appInfos",
      "description": "",
      "parameters": [
        {
          "name": "fields[ageRatingDeclarations]",
          "schema": "array",
          "description": "the fields to include for returned resources of type ageRatingDeclarations"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appInfos/{id}/appInfoLocalizations",
      "method": "appInfosAppInfoLocalizationsGetToManyRelated",
      "httpMethod": "get",
      "tag": "AppInfos",
      "typeScriptTag": "appInfos",
      "description": "",
      "parameters": [
        {
          "name": "filter[locale]",
          "schema": "array",
          "description": "filter by attribute 'locale'"
        },
        {
          "name": "fields[appInfos]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appInfos"
        },
        {
          "name": "fields[appInfoLocalizations]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appInfoLocalizations"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "description": "comma-separated list of relationships to include"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appInfos/{id}/primaryCategory",
      "method": "appInfosPrimaryCategoryGetToOneRelated",
      "httpMethod": "get",
      "tag": "AppInfos",
      "typeScriptTag": "appInfos",
      "description": "",
      "parameters": [
        {
          "name": "fields[appCategories]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appCategories"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appInfos/{id}/primarySubcategoryOne",
      "method": "appInfosPrimarySubcategoryOneGetToOneRelated",
      "httpMethod": "get",
      "tag": "AppInfos",
      "typeScriptTag": "appInfos",
      "description": "",
      "parameters": [
        {
          "name": "fields[appCategories]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appCategories"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appInfos/{id}/primarySubcategoryTwo",
      "method": "appInfosPrimarySubcategoryTwoGetToOneRelated",
      "httpMethod": "get",
      "tag": "AppInfos",
      "typeScriptTag": "appInfos",
      "description": "",
      "parameters": [
        {
          "name": "fields[appCategories]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appCategories"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appInfos/{id}/secondaryCategory",
      "method": "appInfosSecondaryCategoryGetToOneRelated",
      "httpMethod": "get",
      "tag": "AppInfos",
      "typeScriptTag": "appInfos",
      "description": "",
      "parameters": [
        {
          "name": "fields[appCategories]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appCategories"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appInfos/{id}/secondarySubcategoryOne",
      "method": "appInfosSecondarySubcategoryOneGetToOneRelated",
      "httpMethod": "get",
      "tag": "AppInfos",
      "typeScriptTag": "appInfos",
      "description": "",
      "parameters": [
        {
          "name": "fields[appCategories]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appCategories"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appInfos/{id}/secondarySubcategoryTwo",
      "method": "appInfosSecondarySubcategoryTwoGetToOneRelated",
      "httpMethod": "get",
      "tag": "AppInfos",
      "typeScriptTag": "appInfos",
      "description": "",
      "parameters": [
        {
          "name": "fields[appCategories]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appCategories"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appPreOrders",
      "method": "appPreOrdersCreateInstance",
      "httpMethod": "post",
      "tag": "AppPreOrders",
      "typeScriptTag": "appPreOrders",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appPreOrders/{id}",
      "method": "appPreOrdersDeleteInstance",
      "httpMethod": "delete",
      "tag": "AppPreOrders",
      "typeScriptTag": "appPreOrders",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appPreOrders/{id}",
      "method": "appPreOrdersGetInstance",
      "httpMethod": "get",
      "tag": "AppPreOrders",
      "typeScriptTag": "appPreOrders",
      "description": "",
      "parameters": [
        {
          "name": "fields[appPreOrders]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appPreOrders"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appPreOrders/{id}",
      "method": "appPreOrdersUpdateInstance",
      "httpMethod": "patch",
      "tag": "AppPreOrders",
      "typeScriptTag": "appPreOrders",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appPreviewSets",
      "method": "appPreviewSetsCreateInstance",
      "httpMethod": "post",
      "tag": "AppPreviewSets",
      "typeScriptTag": "appPreviewSets",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appPreviewSets/{id}",
      "method": "appPreviewSetsDeleteInstance",
      "httpMethod": "delete",
      "tag": "AppPreviewSets",
      "typeScriptTag": "appPreviewSets",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appPreviewSets/{id}",
      "method": "appPreviewSetsGetInstance",
      "httpMethod": "get",
      "tag": "AppPreviewSets",
      "typeScriptTag": "appPreviewSets",
      "description": "",
      "parameters": [
        {
          "name": "fields[appPreviewSets]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appPreviewSets"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[appPreviews]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appPreviews"
        },
        {
          "name": "limit[appPreviews]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related appPreviews returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appPreviewSets/{id}/appPreviews",
      "method": "appPreviewSetsAppPreviewsGetToManyRelated",
      "httpMethod": "get",
      "tag": "AppPreviewSets",
      "typeScriptTag": "appPreviewSets",
      "description": "",
      "parameters": [
        {
          "name": "fields[appPreviews]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appPreviews"
        },
        {
          "name": "fields[appPreviewSets]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appPreviewSets"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "description": "comma-separated list of relationships to include"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appPreviewSets/{id}/relationships/appPreviews",
      "method": "appPreviewSetsAppPreviewsGetToManyRelationship",
      "httpMethod": "get",
      "tag": "AppPreviewSets",
      "typeScriptTag": "appPreviewSets",
      "description": "",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appPreviewSets/{id}/relationships/appPreviews",
      "method": "appPreviewSetsAppPreviewsReplaceToManyRelationship",
      "httpMethod": "patch",
      "tag": "AppPreviewSets",
      "typeScriptTag": "appPreviewSets",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appPreviews",
      "method": "appPreviewsCreateInstance",
      "httpMethod": "post",
      "tag": "AppPreviews",
      "typeScriptTag": "appPreviews",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appPreviews/{id}",
      "method": "appPreviewsDeleteInstance",
      "httpMethod": "delete",
      "tag": "AppPreviews",
      "typeScriptTag": "appPreviews",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appPreviews/{id}",
      "method": "appPreviewsGetInstance",
      "httpMethod": "get",
      "tag": "AppPreviews",
      "typeScriptTag": "appPreviews",
      "description": "",
      "parameters": [
        {
          "name": "fields[appPreviews]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appPreviews"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appPreviews/{id}",
      "method": "appPreviewsUpdateInstance",
      "httpMethod": "patch",
      "tag": "AppPreviews",
      "typeScriptTag": "appPreviews",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appPricePoints",
      "method": "appPricePointsGetCollection",
      "httpMethod": "get",
      "tag": "AppPricePoints",
      "typeScriptTag": "appPricePoints",
      "description": "",
      "parameters": [
        {
          "name": "filter[priceTier]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'priceTier'"
        },
        {
          "name": "filter[territory]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'territory'"
        },
        {
          "name": "fields[appPricePoints]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appPricePoints"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[territories]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type territories"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appPricePoints/{id}",
      "method": "appPricePointsGetInstance",
      "httpMethod": "get",
      "tag": "AppPricePoints",
      "typeScriptTag": "appPricePoints",
      "description": "",
      "parameters": [
        {
          "name": "fields[appPricePoints]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appPricePoints"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[territories]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type territories"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appPricePoints/{id}/territory",
      "method": "appPricePointsTerritoryGetToOneRelated",
      "httpMethod": "get",
      "tag": "AppPricePoints",
      "typeScriptTag": "appPricePoints",
      "description": "",
      "parameters": [
        {
          "name": "fields[territories]",
          "schema": "array",
          "description": "the fields to include for returned resources of type territories"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appPriceTiers",
      "method": "appPriceTiersGetCollection",
      "httpMethod": "get",
      "tag": "AppPriceTiers",
      "typeScriptTag": "appPriceTiers",
      "description": "",
      "parameters": [
        {
          "name": "filter[id]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s)"
        },
        {
          "name": "fields[appPriceTiers]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appPriceTiers"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[appPricePoints]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appPricePoints"
        },
        {
          "name": "limit[pricePoints]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related pricePoints returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appPriceTiers/{id}",
      "method": "appPriceTiersGetInstance",
      "httpMethod": "get",
      "tag": "AppPriceTiers",
      "typeScriptTag": "appPriceTiers",
      "description": "",
      "parameters": [
        {
          "name": "fields[appPriceTiers]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appPriceTiers"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[appPricePoints]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appPricePoints"
        },
        {
          "name": "limit[pricePoints]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related pricePoints returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appPriceTiers/{id}/pricePoints",
      "method": "appPriceTiersPricePointsGetToManyRelated",
      "httpMethod": "get",
      "tag": "AppPriceTiers",
      "typeScriptTag": "appPriceTiers",
      "description": "",
      "parameters": [
        {
          "name": "fields[appPricePoints]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appPricePoints"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appPrices/{id}",
      "method": "appPricesGetInstance",
      "httpMethod": "get",
      "tag": "AppPrices",
      "typeScriptTag": "appPrices",
      "description": "",
      "parameters": [
        {
          "name": "fields[appPrices]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appPrices"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appScreenshotSets",
      "method": "appScreenshotSetsCreateInstance",
      "httpMethod": "post",
      "tag": "AppScreenshotSets",
      "typeScriptTag": "appScreenshotSets",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appScreenshotSets/{id}",
      "method": "appScreenshotSetsDeleteInstance",
      "httpMethod": "delete",
      "tag": "AppScreenshotSets",
      "typeScriptTag": "appScreenshotSets",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appScreenshotSets/{id}",
      "method": "appScreenshotSetsGetInstance",
      "httpMethod": "get",
      "tag": "AppScreenshotSets",
      "typeScriptTag": "appScreenshotSets",
      "description": "",
      "parameters": [
        {
          "name": "fields[appScreenshotSets]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appScreenshotSets"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[appScreenshots]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appScreenshots"
        },
        {
          "name": "limit[appScreenshots]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related appScreenshots returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appScreenshotSets/{id}/appScreenshots",
      "method": "appScreenshotSetsAppScreenshotsGetToManyRelated",
      "httpMethod": "get",
      "tag": "AppScreenshotSets",
      "typeScriptTag": "appScreenshotSets",
      "description": "",
      "parameters": [
        {
          "name": "fields[appScreenshotSets]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appScreenshotSets"
        },
        {
          "name": "fields[appScreenshots]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appScreenshots"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "description": "comma-separated list of relationships to include"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appScreenshotSets/{id}/relationships/appScreenshots",
      "method": "appScreenshotSetsAppScreenshotsGetToManyRelationship",
      "httpMethod": "get",
      "tag": "AppScreenshotSets",
      "typeScriptTag": "appScreenshotSets",
      "description": "",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appScreenshotSets/{id}/relationships/appScreenshots",
      "method": "appScreenshotSetsAppScreenshotsReplaceToManyRelationship",
      "httpMethod": "patch",
      "tag": "AppScreenshotSets",
      "typeScriptTag": "appScreenshotSets",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appScreenshots",
      "method": "appScreenshotsCreateInstance",
      "httpMethod": "post",
      "tag": "AppScreenshots",
      "typeScriptTag": "appScreenshots",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appScreenshots/{id}",
      "method": "appScreenshotsDeleteInstance",
      "httpMethod": "delete",
      "tag": "AppScreenshots",
      "typeScriptTag": "appScreenshots",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appScreenshots/{id}",
      "method": "appScreenshotsGetInstance",
      "httpMethod": "get",
      "tag": "AppScreenshots",
      "typeScriptTag": "appScreenshots",
      "description": "",
      "parameters": [
        {
          "name": "fields[appScreenshots]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appScreenshots"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appScreenshots/{id}",
      "method": "appScreenshotsUpdateInstance",
      "httpMethod": "patch",
      "tag": "AppScreenshots",
      "typeScriptTag": "appScreenshots",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreReviewAttachments",
      "method": "appStoreReviewAttachmentsCreateInstance",
      "httpMethod": "post",
      "tag": "AppStoreReviewAttachments",
      "typeScriptTag": "appStoreReviewAttachments",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreReviewAttachments/{id}",
      "method": "appStoreReviewAttachmentsDeleteInstance",
      "httpMethod": "delete",
      "tag": "AppStoreReviewAttachments",
      "typeScriptTag": "appStoreReviewAttachments",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreReviewAttachments/{id}",
      "method": "appStoreReviewAttachmentsGetInstance",
      "httpMethod": "get",
      "tag": "AppStoreReviewAttachments",
      "typeScriptTag": "appStoreReviewAttachments",
      "description": "",
      "parameters": [
        {
          "name": "fields[appStoreReviewAttachments]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appStoreReviewAttachments"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreReviewAttachments/{id}",
      "method": "appStoreReviewAttachmentsUpdateInstance",
      "httpMethod": "patch",
      "tag": "AppStoreReviewAttachments",
      "typeScriptTag": "appStoreReviewAttachments",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreReviewDetails",
      "method": "appStoreReviewDetailsCreateInstance",
      "httpMethod": "post",
      "tag": "AppStoreReviewDetails",
      "typeScriptTag": "appStoreReviewDetails",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreReviewDetails/{id}",
      "method": "appStoreReviewDetailsGetInstance",
      "httpMethod": "get",
      "tag": "AppStoreReviewDetails",
      "typeScriptTag": "appStoreReviewDetails",
      "description": "",
      "parameters": [
        {
          "name": "fields[appStoreReviewDetails]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appStoreReviewDetails"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[appStoreReviewAttachments]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appStoreReviewAttachments"
        },
        {
          "name": "limit[appStoreReviewAttachments]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related appStoreReviewAttachments returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreReviewDetails/{id}",
      "method": "appStoreReviewDetailsUpdateInstance",
      "httpMethod": "patch",
      "tag": "AppStoreReviewDetails",
      "typeScriptTag": "appStoreReviewDetails",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreReviewDetails/{id}/appStoreReviewAttachments",
      "method": "appStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelated",
      "httpMethod": "get",
      "tag": "AppStoreReviewDetails",
      "typeScriptTag": "appStoreReviewDetails",
      "description": "",
      "parameters": [
        {
          "name": "fields[appStoreReviewDetails]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appStoreReviewDetails"
        },
        {
          "name": "fields[appStoreReviewAttachments]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appStoreReviewAttachments"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "description": "comma-separated list of relationships to include"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersionLocalizations",
      "method": "appStoreVersionLocalizationsCreateInstance",
      "httpMethod": "post",
      "tag": "AppStoreVersionLocalizations",
      "typeScriptTag": "appStoreVersionLocalizations",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersionLocalizations/{id}",
      "method": "appStoreVersionLocalizationsDeleteInstance",
      "httpMethod": "delete",
      "tag": "AppStoreVersionLocalizations",
      "typeScriptTag": "appStoreVersionLocalizations",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersionLocalizations/{id}",
      "method": "appStoreVersionLocalizationsGetInstance",
      "httpMethod": "get",
      "tag": "AppStoreVersionLocalizations",
      "typeScriptTag": "appStoreVersionLocalizations",
      "description": "",
      "parameters": [
        {
          "name": "fields[appStoreVersionLocalizations]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appStoreVersionLocalizations"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[appScreenshotSets]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appScreenshotSets"
        },
        {
          "name": "fields[appPreviewSets]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appPreviewSets"
        },
        {
          "name": "limit[appPreviewSets]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related appPreviewSets returned (when they are included)"
        },
        {
          "name": "limit[appScreenshotSets]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related appScreenshotSets returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersionLocalizations/{id}",
      "method": "appStoreVersionLocalizationsUpdateInstance",
      "httpMethod": "patch",
      "tag": "AppStoreVersionLocalizations",
      "typeScriptTag": "appStoreVersionLocalizations",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersionLocalizations/{id}/appPreviewSets",
      "method": "appStoreVersionLocalizationsAppPreviewSetsGetToManyRelated",
      "httpMethod": "get",
      "tag": "AppStoreVersionLocalizations",
      "typeScriptTag": "appStoreVersionLocalizations",
      "description": "",
      "parameters": [
        {
          "name": "filter[previewType]",
          "schema": "array",
          "description": "filter by attribute 'previewType'"
        },
        {
          "name": "fields[appStoreVersionLocalizations]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appStoreVersionLocalizations"
        },
        {
          "name": "fields[appPreviews]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appPreviews"
        },
        {
          "name": "fields[appPreviewSets]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appPreviewSets"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "description": "comma-separated list of relationships to include"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersionLocalizations/{id}/appScreenshotSets",
      "method": "appStoreVersionLocalizationsAppScreenshotSetsGetToManyRelated",
      "httpMethod": "get",
      "tag": "AppStoreVersionLocalizations",
      "typeScriptTag": "appStoreVersionLocalizations",
      "description": "",
      "parameters": [
        {
          "name": "filter[screenshotDisplayType]",
          "schema": "array",
          "description": "filter by attribute 'screenshotDisplayType'"
        },
        {
          "name": "fields[appStoreVersionLocalizations]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appStoreVersionLocalizations"
        },
        {
          "name": "fields[appScreenshotSets]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appScreenshotSets"
        },
        {
          "name": "fields[appScreenshots]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appScreenshots"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "description": "comma-separated list of relationships to include"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersionPhasedReleases",
      "method": "appStoreVersionPhasedReleasesCreateInstance",
      "httpMethod": "post",
      "tag": "AppStoreVersionPhasedReleases",
      "typeScriptTag": "appStoreVersionPhasedReleases",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersionPhasedReleases/{id}",
      "method": "appStoreVersionPhasedReleasesDeleteInstance",
      "httpMethod": "delete",
      "tag": "AppStoreVersionPhasedReleases",
      "typeScriptTag": "appStoreVersionPhasedReleases",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersionPhasedReleases/{id}",
      "method": "appStoreVersionPhasedReleasesUpdateInstance",
      "httpMethod": "patch",
      "tag": "AppStoreVersionPhasedReleases",
      "typeScriptTag": "appStoreVersionPhasedReleases",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersionSubmissions",
      "method": "appStoreVersionSubmissionsCreateInstance",
      "httpMethod": "post",
      "tag": "AppStoreVersionSubmissions",
      "typeScriptTag": "appStoreVersionSubmissions",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersionSubmissions/{id}",
      "method": "appStoreVersionSubmissionsDeleteInstance",
      "httpMethod": "delete",
      "tag": "AppStoreVersionSubmissions",
      "typeScriptTag": "appStoreVersionSubmissions",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersions",
      "method": "appStoreVersionsCreateInstance",
      "httpMethod": "post",
      "tag": "AppStoreVersions",
      "typeScriptTag": "appStoreVersions",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersions/{id}",
      "method": "appStoreVersionsDeleteInstance",
      "httpMethod": "delete",
      "tag": "AppStoreVersions",
      "typeScriptTag": "appStoreVersions",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersions/{id}",
      "method": "appStoreVersionsGetInstance",
      "httpMethod": "get",
      "tag": "AppStoreVersions",
      "typeScriptTag": "appStoreVersions",
      "description": "",
      "parameters": [
        {
          "name": "fields[appStoreVersions]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appStoreVersions"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[appStoreVersionLocalizations]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appStoreVersionLocalizations"
        },
        {
          "name": "fields[idfaDeclarations]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type idfaDeclarations"
        },
        {
          "name": "fields[routingAppCoverages]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type routingAppCoverages"
        },
        {
          "name": "fields[appStoreVersionPhasedReleases]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appStoreVersionPhasedReleases"
        },
        {
          "name": "fields[ageRatingDeclarations]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type ageRatingDeclarations"
        },
        {
          "name": "fields[appStoreReviewDetails]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appStoreReviewDetails"
        },
        {
          "name": "fields[builds]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type builds"
        },
        {
          "name": "fields[appStoreVersionSubmissions]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appStoreVersionSubmissions"
        },
        {
          "name": "limit[appStoreVersionLocalizations]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related appStoreVersionLocalizations returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersions/{id}",
      "method": "appStoreVersionsUpdateInstance",
      "httpMethod": "patch",
      "tag": "AppStoreVersions",
      "typeScriptTag": "appStoreVersions",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersions/{id}/ageRatingDeclaration",
      "method": "appStoreVersionsAgeRatingDeclarationGetToOneRelated",
      "httpMethod": "get",
      "tag": "AppStoreVersions",
      "typeScriptTag": "appStoreVersions",
      "description": "",
      "parameters": [
        {
          "name": "fields[ageRatingDeclarations]",
          "schema": "array",
          "description": "the fields to include for returned resources of type ageRatingDeclarations"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersions/{id}/appStoreReviewDetail",
      "method": "appStoreVersionsAppStoreReviewDetailGetToOneRelated",
      "httpMethod": "get",
      "tag": "AppStoreVersions",
      "typeScriptTag": "appStoreVersions",
      "description": "",
      "parameters": [
        {
          "name": "fields[appStoreReviewDetails]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appStoreReviewDetails"
        },
        {
          "name": "fields[appStoreVersions]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appStoreVersions"
        },
        {
          "name": "fields[appStoreReviewAttachments]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appStoreReviewAttachments"
        },
        {
          "name": "include",
          "schema": "array",
          "description": "comma-separated list of relationships to include"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersions/{id}/appStoreVersionLocalizations",
      "method": "appStoreVersionsAppStoreVersionLocalizationsGetToManyRelated",
      "httpMethod": "get",
      "tag": "AppStoreVersions",
      "typeScriptTag": "appStoreVersions",
      "description": "",
      "parameters": [
        {
          "name": "fields[appStoreVersionLocalizations]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appStoreVersionLocalizations"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersions/{id}/appStoreVersionPhasedRelease",
      "method": "appStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelated",
      "httpMethod": "get",
      "tag": "AppStoreVersions",
      "typeScriptTag": "appStoreVersions",
      "description": "",
      "parameters": [
        {
          "name": "fields[appStoreVersionPhasedReleases]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appStoreVersionPhasedReleases"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersions/{id}/appStoreVersionSubmission",
      "method": "appStoreVersionsAppStoreVersionSubmissionGetToOneRelated",
      "httpMethod": "get",
      "tag": "AppStoreVersions",
      "typeScriptTag": "appStoreVersions",
      "description": "",
      "parameters": [
        {
          "name": "fields[appStoreVersions]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appStoreVersions"
        },
        {
          "name": "fields[appStoreVersionSubmissions]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appStoreVersionSubmissions"
        },
        {
          "name": "include",
          "schema": "array",
          "description": "comma-separated list of relationships to include"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersions/{id}/build",
      "method": "appStoreVersionsBuildGetToOneRelated",
      "httpMethod": "get",
      "tag": "AppStoreVersions",
      "typeScriptTag": "appStoreVersions",
      "description": "",
      "parameters": [
        {
          "name": "fields[builds]",
          "schema": "array",
          "description": "the fields to include for returned resources of type builds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersions/{id}/idfaDeclaration",
      "method": "appStoreVersionsIdfaDeclarationGetToOneRelated",
      "httpMethod": "get",
      "tag": "AppStoreVersions",
      "typeScriptTag": "appStoreVersions",
      "description": "",
      "parameters": [
        {
          "name": "fields[idfaDeclarations]",
          "schema": "array",
          "description": "the fields to include for returned resources of type idfaDeclarations"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersions/{id}/relationships/build",
      "method": "appStoreVersionsBuildGetToOneRelationship",
      "httpMethod": "get",
      "tag": "AppStoreVersions",
      "typeScriptTag": "appStoreVersions",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersions/{id}/relationships/build",
      "method": "appStoreVersionsBuildUpdateToOneRelationship",
      "httpMethod": "patch",
      "tag": "AppStoreVersions",
      "typeScriptTag": "appStoreVersions",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/appStoreVersions/{id}/routingAppCoverage",
      "method": "appStoreVersionsRoutingAppCoverageGetToOneRelated",
      "httpMethod": "get",
      "tag": "AppStoreVersions",
      "typeScriptTag": "appStoreVersions",
      "description": "",
      "parameters": [
        {
          "name": "fields[routingAppCoverages]",
          "schema": "array",
          "description": "the fields to include for returned resources of type routingAppCoverages"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/apps",
      "method": "appsGetCollection",
      "httpMethod": "get",
      "tag": "Apps",
      "typeScriptTag": "apps",
      "description": "",
      "parameters": [
        {
          "name": "filter[appStoreVersionsAppStoreState]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'appStoreVersions.appStoreState'"
        },
        {
          "name": "filter[appStoreVersionsPlatform]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'appStoreVersions.platform'"
        },
        {
          "name": "filter[bundleId]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'bundleId'"
        },
        {
          "name": "filter[name]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'name'"
        },
        {
          "name": "filter[sku]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'sku'"
        },
        {
          "name": "filter[appStoreVersions]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'appStoreVersions'"
        },
        {
          "name": "filter[id]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s)"
        },
        {
          "name": "exists[gameCenterEnabledVersions]",
          "schema": "array",
          "required": false,
          "description": "filter by existence or non-existence of related 'gameCenterEnabledVersions'"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of sort expressions; resources will be sorted as specified"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[betaGroups]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaGroups"
        },
        {
          "name": "fields[perfPowerMetrics]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type perfPowerMetrics"
        },
        {
          "name": "fields[appInfos]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appInfos"
        },
        {
          "name": "fields[appPreOrders]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appPreOrders"
        },
        {
          "name": "fields[preReleaseVersions]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type preReleaseVersions"
        },
        {
          "name": "fields[appPrices]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appPrices"
        },
        {
          "name": "fields[inAppPurchases]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type inAppPurchases"
        },
        {
          "name": "fields[betaAppReviewDetails]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaAppReviewDetails"
        },
        {
          "name": "fields[territories]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type territories"
        },
        {
          "name": "fields[gameCenterEnabledVersions]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type gameCenterEnabledVersions"
        },
        {
          "name": "fields[appStoreVersions]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appStoreVersions"
        },
        {
          "name": "fields[builds]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type builds"
        },
        {
          "name": "fields[betaAppLocalizations]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaAppLocalizations"
        },
        {
          "name": "fields[betaLicenseAgreements]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaLicenseAgreements"
        },
        {
          "name": "fields[endUserLicenseAgreements]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type endUserLicenseAgreements"
        },
        {
          "name": "limit[appInfos]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related appInfos returned (when they are included)"
        },
        {
          "name": "limit[appStoreVersions]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related appStoreVersions returned (when they are included)"
        },
        {
          "name": "limit[availableTerritories]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related availableTerritories returned (when they are included)"
        },
        {
          "name": "limit[betaAppLocalizations]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related betaAppLocalizations returned (when they are included)"
        },
        {
          "name": "limit[betaGroups]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related betaGroups returned (when they are included)"
        },
        {
          "name": "limit[builds]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related builds returned (when they are included)"
        },
        {
          "name": "limit[gameCenterEnabledVersions]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related gameCenterEnabledVersions returned (when they are included)"
        },
        {
          "name": "limit[inAppPurchases]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related inAppPurchases returned (when they are included)"
        },
        {
          "name": "limit[preReleaseVersions]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related preReleaseVersions returned (when they are included)"
        },
        {
          "name": "limit[prices]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related prices returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/apps/{id}",
      "method": "appsGetInstance",
      "httpMethod": "get",
      "tag": "Apps",
      "typeScriptTag": "apps",
      "description": "",
      "parameters": [
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[betaGroups]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaGroups"
        },
        {
          "name": "fields[perfPowerMetrics]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type perfPowerMetrics"
        },
        {
          "name": "fields[appInfos]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appInfos"
        },
        {
          "name": "fields[appPreOrders]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appPreOrders"
        },
        {
          "name": "fields[preReleaseVersions]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type preReleaseVersions"
        },
        {
          "name": "fields[appPrices]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appPrices"
        },
        {
          "name": "fields[inAppPurchases]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type inAppPurchases"
        },
        {
          "name": "fields[betaAppReviewDetails]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaAppReviewDetails"
        },
        {
          "name": "fields[territories]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type territories"
        },
        {
          "name": "fields[gameCenterEnabledVersions]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type gameCenterEnabledVersions"
        },
        {
          "name": "fields[appStoreVersions]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appStoreVersions"
        },
        {
          "name": "fields[builds]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type builds"
        },
        {
          "name": "fields[betaAppLocalizations]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaAppLocalizations"
        },
        {
          "name": "fields[betaLicenseAgreements]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaLicenseAgreements"
        },
        {
          "name": "fields[endUserLicenseAgreements]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type endUserLicenseAgreements"
        },
        {
          "name": "limit[appInfos]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related appInfos returned (when they are included)"
        },
        {
          "name": "limit[appStoreVersions]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related appStoreVersions returned (when they are included)"
        },
        {
          "name": "limit[availableTerritories]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related availableTerritories returned (when they are included)"
        },
        {
          "name": "limit[betaAppLocalizations]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related betaAppLocalizations returned (when they are included)"
        },
        {
          "name": "limit[betaGroups]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related betaGroups returned (when they are included)"
        },
        {
          "name": "limit[builds]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related builds returned (when they are included)"
        },
        {
          "name": "limit[gameCenterEnabledVersions]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related gameCenterEnabledVersions returned (when they are included)"
        },
        {
          "name": "limit[inAppPurchases]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related inAppPurchases returned (when they are included)"
        },
        {
          "name": "limit[preReleaseVersions]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related preReleaseVersions returned (when they are included)"
        },
        {
          "name": "limit[prices]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related prices returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/apps/{id}",
      "method": "appsUpdateInstance",
      "httpMethod": "patch",
      "tag": "Apps",
      "typeScriptTag": "apps",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/apps/{id}/appInfos",
      "method": "appsAppInfosGetToManyRelated",
      "httpMethod": "get",
      "tag": "Apps",
      "typeScriptTag": "apps",
      "description": "",
      "parameters": [
        {
          "name": "fields[ageRatingDeclarations]",
          "schema": "array",
          "description": "the fields to include for returned resources of type ageRatingDeclarations"
        },
        {
          "name": "fields[appInfos]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appInfos"
        },
        {
          "name": "fields[appCategories]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appCategories"
        },
        {
          "name": "fields[appInfoLocalizations]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appInfoLocalizations"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "description": "comma-separated list of relationships to include"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/apps/{id}/appStoreVersions",
      "method": "appsAppStoreVersionsGetToManyRelated",
      "httpMethod": "get",
      "tag": "Apps",
      "typeScriptTag": "apps",
      "description": "",
      "parameters": [
        {
          "name": "filter[appStoreState]",
          "schema": "array",
          "description": "filter by attribute 'appStoreState'"
        },
        {
          "name": "filter[platform]",
          "schema": "array",
          "description": "filter by attribute 'platform'"
        },
        {
          "name": "filter[versionString]",
          "schema": "array",
          "description": "filter by attribute 'versionString'"
        },
        {
          "name": "filter[id]",
          "schema": "array",
          "description": "filter by id(s)"
        },
        {
          "name": "fields[idfaDeclarations]",
          "schema": "array",
          "description": "the fields to include for returned resources of type idfaDeclarations"
        },
        {
          "name": "fields[appStoreVersionLocalizations]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appStoreVersionLocalizations"
        },
        {
          "name": "fields[routingAppCoverages]",
          "schema": "array",
          "description": "the fields to include for returned resources of type routingAppCoverages"
        },
        {
          "name": "fields[appStoreVersionPhasedReleases]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appStoreVersionPhasedReleases"
        },
        {
          "name": "fields[ageRatingDeclarations]",
          "schema": "array",
          "description": "the fields to include for returned resources of type ageRatingDeclarations"
        },
        {
          "name": "fields[appStoreReviewDetails]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appStoreReviewDetails"
        },
        {
          "name": "fields[appStoreVersions]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appStoreVersions"
        },
        {
          "name": "fields[builds]",
          "schema": "array",
          "description": "the fields to include for returned resources of type builds"
        },
        {
          "name": "fields[appStoreVersionSubmissions]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appStoreVersionSubmissions"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "description": "comma-separated list of relationships to include"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/apps/{id}/availableTerritories",
      "method": "appsAvailableTerritoriesGetToManyRelated",
      "httpMethod": "get",
      "tag": "Apps",
      "typeScriptTag": "apps",
      "description": "",
      "parameters": [
        {
          "name": "fields[territories]",
          "schema": "array",
          "description": "the fields to include for returned resources of type territories"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/apps/{id}/betaAppLocalizations",
      "method": "appsBetaAppLocalizationsGetToManyRelated",
      "httpMethod": "get",
      "tag": "Apps",
      "typeScriptTag": "apps",
      "description": "",
      "parameters": [
        {
          "name": "fields[betaAppLocalizations]",
          "schema": "array",
          "description": "the fields to include for returned resources of type betaAppLocalizations"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/apps/{id}/betaAppReviewDetail",
      "method": "appsBetaAppReviewDetailGetToOneRelated",
      "httpMethod": "get",
      "tag": "Apps",
      "typeScriptTag": "apps",
      "description": "",
      "parameters": [
        {
          "name": "fields[betaAppReviewDetails]",
          "schema": "array",
          "description": "the fields to include for returned resources of type betaAppReviewDetails"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/apps/{id}/betaGroups",
      "method": "appsBetaGroupsGetToManyRelated",
      "httpMethod": "get",
      "tag": "Apps",
      "typeScriptTag": "apps",
      "description": "",
      "parameters": [
        {
          "name": "fields[betaGroups]",
          "schema": "array",
          "description": "the fields to include for returned resources of type betaGroups"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/apps/{id}/betaLicenseAgreement",
      "method": "appsBetaLicenseAgreementGetToOneRelated",
      "httpMethod": "get",
      "tag": "Apps",
      "typeScriptTag": "apps",
      "description": "",
      "parameters": [
        {
          "name": "fields[betaLicenseAgreements]",
          "schema": "array",
          "description": "the fields to include for returned resources of type betaLicenseAgreements"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/apps/{id}/builds",
      "method": "appsBuildsGetToManyRelated",
      "httpMethod": "get",
      "tag": "Apps",
      "typeScriptTag": "apps",
      "description": "",
      "parameters": [
        {
          "name": "fields[builds]",
          "schema": "array",
          "description": "the fields to include for returned resources of type builds"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/apps/{id}/endUserLicenseAgreement",
      "method": "appsEndUserLicenseAgreementGetToOneRelated",
      "httpMethod": "get",
      "tag": "Apps",
      "typeScriptTag": "apps",
      "description": "",
      "parameters": [
        {
          "name": "fields[endUserLicenseAgreements]",
          "schema": "array",
          "description": "the fields to include for returned resources of type endUserLicenseAgreements"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/apps/{id}/gameCenterEnabledVersions",
      "method": "appsGameCenterEnabledVersionsGetToManyRelated",
      "httpMethod": "get",
      "tag": "Apps",
      "typeScriptTag": "apps",
      "description": "",
      "parameters": [
        {
          "name": "filter[platform]",
          "schema": "array",
          "description": "filter by attribute 'platform'"
        },
        {
          "name": "filter[versionString]",
          "schema": "array",
          "description": "filter by attribute 'versionString'"
        },
        {
          "name": "filter[id]",
          "schema": "array",
          "description": "filter by id(s)"
        },
        {
          "name": "sort",
          "schema": "array",
          "description": "comma-separated list of sort expressions; resources will be sorted as specified"
        },
        {
          "name": "fields[gameCenterEnabledVersions]",
          "schema": "array",
          "description": "the fields to include for returned resources of type gameCenterEnabledVersions"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "description": "comma-separated list of relationships to include"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/apps/{id}/inAppPurchases",
      "method": "appsInAppPurchasesGetToManyRelated",
      "httpMethod": "get",
      "tag": "Apps",
      "typeScriptTag": "apps",
      "description": "",
      "parameters": [
        {
          "name": "filter[inAppPurchaseType]",
          "schema": "array",
          "description": "filter by attribute 'inAppPurchaseType'"
        },
        {
          "name": "filter[canBeSubmitted]",
          "schema": "array",
          "description": "filter by canBeSubmitted"
        },
        {
          "name": "sort",
          "schema": "array",
          "description": "comma-separated list of sort expressions; resources will be sorted as specified"
        },
        {
          "name": "fields[inAppPurchases]",
          "schema": "array",
          "description": "the fields to include for returned resources of type inAppPurchases"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "description": "comma-separated list of relationships to include"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/apps/{id}/perfPowerMetrics",
      "method": "appsPerfPowerMetricsGetToManyRelated",
      "httpMethod": "get",
      "tag": "Apps",
      "typeScriptTag": "apps",
      "description": "",
      "parameters": [
        {
          "name": "filter[deviceType]",
          "schema": "array",
          "description": "filter by attribute 'deviceType'"
        },
        {
          "name": "filter[metricType]",
          "schema": "array",
          "description": "filter by attribute 'metricType'"
        },
        {
          "name": "filter[platform]",
          "schema": "array",
          "description": "filter by attribute 'platform'"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/apps/{id}/preOrder",
      "method": "appsPreOrderGetToOneRelated",
      "httpMethod": "get",
      "tag": "Apps",
      "typeScriptTag": "apps",
      "description": "",
      "parameters": [
        {
          "name": "fields[appPreOrders]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appPreOrders"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/apps/{id}/preReleaseVersions",
      "method": "appsPreReleaseVersionsGetToManyRelated",
      "httpMethod": "get",
      "tag": "Apps",
      "typeScriptTag": "apps",
      "description": "",
      "parameters": [
        {
          "name": "fields[preReleaseVersions]",
          "schema": "array",
          "description": "the fields to include for returned resources of type preReleaseVersions"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/apps/{id}/prices",
      "method": "appsPricesGetToManyRelated",
      "httpMethod": "get",
      "tag": "Apps",
      "typeScriptTag": "apps",
      "description": "",
      "parameters": [
        {
          "name": "fields[appPrices]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appPrices"
        },
        {
          "name": "fields[appPriceTiers]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appPriceTiers"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "description": "comma-separated list of relationships to include"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/apps/{id}/relationships/betaTesters",
      "method": "appsBetaTestersDeleteToManyRelationship",
      "httpMethod": "delete",
      "tag": "Apps",
      "typeScriptTag": "apps",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaAppLocalizations",
      "method": "betaAppLocalizationsGetCollection",
      "httpMethod": "get",
      "tag": "BetaAppLocalizations",
      "typeScriptTag": "betaAppLocalizations",
      "description": "",
      "parameters": [
        {
          "name": "filter[locale]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'locale'"
        },
        {
          "name": "filter[app]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'app'"
        },
        {
          "name": "fields[betaAppLocalizations]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaAppLocalizations"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaAppLocalizations",
      "method": "betaAppLocalizationsCreateInstance",
      "httpMethod": "post",
      "tag": "BetaAppLocalizations",
      "typeScriptTag": "betaAppLocalizations",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaAppLocalizations/{id}",
      "method": "betaAppLocalizationsDeleteInstance",
      "httpMethod": "delete",
      "tag": "BetaAppLocalizations",
      "typeScriptTag": "betaAppLocalizations",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaAppLocalizations/{id}",
      "method": "betaAppLocalizationsGetInstance",
      "httpMethod": "get",
      "tag": "BetaAppLocalizations",
      "typeScriptTag": "betaAppLocalizations",
      "description": "",
      "parameters": [
        {
          "name": "fields[betaAppLocalizations]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaAppLocalizations"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaAppLocalizations/{id}",
      "method": "betaAppLocalizationsUpdateInstance",
      "httpMethod": "patch",
      "tag": "BetaAppLocalizations",
      "typeScriptTag": "betaAppLocalizations",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaAppLocalizations/{id}/app",
      "method": "betaAppLocalizationsAppGetToOneRelated",
      "httpMethod": "get",
      "tag": "BetaAppLocalizations",
      "typeScriptTag": "betaAppLocalizations",
      "description": "",
      "parameters": [
        {
          "name": "fields[apps]",
          "schema": "array",
          "description": "the fields to include for returned resources of type apps"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaAppReviewDetails",
      "method": "betaAppReviewDetailsGetCollection",
      "httpMethod": "get",
      "tag": "BetaAppReviewDetails",
      "typeScriptTag": "betaAppReviewDetails",
      "description": "",
      "parameters": [
        {
          "name": "filter[app]",
          "schema": "array",
          "required": true,
          "description": "filter by id(s) of related 'app'"
        },
        {
          "name": "fields[betaAppReviewDetails]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaAppReviewDetails"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaAppReviewDetails/{id}",
      "method": "betaAppReviewDetailsGetInstance",
      "httpMethod": "get",
      "tag": "BetaAppReviewDetails",
      "typeScriptTag": "betaAppReviewDetails",
      "description": "",
      "parameters": [
        {
          "name": "fields[betaAppReviewDetails]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaAppReviewDetails"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaAppReviewDetails/{id}",
      "method": "betaAppReviewDetailsUpdateInstance",
      "httpMethod": "patch",
      "tag": "BetaAppReviewDetails",
      "typeScriptTag": "betaAppReviewDetails",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaAppReviewDetails/{id}/app",
      "method": "betaAppReviewDetailsAppGetToOneRelated",
      "httpMethod": "get",
      "tag": "BetaAppReviewDetails",
      "typeScriptTag": "betaAppReviewDetails",
      "description": "",
      "parameters": [
        {
          "name": "fields[apps]",
          "schema": "array",
          "description": "the fields to include for returned resources of type apps"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaAppReviewSubmissions",
      "method": "betaAppReviewSubmissionsGetCollection",
      "httpMethod": "get",
      "tag": "BetaAppReviewSubmissions",
      "typeScriptTag": "betaAppReviewSubmissions",
      "description": "",
      "parameters": [
        {
          "name": "filter[betaReviewState]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'betaReviewState'"
        },
        {
          "name": "filter[build]",
          "schema": "array",
          "required": true,
          "description": "filter by id(s) of related 'build'"
        },
        {
          "name": "fields[betaAppReviewSubmissions]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaAppReviewSubmissions"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[builds]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type builds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaAppReviewSubmissions",
      "method": "betaAppReviewSubmissionsCreateInstance",
      "httpMethod": "post",
      "tag": "BetaAppReviewSubmissions",
      "typeScriptTag": "betaAppReviewSubmissions",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaAppReviewSubmissions/{id}",
      "method": "betaAppReviewSubmissionsGetInstance",
      "httpMethod": "get",
      "tag": "BetaAppReviewSubmissions",
      "typeScriptTag": "betaAppReviewSubmissions",
      "description": "",
      "parameters": [
        {
          "name": "fields[betaAppReviewSubmissions]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaAppReviewSubmissions"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[builds]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type builds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaAppReviewSubmissions/{id}/build",
      "method": "betaAppReviewSubmissionsBuildGetToOneRelated",
      "httpMethod": "get",
      "tag": "BetaAppReviewSubmissions",
      "typeScriptTag": "betaAppReviewSubmissions",
      "description": "",
      "parameters": [
        {
          "name": "fields[builds]",
          "schema": "array",
          "description": "the fields to include for returned resources of type builds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaBuildLocalizations",
      "method": "betaBuildLocalizationsGetCollection",
      "httpMethod": "get",
      "tag": "BetaBuildLocalizations",
      "typeScriptTag": "betaBuildLocalizations",
      "description": "",
      "parameters": [
        {
          "name": "filter[locale]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'locale'"
        },
        {
          "name": "filter[build]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'build'"
        },
        {
          "name": "fields[betaBuildLocalizations]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaBuildLocalizations"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[builds]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type builds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaBuildLocalizations",
      "method": "betaBuildLocalizationsCreateInstance",
      "httpMethod": "post",
      "tag": "BetaBuildLocalizations",
      "typeScriptTag": "betaBuildLocalizations",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaBuildLocalizations/{id}",
      "method": "betaBuildLocalizationsDeleteInstance",
      "httpMethod": "delete",
      "tag": "BetaBuildLocalizations",
      "typeScriptTag": "betaBuildLocalizations",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaBuildLocalizations/{id}",
      "method": "betaBuildLocalizationsGetInstance",
      "httpMethod": "get",
      "tag": "BetaBuildLocalizations",
      "typeScriptTag": "betaBuildLocalizations",
      "description": "",
      "parameters": [
        {
          "name": "fields[betaBuildLocalizations]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaBuildLocalizations"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[builds]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type builds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaBuildLocalizations/{id}",
      "method": "betaBuildLocalizationsUpdateInstance",
      "httpMethod": "patch",
      "tag": "BetaBuildLocalizations",
      "typeScriptTag": "betaBuildLocalizations",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaBuildLocalizations/{id}/build",
      "method": "betaBuildLocalizationsBuildGetToOneRelated",
      "httpMethod": "get",
      "tag": "BetaBuildLocalizations",
      "typeScriptTag": "betaBuildLocalizations",
      "description": "",
      "parameters": [
        {
          "name": "fields[builds]",
          "schema": "array",
          "description": "the fields to include for returned resources of type builds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaGroups",
      "method": "betaGroupsGetCollection",
      "httpMethod": "get",
      "tag": "BetaGroups",
      "typeScriptTag": "betaGroups",
      "description": "",
      "parameters": [
        {
          "name": "filter[isInternalGroup]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'isInternalGroup'"
        },
        {
          "name": "filter[name]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'name'"
        },
        {
          "name": "filter[publicLink]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'publicLink'"
        },
        {
          "name": "filter[publicLinkEnabled]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'publicLinkEnabled'"
        },
        {
          "name": "filter[publicLinkLimitEnabled]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'publicLinkLimitEnabled'"
        },
        {
          "name": "filter[app]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'app'"
        },
        {
          "name": "filter[builds]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'builds'"
        },
        {
          "name": "filter[id]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s)"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of sort expressions; resources will be sorted as specified"
        },
        {
          "name": "fields[betaGroups]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaGroups"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[builds]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type builds"
        },
        {
          "name": "fields[betaTesters]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaTesters"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit[betaTesters]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related betaTesters returned (when they are included)"
        },
        {
          "name": "limit[builds]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related builds returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaGroups",
      "method": "betaGroupsCreateInstance",
      "httpMethod": "post",
      "tag": "BetaGroups",
      "typeScriptTag": "betaGroups",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaGroups/{id}",
      "method": "betaGroupsDeleteInstance",
      "httpMethod": "delete",
      "tag": "BetaGroups",
      "typeScriptTag": "betaGroups",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaGroups/{id}",
      "method": "betaGroupsGetInstance",
      "httpMethod": "get",
      "tag": "BetaGroups",
      "typeScriptTag": "betaGroups",
      "description": "",
      "parameters": [
        {
          "name": "fields[betaGroups]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaGroups"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[builds]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type builds"
        },
        {
          "name": "fields[betaTesters]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaTesters"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit[betaTesters]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related betaTesters returned (when they are included)"
        },
        {
          "name": "limit[builds]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related builds returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaGroups/{id}",
      "method": "betaGroupsUpdateInstance",
      "httpMethod": "patch",
      "tag": "BetaGroups",
      "typeScriptTag": "betaGroups",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaGroups/{id}/app",
      "method": "betaGroupsAppGetToOneRelated",
      "httpMethod": "get",
      "tag": "BetaGroups",
      "typeScriptTag": "betaGroups",
      "description": "",
      "parameters": [
        {
          "name": "fields[apps]",
          "schema": "array",
          "description": "the fields to include for returned resources of type apps"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaGroups/{id}/betaTesters",
      "method": "betaGroupsBetaTestersGetToManyRelated",
      "httpMethod": "get",
      "tag": "BetaGroups",
      "typeScriptTag": "betaGroups",
      "description": "",
      "parameters": [
        {
          "name": "fields[betaTesters]",
          "schema": "array",
          "description": "the fields to include for returned resources of type betaTesters"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaGroups/{id}/builds",
      "method": "betaGroupsBuildsGetToManyRelated",
      "httpMethod": "get",
      "tag": "BetaGroups",
      "typeScriptTag": "betaGroups",
      "description": "",
      "parameters": [
        {
          "name": "fields[builds]",
          "schema": "array",
          "description": "the fields to include for returned resources of type builds"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaGroups/{id}/relationships/betaTesters",
      "method": "betaGroupsBetaTestersDeleteToManyRelationship",
      "httpMethod": "delete",
      "tag": "BetaGroups",
      "typeScriptTag": "betaGroups",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaGroups/{id}/relationships/betaTesters",
      "method": "betaGroupsBetaTestersGetToManyRelationship",
      "httpMethod": "get",
      "tag": "BetaGroups",
      "typeScriptTag": "betaGroups",
      "description": "",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaGroups/{id}/relationships/betaTesters",
      "method": "betaGroupsBetaTestersCreateToManyRelationship",
      "httpMethod": "post",
      "tag": "BetaGroups",
      "typeScriptTag": "betaGroups",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaGroups/{id}/relationships/builds",
      "method": "betaGroupsBuildsDeleteToManyRelationship",
      "httpMethod": "delete",
      "tag": "BetaGroups",
      "typeScriptTag": "betaGroups",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaGroups/{id}/relationships/builds",
      "method": "betaGroupsBuildsGetToManyRelationship",
      "httpMethod": "get",
      "tag": "BetaGroups",
      "typeScriptTag": "betaGroups",
      "description": "",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaGroups/{id}/relationships/builds",
      "method": "betaGroupsBuildsCreateToManyRelationship",
      "httpMethod": "post",
      "tag": "BetaGroups",
      "typeScriptTag": "betaGroups",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaLicenseAgreements",
      "method": "betaLicenseAgreementsGetCollection",
      "httpMethod": "get",
      "tag": "BetaLicenseAgreements",
      "typeScriptTag": "betaLicenseAgreements",
      "description": "",
      "parameters": [
        {
          "name": "filter[app]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'app'"
        },
        {
          "name": "fields[betaLicenseAgreements]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaLicenseAgreements"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaLicenseAgreements/{id}",
      "method": "betaLicenseAgreementsGetInstance",
      "httpMethod": "get",
      "tag": "BetaLicenseAgreements",
      "typeScriptTag": "betaLicenseAgreements",
      "description": "",
      "parameters": [
        {
          "name": "fields[betaLicenseAgreements]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaLicenseAgreements"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaLicenseAgreements/{id}",
      "method": "betaLicenseAgreementsUpdateInstance",
      "httpMethod": "patch",
      "tag": "BetaLicenseAgreements",
      "typeScriptTag": "betaLicenseAgreements",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaLicenseAgreements/{id}/app",
      "method": "betaLicenseAgreementsAppGetToOneRelated",
      "httpMethod": "get",
      "tag": "BetaLicenseAgreements",
      "typeScriptTag": "betaLicenseAgreements",
      "description": "",
      "parameters": [
        {
          "name": "fields[apps]",
          "schema": "array",
          "description": "the fields to include for returned resources of type apps"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaTesterInvitations",
      "method": "betaTesterInvitationsCreateInstance",
      "httpMethod": "post",
      "tag": "BetaTesterInvitations",
      "typeScriptTag": "betaTesterInvitations",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaTesters",
      "method": "betaTestersGetCollection",
      "httpMethod": "get",
      "tag": "BetaTesters",
      "typeScriptTag": "betaTesters",
      "description": "",
      "parameters": [
        {
          "name": "filter[email]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'email'"
        },
        {
          "name": "filter[firstName]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'firstName'"
        },
        {
          "name": "filter[inviteType]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'inviteType'"
        },
        {
          "name": "filter[lastName]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'lastName'"
        },
        {
          "name": "filter[apps]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'apps'"
        },
        {
          "name": "filter[betaGroups]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'betaGroups'"
        },
        {
          "name": "filter[builds]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'builds'"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of sort expressions; resources will be sorted as specified"
        },
        {
          "name": "fields[betaTesters]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaTesters"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[betaGroups]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaGroups"
        },
        {
          "name": "fields[builds]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type builds"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit[apps]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related apps returned (when they are included)"
        },
        {
          "name": "limit[betaGroups]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related betaGroups returned (when they are included)"
        },
        {
          "name": "limit[builds]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related builds returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaTesters",
      "method": "betaTestersCreateInstance",
      "httpMethod": "post",
      "tag": "BetaTesters",
      "typeScriptTag": "betaTesters",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaTesters/{id}",
      "method": "betaTestersDeleteInstance",
      "httpMethod": "delete",
      "tag": "BetaTesters",
      "typeScriptTag": "betaTesters",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaTesters/{id}",
      "method": "betaTestersGetInstance",
      "httpMethod": "get",
      "tag": "BetaTesters",
      "typeScriptTag": "betaTesters",
      "description": "",
      "parameters": [
        {
          "name": "fields[betaTesters]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaTesters"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[betaGroups]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaGroups"
        },
        {
          "name": "fields[builds]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type builds"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit[apps]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related apps returned (when they are included)"
        },
        {
          "name": "limit[betaGroups]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related betaGroups returned (when they are included)"
        },
        {
          "name": "limit[builds]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related builds returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaTesters/{id}/apps",
      "method": "betaTestersAppsGetToManyRelated",
      "httpMethod": "get",
      "tag": "BetaTesters",
      "typeScriptTag": "betaTesters",
      "description": "",
      "parameters": [
        {
          "name": "fields[apps]",
          "schema": "array",
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaTesters/{id}/betaGroups",
      "method": "betaTestersBetaGroupsGetToManyRelated",
      "httpMethod": "get",
      "tag": "BetaTesters",
      "typeScriptTag": "betaTesters",
      "description": "",
      "parameters": [
        {
          "name": "fields[betaGroups]",
          "schema": "array",
          "description": "the fields to include for returned resources of type betaGroups"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaTesters/{id}/builds",
      "method": "betaTestersBuildsGetToManyRelated",
      "httpMethod": "get",
      "tag": "BetaTesters",
      "typeScriptTag": "betaTesters",
      "description": "",
      "parameters": [
        {
          "name": "fields[builds]",
          "schema": "array",
          "description": "the fields to include for returned resources of type builds"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaTesters/{id}/relationships/apps",
      "method": "betaTestersAppsDeleteToManyRelationship",
      "httpMethod": "delete",
      "tag": "BetaTesters",
      "typeScriptTag": "betaTesters",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaTesters/{id}/relationships/apps",
      "method": "betaTestersAppsGetToManyRelationship",
      "httpMethod": "get",
      "tag": "BetaTesters",
      "typeScriptTag": "betaTesters",
      "description": "",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaTesters/{id}/relationships/betaGroups",
      "method": "betaTestersBetaGroupsDeleteToManyRelationship",
      "httpMethod": "delete",
      "tag": "BetaTesters",
      "typeScriptTag": "betaTesters",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaTesters/{id}/relationships/betaGroups",
      "method": "betaTestersBetaGroupsGetToManyRelationship",
      "httpMethod": "get",
      "tag": "BetaTesters",
      "typeScriptTag": "betaTesters",
      "description": "",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaTesters/{id}/relationships/betaGroups",
      "method": "betaTestersBetaGroupsCreateToManyRelationship",
      "httpMethod": "post",
      "tag": "BetaTesters",
      "typeScriptTag": "betaTesters",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaTesters/{id}/relationships/builds",
      "method": "betaTestersBuildsDeleteToManyRelationship",
      "httpMethod": "delete",
      "tag": "BetaTesters",
      "typeScriptTag": "betaTesters",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaTesters/{id}/relationships/builds",
      "method": "betaTestersBuildsGetToManyRelationship",
      "httpMethod": "get",
      "tag": "BetaTesters",
      "typeScriptTag": "betaTesters",
      "description": "",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/betaTesters/{id}/relationships/builds",
      "method": "betaTestersBuildsCreateToManyRelationship",
      "httpMethod": "post",
      "tag": "BetaTesters",
      "typeScriptTag": "betaTesters",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/buildBetaDetails",
      "method": "buildBetaDetailsGetCollection",
      "httpMethod": "get",
      "tag": "BuildBetaDetails",
      "typeScriptTag": "buildBetaDetails",
      "description": "",
      "parameters": [
        {
          "name": "filter[build]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'build'"
        },
        {
          "name": "filter[id]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s)"
        },
        {
          "name": "fields[buildBetaDetails]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type buildBetaDetails"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[builds]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type builds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/buildBetaDetails/{id}",
      "method": "buildBetaDetailsGetInstance",
      "httpMethod": "get",
      "tag": "BuildBetaDetails",
      "typeScriptTag": "buildBetaDetails",
      "description": "",
      "parameters": [
        {
          "name": "fields[buildBetaDetails]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type buildBetaDetails"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[builds]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type builds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/buildBetaDetails/{id}",
      "method": "buildBetaDetailsUpdateInstance",
      "httpMethod": "patch",
      "tag": "BuildBetaDetails",
      "typeScriptTag": "buildBetaDetails",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/buildBetaDetails/{id}/build",
      "method": "buildBetaDetailsBuildGetToOneRelated",
      "httpMethod": "get",
      "tag": "BuildBetaDetails",
      "typeScriptTag": "buildBetaDetails",
      "description": "",
      "parameters": [
        {
          "name": "fields[builds]",
          "schema": "array",
          "description": "the fields to include for returned resources of type builds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/buildBetaNotifications",
      "method": "buildBetaNotificationsCreateInstance",
      "httpMethod": "post",
      "tag": "BuildBetaNotifications",
      "typeScriptTag": "buildBetaNotifications",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/builds",
      "method": "buildsGetCollection",
      "httpMethod": "get",
      "tag": "Builds",
      "typeScriptTag": "builds",
      "description": "",
      "parameters": [
        {
          "name": "filter[betaAppReviewSubmissionBetaReviewState]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'betaAppReviewSubmission.betaReviewState'"
        },
        {
          "name": "filter[expired]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'expired'"
        },
        {
          "name": "filter[preReleaseVersionPlatform]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'preReleaseVersion.platform'"
        },
        {
          "name": "filter[preReleaseVersionVersion]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'preReleaseVersion.version'"
        },
        {
          "name": "filter[processingState]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'processingState'"
        },
        {
          "name": "filter[usesNonExemptEncryption]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'usesNonExemptEncryption'"
        },
        {
          "name": "filter[version]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'version'"
        },
        {
          "name": "filter[app]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'app'"
        },
        {
          "name": "filter[appStoreVersion]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'appStoreVersion'"
        },
        {
          "name": "filter[betaGroups]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'betaGroups'"
        },
        {
          "name": "filter[preReleaseVersion]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'preReleaseVersion'"
        },
        {
          "name": "filter[id]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s)"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of sort expressions; resources will be sorted as specified"
        },
        {
          "name": "fields[builds]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type builds"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[appEncryptionDeclarations]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appEncryptionDeclarations"
        },
        {
          "name": "fields[betaAppReviewSubmissions]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaAppReviewSubmissions"
        },
        {
          "name": "fields[buildBetaDetails]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type buildBetaDetails"
        },
        {
          "name": "fields[buildIcons]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type buildIcons"
        },
        {
          "name": "fields[perfPowerMetrics]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type perfPowerMetrics"
        },
        {
          "name": "fields[preReleaseVersions]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type preReleaseVersions"
        },
        {
          "name": "fields[appStoreVersions]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appStoreVersions"
        },
        {
          "name": "fields[diagnosticSignatures]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type diagnosticSignatures"
        },
        {
          "name": "fields[betaTesters]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaTesters"
        },
        {
          "name": "fields[betaBuildLocalizations]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaBuildLocalizations"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit[betaBuildLocalizations]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related betaBuildLocalizations returned (when they are included)"
        },
        {
          "name": "limit[icons]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related icons returned (when they are included)"
        },
        {
          "name": "limit[individualTesters]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related individualTesters returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/builds/{id}",
      "method": "buildsGetInstance",
      "httpMethod": "get",
      "tag": "Builds",
      "typeScriptTag": "builds",
      "description": "",
      "parameters": [
        {
          "name": "fields[builds]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type builds"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[appEncryptionDeclarations]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appEncryptionDeclarations"
        },
        {
          "name": "fields[betaAppReviewSubmissions]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaAppReviewSubmissions"
        },
        {
          "name": "fields[buildBetaDetails]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type buildBetaDetails"
        },
        {
          "name": "fields[buildIcons]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type buildIcons"
        },
        {
          "name": "fields[perfPowerMetrics]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type perfPowerMetrics"
        },
        {
          "name": "fields[preReleaseVersions]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type preReleaseVersions"
        },
        {
          "name": "fields[appStoreVersions]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type appStoreVersions"
        },
        {
          "name": "fields[diagnosticSignatures]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type diagnosticSignatures"
        },
        {
          "name": "fields[betaTesters]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaTesters"
        },
        {
          "name": "fields[betaBuildLocalizations]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type betaBuildLocalizations"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit[betaBuildLocalizations]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related betaBuildLocalizations returned (when they are included)"
        },
        {
          "name": "limit[icons]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related icons returned (when they are included)"
        },
        {
          "name": "limit[individualTesters]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related individualTesters returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/builds/{id}",
      "method": "buildsUpdateInstance",
      "httpMethod": "patch",
      "tag": "Builds",
      "typeScriptTag": "builds",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/builds/{id}/app",
      "method": "buildsAppGetToOneRelated",
      "httpMethod": "get",
      "tag": "Builds",
      "typeScriptTag": "builds",
      "description": "",
      "parameters": [
        {
          "name": "fields[apps]",
          "schema": "array",
          "description": "the fields to include for returned resources of type apps"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/builds/{id}/appEncryptionDeclaration",
      "method": "buildsAppEncryptionDeclarationGetToOneRelated",
      "httpMethod": "get",
      "tag": "Builds",
      "typeScriptTag": "builds",
      "description": "",
      "parameters": [
        {
          "name": "fields[appEncryptionDeclarations]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appEncryptionDeclarations"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/builds/{id}/appStoreVersion",
      "method": "buildsAppStoreVersionGetToOneRelated",
      "httpMethod": "get",
      "tag": "Builds",
      "typeScriptTag": "builds",
      "description": "",
      "parameters": [
        {
          "name": "fields[appStoreVersions]",
          "schema": "array",
          "description": "the fields to include for returned resources of type appStoreVersions"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/builds/{id}/betaAppReviewSubmission",
      "method": "buildsBetaAppReviewSubmissionGetToOneRelated",
      "httpMethod": "get",
      "tag": "Builds",
      "typeScriptTag": "builds",
      "description": "",
      "parameters": [
        {
          "name": "fields[betaAppReviewSubmissions]",
          "schema": "array",
          "description": "the fields to include for returned resources of type betaAppReviewSubmissions"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/builds/{id}/betaBuildLocalizations",
      "method": "buildsBetaBuildLocalizationsGetToManyRelated",
      "httpMethod": "get",
      "tag": "Builds",
      "typeScriptTag": "builds",
      "description": "",
      "parameters": [
        {
          "name": "fields[betaBuildLocalizations]",
          "schema": "array",
          "description": "the fields to include for returned resources of type betaBuildLocalizations"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/builds/{id}/buildBetaDetail",
      "method": "buildsBuildBetaDetailGetToOneRelated",
      "httpMethod": "get",
      "tag": "Builds",
      "typeScriptTag": "builds",
      "description": "",
      "parameters": [
        {
          "name": "fields[buildBetaDetails]",
          "schema": "array",
          "description": "the fields to include for returned resources of type buildBetaDetails"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/builds/{id}/diagnosticSignatures",
      "method": "buildsDiagnosticSignaturesGetToManyRelated",
      "httpMethod": "get",
      "tag": "Builds",
      "typeScriptTag": "builds",
      "description": "",
      "parameters": [
        {
          "name": "filter[diagnosticType]",
          "schema": "array",
          "description": "filter by attribute 'diagnosticType'"
        },
        {
          "name": "fields[diagnosticSignatures]",
          "schema": "array",
          "description": "the fields to include for returned resources of type diagnosticSignatures"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/builds/{id}/icons",
      "method": "buildsIconsGetToManyRelated",
      "httpMethod": "get",
      "tag": "Builds",
      "typeScriptTag": "builds",
      "description": "",
      "parameters": [
        {
          "name": "fields[buildIcons]",
          "schema": "array",
          "description": "the fields to include for returned resources of type buildIcons"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/builds/{id}/individualTesters",
      "method": "buildsIndividualTestersGetToManyRelated",
      "httpMethod": "get",
      "tag": "Builds",
      "typeScriptTag": "builds",
      "description": "",
      "parameters": [
        {
          "name": "fields[betaTesters]",
          "schema": "array",
          "description": "the fields to include for returned resources of type betaTesters"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/builds/{id}/perfPowerMetrics",
      "method": "buildsPerfPowerMetricsGetToManyRelated",
      "httpMethod": "get",
      "tag": "Builds",
      "typeScriptTag": "builds",
      "description": "",
      "parameters": [
        {
          "name": "filter[deviceType]",
          "schema": "array",
          "description": "filter by attribute 'deviceType'"
        },
        {
          "name": "filter[metricType]",
          "schema": "array",
          "description": "filter by attribute 'metricType'"
        },
        {
          "name": "filter[platform]",
          "schema": "array",
          "description": "filter by attribute 'platform'"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/builds/{id}/preReleaseVersion",
      "method": "buildsPreReleaseVersionGetToOneRelated",
      "httpMethod": "get",
      "tag": "Builds",
      "typeScriptTag": "builds",
      "description": "",
      "parameters": [
        {
          "name": "fields[preReleaseVersions]",
          "schema": "array",
          "description": "the fields to include for returned resources of type preReleaseVersions"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/builds/{id}/relationships/appEncryptionDeclaration",
      "method": "buildsAppEncryptionDeclarationGetToOneRelationship",
      "httpMethod": "get",
      "tag": "Builds",
      "typeScriptTag": "builds",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/builds/{id}/relationships/appEncryptionDeclaration",
      "method": "buildsAppEncryptionDeclarationUpdateToOneRelationship",
      "httpMethod": "patch",
      "tag": "Builds",
      "typeScriptTag": "builds",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/builds/{id}/relationships/betaGroups",
      "method": "buildsBetaGroupsDeleteToManyRelationship",
      "httpMethod": "delete",
      "tag": "Builds",
      "typeScriptTag": "builds",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/builds/{id}/relationships/betaGroups",
      "method": "buildsBetaGroupsCreateToManyRelationship",
      "httpMethod": "post",
      "tag": "Builds",
      "typeScriptTag": "builds",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/builds/{id}/relationships/individualTesters",
      "method": "buildsIndividualTestersDeleteToManyRelationship",
      "httpMethod": "delete",
      "tag": "Builds",
      "typeScriptTag": "builds",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/builds/{id}/relationships/individualTesters",
      "method": "buildsIndividualTestersGetToManyRelationship",
      "httpMethod": "get",
      "tag": "Builds",
      "typeScriptTag": "builds",
      "description": "",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/builds/{id}/relationships/individualTesters",
      "method": "buildsIndividualTestersCreateToManyRelationship",
      "httpMethod": "post",
      "tag": "Builds",
      "typeScriptTag": "builds",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/bundleIdCapabilities",
      "method": "bundleIdCapabilitiesCreateInstance",
      "httpMethod": "post",
      "tag": "BundleIdCapabilities",
      "typeScriptTag": "bundleIdCapabilities",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/bundleIdCapabilities/{id}",
      "method": "bundleIdCapabilitiesDeleteInstance",
      "httpMethod": "delete",
      "tag": "BundleIdCapabilities",
      "typeScriptTag": "bundleIdCapabilities",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/bundleIdCapabilities/{id}",
      "method": "bundleIdCapabilitiesUpdateInstance",
      "httpMethod": "patch",
      "tag": "BundleIdCapabilities",
      "typeScriptTag": "bundleIdCapabilities",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/bundleIds",
      "method": "bundleIdsGetCollection",
      "httpMethod": "get",
      "tag": "BundleIds",
      "typeScriptTag": "bundleIds",
      "description": "",
      "parameters": [
        {
          "name": "filter[identifier]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'identifier'"
        },
        {
          "name": "filter[name]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'name'"
        },
        {
          "name": "filter[platform]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'platform'"
        },
        {
          "name": "filter[seedId]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'seedId'"
        },
        {
          "name": "filter[id]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s)"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of sort expressions; resources will be sorted as specified"
        },
        {
          "name": "fields[bundleIds]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type bundleIds"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[bundleIdCapabilities]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type bundleIdCapabilities"
        },
        {
          "name": "fields[profiles]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type profiles"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit[bundleIdCapabilities]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related bundleIdCapabilities returned (when they are included)"
        },
        {
          "name": "limit[profiles]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related profiles returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/bundleIds",
      "method": "bundleIdsCreateInstance",
      "httpMethod": "post",
      "tag": "BundleIds",
      "typeScriptTag": "bundleIds",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/bundleIds/{id}",
      "method": "bundleIdsDeleteInstance",
      "httpMethod": "delete",
      "tag": "BundleIds",
      "typeScriptTag": "bundleIds",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/bundleIds/{id}",
      "method": "bundleIdsGetInstance",
      "httpMethod": "get",
      "tag": "BundleIds",
      "typeScriptTag": "bundleIds",
      "description": "",
      "parameters": [
        {
          "name": "fields[bundleIds]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type bundleIds"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[bundleIdCapabilities]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type bundleIdCapabilities"
        },
        {
          "name": "fields[profiles]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type profiles"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit[bundleIdCapabilities]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related bundleIdCapabilities returned (when they are included)"
        },
        {
          "name": "limit[profiles]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related profiles returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/bundleIds/{id}",
      "method": "bundleIdsUpdateInstance",
      "httpMethod": "patch",
      "tag": "BundleIds",
      "typeScriptTag": "bundleIds",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/bundleIds/{id}/app",
      "method": "bundleIdsAppGetToOneRelated",
      "httpMethod": "get",
      "tag": "BundleIds",
      "typeScriptTag": "bundleIds",
      "description": "",
      "parameters": [
        {
          "name": "fields[apps]",
          "schema": "array",
          "description": "the fields to include for returned resources of type apps"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/bundleIds/{id}/bundleIdCapabilities",
      "method": "bundleIdsBundleIdCapabilitiesGetToManyRelated",
      "httpMethod": "get",
      "tag": "BundleIds",
      "typeScriptTag": "bundleIds",
      "description": "",
      "parameters": [
        {
          "name": "fields[bundleIdCapabilities]",
          "schema": "array",
          "description": "the fields to include for returned resources of type bundleIdCapabilities"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/bundleIds/{id}/profiles",
      "method": "bundleIdsProfilesGetToManyRelated",
      "httpMethod": "get",
      "tag": "BundleIds",
      "typeScriptTag": "bundleIds",
      "description": "",
      "parameters": [
        {
          "name": "fields[profiles]",
          "schema": "array",
          "description": "the fields to include for returned resources of type profiles"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/certificates",
      "method": "certificatesGetCollection",
      "httpMethod": "get",
      "tag": "Certificates",
      "typeScriptTag": "certificates",
      "description": "",
      "parameters": [
        {
          "name": "filter[certificateType]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'certificateType'"
        },
        {
          "name": "filter[displayName]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'displayName'"
        },
        {
          "name": "filter[serialNumber]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'serialNumber'"
        },
        {
          "name": "filter[id]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s)"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of sort expressions; resources will be sorted as specified"
        },
        {
          "name": "fields[certificates]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type certificates"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/certificates",
      "method": "certificatesCreateInstance",
      "httpMethod": "post",
      "tag": "Certificates",
      "typeScriptTag": "certificates",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/certificates/{id}",
      "method": "certificatesDeleteInstance",
      "httpMethod": "delete",
      "tag": "Certificates",
      "typeScriptTag": "certificates",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/certificates/{id}",
      "method": "certificatesGetInstance",
      "httpMethod": "get",
      "tag": "Certificates",
      "typeScriptTag": "certificates",
      "description": "",
      "parameters": [
        {
          "name": "fields[certificates]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type certificates"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/devices",
      "method": "devicesGetCollection",
      "httpMethod": "get",
      "tag": "Devices",
      "typeScriptTag": "devices",
      "description": "",
      "parameters": [
        {
          "name": "filter[name]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'name'"
        },
        {
          "name": "filter[platform]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'platform'"
        },
        {
          "name": "filter[status]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'status'"
        },
        {
          "name": "filter[udid]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'udid'"
        },
        {
          "name": "filter[id]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s)"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of sort expressions; resources will be sorted as specified"
        },
        {
          "name": "fields[devices]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type devices"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/devices",
      "method": "devicesCreateInstance",
      "httpMethod": "post",
      "tag": "Devices",
      "typeScriptTag": "devices",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/devices/{id}",
      "method": "devicesGetInstance",
      "httpMethod": "get",
      "tag": "Devices",
      "typeScriptTag": "devices",
      "description": "",
      "parameters": [
        {
          "name": "fields[devices]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type devices"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/devices/{id}",
      "method": "devicesUpdateInstance",
      "httpMethod": "patch",
      "tag": "Devices",
      "typeScriptTag": "devices",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/diagnosticSignatures/{id}/logs",
      "method": "diagnosticSignaturesLogsGetToManyRelated",
      "httpMethod": "get",
      "tag": "DiagnosticSignatures",
      "typeScriptTag": "diagnosticSignatures",
      "description": "",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/endUserLicenseAgreements",
      "method": "endUserLicenseAgreementsCreateInstance",
      "httpMethod": "post",
      "tag": "EndUserLicenseAgreements",
      "typeScriptTag": "endUserLicenseAgreements",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/endUserLicenseAgreements/{id}",
      "method": "endUserLicenseAgreementsDeleteInstance",
      "httpMethod": "delete",
      "tag": "EndUserLicenseAgreements",
      "typeScriptTag": "endUserLicenseAgreements",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/endUserLicenseAgreements/{id}",
      "method": "endUserLicenseAgreementsGetInstance",
      "httpMethod": "get",
      "tag": "EndUserLicenseAgreements",
      "typeScriptTag": "endUserLicenseAgreements",
      "description": "",
      "parameters": [
        {
          "name": "fields[endUserLicenseAgreements]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type endUserLicenseAgreements"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[territories]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type territories"
        },
        {
          "name": "limit[territories]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related territories returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/endUserLicenseAgreements/{id}",
      "method": "endUserLicenseAgreementsUpdateInstance",
      "httpMethod": "patch",
      "tag": "EndUserLicenseAgreements",
      "typeScriptTag": "endUserLicenseAgreements",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/endUserLicenseAgreements/{id}/territories",
      "method": "endUserLicenseAgreementsTerritoriesGetToManyRelated",
      "httpMethod": "get",
      "tag": "EndUserLicenseAgreements",
      "typeScriptTag": "endUserLicenseAgreements",
      "description": "",
      "parameters": [
        {
          "name": "fields[territories]",
          "schema": "array",
          "description": "the fields to include for returned resources of type territories"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/financeReports",
      "method": "financeReportsGetCollection",
      "httpMethod": "get",
      "tag": "FinanceReports",
      "typeScriptTag": "financeReports",
      "description": "",
      "parameters": [
        {
          "name": "filter[regionCode]",
          "schema": "array",
          "required": true,
          "description": "filter by attribute 'regionCode'"
        },
        {
          "name": "filter[reportDate]",
          "schema": "array",
          "required": true,
          "description": "filter by attribute 'reportDate'"
        },
        {
          "name": "filter[reportType]",
          "schema": "array",
          "required": true,
          "description": "filter by attribute 'reportType'"
        },
        {
          "name": "filter[vendorNumber]",
          "schema": "array",
          "required": true,
          "description": "filter by attribute 'vendorNumber'"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/gameCenterEnabledVersions/{id}/compatibleVersions",
      "method": "gameCenterEnabledVersionsCompatibleVersionsGetToManyRelated",
      "httpMethod": "get",
      "tag": "GameCenterEnabledVersions",
      "typeScriptTag": "gameCenterEnabledVersions",
      "description": "",
      "parameters": [
        {
          "name": "filter[platform]",
          "schema": "array",
          "description": "filter by attribute 'platform'"
        },
        {
          "name": "filter[versionString]",
          "schema": "array",
          "description": "filter by attribute 'versionString'"
        },
        {
          "name": "filter[app]",
          "schema": "array",
          "description": "filter by id(s) of related 'app'"
        },
        {
          "name": "filter[id]",
          "schema": "array",
          "description": "filter by id(s)"
        },
        {
          "name": "sort",
          "schema": "array",
          "description": "comma-separated list of sort expressions; resources will be sorted as specified"
        },
        {
          "name": "fields[gameCenterEnabledVersions]",
          "schema": "array",
          "description": "the fields to include for returned resources of type gameCenterEnabledVersions"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "description": "comma-separated list of relationships to include"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions",
      "method": "gameCenterEnabledVersionsCompatibleVersionsDeleteToManyRelationship",
      "httpMethod": "delete",
      "tag": "GameCenterEnabledVersions",
      "typeScriptTag": "gameCenterEnabledVersions",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions",
      "method": "gameCenterEnabledVersionsCompatibleVersionsGetToManyRelationship",
      "httpMethod": "get",
      "tag": "GameCenterEnabledVersions",
      "typeScriptTag": "gameCenterEnabledVersions",
      "description": "",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions",
      "method": "gameCenterEnabledVersionsCompatibleVersionsReplaceToManyRelationship",
      "httpMethod": "patch",
      "tag": "GameCenterEnabledVersions",
      "typeScriptTag": "gameCenterEnabledVersions",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions",
      "method": "gameCenterEnabledVersionsCompatibleVersionsCreateToManyRelationship",
      "httpMethod": "post",
      "tag": "GameCenterEnabledVersions",
      "typeScriptTag": "gameCenterEnabledVersions",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/idfaDeclarations",
      "method": "idfaDeclarationsCreateInstance",
      "httpMethod": "post",
      "tag": "IdfaDeclarations",
      "typeScriptTag": "idfaDeclarations",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/idfaDeclarations/{id}",
      "method": "idfaDeclarationsDeleteInstance",
      "httpMethod": "delete",
      "tag": "IdfaDeclarations",
      "typeScriptTag": "idfaDeclarations",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/idfaDeclarations/{id}",
      "method": "idfaDeclarationsUpdateInstance",
      "httpMethod": "patch",
      "tag": "IdfaDeclarations",
      "typeScriptTag": "idfaDeclarations",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/inAppPurchases/{id}",
      "method": "inAppPurchasesGetInstance",
      "httpMethod": "get",
      "tag": "InAppPurchases",
      "typeScriptTag": "inAppPurchases",
      "description": "",
      "parameters": [
        {
          "name": "fields[inAppPurchases]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type inAppPurchases"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "limit[apps]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related apps returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/preReleaseVersions",
      "method": "preReleaseVersionsGetCollection",
      "httpMethod": "get",
      "tag": "PreReleaseVersions",
      "typeScriptTag": "preReleaseVersions",
      "description": "",
      "parameters": [
        {
          "name": "filter[buildsExpired]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'builds.expired'"
        },
        {
          "name": "filter[buildsProcessingState]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'builds.processingState'"
        },
        {
          "name": "filter[platform]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'platform'"
        },
        {
          "name": "filter[version]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'version'"
        },
        {
          "name": "filter[app]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'app'"
        },
        {
          "name": "filter[builds]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'builds'"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of sort expressions; resources will be sorted as specified"
        },
        {
          "name": "fields[preReleaseVersions]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type preReleaseVersions"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[builds]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type builds"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit[builds]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related builds returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/preReleaseVersions/{id}",
      "method": "preReleaseVersionsGetInstance",
      "httpMethod": "get",
      "tag": "PreReleaseVersions",
      "typeScriptTag": "preReleaseVersions",
      "description": "",
      "parameters": [
        {
          "name": "fields[preReleaseVersions]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type preReleaseVersions"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[builds]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type builds"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit[builds]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related builds returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/preReleaseVersions/{id}/app",
      "method": "preReleaseVersionsAppGetToOneRelated",
      "httpMethod": "get",
      "tag": "PreReleaseVersions",
      "typeScriptTag": "preReleaseVersions",
      "description": "",
      "parameters": [
        {
          "name": "fields[apps]",
          "schema": "array",
          "description": "the fields to include for returned resources of type apps"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/preReleaseVersions/{id}/builds",
      "method": "preReleaseVersionsBuildsGetToManyRelated",
      "httpMethod": "get",
      "tag": "PreReleaseVersions",
      "typeScriptTag": "preReleaseVersions",
      "description": "",
      "parameters": [
        {
          "name": "fields[builds]",
          "schema": "array",
          "description": "the fields to include for returned resources of type builds"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/profiles",
      "method": "profilesGetCollection",
      "httpMethod": "get",
      "tag": "Profiles",
      "typeScriptTag": "profiles",
      "description": "",
      "parameters": [
        {
          "name": "filter[name]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'name'"
        },
        {
          "name": "filter[profileState]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'profileState'"
        },
        {
          "name": "filter[profileType]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'profileType'"
        },
        {
          "name": "filter[id]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s)"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of sort expressions; resources will be sorted as specified"
        },
        {
          "name": "fields[profiles]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type profiles"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[certificates]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type certificates"
        },
        {
          "name": "fields[devices]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type devices"
        },
        {
          "name": "fields[bundleIds]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type bundleIds"
        },
        {
          "name": "limit[certificates]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related certificates returned (when they are included)"
        },
        {
          "name": "limit[devices]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related devices returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/profiles",
      "method": "profilesCreateInstance",
      "httpMethod": "post",
      "tag": "Profiles",
      "typeScriptTag": "profiles",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/profiles/{id}",
      "method": "profilesDeleteInstance",
      "httpMethod": "delete",
      "tag": "Profiles",
      "typeScriptTag": "profiles",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/profiles/{id}",
      "method": "profilesGetInstance",
      "httpMethod": "get",
      "tag": "Profiles",
      "typeScriptTag": "profiles",
      "description": "",
      "parameters": [
        {
          "name": "fields[profiles]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type profiles"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[certificates]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type certificates"
        },
        {
          "name": "fields[devices]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type devices"
        },
        {
          "name": "fields[bundleIds]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type bundleIds"
        },
        {
          "name": "limit[certificates]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related certificates returned (when they are included)"
        },
        {
          "name": "limit[devices]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related devices returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/profiles/{id}/bundleId",
      "method": "profilesBundleIdGetToOneRelated",
      "httpMethod": "get",
      "tag": "Profiles",
      "typeScriptTag": "profiles",
      "description": "",
      "parameters": [
        {
          "name": "fields[bundleIds]",
          "schema": "array",
          "description": "the fields to include for returned resources of type bundleIds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/profiles/{id}/certificates",
      "method": "profilesCertificatesGetToManyRelated",
      "httpMethod": "get",
      "tag": "Profiles",
      "typeScriptTag": "profiles",
      "description": "",
      "parameters": [
        {
          "name": "fields[certificates]",
          "schema": "array",
          "description": "the fields to include for returned resources of type certificates"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/profiles/{id}/devices",
      "method": "profilesDevicesGetToManyRelated",
      "httpMethod": "get",
      "tag": "Profiles",
      "typeScriptTag": "profiles",
      "description": "",
      "parameters": [
        {
          "name": "fields[devices]",
          "schema": "array",
          "description": "the fields to include for returned resources of type devices"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/routingAppCoverages",
      "method": "routingAppCoveragesCreateInstance",
      "httpMethod": "post",
      "tag": "RoutingAppCoverages",
      "typeScriptTag": "routingAppCoverages",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/routingAppCoverages/{id}",
      "method": "routingAppCoveragesDeleteInstance",
      "httpMethod": "delete",
      "tag": "RoutingAppCoverages",
      "typeScriptTag": "routingAppCoverages",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/routingAppCoverages/{id}",
      "method": "routingAppCoveragesGetInstance",
      "httpMethod": "get",
      "tag": "RoutingAppCoverages",
      "typeScriptTag": "routingAppCoverages",
      "description": "",
      "parameters": [
        {
          "name": "fields[routingAppCoverages]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type routingAppCoverages"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/routingAppCoverages/{id}",
      "method": "routingAppCoveragesUpdateInstance",
      "httpMethod": "patch",
      "tag": "RoutingAppCoverages",
      "typeScriptTag": "routingAppCoverages",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/salesReports",
      "method": "salesReportsGetCollection",
      "httpMethod": "get",
      "tag": "SalesReports",
      "typeScriptTag": "salesReports",
      "description": "",
      "parameters": [
        {
          "name": "filter[frequency]",
          "schema": "array",
          "required": true,
          "description": "filter by attribute 'frequency'"
        },
        {
          "name": "filter[reportDate]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'reportDate'"
        },
        {
          "name": "filter[reportSubType]",
          "schema": "array",
          "required": true,
          "description": "filter by attribute 'reportSubType'"
        },
        {
          "name": "filter[reportType]",
          "schema": "array",
          "required": true,
          "description": "filter by attribute 'reportType'"
        },
        {
          "name": "filter[vendorNumber]",
          "schema": "array",
          "required": true,
          "description": "filter by attribute 'vendorNumber'"
        },
        {
          "name": "filter[version]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'version'"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/territories",
      "method": "territoriesGetCollection",
      "httpMethod": "get",
      "tag": "Territories",
      "typeScriptTag": "territories",
      "description": "",
      "parameters": [
        {
          "name": "fields[territories]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type territories"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/userInvitations",
      "method": "userInvitationsGetCollection",
      "httpMethod": "get",
      "tag": "UserInvitations",
      "typeScriptTag": "userInvitations",
      "description": "",
      "parameters": [
        {
          "name": "filter[email]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'email'"
        },
        {
          "name": "filter[roles]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'roles'"
        },
        {
          "name": "filter[visibleApps]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'visibleApps'"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of sort expressions; resources will be sorted as specified"
        },
        {
          "name": "fields[userInvitations]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type userInvitations"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit[visibleApps]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related visibleApps returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/userInvitations",
      "method": "userInvitationsCreateInstance",
      "httpMethod": "post",
      "tag": "UserInvitations",
      "typeScriptTag": "userInvitations",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/userInvitations/{id}",
      "method": "userInvitationsDeleteInstance",
      "httpMethod": "delete",
      "tag": "UserInvitations",
      "typeScriptTag": "userInvitations",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/userInvitations/{id}",
      "method": "userInvitationsGetInstance",
      "httpMethod": "get",
      "tag": "UserInvitations",
      "typeScriptTag": "userInvitations",
      "description": "",
      "parameters": [
        {
          "name": "fields[userInvitations]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type userInvitations"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit[visibleApps]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related visibleApps returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/userInvitations/{id}/visibleApps",
      "method": "userInvitationsVisibleAppsGetToManyRelated",
      "httpMethod": "get",
      "tag": "UserInvitations",
      "typeScriptTag": "userInvitations",
      "description": "",
      "parameters": [
        {
          "name": "fields[apps]",
          "schema": "array",
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/users",
      "method": "usersGetCollection",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "",
      "parameters": [
        {
          "name": "filter[roles]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'roles'"
        },
        {
          "name": "filter[username]",
          "schema": "array",
          "required": false,
          "description": "filter by attribute 'username'"
        },
        {
          "name": "filter[visibleApps]",
          "schema": "array",
          "required": false,
          "description": "filter by id(s) of related 'visibleApps'"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of sort expressions; resources will be sorted as specified"
        },
        {
          "name": "fields[users]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type users"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit[visibleApps]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related visibleApps returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/users/{id}",
      "method": "usersDeleteInstance",
      "httpMethod": "delete",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/users/{id}",
      "method": "usersGetInstance",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "",
      "parameters": [
        {
          "name": "fields[users]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type users"
        },
        {
          "name": "include",
          "schema": "array",
          "required": false,
          "description": "comma-separated list of relationships to include"
        },
        {
          "name": "fields[apps]",
          "schema": "array",
          "required": false,
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit[visibleApps]",
          "schema": "integer",
          "required": false,
          "description": "maximum number of related visibleApps returned (when they are included)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/users/{id}",
      "method": "usersUpdateInstance",
      "httpMethod": "patch",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/users/{id}/relationships/visibleApps",
      "method": "usersVisibleAppsDeleteToManyRelationship",
      "httpMethod": "delete",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/users/{id}/relationships/visibleApps",
      "method": "usersVisibleAppsGetToManyRelationship",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/users/{id}/relationships/visibleApps",
      "method": "usersVisibleAppsReplaceToManyRelationship",
      "httpMethod": "patch",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/users/{id}/relationships/visibleApps",
      "method": "usersVisibleAppsCreateToManyRelationship",
      "httpMethod": "post",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "",
      "parameters": [
        {
          "name": "data",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/users/{id}/visibleApps",
      "method": "usersVisibleAppsGetToManyRelated",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "",
      "parameters": [
        {
          "name": "fields[apps]",
          "schema": "array",
          "description": "the fields to include for returned resources of type apps"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum resources per page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.appstoreconnect.apple.com/",
  "apiTitle": "App Store Connect API",
  "endpoints": 175,
  "sdkMethods": 385,
  "schemas": 243,
  "parameters": 689,
  "difficultyScore": 678.75,
  "difficulty": "Very Hard"
}