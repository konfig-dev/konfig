{
  "providerName": "authentiq.io",
  "openApiRaw": "https://raw.githubusercontent.com/AuthentiqID/authentiq-docs/master/docs/swagger/provider.yaml",
  "securitySchemes": {
    "client_registration_token": {
      "description": "Client management via registration token.",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    },
    "client_secret": {
      "description": "Session management by confidential clients.",
      "flows": {
        "password": {
          "scopes": {
            "clients": "Enable client management"
          },
          "tokenUrl": "https://connect.authentiq.io/token"
        }
      },
      "type": "oauth2"
    },
    "oauth_code": {
      "description": "End-user authentication.",
      "flows": {
        "authorizationCode": {
          "authorizationUrl": "https://connect.authentiq.io/authorize",
          "scopes": {
            "address": "The user's postal address",
            "aq:location": "The user's current location",
            "aq:name": "The user's full name",
            "aq:push": "Enable *One click sign-in*",
            "email": "The user's email address",
            "oidc": "Enable OIDC flow",
            "phone": "The user's phone number"
          },
          "tokenUrl": "https://connect.authentiq.io/token"
        }
      },
      "type": "oauth2"
    },
    "oauth_implicit": {
      "description": "End-user authentication.",
      "flows": {
        "implicit": {
          "authorizationUrl": "https://connect.authentiq.io/authorize",
          "scopes": {
            "address": "The user's postal address",
            "aq:location": "The user's current location",
            "aq:name": "The user's full name",
            "aq:push": "Enable *One click sign-in*",
            "email": "The user's email address",
            "oidc": "Enable OIDC flow",
            "phone": "The user's phone number"
          }
        }
      },
      "type": "oauth2"
    },
    "user_jwt": {
      "description": "Session management by Authentiq ID.",
      "flows": {
        "clientCredentials": {
          "scopes": {
            "session": "Enable session management"
          },
          "tokenUrl": "https://connect.authentiq.io/token"
        }
      },
      "type": "oauth2"
    }
  },
  "homepage": "authentiq.io",
  "apiVersion": "1.0",
  "methods": [
    {
      "url": "/authorize",
      "method": "authorize",
      "httpMethod": "get",
      "tag": "Authentication",
      "description": "Authenticate a user",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": "A client ID obtained from the [Dashboard](https://dashboard.authentiq.com/).\n"
        },
        {
          "name": "responseType",
          "schema": "string",
          "required": true,
          "description": "The OIDC response type to use for this authentication flow. Valid choices are `code`, `id_token`, `token`, `token id_token`, `code id_token` `code token` and `code token id_token`, but a client can be configured with a more restricted set.\n"
        },
        {
          "name": "scope",
          "schema": "string",
          "required": true,
          "description": "The space-separated identity claims to request from the end-user. Always include `openid` as a scope for compatibility with OIDC.\n"
        },
        {
          "name": "redirectUri",
          "schema": "string",
          "required": true,
          "description": "The location to redirect to after (un)successful authentication. See OIDC for the parameters passed in the query string (`response_mode=query`) or as fragments (`response_mode=fragment`). Unless the client is in test-mode this must be one of the registered redirect URLs.\n"
        },
        {
          "name": "state",
          "schema": "string",
          "required": true,
          "description": "An opaque string that will be passed back to the redirect URL and therefore can be used to communicate client side state and prevent CSRF attacks.\n"
        },
        {
          "name": "responseMode",
          "schema": "string",
          "required": false,
          "description": "Whether to append parameters to the redirect URL in the query string (`query`) or as fragments (`fragment`). This option usually has a sensible default for each of the response types.\n"
        },
        {
          "name": "nonce",
          "schema": "string",
          "required": false,
          "description": "An nonce provided by the client (and opaque to Authentiq Connect) that will be included in any ID Token generated for this session. Clients should use the nonce to mitigate replay attacks.\n"
        },
        {
          "name": "display",
          "schema": "string",
          "required": false,
          "description": "The authentication display mode, which can be one of `page`, `popup` or `modal`. Defaults to `page`.\n"
        },
        {
          "name": "prompt",
          "schema": "string",
          "required": false,
          "description": "Space-delimited, case sensitive list of ASCII string values that specifies whether the Authorization Server prompts the End-User for reauthentication and consent. The supported values are: `none`, `login`, `consent`. If `consent` the end-user is asked to (re)confirm what claims they share. Use `none` to check for an active session.\n"
        },
        {
          "name": "maxAge",
          "schema": "integer",
          "required": false,
          "description": "Specifies the allowable elapsed time in seconds since the last time the end-user was actively authenticated.\n"
        },
        {
          "name": "uiLocales",
          "schema": "string",
          "required": false,
          "description": "Specifies the preferred language to use on the authorization page, as a space-separated list of BCP47 language tags. Ignored at the moment.\n"
        }
      ],
      "responses": []
    },
    {
      "url": "/client",
      "method": "client",
      "httpMethod": "get",
      "tag": "Client Management",
      "description": "List clients",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Error Response defined as in Section 5.2 of OAuth 2.0 [RFC6749].\n"
        }
      ]
    },
    {
      "url": "/client",
      "method": "createClient",
      "httpMethod": "post",
      "tag": "Client Management",
      "description": "Register a client",
      "parameters": [
        {
          "name": "application_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "client_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "client_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "client_uri",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "contacts",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "default_max_age",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "default_scopes",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "grant_types",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "logo_uri",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "policy_uri",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "redirect_uris",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "response_types",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "tos_uri",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "HTTP Problem Detail\n"
        }
      ]
    },
    {
      "url": "/client/{client_id}",
      "method": "clientClientId",
      "httpMethod": "delete",
      "tag": "Client Management",
      "description": "Delete a client",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": "Client identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "HTTP Problem Detail\n"
        }
      ]
    },
    {
      "url": "/client/{client_id}",
      "method": "getClient",
      "httpMethod": "get",
      "tag": "Client Management",
      "description": "View a client",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": "Client identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Client object"
        },
        {
          "statusCode": "default",
          "description": "Error Response defined as in Section 5.2 of OAuth 2.0 [RFC6749].\n"
        }
      ]
    },
    {
      "url": "/client/{client_id}",
      "method": "updateClient",
      "httpMethod": "put",
      "tag": "Client Management",
      "description": "Update a client",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": "Client identifier"
        },
        {
          "name": "application_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "client_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "client_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "client_uri",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "contacts",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "default_max_age",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "default_scopes",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "grant_types",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "logo_uri",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "policy_uri",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "redirect_uris",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "response_types",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "tos_uri",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Client object"
        },
        {
          "statusCode": "default",
          "description": "HTTP Problem Detail\n"
        }
      ]
    },
    {
      "url": "/token",
      "method": "token",
      "httpMethod": "post",
      "tag": "Authentication",
      "description": "Obtain an ID Token",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": false,
          "description": "HTTP Basic authorization header.\n"
        },
        {
          "name": "client_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "client_secret",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "grant_type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "redirect_uri",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Successful token response\n"
        },
        {
          "statusCode": "400",
          "description": "Error Response defined as in Section 5.2 of OAuth 2.0 [RFC6749].\n"
        },
        {
          "statusCode": "401",
          "description": "Error Response defined as in Section 5.2 of OAuth 2.0 [RFC6749].\n"
        }
      ]
    },
    {
      "url": "/userinfo",
      "method": "userInfo",
      "httpMethod": "get",
      "tag": "Authentication",
      "description": "Retrieve a user profile",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "OIDC UserInfo structure"
        },
        {
          "statusCode": "401",
          "description": "Error Response defined as in Section 5.2 of OAuth 2.0 [RFC6749].\n"
        },
        {
          "statusCode": "default",
          "description": "Error Response defined as in Section 5.2 of OAuth 2.0 [RFC6749].\n"
        }
      ]
    },
    {
      "url": "/{client_id}/iframe",
      "method": "authorizeIframe",
      "httpMethod": "get",
      "tag": "Session Management",
      "description": "Include a session iframe",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": "Client identifier"
        }
      ],
      "responses": []
    }
  ],
  "apiBaseUrl": "https://connect.authentiq.io",
  "apiDescription": "Authentiq Connect OAuth 2.0 and OpenID Connect API reference.\nLearn about [Authentiq ID](https://www.authentiq.com/) or check out the [Authentiq Connect](https://developers.authentiq.com) developer documentation.\n",
  "apiTitle": "Authentiq Connect API",
  "endpoints": 6,
  "sdkMethods": 9,
  "schemas": 7,
  "parameters": 47,
  "contactUrl": "https://www.authentiq.com/",
  "contactEmail": "hello@authentiq.com",
  "difficultyScore": 24.25,
  "difficulty": "Easy"
}