{
  "providerName": "telnyx.com",
  "openApiRaw": "https://raw.githubusercontent.com/team-telnyx/openapi/master/openapi/spec3.yml",
  "securitySchemes": {
    "BearerAuth": {
      "scheme": "bearer",
      "type": "http"
    },
    "bearerAuth": {
      "scheme": "bearer",
      "type": "http"
    }
  },
  "homepage": "telnyx.com",
  "apiVersion": "2.0.0",
  "methods": [
    {
      "url": "/actions/bulk/telephony_credentials",
      "method": "deleteBulkTelephonyCredential",
      "httpMethod": "delete",
      "tag": "Bulk Credentials",
      "description": "Delete several credentials",
      "parameters": [
        {
          "name": "filter[tag]",
          "schema": "string",
          "required": true,
          "description": "Filter by tag, required by bulk operations."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/actions/bulk/telephony_credentials",
      "method": "updateBulkTelephonyCredential",
      "httpMethod": "patch",
      "tag": "Bulk Credentials",
      "description": "Update several credentials",
      "parameters": [
        {
          "name": "filter[tag]",
          "schema": "string",
          "required": true,
          "description": "Filter by tag, required by bulk operations."
        },
        {
          "name": "amount",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "connection_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tag",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/actions/bulk/telephony_credentials",
      "method": "createBulkTelephonyCredential",
      "httpMethod": "post",
      "tag": "Bulk Credentials",
      "description": "Creates several credentials",
      "parameters": [
        {
          "name": "amount",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "connection_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tag",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/actions/network_preferences/sim_cards",
      "method": "bulkSimCardNetworkPreferences",
      "httpMethod": "put",
      "tag": "SIM Cards",
      "description": "Bulk Network Preferences for SIM cards",
      "parameters": [
        {
          "name": "mobile_operator_networks_preferences",
          "schema": "array",
          "description": ""
        },
        {
          "name": "sim_card_ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/actions/register/sim_cards",
      "method": "simCardRegister",
      "httpMethod": "post",
      "tag": "SIM Cards",
      "description": "Register SIM cards",
      "parameters": [
        {
          "name": "registration_codes",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "sim_card_group_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/actions/{action}/telephony_credentials",
      "method": "bulkCredentialAction",
      "httpMethod": "post",
      "tag": "Bulk Credentials",
      "description": "Perform activate or deactivate action on all credentials filtered by the provided tag.",
      "parameters": [
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": "Identifies the action to be taken. Activate will change the status to active. Deactivate will change the status to inactive."
        },
        {
          "name": "filter[tag]",
          "schema": "string",
          "required": true,
          "description": "Filter by tag, required by bulk operations."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/addresses",
      "method": "findAddresss",
      "httpMethod": "get",
      "tag": "Addresses",
      "description": "List all addresses",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[customerReference][eq]",
          "schema": "string",
          "required": false,
          "description": "Filter addresses via the customer reference set. Matching is not case-sensitive."
        },
        {
          "name": "filter[customerReference][contains]",
          "schema": "string",
          "required": false,
          "description": "If present, addresses with <code>customer_reference</code> containing the given value will be returned. Matching is not case-sensitive."
        },
        {
          "name": "filter[usedAsEmergency]",
          "schema": "string",
          "required": false,
          "description": "If set as 'true', only addresses used as the emergency address for at least one active phone-number will be returned. When set to 'false', the opposite happens: only addresses not used as the emergency address from phone-numbers will be returned."
        },
        {
          "name": "filter[streetAddress][contains]",
          "schema": "string",
          "required": false,
          "description": "If present, addresses with <code>street_address</code> containing the given value will be returned. Matching is not case-sensitive. Requires at least three characters."
        },
        {
          "name": "filter[addressBook][eq]",
          "schema": "string",
          "required": false,
          "description": "If present, only returns results with the <code>address_book</code> flag set to the given value."
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Specifies the sort order for results. By default sorting direction is ascending. To have the results sorted in descending order add the <code> -</code> prefix.<br/><br/>\nThat is: <ul>\n  <li>\n    <code>street_address</code>: sorts the result by the\n    <code>street_address</code> field in ascending order.\n  </li>\n\n  <li>\n    <code>-street_address</code>: sorts the result by the\n    <code>street_address</code> field in descending order.\n  </li>\n</ul> <br/> If not given, results are sorted by <code>created_at</code> in descending order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/addresses",
      "method": "createAddress",
      "httpMethod": "post",
      "tag": "Addresses",
      "description": "Creates an address",
      "parameters": [
        {
          "name": "address_book",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "administrative_area",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "borough",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "business_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "country_code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "customer_reference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "extended_address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "locality",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "neighborhood",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "phone_number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "postal_code",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "street_address",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "validate_address",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/addresses/actions/validate",
      "method": "validateAddress",
      "httpMethod": "post",
      "tag": "Addresses",
      "description": "Validate an address",
      "parameters": [
        {
          "name": "administrative_area",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "country_code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "extended_address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "locality",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "postal_code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "street_address",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/addresses/{id}",
      "method": "deleteAddress",
      "httpMethod": "delete",
      "tag": "Addresses",
      "description": "Deletes an address",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "address ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/addresses/{id}",
      "method": "getAddress",
      "httpMethod": "get",
      "tag": "Addresses",
      "description": "Retrieve an address",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "address ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/authentication_providers",
      "method": "findAuthenticationProviders",
      "httpMethod": "get",
      "tag": "Authentication Providers",
      "description": "List all SSO authentication providers",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Specifies the sort order for results. By default sorting direction is ascending. To have the results sorted in descending order add the <code> -</code> prefix.<br/><br/>\nThat is: <ul>\n  <li>\n    <code>name</code>: sorts the result by the\n    <code>name</code> field in ascending order.\n  </li>\n\n  <li>\n    <code>-name</code>: sorts the result by the\n    <code>name</code> field in descending order.\n  </li>\n</ul> <br/> If not given, results are sorted by <code>created_at</code> in descending order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/authentication_providers",
      "method": "createAuthenticationProvider",
      "httpMethod": "post",
      "tag": "Authentication Providers",
      "description": "Creates an authentication provider",
      "parameters": [
        {
          "name": "active",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "settings",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "settings_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "short_name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/authentication_providers/{id}",
      "method": "deleteAuthenticationProvider",
      "httpMethod": "delete",
      "tag": "Authentication Providers",
      "description": "Deletes an authentication provider",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "authentication provider ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/authentication_providers/{id}",
      "method": "getAuthenticationProvider",
      "httpMethod": "get",
      "tag": "Authentication Providers",
      "description": "Retrieve an authentication provider",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "authentication provider ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/authentication_providers/{id}",
      "method": "updateAuthenticationProvider",
      "httpMethod": "patch",
      "tag": "Authentication Providers",
      "description": "Update a authentication provider",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        },
        {
          "name": "active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "settings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "settings_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "short_name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/available_phone_number_blocks",
      "method": "listAvailablePhoneNumberBlocks",
      "httpMethod": "get",
      "tag": "Number Search",
      "description": "List available phone number blocks",
      "parameters": [
        {
          "name": "filter[phoneNumber][startsWith]",
          "schema": "string",
          "description": "Filter number blocks that start with a pattern (meant to be used after `national_destination_code` filter has been set)."
        },
        {
          "name": "filter[phoneNumber][endsWith]",
          "schema": "string",
          "description": "Filter numbers ending with a pattern."
        },
        {
          "name": "filter[phoneNumber][contains]",
          "schema": "string",
          "description": "Filter numbers containing a pattern."
        },
        {
          "name": "filter[locality]",
          "schema": "string",
          "description": "Filter phone numbers by city."
        },
        {
          "name": "filter[administrativeArea]",
          "schema": "string",
          "description": "Filter phone numbers by US state/CA province."
        },
        {
          "name": "filter[countryCode]",
          "schema": "string",
          "description": "Filter phone numbers by ISO alpha-2 country code."
        },
        {
          "name": "filter[nationalDestinationCode]",
          "schema": "string",
          "description": "Filter by the national destination code of the number. This filter is only applicable to North American numbers."
        },
        {
          "name": "filter[rateCenter]",
          "schema": "string",
          "description": "Filter phone numbers by NANP rate center. This filter is only applicable to North American numbers."
        },
        {
          "name": "filter[numberType]",
          "schema": "string",
          "description": "Filter phone numbers by number type."
        },
        {
          "name": "filter[features]",
          "schema": "array",
          "description": "Filter if the phone number should be used for voice, fax, mms, sms, emergency."
        },
        {
          "name": "filter[minimumBlockSize]",
          "schema": "integer",
          "description": "Filter number blocks by minimum blocks size"
        },
        {
          "name": "filter[limit]",
          "schema": "integer",
          "description": "Limits the number of results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/available_phone_numbers",
      "method": "listAvailablePhoneNumbers",
      "httpMethod": "get",
      "tag": "Number Search",
      "description": "List available phone numbers",
      "parameters": [
        {
          "name": "filter[phoneNumber][startsWith]",
          "schema": "string",
          "description": "Filter numbers starting with a pattern (meant to be used after `national_destination_code` filter has been set)."
        },
        {
          "name": "filter[phoneNumber][endsWith]",
          "schema": "string",
          "description": "Filter numbers ending with a pattern."
        },
        {
          "name": "filter[phoneNumber][contains]",
          "schema": "string",
          "description": "Filter numbers containing a pattern."
        },
        {
          "name": "filter[locality]",
          "schema": "string",
          "description": "Filter phone numbers by city."
        },
        {
          "name": "filter[administrativeArea]",
          "schema": "string",
          "description": "Filter phone numbers by US state/CA province."
        },
        {
          "name": "filter[countryCode]",
          "schema": "string",
          "description": "Filter phone numbers by ISO alpha-2 country code."
        },
        {
          "name": "filter[nationalDestinationCode]",
          "schema": "string",
          "description": "Filter by the national destination code of the number. This filter is only applicable to North American numbers."
        },
        {
          "name": "filter[rateCenter]",
          "schema": "string",
          "description": "Filter phone numbers by NANP rate center. This filter is only applicable to North American numbers."
        },
        {
          "name": "filter[numberType]",
          "schema": "string",
          "description": "Filter phone numbers by number type."
        },
        {
          "name": "filter[features]",
          "schema": "array",
          "description": "Filter if the phone number should be used for voice, fax, mms, sms, emergency."
        },
        {
          "name": "filter[limit]",
          "schema": "integer",
          "description": "Limits the number of results."
        },
        {
          "name": "filter[bestEffort]",
          "schema": "boolean",
          "description": "Filter to determine if best effort results should be included."
        },
        {
          "name": "filter[quickship]",
          "schema": "boolean",
          "description": "Filter to exclude phone numbers that need additional time after to purchase to receive phone calls."
        },
        {
          "name": "filter[reservable]",
          "schema": "boolean",
          "description": "Filter to exclude phone numbers that cannot be reserved before purchase."
        },
        {
          "name": "filter[excludeHeldNumbers]",
          "schema": "boolean",
          "description": "Filter to exclude phone numbers that are currently on hold for your account."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/balance",
      "method": "getUserBalance",
      "httpMethod": "get",
      "tag": "Billing",
      "description": "Retrieve user balance details",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/billing_groups",
      "method": "listBillingGroups",
      "httpMethod": "get",
      "tag": "Billing Groups",
      "description": "List all billing groups",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/billing_groups",
      "method": "createBillingGroup",
      "httpMethod": "post",
      "tag": "Billing Groups",
      "description": "Create a billing group",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/billing_groups/{id}",
      "method": "deleteBillingGroup",
      "httpMethod": "delete",
      "tag": "Billing Groups",
      "description": "Delete a billing group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the billing group"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/billing_groups/{id}",
      "method": "retrieveBillingGroup",
      "httpMethod": "get",
      "tag": "Billing Groups",
      "description": "Retrieve a billing group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the billing group"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/billing_groups/{id}",
      "method": "updateBillingGroup",
      "httpMethod": "patch",
      "tag": "Billing Groups",
      "description": "Update a billing group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the billing group"
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/call_control_applications",
      "method": "listCallControlApplications",
      "httpMethod": "get",
      "tag": "Call Control Applications",
      "description": "List call control applications",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[applicationName][contains]",
          "schema": "string",
          "description": "If present, applications with <code>application_name</code> containing the given value will be returned. Matching is not case-sensitive. Requires at least three characters."
        },
        {
          "name": "filter[outboundVoiceProfileId]",
          "schema": "string",
          "description": "Identifies the associated outbound voice profile."
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Specifies the sort order for results. By default sorting direction is ascending. To have the results sorted in descending order add the <code> -</code> prefix.<br/><br/>\nThat is: <ul>\n  <li>\n    <code>connection_name</code>: sorts the result by the\n    <code>connection_name</code> field in ascending order.\n  </li>\n\n  <li>\n    <code>-connection_name</code>: sorts the result by the\n    <code>connection_name</code> field in descending order.\n  </li>\n</ul> <br/> If not given, results are sorted by <code>created_at</code> in descending order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/call_control_applications",
      "method": "createCallControlApplication",
      "httpMethod": "post",
      "tag": "Call Control Applications",
      "description": "Create a call control application",
      "parameters": [
        {
          "name": "active",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "anchorsite_override",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "application_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dtmf_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "first_command_timeout",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "first_command_timeout_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "inbound",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "outbound",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_api_version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_event_failover_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_event_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "webhook_timeout_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/call_control_applications/{id}",
      "method": "deleteCallControlApplication",
      "httpMethod": "delete",
      "tag": "Call Control Applications",
      "description": "Delete a call control application",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/call_control_applications/{id}",
      "method": "retrieveCallControlApplication",
      "httpMethod": "get",
      "tag": "Call Control Applications",
      "description": "Retrieve a call control application",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/call_control_applications/{id}",
      "method": "updateCallControlApplication",
      "httpMethod": "patch",
      "tag": "Call Control Applications",
      "description": "Update a call control application",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        },
        {
          "name": "active",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "anchorsite_override",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "application_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dtmf_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "first_command_timeout",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "first_command_timeout_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "inbound",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "outbound",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_api_version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_event_failover_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_event_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "webhook_timeout_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/call_events",
      "method": "listCallEvents",
      "httpMethod": "get",
      "tag": "Debugging",
      "description": "List call events",
      "parameters": [
        {
          "name": "filter[callLegId]",
          "schema": "string",
          "required": false,
          "description": "The unique identifier of an individual call leg."
        },
        {
          "name": "filter[callSessionId]",
          "schema": "string",
          "required": false,
          "description": "The unique identifier of the call control session. A session may include multiple call leg events."
        },
        {
          "name": "filter[status]",
          "schema": "string",
          "required": false,
          "description": "Event status"
        },
        {
          "name": "filter[type]",
          "schema": "string",
          "required": false,
          "description": "Event type"
        },
        {
          "name": "filter[eventTimestamp][gt]",
          "schema": "string",
          "required": false,
          "description": "Event timestamp: greater than"
        },
        {
          "name": "filter[eventTimestamp][gte]",
          "schema": "string",
          "required": false,
          "description": "Event timestamp: greater than or equal"
        },
        {
          "name": "filter[eventTimestamp][lt]",
          "schema": "string",
          "required": false,
          "description": "Event timestamp: lower than"
        },
        {
          "name": "filter[eventTimestamp][lte]",
          "schema": "string",
          "required": false,
          "description": "Event timestamp: lower than or equal"
        },
        {
          "name": "filter[eventTimestamp][eq]",
          "schema": "string",
          "required": false,
          "description": "Event timestamp: equal"
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls",
      "method": "callDial",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Dial",
      "parameters": [
        {
          "name": "answering_machine_detection",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "answering_machine_detection_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "audio_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "billing_group_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "client_state",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "connection_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "custom_headers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "from_display_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "link_to",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "media_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sip_auth_password",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sip_auth_username",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "time_limit_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "timeout_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "webhook_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_url_method",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}",
      "method": "retrieveCallStatus",
      "httpMethod": "get",
      "tag": "Call Information",
      "description": "Retrieve a call status",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/answer",
      "method": "callAnswer",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Answer call",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "billing_group_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "client_state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_url_method",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/bridge",
      "method": "callBridge",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Bridge calls",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "call_control_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "client_state",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "park_after_unbridge",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "queue",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/enqueue",
      "method": "callEnqueue",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Enqueue call",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "client_state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "max_size",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "max_wait_time_secs",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "queue_name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/fork_start",
      "method": "callForkStart",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Forking start",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "client_state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rx",
          "schema": "string",
          "description": ""
        },
        {
          "name": "stream_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "target",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tx",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/fork_stop",
      "method": "callForkStop",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Forking stop",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "client_state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/gather_stop",
      "method": "callGatherStop",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Gather stop",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "client_state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/gather_using_audio",
      "method": "callGatherUsingAudio",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Gather using audio",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "audio_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "client_state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "inter_digit_timeout_millis",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "invalid_audio_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "invalid_media_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "maximum_digits",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "maximum_tries",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "media_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minimum_digits",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "terminating_digit",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timeout_millis",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "valid_digits",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/gather_using_speak",
      "method": "callGatherUsingSpeak",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Gather using speak",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "client_state",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "inter_digit_timeout_millis",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "invalid_payload",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "maximum_digits",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "maximum_tries",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "minimum_digits",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "payload",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "payload_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "service_level",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "terminating_digit",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "timeout_millis",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "valid_digits",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "voice",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/hangup",
      "method": "callHangup",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Hangup call",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "client_state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/leave_queue",
      "method": "leaveQueue",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Remove call from a queue",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "client_state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/playback_start",
      "method": "callPlaybackStart",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Play audio URL",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "audio_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "client_state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "loop",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "media_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "overlay",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "stop",
          "schema": "string",
          "description": ""
        },
        {
          "name": "target_legs",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/playback_stop",
      "method": "callPlaybackStop",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Stop audio playback",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "client_state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "stop",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/record_pause",
      "method": "callRecordPause",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Record pause",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "client_state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/record_resume",
      "method": "callRecordResume",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Record resume",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "client_state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/record_start",
      "method": "callRecordStart",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Recording start",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "channels",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "client_state",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "format",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "max_length",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "play_beep",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/record_stop",
      "method": "callRecordStop",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Recording stop",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "client_state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/refer",
      "method": "callRefer",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "SIP Refer a call",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "client_state",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "custom_headers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "sip_address",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sip_auth_password",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sip_auth_username",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/reject",
      "method": "callReject",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Reject a call",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "cause",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "client_state",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/send_dtmf",
      "method": "callSendDtmf",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Send DTMF",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "client_state",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "digits",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "duration_millis",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/speak",
      "method": "callSpeak",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Speak text",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "client_state",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "payload",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "payload_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "service_level",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "stop",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "voice",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/transcription_start",
      "method": "callTranscriptionStart",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Transcription start",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "client_state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/transcription_stop",
      "method": "callTranscriptionStop",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Transcription stop",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "client_state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/calls/{call_control_id}/actions/transfer",
      "method": "callTransfer",
      "httpMethod": "post",
      "tag": "Call Commands",
      "description": "Transfer call",
      "parameters": [
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        },
        {
          "name": "answering_machine_detection",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "answering_machine_detection_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "audio_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "client_state",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "custom_headers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "from",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "from_display_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "media_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sip_auth_password",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sip_auth_username",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "target_leg_client_state",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "time_limit_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "timeout_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "webhook_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_url_method",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/comments",
      "method": "listComments",
      "httpMethod": "get",
      "tag": "Number Orders",
      "description": "Retrieve all comments",
      "parameters": [
        {
          "name": "filter[commentRecordType]",
          "schema": "string",
          "required": true,
          "description": "Record type that the comment relates to i.e number_order, sub_number_order or number_order_phone_number"
        },
        {
          "name": "filter[commentRecordId]",
          "schema": "string",
          "required": true,
          "description": "ID of the record the comments relate to"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/comments",
      "method": "createComment",
      "httpMethod": "post",
      "tag": "Number Orders",
      "description": "Create a comment",
      "parameters": [
        {
          "name": "body",
          "schema": "string",
          "description": ""
        },
        {
          "name": "comment_record_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "comment_record_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "commenter",
          "schema": "string",
          "description": ""
        },
        {
          "name": "commenter_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "read_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/comments/{id}",
      "method": "retrieveComment",
      "httpMethod": "get",
      "tag": "Number Orders",
      "description": "Retrieve a comment",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/comments/{id}/read",
      "method": "markCommentRead",
      "httpMethod": "patch",
      "tag": "Number Orders",
      "description": "Mark a comment as read",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/conferences",
      "method": "listConferences",
      "httpMethod": "get",
      "tag": "Conference Commands",
      "description": "List conferences",
      "parameters": [
        {
          "name": "filter[name]",
          "schema": "string",
          "description": "If present, conferences will be filtered to those with a matching `name` attribute. Matching is case-sensitive"
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/conferences",
      "method": "createConference",
      "httpMethod": "post",
      "tag": "Conference Commands",
      "description": "Create conference",
      "parameters": [
        {
          "name": "beep_enabled",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "call_control_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "client_state",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "comfort_noise",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "duration_minutes",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "hold_audio_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "hold_media_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "start_conference_on_create",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/conferences/{conference_id}/participants",
      "method": "listConferenceParticipants",
      "httpMethod": "get",
      "tag": "Conference Commands",
      "description": "List conference participants",
      "parameters": [
        {
          "name": "conferenceId",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies the conference by id"
        },
        {
          "name": "filter[muted]",
          "schema": "boolean",
          "description": "If present, participants will be filtered to those who are/are not muted"
        },
        {
          "name": "filter[onHold]",
          "schema": "boolean",
          "description": "If present, participants will be filtered to those who are/are not put on hold"
        },
        {
          "name": "filter[whispering]",
          "schema": "boolean",
          "description": "If present, participants will be filtered to those who are whispering or are not"
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/conferences/{id}",
      "method": "retrieveConference",
      "httpMethod": "get",
      "tag": "Conference Commands",
      "description": "Retrieve a conference",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies the conference by id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/conferences/{id}/actions/dial_participant",
      "method": "conferenceDialParticipantIn",
      "httpMethod": "post",
      "tag": "Conference Commands",
      "description": "Dial a new participant into a conference",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies the conference by id or name"
        },
        {
          "name": "call_control_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "client_state",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "hold",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hold_audio_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "hold_media_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mute",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "start_conference_on_enter",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "supervisor_role",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "whisper_call_control_ids",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/conferences/{id}/actions/hold",
      "method": "conferenceHoldParticipants",
      "httpMethod": "post",
      "tag": "Conference Commands",
      "description": "Hold conference participants",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies the conference by id or name"
        },
        {
          "name": "audio_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "call_control_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "media_name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/conferences/{id}/actions/join",
      "method": "conferenceJoin",
      "httpMethod": "post",
      "tag": "Conference Commands",
      "description": "Join a conference",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies the conference by id or name"
        },
        {
          "name": "beep_enabled",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "call_control_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "client_state",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "end_conference_on_exit",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hold",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hold_audio_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "hold_media_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mute",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "soft_end_conference_on_exit",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "start_conference_on_enter",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "supervisor_role",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "whisper_call_control_ids",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/conferences/{id}/actions/leave",
      "method": "conferenceLeave",
      "httpMethod": "post",
      "tag": "Conference Commands",
      "description": "Leave a conference",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies the conference by id or name"
        },
        {
          "name": "beep_enabled",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "call_control_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/conferences/{id}/actions/mute",
      "method": "conferenceMuteParticipants",
      "httpMethod": "post",
      "tag": "Conference Commands",
      "description": "Mute conference participants",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies the conference by id or name"
        },
        {
          "name": "call_control_ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/conferences/{id}/actions/play",
      "method": "conferencePlayAudio",
      "httpMethod": "post",
      "tag": "Conference Commands",
      "description": "Play audio to conference participants",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies the conference by id or name"
        },
        {
          "name": "audio_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "call_control_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "loop",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "media_name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/conferences/{id}/actions/record_start",
      "method": "conferenceStartRecording",
      "httpMethod": "post",
      "tag": "Conference Commands",
      "description": "Conference recording start",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Specifies the conference to record by id or name"
        },
        {
          "name": "channels",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "client_state",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "format",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "max_length",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "play_beep",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/conferences/{id}/actions/record_stop",
      "method": "conferenceStopRecording",
      "httpMethod": "post",
      "tag": "Conference Commands",
      "description": "Conference recording stop",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Specifies the conference to stop the recording for by id or name"
        },
        {
          "name": "client_state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/conferences/{id}/actions/speak",
      "method": "conferenceSpeakText",
      "httpMethod": "post",
      "tag": "Conference Commands",
      "description": "Speak text to conference participants",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Specifies the conference by id or name"
        },
        {
          "name": "call_control_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "payload",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "payload_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "voice",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/conferences/{id}/actions/stop",
      "method": "conferenceStopAudio",
      "httpMethod": "post",
      "tag": "Conference Commands",
      "description": "Stop audio being played on the conference",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies the conference by id or name"
        },
        {
          "name": "call_control_ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/conferences/{id}/actions/unhold",
      "method": "conferenceUnholdParticipants",
      "httpMethod": "post",
      "tag": "Conference Commands",
      "description": "Unhold conference participants",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies the conference by id or name"
        },
        {
          "name": "call_control_ids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/conferences/{id}/actions/unmute",
      "method": "conferenceUnmuteParticipants",
      "httpMethod": "post",
      "tag": "Conference Commands",
      "description": "Unmute conference participants",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies the conference by id or name"
        },
        {
          "name": "call_control_ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/conferences/{id}/actions/update",
      "method": "conferenceUpdate",
      "httpMethod": "post",
      "tag": "Conference Commands",
      "description": "Update conference participant",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies the conference by id or name"
        },
        {
          "name": "call_control_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "command_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "supervisor_role",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "whisper_call_control_ids",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/connections",
      "method": "listConnections",
      "httpMethod": "get",
      "tag": "Connections",
      "description": "List connections",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[connectionName][contains]",
          "schema": "string",
          "description": "If present, connections with <code>connection_name</code> containing the given value will be returned. Matching is not case-sensitive. Requires at least three characters."
        },
        {
          "name": "filter[outboundVoiceProfileId]",
          "schema": "string",
          "description": "Identifies the associated outbound voice profile."
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Specifies the sort order for results. By default sorting direction is ascending. To have the results sorted in descending order add the <code> -</code> prefix.<br/><br/>\nThat is: <ul>\n  <li>\n    <code>connection_name</code>: sorts the result by the\n    <code>connection_name</code> field in ascending order.\n  </li>\n\n  <li>\n    <code>-connection_name</code>: sorts the result by the\n    <code>connection_name</code> field in descending order.\n  </li>\n</ul> <br/> If not given, results are sorted by <code>created_at</code> in descending order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/connections/{id}",
      "method": "retrieveConnection",
      "httpMethod": "get",
      "tag": "Connections",
      "description": "Retrieve a connection",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "IP Connection ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/credential_connections",
      "method": "listCredentialConnections",
      "httpMethod": "get",
      "tag": "Credential Connections",
      "description": "List credential connections",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[connectionName][contains]",
          "schema": "string",
          "description": "If present, connections with <code>connection_name</code> containing the given value will be returned. Matching is not case-sensitive. Requires at least three characters."
        },
        {
          "name": "filter[outboundOutboundVoiceProfileId]",
          "schema": "string",
          "description": "Identifies the associated outbound voice profile."
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Specifies the sort order for results. By default sorting direction is ascending. To have the results sorted in descending order add the <code> -</code> prefix.<br/><br/>\nThat is: <ul>\n  <li>\n    <code>connection_name</code>: sorts the result by the\n    <code>connection_name</code> field in ascending order.\n  </li>\n\n  <li>\n    <code>-connection_name</code>: sorts the result by the\n    <code>connection_name</code> field in descending order.\n  </li>\n</ul> <br/> If not given, results are sorted by <code>created_at</code> in descending order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/credential_connections",
      "method": "createCredentialConnection",
      "httpMethod": "post",
      "tag": "Credential Connections",
      "description": "Create a credential connection",
      "parameters": [
        {
          "name": "active",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "anchorsite_override",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "connection_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "default_on_hold_comfort_noise_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "dtmf_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "encode_contact_header_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "encrypted_media",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "inbound",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "onnet_t38_passthrough_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "outbound",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "rtcp_settings",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "sip_uri_calling_preference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "user_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "webhook_api_version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_event_failover_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_event_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_timeout_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/credential_connections/{id}",
      "method": "deleteCredentialConnection",
      "httpMethod": "delete",
      "tag": "Credential Connections",
      "description": "Delete a credential connection",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/credential_connections/{id}",
      "method": "retrieveCredentialConnection",
      "httpMethod": "get",
      "tag": "Credential Connections",
      "description": "Retrieve a credential connection",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/credential_connections/{id}",
      "method": "updateCredentialConnection",
      "httpMethod": "patch",
      "tag": "Credential Connections",
      "description": "Update a credential connection",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        },
        {
          "name": "active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "anchorsite_override",
          "schema": "string",
          "description": ""
        },
        {
          "name": "connection_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "default_on_hold_comfort_noise_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "dtmf_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "encode_contact_header_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "encrypted_media",
          "schema": "string",
          "description": ""
        },
        {
          "name": "inbound",
          "schema": "object",
          "description": ""
        },
        {
          "name": "onnet_t38_passthrough_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "outbound",
          "schema": "object",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rtcp_settings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "sip_uri_calling_preference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "user_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_api_version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_event_failover_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_event_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_timeout_secs",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/detail_records",
      "method": "detailRecordsSearch",
      "httpMethod": "get",
      "tag": "Detail Records",
      "description": "Search detail records",
      "parameters": [
        {
          "name": "filter[recordType]",
          "schema": "string",
          "required": true,
          "description": "Filter by the given record type"
        },
        {
          "name": "filter[dateRange]",
          "schema": "string",
          "required": false,
          "description": "Filter by the given user-friendly date range"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Filter records"
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "Page number"
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "Page size"
        },
        {
          "name": "sort",
          "schema": "array",
          "description": "Specifies the sort order for results"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/document_links",
      "method": "listDocumentLinks",
      "httpMethod": "get",
      "tag": "Documents",
      "description": "List all document links",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[documentId]",
          "schema": "string",
          "description": "Identifies the associated document to filter on."
        },
        {
          "name": "filter[linkedRecordType]",
          "schema": "string",
          "description": "The `linked_record_type` of the document to filter on."
        },
        {
          "name": "filter[linkedResourceId]",
          "schema": "string",
          "description": "The `linked_resource_id` of the document to filter on."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents",
      "method": "listDocuments",
      "httpMethod": "get",
      "tag": "Documents",
      "description": "List all documents",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents",
      "method": "createDocument",
      "httpMethod": "post",
      "tag": "Documents",
      "description": "Upload a document",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents/{id}",
      "method": "deleteDocument",
      "httpMethod": "delete",
      "tag": "Documents",
      "description": "Delete a document",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents/{id}",
      "method": "retrieveDocument",
      "httpMethod": "get",
      "tag": "Documents",
      "description": "Retrieve a document",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents/{id}",
      "method": "updateDocument",
      "httpMethod": "patch",
      "tag": "Documents",
      "description": "Update a document",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents/{id}/download",
      "method": "downloadDocServiceDocument",
      "httpMethod": "get",
      "tag": "Documents",
      "description": "Download a document",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/fax_applications",
      "method": "listFaxApplications",
      "httpMethod": "get",
      "tag": "Programmable Fax Applications",
      "description": "List all Fax Applications",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[applicationName][contains]",
          "schema": "string",
          "description": "If present, applications with <code>application_name</code> containing the given value will be returned. Matching is not case-sensitive. Requires at least three characters."
        },
        {
          "name": "filter[outboundVoiceProfileId]",
          "schema": "string",
          "description": "Identifies the associated outbound voice profile."
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Specifies the sort order for results. By default sorting direction is ascending. To have the results sorted in descending order add the <code> -</code> prefix.<br/><br/>\nThat is: <ul>\n  <li>\n    <code>connection_name</code>: sorts the result by the\n    <code>connection_name</code> field in ascending order.\n  </li>\n\n  <li>\n    <code>-connection_name</code>: sorts the result by the\n    <code>connection_name</code> field in descending order.\n  </li>\n</ul> <br/> If not given, results are sorted by <code>created_at</code> in descending order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fax_applications",
      "method": "createFaxApplication",
      "httpMethod": "post",
      "tag": "Programmable Fax Applications",
      "description": "Creates a Fax Application",
      "parameters": [
        {
          "name": "active",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "anchorsite_override",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "application_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "inbound",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "outbound",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_event_failover_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_event_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "webhook_timeout_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/fax_applications/{id}",
      "method": "deleteFaxApplication",
      "httpMethod": "delete",
      "tag": "Programmable Fax Applications",
      "description": "Deletes a Fax Application",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fax_applications/{id}",
      "method": "getFaxApplication",
      "httpMethod": "get",
      "tag": "Programmable Fax Applications",
      "description": "Retrieve a Fax Application",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fax_applications/{id}",
      "method": "updateFaxApplication",
      "httpMethod": "patch",
      "tag": "Programmable Fax Applications",
      "description": "Update a Fax Application",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        },
        {
          "name": "active",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "anchorsite_override",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "application_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "inbound",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "outbound",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_event_failover_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_event_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "webhook_timeout_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/faxes",
      "method": "listFaxes",
      "httpMethod": "get",
      "tag": "Programmable Fax Commands",
      "description": "View a list of faxes",
      "parameters": [
        {
          "name": "filter[createdAt][gte]",
          "schema": "string",
          "description": "ISO 8601 date time for filtering faxes created after or on that date"
        },
        {
          "name": "filter[createdAt][gt]",
          "schema": "string",
          "description": "ISO 8601 date time for filtering faxes created after that date"
        },
        {
          "name": "filter[createdAt][lte]",
          "schema": "string",
          "description": "ISO 8601 formatted date time for filtering faxes created on or before that date"
        },
        {
          "name": "filter[createdAt][lt]",
          "schema": "string",
          "description": "ISO 8601 formatted date time for filtering faxes created before that date"
        },
        {
          "name": "filter[direction][eq]",
          "schema": "string",
          "description": "The direction, inbound or outbound, for filtering faxes sent from this account"
        },
        {
          "name": "filter[from][eq]",
          "schema": "string",
          "description": "The phone number, in E.164 format for filtering faxes sent from this number"
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "Number of fax resourcxes for the single page returned"
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "Number of the page to be retrieved"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/faxes",
      "method": "sendFax",
      "httpMethod": "post",
      "tag": "Programmable Fax Commands",
      "description": "Send a fax",
      "parameters": [
        {
          "name": "connection_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "media_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "media_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "quality",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "store_media",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/faxes/{id}",
      "method": "deleteFax",
      "httpMethod": "delete",
      "tag": "Programmable Fax Commands",
      "description": "Delete a fax",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of a fax."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/faxes/{id}",
      "method": "viewFax",
      "httpMethod": "get",
      "tag": "Programmable Fax Commands",
      "description": "View a fax",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of a fax."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/faxes/{id}/actions/refresh",
      "method": "refreshFax",
      "httpMethod": "post",
      "tag": "Programmable Fax Commands",
      "description": "Refresh a fax",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of a fax."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/fqdn_connections",
      "method": "listFqdnConnections",
      "httpMethod": "get",
      "tag": "FQDN Connections",
      "description": "List FQDN connections",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[connectionName][contains]",
          "schema": "string",
          "description": "If present, connections with <code>connection_name</code> containing the given value will be returned. Matching is not case-sensitive. Requires at least three characters."
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Specifies the sort order for results. By default sorting direction is ascending. To have the results sorted in descending order add the <code> -</code> prefix.<br/><br/>\nThat is: <ul>\n  <li>\n    <code>connection_name</code>: sorts the result by the\n    <code>connection_name</code> field in ascending order.\n  </li>\n\n  <li>\n    <code>-connection_name</code>: sorts the result by the\n    <code>connection_name</code> field in descending order.\n  </li>\n</ul> <br/> If not given, results are sorted by <code>created_at</code> in descending order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fqdn_connections",
      "method": "createFqdnConnection",
      "httpMethod": "post",
      "tag": "FQDN Connections",
      "description": "Create an FQDN connection",
      "parameters": [
        {
          "name": "active",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "anchorsite_override",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "connection_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "default_on_hold_comfort_noise_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "dtmf_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "encode_contact_header_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "encrypted_media",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "inbound",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "onnet_t38_passthrough_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "rtcp_settings",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "transport_protocol",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_api_version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_event_failover_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_event_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_timeout_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/fqdn_connections/{id}",
      "method": "deleteFqdnConnection",
      "httpMethod": "delete",
      "tag": "FQDN Connections",
      "description": "Delete an FQDN connection",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "FQDN Connection ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fqdn_connections/{id}",
      "method": "retrieveFqdnConnection",
      "httpMethod": "get",
      "tag": "FQDN Connections",
      "description": "Retrieve an FQDN connection",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "FQDN Connection ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fqdn_connections/{id}",
      "method": "updateFqdnConnection",
      "httpMethod": "patch",
      "tag": "FQDN Connections",
      "description": "Update an FQDN connection",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "FQDN Connection ID"
        },
        {
          "name": "active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "anchorsite_override",
          "schema": "string",
          "description": ""
        },
        {
          "name": "connection_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "default_on_hold_comfort_noise_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "dtmf_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "encode_contact_header_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "encrypted_media",
          "schema": "string",
          "description": ""
        },
        {
          "name": "inbound",
          "schema": "object",
          "description": ""
        },
        {
          "name": "onnet_t38_passthrough_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "rtcp_settings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "transport_protocol",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_api_version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_event_failover_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_event_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_timeout_secs",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fqdns",
      "method": "listFqdns",
      "httpMethod": "get",
      "tag": "FQDNs",
      "description": "List FQDNs",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[connectionId]",
          "schema": "string",
          "description": "ID of the FQDN connection to which the FQDN belongs."
        },
        {
          "name": "filter[fqdn]",
          "schema": "string",
          "description": "FQDN represented by the resource."
        },
        {
          "name": "filter[port]",
          "schema": "integer",
          "description": "Port to use when connecting to the FQDN."
        },
        {
          "name": "filter[dnsRecordType]",
          "schema": "string",
          "description": "DNS record type used by the FQDN."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fqdns",
      "method": "createFqdn",
      "httpMethod": "post",
      "tag": "FQDNs",
      "description": "Create an FQDN",
      "parameters": [
        {
          "name": "connection_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dns_record_type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "fqdn",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "port",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/fqdns/{id}",
      "method": "deleteFqdn",
      "httpMethod": "delete",
      "tag": "FQDNs",
      "description": "Delete an FQDN",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fqdns/{id}",
      "method": "retrieveFqdn",
      "httpMethod": "get",
      "tag": "FQDNs",
      "description": "Retrieve an FQDN",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fqdns/{id}",
      "method": "updateFqdn",
      "httpMethod": "patch",
      "tag": "FQDNs",
      "description": "Update an FQDN",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        },
        {
          "name": "connection_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dns_record_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "fqdn",
          "schema": "string",
          "description": ""
        },
        {
          "name": "port",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/inventory_coverage",
      "method": "createInventoryCoverageRequest",
      "httpMethod": "get",
      "tag": "Inventory Level",
      "description": "Create an inventory coverage request",
      "parameters": [
        {
          "name": "filter[npa]",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "filter[nxx]",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "filter[administrativeArea]",
          "schema": "string",
          "description": ""
        },
        {
          "name": "filter[numberType]",
          "schema": "string",
          "description": ""
        },
        {
          "name": "filter[phoneNumberType]",
          "schema": "string",
          "description": ""
        },
        {
          "name": "filter[countryCode]",
          "schema": "string",
          "description": ""
        },
        {
          "name": "filter[count]",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "filter[groupBy]",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/ip_connections",
      "method": "listIpConnections",
      "httpMethod": "get",
      "tag": "IP Connections",
      "description": "List Ip connections",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[connectionName][contains]",
          "schema": "string",
          "description": "If present, connections with <code>connection_name</code> containing the given value will be returned. Matching is not case-sensitive. Requires at least three characters."
        },
        {
          "name": "filter[outboundOutboundVoiceProfileId]",
          "schema": "string",
          "description": "Identifies the associated outbound voice profile."
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Specifies the sort order for results. By default sorting direction is ascending. To have the results sorted in descending order add the <code> -</code> prefix.<br/><br/>\nThat is: <ul>\n  <li>\n    <code>connection_name</code>: sorts the result by the\n    <code>connection_name</code> field in ascending order.\n  </li>\n\n  <li>\n    <code>-connection_name</code>: sorts the result by the\n    <code>connection_name</code> field in descending order.\n  </li>\n</ul> <br/> If not given, results are sorted by <code>created_at</code> in descending order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ip_connections",
      "method": "createIpConnection",
      "httpMethod": "post",
      "tag": "IP Connections",
      "description": "Create an Ip connection",
      "parameters": [
        {
          "name": "active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "anchorsite_override",
          "schema": "string",
          "description": ""
        },
        {
          "name": "connection_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "default_on_hold_comfort_noise_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "dtmf_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "encode_contact_header_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "encrypted_media",
          "schema": "string",
          "description": ""
        },
        {
          "name": "inbound",
          "schema": "object",
          "description": ""
        },
        {
          "name": "onnet_t38_passthrough_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "outbound",
          "schema": "object",
          "description": ""
        },
        {
          "name": "rtcp_settings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "transport_protocol",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_api_version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_event_failover_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_event_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_timeout_secs",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/ip_connections/{id}",
      "method": "deleteIpConnection",
      "httpMethod": "delete",
      "tag": "IP Connections",
      "description": "Delete an Ip connection",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the type of resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ip_connections/{id}",
      "method": "retrieveIpConnection",
      "httpMethod": "get",
      "tag": "IP Connections",
      "description": "Retrieve an Ip connection",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "IP Connection ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ip_connections/{id}",
      "method": "updateIpConnection",
      "httpMethod": "patch",
      "tag": "IP Connections",
      "description": "Update an Ip connection",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the type of resource."
        },
        {
          "name": "active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "anchorsite_override",
          "schema": "string",
          "description": ""
        },
        {
          "name": "connection_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "default_on_hold_comfort_noise_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "dtmf_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "encode_contact_header_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "encrypted_media",
          "schema": "string",
          "description": ""
        },
        {
          "name": "inbound",
          "schema": "object",
          "description": ""
        },
        {
          "name": "onnet_t38_passthrough_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "outbound",
          "schema": "object",
          "description": ""
        },
        {
          "name": "rtcp_settings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "transport_protocol",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_api_version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_event_failover_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_event_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_timeout_secs",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ips",
      "method": "listIps",
      "httpMethod": "get",
      "tag": "IPs",
      "description": "List Ips",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[connectionId]",
          "schema": "string",
          "description": "ID of the IP Connection to which this IP should be attached."
        },
        {
          "name": "filter[ipAddress]",
          "schema": "string",
          "description": "IP adddress represented by this resource."
        },
        {
          "name": "filter[port]",
          "schema": "integer",
          "description": "Port to use when connecting to this IP."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ips",
      "method": "createIp",
      "httpMethod": "post",
      "tag": "IPs",
      "description": "Create an Ip",
      "parameters": [
        {
          "name": "connection_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ip_address",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "port",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/ips/{id}",
      "method": "deleteIp",
      "httpMethod": "delete",
      "tag": "IPs",
      "description": "Delete an Ip",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the type of resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ips/{id}",
      "method": "retrieveIp",
      "httpMethod": "get",
      "tag": "IPs",
      "description": "Retrieve an Ip",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the type of resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ips/{id}",
      "method": "updateIp",
      "httpMethod": "patch",
      "tag": "IPs",
      "description": "Update an Ip",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the type of resource."
        },
        {
          "name": "connection_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ip_address",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "port",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ledger_billing_group_reports",
      "method": "createLedgerBillingGroupReport",
      "httpMethod": "post",
      "tag": "Reports",
      "description": "Create a ledger billing group report",
      "parameters": [
        {
          "name": "month",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "year",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/ledger_billing_group_reports/{id}",
      "method": "retrieveLedgerBillingGroupReport",
      "httpMethod": "get",
      "tag": "Reports",
      "description": "Retrieve a ledger billing group report",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the ledger billing group report"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/managed_accounts",
      "method": "listManagedAccounts",
      "httpMethod": "get",
      "tag": "Managed Accounts",
      "description": "Lists accounts managed by the current user.",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[email][contains]",
          "schema": "string",
          "required": false,
          "description": "If present, email containing the given value will be returned. Matching is not case-sensitive. Requires at least three characters."
        },
        {
          "name": "filter[email][eq]",
          "schema": "string",
          "required": false,
          "description": "If present, only returns results with the <code>email</code> matching exactly the value given."
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Specifies the sort order for results. By default sorting direction is ascending. To have the results sorted in descending order add the <code> -</code> prefix.<br/><br/>\nThat is: <ul>\n  <li>\n    <code>email</code>: sorts the result by the\n    <code>email</code> field in ascending order.\n  </li>\n\n  <li>\n    <code>-email</code>: sorts the result by the\n    <code>email</code> field in descending order.\n  </li>\n</ul> <br/> If not given, results are sorted by <code>created_at</code> in descending order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/managed_accounts",
      "method": "createManagedAccount",
      "httpMethod": "post",
      "tag": "Managed Accounts",
      "description": "Create a new managed account.",
      "parameters": [
        {
          "name": "business_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/managed_accounts/{id}",
      "method": "retrieveManagedAccount",
      "httpMethod": "get",
      "tag": "Managed Accounts",
      "description": "Retrieve a managed account",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Managed Account User ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/managed_accounts/{id}/actions/disable",
      "method": "disableManagedAccount",
      "httpMethod": "post",
      "tag": "Managed Accounts",
      "description": "Disables a managed account",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Managed Account User ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/managed_accounts/{id}/actions/enable",
      "method": "enableManagedAccount",
      "httpMethod": "post",
      "tag": "Managed Accounts",
      "description": "Enables a managed account",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Managed Account User ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/media",
      "method": "listMedia",
      "httpMethod": "get",
      "tag": "Media Storage API",
      "description": "List uploaded media",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/media",
      "method": "createMedia",
      "httpMethod": "post",
      "tag": "Media Storage API",
      "description": "Upload media",
      "parameters": [
        {
          "name": "media_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "media_url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ttl_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/media/{media_name}",
      "method": "deleteMedia",
      "httpMethod": "delete",
      "tag": "Media Storage API",
      "description": "Deletes stored media",
      "parameters": [
        {
          "name": "mediaName",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies a media resource."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/media/{media_name}",
      "method": "getMedia",
      "httpMethod": "get",
      "tag": "Media Storage API",
      "description": "Retrieve stored media",
      "parameters": [
        {
          "name": "mediaName",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies a media resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/media/{media_name}",
      "method": "updateMedia",
      "httpMethod": "put",
      "tag": "Media Storage API",
      "description": "Update stored media",
      "parameters": [
        {
          "name": "mediaName",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies a media resource."
        },
        {
          "name": "media_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ttl_secs",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/media/{media_name}/download",
      "method": "downloadMedia",
      "httpMethod": "get",
      "tag": "Media Storage API",
      "description": "Download stored media",
      "parameters": [
        {
          "name": "mediaName",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies a media resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/message_detail_records",
      "method": "getPaginatedMdrs",
      "httpMethod": "get",
      "tag": "MDR Search (Beta)",
      "description": "Fetch messaging detail records.",
      "parameters": [
        {
          "name": "startDate",
          "schema": "string",
          "required": true,
          "description": "Start date"
        },
        {
          "name": "endDate",
          "schema": "string",
          "required": true,
          "description": "End date"
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "direction",
          "schema": "string",
          "description": ""
        },
        {
          "name": "outboundProfileId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "cld",
          "schema": "string",
          "description": ""
        },
        {
          "name": "cli",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "messageType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "countryIso",
          "schema": "string",
          "description": ""
        },
        {
          "name": "error",
          "schema": "string",
          "description": ""
        },
        {
          "name": "normalizedCarrier",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tag",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mcc",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mnc",
          "schema": "string",
          "description": ""
        },
        {
          "name": "product",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "Page number"
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "Size of the page"
        },
        {
          "name": "sort",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/message_detail_records/{id}/message_body",
      "method": "getMdrMessageBody",
      "httpMethod": "get",
      "tag": "MDR Search (Beta)",
      "description": "Fetch message body by id.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Message unique identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/messages",
      "method": "createMessage",
      "httpMethod": "post",
      "tag": "Messages",
      "description": "Send a message",
      "parameters": [
        {
          "name": "auto_detect",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "from",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "media_urls",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "messaging_profile_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "subject",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "text",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "use_profile_webhooks",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_failover_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_url",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/messages/long_code",
      "method": "createLongCodeMessage",
      "httpMethod": "post",
      "tag": "Messages",
      "description": "Send a long code message",
      "parameters": [
        {
          "name": "auto_detect",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "media_urls",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "subject",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "text",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "use_profile_webhooks",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_failover_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_url",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/messages/number_pool",
      "method": "createNumberPoolMessage",
      "httpMethod": "post",
      "tag": "Messages",
      "description": "Send a message using number pool",
      "parameters": [
        {
          "name": "auto_detect",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "media_urls",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "messaging_profile_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "subject",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "text",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "use_profile_webhooks",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_failover_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_url",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/messages/short_code",
      "method": "createShortCodeMessage",
      "httpMethod": "post",
      "tag": "Messages",
      "description": "Send a short code message",
      "parameters": [
        {
          "name": "auto_detect",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "media_urls",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "subject",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "text",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "use_profile_webhooks",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_failover_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_url",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/messages/{id}",
      "method": "retrieveMessage",
      "httpMethod": "get",
      "tag": "Messages",
      "description": "Retrieve a message",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the message"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/messaging_hosted_number_orders",
      "method": "listMessagingHostedNumberOrder",
      "httpMethod": "get",
      "tag": "Messaging Hosted Number",
      "description": "List messaging hosted number orders",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/messaging_hosted_number_orders",
      "method": "createMessagingHostedNumberOrder",
      "httpMethod": "post",
      "tag": "Messaging Hosted Number",
      "description": "Create a messaging hosted number order",
      "parameters": [
        {
          "name": "messaging_profile_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phone_numbers",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/messaging_hosted_number_orders/{id}",
      "method": "retrieveMessagingHostedNumberOrder",
      "httpMethod": "get",
      "tag": "Messaging Hosted Number",
      "description": "Retrieve a messaging hosted number order",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the type of resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/messaging_hosted_number_orders/{id}/actions/file_upload",
      "method": "uploadFileMessagingHostedNumberOrder",
      "httpMethod": "post",
      "tag": "Messaging Hosted Number",
      "description": "Upload file required for a messaging hosted number order",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the type of resource."
        },
        {
          "name": "bill",
          "schema": "string",
          "description": ""
        },
        {
          "name": "loa",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/messaging_hosted_numbers/{id}",
      "method": "deleteMessagingHostedNumber",
      "httpMethod": "delete",
      "tag": "Messaging Hosted Number",
      "description": "Delete a messaging hosted number",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the type of resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/messaging_profile_metrics",
      "method": "listMessagingProfileMetrics",
      "httpMethod": "get",
      "tag": "Messaging Profiles",
      "description": "List messaging profile metrics",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": "The id of the messaging profile(s) to retrieve"
        },
        {
          "name": "timeFrame",
          "schema": "string",
          "required": false,
          "description": "The timeframe for which you'd like to retrieve metrics."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/messaging_profiles",
      "method": "listMessagingProfiles",
      "httpMethod": "get",
      "tag": "Messaging Profiles",
      "description": "List messaging profiles",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/messaging_profiles",
      "method": "createMessagingProfile",
      "httpMethod": "post",
      "tag": "Messaging Profiles",
      "description": "Create a messaging profile",
      "parameters": [
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "number_pool_settings",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "url_shortener_settings",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_api_version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_failover_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_url",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/messaging_profiles/{id}",
      "method": "deleteMessagingProfile",
      "httpMethod": "delete",
      "tag": "Messaging Profiles",
      "description": "Delete a messaging profile",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the messaging profile to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/messaging_profiles/{id}",
      "method": "retrieveMessagingProfile",
      "httpMethod": "get",
      "tag": "Messaging Profiles",
      "description": "Retrieve a messaging profile",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the messaging profile to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/messaging_profiles/{id}",
      "method": "updateMessagingProfile",
      "httpMethod": "patch",
      "tag": "Messaging Profiles",
      "description": "Update a messaging profile",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the messaging profile to retrieve"
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "number_pool_settings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "record_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url_shortener_settings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "v1_secret",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_api_version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_failover_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "whitelisted_destinations",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/messaging_profiles/{id}/metrics",
      "method": "retrieveMessagingProfileDetailedMetrics",
      "httpMethod": "get",
      "tag": "Messaging Profiles",
      "description": "Retrieve messaging profile metrics",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the messaging profile to retrieve"
        },
        {
          "name": "timeFrame",
          "schema": "string",
          "required": false,
          "description": "The timeframe for which you'd like to retrieve metrics."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/messaging_profiles/{id}/phone_numbers",
      "method": "listMessagingProfilePhoneNumbers",
      "httpMethod": "get",
      "tag": "Messaging Profiles",
      "description": "List phone numbers associated with a messaging profile",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the messaging profile to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/messaging_profiles/{id}/short_codes",
      "method": "listMessagingProfileShortCodes",
      "httpMethod": "get",
      "tag": "Messaging Profiles",
      "description": "List short codes associated with a messaging profile",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the messaging profile to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/messaging_url_domains",
      "method": "listMessagingUrlDomains",
      "httpMethod": "get",
      "tag": "Messaging URL Domains",
      "description": "List messaging URL domains",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/mobile_operator_networks",
      "method": "mobileOperatorNetworksGet",
      "httpMethod": "get",
      "tag": "Mobile Operator Networks",
      "description": "List mobile operator networks",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[name][startsWith]",
          "schema": "string",
          "required": false,
          "description": "Filter by name starting with."
        },
        {
          "name": "filter[name][contains]",
          "schema": "string",
          "required": false,
          "description": "Filter by name containing match."
        },
        {
          "name": "filter[name][endsWith]",
          "schema": "string",
          "required": false,
          "description": "Filter by name ending with."
        },
        {
          "name": "filter[countryCode]",
          "schema": "string",
          "required": false,
          "description": "Filter by exact country_code."
        },
        {
          "name": "filter[mcc]",
          "schema": "string",
          "required": false,
          "description": "Filter by exact MCC."
        },
        {
          "name": "filter[mnc]",
          "schema": "string",
          "required": false,
          "description": "Filter by exact MNC."
        },
        {
          "name": "filter[tadig]",
          "schema": "string",
          "required": false,
          "description": "Filter by exact TADIG."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/notification_channels",
      "method": "listNotificationChannels",
      "httpMethod": "get",
      "tag": "Notifications",
      "description": "List notification channels",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[channelTypeId][eq]",
          "schema": "string",
          "description": "Filter by the id of a channel type"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/notification_channels",
      "method": "createNotificationChannels",
      "httpMethod": "post",
      "tag": "Notifications",
      "description": "Create a notification channel",
      "parameters": [
        {
          "name": "channel_destination",
          "schema": "string",
          "description": ""
        },
        {
          "name": "channel_type_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notification_profile_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/notification_channels/{id}",
      "method": "deleteNotificationChannel",
      "httpMethod": "delete",
      "tag": "Notifications",
      "description": "Delete a notification channel",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/notification_channels/{id}",
      "method": "retrieveNotificationChannel",
      "httpMethod": "get",
      "tag": "Notifications",
      "description": "Retrieve a notification channel",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/notification_channels/{id}",
      "method": "updateNotificationChannel",
      "httpMethod": "patch",
      "tag": "Notifications",
      "description": "Update a notification channel",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the resource."
        },
        {
          "name": "channel_destination",
          "schema": "string",
          "description": ""
        },
        {
          "name": "channel_type_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notification_profile_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/notification_event_conditions",
      "method": "findNotificationsEventsConditions",
      "httpMethod": "get",
      "tag": "Notifications",
      "description": "List all Notifications Events Conditions",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[associatedRecordType][eq]",
          "schema": "string",
          "description": "Filter by the associated record type"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/notification_events",
      "method": "findNotificationsEvents",
      "httpMethod": "get",
      "tag": "Notifications",
      "description": "List all Notifications Events",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/notification_profiles",
      "method": "findNotificationsProfiles",
      "httpMethod": "get",
      "tag": "Notifications",
      "description": "List all Notifications Profiles",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/notification_profiles",
      "method": "createNotificationProfile",
      "httpMethod": "post",
      "tag": "Notifications",
      "description": "Create a notification profile",
      "parameters": [
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/notification_profiles/{id}",
      "method": "deleteNotificationProfile",
      "httpMethod": "delete",
      "tag": "Notifications",
      "description": "Delete a notification profile",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/notification_profiles/{id}",
      "method": "retrieveNotificationProfile",
      "httpMethod": "get",
      "tag": "Notifications",
      "description": "Retrieve a notification profile",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/notification_profiles/{id}",
      "method": "updateNotificationProfile",
      "httpMethod": "patch",
      "tag": "Notifications",
      "description": "Update a notification profile",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the resource."
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/notification_settings",
      "method": "listNotificationSettings",
      "httpMethod": "get",
      "tag": "Notifications",
      "description": "List notification settings",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[notificationProfileId][eq]",
          "schema": "string",
          "description": "Filter by the id of a notification profile"
        },
        {
          "name": "filter[notificationChannel][eq]",
          "schema": "string",
          "description": "Filter by the id of a notification channel"
        },
        {
          "name": "filter[notificationEventConditionId][eq]",
          "schema": "string",
          "description": "Filter by the id of a notification channel"
        },
        {
          "name": "filter[associatedRecordType][eq]",
          "schema": "string",
          "description": "Filter by the associated record type"
        },
        {
          "name": "filter[status][eq]",
          "schema": "string",
          "description": "The status of a notification setting"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/notification_settings",
      "method": "createNotificationSetting",
      "httpMethod": "post",
      "tag": "Notifications",
      "description": "Add a Notification Setting",
      "parameters": [
        {
          "name": "associated_record_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "associated_record_type_value",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notification_channel_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notification_event_condition_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notification_profile_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "parameters",
          "schema": "array",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/notification_settings/{id}",
      "method": "deleteNotificationSetting",
      "httpMethod": "delete",
      "tag": "Notifications",
      "description": "Delete a notification setting",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/notification_settings/{id}",
      "method": "retrieveNotificationSetting",
      "httpMethod": "get",
      "tag": "Notifications",
      "description": "Retrieve a notification setting",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/number_block_orders",
      "method": "listNumberBlockOrders",
      "httpMethod": "get",
      "tag": "Number Block Orders",
      "description": "List number block orders",
      "parameters": [
        {
          "name": "filter[status]",
          "schema": "string",
          "description": "Filter number block orders by status."
        },
        {
          "name": "filter[createdAt][gt]",
          "schema": "string",
          "description": "Filter number block orders later than this value."
        },
        {
          "name": "filter[createdAt][lt]",
          "schema": "string",
          "description": "Filter number block orders earlier than this value."
        },
        {
          "name": "filter[phoneNumbersStartingNumber]",
          "schema": "string",
          "description": "Filter number block  orders having these phone numbers."
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/number_block_orders",
      "method": "createNumberBlockOrder",
      "httpMethod": "post",
      "tag": "Number Block Orders",
      "description": "Create a number block order",
      "parameters": [
        {
          "name": "connection_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "customer_reference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "errors",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "messaging_profile_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "phone_numbers_count",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "range",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "record_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "requirements_met",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "starting_number",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/number_block_orders/{number_block_order_id}",
      "method": "retrieveNumberBlockOrder",
      "httpMethod": "get",
      "tag": "Number Block Orders",
      "description": "Retrieve a number block order",
      "parameters": [
        {
          "name": "numberBlockOrderId",
          "schema": "string",
          "required": true,
          "description": "The number block order ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/number_lookup/{phone_number}",
      "method": "numberLookup",
      "httpMethod": "get",
      "tag": "Number Lookup",
      "description": "Lookup phone number data",
      "parameters": [
        {
          "name": "phoneNumber",
          "schema": "string",
          "required": true,
          "description": "The phone number to be looked up"
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "Specifies the type of number lookup to be performed"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/number_order_documents",
      "method": "listNumberOrderDocuments",
      "httpMethod": "get",
      "tag": "Number Order Documents",
      "description": "List number order documents",
      "parameters": [
        {
          "name": "filter[requirementId]",
          "schema": "string",
          "description": "Filter number order documents by `requirement_id`."
        },
        {
          "name": "filter[createdAt][gt]",
          "schema": "string",
          "description": "Filter number order documents after this datetime."
        },
        {
          "name": "filter[createdAt][lt]",
          "schema": "string",
          "description": "Filter number order documents from before this datetime."
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/number_order_documents",
      "method": "createNumberOrderDocument",
      "httpMethod": "post",
      "tag": "Number Order Documents",
      "description": "Create a number order document",
      "parameters": [
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "customer_reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "file_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "record_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "requirement_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "requirements_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/number_order_documents/{number_order_document_id}",
      "method": "retrieveNumberOrderDocument",
      "httpMethod": "get",
      "tag": "Number Order Documents",
      "description": "Retrieve a number order document",
      "parameters": [
        {
          "name": "numberOrderDocumentId",
          "schema": "string",
          "required": true,
          "description": "The number order document ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/number_order_documents/{number_order_document_id}",
      "method": "updateNumberOrderDocument",
      "httpMethod": "patch",
      "tag": "Number Order Documents",
      "description": "Update a number order document",
      "parameters": [
        {
          "name": "numberOrderDocumentId",
          "schema": "string",
          "required": true,
          "description": "The number order document ID."
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "customer_reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "file_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "record_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "requirement_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "requirements_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/number_order_phone_numbers",
      "method": "retrieveNumberOrderPhoneNumbers",
      "httpMethod": "get",
      "tag": "Number Orders",
      "description": "Retrieve a list of phone numbers associated to orders",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/number_order_phone_numbers/{number_order_phone_number_id}",
      "method": "retrieveNumberOrderPhoneNumber",
      "httpMethod": "get",
      "tag": "Number Orders",
      "description": "Retrieve a number order phone number.",
      "parameters": [
        {
          "name": "numberOrderPhoneNumberId",
          "schema": "string",
          "required": true,
          "description": "The number order phone number ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/number_order_phone_numbers/{number_order_phone_number_id}",
      "method": "updateNumberOrderPhoneNumber",
      "httpMethod": "patch",
      "tag": "Number Orders",
      "description": "Update a number order phone number.",
      "parameters": [
        {
          "name": "numberOrderPhoneNumberId",
          "schema": "string",
          "required": true,
          "description": "The number order phone number ID."
        },
        {
          "name": "regulatory_requirements",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/number_orders",
      "method": "listNumberOrders",
      "httpMethod": "get",
      "tag": "Number Orders",
      "description": "List number orders",
      "parameters": [
        {
          "name": "filter[status]",
          "schema": "string",
          "description": "Filter number orders by status."
        },
        {
          "name": "filter[createdAt][gt]",
          "schema": "string",
          "description": "Filter number orders later than this value."
        },
        {
          "name": "filter[createdAt][lt]",
          "schema": "string",
          "description": "Filter number orders earlier than this value."
        },
        {
          "name": "filter[phoneNumbersCount]",
          "schema": "string",
          "description": "Filter number order with this amount of numbers"
        },
        {
          "name": "filter[customerReference]",
          "schema": "string",
          "description": "Filter number orders via the customer reference set."
        },
        {
          "name": "filter[requirementsMet]",
          "schema": "boolean",
          "description": "Filter number orders by requirements met."
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/number_orders",
      "method": "createNumberOrder",
      "httpMethod": "post",
      "tag": "Number Orders",
      "description": "Create a number order",
      "parameters": [
        {
          "name": "billing_group_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "connection_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "customer_reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "messaging_profile_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phone_numbers",
          "schema": "array",
          "description": ""
        },
        {
          "name": "phone_numbers_count",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "record_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "requirements_met",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/number_orders/{number_order_id}",
      "method": "retrieveNumberOrder",
      "httpMethod": "get",
      "tag": "Number Orders",
      "description": "Retrieve a number order",
      "parameters": [
        {
          "name": "numberOrderId",
          "schema": "string",
          "required": true,
          "description": "The number order ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/number_orders/{number_order_id}",
      "method": "updateNumberOrder",
      "httpMethod": "patch",
      "tag": "Number Orders",
      "description": "Update a number order",
      "parameters": [
        {
          "name": "numberOrderId",
          "schema": "string",
          "required": true,
          "description": "The number order ID."
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "customer_reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phone_numbers",
          "schema": "array",
          "description": ""
        },
        {
          "name": "phone_numbers_count",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "record_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "requirements_met",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/number_reservations",
      "method": "listNumberReservations",
      "httpMethod": "get",
      "tag": "Number Reservations",
      "description": "List number reservations",
      "parameters": [
        {
          "name": "filter[status]",
          "schema": "string",
          "description": "Filter number reservations by status."
        },
        {
          "name": "filter[createdAt][gt]",
          "schema": "string",
          "description": "Filter number reservations later than this value."
        },
        {
          "name": "filter[createdAt][lt]",
          "schema": "string",
          "description": "Filter number reservations earlier than this value."
        },
        {
          "name": "filter[phoneNumbersPhoneNumber]",
          "schema": "string",
          "description": "Filter number reservations having these phone numbers."
        },
        {
          "name": "filter[customerReference]",
          "schema": "string",
          "description": "Filter number reservations via the customer reference set."
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/number_reservations",
      "method": "createNumberReservation",
      "httpMethod": "post",
      "tag": "Number Reservations",
      "description": "Create a number reservation",
      "parameters": [
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "customer_reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phone_numbers",
          "schema": "array",
          "description": ""
        },
        {
          "name": "record_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/number_reservations/{number_reservation_id}",
      "method": "retrieveNumberReservation",
      "httpMethod": "get",
      "tag": "Number Reservations",
      "description": "Retrieve a number reservation",
      "parameters": [
        {
          "name": "numberReservationId",
          "schema": "string",
          "required": true,
          "description": "The number reservation ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/number_reservations/{number_reservation_id}/actions/extend",
      "method": "extendNumberReservationExpiryTime",
      "httpMethod": "post",
      "tag": "Number Reservations",
      "description": "Extend a number reservation",
      "parameters": [
        {
          "name": "numberReservationId",
          "schema": "string",
          "required": true,
          "description": "The number reservation ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/ota_updates",
      "method": "otaUpdatesList",
      "httpMethod": "get",
      "tag": "OTA updates",
      "description": "List OTA updates",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[status]",
          "schema": "string",
          "required": false,
          "description": "Filter by a specific status of the resource's lifecycle."
        },
        {
          "name": "filter[simCardId]",
          "schema": "string",
          "required": false,
          "description": "The SIM card identification UUID."
        },
        {
          "name": "filter[type]",
          "schema": "string",
          "required": false,
          "description": "Filter by type."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/ota_updates/{id}",
      "method": "otaUpdateGet",
      "httpMethod": "get",
      "tag": "OTA updates",
      "description": "Get OTA update",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/outbound_voice_profiles",
      "method": "listOutboundVoiceProfiles",
      "httpMethod": "get",
      "tag": "Outbound Voice Profiles",
      "description": "Get all outbound voice profiles",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[name][contains]",
          "schema": "string",
          "description": "Optional filter on outbound voice profile name."
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Specifies the sort order for results. By default sorting direction is ascending. To have the results sorted in descending order add the <code>-</code> prefix.<br/><br/>\nThat is: <ul>\n  <li>\n    <code>name</code>: sorts the result by the\n    <code>name</code> field in ascending order.\n  </li>\n\n  <li>\n    <code>-name</code>: sorts the result by the\n    <code>name</code> field in descending order.\n  </li>\n</ul> <br/>"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/outbound_voice_profiles",
      "method": "createOutboundVoiceProfile",
      "httpMethod": "post",
      "tag": "Outbound Voice Profiles",
      "description": "Create an outbound voice profile",
      "parameters": [
        {
          "name": "billing_group_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "call_recording",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "concurrent_call_limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "daily_spend_limit",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "daily_spend_limit_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "max_destination_rate",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "service_plan",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "traffic_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "usage_payment_method",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "whitelisted_destinations",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/outbound_voice_profiles/{id}",
      "method": "deleteOutboundVoiceProfile",
      "httpMethod": "delete",
      "tag": "Outbound Voice Profiles",
      "description": "Delete an outbound voice profile",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/outbound_voice_profiles/{id}",
      "method": "retrieveOutboundVoiceProfile",
      "httpMethod": "get",
      "tag": "Outbound Voice Profiles",
      "description": "Retrieve an outbound voice profile",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/outbound_voice_profiles/{id}",
      "method": "updateOutboundVoiceProfile",
      "httpMethod": "patch",
      "tag": "Outbound Voice Profiles",
      "description": "Updates an existing outbound voice profile.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        },
        {
          "name": "billing_group_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "call_recording",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "concurrent_call_limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "daily_spend_limit",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "daily_spend_limit_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "max_destination_rate",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "service_plan",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "traffic_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "usage_payment_method",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "whitelisted_destinations",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_number_blocks/jobs",
      "method": "listPhoneNumberBlocksJobs",
      "httpMethod": "get",
      "tag": "Number Blocks Background Jobs",
      "description": "Lists the phone number blocks jobs",
      "parameters": [
        {
          "name": "filter[type]",
          "schema": "string",
          "description": "Filter the phone number blocks jobs by type."
        },
        {
          "name": "filter[status]",
          "schema": "string",
          "description": "Filter the phone number blocks jobs by status."
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Specifies the sort order for results. If not given, results are sorted by created_at in descending order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_number_blocks/jobs/delete_phone_number_block",
      "method": "createPhoneNumberBlocksJobDeletePhoneNumberBlock",
      "httpMethod": "post",
      "tag": "Number Blocks Background Jobs",
      "description": "Deletes all numbers associated with a phone number block",
      "parameters": [
        {
          "name": "phone_number_block_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_number_blocks/jobs/{id}",
      "method": "retrievePhoneNumberBlocksJob",
      "httpMethod": "get",
      "tag": "Number Blocks Background Jobs",
      "description": "Retrieves a phone number blocks job",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the Phone Number Blocks Job."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_numbers",
      "method": "listPhoneNumbers",
      "httpMethod": "get",
      "tag": "Number Configurations",
      "description": "List phone numbers",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[tag]",
          "schema": "string",
          "required": false,
          "description": "Filter by phone number tags."
        },
        {
          "name": "filter[phoneNumber]",
          "schema": "string",
          "required": false,
          "description": "Filter by phone number. Requires at least three digits.\n             Non-numerical characters will result in no values being returned."
        },
        {
          "name": "filter[status]",
          "schema": "string",
          "required": false,
          "description": "Filter by phone number status."
        },
        {
          "name": "filter[voiceConnectionName][contains]",
          "schema": "string",
          "required": false,
          "description": "Filter contains connection name. Requires at least three characters."
        },
        {
          "name": "filter[voiceConnectionName][startsWith]",
          "schema": "string",
          "required": false,
          "description": "Filter starts with connection name. Requires at least three characters."
        },
        {
          "name": "filter[voiceConnectionName][endsWith]",
          "schema": "string",
          "required": false,
          "description": "Filter ends with connection name. Requires at least three characters."
        },
        {
          "name": "filter[voiceConnectionName][eq]",
          "schema": "string",
          "required": false,
          "description": "Filter by connection name."
        },
        {
          "name": "filter[usagePaymentMethod]",
          "schema": "string",
          "required": false,
          "description": "Filter by usage_payment_method."
        },
        {
          "name": "filter[billingGroupId]",
          "schema": "string",
          "required": false,
          "description": "Filter by the billing_group_id associated with phone numbers. To filter to only phone numbers that have no billing group associated them, set the value of this filter to the string 'null'."
        },
        {
          "name": "filter[emergencyAddressId]",
          "schema": "string",
          "required": false,
          "description": "Filter by the emergency_address_id associated with phone numbers. To filter only phone numbers that have no emergency address associated with them, set the value of this filter to the string 'null'."
        },
        {
          "name": "filter[customerReference]",
          "schema": "string",
          "description": "Filter numbers via the customer_reference set."
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Specifies the sort order for results. If not given, results are sorted by created_at in descending order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_numbers/csv_downloads",
      "method": "listCsvDownloads",
      "httpMethod": "get",
      "tag": "CSV Downloads",
      "description": "List CSV downloads",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_numbers/csv_downloads",
      "method": "createCsvDownload",
      "httpMethod": "post",
      "tag": "CSV Downloads",
      "description": "Create a CSV download",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_numbers/csv_downloads/{id}",
      "method": "retrieveCsvDownload",
      "httpMethod": "get",
      "tag": "CSV Downloads",
      "description": "Retrieve a CSV download",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the CSV download."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_numbers/inbound_channels",
      "method": "listOutboundChannels",
      "httpMethod": "get",
      "tag": "Inbound Channels",
      "description": "Retrieve your inbound channels",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_numbers/inbound_channels",
      "method": "updateOutboundChannels",
      "httpMethod": "patch",
      "tag": "Inbound Channels",
      "description": "Update inbound channels",
      "parameters": [
        {
          "name": "channels",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_numbers/jobs",
      "method": "listPhoneNumbersJobs",
      "httpMethod": "get",
      "tag": "Number Background Jobs",
      "description": "Lists the phone numbers jobs",
      "parameters": [
        {
          "name": "filter[type]",
          "schema": "string",
          "description": "Filter the phone number jobs by type."
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Specifies the sort order for results. If not given, results are sorted by created_at in descending order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_numbers/jobs/delete_phone_numbers",
      "method": "createPhoneNumbersJobDeletePhoneNumbers",
      "httpMethod": "post",
      "tag": "Number Background Jobs",
      "description": "Delete a batch of numbers",
      "parameters": [
        {
          "name": "phone_numbers",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_numbers/jobs/update_emergency_settings",
      "method": "createPhoneNumbersJobUpdateEmergencySettings",
      "httpMethod": "post",
      "tag": "Number Background Jobs",
      "description": "Update the emergency settings from a batch of numbers",
      "parameters": [
        {
          "name": "emergency_address_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "emergency_enabled",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "phone_numbers",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_numbers/jobs/update_phone_numbers",
      "method": "createPhoneNumbersJobUpdatePhoneNumber",
      "httpMethod": "post",
      "tag": "Number Background Jobs",
      "description": "Update a batch of numbers",
      "parameters": [
        {
          "name": "billing_group_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "connection_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "customer_reference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "external_pin",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "phone_numbers",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_numbers/jobs/{id}",
      "method": "retrievePhoneNumbersJob",
      "httpMethod": "get",
      "tag": "Number Background Jobs",
      "description": "Retrieve a phone numbers job",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the Phone Numbers Job."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_numbers/messaging",
      "method": "listPhoneNumbersWithMessagingSettings",
      "httpMethod": "get",
      "tag": "Number Configurations",
      "description": "List phone numbers with messaging settings",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_numbers/voice",
      "method": "listPhoneNumbersWithVoiceSettings",
      "httpMethod": "get",
      "tag": "Number Configurations",
      "description": "List phone numbers with voice settings",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[phoneNumber]",
          "schema": "string",
          "required": false,
          "description": "Filter by phone number. Requires at least three digits.\n             Non-numerical characters will result in no values being returned."
        },
        {
          "name": "filter[connectionName][contains]",
          "schema": "string",
          "required": false,
          "description": "Filter contains connection name. Requires at least three characters."
        },
        {
          "name": "filter[customerReference]",
          "schema": "string",
          "description": "Filter numbers via the customer_reference set."
        },
        {
          "name": "filter[usagePaymentMethod]",
          "schema": "string",
          "required": false,
          "description": "Filter by usage_payment_method."
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Specifies the sort order for results. If not given, results are sorted by created_at in descending order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_numbers/{id}",
      "method": "deletePhoneNumber",
      "httpMethod": "delete",
      "tag": "Number Configurations",
      "description": "Delete a phone number",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_numbers/{id}",
      "method": "retrievePhoneNumber",
      "httpMethod": "get",
      "tag": "Number Configurations",
      "description": "Retrieve a phone number",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_numbers/{id}",
      "method": "updatePhoneNumber",
      "httpMethod": "patch",
      "tag": "Number Configurations",
      "description": "Update a phone number",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        },
        {
          "name": "billing_group_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "connection_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "customer_reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "external_pin",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "number_level_routing",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_numbers/{id}/actions/enable_emergency",
      "method": "enableEmergencyPhoneNumber",
      "httpMethod": "post",
      "tag": "Number Configurations",
      "description": "Enable emergency for a phone number",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        },
        {
          "name": "emergency_address_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "emergency_enabled",
          "schema": "boolean",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_numbers/{id}/messaging",
      "method": "retrievePhoneNumberWithMessagingSettings",
      "httpMethod": "get",
      "tag": "Number Configurations",
      "description": "Retrieve a phone number with messaging settings",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the type of resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_numbers/{id}/messaging",
      "method": "updatePhoneNumberWithMessagingSettings",
      "httpMethod": "patch",
      "tag": "Number Configurations",
      "description": "Update a phone number with messaging settings",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the type of resource."
        },
        {
          "name": "messaging_product",
          "schema": "string",
          "description": ""
        },
        {
          "name": "messaging_profile_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_numbers/{id}/voice",
      "method": "retrievePhoneNumberWithVoiceSettings",
      "httpMethod": "get",
      "tag": "Number Configurations",
      "description": "Retrieve a phone number with voice settings",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/phone_numbers/{id}/voice",
      "method": "updatePhoneNumberWithVoiceSettings",
      "httpMethod": "patch",
      "tag": "Number Configurations",
      "description": "Update a phone number with voice settings",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        },
        {
          "name": "call_forwarding",
          "schema": "object",
          "description": ""
        },
        {
          "name": "call_recording",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cnam_listing",
          "schema": "object",
          "description": ""
        },
        {
          "name": "media_features",
          "schema": "object",
          "description": ""
        },
        {
          "name": "tech_prefix_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "translated_number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "usage_payment_method",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/portability_checks",
      "method": "postPortabilityCheck",
      "httpMethod": "post",
      "tag": "Phone Number Porting",
      "description": "Run a portability check",
      "parameters": [
        {
          "name": "phone_numbers",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/porting_orders",
      "method": "listPortingOrders",
      "httpMethod": "get",
      "tag": "Porting Order",
      "description": "List all porting orders",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "includePhoneNumbers",
          "schema": "boolean",
          "required": false,
          "description": "Include the first 50 phone number objects in the results"
        },
        {
          "name": "filter[status]",
          "schema": "object",
          "description": "Filter results by status"
        },
        {
          "name": "filter[customerReference]",
          "schema": "string",
          "description": "Filter results by user reference"
        },
        {
          "name": "filter[phoneNumbers][countryCode]",
          "schema": "string",
          "description": "Filter results by country ISO 3166-1 alpha-2 code"
        },
        {
          "name": "filter[phoneNumbers][carrierName]",
          "schema": "string",
          "description": "Filter results by old service provider"
        },
        {
          "name": "filter[misc][type]",
          "schema": "string",
          "description": "Filter results by porting order type"
        },
        {
          "name": "filter[endUser][admin][entityName]",
          "schema": "string",
          "description": "Filter results by person or company name"
        },
        {
          "name": "filter[endUser][admin][authPersonName]",
          "schema": "string",
          "description": "Filter results by authorized person"
        },
        {
          "name": "filter[activationSettings][fastPortEligible]",
          "schema": "boolean",
          "description": "Filter results by fast port eligible"
        },
        {
          "name": "filter[activationSettings][focDatetimeRequested][gt]",
          "schema": "string",
          "description": "Filter results by foc date later than this value"
        },
        {
          "name": "filter[activationSettings][focDatetimeRequested][lt]",
          "schema": "string",
          "description": "Filter results by foc date earlier than this value"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Specifies the sort order for results. If not given, results are sorted by created_at in descending order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/porting_orders",
      "method": "createPortingOrder",
      "httpMethod": "post",
      "tag": "Porting Order",
      "description": "Create a porting order",
      "parameters": [
        {
          "name": "phone_numbers",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/porting_orders/exception_types",
      "method": "listPortingOrdersExceptionTypes",
      "httpMethod": "get",
      "tag": "Porting Order",
      "description": "List all exception types",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/porting_orders/{id}",
      "method": "deletePortingOrder",
      "httpMethod": "delete",
      "tag": "Porting Order",
      "description": "Request cancellation",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Porting Order id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/porting_orders/{id}",
      "method": "getPortingOrder",
      "httpMethod": "get",
      "tag": "Porting Order",
      "description": "Retrieve a porting order",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Porting Order id"
        },
        {
          "name": "includePhoneNumbers",
          "schema": "boolean",
          "required": false,
          "description": "Include the first 50 phone number objects in the results"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/porting_orders/{id}",
      "method": "updatePortingOrder",
      "httpMethod": "patch",
      "tag": "Porting Order",
      "description": "Edit a porting order",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Porting Order id"
        },
        {
          "name": "activation_settings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customer_reference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "end_user",
          "schema": "object",
          "description": ""
        },
        {
          "name": "misc",
          "schema": "object",
          "description": ""
        },
        {
          "name": "phone_number_configuration",
          "schema": "object",
          "description": ""
        },
        {
          "name": "requirements",
          "schema": "array",
          "description": ""
        },
        {
          "name": "user_feedback",
          "schema": "object",
          "description": ""
        },
        {
          "name": "webhook_url",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/porting_orders/{id}/actions/activate",
      "method": "activatePortingOrder",
      "httpMethod": "post",
      "tag": "Porting Order",
      "description": "Activates every number on a porting order.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Porting Order id"
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/porting_orders/{id}/actions/cancel",
      "method": "cancelPortingOrder",
      "httpMethod": "post",
      "tag": "Porting Order",
      "description": "Cancel this porting order",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Porting Order id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/porting_orders/{id}/actions/confirm",
      "method": "confirmPortingOrder",
      "httpMethod": "post",
      "tag": "Porting Order",
      "description": "Confirms the porting order is ready to be actioned.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Porting Order id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/porting_orders/{id}/activation_jobs",
      "method": "listPortingOrdersActivationJobs",
      "httpMethod": "get",
      "tag": "Porting Order",
      "description": "List all porting activation jobs",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Porting Order id"
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/porting_orders/{id}/activation_jobs/{activationJobId}",
      "method": "getPortingOrdersActivationJob",
      "httpMethod": "get",
      "tag": "Porting Order",
      "description": "Retrieve a porting activation job",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Porting Order id"
        },
        {
          "name": "activationJobId",
          "schema": "string",
          "required": true,
          "description": "Activation Job Identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/porting_orders/{id}/comments",
      "method": "listPortingOrdersComments",
      "httpMethod": "get",
      "tag": "Porting Order",
      "description": "List all comments of a porting order",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Porting Order id"
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/porting_orders/{id}/comments",
      "method": "createPortingOrderComment",
      "httpMethod": "post",
      "tag": "Porting Order",
      "description": "Create a comment for a porting order",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Porting Order id"
        },
        {
          "name": "body",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/porting_orders/{id}/loa_template",
      "method": "getPortingOrderLoaTemplate",
      "httpMethod": "get",
      "tag": "Porting Order",
      "description": "Download a porting order loa template",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Porting Order id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/porting_phone_numbers",
      "method": "/portingPhoneNumbersGet",
      "httpMethod": "get",
      "tag": "Porting Order",
      "description": "List all porting phone numbers",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[portingOrderId]",
          "schema": "string",
          "description": "Filter results by porting order id"
        },
        {
          "name": "filter[phoneNumber]",
          "schema": "string",
          "description": "Filter results by phone number"
        },
        {
          "name": "filter[activationStatus]",
          "schema": "string",
          "description": "Filter results by activation status"
        },
        {
          "name": "filter[portabilityStatus]",
          "schema": "string",
          "description": "Filter results by portability status"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/portouts",
      "method": "listPortoutRequest",
      "httpMethod": "get",
      "tag": "Number Portout",
      "description": "Retrieve a list of portout requests",
      "parameters": [
        {
          "name": "filter[carrierName]",
          "schema": "string",
          "required": false,
          "description": "Filter by new carrier name."
        },
        {
          "name": "filter[spid]",
          "schema": "string",
          "required": false,
          "description": "Filter by new carrier spid."
        },
        {
          "name": "filter[status]",
          "schema": "string",
          "required": false,
          "description": "Filter by portout status."
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/portouts/{id}",
      "method": "findPortoutRequest",
      "httpMethod": "get",
      "tag": "Number Portout",
      "description": "Retrieve a portout request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Portout id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/portouts/{id}/comments",
      "method": "findPortoutComments",
      "httpMethod": "get",
      "tag": "Number Portout",
      "description": "List all comments for a portout request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Portout id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/portouts/{id}/comments",
      "method": "postPortRequestComment",
      "httpMethod": "post",
      "tag": "Number Portout",
      "description": "Create a comment on a portout request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Portout id"
        },
        {
          "name": "body",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/portouts/{id}/{status}",
      "method": "updatePortoutRequest",
      "httpMethod": "patch",
      "tag": "Number Portout",
      "description": "Update Status",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Portout id"
        },
        {
          "name": "status",
          "schema": "string",
          "required": true,
          "description": "Updated portout status"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/private_wireless_gateways",
      "method": "getPrivateWirelessGateways",
      "httpMethod": "get",
      "tag": "Private Wireless Gateways",
      "description": "Get all Private Wireless Gateways",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[name]",
          "schema": "string",
          "required": false,
          "description": "The name of the Private Wireless Gateway."
        },
        {
          "name": "filter[ipRange]",
          "schema": "string",
          "required": false,
          "description": "The IP address range of the Private Wireless Gateway."
        },
        {
          "name": "filter[regionCode]",
          "schema": "string",
          "required": false,
          "description": "The name of the region where the Private Wireless Gateway is deployed."
        },
        {
          "name": "filter[createdAt]",
          "schema": "string",
          "required": false,
          "description": "Private Wireless Gateway resource creation date."
        },
        {
          "name": "filter[updatedAt]",
          "schema": "string",
          "required": false,
          "description": "When the Private Wireless Gateway was last updated."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/private_wireless_gateways",
      "method": "createPrivateWirelessGateway",
      "httpMethod": "post",
      "tag": "Private Wireless Gateways",
      "description": "Create a Private Wireless Gateway",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "network_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/private_wireless_gateways/{id}",
      "method": "deletePrivateWirelessGateway",
      "httpMethod": "delete",
      "tag": "Private Wireless Gateways",
      "description": "Delete a Private Wireless Gateway",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/private_wireless_gateways/{id}",
      "method": "getPrivateWirelessGateway",
      "httpMethod": "get",
      "tag": "Private Wireless Gateways",
      "description": "Get a Private Wireless Gateway",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/queues/{queue_name}",
      "method": "retrieveCallQueue",
      "httpMethod": "get",
      "tag": "Queue Commands",
      "description": "Retrieve a call queue",
      "parameters": [
        {
          "name": "queueName",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies the queue by name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/queues/{queue_name}/calls",
      "method": "listQueueCalls",
      "httpMethod": "get",
      "tag": "Queue Commands",
      "description": "Retrieve calls from a queue",
      "parameters": [
        {
          "name": "queueName",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies the queue by name"
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/queues/{queue_name}/calls/{call_control_id}",
      "method": "retrieveCallFromQueue",
      "httpMethod": "get",
      "tag": "Queue Commands",
      "description": "Retrieve a call from a queue",
      "parameters": [
        {
          "name": "queueName",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies the queue by name"
        },
        {
          "name": "callControlId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier and token for controlling the call"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/recordings",
      "method": "listRecordings",
      "httpMethod": "get",
      "tag": "Recordings Commands",
      "description": "List recordings",
      "parameters": [
        {
          "name": "filter[conferenceId]",
          "schema": "string",
          "required": false,
          "description": "Return only recordings associated with a given conference"
        },
        {
          "name": "filter[createdAt][gte]",
          "schema": "string",
          "required": false,
          "description": "Return only recordings created later than or at given ISO 8601 datetime"
        },
        {
          "name": "filter[createdAt][lte]",
          "schema": "string",
          "required": false,
          "description": "Return only recordings created earlier than or at given ISO 8601 datetime"
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/recordings/{id}",
      "method": "retrieveRecording",
      "httpMethod": "get",
      "tag": "Recordings Commands",
      "description": "Retrieve a recording",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies the recording"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/reports/batch_mdr_reports",
      "method": "getCdrRequests",
      "httpMethod": "get",
      "tag": "MDR Detail Reports",
      "description": "Fetch all previous requests for messaging detail reports. Messaging detail reports are reports for pulling all messaging records. ",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "Page number"
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "Size of the page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/reports/batch_mdr_reports",
      "method": "submitMdrRequest",
      "httpMethod": "post",
      "tag": "MDR Detail Reports",
      "description": "Submit a request for new messaging detail report. Messaging detail report pulls all raw messaging data according to defined filters.",
      "parameters": [
        {
          "name": "connections",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "directions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "end_date",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "filters",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "include_message_body",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "profiles",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "record_types",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "report_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "start_date",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/reports/batch_mdr_reports/{id}",
      "method": "deleteMdrRequest",
      "httpMethod": "delete",
      "tag": "MDR Detail Reports",
      "description": "Delete generated messaging detail report by id",
      "parameters": [
        {
          "name": "id",
          "schema": "undefined",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/reports/batch_mdr_reports/{id}",
      "method": "getMdrRequest",
      "httpMethod": "get",
      "tag": "MDR Detail Reports",
      "description": "Fetch single messaging detail report by id.",
      "parameters": [
        {
          "name": "id",
          "schema": "undefined",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/reports/cdr_usage_reports/sync",
      "method": "getUsageReportSync",
      "httpMethod": "get",
      "tag": "CDR Usage Reports",
      "description": "Generate and fetch voice usage report synchronously. This endpoint will both generate and fetch the voice report over a specified time period. No polling is necessary but the response may take up to a couple of minutes. ",
      "parameters": [
        {
          "name": "startDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "endDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "aggregationType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "productBreakdown",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "connections",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/reports/mdr_usage_reports",
      "method": "getUsageReports",
      "httpMethod": "get",
      "tag": "MDR Usage Reports",
      "description": "Fetch all messaging usage reports. Usage reports are aggregated messaging data for specified time period and breakdown",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "Page number"
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "Size of the page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/reports/mdr_usage_reports",
      "method": "submitUsageReport",
      "httpMethod": "post",
      "tag": "MDR Usage Reports",
      "description": "Submit request for new new messaging usage report. This endpoint will pull and aggregate messaging data in specified time period. ",
      "parameters": [
        {
          "name": "aggregation_type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "end_date",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "profiles",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "start_date",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/reports/mdr_usage_reports/sync",
      "method": "getUsageReportSync1",
      "httpMethod": "get",
      "tag": "MDR Usage Reports",
      "description": "Generate and fetch messaging usage report synchronously. This endpoint will both generate and fetch the messaging report over a specified time period. No polling is necessary but the response may take up to a couple of minutes. ",
      "parameters": [
        {
          "name": "startDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "endDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "aggregationType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "profiles",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/reports/mdr_usage_reports/{id}",
      "method": "deleteUsageReport",
      "httpMethod": "delete",
      "tag": "MDR Usage Reports",
      "description": "Delete messaging usage report by id",
      "parameters": [
        {
          "name": "id",
          "schema": "undefined",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/reports/mdr_usage_reports/{id}",
      "method": "getUsageReport",
      "httpMethod": "get",
      "tag": "MDR Usage Reports",
      "description": "Fetch a single messaging usage report by id",
      "parameters": [
        {
          "name": "id",
          "schema": "undefined",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/reports/mdrs",
      "method": "/reports/mdrsGet",
      "httpMethod": "get",
      "tag": "MDR Detail Reports",
      "description": "Fetch all Mdr records ",
      "parameters": [
        {
          "name": "startDate",
          "schema": "string",
          "description": "Pagination start date"
        },
        {
          "name": "endDate",
          "schema": "string",
          "description": "Pagination end date"
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "direction",
          "schema": "string",
          "description": ""
        },
        {
          "name": "profile",
          "schema": "string",
          "description": ""
        },
        {
          "name": "cld",
          "schema": "string",
          "description": ""
        },
        {
          "name": "cli",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "messageType",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/reports/wdrs",
      "method": "getPaginatedWdrs",
      "httpMethod": "get",
      "tag": "WDR Detail Reports",
      "description": "Fetch all Wdr records ",
      "parameters": [
        {
          "name": "startDate",
          "schema": "string",
          "description": "Start date"
        },
        {
          "name": "endDate",
          "schema": "string",
          "description": "End date"
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mcc",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mnc",
          "schema": "string",
          "description": ""
        },
        {
          "name": "imsi",
          "schema": "string",
          "description": ""
        },
        {
          "name": "simGroupName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "simGroupId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "simCardId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phoneNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "Page number"
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "Size of the page"
        },
        {
          "name": "sort",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/requirement_types",
      "method": "docReqsListRequirementTypes",
      "httpMethod": "get",
      "tag": "Requirement Types",
      "description": "List all requirement types",
      "parameters": [
        {
          "name": "filter[name][contains]",
          "schema": "string",
          "description": "Filters requirement types to those whose name contains a certain string."
        },
        {
          "name": "sort[]",
          "schema": "string",
          "required": false,
          "description": "Specifies the sort order for results. If you want to sort by a field in ascending order, include it as a sort parameter. If you want to sort in descending order, prepend a `-` in front of the field name."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/requirement_types/{id}",
      "method": "docReqsRetrieveRequirementType",
      "httpMethod": "get",
      "tag": "Requirement Types",
      "description": "Retrieve a requirement types",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies the requirement_type record"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/requirements",
      "method": "listRequirements",
      "httpMethod": "get",
      "tag": "Requirements",
      "description": "List all requirements",
      "parameters": [
        {
          "name": "filter[countryCode]",
          "schema": "string",
          "description": "Filters results to those applying to a 2-character (ISO 3166-1 alpha-2) country code"
        },
        {
          "name": "filter[phoneNumberType]",
          "schema": "string",
          "description": "Filters results to those applying to a specific `phone_number_type`"
        },
        {
          "name": "filter[action]",
          "schema": "string",
          "description": "Filters requirements to those applying to a specific action."
        },
        {
          "name": "sort[]",
          "schema": "string",
          "required": false,
          "description": "Specifies the sort order for results. If you want to sort by a field in ascending order, include it as a sort parameter. If you want to sort in descending order, prepend a `-` in front of the field name."
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/requirements/{id}",
      "method": "docReqsRetrieveDocumentRequirements",
      "httpMethod": "get",
      "tag": "Requirements",
      "description": "Retrieve a document requirement",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies the requirement_type record"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/room_participants",
      "method": "listRoomParticipants",
      "httpMethod": "get",
      "tag": "Room Participants",
      "description": "View a list of room participants.",
      "parameters": [
        {
          "name": "filter[dateJoinedAt][eq]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room participants that joined on that date."
        },
        {
          "name": "filter[dateJoinedAt][gte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room participants that joined after that date."
        },
        {
          "name": "filter[dateJoinedAt][lte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room participants that joined before that date."
        },
        {
          "name": "filter[dateUpdatedAt][eq]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room participants updated on that date."
        },
        {
          "name": "filter[dateUpdatedAt][gte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room participants updated after that date."
        },
        {
          "name": "filter[dateUpdatedAt][lte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room participants updated before that date."
        },
        {
          "name": "filter[dateLeftAt][eq]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room participants that left on that date."
        },
        {
          "name": "filter[dateLeftAt][gte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room participants that left after that date."
        },
        {
          "name": "filter[dateLeftAt][lte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room participants that left before that date."
        },
        {
          "name": "filter[context]",
          "schema": "string",
          "description": "Filter room participants based on the context."
        },
        {
          "name": "filter[sessionId]",
          "schema": "string",
          "description": "Session_id for filtering room participants."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/room_participants/{room_participant_id}",
      "method": "viewRoomParticipant",
      "httpMethod": "get",
      "tag": "Room Participants",
      "description": "View a room participant.",
      "parameters": [
        {
          "name": "roomParticipantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of a room participant."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/room_sessions",
      "method": "listRoomSessions",
      "httpMethod": "get",
      "tag": "Room Sessions",
      "description": "View a list of room sessions.",
      "parameters": [
        {
          "name": "filter[dateCreatedAt][eq]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room sessions created on that date."
        },
        {
          "name": "filter[dateCreatedAt][gte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room sessions created after that date."
        },
        {
          "name": "filter[dateCreatedAt][lte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room sessions created before that date."
        },
        {
          "name": "filter[dateUpdatedAt][eq]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room sessions updated on that date."
        },
        {
          "name": "filter[dateUpdatedAt][gte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room sessions updated after that date."
        },
        {
          "name": "filter[dateUpdatedAt][lte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room sessions updated before that date."
        },
        {
          "name": "filter[dateEndedAt][eq]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room sessions ended on that date."
        },
        {
          "name": "filter[dateEndedAt][gte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room sessions ended after that date."
        },
        {
          "name": "filter[dateEndedAt][lte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room sessions ended before that date."
        },
        {
          "name": "filter[roomId]",
          "schema": "string",
          "description": "Room_id for filtering room sessions."
        },
        {
          "name": "filter[active]",
          "schema": "boolean",
          "description": "Filter active or inactive room sessions."
        },
        {
          "name": "includeParticipants",
          "schema": "boolean",
          "description": "To decide if room participants should be included in the response."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/room_sessions/{room_session_id}",
      "method": "viewRoomSession",
      "httpMethod": "get",
      "tag": "Room Sessions",
      "description": "View a room session.",
      "parameters": [
        {
          "name": "roomSessionId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of a room session."
        },
        {
          "name": "includeParticipants",
          "schema": "boolean",
          "description": "To decide if room participants should be included in the response."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/room_sessions/{room_session_id}/participants",
      "method": "nestedListRoomParticipants",
      "httpMethod": "get",
      "tag": "Room Sessions",
      "description": "View a list of room participants.",
      "parameters": [
        {
          "name": "roomSessionId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of a room session."
        },
        {
          "name": "filter[dateJoinedAt][eq]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room participants that joined on that date."
        },
        {
          "name": "filter[dateJoinedAt][gte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room participants that joined after that date."
        },
        {
          "name": "filter[dateJoinedAt][lte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room participants that joined before that date."
        },
        {
          "name": "filter[dateUpdatedAt][eq]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room participants updated on that date."
        },
        {
          "name": "filter[dateUpdatedAt][gte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room participants updated after that date."
        },
        {
          "name": "filter[dateUpdatedAt][lte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room participants updated before that date."
        },
        {
          "name": "filter[dateLeftAt][eq]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room participants that left on that date."
        },
        {
          "name": "filter[dateLeftAt][gte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room participants that left after that date."
        },
        {
          "name": "filter[dateLeftAt][lte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room participants that left before that date."
        },
        {
          "name": "filter[context]",
          "schema": "string",
          "description": "Filter room participants based on the context."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms",
      "method": "listRooms",
      "httpMethod": "get",
      "tag": "Rooms",
      "description": "View a list of rooms.",
      "parameters": [
        {
          "name": "filter[dateCreatedAt][eq]",
          "schema": "string",
          "description": "ISO 8601 date for filtering rooms created on that date."
        },
        {
          "name": "filter[dateCreatedAt][gte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering rooms created after that date."
        },
        {
          "name": "filter[dateCreatedAt][lte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering rooms created before that date."
        },
        {
          "name": "filter[dateUpdatedAt][eq]",
          "schema": "string",
          "description": "ISO 8601 date for filtering rooms updated on that date."
        },
        {
          "name": "filter[dateUpdatedAt][gte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering rooms updated after that date."
        },
        {
          "name": "filter[dateUpdatedAt][lte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering rooms updated before that date."
        },
        {
          "name": "filter[uniqueName]",
          "schema": "string",
          "description": "Unique_name for filtering rooms."
        },
        {
          "name": "includeSessions",
          "schema": "boolean",
          "description": "To decide if room sessions should be included in the response."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms",
      "method": "createRoom",
      "httpMethod": "post",
      "tag": "Rooms",
      "description": "Create a room.",
      "parameters": [
        {
          "name": "max_participants",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "unique_name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/{room_id}",
      "method": "deleteRoom",
      "httpMethod": "delete",
      "tag": "Rooms",
      "description": "Delete a room.",
      "parameters": [
        {
          "name": "roomId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of a room."
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/{room_id}",
      "method": "viewRoom",
      "httpMethod": "get",
      "tag": "Rooms",
      "description": "View a room.",
      "parameters": [
        {
          "name": "roomId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of a room."
        },
        {
          "name": "includeSessions",
          "schema": "boolean",
          "description": "To decide if room sessions should be included in the response."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/{room_id}/actions/generate_join_client_token",
      "method": "createRoomClientToken",
      "httpMethod": "post",
      "tag": "Rooms Client Tokens",
      "description": "Create Client Token to join a room.",
      "parameters": [
        {
          "name": "roomId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of a room."
        },
        {
          "name": "refresh_token_ttl_secs",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "token_ttl_secs",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/{room_id}/actions/refresh_client_token",
      "method": "refreshRoomClientToken",
      "httpMethod": "post",
      "tag": "Rooms Client Tokens",
      "description": "Refresh Client Token to join a room.",
      "parameters": [
        {
          "name": "roomId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of a room."
        },
        {
          "name": "refresh_token",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "token_ttl_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/rooms/{room_id}/sessions",
      "method": "nestedListRoomSessions",
      "httpMethod": "get",
      "tag": "Rooms",
      "description": "View a list of room sessions.",
      "parameters": [
        {
          "name": "roomId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of a room."
        },
        {
          "name": "filter[dateCreatedAt][eq]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room sessions created on that date."
        },
        {
          "name": "filter[dateCreatedAt][gte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room sessions created after that date."
        },
        {
          "name": "filter[dateCreatedAt][lte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room sessions created before that date."
        },
        {
          "name": "filter[dateUpdatedAt][eq]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room sessions updated on that date."
        },
        {
          "name": "filter[dateUpdatedAt][gte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room sessions updated after that date."
        },
        {
          "name": "filter[dateUpdatedAt][lte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room sessions updated before that date."
        },
        {
          "name": "filter[dateEndedAt][eq]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room sessions ended on that date."
        },
        {
          "name": "filter[dateEndedAt][gte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room sessions ended after that date."
        },
        {
          "name": "filter[dateEndedAt][lte]",
          "schema": "string",
          "description": "ISO 8601 date for filtering room sessions ended before that date."
        },
        {
          "name": "filter[active]",
          "schema": "boolean",
          "description": "Filter active or inactive room sessions."
        },
        {
          "name": "includeParticipants",
          "schema": "boolean",
          "description": "To decide if room participants should be included in the response."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/short_codes",
      "method": "listShortCodes",
      "httpMethod": "get",
      "tag": "Short Codes",
      "description": "List short codes",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[messagingProfileId]",
          "schema": "string",
          "description": "Filter by Messaging Profile ID. Use the string `null` for phone numbers without assigned profiles. A synonym for the `/messaging_profiles/{id}/short_codes` endpoint when querying about an extant profile."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/short_codes/{id}",
      "method": "retrieveShortCode",
      "httpMethod": "get",
      "tag": "Short Codes",
      "description": "Retrieve a short code",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the short code"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/short_codes/{id}",
      "method": "updateShortCode",
      "httpMethod": "patch",
      "tag": "Short Codes",
      "description": "Update short code",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The id of the short code"
        },
        {
          "name": "messaging_profile_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_card_group_actions",
      "method": "simCardGroupActionsGet",
      "httpMethod": "get",
      "tag": "SIM Card Group Actions",
      "description": "List SIM card group actions",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[simCardGroupId]",
          "schema": "string",
          "description": "A valid SIM card group ID."
        },
        {
          "name": "filter[status]",
          "schema": "string",
          "required": false,
          "description": "Filter by a specific status of the resource's lifecycle."
        },
        {
          "name": "filter[type]",
          "schema": "string",
          "required": false,
          "description": "Filter by action type."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_card_group_actions/{id}",
      "method": "simCardGroupActionGet",
      "httpMethod": "get",
      "tag": "SIM Card Group Actions",
      "description": "Get SIM card group action details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_card_groups",
      "method": "simCardGroupsGetAll",
      "httpMethod": "get",
      "tag": "SIM Card Groups",
      "description": "Get all SIM card groups",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[name]",
          "schema": "string",
          "description": "A valid SIM card group name."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_card_groups",
      "method": "simCardGroupsPost",
      "httpMethod": "post",
      "tag": "SIM Card Groups",
      "description": "Create a SIM card group",
      "parameters": [
        {
          "name": "data_limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_card_groups/{id}",
      "method": "simCardGroupDelete",
      "httpMethod": "delete",
      "tag": "SIM Card Groups",
      "description": "Delete a SIM card group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_card_groups/{id}",
      "method": "simCardGroupsGet",
      "httpMethod": "get",
      "tag": "SIM Card Groups",
      "description": "Get SIM card group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_card_groups/{id}",
      "method": "simCardGroupUpdate",
      "httpMethod": "patch",
      "tag": "SIM Card Groups",
      "description": "Update a SIM card group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        },
        {
          "name": "data_limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_card_groups/{id}/actions/remove_private_wireless_gateway",
      "method": "removeSimCardGroupPrivateWirelessGateway",
      "httpMethod": "post",
      "tag": "SIM Card Groups",
      "description": "Request Private Wireless Gateway removal from SIM card group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_card_groups/{id}/actions/set_private_wireless_gateway",
      "method": "setSimCardGroupPrivateWirelessGateway",
      "httpMethod": "post",
      "tag": "SIM Card Groups",
      "description": "Request Private Wireless Gateway assignment for SIM card group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        },
        {
          "name": "private_wireless_gateway_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_card_order_preview",
      "method": "simCardOrdersPreview",
      "httpMethod": "post",
      "tag": "SIM Card Orders",
      "description": "Preview SIM card orders",
      "parameters": [
        {
          "name": "address_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_card_orders",
      "method": "simCardOrdersGet",
      "httpMethod": "get",
      "tag": "SIM Card Orders",
      "description": "Get all SIM card orders",
      "parameters": [
        {
          "name": "filter[createdAt]",
          "schema": "string",
          "description": "Filter by ISO 8601 formatted date-time string matching resource creation date-time."
        },
        {
          "name": "filter[updatedAt]",
          "schema": "string",
          "description": "Filter by ISO 8601 formatted date-time string matching resource last update date-time."
        },
        {
          "name": "filter[quantity]",
          "schema": "integer",
          "description": "Filter orders by how many SIM cards were ordered."
        },
        {
          "name": "filter[costAmount]",
          "schema": "string",
          "description": "The total monetary amount of the order."
        },
        {
          "name": "filter[costCurrency]",
          "schema": "string",
          "description": "Filter by ISO 4217 currency string."
        },
        {
          "name": "filter[addressId]",
          "schema": "string",
          "description": "Uniquely identifies the address for the order."
        },
        {
          "name": "filter[addressStreetAddress]",
          "schema": "string",
          "description": "Returns entries with matching name of the street where the address is located."
        },
        {
          "name": "filter[addressExtendedAddress]",
          "schema": "string",
          "description": "Returns entries with matching name of the supplemental field for address information."
        },
        {
          "name": "filter[addressLocality]",
          "schema": "string",
          "description": "Filter by the name of the city where the address is located."
        },
        {
          "name": "filter[addressAdministrativeArea]",
          "schema": "string",
          "description": "Filter by state or province where the address is located."
        },
        {
          "name": "filter[addressCountryCode]",
          "schema": "string",
          "description": "Filter by the mobile operator two-character (ISO 3166-1 alpha-2) origin country code."
        },
        {
          "name": "filter[addressPostalCode]",
          "schema": "string",
          "description": "Filter by postal code for the address."
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_card_orders",
      "method": "simCardOrdersPost",
      "httpMethod": "post",
      "tag": "SIM Card Orders",
      "description": "Create a SIM card order",
      "parameters": [
        {
          "name": "address_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_card_orders/{id}",
      "method": "simCardOrderGet",
      "httpMethod": "get",
      "tag": "SIM Card Orders",
      "description": "Get a single SIM card order",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_cards",
      "method": "simCardsGet",
      "httpMethod": "get",
      "tag": "SIM Cards",
      "description": "Get all SIM cards",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "includeSimCardGroup",
          "schema": "boolean",
          "description": "It includes the associated SIM card group object in the response when present."
        },
        {
          "name": "filter[simCardGroupId]",
          "schema": "string",
          "description": "A valid SIM card group ID."
        },
        {
          "name": "filter[tags]",
          "schema": "array",
          "required": false,
          "description": "A list of SIM card tags to filter on.<br/><br/>\nIf the SIM card contains <b><i>all</i></b> of the given <code>tags</code> they will be found.<br/><br/>\nFor example, if the SIM cards have the following tags: <ul>\n  <li><code>['customers', 'staff', 'test']</code>\n  <li><code>['test']</code></li>\n  <li><code>['customers']</code></li>\n</ul>\nSearching for <code>['customers', 'test']</code> returns only the first because it's the only one with both tags.<br/> Searching for <code>test</code> returns the first two SIMs, because both of them have such tag.<br/> Searching for <code>customers</code> returns the first and last SIMs.<br/>\n"
        },
        {
          "name": "filter[iccid]",
          "schema": "string",
          "required": false,
          "description": "A search string to partially match for the SIM card's ICCID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_cards/actions/validate_registration_codes",
      "method": "postValidateRegistrationCodes",
      "httpMethod": "post",
      "tag": "SIM Cards",
      "description": "Validate SIM cards registration codes",
      "parameters": [
        {
          "name": "registration_codes",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_cards/{id}",
      "method": "simCardDelete",
      "httpMethod": "delete",
      "tag": "SIM Cards",
      "description": "Deletes a SIM card",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_cards/{id}",
      "method": "simCardGet",
      "httpMethod": "get",
      "tag": "SIM Cards",
      "description": "Get SIM card",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        },
        {
          "name": "includeSimCardGroup",
          "schema": "boolean",
          "description": "It includes the associated SIM card group object in the response when present."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_cards/{id}",
      "method": "simCardUpdate",
      "httpMethod": "patch",
      "tag": "SIM Cards",
      "description": "Update a SIM card",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        },
        {
          "name": "created_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "iccid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "imsi",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ipv4",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ipv6",
          "schema": "string",
          "description": ""
        },
        {
          "name": "msisdn",
          "schema": "string",
          "description": ""
        },
        {
          "name": "record_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sim_card_group_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_cards/{id}/actions/disable",
      "method": "simCardDisable",
      "httpMethod": "post",
      "tag": "SIM Cards",
      "description": "Request a SIM card disable",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_cards/{id}/actions/enable",
      "method": "simCardEnable",
      "httpMethod": "post",
      "tag": "SIM Cards",
      "description": "Request a SIM card enable",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_cards/{id}/actions/set_standby",
      "method": "simCardSetStandby",
      "httpMethod": "post",
      "tag": "SIM Cards",
      "description": "Request setting a SIM card to standby",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_cards/{sim_card_id}/network_preferences",
      "method": "simCardNetworkPreferencesDelete",
      "httpMethod": "delete",
      "tag": "SIM Cards",
      "description": "DELETE network preferences",
      "parameters": [
        {
          "name": "simCardId",
          "schema": "string",
          "required": true,
          "description": "Identifies a SIM card."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_cards/{sim_card_id}/network_preferences",
      "method": "simCardNetworkPreferencesGet",
      "httpMethod": "get",
      "tag": "SIM Cards",
      "description": "Get network preferences",
      "parameters": [
        {
          "name": "simCardId",
          "schema": "string",
          "required": true,
          "description": "Identifies a SIM card."
        },
        {
          "name": "includeOtaUpdates",
          "schema": "boolean",
          "description": "It includes the associated OTA update objects in the response when present."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_cards/{sim_card_id}/network_preferences",
      "method": "simCardNetworkPreferencesPut",
      "httpMethod": "put",
      "tag": "SIM Cards",
      "description": "Set network preferences",
      "parameters": [
        {
          "name": "simCardId",
          "schema": "string",
          "required": true,
          "description": "Identifies a SIM card."
        },
        {
          "name": "mobile_operator_networks_preferences",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_cards/{sim_card_id}/public_ip",
      "method": "simCardPublicIpDelete",
      "httpMethod": "delete",
      "tag": "SIM Cards",
      "description": "Delete SIM card public IP",
      "parameters": [
        {
          "name": "simCardId",
          "schema": "string",
          "required": true,
          "description": "Identifies a SIM card."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_cards/{sim_card_id}/public_ip",
      "method": "simCardPublicIpGet",
      "httpMethod": "get",
      "tag": "SIM Cards",
      "description": "Get SIM card public IP definition",
      "parameters": [
        {
          "name": "simCardId",
          "schema": "string",
          "required": true,
          "description": "Identifies a SIM card."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_cards/{sim_card_id}/public_ip",
      "method": "simCardPublicIpPost",
      "httpMethod": "post",
      "tag": "SIM Cards",
      "description": "Set SIM card public IP",
      "parameters": [
        {
          "name": "simCardId",
          "schema": "string",
          "required": true,
          "description": "Identifies a SIM card."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim_cards/{sim_card_id}/wireless_connectivity_logs",
      "method": "wirelessConnectivityLogsGet",
      "httpMethod": "get",
      "tag": "SIM Cards",
      "description": "List wireless connectivity logs",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "simCardId",
          "schema": "string",
          "required": true,
          "description": "Identifies a SIM card."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sub_number_orders",
      "method": "listSubNumberOrders",
      "httpMethod": "get",
      "tag": "Number Orders",
      "description": "List sub number orders",
      "parameters": [
        {
          "name": "filter[userId]",
          "schema": "string",
          "description": "User ID of the user who owns the sub number order"
        },
        {
          "name": "filter[orderRequestId]",
          "schema": "string",
          "description": "ID of the number order the sub number order belongs to"
        },
        {
          "name": "filter[countryCode]",
          "schema": "string",
          "description": "ISO alpha-2 country code."
        },
        {
          "name": "filter[phoneNumberType]",
          "schema": "string",
          "description": "Phone Number Type"
        },
        {
          "name": "filter[phoneNumbersCount]",
          "schema": "integer",
          "description": "Amount of numbers in the sub number order"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sub_number_orders/{sub_number_order_id}",
      "method": "retrieveSubNumberOrder",
      "httpMethod": "get",
      "tag": "Number Orders",
      "description": "Retrieve a sub number order",
      "parameters": [
        {
          "name": "subNumberOrderId",
          "schema": "string",
          "required": true,
          "description": "The sub number order ID."
        },
        {
          "name": "filter[includePhoneNumbers]",
          "schema": "boolean",
          "required": false,
          "description": "Include the first 50 phone number objects in the results"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/sub_number_orders/{sub_number_order_id}",
      "method": "updateSubNumberOrder",
      "httpMethod": "patch",
      "tag": "Number Orders",
      "description": "Update a sub number order",
      "parameters": [
        {
          "name": "subNumberOrderId",
          "schema": "string",
          "required": true,
          "description": "The sub number order ID."
        },
        {
          "name": "regulatory_requirements",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/telephony_credentials",
      "method": "findTelephonyCredentials",
      "httpMethod": "get",
      "tag": "Credentials",
      "description": "List all credentials",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[tag]",
          "schema": "string",
          "description": "Filter by tag"
        },
        {
          "name": "filter[name]",
          "schema": "string",
          "description": "Filter by name"
        },
        {
          "name": "filter[status]",
          "schema": "string",
          "description": "Filter by status"
        },
        {
          "name": "filter[resourceId]",
          "schema": "string",
          "description": "Filter by resource_id"
        },
        {
          "name": "filter[sipUsername]",
          "schema": "string",
          "description": "Filter by sip_username"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/telephony_credentials",
      "method": "createTelephonyCredential",
      "httpMethod": "post",
      "tag": "Credentials",
      "description": "Create a credential",
      "parameters": [
        {
          "name": "connection_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "expires_at",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tag",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/telephony_credentials/tags",
      "method": "listTags",
      "httpMethod": "get",
      "tag": "Credentials",
      "description": "List all tags",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/telephony_credentials/{id}",
      "method": "deleteTelephonyCredential",
      "httpMethod": "delete",
      "tag": "Credentials",
      "description": "Delete a credential",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/telephony_credentials/{id}",
      "method": "getTelephonyCredential",
      "httpMethod": "get",
      "tag": "Credentials",
      "description": "Get a credential",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/telephony_credentials/{id}",
      "method": "updateTelephonyCredential",
      "httpMethod": "patch",
      "tag": "Credentials",
      "description": "Update a credential",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        },
        {
          "name": "connection_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "expires_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tag",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/telephony_credentials/{id}/actions/{action}",
      "method": "telephonyCredentialAction",
      "httpMethod": "post",
      "tag": "Credentials",
      "description": "Perform activate or deactivate action on provided Credential",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        },
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": "Identifies the action to be taken."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/telephony_credentials/{id}/token",
      "method": "createTelephonyCredentialToken",
      "httpMethod": "post",
      "tag": "Access Tokens",
      "description": "Create an Access Token.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/texml_applications",
      "method": "findTexmlApplications",
      "httpMethod": "get",
      "tag": "TeXML Applications",
      "description": "List all TeXML Applications",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        },
        {
          "name": "filter[friendlyName][contains]",
          "schema": "string",
          "description": "If present, applications with <code>friendly_name</code> containing the given value will be returned. Matching is not case-sensitive. Requires at least three characters."
        },
        {
          "name": "filter[outboundVoiceProfileId]",
          "schema": "string",
          "description": "Identifies the associated outbound voice profile."
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Specifies the sort order for results. By default sorting direction is ascending. To have the results sorted in descending order add the <code> -</code> prefix.<br/><br/>\nThat is: <ul>\n  <li>\n    <code>connection_name</code>: sorts the result by the\n    <code>connection_name</code> field in ascending order.\n  </li>\n\n  <li>\n    <code>-connection_name</code>: sorts the result by the\n    <code>connection_name</code> field in descending order.\n  </li>\n</ul> <br/> If not given, results are sorted by <code>created_at</code> in descending order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/texml_applications",
      "method": "createTexmlApplication",
      "httpMethod": "post",
      "tag": "TeXML Applications",
      "description": "Creates a TeXML Application",
      "parameters": [
        {
          "name": "active",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "anchorsite_override",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dtmf_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "first_command_timeout",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "first_command_timeout_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "friendly_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "inbound",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "outbound",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "status_callback",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status_callback_method",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "voice_fallback_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "voice_method",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "voice_url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/texml_applications/{id}",
      "method": "deleteTexmlApplication",
      "httpMethod": "delete",
      "tag": "TeXML Applications",
      "description": "Deletes a TeXML Application",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/texml_applications/{id}",
      "method": "getTexmlApplication",
      "httpMethod": "get",
      "tag": "TeXML Applications",
      "description": "Retrieve a TeXML Application",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/texml_applications/{id}",
      "method": "updateTexmlApplication",
      "httpMethod": "patch",
      "tag": "TeXML Applications",
      "description": "Update a TeXML Application",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        },
        {
          "name": "active",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "anchorsite_override",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dtmf_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "first_command_timeout",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "first_command_timeout_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "friendly_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "inbound",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "outbound",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "status_callback",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status_callback_method",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "voice_fallback_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "voice_method",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "voice_url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/verifications/by_phone_number/{phone_number}",
      "method": "listVerifications",
      "httpMethod": "get",
      "tag": "Verify",
      "description": "List verifications by phone number",
      "parameters": [
        {
          "name": "phoneNumber",
          "schema": "string",
          "required": true,
          "description": "The phone number associated with the verifications to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/verifications/by_phone_number/{phone_number}/actions/verify",
      "method": "verifyVerificationCode",
      "httpMethod": "post",
      "tag": "Verify",
      "description": "Submit a verification code",
      "parameters": [
        {
          "name": "phoneNumber",
          "schema": "string",
          "required": true,
          "description": "The phone number associated with the verification code being verified."
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/verifications/call",
      "method": "createVerificationCall",
      "httpMethod": "post",
      "tag": "Verify",
      "description": "Trigger a Call verification",
      "parameters": [
        {
          "name": "call_timeout_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "phone_number",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "timeout_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "verify_profile_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/verifications/flashcall",
      "method": "createVerificationFlashcall",
      "httpMethod": "post",
      "tag": "Verify",
      "description": "Trigger a Flash call verification",
      "parameters": [
        {
          "name": "phone_number",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "timeout_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "verify_profile_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/verifications/psd2",
      "method": "createVerificationPsd2",
      "httpMethod": "post",
      "tag": "Verify",
      "description": "Trigger a PSD2 verification",
      "parameters": [
        {
          "name": "amount",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "payee",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "phone_number",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "timeout_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "verify_profile_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/verifications/sms",
      "method": "createVerificationSms",
      "httpMethod": "post",
      "tag": "Verify",
      "description": "Trigger a SMS verification",
      "parameters": [
        {
          "name": "phone_number",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "timeout_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "verify_profile_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/verifications/whatsapp",
      "method": "createVerificationWhatsapp",
      "httpMethod": "post",
      "tag": "Verify",
      "description": "Trigger a Whatsapp verification",
      "parameters": [
        {
          "name": "phone_number",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "timeout_secs",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "verify_profile_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/verifications/{verification_id}",
      "method": "retrieveVerification",
      "httpMethod": "get",
      "tag": "Verify",
      "description": "Retrieve a verification",
      "parameters": [
        {
          "name": "verificationId",
          "schema": "string",
          "required": true,
          "description": "The identifier of the verification to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/verify_profiles",
      "method": "listVerifyProfiles",
      "httpMethod": "get",
      "tag": "Verify",
      "description": "List all Verify profiles",
      "parameters": [
        {
          "name": "filter[name]",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A paginated list of Verify profiles"
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/verify_profiles",
      "method": "createVerifyProfile",
      "httpMethod": "post",
      "tag": "Verify",
      "description": "Create a Verify profile",
      "parameters": [
        {
          "name": "call",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "flashcall",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "psd2",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "sms",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_failover_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhook_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "whatsapp",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/verify_profiles/{verify_profile_id}",
      "method": "deleteVerifyProfile",
      "httpMethod": "delete",
      "tag": "Verify",
      "description": "Delete a Verify profile",
      "parameters": [
        {
          "name": "verifyProfileId",
          "schema": "string",
          "required": true,
          "description": "The identifier of the Verify profile to delete."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/verify_profiles/{verify_profile_id}",
      "method": "retrieveVerifyProfile",
      "httpMethod": "get",
      "tag": "Verify",
      "description": "Retrieve a Verify profile",
      "parameters": [
        {
          "name": "verifyProfileId",
          "schema": "string",
          "required": true,
          "description": "The identifier of the Verify profile to retrieve."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/verify_profiles/{verify_profile_id}",
      "method": "updateVerifyProfile",
      "httpMethod": "patch",
      "tag": "Verify",
      "description": "Update a Verify profile",
      "parameters": [
        {
          "name": "verifyProfileId",
          "schema": "string",
          "required": true,
          "description": "The identifier of the Verify profile to update."
        },
        {
          "name": "call",
          "schema": "object",
          "description": ""
        },
        {
          "name": "flashcall",
          "schema": "object",
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "psd2",
          "schema": "object",
          "description": ""
        },
        {
          "name": "sms",
          "schema": "object",
          "description": ""
        },
        {
          "name": "webhook_failover_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webhook_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "whatsapp",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/webhook_deliveries",
      "method": "getWebhookDeliveries",
      "httpMethod": "get",
      "tag": "Webhooks",
      "description": "List webhook deliveries",
      "parameters": [
        {
          "name": "filter[status][eq]",
          "schema": "string",
          "required": false,
          "description": "Return only webhook_deliveries matching the given `status`"
        },
        {
          "name": "filter[webhook][contains]",
          "schema": "string",
          "required": false,
          "description": "Return only webhook deliveries whose `webhook` component contains the given text"
        },
        {
          "name": "filter[attempts][contains]",
          "schema": "string",
          "required": false,
          "description": "Return only webhook_deliveries whose `attempts` component contains the given text"
        },
        {
          "name": "filter[startedAt][gte]",
          "schema": "string",
          "required": false,
          "description": "Return only webhook_deliveries whose delivery started later than or at given ISO 8601 datetime"
        },
        {
          "name": "filter[startedAt][lte]",
          "schema": "string",
          "required": false,
          "description": "Return only webhook_deliveries whose delivery started earlier than or at given ISO 8601 datetime"
        },
        {
          "name": "filter[finishedAt][gte]",
          "schema": "string",
          "required": false,
          "description": "Return only webhook_deliveries whose delivery finished later than or at given ISO 8601 datetime"
        },
        {
          "name": "filter[finishedAt][lte]",
          "schema": "string",
          "required": false,
          "description": "Return only webhook_deliveries whose delivery finished earlier than or at given ISO 8601 datetime"
        },
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/webhook_deliveries/{id}",
      "method": "getWebhookDelivery",
      "httpMethod": "get",
      "tag": "Webhooks",
      "description": "Find webhook_delivery details by ID",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Uniquely identifies the webhook_delivery."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/whatsapp_contacts",
      "method": "checkContact",
      "httpMethod": "post",
      "tag": "WhatsApp Contacts",
      "description": "Check Contact",
      "parameters": [
        {
          "name": "blocking",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "contacts",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "whatsapp_user_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/whatsapp_detail_record_reports",
      "method": "getRequests",
      "httpMethod": "get",
      "tag": "WhatsApp Detail Reports",
      "description": "Fetch all previous requests for WhatsApp detail reports. WhatsApp detail reports are reports for pulling all WhatsApp records. ",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "Page number"
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "Size of the page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/whatsapp_detail_record_reports",
      "method": "submitRequest",
      "httpMethod": "post",
      "tag": "WhatsApp Detail Reports",
      "description": "Submit a request for new WhatsApp detail report. WhatsApp detail report pulls all raw WhatsApp data according to defined filters.",
      "parameters": [
        {
          "name": "end_date",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "start_date",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/whatsapp_detail_record_reports/{id}",
      "method": "deleteRequest",
      "httpMethod": "delete",
      "tag": "WhatsApp Detail Reports",
      "description": "Delete generated WhatsApp detail report by id",
      "parameters": [
        {
          "name": "id",
          "schema": "undefined",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/whatsapp_detail_record_reports/{id}",
      "method": "getRequest",
      "httpMethod": "get",
      "tag": "WhatsApp Detail Reports",
      "description": "Fetch single whatsapp detail report by id.",
      "parameters": [
        {
          "name": "id",
          "schema": "undefined",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/whatsapp_media",
      "method": "uploadMedia",
      "httpMethod": "post",
      "tag": "WhatsApp Media",
      "description": "Upload Media",
      "parameters": [
        {
          "name": "media_content_type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "upload_file",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "whatsapp_user_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/whatsapp_media/{whatsapp_user_id}/{media_id}",
      "method": "/whatsappMedia/{whatsappUserId}/{mediaId}Delete",
      "httpMethod": "delete",
      "tag": "WhatsApp Media",
      "description": "Delete Media",
      "parameters": [
        {
          "name": "whatsappUserId",
          "schema": "string",
          "required": true,
          "description": "User's WhatsApp ID"
        },
        {
          "name": "mediaId",
          "schema": "string",
          "required": true,
          "description": "WhatsApp's Media ID"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/whatsapp_media/{whatsapp_user_id}/{media_id}",
      "method": "/whatsappMedia/{whatsappUserId}/{mediaId}Get",
      "httpMethod": "get",
      "tag": "WhatsApp Media",
      "description": "Download Media",
      "parameters": [
        {
          "name": "whatsappUserId",
          "schema": "string",
          "required": true,
          "description": "User's WhatsApp ID"
        },
        {
          "name": "mediaId",
          "schema": "string",
          "required": true,
          "description": "WhatsApp's Media ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/whatsapp_messages",
      "method": "sendMessage",
      "httpMethod": "post",
      "tag": "WhatsApp Messages",
      "description": "Send Message",
      "parameters": [
        {
          "name": "audio",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "contacts",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "document",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "hsm",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "image",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "preview_url",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "template",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "text",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "video",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "whatsapp_user_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/whatsapp_messages/{message_id}",
      "method": "markMessageAsRead",
      "httpMethod": "patch",
      "tag": "WhatsApp Messages",
      "description": "Mark Message As Read",
      "parameters": [
        {
          "name": "messageId",
          "schema": "string",
          "required": true,
          "description": "Message ID from Webhook"
        },
        {
          "name": "status",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "whatsapp_user_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/whatsapp_usage_aggregations",
      "method": "getUsageAggregationsSync",
      "httpMethod": "get",
      "tag": "WhatsApp Usage Aggregations",
      "description": "Generate and fetch WhatsApp usage aggregations synchronously. This endpoint will both generate and fetch the WhatsApp aggregations over a specified time period. ",
      "parameters": [
        {
          "name": "startDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "endDate",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/whatsapp_users/{whatsapp_user_id}",
      "method": "getUser",
      "httpMethod": "get",
      "tag": "WhatsApp Users",
      "description": "Get User",
      "parameters": [
        {
          "name": "whatsappUserId",
          "schema": "string",
          "required": true,
          "description": "User's WhatsApp ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/whatsapp_users/{whatsapp_user_id}",
      "method": "updateWhatsAppWebhook",
      "httpMethod": "patch",
      "tag": "WhatsApp Users",
      "description": "Update WhatsApp User",
      "parameters": [
        {
          "name": "whatsappUserId",
          "schema": "string",
          "required": true,
          "description": "User's WhatsApp ID"
        },
        {
          "name": "webhook_url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/wireless/detail_records_reports",
      "method": "getWdrReports",
      "httpMethod": "get",
      "tag": "Reporting",
      "description": "Get all Wireless Detail Records (WDRs) Reports",
      "parameters": [
        {
          "name": "page[number]",
          "schema": "integer",
          "description": "The page number to load."
        },
        {
          "name": "page[size]",
          "schema": "integer",
          "description": "The size of the page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/wireless/detail_records_reports",
      "method": "createWdrReport",
      "httpMethod": "post",
      "tag": "Reporting",
      "description": "Create a Wireless Detail Records (WDRs) Report",
      "parameters": [
        {
          "name": "end_time",
          "schema": "string",
          "description": ""
        },
        {
          "name": "start_time",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/wireless/detail_records_reports/{id}",
      "method": "deleteWdrReport",
      "httpMethod": "delete",
      "tag": "Reporting",
      "description": "Delete a Wireless Detail Record (WDR) Report",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/wireless/detail_records_reports/{id}",
      "method": "getWdrReport",
      "httpMethod": "get",
      "tag": "Reporting",
      "description": "Get a Wireless Detail Record (WDR) Report",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.telnyx.com/v2",
  "apiDescription": "SIP trunking, SMS, MMS, Call Control and Telephony Data Services.",
  "apiTitle": "Telnyx API",
  "endpoints": 251,
  "sdkMethods": 363,
  "schemas": 527,
  "parameters": 1507,
  "contactEmail": "support@telnyx.com",
  "difficultyScore": 1003.25,
  "difficulty": "Very Hard"
}