{
  "providerName": "taxamo.com",
  "openApiRaw": "https://api.taxamo.com/swagger",
  "homepage": "taxamo.com",
  "apiVersion": "1",
  "methods": [
    {
      "url": "/api/v1/dictionaries/countries",
      "method": "getCountriesDict",
      "httpMethod": "get",
      "tag": "dictionaries",
      "description": "Countries",
      "parameters": [
        {
          "name": "tax_supported",
          "schema": "boolean",
          "required": false,
          "description": "Should only countries with tax supported be listed?"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/dictionaries/currencies",
      "method": "getCurrenciesDict",
      "httpMethod": "get",
      "tag": "dictionaries",
      "description": "Currencies",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/dictionaries/product_types",
      "method": "getProductTypesDict",
      "httpMethod": "get",
      "tag": "dictionaries",
      "description": "Product types",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/geoip",
      "method": "locateMyIp",
      "httpMethod": "get",
      "tag": "geoip",
      "description": "Locate IP",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/geoip/{ip}",
      "method": "locateGivenIp",
      "httpMethod": "get",
      "tag": "geoip",
      "description": "Locate provided IP",
      "parameters": [
        {
          "name": "ip",
          "schema": "string",
          "required": true,
          "description": "IP address."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/reports/domestic/summary",
      "method": "getDomesticSummaryReport",
      "httpMethod": "get",
      "tag": "reporting",
      "description": "Calculate domestic summary",
      "parameters": [
        {
          "name": "format",
          "schema": "string",
          "required": false,
          "description": "Output format. 'xml' and 'csv' values are accepted. Default format - json"
        },
        {
          "name": "country_code",
          "schema": "string",
          "required": true,
          "description": "ISO 2-letter country code which will be used for determining which country is domestic."
        },
        {
          "name": "currency_code",
          "schema": "string",
          "required": false,
          "description": "ISO 3-letter currency code, e.g. EUR or USD. Defaults to the one assigned to MOSS calculations for a given country code."
        },
        {
          "name": "start_month",
          "schema": "string",
          "required": true,
          "description": "Period start month in yyyy-MM format."
        },
        {
          "name": "end_month",
          "schema": "string",
          "required": true,
          "description": "Period end month in yyyy-MM format."
        },
        {
          "name": "fx_date_type",
          "schema": "string",
          "required": false,
          "description": "Which date should be used for FX."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/reports/eu/vies",
      "method": "getEuViesReport",
      "httpMethod": "get",
      "tag": "reporting",
      "description": "Calculate EU VIES report",
      "parameters": [
        {
          "name": "period_length",
          "schema": "string",
          "required": false,
          "description": "Length of report period. 'month', 'quarter' and 'year' values are accepted. Required only if Large Filer Format is requested."
        },
        {
          "name": "lff_sequence_number",
          "schema": "string",
          "required": false,
          "description": "Sequence number used to generate report in Large Filer Format. If not specified then '0000000001' will be used."
        },
        {
          "name": "transformation",
          "schema": "string",
          "required": false,
          "description": "Which transformation should be applied. Please note that transformation will be applied only for xml and csv formats."
        },
        {
          "name": "currency_code",
          "schema": "string",
          "required": false,
          "description": "ISO 3-letter currency code, e.g. EUR or USD. Defaults to the one assigned to MOSS calculations for a given country code."
        },
        {
          "name": "end_month",
          "schema": "string",
          "required": true,
          "description": "Period end month in yyyy-MM format."
        },
        {
          "name": "tax_id",
          "schema": "string",
          "required": false,
          "description": "MOSS-assigned tax ID - if not provided, merchant's national tax number will be used."
        },
        {
          "name": "start_month",
          "schema": "string",
          "required": true,
          "description": "Period start month in yyyy-MM format."
        },
        {
          "name": "eu_country_code",
          "schema": "string",
          "required": true,
          "description": "ISO 2-letter country code which will be used for determining which country is domestic."
        },
        {
          "name": "fx_date_type",
          "schema": "string",
          "required": false,
          "description": "Which date should be used for FX."
        },
        {
          "name": "format",
          "schema": "string",
          "required": false,
          "description": "Output format. 'xml', 'csv' and 'lff' (only for Ireland) values are accepted as well"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/settlement/detailed_refunds",
      "method": "getDetailedRefunds",
      "httpMethod": "get",
      "tag": "settlement",
      "description": "Detailed refunds",
      "parameters": [
        {
          "name": "format",
          "schema": "string",
          "required": false,
          "description": "Output format. 'json' or 'csv'. Default value is 'json'"
        },
        {
          "name": "country_codes",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of 2-letter country codes"
        },
        {
          "name": "date_from",
          "schema": "string",
          "required": false,
          "description": "Take only refunds issued at or after the date. Format: yyyy-MM-dd"
        },
        {
          "name": "date_to",
          "schema": "string",
          "required": false,
          "description": "Take only refunds issued at or before the date. Format: yyyy-MM-dd"
        },
        {
          "name": "limit",
          "schema": "number",
          "required": false,
          "description": "Limit (no more than 1000, defaults to 100)."
        },
        {
          "name": "offset",
          "schema": "number",
          "required": false,
          "description": "Offset. Defaults to 0"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/settlement/refunds",
      "method": "getRefunds",
      "httpMethod": "get",
      "tag": "settlement",
      "description": "Fetch refunds",
      "parameters": [
        {
          "name": "format",
          "schema": "string",
          "required": false,
          "description": "Output format. 'csv' value is accepted as well"
        },
        {
          "name": "moss_country_code",
          "schema": "string",
          "required": false,
          "description": "MOSS country code, used to determine currency. If ommited, merchant default setting is used."
        },
        {
          "name": "tax_region",
          "schema": "string",
          "required": false,
          "description": "Tax region key, defaults to EU for backwards compatibility."
        },
        {
          "name": "date_from",
          "schema": "string",
          "required": true,
          "description": "Take only refunds issued at or after the date. Format: yyyy-MM-dd"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/settlement/summary/{quarter}",
      "method": "getSettlementSummary",
      "httpMethod": "get",
      "tag": "settlement",
      "description": "Fetch summary",
      "parameters": [
        {
          "name": "moss_country_code",
          "schema": "string",
          "required": false,
          "description": "MOSS country code, used to determine currency. If ommited, merchant default setting is used."
        },
        {
          "name": "tax_region",
          "schema": "string",
          "required": false,
          "description": "Tax region key"
        },
        {
          "name": "start_month",
          "schema": "string",
          "required": false,
          "description": "Period start month in yyyy-MM format. Either quarter or start-month and end-month have to be provided."
        },
        {
          "name": "end_month",
          "schema": "string",
          "required": false,
          "description": "Period end month in yyyy-MM format. Either quarter or start-month and end-month have to be provided."
        },
        {
          "name": "quarter",
          "schema": "string",
          "required": true,
          "description": "Quarter in yyyy-MM format. If start-date and end-date are provided, quarter is ignored and should be set to 'range'."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/settlement/{quarter}",
      "method": "getSettlement",
      "httpMethod": "get",
      "tag": "settlement",
      "description": "Fetch settlement",
      "parameters": [
        {
          "name": "moss_tax_id",
          "schema": "string",
          "required": false,
          "description": "MOSS-assigned tax ID - if not provided, merchant's national tax number will be used. Deprecated, please use tax-id."
        },
        {
          "name": "currency_code",
          "schema": "string",
          "required": false,
          "description": "ISO 3-letter currency code, e.g. EUR or USD. If provided, all amounts will be coerced for this currency. Defaults to region's currency code."
        },
        {
          "name": "end_month",
          "schema": "string",
          "required": false,
          "description": "Period end month in yyyy-MM format. Either quarter or start-month and end-month have to be provided."
        },
        {
          "name": "tax_id",
          "schema": "string",
          "required": false,
          "description": "MOSS-assigned tax ID - if not provided, merchant's national tax number will be used. Deprecated, please use tax-id."
        },
        {
          "name": "refund_date_kind_override",
          "schema": "string",
          "required": false,
          "description": "Set to 'order_date' to show only refunds for the transactions in the selected reporting period. Set to 'refund_timestamp' to show refunds that were created in the selected reporting period. Do not set to use the default region's setting."
        },
        {
          "name": "start_month",
          "schema": "string",
          "required": false,
          "description": "Period start month in yyyy-MM format. Either quarter or start-month and end-month have to be provided."
        },
        {
          "name": "moss_country_code",
          "schema": "string",
          "required": false,
          "description": "MOSS country code, used to determine currency/region. If ommited, merchant default setting is used. Deprecated: please use tax-country-code."
        },
        {
          "name": "format",
          "schema": "string",
          "required": false,
          "description": "Output format. 'csv' value is accepted as well"
        },
        {
          "name": "tax_country_code",
          "schema": "string",
          "required": false,
          "description": "Tax entity country code, used to determine currency/region. "
        },
        {
          "name": "quarter",
          "schema": "string",
          "required": true,
          "description": "Quarter in yyyy-MM format. If start-date and end-date are provided, quarter is ignored and should be set to 'range'."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/stats/settlement/by_country",
      "method": "getSettlementStatsByCountry",
      "httpMethod": "get",
      "tag": "statistics",
      "description": "Settlement by country",
      "parameters": [
        {
          "name": "date_from",
          "schema": "string",
          "required": true,
          "description": "Date from in yyyy-MM format."
        },
        {
          "name": "date_to",
          "schema": "string",
          "required": true,
          "description": "Date to in yyyy-MM format."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/stats/settlement/by_taxation_type",
      "method": "getSettlementStatsByTaxationType",
      "httpMethod": "get",
      "tag": "statistics",
      "description": "Settlement by tax type",
      "parameters": [
        {
          "name": "date_from",
          "schema": "string",
          "required": true,
          "description": "Date from in yyyy-MM format."
        },
        {
          "name": "date_to",
          "schema": "string",
          "required": true,
          "description": "Date to in yyyy-MM format."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/stats/settlement/daily",
      "method": "getDailySettlementStats",
      "httpMethod": "get",
      "tag": "statistics",
      "description": "Settlement stats over time",
      "parameters": [
        {
          "name": "interval",
          "schema": "string",
          "required": true,
          "description": "Interval type - day, week, month."
        },
        {
          "name": "date_from",
          "schema": "string",
          "required": true,
          "description": "Date from in yyyy-MM format."
        },
        {
          "name": "date_to",
          "schema": "string",
          "required": true,
          "description": "Date to in yyyy-MM format."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/stats/transactions",
      "method": "getTransactionsStats",
      "httpMethod": "get",
      "tag": "statistics",
      "description": "Transaction stats",
      "parameters": [
        {
          "name": "date_from",
          "schema": "string",
          "required": true,
          "description": "Date from in yyyy-MM format."
        },
        {
          "name": "date_to",
          "schema": "string",
          "required": true,
          "description": "Date to in yyyy-MM format."
        },
        {
          "name": "interval",
          "schema": "string",
          "required": false,
          "description": "Interval. Accepted values are 'day', 'week' and 'month'."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/stats/transactions/by_country",
      "method": "getTransactionsStatsByCountry",
      "httpMethod": "get",
      "tag": "statistics",
      "description": "Settlement by country",
      "parameters": [
        {
          "name": "global_currency_code",
          "schema": "string",
          "required": false,
          "description": "Global currency code to use for conversion - in addition to country's currency if rate is available. Conversion is indicative and based on most-recent rate from ECB."
        },
        {
          "name": "date_from",
          "schema": "string",
          "required": true,
          "description": "Date from in yyyy-MM format."
        },
        {
          "name": "date_to",
          "schema": "string",
          "required": true,
          "description": "Date to in yyyy-MM format."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/tax/calculate",
      "method": "calculateSimpleTax",
      "httpMethod": "get",
      "tag": "tax",
      "description": "Simple tax",
      "parameters": [
        {
          "name": "product_type",
          "schema": "string",
          "required": false,
          "description": "Product type, according to dictionary /dictionaries/product_types. "
        },
        {
          "name": "invoice_address_city",
          "schema": "string",
          "required": false,
          "description": "Invoice address/postal_code"
        },
        {
          "name": "buyer_credit_card_prefix",
          "schema": "string",
          "required": false,
          "description": "First 6 digits of buyer's credit card prefix."
        },
        {
          "name": "currency_code",
          "schema": "string",
          "required": true,
          "description": "Currency code for transaction - e.g. EUR."
        },
        {
          "name": "invoice_address_region",
          "schema": "string",
          "required": false,
          "description": "Invoice address/region"
        },
        {
          "name": "unit_price",
          "schema": "number",
          "required": false,
          "description": "Unit price."
        },
        {
          "name": "quantity",
          "schema": "number",
          "required": false,
          "description": "Quantity Defaults to 1."
        },
        {
          "name": "buyer_tax_number",
          "schema": "string",
          "required": false,
          "description": " Buyer's tax number - EU VAT number for example. If using EU VAT number, it is possible to provide country code in it (e.g. IE1234567X) or simply use billing_country_code field for that. In the first case, if billing_country_code value was provided, it will be overwritten with country code value extracted from VAT number - but only if the VAT has been verified properly."
        },
        {
          "name": "force_country_code",
          "schema": "string",
          "required": false,
          "description": "Two-letter ISO country code, e.g. FR. Use it to force country code for tax calculation."
        },
        {
          "name": "order_date",
          "schema": "string",
          "required": false,
          "description": "Order date in yyyy-MM-dd format, in merchant's timezone. If provided by the API caller, no timezone conversion is performed. Default value is current date and time. When using public token, the default value is used."
        },
        {
          "name": "amount",
          "schema": "number",
          "required": false,
          "description": "Amount. Required if total amount or both unit price and quantity are not provided."
        },
        {
          "name": "billing_country_code",
          "schema": "string",
          "required": false,
          "description": "Billing two letter ISO country code."
        },
        {
          "name": "invoice_address_postal_code",
          "schema": "string",
          "required": false,
          "description": "Invoice address/postal_code"
        },
        {
          "name": "total_amount",
          "schema": "number",
          "required": false,
          "description": "Total amount. Required if amount or both unit price and quantity are not provided."
        },
        {
          "name": "tax_deducted",
          "schema": "boolean",
          "required": false,
          "description": "If the transaction is in a country supported by Taxamo, but the tax is not calculated due to merchant settings or EU B2B transaction for example."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/tax/calculate",
      "method": "calculateTax",
      "httpMethod": "post",
      "tag": "tax",
      "description": "Calculate tax",
      "parameters": [
        {
          "name": "transaction",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/tax/location/calculate",
      "method": "calculateTaxLocation",
      "httpMethod": "get",
      "tag": "tax",
      "description": "Calculate location",
      "parameters": [
        {
          "name": "billing_country_code",
          "schema": "string",
          "required": false,
          "description": "Billing two letter ISO country code."
        },
        {
          "name": "buyer_credit_card_prefix",
          "schema": "string",
          "required": false,
          "description": "First 6 digits of buyer's credit card prefix."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/tax/vat_numbers/{tax_number}/validate",
      "method": "validateTaxNumber",
      "httpMethod": "get",
      "tag": "tax",
      "description": "Validate VAT number",
      "parameters": [
        {
          "name": "country_code",
          "schema": "string",
          "required": false,
          "description": "Two-letter ISO country code."
        },
        {
          "name": "tax_number",
          "schema": "string",
          "required": true,
          "description": "Tax number"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/transactions",
      "method": "listTransactions",
      "httpMethod": "get",
      "tag": "transactions",
      "description": "Browse transactions",
      "parameters": [
        {
          "name": "filter_text",
          "schema": "string",
          "required": false,
          "description": "Filtering expression"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Offset"
        },
        {
          "name": "has_note",
          "schema": "boolean",
          "required": false,
          "description": "Return only transactions with a note field set."
        },
        {
          "name": "key_or_custom_id",
          "schema": "string",
          "required": false,
          "description": "Taxamo provided transaction key or custom id"
        },
        {
          "name": "currency_code",
          "schema": "string",
          "required": false,
          "description": "Three letter ISO currency code."
        },
        {
          "name": "order_date_to",
          "schema": "string",
          "required": false,
          "description": "Order date to in yyyy-MM-dd format."
        },
        {
          "name": "sort_reverse",
          "schema": "boolean",
          "required": false,
          "description": "If true, results are sorted in descending order."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit (no more than 1000, defaults to 100)."
        },
        {
          "name": "invoice_number",
          "schema": "string",
          "required": false,
          "description": "Transaction invoice number."
        },
        {
          "name": "tax_country_codes",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of two letter ISO tax country codes."
        },
        {
          "name": "statuses",
          "schema": "string",
          "required": false,
          "description": "Comma separated list of of transaction statuses. 'N' - unconfirmed transaction, 'C' - confirmed transaction."
        },
        {
          "name": "original_transaction_key",
          "schema": "string",
          "required": false,
          "description": "Taxamo provided original transaction key"
        },
        {
          "name": "order_date_from",
          "schema": "string",
          "required": false,
          "description": "Order date from in yyyy-MM-dd format."
        },
        {
          "name": "total_amount_greater_than",
          "schema": "string",
          "required": false,
          "description": "Return only transactions with total amount greater than given number. Transactions with total amount equal to a given number (e.g. 0) are not returned."
        },
        {
          "name": "format",
          "schema": "string",
          "required": false,
          "description": "Output format - supports 'csv' value for this operation."
        },
        {
          "name": "total_amount_less_than",
          "schema": "string",
          "required": false,
          "description": "Return only transactions with total amount less than a given number. Transactions with total amount equal to a given number (e.g. 1) are not returned."
        },
        {
          "name": "tax_country_code",
          "schema": "string",
          "required": false,
          "description": "Two letter ISO tax country code."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/transactions",
      "method": "createTransaction",
      "httpMethod": "post",
      "tag": "transactions",
      "description": "Store transaction",
      "parameters": [
        {
          "name": "manual_mode",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "transaction",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/transactions/{key}",
      "method": "cancelTransaction",
      "httpMethod": "delete",
      "tag": "transactions",
      "description": "Delete transaction",
      "parameters": [
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "Transaction key"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/transactions/{key}",
      "method": "getTransaction",
      "httpMethod": "get",
      "tag": "transactions",
      "description": "Retrieve transaction data.",
      "parameters": [
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "Transaction key"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/transactions/{key}",
      "method": "updateTransaction",
      "httpMethod": "put",
      "tag": "transactions",
      "description": "Update transaction",
      "parameters": [
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "Transaction key."
        },
        {
          "name": "transaction",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/transactions/{key}/confirm",
      "method": "confirmTransaction",
      "httpMethod": "post",
      "tag": "transactions",
      "description": "Confirm transaction",
      "parameters": [
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "Transaction key."
        },
        {
          "name": "transaction",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/transactions/{key}/invoice/refunds/{refund_note_number}/send_email",
      "method": "emailRefund",
      "httpMethod": "post",
      "tag": "invoices",
      "description": "Email credit note",
      "parameters": [
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "Transaction key."
        },
        {
          "name": "refund_note_number",
          "schema": "string",
          "required": true,
          "description": "Refund note id."
        },
        {
          "name": "buyer_email",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/transactions/{key}/invoice/send_email",
      "method": "emailInvoice",
      "httpMethod": "post",
      "tag": "invoices",
      "description": "Email invoice",
      "parameters": [
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "Transaction key."
        },
        {
          "name": "buyer_email",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/transactions/{key}/payments",
      "method": "listPayments",
      "httpMethod": "get",
      "tag": "payments",
      "description": "List payments",
      "parameters": [
        {
          "name": "limit",
          "schema": "string",
          "required": false,
          "description": "Max record count (no more than 100, defaults to 10)."
        },
        {
          "name": "offset",
          "schema": "string",
          "required": false,
          "description": "How many records need to be skipped, defaults to 0."
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "Transaction key."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/transactions/{key}/payments",
      "method": "createPayment",
      "httpMethod": "post",
      "tag": "payments",
      "description": "Register a payment",
      "parameters": [
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "Transaction key."
        },
        {
          "name": "amount",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "payment_information",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "payment_timestamp",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/transactions/{key}/payments/capture",
      "method": "capturePayment",
      "httpMethod": "post",
      "tag": "payments",
      "description": "Capture payment",
      "parameters": [
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "Transaction key."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/transactions/{key}/refunds",
      "method": "listRefunds",
      "httpMethod": "get",
      "tag": "refunds",
      "description": "Get transaction refunds",
      "parameters": [
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "Transaction key."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/transactions/{key}/refunds",
      "method": "createRefund",
      "httpMethod": "post",
      "tag": "refunds",
      "description": "Create a refund",
      "parameters": [
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "Transaction key."
        },
        {
          "name": "amount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "custom_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "line_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "refund_reason",
          "schema": "string",
          "description": ""
        },
        {
          "name": "total_amount",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/transactions/{key}/unconfirm",
      "method": "unconfirmTransaction",
      "httpMethod": "post",
      "tag": "transactions",
      "description": "Un-confirm the transaction",
      "parameters": [
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "Transaction key."
        },
        {
          "name": "transaction",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/verification/sms",
      "method": "createSmsToken",
      "httpMethod": "post",
      "tag": "verification",
      "description": "Create SMS token",
      "parameters": [
        {
          "name": "country_code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "recipient",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/verification/sms/{token}",
      "method": "verifySmsToken",
      "httpMethod": "get",
      "tag": "verification",
      "description": "Verify SMS token",
      "parameters": [
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "Provided token."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.taxamo.com",
  "apiDescription": "Taxamo’s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.",
  "apiTitle": "Taxamo",
  "endpoints": 30,
  "sdkMethods": 36,
  "schemas": 97,
  "parameters": 126,
  "difficultyScore": 116,
  "difficulty": "Medium"
}