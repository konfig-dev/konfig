{
  "providerName": "beezup.com",
  "openApiRaw": "https://api-docs.beezup.com/swagger.json",
  "securitySchemes": {
    "api_key": {
      "in": "header",
      "name": "Ocp-Apim-Subscription-Key",
      "type": "apiKey"
    }
  },
  "homepage": "beezup.com",
  "apiVersion": "2.0",
  "methods": [
    {
      "url": "/orders/v3/batches/changeOrders",
      "method": "changeOrderListV3",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders V3 - Batches",
      "description": "Send a batch of operations to change your marketplace Order information: accept, ship, etc.  (max 100 items per call)",
      "parameters": [
        {
          "name": "userName",
          "schema": "string",
          "required": true,
          "description": "Sometimes the user in the e-commerce application is not the same as user associated with the current subscription key. We recommend providing your application's user login."
        },
        {
          "name": "testMode",
          "schema": "boolean",
          "required": false,
          "description": "If true, the operation will be not be sent to marketplace. But the validation will be taken in account."
        },
        {
          "name": "changeOrders",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": "The response given by the batch operation"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/v3/batches/changeOrders/{changeOrderType}",
      "method": "changeOrderListV2",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders V3 - Batches",
      "description": "Send a batch of operations to change your marketplace Order information: accept, ship, etc.  (max 100 items per call)",
      "parameters": [
        {
          "name": "userName",
          "schema": "string",
          "required": true,
          "description": "Sometimes the user in the e-commerce application is not the same as user associated with the current subscription key. We recommend providing your application's user login."
        },
        {
          "name": "testMode",
          "schema": "boolean",
          "required": false,
          "description": "If true, the operation will be not be sent to marketplace. But the validation will be taken in account."
        },
        {
          "name": "changeOrderType",
          "schema": "string",
          "required": true,
          "description": "The Order change type"
        },
        {
          "name": "changeOrders",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": "The response given by the batch operation"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/v3/batches/clearMerchantOrderInfos",
      "method": "clearMerchantOrderInfoListV3",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders V3 - Batches",
      "description": "Send a batch of operations to clear an Order's merchant information (max 100 items per call)",
      "parameters": [
        {
          "name": "testMode",
          "schema": "boolean",
          "required": false,
          "description": "If true, the operation will be not be sent to marketplace. But the validation will be taken in account."
        },
        {
          "name": "orders",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": "The response given by the batch operation"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/v3/batches/setMerchantOrderInfos",
      "method": "setMerchantOrderInfoListV3",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders V3 - Batches",
      "description": "Send a batch of operations to set an Order's merchant information  (max 100 items per call)",
      "parameters": [
        {
          "name": "testMode",
          "schema": "boolean",
          "required": false,
          "description": "If true, the operation will be not be sent to marketplace. But the validation will be taken in account."
        },
        {
          "name": "order_MerchantECommerceSoftwareName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "order_MerchantECommerceSoftwareVersion",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orders",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": "The response given by the batch operation"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/v3/harvest",
      "method": "harvestAllV3",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders V3 - Global",
      "description": "Send harvest request to all your marketplaces",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": false,
          "description": "The StoreId to filter by"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/v3/list/full",
      "method": "getOrderListFullV3",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders V3 - List",
      "description": "Get a paginated list of all Orders with all Order and Order Item(s) properties",
      "parameters": [
        {
          "name": "acceptEncoding",
          "schema": "string",
          "required": true,
          "description": "Allows the client to indicate wether it accepts a compressed encoding to reduce traffic size"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/v3/list/light",
      "method": "getOrderListLightV3",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders V3 - List",
      "description": "Get a paginated list of all Orders without details",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/v3/lov/orderManagementReadyMarketplaceBusinessCode",
      "method": "getOrderManagementReadyMarketplaceBusinessCode",
      "httpMethod": "get",
      "tag": "Marketplaces - Orders V3 - Global",
      "description": "Get the list of MarketplaceBusinessCode ready for Order Management",
      "parameters": [
        {
          "name": "acceptLanguage",
          "schema": "array",
          "required": false,
          "description": "Indicates that the client accepts the following languages."
        },
        {
          "name": "storeIds",
          "schema": "array",
          "required": false,
          "description": "StoredIds to filter"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/v3/status",
      "method": "getMarketplaceAccountsSynchronizationV3",
      "httpMethod": "get",
      "tag": "Marketplaces - Orders V3 - Global",
      "description": "Get current synchronization status between your marketplaces and BeezUP accounts",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        },
        {
          "name": "storeIds",
          "schema": "array",
          "required": false,
          "description": "StoredIds to filter"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/v3/{marketplaceTechnicalCode}/{accountId}/harvest",
      "method": "harvestAccount",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders V3 - Order",
      "description": "Send harvest request for an Account",
      "parameters": [
        {
          "name": "marketplaceTechnicalCode",
          "schema": "string",
          "required": true,
          "description": "The marketplace technical code"
        },
        {
          "name": "accountId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "marketplaceOrderId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "beezUpOrderId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}",
      "method": "getOrderV3",
      "httpMethod": "get",
      "tag": "Marketplaces - Orders V3 - Order",
      "description": "Get full Order and Order Item(s) properties",
      "parameters": [
        {
          "name": "marketplaceTechnicalCode",
          "schema": "string",
          "required": true,
          "description": "The marketplace technical code"
        },
        {
          "name": "accountId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "beezUpOrderId",
          "schema": "string",
          "required": true,
          "description": "The BeezUP Order identifier"
        },
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}",
      "method": "headOrderV3",
      "httpMethod": "head",
      "tag": "Marketplaces - Orders V3 - Order",
      "description": "Get the meta information about the order (ETag, Last-Modified)",
      "parameters": [
        {
          "name": "marketplaceTechnicalCode",
          "schema": "string",
          "required": true,
          "description": "The marketplace technical code"
        },
        {
          "name": "accountId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "beezUpOrderId",
          "schema": "string",
          "required": true,
          "description": "The BeezUP Order identifier"
        },
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/clearMerchantOrderInfo",
      "method": "clearMerchantOrderInfoV3",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders V3 - Order",
      "description": "Clear an Order's merchant information",
      "parameters": [
        {
          "name": "marketplaceTechnicalCode",
          "schema": "string",
          "required": true,
          "description": "The marketplace technical code"
        },
        {
          "name": "accountId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "beezUpOrderId",
          "schema": "string",
          "required": true,
          "description": "The BeezUP Order identifier"
        },
        {
          "name": "testMode",
          "schema": "boolean",
          "required": false,
          "description": "If true, the operation will be not be sent to marketplace. But the validation will be taken in account."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/harvest",
      "method": "harvestOrderV3",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders V3 - Order",
      "description": "Send harvest request for a single Order",
      "parameters": [
        {
          "name": "marketplaceTechnicalCode",
          "schema": "string",
          "required": true,
          "description": "The marketplace technical code"
        },
        {
          "name": "accountId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "beezUpOrderId",
          "schema": "string",
          "required": true,
          "description": "The BeezUP Order identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/history",
      "method": "getOrderHistoryV3",
      "httpMethod": "get",
      "tag": "Marketplaces - Orders V3 - Order",
      "description": "Get an Order's harvest and change history",
      "parameters": [
        {
          "name": "marketplaceTechnicalCode",
          "schema": "string",
          "required": true,
          "description": "The marketplace technical code"
        },
        {
          "name": "accountId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "beezUpOrderId",
          "schema": "string",
          "required": true,
          "description": "The BeezUP Order identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describe the history related to an order"
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/history/{orderChangeExecutionUUID}",
      "method": "getOrderChangeReportingV3",
      "httpMethod": "get",
      "tag": "Marketplaces - Orders V3 - Order",
      "description": "Get the order change reporting",
      "parameters": [
        {
          "name": "marketplaceTechnicalCode",
          "schema": "string",
          "required": true,
          "description": "The marketplace technical code"
        },
        {
          "name": "accountId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "beezUpOrderId",
          "schema": "string",
          "required": true,
          "description": "The BeezUP Order identifier"
        },
        {
          "name": "orderChangeExecutionUuid",
          "schema": "string",
          "required": true,
          "description": "The order change execution id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The reporting related to a change order operation"
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/setMerchantOrderInfo",
      "method": "setMerchantOrderInfoV3",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders V3 - Order",
      "description": "Set an Order's merchant information",
      "parameters": [
        {
          "name": "marketplaceTechnicalCode",
          "schema": "string",
          "required": true,
          "description": "The marketplace technical code"
        },
        {
          "name": "accountId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "beezUpOrderId",
          "schema": "string",
          "required": true,
          "description": "The BeezUP Order identifier"
        },
        {
          "name": "testMode",
          "schema": "boolean",
          "required": false,
          "description": "If true, the operation will be not be sent to marketplace. But the validation will be taken in account."
        },
        {
          "name": "order_MerchantECommerceSoftwareName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "order_MerchantECommerceSoftwareVersion",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "order_MerchantOrderId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/{changeOrderType}",
      "method": "changeOrderV3",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders V3 - Order",
      "description": "Change your marketplace Order Information (accept, ship, etc.)",
      "parameters": [
        {
          "name": "marketplaceTechnicalCode",
          "schema": "string",
          "required": true,
          "description": "The marketplace technical code"
        },
        {
          "name": "accountId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "beezUpOrderId",
          "schema": "string",
          "required": true,
          "description": "The BeezUP Order identifier"
        },
        {
          "name": "changeOrderType",
          "schema": "string",
          "required": true,
          "description": "The Order change type"
        },
        {
          "name": "userName",
          "schema": "string",
          "required": true,
          "description": "Sometimes the user in the e-commerce application is not the same as user associated with the current subscription key. We recommend providing your application's user login."
        },
        {
          "name": "testMode",
          "schema": "boolean",
          "required": false,
          "description": "If true, the operation will be not be sent to marketplace. But the validation will be taken in account."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/public/channels/",
      "method": "getChannelsIndex",
      "httpMethod": "get",
      "tag": "Public - Channels - Public Channels",
      "description": "Get public channel index",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/public/channels/{countryIsoCode}",
      "method": "getChannels",
      "httpMethod": "get",
      "tag": "Public - Channels - Public Channels",
      "description": "The channel list for one country",
      "parameters": [
        {
          "name": "countryIsoCode",
          "schema": "string",
          "required": true,
          "description": "The country iso code alpha 3 based on this: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3#Decoding_table \\\nTo know which country are available you have to use the operation: GetChannelsByCountry\n"
        },
        {
          "name": "acceptEncoding",
          "schema": "array",
          "required": true,
          "description": "Allows the client to indicate whether it accepts a compressed encoding to reduce traffic size."
        },
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/public/lov/",
      "method": "getPublicLovIndex",
      "httpMethod": "get",
      "tag": "Public - List of Values - LOV",
      "description": "Get all list names",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/public/lov/{listName}",
      "method": "getPublicListOfValues",
      "httpMethod": "get",
      "tag": "Public - List of Values - LOV",
      "description": "Get the list of values related to this list name",
      "parameters": [
        {
          "name": "listName",
          "schema": "string",
          "required": true,
          "description": "The list of value name your want to get"
        },
        {
          "name": "acceptLanguage",
          "schema": "array",
          "required": false,
          "description": "Indicates that the client accepts the following languages."
        },
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/public/security/login",
      "method": "login",
      "httpMethod": "post",
      "tag": "Public - Security - Security",
      "description": "Login",
      "parameters": [
        {
          "name": "login",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/public/security/lostpassword",
      "method": "lostPassword",
      "httpMethod": "post",
      "tag": "Public - Security - Security",
      "description": "Lost password",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        },
        {
          "statusCode": "502",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/public/security/register",
      "method": "register",
      "httpMethod": "post",
      "tag": "Public - Security - Security",
      "description": "User Registration",
      "parameters": [
        {
          "name": "commercialOwnerUserId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "cultureName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/",
      "method": "analyticsIndex",
      "httpMethod": "get",
      "tag": "Analytics - Global",
      "description": "Get the Analytics API operation index",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "The Analytics API operation index."
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/reports/byday",
      "method": "getStoreReportByDayPerStore",
      "httpMethod": "post",
      "tag": "Analytics - Statistics",
      "description": "Get the report by day for a StoreId",
      "parameters": [
        {
          "name": "advancedFilters",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "beginPeriodUtcDate",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "catalogCategoryId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "channelIds",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "endPeriodUtcDate",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "productId",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The key is the StoreId."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/tracking/status",
      "method": "getTrackingStatus",
      "httpMethod": "get",
      "tag": "Analytics - Tracking",
      "description": "Get the global synchronization status of clicks and orders",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}",
      "method": "analyticsStoreIndex",
      "httpMethod": "get",
      "tag": "Analytics - Global",
      "description": "Get the Analytics API operation index for one store",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/optimisations/all/{actionName}",
      "method": "optimiseAll",
      "httpMethod": "post",
      "tag": "Analytics - Optimisations",
      "description": "Optimise all products",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "actionName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/optimisations/bycategory/{catalogCategoryId}/{actionName}",
      "method": "optimiseByCategory",
      "httpMethod": "post",
      "tag": "Analytics - Optimisations",
      "description": "Optimise products by category",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "catalogCategoryId",
          "schema": "string",
          "required": true,
          "description": "The category identifier concerned by this optimisation"
        },
        {
          "name": "actionName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/optimisations/bychannel/{channelId}/{actionName}",
      "method": "optimiseByChannel",
      "httpMethod": "post",
      "tag": "Analytics - Optimisations",
      "description": "Optimise products by channel",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "The channel identifier concerned by this optimisation"
        },
        {
          "name": "actionName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/optimisations/byproduct/{productId}/{actionName}",
      "method": "optimiseByProduct",
      "httpMethod": "post",
      "tag": "Analytics - Optimisations",
      "description": "Optimise product",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "productId",
          "schema": "string",
          "required": true,
          "description": "The product identifier concerned by this optimisation"
        },
        {
          "name": "actionName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/optimisations/copy",
      "method": "copyOptimisation",
      "httpMethod": "post",
      "tag": "Analytics - Optimisations",
      "description": "Copy product optimisations between 2 channels",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "channelIdSource",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "channelIdTarget",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "keepExistingOptimisation",
          "schema": "boolean",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Products optimisatisation copied"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/optimisations/{actionName}",
      "method": "optimise",
      "httpMethod": "post",
      "tag": "Analytics - Optimisations",
      "description": "Optimise products by page",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "actionName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/reports/bycategory",
      "method": "getStoreReportByCategory",
      "httpMethod": "post",
      "tag": "Analytics - Statistics",
      "description": "Get the report by category",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/reports/bychannel",
      "method": "getStoreReportByChannel",
      "httpMethod": "post",
      "tag": "Analytics - Statistics",
      "description": "Get the report by channel",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/reports/byday",
      "method": "getStoreReportByDay",
      "httpMethod": "post",
      "tag": "Analytics - Statistics",
      "description": "Get the report by day for a StoreId",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "advancedFilters",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "beginPeriodUtcDate",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "catalogCategoryId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "channelIds",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "endPeriodUtcDate",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "productId",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/reports/byproduct",
      "method": "getStoreReportByProduct",
      "httpMethod": "post",
      "tag": "Analytics - Statistics",
      "description": "Get the report by product",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/reports/filters",
      "method": "getReportFilters",
      "httpMethod": "get",
      "tag": "Analytics - Reports",
      "description": "Get report filter list for the given store",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/reports/filters/{reportFilterId}",
      "method": "deleteReportFilter",
      "httpMethod": "delete",
      "tag": "Analytics - Reports",
      "description": "Delete the report filter",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "reportFilterId",
          "schema": "string",
          "required": true,
          "description": "Your report filter identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/reports/filters/{reportFilterId}",
      "method": "getReportFilter",
      "httpMethod": "get",
      "tag": "Analytics - Reports",
      "description": "Get the report filter description",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "reportFilterId",
          "schema": "string",
          "required": true,
          "description": "Your report filter identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/reports/filters/{reportFilterId}",
      "method": "saveReportFilter",
      "httpMethod": "put",
      "tag": "Analytics - Reports",
      "description": "Save the report filter",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "reportFilterId",
          "schema": "string",
          "required": true,
          "description": "Your report filter identifier"
        },
        {
          "name": "parameters",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "reportFilterName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/rules",
      "method": "getRules",
      "httpMethod": "get",
      "tag": "Analytics - Rules",
      "description": "Gets the list of rules for a given store",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/rules",
      "method": "createRule",
      "httpMethod": "post",
      "tag": "Analytics - Rules",
      "description": "Rule creation",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "endUtcDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "optimisationActionName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "reportFilterId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ruleName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "startUtcDate",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/rules/executions",
      "method": "getRulesExecutions",
      "httpMethod": "get",
      "tag": "Analytics - Rules",
      "description": "Get the rules execution history",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": true,
          "description": "The page to retrieve"
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": true,
          "description": "The count of rule history to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/rules/run",
      "method": "runRules",
      "httpMethod": "post",
      "tag": "Analytics - Rules",
      "description": "Run all rules for this store",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/rules/{ruleId}",
      "method": "deleteRule",
      "httpMethod": "delete",
      "tag": "Analytics - Rules",
      "description": "Delete Rule",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "ruleId",
          "schema": "string",
          "required": true,
          "description": "Your rule identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/rules/{ruleId}",
      "method": "getRule",
      "httpMethod": "get",
      "tag": "Analytics - Rules",
      "description": "Gets the rule",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "ruleId",
          "schema": "string",
          "required": true,
          "description": "Your rule identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/rules/{ruleId}",
      "method": "updateRule",
      "httpMethod": "patch",
      "tag": "Analytics - Rules",
      "description": "Update Rule",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "ruleId",
          "schema": "string",
          "required": true,
          "description": "Your rule identifier"
        },
        {
          "name": "endUtcDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ruleName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "startUtcDate",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/rules/{ruleId}/disable",
      "method": "disableRule",
      "httpMethod": "post",
      "tag": "Analytics - Rules",
      "description": "Disable rule",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "ruleId",
          "schema": "string",
          "required": true,
          "description": "Your rule identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/rules/{ruleId}/enable",
      "method": "enableRule",
      "httpMethod": "post",
      "tag": "Analytics - Rules",
      "description": "Enable rule",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "ruleId",
          "schema": "string",
          "required": true,
          "description": "Your rule identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/rules/{ruleId}/movedown",
      "method": "moveDownRule",
      "httpMethod": "post",
      "tag": "Analytics - Rules",
      "description": "Move the rule down",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "ruleId",
          "schema": "string",
          "required": true,
          "description": "Your rule identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/rules/{ruleId}/moveup",
      "method": "moveUpRule",
      "httpMethod": "post",
      "tag": "Analytics - Rules",
      "description": "Move the rule up",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "ruleId",
          "schema": "string",
          "required": true,
          "description": "Your rule identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/rules/{ruleId}/run",
      "method": "runRule",
      "httpMethod": "post",
      "tag": "Analytics - Rules",
      "description": "Run rule",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "ruleId",
          "schema": "string",
          "required": true,
          "description": "Your rule identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/tracking/clicks",
      "method": "getStoreTrackedClicks",
      "httpMethod": "get",
      "tag": "Analytics - Tracking",
      "description": "Get the latest tracked clicks",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The amount of clicks to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/tracking/externalorders",
      "method": "getStoreTrackedExternalOrders",
      "httpMethod": "get",
      "tag": "Analytics - Tracking",
      "description": "Get the latest tracked external orders",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The amount of external orders to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/tracking/orders",
      "method": "getStoreTrackedOrders",
      "httpMethod": "get",
      "tag": "Analytics - Tracking",
      "description": "Get the latest tracked orders",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "The amount of orders to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/analytics/{storeId}/tracking/status",
      "method": "getStoreTrackingStatus",
      "httpMethod": "get",
      "tag": "Analytics - Tracking",
      "description": "Get the synchronization status of clicks and orders of a store",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/",
      "method": "catalogIndex",
      "httpMethod": "get",
      "tag": "Catalogs - Global",
      "description": "Get the index of the catalog API",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/beezupColumns",
      "method": "catalogGetBeezUpColumns",
      "httpMethod": "get",
      "tag": "Catalogs - Global",
      "description": "Get the BeezUP columns",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/importations",
      "method": "importationGetReportingsAllStores",
      "httpMethod": "get",
      "tag": "Catalogs - Importation Process",
      "description": "Get the latest catalog importation reporting for all your stores",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}",
      "method": "catalogStoreIndex",
      "httpMethod": "get",
      "tag": "Catalogs - Catalog",
      "description": "Get the index of the catalog API for this store",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/autoImport",
      "method": "autoDeleteAutoImport",
      "httpMethod": "delete",
      "tag": "Catalogs - Auto",
      "description": "Delete Auto Import",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/autoImport",
      "method": "autoGetAutoImportConfiguration",
      "httpMethod": "get",
      "tag": "Catalogs - Auto",
      "description": "Get the auto import configuration",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/autoImport/activate",
      "method": "importationActivateAutoImport",
      "httpMethod": "post",
      "tag": "Catalogs - Auto",
      "description": "Activate the auto importation of the last successful manual catalog importation.",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/autoImport/pause",
      "method": "autoPauseAutoImport",
      "httpMethod": "post",
      "tag": "Catalogs - Auto",
      "description": "Pause Auto Import",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/autoImport/resume",
      "method": "autoResumeAutoImport",
      "httpMethod": "post",
      "tag": "Catalogs - Auto",
      "description": "Resume Auto Import",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/autoImport/scheduling/interval",
      "method": "autoConfigureAutoImportInterval",
      "httpMethod": "post",
      "tag": "Catalogs - Auto",
      "description": "Configure Auto Import Interval",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "interval",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/autoImport/scheduling/schedules",
      "method": "autoScheduleAutoImport",
      "httpMethod": "post",
      "tag": "Catalogs - Auto",
      "description": "Configure Auto Import Schedules",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "localTimeZoneName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "schedules",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/autoImport/start",
      "method": "autoStartAutoImport",
      "httpMethod": "post",
      "tag": "Catalogs - Auto",
      "description": "Start Auto Import Manually",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/catalogColumns",
      "method": "catalogGetCatalogColumns",
      "httpMethod": "get",
      "tag": "Catalogs - Catalog",
      "description": "Get catalog column list",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/catalogColumns/{columnId}/rename",
      "method": "catalogChangeCatalogColumnUserName",
      "httpMethod": "post",
      "tag": "Catalogs - Catalog",
      "description": "Change Catalog Column User Name",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "columnId",
          "schema": "string",
          "required": true,
          "description": "The catalog column identifier"
        },
        {
          "name": "userColumName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/categories",
      "method": "catalogGetCategories",
      "httpMethod": "get",
      "tag": "Catalogs - Catalog",
      "description": "Get category list",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "acceptEncoding",
          "schema": "array",
          "required": true,
          "description": "Indicates that the client accepts that the response will be compressed to reduce traffic size."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The object which contains the category list"
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/customColumns",
      "method": "catalogGetCustomColumns",
      "httpMethod": "get",
      "tag": "Catalogs - Catalog",
      "description": "Get custom column list",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/customColumns/computeExpression",
      "method": "catalogComputeExpression",
      "httpMethod": "post",
      "tag": "Catalogs - Catalog",
      "description": "Compute the expression for this catalog.",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "encryptedExpression",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "productValues",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/customColumns/{columnId}",
      "method": "catalogDeleteCustomColumn",
      "httpMethod": "delete",
      "tag": "Catalogs - Catalog",
      "description": "Delete custom column",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "columnId",
          "schema": "string",
          "required": true,
          "description": "The custom column identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/customColumns/{columnId}",
      "method": "catalogSaveCustomColumn",
      "httpMethod": "put",
      "tag": "Catalogs - Catalog",
      "description": "Create or replace a custom column",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "columnId",
          "schema": "string",
          "required": true,
          "description": "The custom column identifier"
        },
        {
          "name": "displayGroupName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "encryptedBlocklyExpression",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "encryptedExpression",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "userColumnName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/customColumns/{columnId}/expression",
      "method": "catalogGetCustomColumnExpression",
      "httpMethod": "get",
      "tag": "Catalogs - Catalog",
      "description": "Get the encrypted custom column expression",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "columnId",
          "schema": "string",
          "required": true,
          "description": "The custom column identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/customColumns/{columnId}/expression",
      "method": "catalogChangeCustomColumnExpression",
      "httpMethod": "put",
      "tag": "Catalogs - Catalog",
      "description": "Change custom column expression",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "columnId",
          "schema": "string",
          "required": true,
          "description": "The custom column identifier"
        },
        {
          "name": "encryptedBlocklyExpression",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "encryptedExpression",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/customColumns/{columnId}/rename",
      "method": "catalogChangeCustomColumnUserName",
      "httpMethod": "post",
      "tag": "Catalogs - Catalog",
      "description": "Change Custom Column User Name",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "columnId",
          "schema": "string",
          "required": true,
          "description": "The custom column identifier"
        },
        {
          "name": "userColumName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations",
      "method": "importationGetReportings",
      "httpMethod": "get",
      "tag": "Catalogs - Importation Process",
      "description": "Get the latest catalog importation reporting",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/start",
      "method": "importationStartManualUpdate",
      "httpMethod": "post",
      "tag": "Catalogs - Importation Process",
      "description": "Start Manual Import",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "duplicateProductSkuConfiguration",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "input",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}",
      "method": "importationGetImportationMonitoring",
      "httpMethod": "get",
      "tag": "Catalogs - Importation Process",
      "description": "Get the importation status",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describe the reporting of the catalog importation"
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}/cancel",
      "method": "importationCancel",
      "httpMethod": "post",
      "tag": "Catalogs - Importation Process",
      "description": "Cancel importation",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns",
      "method": "importationGetDetectedCatalogColumns",
      "httpMethod": "get",
      "tag": "Catalogs - Importation Catalog Info",
      "description": "Get detected catalog columns during this importation.",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The list of detected catalog column"
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}",
      "method": "importationConfigureCatalogColumn",
      "httpMethod": "post",
      "tag": "Catalogs - Importation Catalog Info",
      "description": "Configure catalog column",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        },
        {
          "name": "columnId",
          "schema": "string",
          "required": true,
          "description": "The custom column identifier"
        },
        {
          "name": "catalogColumn",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}/ignore",
      "method": "importationIgnoreColumn",
      "httpMethod": "post",
      "tag": "Catalogs - Importation Catalog Info",
      "description": "Ignore Column",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        },
        {
          "name": "columnId",
          "schema": "string",
          "required": true,
          "description": "The custom column identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}/map",
      "method": "importationMapCatalogColumn",
      "httpMethod": "post",
      "tag": "Catalogs - Importation Catalog Info",
      "description": "Map catalog column to a BeezUP column",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        },
        {
          "name": "columnId",
          "schema": "string",
          "required": true,
          "description": "The catalog column identifier"
        },
        {
          "name": "beezUPColumnName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}/reattend",
      "method": "importationReattendColumn",
      "httpMethod": "post",
      "tag": "Catalogs - Importation Catalog Info",
      "description": "Reattend Column",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        },
        {
          "name": "columnId",
          "schema": "string",
          "required": true,
          "description": "The custom column identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}/unmap",
      "method": "importationUnmapCatalogColumn",
      "httpMethod": "post",
      "tag": "Catalogs - Importation Catalog Info",
      "description": "Unmap catalog column",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        },
        {
          "name": "columnId",
          "schema": "string",
          "required": true,
          "description": "The catalog column identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}/commit",
      "method": "importationCommit",
      "httpMethod": "post",
      "tag": "Catalogs - Importation Process",
      "description": "Commit Importation",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}/commitColumns",
      "method": "importationCommitColumns",
      "httpMethod": "post",
      "tag": "Catalogs - Importation Process",
      "description": "Commit columns",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}/configureRemainingCatalogColumns",
      "method": "importationConfigureRemainingCatalogColumns",
      "httpMethod": "post",
      "tag": "Catalogs - Importation Process",
      "description": "Configure remaining catalog columns",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}/customColumns",
      "method": "importationGetCustomColumns",
      "httpMethod": "get",
      "tag": "Catalogs - Importation Catalog Info",
      "description": "Get custom columns currently place in this importation",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}/customColumns/{columnId}",
      "method": "importationDeleteCustomColumn",
      "httpMethod": "delete",
      "tag": "Catalogs - Importation Catalog Info",
      "description": "Delete Custom Column",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        },
        {
          "name": "columnId",
          "schema": "string",
          "required": true,
          "description": "The custom column identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}/customColumns/{columnId}",
      "method": "importationSaveCustomColumn",
      "httpMethod": "put",
      "tag": "Catalogs - Importation Catalog Info",
      "description": "Create or replace a custom column",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        },
        {
          "name": "columnId",
          "schema": "string",
          "required": true,
          "description": "The custom column identifier"
        },
        {
          "name": "encryptedBlocklyExpression",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "encryptedExpression",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "userColumName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}/customColumns/{columnId}/expression",
      "method": "importationGetCustomColumnExpression",
      "httpMethod": "get",
      "tag": "Catalogs - Importation Catalog Info",
      "description": "Get the encrypted custom column expression in this importation",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        },
        {
          "name": "columnId",
          "schema": "string",
          "required": true,
          "description": "The custom column identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}/customColumns/{columnId}/map",
      "method": "importationMapCustomColumn",
      "httpMethod": "post",
      "tag": "Catalogs - Importation Catalog Info",
      "description": "Map custom column to a BeezUP column",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        },
        {
          "name": "columnId",
          "schema": "string",
          "required": true,
          "description": "The custom column identifier"
        },
        {
          "name": "beezUPColumnName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}/customColumns/{columnId}/unmap",
      "method": "importationUnmapCustomColumn",
      "httpMethod": "post",
      "tag": "Catalogs - Importation Catalog Info",
      "description": "Unmap custom column",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        },
        {
          "name": "columnId",
          "schema": "string",
          "required": true,
          "description": "The custom column identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}/productSamples/{productSampleIndex}",
      "method": "importationGetProductSample",
      "httpMethod": "get",
      "tag": "Catalogs - Importation Catalog Info",
      "description": "Get the product sample related to this importation with all columns (catalog and custom)",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        },
        {
          "name": "productSampleIndex",
          "schema": "integer",
          "required": true,
          "description": "Index of the product sample. Starting from 0 to 99."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describe a product sample"
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}/productSamples/{productSampleIndex}/customColumns/{columnId}",
      "method": "importationGetProductSampleCustomColumnValue",
      "httpMethod": "get",
      "tag": "Catalogs - Importation Catalog Info",
      "description": "Get product sample custom column value related to this importation.",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        },
        {
          "name": "productSampleIndex",
          "schema": "integer",
          "required": true,
          "description": "Index of the product sample. Starting from 0 to 99."
        },
        {
          "name": "columnId",
          "schema": "string",
          "required": true,
          "description": "The custom column identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}/products/list",
      "method": "importationGetProductsReport",
      "httpMethod": "post",
      "tag": "Catalogs - Importation Process",
      "description": "Importation Get Products Report",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        },
        {
          "name": "ean",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "errorCodes",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "mpn",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "sku",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get Importation Products Report Response"
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}/report",
      "method": "importationGetReport",
      "httpMethod": "get",
      "tag": "Catalogs - Importation Process",
      "description": "Importation Get Report",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get Importation Report Response"
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/importations/{executionId}/technicalProgression",
      "method": "importationTechnicalProgression",
      "httpMethod": "get",
      "tag": "Catalogs - Importation Process",
      "description": "Get technical progression",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "executionId",
          "schema": "string",
          "required": true,
          "description": "The execution identifier of you catalog importation"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/inputConfiguration",
      "method": "importationGetManualUpdateLastInputConfig",
      "httpMethod": "get",
      "tag": "Catalogs - Catalog",
      "description": "Get the last input configuration",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Last manual import input configuration"
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/products",
      "method": "catalogGetProductBySku",
      "httpMethod": "get",
      "tag": "Catalogs - Catalog",
      "description": "Get product by Sku",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "sku",
          "schema": "string",
          "required": true,
          "description": "The product sku you want to get"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represent a catalog product"
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/products/list",
      "method": "catalogGetProducts",
      "httpMethod": "post",
      "tag": "Catalogs - Catalog",
      "description": "Get product list",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "categoryPath",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "columnIdList",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "ean",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "exists",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "mpn",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "orderByCatalogColumnId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "productIdList",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "sku",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "withoutSubCategories",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/products/random",
      "method": "catalogGetRandomProducts",
      "httpMethod": "get",
      "tag": "Catalogs - Catalog",
      "description": "Get random product list",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/catalogs/{storeId}/products/{productId}",
      "method": "catalogGetProductByProductId",
      "httpMethod": "get",
      "tag": "Catalogs - Catalog",
      "description": "Get product by ProductId",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "productId",
          "schema": "string",
          "required": true,
          "description": "The product identifier you want to get"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represent a catalog product"
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/",
      "method": "getChannelCatalogs",
      "httpMethod": "get",
      "tag": "Channel Catalogs - Global",
      "description": "List all your current channel catalogs",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": false,
          "description": "The store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This is the index of the channel catalog API"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/",
      "method": "addChannelCatalog",
      "httpMethod": "post",
      "tag": "Channel Catalogs - Global",
      "description": "Add a new channel catalog",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/filterOperators",
      "method": "getChannelCatalogFilterOperators",
      "httpMethod": "get",
      "tag": "Channel Catalogs - Global",
      "description": "Get channel catalog filter operators",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/products",
      "method": "getChannelCatalogProductByChannelCatalog",
      "httpMethod": "post",
      "tag": "Channel Catalogs - Products",
      "description": "Get channel catalog products related to these channel catalogs",
      "parameters": [
        {
          "name": "channelCatalogIds",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "productId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}",
      "method": "deleteChannelCatalog",
      "httpMethod": "delete",
      "tag": "Channel Catalogs - Global",
      "description": "Delete the channel catalog",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}",
      "method": "getChannelCatalog",
      "httpMethod": "get",
      "tag": "Channel Catalogs - Global",
      "description": "Get the channel catalog information",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/categories",
      "method": "getChannelCatalogCategories",
      "httpMethod": "get",
      "tag": "Channel Catalogs - Categories",
      "description": "Get channel catalog categories",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/categories/configure",
      "method": "configureChannelCatalogCategory",
      "httpMethod": "post",
      "tag": "Channel Catalogs - Categories",
      "description": "Configure channel catalog category",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        },
        {
          "name": "channelCatalogCategories",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "overrideSubCategoryMappings",
          "schema": "boolean",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/categories/disableMapping",
      "method": "disableChannelCatalogCategoryMapping",
      "httpMethod": "post",
      "tag": "Channel Catalogs - Categories",
      "description": "Disable a channel catalog category mapping",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/categories/reenableMapping",
      "method": "reenableChannelCatalogCategoryMapping",
      "httpMethod": "post",
      "tag": "Channel Catalogs - Categories",
      "description": "Reenable a channel catalog category mapping",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/columnMappings",
      "method": "configureChannelCatalogColumnMappings",
      "httpMethod": "put",
      "tag": "Channel Catalogs - Column Mappings",
      "description": "Configure channel catalog column mappings",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/disable",
      "method": "disableChannelCatalog",
      "httpMethod": "post",
      "tag": "Channel Catalogs - Settings",
      "description": "Disable a channel catalog",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/enable",
      "method": "enableChannelCatalog",
      "httpMethod": "post",
      "tag": "Channel Catalogs - Settings",
      "description": "Enable a channel catalog",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "402",
          "description": "The message contains the offer identifier required to execute this operation"
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/exclusionFilters",
      "method": "getChannelCatalogExclusionFilters",
      "httpMethod": "get",
      "tag": "Channel Catalogs - Exclusion Filters",
      "description": "Get channel catalog exclusion filters",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/exclusionFilters",
      "method": "configureChannelCatalogExclusionFilters",
      "httpMethod": "put",
      "tag": "Channel Catalogs - Exclusion Filters",
      "description": "Configure channel catalog exclusion filters",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/exportations/cache",
      "method": "getChannelCatalogExportationCacheInfo",
      "httpMethod": "get",
      "tag": "Channel Catalogs - Exportations",
      "description": "Get the exportation cache information",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/exportations/cache/clear",
      "method": "clearChannelCatalogExportationCache",
      "httpMethod": "post",
      "tag": "Channel Catalogs - Exportations",
      "description": "Clear the exportation cache",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/exportations/history",
      "method": "getChannelCatalogExportationHistory",
      "httpMethod": "get",
      "tag": "Channel Catalogs - Exportations",
      "description": "Get the exportation history",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": true,
          "description": "The page number you want to get"
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": true,
          "description": "The entry count you want to get"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/products",
      "method": "getChannelCatalogProductInfoList",
      "httpMethod": "post",
      "tag": "Channel Catalogs - Products",
      "description": "Get channel catalog product information list",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        },
        {
          "name": "catalogCategoryFilter",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "channelCategoryFilter",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "criteria",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "overridden",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "productFilters",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The channel catalog product info list"
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/products/counters",
      "method": "getChannelCatalogProductsCounters",
      "httpMethod": "get",
      "tag": "Channel Catalogs - Products",
      "description": "Get channel catalog products' counters",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The channel catalog products counters. For each counter you will have a count."
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/products/export",
      "method": "exportChannelCatalogProductInfoList",
      "httpMethod": "post",
      "tag": "Channel Catalogs - Products",
      "description": "Export channel catalog product information list",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        },
        {
          "name": "format",
          "schema": "string",
          "required": true,
          "description": "The file type of the exportation"
        },
        {
          "name": "catalogCategoryFilter",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "channelCategoryFilter",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "criteria",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "overridden",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "productFilters",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/products/{productId}",
      "method": "getChannelCatalogProductInfo",
      "httpMethod": "get",
      "tag": "Channel Catalogs - Products",
      "description": "Get channel catalog product information",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        },
        {
          "name": "productId",
          "schema": "string",
          "required": true,
          "description": "The product identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/disable",
      "method": "disableChannelCatalogProduct",
      "httpMethod": "post",
      "tag": "Channel Catalogs - Products Optimisation",
      "description": "Disable channel catalog product",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        },
        {
          "name": "productId",
          "schema": "string",
          "required": true,
          "description": "The product identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/overrides",
      "method": "overrideChannelCatalogProductValues",
      "httpMethod": "put",
      "tag": "Channel Catalogs - Products Overrides",
      "description": "Override channel catalog product values",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        },
        {
          "name": "productId",
          "schema": "string",
          "required": true,
          "description": "The product identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/overrides/copy",
      "method": "getChannelCatalogProductValueOverrideCopy",
      "httpMethod": "get",
      "tag": "Channel Catalogs - Products Overrides",
      "description": "Get channel catalog product value override compatibilities status",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        },
        {
          "name": "productId",
          "schema": "string",
          "required": true,
          "description": "The product identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/overrides/copy",
      "method": "configureChannelCatalogProductValueOverrideCopy",
      "httpMethod": "post",
      "tag": "Channel Catalogs - Products Overrides",
      "description": "Copy channel catalog product value override",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        },
        {
          "name": "productId",
          "schema": "string",
          "required": true,
          "description": "The product identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/overrides/{channelColumnId}",
      "method": "deleteChannelCatalogProductValueOverride",
      "httpMethod": "delete",
      "tag": "Channel Catalogs - Products Overrides",
      "description": "Delete a specific channel catalog product value override",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        },
        {
          "name": "productId",
          "schema": "string",
          "required": true,
          "description": "The product identifier"
        },
        {
          "name": "channelColumnId",
          "schema": "string",
          "required": true,
          "description": "The channel column identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/reenable",
      "method": "reenableChannelCatalogProduct",
      "httpMethod": "post",
      "tag": "Channel Catalogs - Products Optimisation",
      "description": "Reenable channel catalog product",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        },
        {
          "name": "productId",
          "schema": "string",
          "required": true,
          "description": "The product identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/settings/cost",
      "method": "configureChannelCatalogCostSettings",
      "httpMethod": "put",
      "tag": "Channel Catalogs - Settings",
      "description": "Configure channel catalog cost settings",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        },
        {
          "name": "costType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "globalCostValue",
          "schema": "number",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channelCatalogs/{channelCatalogId}/settings/general",
      "method": "configureChannelCatalogGeneralSettings",
      "httpMethod": "put",
      "tag": "Channel Catalogs - Settings",
      "description": "Configure channel catalog general settings",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        },
        {
          "name": "acceptToPublishInfo",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "activeBeezUPTracking",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "doNotExportOutOfStockProducts",
          "schema": "boolean",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channels/",
      "method": "getAvailableChannels",
      "httpMethod": "get",
      "tag": "Channels - Channels Global",
      "description": "List all available channel for this store",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "The store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channels/{channelId}",
      "method": "getChannelInfo",
      "httpMethod": "get",
      "tag": "Channels - Channels Global",
      "description": "Get channel information",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "The channel identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/channels/{channelId}/categories",
      "method": "getChannelCategories",
      "httpMethod": "get",
      "tag": "Channels - Channels Global",
      "description": "Get channel categories",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "The channel identifier"
        },
        {
          "name": "acceptEncoding",
          "schema": "array",
          "required": true,
          "description": "Indicates that the client accepts that the response will be compressed to reduce traffic size."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get channel first level category list"
        }
      ]
    },
    {
      "url": "/v2/user/channels/{channelId}/columns",
      "method": "getChannelColumns",
      "httpMethod": "post",
      "tag": "Channels - Channels Global",
      "description": "Get channel columns",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "The channel identifier"
        },
        {
          "name": "acceptEncoding",
          "schema": "array",
          "required": true,
          "description": "Indicates that the client accepts that the response will be compressed to reduce traffic size."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/",
      "method": "getCustomerIndex",
      "httpMethod": "get",
      "tag": "Customer - Global",
      "description": "The index of all operations and LOV",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The index of the customer API"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/account",
      "method": "getUserAccountInfo",
      "httpMethod": "get",
      "tag": "Customer - Account",
      "description": "Get user account information",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/account/activate",
      "method": "activateUserAccount",
      "httpMethod": "post",
      "tag": "Customer - Account",
      "description": "Activate the user account",
      "parameters": [],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/account/changeEmail",
      "method": "changeEmail",
      "httpMethod": "post",
      "tag": "Customer - Account",
      "description": "Change user email",
      "parameters": [
        {
          "name": "newEmail",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/account/changePassword",
      "method": "changePassword",
      "httpMethod": "post",
      "tag": "Customer - Account",
      "description": "Change user password",
      "parameters": [
        {
          "name": "newPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "oldPassword",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/account/companyInfo",
      "method": "saveCompanyInfo",
      "httpMethod": "put",
      "tag": "Customer - Account",
      "description": "Change company information",
      "parameters": [
        {
          "name": "accountingEmails",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "address",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "city",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "company",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "countryIsoCodeAlpha3",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "postalCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "vatNumber",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/account/creditCardInfo",
      "method": "getCreditCardInfo",
      "httpMethod": "get",
      "tag": "Customer - Account",
      "description": "Get credit card information",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "503",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/account/creditCardInfo",
      "method": "saveCreditCardInfo",
      "httpMethod": "put",
      "tag": "Customer - Account",
      "description": "Save user credit card info",
      "parameters": [
        {
          "name": "cardNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "cardVerificationCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "expirationMonth",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "expirationYear",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "502",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/account/personalInfo",
      "method": "savePersonalInfo",
      "httpMethod": "put",
      "tag": "Customer - Account",
      "description": "Save user personal information",
      "parameters": [
        {
          "name": "beezUPTimeZoneId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "phoneNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "whatIDo",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/account/profilePictureInfo",
      "method": "getProfilePictureInfo",
      "httpMethod": "get",
      "tag": "Customer - Account",
      "description": "Get profile picture information",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/account/profilePictureInfo",
      "method": "saveProfilePictureInfo",
      "httpMethod": "put",
      "tag": "Customer - Account",
      "description": "Change user picture information",
      "parameters": [
        {
          "name": "profilePictureSelected",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "profilePictureUrl",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "413",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/account/resendEmailActivation",
      "method": "resendEmailActivation",
      "httpMethod": "post",
      "tag": "Customer - Account",
      "description": "Resend email activation",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        },
        {
          "statusCode": "502",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/billingPeriods",
      "method": "getBillingPeriods",
      "httpMethod": "get",
      "tag": "Customer - Contracts",
      "description": "Get billing periods conditions",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/contracts",
      "method": "getContracts",
      "httpMethod": "get",
      "tag": "Customer - Contracts",
      "description": "Get contract list",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/contracts",
      "method": "createContract",
      "httpMethod": "post",
      "tag": "Customer - Contracts",
      "description": "Create a new contract",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/contracts/current/disableAutoRenewal",
      "method": "terminateCurrentContract",
      "httpMethod": "post",
      "tag": "Customer - Contracts",
      "description": "Schedule termination of your current contract at the end of the commitment.",
      "parameters": [
        {
          "name": "contractTerminationReason",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "contractTerminationReasonType",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/contracts/current/reenableAutoRenewal",
      "method": "reactivateCurrentContract",
      "httpMethod": "post",
      "tag": "Customer - Contracts",
      "description": "Reactivate your terminated contract.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/contracts/next",
      "method": "deleteNextContract",
      "httpMethod": "delete",
      "tag": "Customer - Contracts",
      "description": "Delete your next contract",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/friends/{userId}",
      "method": "getFriendInfo",
      "httpMethod": "get",
      "tag": "Customer - Friends",
      "description": "Get friend information",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "Your friend user id"
        },
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/invoices",
      "method": "getInvoices",
      "httpMethod": "get",
      "tag": "Customer - Invoices",
      "description": "Get all your invoices",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/offers",
      "method": "getStandardOffers",
      "httpMethod": "get",
      "tag": "Customer - Contracts",
      "description": "Get all standard offers",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/offers",
      "method": "getOffer",
      "httpMethod": "post",
      "tag": "Customer - Contracts",
      "description": "Get offer pricing",
      "parameters": [
        {
          "name": "billingPeriodInMonth",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "couponDiscountCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "couponOfferCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "offerId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "storeCount",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/security/logout",
      "method": "logout",
      "httpMethod": "post",
      "tag": "Customer - Security",
      "description": "Log out the current user from go2",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/stores",
      "method": "getStores",
      "httpMethod": "get",
      "tag": "Customer - Stores",
      "description": "Get store list",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/stores",
      "method": "createStore",
      "httpMethod": "post",
      "tag": "Customer - Stores",
      "description": "Create a new store",
      "parameters": [
        {
          "name": "countryIsoCodeAlpha3",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sectors",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/stores/{storeId}",
      "method": "deleteStore",
      "httpMethod": "delete",
      "tag": "Customer - Stores",
      "description": "Delete a store",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/stores/{storeId}",
      "method": "getStore",
      "httpMethod": "get",
      "tag": "Customer - Stores",
      "description": "Get store's information",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/stores/{storeId}",
      "method": "updateStore",
      "httpMethod": "patch",
      "tag": "Customer - Stores",
      "description": "Update some store's information.",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sectors",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/stores/{storeId}/alerts",
      "method": "getStoreAlerts",
      "httpMethod": "get",
      "tag": "Customer - Alerts",
      "description": "Get store's alerts",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/stores/{storeId}/alerts",
      "method": "saveStoreAlerts",
      "httpMethod": "post",
      "tag": "Customer - Alerts",
      "description": "Save store alerts",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/stores/{storeId}/rights",
      "method": "getRights",
      "httpMethod": "get",
      "tag": "Customer - Rights",
      "description": "Get store's rights",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/stores/{storeId}/shares",
      "method": "getStoreShares",
      "httpMethod": "get",
      "tag": "Customer - Shares",
      "description": "Get shares related to this store",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/stores/{storeId}/shares",
      "method": "shareStore",
      "httpMethod": "post",
      "tag": "Customer - Shares",
      "description": "Share a store to another user",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/stores/{storeId}/shares/{userId}",
      "method": "deleteStoreShare",
      "httpMethod": "delete",
      "tag": "Customer - Shares",
      "description": "Delete a share of a store to another user",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "Your store identifier"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The friend user id"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/customer/zendeskToken",
      "method": "zendeskToken",
      "httpMethod": "get",
      "tag": "Customer - Security",
      "description": "Zendesk token",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "JWT token to access Zendesk restricted help center"
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/legacyTracking/channelCatalogs/",
      "method": "getLegacyTrackingChannelCatalogs",
      "httpMethod": "get",
      "tag": "Channel Catalogs - Legacy Tracking - Global",
      "description": "List all your current channel catalogs configured to use legacy tracking format",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": false,
          "description": "The store identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This is the index of the channel catalog API"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/legacyTracking/channelCatalogs/{channelCatalogId}",
      "method": "getLegacyTrackingChannelCatalog",
      "httpMethod": "get",
      "tag": "Channel Catalogs - Legacy Tracking - Global",
      "description": "Get the channel catalog configured to use legacy tracking format information",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The channel catalog"
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/legacyTracking/channelCatalogs/{channelCatalogId}/migrate",
      "method": "migrateLegacyTrackingChannelCatalog",
      "httpMethod": "post",
      "tag": "Channel Catalogs - Legacy Tracking - Global",
      "description": "Migrate a channel catalog to current tracking format",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "The channel catalog identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/lov/",
      "method": "getUserLovIndex",
      "httpMethod": "get",
      "tag": "User - List of Values - LOV",
      "description": "Get all list names",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/lov/{listName}",
      "method": "getUserListOfValues",
      "httpMethod": "get",
      "tag": "User - List of Values - LOV",
      "description": "Get the list of values related to this list name",
      "parameters": [
        {
          "name": "listName",
          "schema": "string",
          "required": true,
          "description": "The list of value name your want to get"
        },
        {
          "name": "acceptLanguage",
          "schema": "array",
          "required": false,
          "description": "Indicates that the client accepts the following languages."
        },
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/channelcatalogs/",
      "method": "getMarketplaceChannelCatalogs",
      "httpMethod": "get",
      "tag": "Marketplaces - Channel catalogs - Global",
      "description": "Get your marketplace channel catalog list",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": false,
          "description": "The StoreId to filter by"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The marketplace channel catalog list"
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/channelcatalogs/publications/{marketplaceTechnicalCode}/{accountId}/history",
      "method": "getPublications",
      "httpMethod": "get",
      "tag": "Marketplaces - Channel catalogs - Publications",
      "description": "Fetch the publication history for an account, sorted by descending start date",
      "parameters": [
        {
          "name": "marketplaceTechnicalCode",
          "schema": "string",
          "required": true,
          "description": "Marketplace Technical Code to query (required)"
        },
        {
          "name": "accountId",
          "schema": "integer",
          "required": true,
          "description": "Account Id to query (required)"
        },
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": false,
          "description": "Channel Catalog Id by which to filter (optional)"
        },
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": "Amount of entries to fetch (optional, default set to 10)"
        },
        {
          "name": "publicationTypes",
          "schema": "array",
          "required": true,
          "description": "Publication types by which to filter (optional)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The publication history for an account"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/channelcatalogs/publications/{marketplaceTechnicalCode}/{accountId}/publish",
      "method": "publishCatalogToMarketplace",
      "httpMethod": "post",
      "tag": "Marketplaces - Channel catalogs - Publications",
      "description": "[PREVIEW] Launch a publication of the catalog to the marketplace",
      "parameters": [
        {
          "name": "marketplaceTechnicalCode",
          "schema": "string",
          "required": true,
          "description": "Marketplace Technical Code to query (required)"
        },
        {
          "name": "accountId",
          "schema": "integer",
          "required": true,
          "description": "Account Id to query (required)"
        },
        {
          "name": "feedType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "publicationStrategyKind",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "withUnpublish",
          "schema": "boolean",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/channelcatalogs/{channelCatalogId}/properties",
      "method": "getChannelCatalogMarketplaceProperties",
      "httpMethod": "get",
      "tag": "Marketplaces - Channel catalogs - Settings",
      "description": "Get the marketplace properties for a channel catalog",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "redirectionPageUrl",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "acceptLanguage",
          "schema": "array",
          "required": false,
          "description": "Indicates that the client accepts the following languages."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/channelcatalogs/{channelCatalogId}/settings",
      "method": "getChannelCatalogMarketplaceSettings",
      "httpMethod": "get",
      "tag": "Marketplaces - Channel catalogs - Settings",
      "description": "Get the marketplace settings for a channel catalog",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "Channel Catalog Id to query (required)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The channel catalog marketplace settings"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/channelcatalogs/{channelCatalogId}/settings",
      "method": "setChannelCatalogMarketplaceSettings",
      "httpMethod": "post",
      "tag": "Marketplaces - Channel catalogs - Settings",
      "description": "Save new marketplace settings for a channel catalog",
      "parameters": [
        {
          "name": "channelCatalogId",
          "schema": "string",
          "required": true,
          "description": "Channel Catalog Id to query"
        },
        {
          "name": "settings",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/",
      "method": "getOrderIndex",
      "httpMethod": "get",
      "tag": "Marketplaces - Orders - Global",
      "description": "[DEPRECATED] Get all actions you can do on the order API",
      "parameters": [
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/automaticTransitions",
      "method": "getAutomaticTransitions",
      "httpMethod": "get",
      "tag": "Marketplaces - Orders - AutoTransitions",
      "description": "Get list of configured automatic Order status transitions",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": false,
          "description": "The StoreId to filter by"
        },
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/automaticTransitions",
      "method": "configureAutomaticTransitions",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders - AutoTransitions",
      "description": "Configure new or existing automatic Order status transition",
      "parameters": [
        {
          "name": "automaticTransitions",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/batches/changeOrders/{changeOrderType}",
      "method": "changeOrderList",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders - Batches",
      "description": "[DEPRECATED] Send a batch of operations to change your marketplace Order information: accept, ship, etc.  (max 100 items per call)",
      "parameters": [
        {
          "name": "changeOrderType",
          "schema": "string",
          "required": true,
          "description": "The Order change type"
        },
        {
          "name": "userName",
          "schema": "string",
          "required": true,
          "description": "Sometimes the user in the e-commerce application is not the same as user associated with the current subscription key. We recommend providing your application's user login."
        },
        {
          "name": "testMode",
          "schema": "boolean",
          "required": false,
          "description": "If true, the operation will be not be sent to marketplace. But the validation will be taken in account."
        },
        {
          "name": "changeOrders",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": "The response given by the batch operation"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/batches/clearMerchantOrderInfos",
      "method": "clearMerchantOrderInfoList",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders - Batches",
      "description": "[DEPRECATED] Send a batch of operations to clear an Order's merchant information (max 100 items per call)",
      "parameters": [
        {
          "name": "orders",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": "The response given by the batch operation"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/batches/setMerchantOrderInfos",
      "method": "setMerchantOrderInfoList",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders - Batches",
      "description": "[DEPRECATED] Send a batch of operations to set an Order's merchant information  (max 100 items per call)",
      "parameters": [
        {
          "name": "order_MerchantECommerceSoftwareName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "order_MerchantECommerceSoftwareVersion",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orders",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": "The response given by the batch operation"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/exportations",
      "method": "getOrderExportations",
      "httpMethod": "get",
      "tag": "Marketplaces - Orders - Exports",
      "description": "Get a paginated list of Order report exportations",
      "parameters": [
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": true,
          "description": "The page number you want to get"
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": true,
          "description": "The entry count you want to get"
        },
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "The store identifier to regroup the order exportations"
        },
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The list of Order report exportations.\\\nThe paginationResult properties can be null if the list is empty.\n"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/exportations",
      "method": "exportOrders",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders - Exports",
      "description": "Request a new Order report exportation to be generated",
      "parameters": [
        {
          "name": "format",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "orderListRequestWithoutPagination",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/harvest",
      "method": "harvestAll",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders - Global",
      "description": "[DEPRECATED] Send harvest request to all your marketplaces",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": false,
          "description": "The StoreId to filter by"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/invoices/generate",
      "method": "generateBatchOrderInvoice",
      "httpMethod": "post",
      "tag": "OM Invoice - API - Generation",
      "description": "Generate an Order Invoice batch",
      "parameters": [
        {
          "name": "userName",
          "schema": "string",
          "required": true,
          "description": "Sometimes the user in the e-commerce application is not the same as user associated with the current subscription key. We recommend providing your application's user login."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/invoices/getPdfInvoice",
      "method": "getOrderInvoicePdf",
      "httpMethod": "post",
      "tag": "OM Invoice - API - Generation",
      "description": "Returns the PDF version of the invoice",
      "parameters": [
        {
          "name": "orderInvoiceUri",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/invoices/settings/design",
      "method": "getOrderInvoiceDesignSettings",
      "httpMethod": "get",
      "tag": "OM Invoice - API - Settings",
      "description": "Get Order Invoice design settings",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/invoices/settings/design",
      "method": "saveOrderInvoiceDesignSettings",
      "httpMethod": "put",
      "tag": "OM Invoice - API - Settings",
      "description": "Save Order Invoice design settings",
      "parameters": [
        {
          "name": "footerContentHtml",
          "schema": "string",
          "description": ""
        },
        {
          "name": "headerContentHtml",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/invoices/settings/design/preview",
      "method": "getOrderInvoiceDesignSettingsPreview",
      "httpMethod": "post",
      "tag": "OM Invoice - API - Settings",
      "description": "View a preview an Order Invoice using custom design settings",
      "parameters": [
        {
          "name": "acceptEncoding",
          "schema": "string",
          "required": true,
          "description": "Allows the client to indicate wether it accepts a compressed encoding to reduce traffic size"
        },
        {
          "name": "footerContentHtml",
          "schema": "string",
          "description": ""
        },
        {
          "name": "headerContentHtml",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/invoices/settings/general",
      "method": "getOrderInvoiceGeneralSettings",
      "httpMethod": "get",
      "tag": "OM Invoice - API - Settings",
      "description": "Get Order Invoice general settings",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/invoices/settings/general",
      "method": "saveOrderInvoiceGeneralSettings",
      "httpMethod": "put",
      "tag": "OM Invoice - API - Settings",
      "description": "Save Order Invoice general settings",
      "parameters": [
        {
          "name": "cultureName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "invoicePrefix",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "invoiceStartingSequenceNumber",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "productVATPercent",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "shippingVATPercent",
          "schema": "number",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/invoices/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderUUID}/generate",
      "method": "generateOrderInvoice",
      "httpMethod": "post",
      "tag": "OM Invoice - API - Generation",
      "description": "Generate an Order Invoice",
      "parameters": [
        {
          "name": "marketplaceTechnicalCode",
          "schema": "string",
          "required": true,
          "description": "The Marketplace Technical Code"
        },
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "The Account Identifier"
        },
        {
          "name": "beezUpOrderUuid",
          "schema": "string",
          "required": true,
          "description": "The BeezUP Order UUID"
        },
        {
          "name": "userName",
          "schema": "string",
          "required": true,
          "description": "Sometimes the user in the e-commerce application is not the same as user associated with the current subscription key. We recommend providing your application's user login."
        },
        {
          "name": "invoiceSequenceNumber",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/invoices/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderUUID}/preview",
      "method": "getOrderInvoicePreview",
      "httpMethod": "post",
      "tag": "OM Invoice - API - Generation",
      "description": "View a preview an Order Invoice",
      "parameters": [
        {
          "name": "marketplaceTechnicalCode",
          "schema": "string",
          "required": true,
          "description": "The Marketplace Technical Code"
        },
        {
          "name": "accountId",
          "schema": "string",
          "required": true,
          "description": "The Account Identifier"
        },
        {
          "name": "beezUpOrderUuid",
          "schema": "string",
          "required": true,
          "description": "The BeezUP Order UUID"
        },
        {
          "name": "acceptEncoding",
          "schema": "string",
          "required": true,
          "description": "Allows the client to indicate wether it accepts a compressed encoding to reduce traffic size"
        },
        {
          "name": "invoiceSequenceNumber",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/list/full",
      "method": "getOrderListFull",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders - List",
      "description": "[DEPRECATED] Get a paginated list of all Orders with all Order and Order Item(s) properties",
      "parameters": [
        {
          "name": "acceptEncoding",
          "schema": "array",
          "required": true,
          "description": "Allows the client to indicate wether it accepts a compressed encoding to reduce traffic size"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The order list with all information we have from the orders and its items.\\\nThe paginationResult properties can be null if the list is empty.\n"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/list/light",
      "method": "getOrderListLight",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders - List",
      "description": "[DEPRECATED] Get a paginated list of all Orders without details",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "The order list with minimum information we have from the orders.\\\nThe paginationResult properties can be null if the list is empty.\n"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/status",
      "method": "getMarketplaceAccountsSynchronization",
      "httpMethod": "get",
      "tag": "Marketplaces - Orders - Global",
      "description": "[DEPRECATED] Get current synchronization status between your marketplaces and BeezUP accounts",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": false,
          "description": "The StoreId to filter by"
        },
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/subscriptions/",
      "method": "getSubscriptionList",
      "httpMethod": "get",
      "tag": "Marketplaces - Orders - Subscriptions - Subscriptions",
      "description": "Get the subscription list",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/subscriptions/{id}",
      "method": "deleteSubscription",
      "httpMethod": "delete",
      "tag": "Marketplaces - Orders - Subscriptions - Subscriptions",
      "description": "Delete a subscription to the orders",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/subscriptions/{id}",
      "method": "getSubscription",
      "httpMethod": "get",
      "tag": "Marketplaces - Orders - Subscriptions - Subscriptions",
      "description": "Get a subscription to the orders",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/subscriptions/{id}",
      "method": "createSubscription",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders - Subscriptions - Subscriptions",
      "description": "Creates a subscription to the orders",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "merchantApplicationName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "merchantApplicationVersion",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "merchantEmailAlert",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "targetUrl",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/subscriptions/{id}/activate",
      "method": "activateSubscription",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders - Subscriptions - Subscriptions",
      "description": "Activate a subscription to the orders",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "recoverBeginPeriodOrderLastModificationUtcDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "recoverEndPeriodOrderLastModificationUtcDate",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "503",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/subscriptions/{id}/deactivate",
      "method": "deactivateSubscription",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders - Subscriptions - Subscriptions",
      "description": "Deactivate a subscription to the orders",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/subscriptions/{id}/reporting",
      "method": "getSubscriptionPushReporting",
      "httpMethod": "get",
      "tag": "Marketplaces - Orders - Subscriptions - Subscriptions",
      "description": "Get the push reporting related to this subscription",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/subscriptions/{id}/retry",
      "method": "retryPushOrders",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders - Subscriptions - Subscriptions",
      "description": "Force retry push orders immediatly",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}",
      "method": "getOrder",
      "httpMethod": "get",
      "tag": "Marketplaces - Orders - Order",
      "description": "[DEPRECATED] DEPRECATED - Get full Order and Order Item(s) properties",
      "parameters": [
        {
          "name": "marketplaceTechnicalCode",
          "schema": "string",
          "required": true,
          "description": "The marketplace technical code"
        },
        {
          "name": "accountId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "beezUpOrderId",
          "schema": "string",
          "required": true,
          "description": "The BeezUP Order identifier"
        },
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}",
      "method": "headOrder",
      "httpMethod": "head",
      "tag": "Marketplaces - Orders - Order",
      "description": "[DEPRECATED] DEPRECATED - Get the meta information about the order (ETag, Last-Modified)",
      "parameters": [
        {
          "name": "marketplaceTechnicalCode",
          "schema": "string",
          "required": true,
          "description": "The marketplace technical code"
        },
        {
          "name": "accountId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "beezUpOrderId",
          "schema": "string",
          "required": true,
          "description": "The BeezUP Order identifier"
        },
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/clearMerchantOrderInfo",
      "method": "clearMerchantOrderInfo",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders - Order",
      "description": "[DEPRECATED] Clear an Order's merchant information",
      "parameters": [
        {
          "name": "marketplaceTechnicalCode",
          "schema": "string",
          "required": true,
          "description": "The marketplace technical code"
        },
        {
          "name": "accountId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "beezUpOrderId",
          "schema": "string",
          "required": true,
          "description": "The BeezUP Order identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/harvest",
      "method": "harvestOrder",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders - Order",
      "description": "[DEPRECATED] Send harvest request for a single Order",
      "parameters": [
        {
          "name": "marketplaceTechnicalCode",
          "schema": "string",
          "required": true,
          "description": "The marketplace technical code"
        },
        {
          "name": "accountId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "beezUpOrderId",
          "schema": "string",
          "required": true,
          "description": "The BeezUP Order identifier"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/history",
      "method": "getOrderHistory",
      "httpMethod": "get",
      "tag": "Marketplaces - Orders - Order",
      "description": "[DEPRECATED] Get an Order's harvest and change history",
      "parameters": [
        {
          "name": "marketplaceTechnicalCode",
          "schema": "string",
          "required": true,
          "description": "The marketplace technical code"
        },
        {
          "name": "accountId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "beezUpOrderId",
          "schema": "string",
          "required": true,
          "description": "The BeezUP Order identifier"
        },
        {
          "name": "ifNoneMatch",
          "schema": "string",
          "required": false,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Describe the history related to an order"
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/setMerchantOrderInfo",
      "method": "setMerchantOrderInfo",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders - Order",
      "description": "[DEPRECATED] Set an Order's merchant information",
      "parameters": [
        {
          "name": "marketplaceTechnicalCode",
          "schema": "string",
          "required": true,
          "description": "The marketplace technical code"
        },
        {
          "name": "accountId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "beezUpOrderId",
          "schema": "string",
          "required": true,
          "description": "The BeezUP Order identifier"
        },
        {
          "name": "order_MerchantECommerceSoftwareName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "order_MerchantECommerceSoftwareVersion",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "order_MerchantOrderId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/{changeOrderType}",
      "method": "changeOrder",
      "httpMethod": "post",
      "tag": "Marketplaces - Orders - Order",
      "description": "[DEPRECATED] Change your marketplace Order Information (accept, ship, etc.)",
      "parameters": [
        {
          "name": "marketplaceTechnicalCode",
          "schema": "string",
          "required": true,
          "description": "The marketplace technical code"
        },
        {
          "name": "accountId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "beezUpOrderId",
          "schema": "string",
          "required": true,
          "description": "The BeezUP Order identifier"
        },
        {
          "name": "changeOrderType",
          "schema": "string",
          "required": true,
          "description": "The Order change type"
        },
        {
          "name": "userName",
          "schema": "string",
          "required": true,
          "description": "Sometimes the user in the e-commerce application is not the same as user associated with the current subscription key. We recommend providing your application's user login."
        },
        {
          "name": "testMode",
          "schema": "boolean",
          "required": false,
          "description": "If true, the operation will be not be sent to marketplace. But the validation will be taken in account."
        },
        {
          "name": "ifMatch",
          "schema": "string",
          "required": true,
          "description": "ETag value to identify the last known version of requested resource.\\\nTo ensure that you are making a change on the lastest version of the resource.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.beezup.com",
  "apiDescription": "# The REST API of BeezUP system\n## Overview\nThe REST APIs provide programmatic access to read and write BeezUP data. \nBasically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !\n\nThe main features are:\n- Register and manage your account\n- Create and manage and share your stores with your friends/co-workers.\n- Import your product catalog and schedule the auto importation\n- Search the channels your want to use\n- Configure your channels for your catalogs to export your product information:\n    - cost and general settings\n    - category and columns mappings\n    - your will be able to create and manage your custom column\n    - put in place exlusion filters based on simple conditions on your product data\n    - override product values\n    - get product vision for a channel catalog scope\n- Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product.\n- Automatize your optimisation by using rules!\n- And of course... Manage your orders harvested from all your marketplaces:\n    - Synchronize your orders in an uniformized way\n    - Get the available actions and update the order status\n- ...and more!\n\n## Authentication credentials\nThe public API with the base path **/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials.\nWe give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).\n\nThe user API with the base path **/v2/user** requires a token which is available on this page:\nhttps://go.beezup.com/Account/MyAccount\n\n## Things to keep in mind\n### API Rate Limits\n- The BeezUP REST API is limited to 100 calls/minute.\n\n### Media type\nThe default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.\n\n### Required content type\nThe required and default encoding for the request and responses is UTF8.\n\n### Required date time format\nAll our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.\n\n### Base URL\nThe Base URL of the BeezUP API Order Management REST API conforms to the following template.\n\nhttps://api.beezup.com\n\nAll URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.\n\nYou can test our API on https://api-docs.beezup.com/swagger-ui\\\\\nYou can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)",
  "apiTitle": "BeezUP Merchant API ",
  "endpoints": 195,
  "sdkMethods": 226,
  "schemas": 834,
  "parameters": 529,
  "contactEmail": "help@beezup.com",
  "difficultyScore": 775.25,
  "difficulty": "Very Hard"
}