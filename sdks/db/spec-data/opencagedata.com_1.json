{
  "providerName": "opencagedata.com",
  "openApiRaw": "https://opencagedata.com/swagger.yaml",
  "securitySchemes": {},
  "categories": [
    "location"
  ],
  "homepage": "opencagedata.com",
  "apiVersion": "1",
  "methods": [
    {
      "url": "/v{version}/{format}",
      "method": "/v{version}/{format}Get",
      "httpMethod": "get",
      "description": "geocode a query",
      "parameters": [
        {
          "name": "version",
          "schema": "integer",
          "required": true,
          "description": "API version."
        },
        {
          "name": "format",
          "schema": "string",
          "required": true,
          "description": "format of the response. One of 'json', 'xml' or 'map'."
        },
        {
          "name": "q",
          "schema": "string",
          "required": true,
          "description": "string or lat,lng to be geocoded."
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "an application key."
        },
        {
          "name": "abbrv",
          "schema": "boolean",
          "description": "when true we attempt to abbreviate the formatted field of results."
        },
        {
          "name": "addressOnly",
          "schema": "boolean",
          "description": "when true we include only address details in the formatted field of results."
        },
        {
          "name": "addRequest",
          "schema": "boolean",
          "description": "if true the request is included in the response."
        },
        {
          "name": "bounds",
          "schema": "string",
          "description": "four coordinate points forming the south-west and north-east corners of a bounding box (min long, min lat, max long, max lat)."
        },
        {
          "name": "countrycode",
          "schema": "string",
          "description": "two letter code ISO 3166-1 Alpha 2 code to limit results to that country."
        },
        {
          "name": "jsonp",
          "schema": "string",
          "description": "wraps the returned JSON with a function name."
        },
        {
          "name": "language",
          "schema": "string",
          "description": "an IETF format language code (ex: 'es' or 'pt-BR')."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "maximum number of results to return. Default is 10. Maximum is 100."
        },
        {
          "name": "minConfidence",
          "schema": "integer",
          "description": "integer from 1-10. Only results with at least this confidence are returned."
        },
        {
          "name": "noAnnotations",
          "schema": "boolean",
          "description": "when true annotations are not added to results."
        },
        {
          "name": "noDedupe",
          "schema": "boolean",
          "description": "when true results are not deduplicated."
        },
        {
          "name": "noRecord",
          "schema": "boolean",
          "description": "when true query content is not logged."
        },
        {
          "name": "pretty",
          "schema": "boolean",
          "description": "when true results are pretty printed. Useful for debugging."
        },
        {
          "name": "proximity",
          "schema": "string",
          "description": "lat,lng to bias results."
        },
        {
          "name": "roadinfo",
          "schema": "boolean",
          "description": "match nearest road, include roadinfo annotation"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        },
        {
          "statusCode": "408",
          "description": ""
        },
        {
          "statusCode": "410",
          "description": ""
        },
        {
          "statusCode": "426",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        },
        {
          "statusCode": "503",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.opencagedata.com/geocode",
  "apiDescription": "Worldwide forward and reverse geocoding",
  "apiTitle": "OpenCage Geocoder",
  "endpoints": 1,
  "sdkMethods": 1,
  "schemas": 2,
  "parameters": 19,
  "contactUrl": "https://opencagedata.com/contact",
  "difficultyScore": 6.75,
  "difficulty": "Very Easy"
}