{
  "providerName": "postmarkapp.com",
  "openApiRaw": "https://postmarkapp.com/swagger/account.yml",
  "securitySchemes": {},
  "homepage": "postmarkapp.com",
  "serviceName": "account",
  "apiVersion": "0.9.0",
  "methods": [
    {
      "url": "/domains",
      "method": "listDomains",
      "httpMethod": "get",
      "tag": "Domains API",
      "description": "List Domains",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": true,
          "description": "Number of records to return per request. Max 500."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": true,
          "description": "Number of records to skip"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/domains",
      "method": "createDomain",
      "httpMethod": "post",
      "tag": "Domains API",
      "description": "Create a Domain",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "Name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ReturnPathDomain",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/domains/{domainid}",
      "method": "deleteDomain",
      "httpMethod": "delete",
      "tag": "Domains API",
      "description": "Delete a Domain",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "domainid",
          "schema": "integer",
          "required": true,
          "description": "The ID for the Domain that should be deleted by the request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A Postmark API error."
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/domains/{domainid}",
      "method": "getDomain",
      "httpMethod": "get",
      "tag": "Domains API",
      "description": "Get a Domain",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "domainid",
          "schema": "integer",
          "required": true,
          "description": "The ID for the Domain that should be retrieved."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/domains/{domainid}",
      "method": "editDomain",
      "httpMethod": "put",
      "tag": "Domains API",
      "description": "Update a Domain",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "domainid",
          "schema": "integer",
          "required": true,
          "description": "The ID for the Domain that should be modified by the request."
        },
        {
          "name": "ReturnPathDomain",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/domains/{domainid}/rotatedkim",
      "method": "rotateDkimKeyForDomain",
      "httpMethod": "post",
      "tag": "Domains API",
      "description": "Rotate DKIM Key",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "domainid",
          "schema": "integer",
          "required": true,
          "description": "The ID for the Sender Signature for which a new DKIM Key should be generated."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/domains/{domainid}/verifydkim",
      "method": "requestDkimVerificationForDomain",
      "httpMethod": "put",
      "tag": "Domains API",
      "description": "Request DNS Verification for DKIM",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "domainid",
          "schema": "integer",
          "required": true,
          "description": "The ID for the Domain for which DKIM DNS records should be verified."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/domains/{domainid}/verifyreturnpath",
      "method": "requestReturnPathVerificationForDomain",
      "httpMethod": "put",
      "tag": "Domains API",
      "description": "Request DNS Verification for Return-Path",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "domainid",
          "schema": "integer",
          "required": true,
          "description": "The ID for the Domain for which Return-Path DNS records should be verified."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/domains/{domainid}/verifyspf",
      "method": "requestSpfVerificationForDomain",
      "httpMethod": "post",
      "tag": "Domains API",
      "description": "Request DNS Verification for SPF",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "domainid",
          "schema": "integer",
          "required": true,
          "description": "The ID for the Domain for which SPF DNS records should be verified."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/senders",
      "method": "listSenderSignatures",
      "httpMethod": "get",
      "tag": "Sender Signatures API",
      "description": "List Sender Signatures",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": true,
          "description": "Number of records to return per request. Max 500."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": true,
          "description": "Number of records to skip"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/senders",
      "method": "createSenderSignature",
      "httpMethod": "post",
      "tag": "Sender Signatures API",
      "description": "Create a Sender Signature",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "FromEmail",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ReplyToEmail",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ReturnPathDomain",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/senders/{signatureid}",
      "method": "deleteSenderSignature",
      "httpMethod": "delete",
      "tag": "Sender Signatures API",
      "description": "Delete a Sender Signature",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "signatureid",
          "schema": "integer",
          "required": true,
          "description": "The ID for the Sender Signature that should be deleted by the request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A Postmark API error."
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/senders/{signatureid}",
      "method": "getSenderSignature",
      "httpMethod": "get",
      "tag": "Sender Signatures API",
      "description": "Get a Sender Signature",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "signatureid",
          "schema": "integer",
          "required": true,
          "description": "The ID for the Sender Signature that should be retrieved."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/senders/{signatureid}",
      "method": "editSenderSignature",
      "httpMethod": "put",
      "tag": "Sender Signatures API",
      "description": "Update a Sender Signature",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "signatureid",
          "schema": "integer",
          "required": true,
          "description": "The ID for the Sender Signature that should be modified by the request."
        },
        {
          "name": "Name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ReplyToEmail",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ReturnPathDomain",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/senders/{signatureid}/requestnewdkim",
      "method": "requestNewDkimKeyForSenderSignature",
      "httpMethod": "post",
      "tag": "Sender Signatures API",
      "description": "Request a new DKIM Key",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "signatureid",
          "schema": "integer",
          "required": true,
          "description": "The ID for the Sender Signature for which a new DKIM Key should be generated."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A Postmark API error."
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/senders/{signatureid}/resend",
      "method": "resendSenderSignatureConfirmationEmail",
      "httpMethod": "post",
      "tag": "Sender Signatures API",
      "description": "Resend Signature Confirmation Email",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "signatureid",
          "schema": "integer",
          "required": true,
          "description": "The ID for the Sender Signature that should have its confirmation email resent."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A Postmark API error."
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/senders/{signatureid}/verifyspf",
      "method": "requestSpfVerificationForSenderSignature",
      "httpMethod": "post",
      "tag": "Sender Signatures API",
      "description": "Request DNS Verification for SPF",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "signatureid",
          "schema": "integer",
          "required": true,
          "description": "The ID for the Sender Signature for which SPF DNS records should be verified."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/servers",
      "method": "listServers",
      "httpMethod": "get",
      "tag": "Server Management API",
      "description": "List servers",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "count",
          "schema": "integer",
          "required": true,
          "description": "Number of servers to return per request."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": true,
          "description": "Number of servers to skip."
        },
        {
          "name": "name",
          "schema": "string",
          "description": "Filter by a specific server name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The results of listing servers."
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/servers",
      "method": "createServer",
      "httpMethod": "post",
      "tag": "Server Management API",
      "description": "Create a Server",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "BounceHookUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ClickHookUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Color",
          "schema": "string",
          "description": ""
        },
        {
          "name": "DeliveryHookUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "InboundDomain",
          "schema": "string",
          "description": ""
        },
        {
          "name": "InboundHookUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "InboundSpamThreshold",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "OpenHookUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "PostFirstOpenOnly",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "RawEmailEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "SmtpApiActivated",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "TrackLinks",
          "schema": "string",
          "description": ""
        },
        {
          "name": "TrackOpens",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/servers/{serverid}",
      "method": "deleteServer",
      "httpMethod": "delete",
      "tag": "Server Management API",
      "description": "Delete a Server",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "serverid",
          "schema": "integer",
          "required": true,
          "description": "The ID of the Server that should be deleted."
        }
      ],
      "responses": [
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/servers/{serverid}",
      "method": "getServerInformation",
      "httpMethod": "get",
      "tag": "Server Management API",
      "description": "Get a Server",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "serverid",
          "schema": "integer",
          "required": true,
          "description": "The ID of the Server to get."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/servers/{serverid}",
      "method": "editServerInformation",
      "httpMethod": "put",
      "tag": "Server Management API",
      "description": "Edit a Server",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "serverid",
          "schema": "integer",
          "required": true,
          "description": "The ID of the Server to update."
        },
        {
          "name": "BounceHookUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ClickHookUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Color",
          "schema": "string",
          "description": ""
        },
        {
          "name": "DeliveryHookUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "InboundDomain",
          "schema": "string",
          "description": ""
        },
        {
          "name": "InboundHookUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "InboundSpamThreshold",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "OpenHookUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "PostFirstOpenOnly",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "RawEmailEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "SmtpApiActivated",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "TrackLinks",
          "schema": "string",
          "description": ""
        },
        {
          "name": "TrackOpens",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    },
    {
      "url": "/templates/push",
      "method": "pushTemplates",
      "httpMethod": "put",
      "tag": "Templates API",
      "description": "Push templates from one server to another",
      "parameters": [
        {
          "name": "xPostmarkAccountToken",
          "schema": "string",
          "required": true,
          "description": "The token associated with the Account on which this request will operate."
        },
        {
          "name": "DestinationServerId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "PerformChanges",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "SourceServerId",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": "A Postmark API error."
        }
      ]
    }
  ],
  "apiBaseUrl": "api.postmarkapp.com",
  "apiDescription": "Postmark makes sending and receiving email\nincredibly easy. The Account-level API allows users to\nconfigure all Servers, Domains, and Sender Signatures associated\nwith an Account.\n",
  "apiTitle": "Postmark Account-level API",
  "endpoints": 14,
  "sdkMethods": 23,
  "schemas": 19,
  "parameters": 87,
  "difficultyScore": 54.25,
  "difficulty": "Easy"
}