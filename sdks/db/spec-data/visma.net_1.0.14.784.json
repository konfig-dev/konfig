{
  "providerName": "visma.net",
  "openApiRaw": "https://salesorder.visma.net/swagger/v3/swagger.json",
  "securitySchemes": {
    "oauth2": {
      "description": "",
      "flows": {
        "clientCredentials": {
          "scopes": {
            "read": "*Originally missing*",
            "visma.net.erp.salesorder:read": "Read sales order data",
            "visma.net.erp.salesorder:write": "Create or update sales order data",
            "write": "*Originally missing*"
          },
          "tokenUrl": "https://connect.visma.com/connect/token"
        }
      },
      "type": "oauth2"
    }
  },
  "categories": [
    "enterprise"
  ],
  "homepage": "visma.net",
  "apiVersion": "1.0.14.784",
  "methods": [
    {
      "url": "/api/v3/Customers",
      "method": "customersGetList",
      "httpMethod": "get",
      "tag": "Customers",
      "typeScriptTag": "customers",
      "description": "Gets a list of customers",
      "parameters": [
        {
          "name": "filter",
          "schema": "string",
          "description": "An optional text string to find customers matching (searching fields id, name, gln, tax registration id). If not specified all customers are returned."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "description": "The number of customers retrieved per page. If not specified, the default value of 100 will be used."
        },
        {
          "name": "pageIndex",
          "schema": "integer",
          "description": "The zero based page index to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v3/Customers/{customerId}/locations",
      "method": "customersGetCustomerLocationListCustomerIdlocations",
      "httpMethod": "get",
      "tag": "Customers",
      "typeScriptTag": "customers",
      "description": "Gets a list of locations for the specified customer",
      "parameters": [
        {
          "name": "customerId",
          "schema": "string",
          "required": true,
          "description": "The customer id (CustomerCd) to retrieve locations for"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v3/Inventory",
      "method": "inventoryGetList",
      "httpMethod": "get",
      "tag": "Inventory",
      "typeScriptTag": "inventory",
      "description": "Gets an inventory summary for inventory items.",
      "parameters": [
        {
          "name": "inventoryId",
          "schema": "array",
          "description": "A list of zero or more inventory items to get a summary for. If no inventoryId is passed, all inventory items will be included in the response."
        },
        {
          "name": "warehouseId",
          "schema": "array",
          "description": "A list of zero or more warehouses to get a summary for. If no warehouse is supplied, all warehouses will be included in the response."
        },
        {
          "name": "locationId",
          "schema": "array",
          "description": "A list of zero or more locations to get a summary for. If no location is supplied, all locations will be included in the response."
        },
        {
          "name": "expand",
          "schema": "array",
          "description": "An additional option to include location detail information with the warehouse summary, or attribute details for the inventory item. If this is not supplied, location information or attributes will not be included in the response."
        },
        {
          "name": "modifiedSince",
          "schema": "string",
          "description": "A date/time value for filtering when an inventory item's warehouse or location availability last changed\r\nUnless a specific time zone offset is included (e.g. '2012-12-24T12:15:14+02:00'), the date is considered to be in the UTC time zone."
        },
        {
          "name": "attributeFilter",
          "schema": "array",
          "description": "One or more attribute filter values specified as attribute-id:attribute-value. For example \"attributeFilter=WEBSHOP:1&attributeFilter=AnotherAttribute:someValue\"\r\nIf two attributeFilter values have the same attribute-Id either one need to match."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "description": "The number of inventory items retrieved per page. If not specified the default pagesize is 10000 items per page"
        },
        {
          "name": "pageIndex",
          "schema": "integer",
          "description": "Gets or sets the zero based page index to get"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v3/SalesOrders",
      "method": "salesOrdersGetList",
      "httpMethod": "get",
      "tag": "SalesOrders",
      "typeScriptTag": "salesOrders",
      "description": "Gets a paged list with sales orders of any type",
      "parameters": [
        {
          "name": "customerId",
          "schema": "string",
          "description": "The customer for which to retrieve orders. If omitted or empty, orders for all customers are included"
        },
        {
          "name": "status",
          "schema": "string",
          "description": "The order status to include in the result. If omitted or empty, orders with any status are included."
        },
        {
          "name": "modifiedSince",
          "schema": "string",
          "description": "A date/time value for filtering when a sales order last changed.\r\nUnless a specific time zone offset is included (e.g. '2012-12-24T12:15:14+02:00'), the date is considered to be in the UTC time zone."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "description": "The number of customers retrieved per page"
        },
        {
          "name": "pageIndex",
          "schema": "integer",
          "description": "The zero based page index to retrieve"
        },
        {
          "name": "orderBy",
          "schema": "string",
          "description": "The field to order the list by. Can be one of `created`, `lastModified`, or `orderId` followed by an optional sort direction (`asc` or `desc`), default direction is `asc` (ascending) if not present."
        },
        {
          "name": "filter",
          "schema": "string",
          "description": "A filter for the list, applied to the orderId"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v3/SalesOrders",
      "method": "salesOrdersCreateNewItem",
      "httpMethod": "post",
      "tag": "SalesOrders",
      "typeScriptTag": "salesOrders",
      "description": "Adds a new sales order to the system",
      "parameters": [
        {
          "name": "billing",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "branchId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "cancelBy",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "customer",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "date",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "financialInformation",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "freight",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "orderLines",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "originalOrderId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "originalOrderType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ownerId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "paymentSettings",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "print",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "projectId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "requestOn",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "salesPersonId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "shipping",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "taxZoneId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "useReplacementCostForMarginAndProfit",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Defines an error response for validation problems"
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v3/SalesOrders/{type}",
      "method": "salesOrdersGetListType",
      "httpMethod": "get",
      "tag": "SalesOrders",
      "typeScriptTag": "salesOrders",
      "description": "Gets a paged list with sales orders of a specific type",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "The type of sales orders to get."
        },
        {
          "name": "customerId",
          "schema": "string",
          "description": "The customer for which to retrieve orders. If omitted or empty, orders for all customers are included"
        },
        {
          "name": "status",
          "schema": "string",
          "description": "The order status to include in the result. If omitted or empty, orders with any status are included."
        },
        {
          "name": "modifiedSince",
          "schema": "string",
          "description": "A date/time value for filtering when a sales order last changed.\r\nUnless a specific time zone offset is included (e.g. '2012-12-24T12:15:14+02:00'), the date is considered to be in the UTC time zone."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "description": "The number of customers retrieved per page"
        },
        {
          "name": "pageIndex",
          "schema": "integer",
          "description": "The zero based page index to retrieve"
        },
        {
          "name": "orderBy",
          "schema": "string",
          "description": "The field to order the list by. Can be one of `created`, `lastModified`, or `orderId` followed by an optional sort direction (`asc` or `desc`), default direction is `asc` (ascending) if not present."
        },
        {
          "name": "filter",
          "schema": "string",
          "description": "A filter for the list, applied to the orderId"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v3/SalesOrders/{type}/{orderId}",
      "method": "salesOrdersDeleteTypeorderId",
      "httpMethod": "delete",
      "tag": "SalesOrders",
      "typeScriptTag": "salesOrders",
      "description": "Delete an existing sales order",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "The type of the order to delete"
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The order number to delete"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Defines an error response for validation problems"
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v3/SalesOrders/{type}/{orderId}",
      "method": "salesOrdersGetItemAsyncTypeorderId",
      "httpMethod": "get",
      "tag": "SalesOrders",
      "typeScriptTag": "salesOrders",
      "description": "Gets information about a single sales order",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "The type of sales order to get"
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The id of the sales order to get"
        },
        {
          "name": "expand",
          "schema": "array",
          "description": "An optional specification of what details to include about the sales order. The default value if not supplied is \"None\""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v3/SalesOrders/{type}/{orderId}",
      "method": "salesOrdersPatchTypeorderId",
      "httpMethod": "patch",
      "tag": "SalesOrders",
      "typeScriptTag": "salesOrders",
      "description": "Make modifications to an existing sales order",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "The type of the order to make modifications to"
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The order number to make modifications to"
        },
        {
          "name": "billing",
          "schema": "object",
          "description": ""
        },
        {
          "name": "branchId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "cancelBy",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "customer",
          "schema": "object",
          "description": ""
        },
        {
          "name": "date",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "financialInformation",
          "schema": "object",
          "description": ""
        },
        {
          "name": "freight",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "originalOrderId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "originalOrderType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ownerId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "paymentSettings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "print",
          "schema": "object",
          "description": ""
        },
        {
          "name": "projectId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "requestOn",
          "schema": "string",
          "description": ""
        },
        {
          "name": "salesPersonId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "shipping",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taxZoneId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "useReplacementCostForMarginAndProfit",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Defines an error response for validation problems"
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "412",
          "description": ""
        },
        {
          "statusCode": "428",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v3/SalesOrders/{type}/{orderId}/commissions",
      "method": "salesOrdersGetItemCommissionsTypeorderIdcommissions",
      "httpMethod": "get",
      "tag": "SalesOrders",
      "typeScriptTag": "salesOrders",
      "description": "Gets commission information for a single sales order",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "The type of sales order to get"
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The id of the sales order to get"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v3/SalesOrders/{type}/{orderId}/discounts",
      "method": "salesOrdersGetItemDiscountsTypeorderIddiscounts",
      "httpMethod": "get",
      "tag": "SalesOrders",
      "typeScriptTag": "salesOrders",
      "description": "Gets discount details information for a single sales order",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "The type of sales order to get"
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The id of the sales order to get"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v3/SalesOrders/{type}/{orderId}/lines",
      "method": "salesOrdersDeleteLinesTypeorderIdlines",
      "httpMethod": "delete",
      "tag": "SalesOrders",
      "typeScriptTag": "salesOrders",
      "description": "Delete lines from an existing sales order",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "The type of the order to make modifications to"
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The order number to make modifications to"
        },
        {
          "name": "ids",
          "schema": "array",
          "description": "Lines to delete with comma seprator. Limit of line ids is 1000."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Defines an error response for validation problems"
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v3/SalesOrders/{type}/{orderId}/lines",
      "method": "salesOrdersGetItemLinesTypeorderIdlines",
      "httpMethod": "get",
      "tag": "SalesOrders",
      "typeScriptTag": "salesOrders",
      "description": "Gets sales order lines for a single sales order",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "The type of sales order to get"
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The id of the sales order to get"
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "description": "The number of lines retrieved per page, defaults to 1000 if not specified"
        },
        {
          "name": "pageIndex",
          "schema": "integer",
          "description": "The zero based page index to retrieve, defaults to 0 if not specified"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v3/SalesOrders/{type}/{orderId}/lines",
      "method": "salesOrdersPatchLinesTypeorderIdlines",
      "httpMethod": "patch",
      "tag": "SalesOrders",
      "typeScriptTag": "salesOrders",
      "description": "Make modifications to an existing sales order lines",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "The type of the order to make modifications to"
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The order number to make modifications to"
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Defines an error response for validation problems"
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        },
        {
          "statusCode": "412",
          "description": ""
        },
        {
          "statusCode": "428",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v3/SalesOrders/{type}/{orderId}/lines",
      "method": "salesOrdersAddLinesTypeorderIdlines",
      "httpMethod": "post",
      "tag": "SalesOrders",
      "typeScriptTag": "salesOrders",
      "description": "Adds new lines to a existing sales order in the system",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Defines an error response for validation problems"
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v3/SalesOrders/{type}/{orderId}/lines/{lineId}",
      "method": "salesOrdersGetItemLineTypeorderIdlineslineId",
      "httpMethod": "get",
      "tag": "SalesOrders",
      "typeScriptTag": "salesOrders",
      "description": "Gets a specific sales order line for a single sales order",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "The type of sales order to get"
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The id of the sales order to get"
        },
        {
          "name": "lineId",
          "schema": "integer",
          "required": true,
          "description": "The id of the line to get"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v3/SalesOrders/{type}/{orderId}/rotrut",
      "method": "salesOrdersGetItemRotRutTypeorderIdrotrut",
      "httpMethod": "get",
      "tag": "SalesOrders",
      "typeScriptTag": "salesOrders",
      "description": "Gets ROT/RUT information for a single sales order",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "The type of sales order to get"
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The id of the sales order to get"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v3/SalesOrders/{type}/{orderId}/shipment",
      "method": "salesOrdersGetSalesOrderShipmentTypeorderIdshipment",
      "httpMethod": "get",
      "tag": "SalesOrders",
      "typeScriptTag": "salesOrders",
      "description": "Gets shipment information for a single sales order",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "The type of sales order to get"
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The id of the sales order to get"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v3/SalesOrders/{type}/{orderId}/tax",
      "method": "salesOrdersGetItemTaxTypeorderIdtax",
      "httpMethod": "get",
      "tag": "SalesOrders",
      "typeScriptTag": "salesOrders",
      "description": "Gets tax information for a single sales order",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "The type of sales order to get"
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The id of the sales order to get"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "/",
  "apiTitle": "Visma.net.ERP.SalesOrders.Api",
  "endpoints": 13,
  "sdkMethods": 19,
  "schemas": 69,
  "parameters": 107,
  "difficultyScore": 80.25,
  "difficulty": "Easy"
}