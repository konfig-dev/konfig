{
  "providerName": "appveyor.com",
  "openApiRaw": "https://raw.githubusercontent.com/kevinoid/appveyor-swagger/master/swagger.yaml",
  "securitySchemes": {
    "apiToken": {
      "description": "API token can be acquired from https://ci.appveyor.com/api-keys\nThis value must be passed to the server in the `Authorization` header as `\"Bearer <token>\"`.  Since [bearer token authentication support is not explicitly supported in OpenAPI 2.0](https://github.com/OAI/OpenAPI-Specification/issues/583), client code will vary.  Clients created with [swagger-codegen](https://github.com/swagger-api/swagger-codegen) should set `apiKeyPrefix` to `\"Bearer\"` and set `apiKey` to the token.  Other clients may need to set `apiKey` to the string `\"Bearer <token>\"`.\nNote that this should be [fixed in OpenAPI 3.0](https://github.com/OAI/OpenAPI-Specification/pull/807)), whenever that becomes available and supported.\n#### User-Level API Keys\nTo use a user-level API key (prefixed with \"v2.\"), `basePath` must be changed to `/api/account/{accountName}` where `{accountName}` is the name of the account for which requests will be made.",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "homepage": "appveyor.com",
  "apiVersion": "1.0.0",
  "methods": [
    {
      "url": "/account/encrypt",
      "method": "encryptValue",
      "httpMethod": "post",
      "tag": "Project",
      "typeScriptTag": "project",
      "description": "Encrypt a value for use in StoredValue.",
      "parameters": [
        {
          "name": "plainValue",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/buildjobs/{jobId}/artifacts",
      "method": "getBuildArtifacts",
      "httpMethod": "get",
      "tag": "Build",
      "typeScriptTag": "build",
      "description": "Get build artifacts",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/buildjobs/{jobId}/artifacts/{artifactFileName}",
      "method": "getBuildArtifact",
      "httpMethod": "get",
      "tag": "Build",
      "typeScriptTag": "build",
      "description": "Download build artifact",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/buildjobs/{jobId}/log",
      "method": "getBuildLog",
      "httpMethod": "get",
      "tag": "Build",
      "typeScriptTag": "build",
      "description": "Download build log",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/builds",
      "method": "startBuild",
      "httpMethod": "post",
      "tag": "Build",
      "typeScriptTag": "build",
      "description": "Start build of branch most recent commit",
      "parameters": [
        {
          "name": "accountName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "branch",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "commitId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "environmentVariables",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "projectSlug",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pullRequestId",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/builds",
      "method": "reRunBuild",
      "httpMethod": "put",
      "tag": "Build",
      "typeScriptTag": "build",
      "description": "Re-run build",
      "parameters": [
        {
          "name": "buildId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "reRunIncomplete",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/builds/{accountName}/{projectSlug}/{buildVersion}",
      "method": "cancelBuild",
      "httpMethod": "delete",
      "tag": "Build",
      "typeScriptTag": "build",
      "description": "Cancel build",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/collaborators",
      "method": "getCollaborators",
      "httpMethod": "get",
      "tag": "Collaborator",
      "typeScriptTag": "collaborator",
      "description": "Get collaborators",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/collaborators",
      "method": "updateCollaborator",
      "httpMethod": "put",
      "tag": "Collaborator",
      "typeScriptTag": "collaborator",
      "description": "Update collaborator",
      "parameters": [
        {
          "name": "roleId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/collaborators/{userId}",
      "method": "deleteCollaborator",
      "httpMethod": "delete",
      "tag": "Collaborator",
      "typeScriptTag": "collaborator",
      "description": "Delete collaborator",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/collaborators/{userId}",
      "method": "getCollaborator",
      "httpMethod": "get",
      "tag": "Collaborator",
      "typeScriptTag": "collaborator",
      "description": "Get collaborator",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "The roles property contains all roles, not only the role for which the user is a member."
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/deployments",
      "method": "startDeployment",
      "httpMethod": "post",
      "tag": "Deployment",
      "typeScriptTag": "deployment",
      "description": "Start deployment",
      "parameters": [
        {
          "name": "accountName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "buildJobId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "buildVersion",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "environmentName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "environmentVariables",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "projectSlug",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/deployments/stop",
      "method": "cancelDeployment",
      "httpMethod": "put",
      "tag": "Deployment",
      "typeScriptTag": "deployment",
      "description": "Cancel deployment",
      "parameters": [
        {
          "name": "deploymentId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/deployments/{deploymentId}",
      "method": "getDeployment",
      "httpMethod": "get",
      "tag": "Deployment",
      "typeScriptTag": "deployment",
      "description": "Get deployment",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/environments",
      "method": "getEnvironments",
      "httpMethod": "get",
      "tag": "Environment",
      "typeScriptTag": "environment",
      "description": "Get environments",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/environments",
      "method": "addEnvironment",
      "httpMethod": "post",
      "tag": "Environment",
      "typeScriptTag": "environment",
      "description": "Add environment",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "provider",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "settings",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/environments",
      "method": "updateEnvironment",
      "httpMethod": "put",
      "tag": "Environment",
      "typeScriptTag": "environment",
      "description": "Update environment",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/environments/{deploymentEnvironmentId}",
      "method": "deleteEnvironment",
      "httpMethod": "delete",
      "tag": "Environment",
      "typeScriptTag": "environment",
      "description": "Delete environment",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/environments/{deploymentEnvironmentId}/deployments",
      "method": "getEnvironmentDeployments",
      "httpMethod": "get",
      "tag": "Environment",
      "typeScriptTag": "environment",
      "description": "Get environment deployments",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/environments/{deploymentEnvironmentId}/settings",
      "method": "getEnvironmentSettings",
      "httpMethod": "get",
      "tag": "Environment",
      "typeScriptTag": "environment",
      "description": "Get environment settings",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/projects",
      "method": "getProjects",
      "httpMethod": "get",
      "tag": "Project",
      "typeScriptTag": "project",
      "description": "Get projects",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/projects",
      "method": "addProject",
      "httpMethod": "post",
      "tag": "Project",
      "typeScriptTag": "project",
      "description": "Add project",
      "parameters": [
        {
          "name": "repositoryAuthentication",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "repositoryName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "repositoryPassword",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "repositoryProvider",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "repositoryUsername",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/projects",
      "method": "updateProject",
      "httpMethod": "put",
      "tag": "Project",
      "typeScriptTag": "project",
      "description": "Update project",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/projects/status/{badgeRepoProvider}/{repoAccountName}/{repoSlug}",
      "method": "getPublicProjectStatusBadge",
      "httpMethod": "get",
      "tag": "Project",
      "typeScriptTag": "project",
      "description": "Get status badge image for a project with a public repository",
      "parameters": [
        {
          "name": "branch",
          "schema": "string",
          "description": "Repository Branch"
        },
        {
          "name": "svg",
          "schema": "boolean",
          "description": "Return an SVG image instead of PNG?  Exclusive with `retina`."
        },
        {
          "name": "retina",
          "schema": "boolean",
          "description": "Return a larger image suitable for retina displays?  Exclusive with `svg`."
        },
        {
          "name": "passingText",
          "schema": "string",
          "description": "Text to show in badge when build is passing."
        },
        {
          "name": "failingText",
          "schema": "string",
          "description": "Text to show in badge when build is failing."
        },
        {
          "name": "pendingText",
          "schema": "string",
          "description": "Text to show in badge when build is pending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/projects/status/{statusBadgeId}",
      "method": "getProjectStatusBadge",
      "httpMethod": "get",
      "tag": "Project",
      "typeScriptTag": "project",
      "description": "Get project status badge image",
      "parameters": [
        {
          "name": "svg",
          "schema": "boolean",
          "description": "Return an SVG image instead of PNG?  Exclusive with `retina`."
        },
        {
          "name": "retina",
          "schema": "boolean",
          "description": "Return a larger image suitable for retina displays?  Exclusive with `svg`."
        },
        {
          "name": "passingText",
          "schema": "string",
          "description": "Text to show in badge when build is passing."
        },
        {
          "name": "failingText",
          "schema": "string",
          "description": "Text to show in badge when build is failing."
        },
        {
          "name": "pendingText",
          "schema": "string",
          "description": "Text to show in badge when build is pending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/projects/status/{statusBadgeId}/branch/{buildBranch}",
      "method": "getProjectBranchStatusBadge",
      "httpMethod": "get",
      "tag": "Project",
      "typeScriptTag": "project",
      "description": "Get project branch status badge image",
      "parameters": [
        {
          "name": "svg",
          "schema": "boolean",
          "description": "Return an SVG image instead of PNG?  Exclusive with `retina`."
        },
        {
          "name": "retina",
          "schema": "boolean",
          "description": "Return a larger image suitable for retina displays?  Exclusive with `svg`."
        },
        {
          "name": "passingText",
          "schema": "string",
          "description": "Text to show in badge when build is passing."
        },
        {
          "name": "failingText",
          "schema": "string",
          "description": "Text to show in badge when build is failing."
        },
        {
          "name": "pendingText",
          "schema": "string",
          "description": "Text to show in badge when build is pending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/projects/{accountName}/{projectSlug}",
      "method": "deleteProject",
      "httpMethod": "delete",
      "tag": "Project",
      "typeScriptTag": "project",
      "description": "Delete project",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/projects/{accountName}/{projectSlug}",
      "method": "getProjectLastBuild",
      "httpMethod": "get",
      "tag": "Project",
      "typeScriptTag": "project",
      "description": "Get project last build",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/projects/{accountName}/{projectSlug}/artifacts/{artifactFileName}",
      "method": "getProjectArtifact",
      "httpMethod": "get",
      "tag": "Project",
      "typeScriptTag": "project",
      "description": "Get last successful build artifact",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/projects/{accountName}/{projectSlug}/branch/{buildBranch}",
      "method": "getProjectLastBuildBranch",
      "httpMethod": "get",
      "tag": "Project",
      "typeScriptTag": "project",
      "description": "Get project last branch build",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/projects/{accountName}/{projectSlug}/build/{buildVersion}",
      "method": "getProjectBuildByVersion",
      "httpMethod": "get",
      "tag": "Project",
      "typeScriptTag": "project",
      "description": "Get project build by version",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/projects/{accountName}/{projectSlug}/buildcache",
      "method": "deleteProjectBuildCache",
      "httpMethod": "delete",
      "tag": "Project",
      "typeScriptTag": "project",
      "description": "Delete project build cache",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/projects/{accountName}/{projectSlug}/deployments",
      "method": "getProjectDeployments",
      "httpMethod": "get",
      "tag": "Project",
      "typeScriptTag": "project",
      "description": "Get project deployments",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/projects/{accountName}/{projectSlug}/history",
      "method": "getProjectHistory",
      "httpMethod": "get",
      "tag": "Project",
      "typeScriptTag": "project",
      "description": "Get project history",
      "parameters": [
        {
          "name": "recordsNumber",
          "schema": "integer",
          "required": true,
          "description": "Number of results to include in the response. getProjectDeployments is documented to have a maximum of 20. It currently returns 500 Internal Server Error for recordsNumber <= 5. In the past it has returned 500 Internal Server Error for many different values which did not match the value used by the ci.appveyor.com web interface at the time.  As of 2018-09-08, the value used by the web interface is 10."
        },
        {
          "name": "startBuildId",
          "schema": "integer",
          "description": "Maximum `buildId` to include in the results (exclusive)."
        },
        {
          "name": "branch",
          "schema": "string",
          "description": "Repository Branch"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/projects/{accountName}/{projectSlug}/settings",
      "method": "getProjectSettings",
      "httpMethod": "get",
      "tag": "Project",
      "typeScriptTag": "project",
      "description": "Get project settings",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/projects/{accountName}/{projectSlug}/settings/build-number",
      "method": "updateProjectBuildNumber",
      "httpMethod": "put",
      "tag": "Project",
      "typeScriptTag": "project",
      "description": "Update project build number",
      "parameters": [
        {
          "name": "nextBuildNumber",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/projects/{accountName}/{projectSlug}/settings/environment-variables",
      "method": "getProjectEnvironmentVariables",
      "httpMethod": "get",
      "tag": "Project",
      "typeScriptTag": "project",
      "description": "Get project environment variables",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/projects/{accountName}/{projectSlug}/settings/environment-variables",
      "method": "updateProjectEnvironmentVariables",
      "httpMethod": "put",
      "tag": "Project",
      "typeScriptTag": "project",
      "description": "Update project environment variables",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/projects/{accountName}/{projectSlug}/settings/yaml",
      "method": "getProjectSettingsYaml",
      "httpMethod": "get",
      "tag": "Project",
      "typeScriptTag": "project",
      "description": "Get project settings in YAML",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/projects/{accountName}/{projectSlug}/settings/yaml",
      "method": "updateProjectSettingsYaml",
      "httpMethod": "put",
      "tag": "Project",
      "typeScriptTag": "project",
      "description": "Update project settings in YAML",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/roles",
      "method": "getRoles",
      "httpMethod": "get",
      "tag": "Role",
      "typeScriptTag": "role",
      "description": "Get roles",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/roles",
      "method": "addRole",
      "httpMethod": "post",
      "tag": "Role",
      "typeScriptTag": "role",
      "description": "Add role",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/roles",
      "method": "updateRole",
      "httpMethod": "put",
      "tag": "Role",
      "typeScriptTag": "role",
      "description": "Update role",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/roles/{roleId}",
      "method": "deleteRole",
      "httpMethod": "delete",
      "tag": "Role",
      "typeScriptTag": "role",
      "description": "Delete role",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/roles/{roleId}",
      "method": "getRole",
      "httpMethod": "get",
      "tag": "Role",
      "typeScriptTag": "role",
      "description": "Get role",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/user/join-account",
      "method": "joinAccount",
      "httpMethod": "put",
      "tag": "User",
      "typeScriptTag": "user",
      "description": "Join Account",
      "parameters": [
        {
          "name": "invitationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/users",
      "method": "getUsers",
      "httpMethod": "get",
      "tag": "User",
      "typeScriptTag": "user",
      "description": "Get users",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/users",
      "method": "updateUser",
      "httpMethod": "put",
      "tag": "User",
      "typeScriptTag": "user",
      "description": "Update user",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/users/invitations",
      "method": "getUserInvitations",
      "httpMethod": "get",
      "tag": "User",
      "typeScriptTag": "user",
      "description": "Get user invitations",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/users/invitations",
      "method": "inviteUser",
      "httpMethod": "post",
      "tag": "User",
      "typeScriptTag": "user",
      "description": "Invite user",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "roleId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/users/invitations/{userInvitationId}",
      "method": "cancelUserInvitation",
      "httpMethod": "delete",
      "tag": "User",
      "typeScriptTag": "user",
      "description": "Cancel user invitation",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/users/{userId}",
      "method": "deleteUser",
      "httpMethod": "delete",
      "tag": "User",
      "typeScriptTag": "user",
      "description": "Delete user",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    },
    {
      "url": "/users/{userId}",
      "method": "getUser",
      "httpMethod": "get",
      "tag": "User",
      "typeScriptTag": "user",
      "description": "Get user",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "The roles property contains all roles, not only the role for which the user is a member."
        },
        {
          "statusCode": "default",
          "description": "Schema of object returned in 4XX and 5XX responses.\nNote:  The name is unfortunate, since it conflicts with `java.lang.Error`\nand other generic error classes.  It is the name used in XML responses,\nso it is used for consistency and possible future XML deserialization\nsupport.\n"
        }
      ]
    }
  ],
  "apiBaseUrl": "https://ci.appveyor.com/api",
  "apiDescription": "AppVeyor is a hosted continuous integration service which runs on Microsoft\nWindows.  The AppVeyor REST API provides a RESTful way to interact with the\nAppVeyor service.  This includes managing projects, builds, deployments,\nand the teams that build them.\n\nAdditional help and discussion of the AppVeyor REST API is available at\nhttp://help.appveyor.com/discussions\n\nThis Swagger definition is an **unofficial** description of the AppVeyor\nREST API maintained at https://github.com/kevinoid/appveyor-swagger\nPlease report any issues or suggestions for this Swagger definition at\nhttps://github.com/kevinoid/appveyor-swagger/issues/new\n\n#### API Conventions\n\nFields which are missing from update operations (`PUT` requests) are\ntypically reset to their default values.  So although most fields are not\ntechnically required, they should usually be specified in practice.\n",
  "apiTitle": "AppVeyor REST API",
  "endpoints": 37,
  "sdkMethods": 79,
  "schemas": 99,
  "parameters": 50,
  "contactUrl": "https://www.appveyor.com/about/",
  "contactEmail": "team@appveyor.com",
  "difficultyScore": 141,
  "difficulty": "Medium"
}