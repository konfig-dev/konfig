{
  "providerName": "ote-godaddy.com",
  "openApiRaw": "https://developer.godaddy.com/swagger/swagger_subscriptions.json",
  "securitySchemes": {},
  "categories": [
    "hosting"
  ],
  "homepage": "ote-godaddy.com",
  "serviceName": "subscriptions",
  "apiVersion": "1.0.0",
  "methods": [
    {
      "url": "/v1/subscriptions",
      "method": "list",
      "httpMethod": "get",
      "tag": "v1",
      "typeScriptTag": "v1",
      "description": "Retrieve a list of Subscriptions for the specified Shopper",
      "parameters": [
        {
          "name": "xShopperId",
          "schema": "string",
          "required": false,
          "description": "Shopper ID to return subscriptions for when not using JWT"
        },
        {
          "name": "xMarketId",
          "schema": "string",
          "required": false,
          "description": "The market that the response should be formatted for"
        },
        {
          "name": "productGroupKeys",
          "schema": "array",
          "required": false,
          "description": "Only return Subscriptions with the specified product groups"
        },
        {
          "name": "includes",
          "schema": "array",
          "required": false,
          "description": "Optional details to be included in the response"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Number of Subscriptions to skip before starting to return paged results (must be a multiple of the limit)"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of Subscriptions to retrieve in this page, starting after offset"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Property name that will be used to sort results. \"-\" indicates descending"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/subscriptions/productGroups",
      "method": "productGroups",
      "httpMethod": "get",
      "tag": "v1",
      "typeScriptTag": "v1",
      "description": "Retrieve a list of ProductGroups for the specified Shopper",
      "parameters": [
        {
          "name": "xShopperId",
          "schema": "string",
          "required": false,
          "description": "Shopper ID to return data for when not using JWT"
        },
        {
          "name": "xMarketId",
          "schema": "string",
          "required": false,
          "description": "The market that the response should be formatted for"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/subscriptions/{subscriptionId}",
      "method": "cancel",
      "httpMethod": "delete",
      "tag": "v1",
      "typeScriptTag": "v1",
      "description": "Cancel the specified Subscription",
      "parameters": [
        {
          "name": "xShopperId",
          "schema": "string",
          "required": false,
          "description": "Shopper ID to cancel subscriptions for when not using JWT"
        },
        {
          "name": "subscriptionId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the Subscription to cancel"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        },
        {
          "statusCode": "504",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/subscriptions/{subscriptionId}",
      "method": "get",
      "httpMethod": "get",
      "tag": "v1",
      "typeScriptTag": "v1",
      "description": "Retrieve details for the specified Subscription",
      "parameters": [
        {
          "name": "xShopperId",
          "schema": "string",
          "required": false,
          "description": "Shopper ID to be operated on, if different from JWT"
        },
        {
          "name": "xMarketId",
          "schema": "string",
          "required": false,
          "description": "Unique identifier of the Market in which the request is happening"
        },
        {
          "name": "subscriptionId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the Subscription to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        },
        {
          "statusCode": "504",
          "description": ""
        }
      ]
    },
    {
      "url": "/v1/subscriptions/{subscriptionId}",
      "method": "update",
      "httpMethod": "patch",
      "tag": "v1",
      "typeScriptTag": "v1",
      "description": "Update details for the specified Subscription",
      "parameters": [
        {
          "name": "subscriptionId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the Subscription to update"
        },
        {
          "name": "paymentProfileId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "renewAuto",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "//api.ote-godaddy.com",
  "apiTitle": "",
  "endpoints": 3,
  "sdkMethods": 5,
  "schemas": 12,
  "parameters": 17,
  "difficultyScore": 15.25,
  "difficulty": "Easy"
}