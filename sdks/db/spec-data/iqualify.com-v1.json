{
  "providerName": "iqualify.com",
  "openApiRaw": "https://api.iqualify.com/v1/management.json",
  "securitySchemes": {
    "Authorization": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "homepage": "iqualify.com",
  "apiVersion": "v1",
  "methods": [
    {
      "url": "/",
      "method": "/Get",
      "httpMethod": "get",
      "tag": "API info",
      "description": "List supported endpoints URLs",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/course-mappings",
      "method": "/courseMappingsGet",
      "httpMethod": "get",
      "tag": "Course mappings",
      "description": "Find course mappings",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/course-mappings/externalcourse/{externalCourseId}",
      "method": "/courseMappings/externalcourse/{externalCourseId}Get",
      "httpMethod": "get",
      "tag": "Course mappings",
      "description": "Find course mappings by externalCourseId",
      "parameters": [
        {
          "name": "externalCourseId",
          "schema": "string",
          "required": true,
          "description": "external course's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/course-mappings/{offeringId}",
      "method": "/courseMappings/{offeringId}Get",
      "httpMethod": "get",
      "tag": "Course mappings",
      "description": "Find course mappings by offeringId",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/course-mappings/{offeringId}/{externalCourseId}",
      "method": "/courseMappings/{offeringId}/{externalCourseId}Delete",
      "httpMethod": "delete",
      "tag": "Course mappings",
      "description": "Remove course mapping",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "externalCourseId",
          "schema": "string",
          "required": true,
          "description": "external course's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/course-mappings/{offeringId}/{externalCourseId}",
      "method": "/courseMappings/{offeringId}/{externalCourseId}Put",
      "httpMethod": "put",
      "tag": "Course mappings",
      "description": "Add course mapping",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "externalCourseId",
          "schema": "string",
          "required": true,
          "description": "external course's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/courses",
      "method": "/coursesGet",
      "httpMethod": "get",
      "tag": "Courses",
      "description": "Find courses",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/courses/{contentId}",
      "method": "/courses/{contentId}Get",
      "httpMethod": "get",
      "tag": "Courses",
      "description": "Find course by contentId",
      "parameters": [
        {
          "name": "contentId",
          "schema": "string",
          "required": true,
          "description": "The content Id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/courses/{contentId}/activations",
      "method": "/courses/{contentId}/activationsGet",
      "httpMethod": "get",
      "tag": "Courses",
      "description": "Find activations for a contentId",
      "parameters": [
        {
          "name": "contentId",
          "schema": "string",
          "required": true,
          "description": "The content Id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/courses/{contentId}/metadata/category",
      "method": "/courses/{contentId}/metadata/categoryPut",
      "httpMethod": "put",
      "tag": "Course metadata",
      "description": "Update course category",
      "parameters": [
        {
          "name": "contentId",
          "schema": "string",
          "required": true,
          "description": "The content Id"
        },
        {
          "name": "category",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/courses/{contentId}/metadata/level",
      "method": "/courses/{contentId}/metadata/levelPut",
      "httpMethod": "put",
      "tag": "Course metadata",
      "description": "Update course level",
      "parameters": [
        {
          "name": "contentId",
          "schema": "string",
          "required": true,
          "description": "The content Id"
        },
        {
          "name": "level",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/courses/{contentId}/metadata/tags",
      "method": "/courses/{contentId}/metadata/tagsPut",
      "httpMethod": "put",
      "tag": "Course metadata",
      "description": "Update course tags",
      "parameters": [
        {
          "name": "contentId",
          "schema": "string",
          "required": true,
          "description": "The content Id"
        },
        {
          "name": "tags",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/courses/{contentId}/metadata/topic",
      "method": "/courses/{contentId}/metadata/topicPut",
      "httpMethod": "put",
      "tag": "Course metadata",
      "description": "Update course topic",
      "parameters": [
        {
          "name": "contentId",
          "schema": "string",
          "required": true,
          "description": "The content Id"
        },
        {
          "name": "topic",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/courses/{contentId}/permissions",
      "method": "/courses/{contentId}/permissionsGet",
      "httpMethod": "get",
      "tag": "Courses",
      "description": "Find users who have access to the contentId provided",
      "parameters": [
        {
          "name": "contentId",
          "schema": "string",
          "required": true,
          "description": "The content Id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/courses/{rootContentId}/permissions/{userEmail}",
      "method": "/courses/{rootContentId}/permissions/{userEmail}Post",
      "httpMethod": "post",
      "tag": "Courses",
      "description": "Update course access",
      "parameters": [
        {
          "name": "rootContentId",
          "schema": "string",
          "required": true,
          "description": "The content Id"
        },
        {
          "name": "userEmail",
          "schema": "string",
          "required": true,
          "description": "The user email"
        },
        {
          "name": "isBuilder",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "isReviewer",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings",
      "method": "/offeringsGet",
      "httpMethod": "get",
      "tag": "Offerings",
      "description": "Find current, past and future offerings",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings",
      "method": "/offeringsPost",
      "httpMethod": "post",
      "tag": "Offerings",
      "description": "Create offering",
      "parameters": [
        {
          "name": "badge",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "contentId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createDefaultChannels",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "earlyCloseOffDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "hasEarlyCloseOff",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "identifier",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "isReadonly",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "rootContentId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "trailerVideoUrl",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "useRelativeDates",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/current",
      "method": "/offerings/currentGet",
      "httpMethod": "get",
      "tag": "Offerings",
      "description": "Find active offerings",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/future",
      "method": "/offerings/futureGet",
      "httpMethod": "get",
      "tag": "Offerings",
      "description": "Find scheduled offerings",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/info/{textPattern}",
      "method": "/offerings/info/{textPattern}Get",
      "httpMethod": "get",
      "tag": "Offerings",
      "description": "Find offerings where info field matches the specified textPattern",
      "parameters": [
        {
          "name": "textPattern",
          "schema": "string",
          "required": true,
          "description": "Text pattern to search for (minimum of 3 characters length)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/past",
      "method": "/offerings/pastGet",
      "httpMethod": "get",
      "tag": "Offerings",
      "description": "Find past offerings",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/summary",
      "method": "/offerings/summaryGet",
      "httpMethod": "get",
      "tag": "Offerings",
      "description": "Offerings summary",
      "parameters": [
        {
          "name": "$top",
          "schema": "string",
          "description": "Returns only the first n results."
        },
        {
          "name": "$orderby",
          "schema": "string",
          "description": "Sorts the results."
        },
        {
          "name": "$filter",
          "schema": "string",
          "description": "Filters the results, based on a Boolean condition."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}",
      "method": "/offerings/{offeringId}Get",
      "httpMethod": "get",
      "tag": "Offerings",
      "description": "Find offering by ID",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}",
      "method": "/offerings/{offeringId}Patch",
      "httpMethod": "patch",
      "tag": "Offerings",
      "description": "Update offering",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "badge",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contentId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "earlyCloseOffDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "end",
          "schema": "string",
          "description": ""
        },
        {
          "name": "hasEarlyCloseOff",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "identifier",
          "schema": "string",
          "description": ""
        },
        {
          "name": "isReadonly",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "overview",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rootContentId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "start",
          "schema": "string",
          "description": ""
        },
        {
          "name": "trailerVideoUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "useRelativeDates",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/activities/openresponse",
      "method": "/offerings/{offeringId}/activities/openresponseGet",
      "httpMethod": "get",
      "tag": "Assessment management",
      "description": "Find offering's activities",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/analytics/activities/responses",
      "method": "/offerings/{offeringId}/analytics/activities/responsesGet",
      "httpMethod": "get",
      "tag": "Assessment data",
      "description": "Find open response activity attempts",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/analytics/channels/{channelId}/comments",
      "method": "/offerings/{offeringId}/analytics/channels/{channelId}/commentsGet",
      "httpMethod": "get",
      "tag": "Channels",
      "description": "Find comments",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "channel's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/analytics/channels/{channelId}/posts",
      "method": "/offerings/{offeringId}/analytics/channels/{channelId}/postsGet",
      "httpMethod": "get",
      "tag": "Channels",
      "description": "Find posts",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "channel's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/analytics/channels/{channelId}/replies",
      "method": "/offerings/{offeringId}/analytics/channels/{channelId}/repliesGet",
      "httpMethod": "get",
      "tag": "Channels",
      "description": "Find replies",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "channel's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/analytics/learners-progress",
      "method": "/offerings/{offeringId}/analytics/learnersProgressGet",
      "httpMethod": "get",
      "tag": "Learner activity",
      "description": "Find learner progress in a specified offering",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/analytics/marks/assignments",
      "method": "/offerings/{offeringId}/analytics/marks/assignmentsGet",
      "httpMethod": "get",
      "tag": "Assessment data",
      "description": "Find assessment marks",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/analytics/marks/quizzes",
      "method": "/offerings/{offeringId}/analytics/marks/quizzesGet",
      "httpMethod": "get",
      "tag": "Assessment data",
      "description": "Find quiz marks",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/analytics/pulses",
      "method": "/offerings/{offeringId}/analytics/pulsesGet",
      "httpMethod": "get",
      "tag": "Pulses",
      "description": "Find all pulse IDs in the specified offering",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/analytics/pulses/responses",
      "method": "/offerings/{offeringId}/analytics/pulses/responsesGet",
      "httpMethod": "get",
      "tag": "Pulses",
      "description": "Find pulses by offeringId",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "pulseType",
          "schema": "string",
          "description": "Filter pulse responses by type."
        },
        {
          "name": "responseTime",
          "schema": "undefined",
          "description": "Filter pulse responses by responseTime. Lower then (`lt`), lower then or equal (`lte`), greater then (`gt`) and greater then or equal (`gte`) operators are available. Example of filtering by time range __gte__2017-03-14T07:30:00Z__"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/analytics/pulses/{pulseId}/responses",
      "method": "/offerings/{offeringId}/analytics/pulses/{pulseId}/responsesGet",
      "httpMethod": "get",
      "tag": "Pulses",
      "description": "Find pulses by offeringId and pulseId",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "pulseId",
          "schema": "string",
          "required": true,
          "description": "pulse's base id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/analytics/social-notes",
      "method": "/offerings/{offeringId}/analytics/socialNotesGet",
      "httpMethod": "get",
      "tag": "Learner activity",
      "description": "Find shared social notes in an offering",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/analytics/submissions/assignments",
      "method": "/offerings/{offeringId}/analytics/submissions/assignmentsGet",
      "httpMethod": "get",
      "tag": "Assessment data",
      "description": "Find submissions to assessments, including marks if any",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/analytics/submissions/open-response/{assessmentId}",
      "method": "/offerings/{offeringId}/analytics/submissions/openResponse/{assessmentId}Get",
      "httpMethod": "get",
      "tag": "Assessment data",
      "description": "Find submissions to a specified open response assessment, including marks if any",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "assessmentId",
          "schema": "string",
          "required": true,
          "description": "assessment's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/analytics/submissions/{userEmail}/assignments/{assessmentId}",
      "method": "/offerings/{offeringId}/analytics/submissions/{userEmail}/assignments/{assessmentId}Get",
      "httpMethod": "get",
      "tag": "Assessment data",
      "description": "Find a learner's submission to a specified assessment, including marks if any",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "userEmail",
          "schema": "string",
          "required": true,
          "description": "user's email"
        },
        {
          "name": "assessmentId",
          "schema": "string",
          "required": true,
          "description": "assessment's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/analytics/unit-reactions",
      "method": "/offerings/{offeringId}/analytics/unitReactionsGet",
      "httpMethod": "get",
      "tag": "Learner activity",
      "description": "Find unit reactions",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/assessments",
      "method": "/offerings/{offeringId}/assessmentsGet",
      "httpMethod": "get",
      "tag": "Assessment management",
      "description": "Find offering's assessments",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/assessments/{assessmentId}",
      "method": "/offerings/{offeringId}/assessments/{assessmentId}Patch",
      "httpMethod": "patch",
      "tag": "Assessment management",
      "description": "Update assessment details",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "assessmentId",
          "schema": "string",
          "required": true,
          "description": "assessment's id"
        },
        {
          "name": "content",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dueDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "markNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "markType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "openDate",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/assessments/{assessmentId}/documents/{documentId}",
      "method": "/offerings/{offeringId}/assessments/{assessmentId}/documents/{documentId}Delete",
      "httpMethod": "delete",
      "tag": "Assessment management",
      "description": "Remove assessment document",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "assessmentId",
          "schema": "string",
          "required": true,
          "description": "assessment's id"
        },
        {
          "name": "documentId",
          "schema": "string",
          "required": true,
          "description": "documents's id"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/assessments/{assessmentId}/{userEmail}",
      "method": "/offerings/{offeringId}/assessments/{assessmentId}/{userEmail}Patch",
      "httpMethod": "patch",
      "tag": "Assessment management",
      "description": "Update the due dates for a learner's quiz attempt",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "assessmentId",
          "schema": "string",
          "required": true,
          "description": "assessment's id"
        },
        {
          "name": "userEmail",
          "schema": "string",
          "required": true,
          "description": "user's email"
        },
        {
          "name": "dueDate",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/badges",
      "method": "/offerings/{offeringId}/badgesGet",
      "httpMethod": "get",
      "tag": "Badges",
      "description": "Find offering badges",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/channels",
      "method": "/offerings/{offeringId}/channelsGet",
      "httpMethod": "get",
      "tag": "Channels",
      "description": "Find channels",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/channels",
      "method": "/offerings/{offeringId}/channelsPost",
      "httpMethod": "post",
      "tag": "Channels",
      "description": "Add channel",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "isBroadcastOnly",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/channels/{channelId}",
      "method": "/offerings/{offeringId}/channels/{channelId}Patch",
      "httpMethod": "patch",
      "tag": "Channels",
      "description": "Update channel",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "channel's id"
        },
        {
          "name": "group",
          "schema": "object",
          "description": ""
        },
        {
          "name": "groupDiscussion",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "isBroadcastOnly",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "privateSupport",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/channels/{channelId}/learners",
      "method": "/offerings/{offeringId}/channels/{channelId}/learnersDelete",
      "httpMethod": "delete",
      "tag": "Channels",
      "description": "Remove learners from a group channel",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "channel's id"
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/channels/{channelId}/learners",
      "method": "/offerings/{offeringId}/channels/{channelId}/learnersGet",
      "httpMethod": "get",
      "tag": "Channels",
      "description": "Find learners in a group channel",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "channel's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/channels/{channelId}/learners",
      "method": "/offerings/{offeringId}/channels/{channelId}/learnersPost",
      "httpMethod": "post",
      "tag": "Channels",
      "description": "Add learners to a group channel",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "channel's id"
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/groups",
      "method": "/offerings/{offeringId}/groupsGet",
      "httpMethod": "get",
      "tag": "Assessment groups",
      "description": "Find assessment groups",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/groups",
      "method": "/offerings/{offeringId}/groupsPost",
      "httpMethod": "post",
      "tag": "Assessment groups",
      "description": "Add an assessment group",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/groups/{groupId}/learners",
      "method": "/offerings/{offeringId}/groups/{groupId}/learnersGet",
      "httpMethod": "get",
      "tag": "Assessment groups",
      "description": "Find learners in an assessment group",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "Assessment group id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/groups/{groupId}/learners",
      "method": "/offerings/{offeringId}/groups/{groupId}/learnersPost",
      "httpMethod": "post",
      "tag": "Assessment groups",
      "description": "Add a learner to an assessment group",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "Assessment group id"
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/groups/{groupId}/learners/{userEmail}",
      "method": "/offerings/{offeringId}/groups/{groupId}/learners/{userEmail}Delete",
      "httpMethod": "delete",
      "tag": "Assessment groups",
      "description": "Remove a learner from an assessment group",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "groupId",
          "schema": "string",
          "required": true,
          "description": "Assessment group id"
        },
        {
          "name": "userEmail",
          "schema": "string",
          "required": true,
          "description": "user's email"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/learners/pending-submission",
      "method": "/offerings/{offeringId}/learners/pendingSubmissionGet",
      "httpMethod": "get",
      "tag": "Assessment management",
      "description": "Find learners with assessments pending x days before due date within the specified offeringId",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "days",
          "schema": "string",
          "required": false,
          "description": "days to assessment due date. Default is 3 days"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/metadata/category",
      "method": "/offerings/{offeringId}/metadata/categoryPut",
      "httpMethod": "put",
      "tag": "Offering metadata",
      "description": "Update offering category metadata",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "category",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/metadata/level",
      "method": "/offerings/{offeringId}/metadata/levelPut",
      "httpMethod": "put",
      "tag": "Offering metadata",
      "description": "Update offering level metadata",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "level",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/metadata/tags",
      "method": "/offerings/{offeringId}/metadata/tagsPut",
      "httpMethod": "put",
      "tag": "Offering metadata",
      "description": "Update offering tags metadata",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "tags",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/metadata/topic",
      "method": "/offerings/{offeringId}/metadata/topicPut",
      "httpMethod": "put",
      "tag": "Offering metadata",
      "description": "Update offering topic metadata",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "topic",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/users",
      "method": "/offerings/{offeringId}/usersGet",
      "httpMethod": "get",
      "tag": "Offering learners",
      "description": "Find offering's users",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "facilitators",
          "schema": "string",
          "description": "If true, facilitators are included in the results."
        },
        {
          "name": "learners",
          "schema": "string",
          "description": "If true, learners are included in the results."
        },
        {
          "name": "markers",
          "schema": "string",
          "description": "If true, markers are included in the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/users",
      "method": "/offerings/{offeringId}/usersPost",
      "httpMethod": "post",
      "tag": "Offering learners",
      "description": "Adds user to the offering",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "207",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/users/{markerEmail}/marks",
      "method": "/offerings/{offeringId}/users/{markerEmail}/marksDelete",
      "httpMethod": "delete",
      "tag": "Offering learners",
      "description": "Remove learners from coach's marking list",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "markerEmail",
          "schema": "string",
          "required": true,
          "description": "marker's email"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/users/{markerEmail}/marks",
      "method": "/offerings/{offeringId}/users/{markerEmail}/marksGet",
      "httpMethod": "get",
      "tag": "Offering learners",
      "description": "Find Learners marked by a coach",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "markerEmail",
          "schema": "string",
          "required": true,
          "description": "marker's email"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/users/{markerEmail}/marks",
      "method": "/offerings/{offeringId}/users/{markerEmail}/marksPost",
      "httpMethod": "post",
      "tag": "Offering learners",
      "description": "Add learners to be marked by a coach",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "markerEmail",
          "schema": "string",
          "required": true,
          "description": "marker's email"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/users/{userEmail}",
      "method": "/offerings/{offeringId}/users/{userEmail}Delete",
      "httpMethod": "delete",
      "tag": "Offering learners",
      "description": "Removes user from the offering",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "userEmail",
          "schema": "string",
          "required": true,
          "description": "user's email"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/users/{userEmail}/assessments/{assessmentId}",
      "method": "/offerings/{offeringId}/users/{userEmail}/assessments/{assessmentId}Delete",
      "httpMethod": "delete",
      "tag": "Assessment management",
      "description": "Reset user's assessment to draft state",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "userEmail",
          "schema": "string",
          "required": true,
          "description": "user's email"
        },
        {
          "name": "assessmentId",
          "schema": "string",
          "required": true,
          "description": "assessment's id"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/users/{userEmail}/badges/award",
      "method": "/offerings/{offeringId}/users/{userEmail}/badges/awardPost",
      "httpMethod": "post",
      "tag": "Badges",
      "description": "Award badge",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "userEmail",
          "schema": "string",
          "required": true,
          "description": "user's email"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/offerings/{offeringId}/users/{userEmail}/submissions/open-response",
      "method": "/offerings/{offeringId}/users/{userEmail}/submissions/openResponseGet",
      "httpMethod": "get",
      "tag": "Assessment management",
      "description": "Find learner's open response assessment submissions",
      "parameters": [
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        },
        {
          "name": "userEmail",
          "schema": "string",
          "required": true,
          "description": "user's email"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/org",
      "method": "/orgGet",
      "httpMethod": "get",
      "tag": "Organisation",
      "description": "Gets the current organisation",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/users",
      "method": "/usersPost",
      "httpMethod": "post",
      "tag": "Users in iQualify",
      "description": "Add new user",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "description": ""
        },
        {
          "name": "personId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "profile",
          "schema": "object",
          "description": ""
        },
        {
          "name": "sendInvite",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/all/progress",
      "method": "/users/all/progressGet",
      "httpMethod": "get",
      "tag": "Learner activity",
      "description": "Find learner progress in all offerings",
      "parameters": [
        {
          "name": "$top",
          "schema": "string",
          "description": "Returns only the first n results."
        },
        {
          "name": "$orderby",
          "schema": "string",
          "description": "Sorts the results."
        },
        {
          "name": "$filter",
          "schema": "string",
          "description": "Filters the results, based on a Boolean condition."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userEmail}",
      "method": "/users/{userEmail}Get",
      "httpMethod": "get",
      "tag": "Users in iQualify",
      "description": "Find user by email",
      "parameters": [
        {
          "name": "userEmail",
          "schema": "string",
          "required": true,
          "description": "user's email"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userEmail}",
      "method": "/users/{userEmail}Patch",
      "httpMethod": "patch",
      "tag": "Users in iQualify",
      "description": "Update user",
      "parameters": [
        {
          "name": "userEmail",
          "schema": "string",
          "required": true,
          "description": "user's email"
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "description": ""
        },
        {
          "name": "personId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "profile",
          "schema": "object",
          "description": ""
        },
        {
          "name": "sendInvite",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userEmail}/badges",
      "method": "/users/{userEmail}/badgesGet",
      "httpMethod": "get",
      "tag": "Badges",
      "description": "Find user's badges",
      "parameters": [
        {
          "name": "userEmail",
          "schema": "string",
          "required": true,
          "description": "user's email"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userEmail}/invite-email",
      "method": "/users/{userEmail}/inviteEmailPost",
      "httpMethod": "post",
      "tag": "Users in iQualify",
      "description": "Resend invitation email",
      "parameters": [
        {
          "name": "userEmail",
          "schema": "string",
          "required": true,
          "description": "user's email"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userEmail}/offerings",
      "method": "/users/{userEmail}/offeringsGet",
      "httpMethod": "get",
      "tag": "Users in iQualify",
      "description": "Find user's offerings",
      "parameters": [
        {
          "name": "userEmail",
          "schema": "string",
          "required": true,
          "description": "user's email"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userEmail}/offerings",
      "method": "/users/{userEmail}/offeringsPost",
      "httpMethod": "post",
      "tag": "Users in iQualify",
      "description": "Adds the user to the specified offerings as a learner",
      "parameters": [
        {
          "name": "userEmail",
          "schema": "string",
          "required": true,
          "description": "user's email"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userEmail}/offerings/{offeringId}/progress",
      "method": "/users/{userEmail}/offerings/{offeringId}/progressGet",
      "httpMethod": "get",
      "tag": "Learner activity",
      "description": "Find learner's progress in a specified offering",
      "parameters": [
        {
          "name": "userEmail",
          "schema": "string",
          "required": true,
          "description": "user's email"
        },
        {
          "name": "offeringId",
          "schema": "string",
          "required": true,
          "description": "offering's id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userEmail}/permissions/{permissionName}",
      "method": "/users/{userEmail}/permissions/{permissionName}Post",
      "httpMethod": "post",
      "tag": "Users in iQualify",
      "description": "Add permission to user",
      "parameters": [
        {
          "name": "userEmail",
          "schema": "string",
          "required": true,
          "description": "user's email"
        },
        {
          "name": "permissionName",
          "schema": "string",
          "required": true,
          "description": "permission name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userEmail}/progress",
      "method": "/users/{userEmail}/progressGet",
      "httpMethod": "get",
      "tag": "Learner activity",
      "description": "Find learner's progress in offerings",
      "parameters": [
        {
          "name": "userEmail",
          "schema": "string",
          "required": true,
          "description": "user's email"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userEmail}/suspend",
      "method": "/users/{userEmail}/suspendPut",
      "httpMethod": "put",
      "tag": "Users in iQualify",
      "description": "Suspend user",
      "parameters": [
        {
          "name": "userEmail",
          "schema": "string",
          "required": true,
          "description": "user's email"
        },
        {
          "name": "suspended",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{userEmail}/transfer",
      "method": "/users/{userEmail}/transferPatch",
      "httpMethod": "patch",
      "tag": "Offering learners",
      "description": "Transfer a user between offerings",
      "parameters": [
        {
          "name": "userEmail",
          "schema": "string",
          "required": true,
          "description": "user's email"
        },
        {
          "name": "fromOfferingId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sendInvite",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "toOfferingId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.iqualify.com/v1",
  "apiDescription": "The iQualify API offers management responses for building\nlearning experiences using your iQualify instance data.\n\nOnce you’ve registered with iQualify, you can request an API access token by\nnavigating to the API access section of the \"Account Settings\" area.\n\nFind out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token)\non our Knowledge base.\n\nAll endpoints are only accessible via https and are located at\napi.iqualify.com. For instance: you can find your current offerings by\naccessing the following URL:\n\n    https://api.iqualify.com/v1/offerings/current\n\n",
  "apiTitle": "iQualify Management API",
  "endpoints": 74,
  "sdkMethods": 84,
  "schemas": 70,
  "parameters": 192,
  "difficultyScore": 167,
  "difficulty": "Medium"
}