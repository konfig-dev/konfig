{
  "providerName": "uebermaps.com",
  "openApiRaw": "https://uebermaps.com/api/v2/apidocs",
  "securitySchemes": {},
  "categories": [
    "location"
  ],
  "homepage": "uebermaps.com",
  "apiVersion": "2.0",
  "methods": [
    {
      "url": "/account",
      "method": "/accountPatch",
      "httpMethod": "patch",
      "tag": "Account",
      "typeScriptTag": "account",
      "description": "Update account",
      "parameters": [
        {
          "name": "about",
          "schema": "string",
          "description": ""
        },
        {
          "name": "header",
          "schema": "string",
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "description": ""
        },
        {
          "name": "location",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "picture",
          "schema": "string",
          "description": ""
        },
        {
          "name": "screen_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "time_zone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/attachments/{id}",
      "method": "/attachments/{id}Delete",
      "httpMethod": "delete",
      "tag": "Attachments",
      "typeScriptTag": "attachments",
      "description": "Delete attachment",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Attachment id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/authentication",
      "method": "/authenticationPost",
      "httpMethod": "post",
      "tag": "Authentication",
      "typeScriptTag": "authentication",
      "description": "Sign in user",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/collaborator_invitations",
      "method": "/collaboratorInvitationsGet",
      "httpMethod": "get",
      "tag": "CollaboratorInvitations",
      "typeScriptTag": "collaboratorInvitations",
      "description": "List your collaborator invitations",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/collaborator_invitations",
      "method": "/collaboratorInvitationsPost",
      "httpMethod": "post",
      "tag": "CollaboratorInvitations",
      "typeScriptTag": "collaboratorInvitations",
      "description": "Invite user to collaborate on map",
      "parameters": [
        {
          "name": "emails",
          "schema": "string",
          "description": ""
        },
        {
          "name": "is_admin",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "map_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "user_ids",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/collaborator_invitations/{id}",
      "method": "/collaboratorInvitations/{id}Delete",
      "httpMethod": "delete",
      "tag": "CollaboratorInvitations",
      "typeScriptTag": "collaboratorInvitations",
      "description": "Delete collaborator invitation",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Collaborator invitation id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/collaborator_invitations/{id}",
      "method": "/collaboratorInvitations/{id}Get",
      "httpMethod": "get",
      "tag": "CollaboratorInvitations",
      "typeScriptTag": "collaboratorInvitations",
      "description": "Show collaborator invitation",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Collaborator invitation id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/collaborator_invitations/{id}",
      "method": "/collaboratorInvitations/{id}Patch",
      "httpMethod": "patch",
      "tag": "CollaboratorInvitations",
      "typeScriptTag": "collaboratorInvitations",
      "description": "Accept collaborator invitation.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Collaborator invitation id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/comments/{id}",
      "method": "/comments/{id}Delete",
      "httpMethod": "delete",
      "tag": "Comments",
      "typeScriptTag": "comments",
      "description": "Delete comment",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Comment id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/comments/{id}",
      "method": "/comments/{id}Patch",
      "httpMethod": "patch",
      "tag": "Comments",
      "typeScriptTag": "comments",
      "description": "Update comment",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Comment id"
        },
        {
          "name": "body",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/events",
      "method": "/eventsGet",
      "httpMethod": "get",
      "tag": "Events",
      "typeScriptTag": "events",
      "description": "List your own events",
      "parameters": [
        {
          "name": "timeframeStart",
          "schema": "string",
          "required": false,
          "description": "Begin of time range of event (ISO 8601 date format)."
        },
        {
          "name": "timeframeEnd",
          "schema": "string",
          "required": false,
          "description": "End of time range of event (ISO 8601 date format)."
        },
        {
          "name": "bounds",
          "schema": "string",
          "required": false,
          "description": "To refine your event index request to contain only events within                                                             a geographical box pass the followng bounds parameters.                                                             F. e. to get events within 'Hamburg, St. Pauli':                                                             bounds[sw_lat]=53.54831449741324                                                             bounds[sw_lon]=9.943227767944336                                                             bounds[ne_lat]=53.5571103674878                                                             bounds[ne_lon]=9.9776029586792"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/events/{id}",
      "method": "/events/{id}Delete",
      "httpMethod": "delete",
      "tag": "Events",
      "typeScriptTag": "events",
      "description": "Delete event",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Event id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/events/{id}",
      "method": "/events/{id}Get",
      "httpMethod": "get",
      "tag": "Events",
      "typeScriptTag": "events",
      "description": "Get event",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of event"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/events/{id}",
      "method": "/events/{id}Patch",
      "httpMethod": "patch",
      "tag": "Events",
      "typeScriptTag": "events",
      "description": "Update event",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Event id"
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ends_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lat",
          "schema": "number",
          "description": ""
        },
        {
          "name": "lon",
          "schema": "number",
          "description": ""
        },
        {
          "name": "picture",
          "schema": "string",
          "description": ""
        },
        {
          "name": "starts_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "time_zone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/maps",
      "method": "/mapsGet",
      "httpMethod": "get",
      "tag": "Maps",
      "typeScriptTag": "maps",
      "description": "List your own maps",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/maps",
      "method": "/mapsPost",
      "httpMethod": "post",
      "tag": "Maps",
      "typeScriptTag": "maps",
      "description": "Create map",
      "parameters": [
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "map_settings",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "picture",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "visibility",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/maps/search",
      "method": "/maps/searchGet",
      "httpMethod": "get",
      "tag": "Search",
      "typeScriptTag": "search",
      "description": "Search maps",
      "parameters": [
        {
          "name": "q",
          "schema": "string",
          "description": "Query"
        },
        {
          "name": "d",
          "schema": "integer",
          "description": "Distance. Diameter of search radius in meter (default: 2000 meter)"
        },
        {
          "name": "lat",
          "schema": "number",
          "description": "Latitude for search radius (default distance: 2000 meter)"
        },
        {
          "name": "lon",
          "schema": "number",
          "description": "Longitude for search radius (default distance: 2000 meter)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/maps/{id}",
      "method": "/maps/{id}Delete",
      "httpMethod": "delete",
      "tag": "Maps",
      "typeScriptTag": "maps",
      "description": "Delete map",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "map id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/maps/{id}",
      "method": "/maps/{id}Get",
      "httpMethod": "get",
      "tag": "Maps",
      "typeScriptTag": "maps",
      "description": "Get map",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of map"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/maps/{id}",
      "method": "/maps/{id}Patch",
      "httpMethod": "patch",
      "tag": "Maps",
      "typeScriptTag": "maps",
      "description": "Update map",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "map id"
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "map_settings",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "picture",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "visibility",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/maps/{id}/attachments",
      "method": "/maps/{id}/attachmentsGet",
      "httpMethod": "get",
      "tag": "Attachments",
      "typeScriptTag": "attachments",
      "description": "List attachments for a given map",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Map id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/maps/{id}/attachments",
      "method": "/maps/{id}/attachmentsPost",
      "httpMethod": "post",
      "tag": "Attachments",
      "typeScriptTag": "attachments",
      "description": "Upload map attachment",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Map id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/maps/{id}/collaborators/",
      "method": "/maps/{id}/collaborators/Get",
      "httpMethod": "get",
      "tag": "Collaborators",
      "typeScriptTag": "collaborators",
      "description": "List collaborators of a map",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Map id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/maps/{id}/collaborators/{user_id}",
      "method": "/maps/{id}/collaborators/{userId}Delete",
      "httpMethod": "delete",
      "tag": "Collaborators",
      "typeScriptTag": "collaborators",
      "description": "Delete collaboration",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "map id"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "user id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/maps/{id}/collaborators/{user_id}",
      "method": "/maps/{id}/collaborators/{userId}Patch",
      "httpMethod": "patch",
      "tag": "Collaborators",
      "typeScriptTag": "collaborators",
      "description": "Update collaborator",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "map id"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "user id"
        },
        {
          "name": "group",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/maps/{id}/comments",
      "method": "/maps/{id}/commentsGet",
      "httpMethod": "get",
      "tag": "Comments",
      "typeScriptTag": "comments",
      "description": "List comments for a given map",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of map"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/maps/{id}/comments",
      "method": "/maps/{id}/commentsPost",
      "httpMethod": "post",
      "tag": "Comments",
      "typeScriptTag": "comments",
      "description": "Create map comment",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "map id"
        },
        {
          "name": "body",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/maps/{id}/respots",
      "method": "/maps/{id}/respotsGet",
      "httpMethod": "get",
      "tag": "Respots",
      "typeScriptTag": "respots",
      "description": "List respots of a map",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Map Id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/maps/{id}/spots",
      "method": "/maps/{id}/spotsGet",
      "httpMethod": "get",
      "tag": "Spots",
      "typeScriptTag": "spots",
      "description": "List spots for a given map",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of map"
        },
        {
          "name": "order",
          "schema": "string",
          "description": "Order of spots"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/maps/{id}/spots",
      "method": "/maps/{id}/spotsPost",
      "httpMethod": "post",
      "tag": "Spots",
      "typeScriptTag": "spots",
      "description": "Create spot",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of map"
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lat",
          "schema": "number",
          "description": ""
        },
        {
          "name": "lon",
          "schema": "number",
          "description": ""
        },
        {
          "name": "picture",
          "schema": "string",
          "description": ""
        },
        {
          "name": "time_zone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/maps/{id}/subscriptions",
      "method": "/maps/{id}/subscriptionsDelete",
      "httpMethod": "delete",
      "tag": "Subscriptions",
      "typeScriptTag": "subscriptions",
      "description": "Unsubscribe from map",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "map id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/maps/{id}/subscriptions",
      "method": "/maps/{id}/subscriptionsGet",
      "httpMethod": "get",
      "tag": "Subscriptions",
      "typeScriptTag": "subscriptions",
      "description": "List subscriptions for a given map",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of map"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/maps/{map_id}/spots/{id}",
      "method": "/maps/{mapId}/spots/{id}Get",
      "httpMethod": "get",
      "tag": "Spots",
      "typeScriptTag": "spots",
      "description": "Get spot",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of spot"
        },
        {
          "name": "mapId",
          "schema": "integer",
          "required": true,
          "description": "Id of map"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/maps/{map_id}/spots/{spot_id}/respot",
      "method": "/maps/{mapId}/spots/{spotId}/respotDelete",
      "httpMethod": "delete",
      "tag": "Respots",
      "typeScriptTag": "respots",
      "description": "Delete respot from map by spot id",
      "parameters": [
        {
          "name": "mapId",
          "schema": "integer",
          "required": true,
          "description": "Map Id"
        },
        {
          "name": "spotId",
          "schema": "integer",
          "required": true,
          "description": "Spot Id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/respot_maps",
      "method": "/respotMapsGet",
      "httpMethod": "get",
      "tag": "Respots",
      "typeScriptTag": "respots",
      "description": "List maps that user can respot to",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/respots/{id}",
      "method": "/respots/{id}Delete",
      "httpMethod": "delete",
      "tag": "Respots",
      "typeScriptTag": "respots",
      "description": "Delete respot",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Respot Id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/respots/{id}",
      "method": "/respots/{id}Get",
      "httpMethod": "get",
      "tag": "Respots",
      "typeScriptTag": "respots",
      "description": "Get respot",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of respot"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/share/map/{id}",
      "method": "/share/map/{id}Get",
      "httpMethod": "get",
      "tag": "Share",
      "typeScriptTag": "share",
      "description": "Get secret access token to share map",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of map"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spots",
      "method": "/spotsGet",
      "httpMethod": "get",
      "tag": "Spots",
      "typeScriptTag": "spots",
      "description": "List your own spots",
      "parameters": [
        {
          "name": "order",
          "schema": "string",
          "description": "Order of spots"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spots/search",
      "method": "/spots/searchGet",
      "httpMethod": "get",
      "tag": "Search",
      "typeScriptTag": "search",
      "description": "Search spots",
      "parameters": [
        {
          "name": "q",
          "schema": "string",
          "description": "Query"
        },
        {
          "name": "d",
          "schema": "integer",
          "description": "Distance. Diameter of search radius in meter (default: 2000 meter)"
        },
        {
          "name": "lat",
          "schema": "number",
          "description": "Latitude for search radius (2 km)"
        },
        {
          "name": "lon",
          "schema": "number",
          "description": "Longitude for search radius (2 km)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spots/{id}",
      "method": "/spots/{id}Delete",
      "httpMethod": "delete",
      "tag": "Spots",
      "typeScriptTag": "spots",
      "description": "Delete spot",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "spot id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spots/{id}",
      "method": "/spots/{id}Patch",
      "httpMethod": "patch",
      "tag": "Spots",
      "typeScriptTag": "spots",
      "description": "Update spot",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "spot id"
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lat",
          "schema": "number",
          "description": ""
        },
        {
          "name": "lon",
          "schema": "number",
          "description": ""
        },
        {
          "name": "picture",
          "schema": "string",
          "description": ""
        },
        {
          "name": "time_zone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spots/{id}/attachments",
      "method": "/spots/{id}/attachmentsGet",
      "httpMethod": "get",
      "tag": "Attachments",
      "typeScriptTag": "attachments",
      "description": "List attachments for a given spot",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Spot id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spots/{id}/attachments",
      "method": "/spots/{id}/attachmentsPost",
      "httpMethod": "post",
      "tag": "Attachments",
      "typeScriptTag": "attachments",
      "description": "Upload spot attachment",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Spot id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spots/{id}/comments",
      "method": "/spots/{id}/commentsGet",
      "httpMethod": "get",
      "tag": "Comments",
      "typeScriptTag": "comments",
      "description": "List comments for a given spot",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of spot"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spots/{id}/comments",
      "method": "/spots/{id}/commentsPost",
      "httpMethod": "post",
      "tag": "Comments",
      "typeScriptTag": "comments",
      "description": "Create spot comment",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "spot id"
        },
        {
          "name": "body",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spots/{id}/events",
      "method": "/spots/{id}/eventsGet",
      "httpMethod": "get",
      "tag": "Events",
      "typeScriptTag": "events",
      "description": "List events for a given spot",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of spot"
        },
        {
          "name": "timeframeStart",
          "schema": "string",
          "required": false,
          "description": "Begin of time range of event (ISO 8601 date format)."
        },
        {
          "name": "timeframeEnd",
          "schema": "string",
          "required": false,
          "description": "End of time range of event (ISO 8601 date format)."
        },
        {
          "name": "bounds",
          "schema": "string",
          "required": false,
          "description": "To refine your event index request to contain only events within                                                             a geographical box pass the followng bounds parameters.                                                             F. e. to get events within 'Hamburg, St. Pauli':                                                             bounds[sw_lat]=53.54831449741324                                                             bounds[sw_lon]=9.943227767944336                                                             bounds[ne_lat]=53.5571103674878                                                             bounds[ne_lon]=9.9776029586792"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spots/{id}/events",
      "method": "/spots/{id}/eventsPost",
      "httpMethod": "post",
      "tag": "Events",
      "typeScriptTag": "events",
      "description": "Create event",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Spot id"
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ends_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lat",
          "schema": "number",
          "description": ""
        },
        {
          "name": "lon",
          "schema": "number",
          "description": ""
        },
        {
          "name": "picture",
          "schema": "string",
          "description": ""
        },
        {
          "name": "starts_at",
          "schema": "string",
          "description": ""
        },
        {
          "name": "time_zone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spots/{id}/respots",
      "method": "/spots/{id}/respotsPost",
      "httpMethod": "post",
      "tag": "Respots",
      "typeScriptTag": "respots",
      "description": "Respot a spot onto a map",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Spot Id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/subscriptions",
      "method": "/subscriptionsGet",
      "httpMethod": "get",
      "tag": "Subscriptions",
      "typeScriptTag": "subscriptions",
      "description": "List subscriptions. Pass no parameters to get own subscriptions",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "description": "Id of user"
        },
        {
          "name": "mapId",
          "schema": "integer",
          "description": "Id of map"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/subscriptions",
      "method": "/subscriptionsPost",
      "httpMethod": "post",
      "tag": "Subscriptions",
      "typeScriptTag": "subscriptions",
      "description": "Create map subscription",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/trends/latest",
      "method": "/trends/latestGet",
      "httpMethod": "get",
      "tag": "Trends",
      "typeScriptTag": "trends",
      "description": "List latest maps",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/trends/recommended",
      "method": "/trends/recommendedGet",
      "httpMethod": "get",
      "tag": "Trends",
      "typeScriptTag": "trends",
      "description": "List recommended maps",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/search",
      "method": "/users/searchGet",
      "httpMethod": "get",
      "tag": "Search",
      "typeScriptTag": "search",
      "description": "Search users",
      "parameters": [
        {
          "name": "q",
          "schema": "string",
          "description": "Query"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{id}",
      "method": "/users/{id}Get",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Get user profile",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Id of user"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/maps",
      "method": "/users/{userId}/mapsGet",
      "httpMethod": "get",
      "tag": "Maps",
      "typeScriptTag": "maps",
      "description": "List maps for a given user",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "Id of user"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "uebermaps.com/api/v2",
  "apiDescription": "Enable people to store spots on public and private maps",
  "apiTitle": "uebermaps API endpoints",
  "endpoints": 36,
  "sdkMethods": 56,
  "schemas": 26,
  "parameters": 122,
  "difficultyScore": 99.5,
  "difficulty": "Medium"
}