{
  "providerName": "openfigi.com",
  "openApiRaw": "https://api.openfigi.com/schema",
  "securitySchemes": {
    "ApiKeyAuth": {
      "in": "header",
      "name": "X-OPENFIGI-APIKEY",
      "type": "apiKey"
    }
  },
  "categories": [
    "open_data"
  ],
  "homepage": "openfigi.com",
  "apiVersion": "1.4.0",
  "methods": [
    {
      "url": "/mapping",
      "method": "/mappingPost",
      "httpMethod": "post",
      "description": "Allows mapping from third-party identifiers to FIGIs.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        },
        {
          "statusCode": "413",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/mapping/values/{key}",
      "method": "/mapping/values/{key}Get",
      "httpMethod": "get",
      "description": "Get values for enum-like fields.",
      "parameters": [
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "Key of MappingJob for which to get possible values."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.openfigi.com/{basePath}",
  "apiDescription": "A free & open API for FIGI discovery.",
  "apiTitle": "OpenFIGI API",
  "endpoints": 2,
  "sdkMethods": 2,
  "schemas": 9,
  "parameters": 1,
  "contactUrl": "https://openfigi.com/api",
  "contactEmail": "support@openfigi.com",
  "difficultyScore": 6.75,
  "difficulty": "Very Easy"
}