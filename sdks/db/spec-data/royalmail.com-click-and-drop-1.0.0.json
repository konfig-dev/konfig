{
  "providerName": "royalmail.com",
  "openApiRaw": "https://api.parcel.royalmail.com/doc/v1/click-and-drop-api-v1.yaml",
  "homepage": "royalmail.com",
  "serviceName": "click-and-drop",
  "apiVersion": "1.0.0",
  "methods": [
    {
      "url": "/orders",
      "method": "getOrdersAsync",
      "httpMethod": "get",
      "tag": "Orders",
      "description": "Retrieve pageable list of orders",
      "parameters": [
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "The number of items to return"
        },
        {
          "name": "startDateTime",
          "schema": "string",
          "required": false,
          "description": "Date and time lower bound for items filtering"
        },
        {
          "name": "endDateTime",
          "schema": "string",
          "required": false,
          "description": "Date and time upper bound for items filtering"
        },
        {
          "name": "continuationToken",
          "schema": "string",
          "required": false,
          "description": "The token for retrieving the next page of items"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders",
      "method": "createOrdersAsync",
      "httpMethod": "post",
      "tag": "Orders",
      "description": "Create orders",
      "parameters": [
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/full",
      "method": "getOrdersWithDetailsAsync",
      "httpMethod": "get",
      "tag": "Orders",
      "description": "Retrieve pageable list of orders with details",
      "parameters": [
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "The number of items to return"
        },
        {
          "name": "startDateTime",
          "schema": "string",
          "required": false,
          "description": "Date and time lower bound for items filtering"
        },
        {
          "name": "endDateTime",
          "schema": "string",
          "required": false,
          "description": "Date and time upper bound for items filtering"
        },
        {
          "name": "continuationToken",
          "schema": "string",
          "required": false,
          "description": "The token for retrieving the next page of items"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/status",
      "method": "updateOrdersStatusAsync",
      "httpMethod": "put",
      "tag": "Orders",
      "description": "Set order status",
      "parameters": [
        {
          "name": "items",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/{orderIdentifiers}",
      "method": "deleteOrdersAsync",
      "httpMethod": "delete",
      "tag": "Orders",
      "description": "Delete orders",
      "parameters": [
        {
          "name": "orderIdentifiers",
          "schema": "string",
          "required": true,
          "description": "One or several Order Identifiers or Order References separated by semicolon. Order Identifiers are integer numbers. Order References are strings - each must be percent-encoded and surrounded by double quotation marks. The maximum number of identifiers is 100."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/{orderIdentifiers}",
      "method": "getSpecificOrdersAsync",
      "httpMethod": "get",
      "tag": "Orders",
      "description": "Retrieve specific orders",
      "parameters": [
        {
          "name": "orderIdentifiers",
          "schema": "string",
          "required": true,
          "description": "One or several Order Identifiers or Order References separated by semicolon. Order Identifiers are integer numbers. Order References are strings - each must be percent-encoded and surrounded by double quotation marks. The maximum number of identifiers is 100."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/{orderIdentifiers}/full",
      "method": "getSpecificOrdersWithDetailsAsync",
      "httpMethod": "get",
      "tag": "Orders",
      "description": "Retrieve details of the specific orders",
      "parameters": [
        {
          "name": "orderIdentifiers",
          "schema": "string",
          "required": true,
          "description": "One or several Order Identifiers or Order References separated by semicolon. Order Identifiers are integer numbers. Order References are strings - each must be percent-encoded and surrounded by double quotation marks. The maximum number of identifiers is 100."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/{orderIdentifiers}/label",
      "method": "getOrdersLabelAsync",
      "httpMethod": "get",
      "tag": "Labels",
      "description": "Return a single PDF file with generated label and/or associated document(s)",
      "parameters": [
        {
          "name": "orderIdentifiers",
          "schema": "string",
          "required": true,
          "description": "One or several Order Identifiers or Order References separated by semicolon. Order Identifiers are integer numbers. Order References are strings - each must be percent-encoded and surrounded by double quotation marks. The maximum number of identifiers is 100."
        },
        {
          "name": "documentType",
          "schema": "string",
          "required": true,
          "description": "Document generation mode. When documentType is set to \"postageLabel\" the additional parameters below must be used. These additional parameters will be ignored when documentType is not set to \"postageLabel\""
        },
        {
          "name": "includeReturnsLabel",
          "schema": "boolean",
          "required": false,
          "description": "Include returns label. Required when documentType is set to 'postageLabel'"
        },
        {
          "name": "includeCN",
          "schema": "boolean",
          "required": false,
          "description": "Include CN22/CN23 with label. Optional parameter. If this parameter is used the setting will override the default account behaviour specified in the \"Label format\" setting \"Generate customs declarations with orders\""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/version",
      "method": "getVersionAsync",
      "httpMethod": "get",
      "tag": "Version",
      "description": "Get API version details.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "/api/v1",
  "apiDescription": "Import your orders, retrieve your orders and generate labels.",
  "apiTitle": "ChannelShipper & Royal Mail Public API",
  "endpoints": 7,
  "sdkMethods": 9,
  "schemas": 43,
  "parameters": 17,
  "difficultyScore": 34.75,
  "difficulty": "Easy"
}