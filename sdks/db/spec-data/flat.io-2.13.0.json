{
  "providerName": "flat.io",
  "openApiRaw": "https://raw.githubusercontent.com/FlatIO/api-reference/master/spec/swagger.yaml",
  "securitySchemes": {
    "OAuth2": {
      "description": "OAuth 2.0 authentication for your app or. Please only request the most restrictive and needed scopes. Using some of the scopes may require an additional review from our team. The Flat API supports **authorization code** and **implicit** flows.\n",
      "flows": {
        "authorizationCode": {
          "authorizationUrl": "https://flat.io/auth/oauth",
          "scopes": {
            "account.education_profile": "Provides access to the basic person's education profile and public organization information.\n",
            "account.email": "Provices access to the person's email.\n",
            "account.public_profile": "Provides access to the basic person's public profile. Education profiles may be anonymized with this scope, you can request the scope `education_profile` to access to the a basic education account profile.\n",
            "collections": "Full, permissive scope to access all of a user's collections.",
            "collections.add_scores": "Allow to add scores to a user's collections.",
            "collections.readonly": "Allow read-only access to a user's collections.",
            "edu.admin": "Full, permissive scope to manage all the admin of an organization.",
            "edu.admin.lti": "Access and manage the LTI Credentials for an organization.",
            "edu.admin.lti.readonly": "Read-only access to the LTI Credentials of an organization.",
            "edu.admin.users": "Access and manage the users and invitations of the organization.",
            "edu.admin.users.readonly": "Read-only access to the users and invitations of the organization.",
            "edu.assignments": "Read-write access to the assignments and submissions.",
            "edu.assignments.readonly": "Read-only access to the assignments and submissions.",
            "edu.classes": "Full, permissive scope to manage the classes.",
            "edu.classes.readonly": "Read-only access to the classes.",
            "scores": "Full, permissive scope to access all of a user's scores.\n",
            "scores.readonly": "Allows read-only access to all a user's scores. You won't need this scope to read public scores.\n",
            "scores.social": "Allow to post comments and like scores\n"
          },
          "tokenUrl": "https://api.flat.io/oauth/access_token"
        }
      },
      "type": "oauth2"
    }
  },
  "homepage": "flat.io",
  "apiVersion": "2.13.0",
  "methods": [
    {
      "url": "/classes",
      "method": "listClasses",
      "httpMethod": "get",
      "tag": "Class",
      "description": "List the classes available for the current user",
      "parameters": [
        {
          "name": "state",
          "schema": "string",
          "description": "Filter the classes by state"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes",
      "method": "createClass",
      "httpMethod": "post",
      "tag": "Class",
      "description": "Create a new class",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "section",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A classroom"
        },
        {
          "statusCode": "402",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/enroll/{enrollmentCode}",
      "method": "enrollClass",
      "httpMethod": "post",
      "tag": "Class",
      "description": "Join a class",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "A classroom"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}",
      "method": "getClass",
      "httpMethod": "get",
      "tag": "Class",
      "description": "Get the details of a single class",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "A classroom"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}",
      "method": "updateClass",
      "httpMethod": "put",
      "tag": "Class",
      "description": "Update the class",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "section",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A classroom"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/activate",
      "method": "activateClass",
      "httpMethod": "post",
      "tag": "Class",
      "description": "Activate the class",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "A classroom"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/archive",
      "method": "unarchiveClass",
      "httpMethod": "delete",
      "tag": "Class",
      "description": "Unarchive the class",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "A classroom"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/archive",
      "method": "archiveClass",
      "httpMethod": "post",
      "tag": "Class",
      "description": "Archive the class",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "A classroom"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/assignments",
      "method": "listAssignments",
      "httpMethod": "get",
      "tag": "Class",
      "description": "Assignments listing",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/assignments",
      "method": "createAssignment",
      "httpMethod": "post",
      "tag": "Class",
      "description": "Assignment creation",
      "parameters": [
        {
          "name": "assignedStudents",
          "schema": "array",
          "description": ""
        },
        {
          "name": "assigneeMode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "attachments",
          "schema": "array",
          "description": ""
        },
        {
          "name": "cover",
          "schema": "string",
          "description": ""
        },
        {
          "name": "coverFile",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dueDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "googleClassroom",
          "schema": "object",
          "description": ""
        },
        {
          "name": "maxPoints",
          "schema": "number",
          "description": ""
        },
        {
          "name": "microsoftGraph",
          "schema": "object",
          "description": ""
        },
        {
          "name": "nbPlaybackAuthorized",
          "schema": "number",
          "description": ""
        },
        {
          "name": "scheduledDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "toolset",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Assignment details"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/assignments/{assignment}/archive",
      "method": "unarchiveAssignment",
      "httpMethod": "delete",
      "tag": "Class",
      "description": "Unarchive the assignment.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Assignment details"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/assignments/{assignment}/archive",
      "method": "archiveAssignment",
      "httpMethod": "post",
      "tag": "Class",
      "description": "Archive the assignment",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Assignment details"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/assignments/{assignment}/copy",
      "method": "copyAssignment",
      "httpMethod": "post",
      "tag": "Class",
      "description": "Copy an assignment",
      "parameters": [
        {
          "name": "assignment",
          "schema": "string",
          "description": ""
        },
        {
          "name": "classroom",
          "schema": "string",
          "description": ""
        },
        {
          "name": "scheduledDate",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Assignment details"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/assignments/{assignment}/submissions",
      "method": "getSubmissions",
      "httpMethod": "get",
      "tag": "Class",
      "description": "List the students' submissions",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/assignments/{assignment}/submissions",
      "method": "createSubmission",
      "httpMethod": "put",
      "tag": "Class",
      "description": "Create or edit a submission",
      "parameters": [
        {
          "name": "attachments",
          "schema": "array",
          "description": ""
        },
        {
          "name": "comments",
          "schema": "object",
          "description": ""
        },
        {
          "name": "draftGrade",
          "schema": "number",
          "description": ""
        },
        {
          "name": "grade",
          "schema": "number",
          "description": ""
        },
        {
          "name": "return",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "submit",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Assignment Submission"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/assignments/{assignment}/submissions/csv",
      "method": "exportSubmissionsReviewsAsCsv",
      "httpMethod": "get",
      "tag": "Class",
      "description": "CSV Grades exports",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/assignments/{assignment}/submissions/excel",
      "method": "exportSubmissionsReviewsAsExcel",
      "httpMethod": "get",
      "tag": "Class",
      "description": "Excel Grades exports",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/assignments/{assignment}/submissions/{submission}",
      "method": "deleteSubmission",
      "httpMethod": "delete",
      "tag": "Class",
      "description": "Delete a submission",
      "parameters": [
        {
          "name": "class",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the class"
        },
        {
          "name": "assignment",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the assignment"
        },
        {
          "name": "submission",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the submission"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/assignments/{assignment}/submissions/{submission}",
      "method": "getSubmission",
      "httpMethod": "get",
      "tag": "Class",
      "description": "Get a student submission",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Assignment Submission"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/assignments/{assignment}/submissions/{submission}",
      "method": "editSubmission",
      "httpMethod": "put",
      "tag": "Class",
      "description": "Edit a submission",
      "parameters": [
        {
          "name": "attachments",
          "schema": "array",
          "description": ""
        },
        {
          "name": "comments",
          "schema": "object",
          "description": ""
        },
        {
          "name": "draftGrade",
          "schema": "number",
          "description": ""
        },
        {
          "name": "grade",
          "schema": "number",
          "description": ""
        },
        {
          "name": "return",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "submit",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Assignment Submission"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/assignments/{assignment}/submissions/{submission}/comments",
      "method": "getSubmissionComments",
      "httpMethod": "get",
      "tag": "Class",
      "description": "List the feedback comments of a submission",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/assignments/{assignment}/submissions/{submission}/comments",
      "method": "postSubmissionComment",
      "httpMethod": "post",
      "tag": "Class",
      "description": "Add a feedback comment to a submission",
      "parameters": [
        {
          "name": "comment",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Feedback comment added to an assignment submission"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/assignments/{assignment}/submissions/{submission}/comments/{comment}",
      "method": "deleteSubmissionComment",
      "httpMethod": "delete",
      "tag": "Class",
      "description": "Delete a feedback comment to a submission",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/assignments/{assignment}/submissions/{submission}/comments/{comment}",
      "method": "updateSubmissionComment",
      "httpMethod": "put",
      "tag": "Class",
      "description": "Update a feedback comment to a submission",
      "parameters": [
        {
          "name": "comment",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Feedback comment added to an assignment submission"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/assignments/{assignment}/submissions/{submission}/history",
      "method": "getSubmissionHistory",
      "httpMethod": "get",
      "tag": "Class",
      "description": "Get the history of the submission",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/students/{user}/submissions",
      "method": "listClassStudentSubmissions",
      "httpMethod": "get",
      "tag": "Class",
      "description": "List the submissions for a student",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/users/{user}",
      "method": "deleteClassUser",
      "httpMethod": "delete",
      "tag": "Class",
      "description": "Remove a user from the class",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/classes/{class}/users/{user}",
      "method": "addClassUser",
      "httpMethod": "put",
      "tag": "Class",
      "description": "Add a user to the class",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/collections",
      "method": "listCollections",
      "httpMethod": "get",
      "tag": "Collection",
      "description": "List the collections",
      "parameters": [
        {
          "name": "parent",
          "schema": "string",
          "description": "List the collection contained in this `parent` collection.\n\nThis option doesn't provide a complete multi-level collection support.\nWhen sharing a collection with someone, this one will have as `parent` `sharedWithMe`.\n"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort"
        },
        {
          "name": "direction",
          "schema": "string",
          "description": "Sort direction"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "This is the maximum number of objects that may be returned"
        },
        {
          "name": "next",
          "schema": "string",
          "description": "An opaque string cursor to fetch the next page of data.\nThe paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.\n"
        },
        {
          "name": "previous",
          "schema": "string",
          "description": "An opaque string cursor to fetch the previous page of data.\nThe paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/collections",
      "method": "createCollection",
      "httpMethod": "post",
      "tag": "Collection",
      "description": "Create a new collection",
      "parameters": [
        {
          "name": "privacy",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Collection of scores"
        },
        {
          "statusCode": "400",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/collections/{collection}",
      "method": "deleteCollection",
      "httpMethod": "delete",
      "tag": "Collection",
      "description": "Delete the collection",
      "parameters": [],
      "responses": [
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/collections/{collection}",
      "method": "getCollection",
      "httpMethod": "get",
      "tag": "Collection",
      "description": "Get collection details",
      "parameters": [
        {
          "name": "sharingKey",
          "schema": "string",
          "description": "This sharing key must be specified to access to a score or collection with a `privacy` mode set to `privateLink` and the current user is not a collaborator of the document.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Collection of scores"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/collections/{collection}",
      "method": "editCollection",
      "httpMethod": "put",
      "tag": "Collection",
      "description": "Update a collection's metadata",
      "parameters": [
        {
          "name": "privacy",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Collection of scores"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/collections/{collection}/scores",
      "method": "listCollectionScores",
      "httpMethod": "get",
      "tag": "Collection",
      "description": "List the scores contained in a collection",
      "parameters": [
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort"
        },
        {
          "name": "direction",
          "schema": "string",
          "description": "Sort direction"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "This is the maximum number of objects that may be returned"
        },
        {
          "name": "next",
          "schema": "string",
          "description": "An opaque string cursor to fetch the next page of data.\nThe paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.\n"
        },
        {
          "name": "previous",
          "schema": "string",
          "description": "An opaque string cursor to fetch the previous page of data.\nThe paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/collections/{collection}/scores/{score}",
      "method": "deleteScoreFromCollection",
      "httpMethod": "delete",
      "tag": "Collection",
      "description": "Delete a score from the collection",
      "parameters": [],
      "responses": [
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/collections/{collection}/scores/{score}",
      "method": "addScoreToCollection",
      "httpMethod": "put",
      "tag": "Collection",
      "description": "Add a score to the collection",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "The score and all its details"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/collections/{collection}/untrash",
      "method": "untrashCollection",
      "httpMethod": "post",
      "tag": "Collection",
      "description": "Untrash a collection",
      "parameters": [],
      "responses": [
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/groups/{group}",
      "method": "getGroupDetails",
      "httpMethod": "get",
      "tag": "Group",
      "description": "Get group information",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "The details of a group"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/groups/{group}/scores",
      "method": "getGroupScores",
      "httpMethod": "get",
      "tag": "Group",
      "description": "List group's scores",
      "parameters": [
        {
          "name": "parent",
          "schema": "string",
          "description": "Filter the score forked from the score id `parent`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/groups/{group}/users",
      "method": "listGroupUsers",
      "httpMethod": "get",
      "tag": "Group",
      "description": "List group's users",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "description": "Filter the users by their source\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/me",
      "method": "getAuthenticatedUser",
      "httpMethod": "get",
      "tag": "Account",
      "description": "Get current user profile",
      "parameters": [
        {
          "name": "onlyId",
          "schema": "boolean",
          "description": "Only return the user id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "User details"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/organizations/invitations",
      "method": "listOrganizationInvitations",
      "httpMethod": "get",
      "tag": "Organization",
      "description": "List the organization invitations",
      "parameters": [
        {
          "name": "role",
          "schema": "string",
          "description": "Filter users by role"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "This is the maximum number of objects that may be returned"
        },
        {
          "name": "next",
          "schema": "string",
          "description": "An opaque string cursor to fetch the next page of data.\nThe paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.\n"
        },
        {
          "name": "previous",
          "schema": "string",
          "description": "An opaque string cursor to fetch the previous page of data.\nThe paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/organizations/invitations",
      "method": "createOrganizationInvitation",
      "httpMethod": "post",
      "tag": "Organization",
      "description": "Create a new invitation to join the organization",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "organizationRole",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Details of an invitation to join an organization"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/organizations/invitations/{invitation}",
      "method": "removeOrganizationInvitation",
      "httpMethod": "delete",
      "tag": "Organization",
      "description": "Remove an organization invitation",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/organizations/lti/credentials",
      "method": "listLtiCredentials",
      "httpMethod": "get",
      "tag": "Organization",
      "description": "List LTI 1.x credentials",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/organizations/lti/credentials",
      "method": "createLtiCredentials",
      "httpMethod": "post",
      "tag": "Organization",
      "description": "Create a new couple of LTI 1.x credentials",
      "parameters": [
        {
          "name": "lms",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A couple of LTI 1.x OAuth credentials"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/organizations/lti/credentials/{credentials}",
      "method": "revokeLtiCredentials",
      "httpMethod": "delete",
      "tag": "Organization",
      "description": "Revoke LTI 1.x credentials",
      "parameters": [],
      "responses": [
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/organizations/users",
      "method": "listOrganizationUsers",
      "httpMethod": "get",
      "tag": "Organization",
      "description": "List the organization users",
      "parameters": [
        {
          "name": "sort",
          "schema": "string",
          "description": "The order to sort the user list"
        },
        {
          "name": "direction",
          "schema": "string",
          "description": "Sort direction"
        },
        {
          "name": "next",
          "schema": "string",
          "description": "An opaque string cursor to fetch the next page of data.\nThe paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.\n"
        },
        {
          "name": "previous",
          "schema": "string",
          "description": "An opaque string cursor to fetch the previous page of data.\nThe paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.\n"
        },
        {
          "name": "role",
          "schema": "array",
          "description": "Filter users by role"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "The query to search"
        },
        {
          "name": "group",
          "schema": "array",
          "description": "Filter users by group"
        },
        {
          "name": "noActiveLicense",
          "schema": "boolean",
          "description": "Filter users who don't have an active license"
        },
        {
          "name": "licenseExpirationDate",
          "schema": "array",
          "description": "Filter users by license expiration date or `active` / `notActive`"
        },
        {
          "name": "onlyIds",
          "schema": "boolean",
          "description": "Return only user ids"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "This is the maximum number of objects that may be returned"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/organizations/users",
      "method": "createOrganizationUser",
      "httpMethod": "post",
      "tag": "Organization",
      "description": "Create a new user account",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "firstname",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastname",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "locale",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "User details (view for organization teacher / admin)"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/organizations/users/count",
      "method": "countOrgaUsers",
      "httpMethod": "get",
      "tag": "Organization",
      "description": "Count the organization users using the provided filters",
      "parameters": [
        {
          "name": "role",
          "schema": "array",
          "description": "Filter users by role"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "The query to search"
        },
        {
          "name": "group",
          "schema": "array",
          "description": "Filter users by group"
        },
        {
          "name": "noActiveLicense",
          "schema": "boolean",
          "description": "Filter users who don't have an active license"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/organizations/users/{user}",
      "method": "removeOrganizationUser",
      "httpMethod": "delete",
      "tag": "Organization",
      "description": "Remove an account from Flat",
      "parameters": [
        {
          "name": "convertToIndividual",
          "schema": "boolean",
          "description": "If `true`, the account will be only removed from the organization and converted into an individual account on our public website, https://flat.io.\nThis operation will remove the education-related data from the account.\nBefore realizing this operation, you need to be sure that the user is at least 13 years old and that this one has read and agreed to the Individual Terms of Services of Flat available on https://flat.io/legal.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/organizations/users/{user}",
      "method": "updateOrganizationUser",
      "httpMethod": "put",
      "tag": "Organization",
      "description": "Update account information",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "firstname",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lastname",
          "schema": "string",
          "description": ""
        },
        {
          "name": "organizationRole",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "User details (view for organization teacher / admin)"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores",
      "method": "createScore",
      "httpMethod": "post",
      "tag": "Score",
      "description": "Create a new score",
      "parameters": [
        {
          "name": "collection",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "data",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dataEncoding",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "filename",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "googleDriveFolder",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "privacy",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "source",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The score and all its details"
        },
        {
          "statusCode": "400",
          "description": "An API Error response"
        },
        {
          "statusCode": "402",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}",
      "method": "deleteScore",
      "httpMethod": "delete",
      "tag": "Score",
      "description": "Delete a score",
      "parameters": [
        {
          "name": "now",
          "schema": "boolean",
          "description": "If `true`, the score deletion will be scheduled to be done ASAP"
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}",
      "method": "getScore",
      "httpMethod": "get",
      "tag": "Score",
      "description": "Get a score's metadata",
      "parameters": [
        {
          "name": "sharingKey",
          "schema": "string",
          "description": "This sharing key must be specified to access to a score or collection with a `privacy` mode set to `privateLink` and the current user is not a collaborator of the document.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The score and all its details"
        },
        {
          "statusCode": "402",
          "description": "An API Error response"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}",
      "method": "editScore",
      "httpMethod": "put",
      "tag": "Score",
      "description": "Edit a score's metadata",
      "parameters": [
        {
          "name": "arranger",
          "schema": "string",
          "description": ""
        },
        {
          "name": "composer",
          "schema": "string",
          "description": ""
        },
        {
          "name": "creationType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "license",
          "schema": "string",
          "description": ""
        },
        {
          "name": "licenseText",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lyricist",
          "schema": "string",
          "description": ""
        },
        {
          "name": "privacy",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sharingKey",
          "schema": "string",
          "description": ""
        },
        {
          "name": "subtitle",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The score and all its details"
        },
        {
          "statusCode": "402",
          "description": "An API Error response"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/collaborators",
      "method": "getScoreCollaborators",
      "httpMethod": "get",
      "tag": "Score",
      "description": "List the collaborators",
      "parameters": [
        {
          "name": "sharingKey",
          "schema": "string",
          "description": "This sharing key must be specified to access to a score or collection with a `privacy` mode set to `privateLink` and the current user is not a collaborator of the document.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": "An API Error response"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/collaborators",
      "method": "addScoreCollaborator",
      "httpMethod": "post",
      "tag": "Score",
      "description": "Add a new collaborator",
      "parameters": [
        {
          "name": "aclAdmin",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "aclRead",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "aclWrite",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "group",
          "schema": "string",
          "description": ""
        },
        {
          "name": "user",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userEmail",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userToken",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collaborator of a score. The `userEmail` and `group` are only available if the requesting user is a collaborator of the related score (in this case these permissions will eventualy not be listed and exposed publicly).\n"
        },
        {
          "statusCode": "402",
          "description": "An API Error response"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/collaborators/{collaborator}",
      "method": "removeScoreCollaborator",
      "httpMethod": "delete",
      "tag": "Score",
      "description": "Delete a collaborator",
      "parameters": [],
      "responses": [
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/collaborators/{collaborator}",
      "method": "getScoreCollaborator",
      "httpMethod": "get",
      "tag": "Score",
      "description": "Get a collaborator",
      "parameters": [
        {
          "name": "sharingKey",
          "schema": "string",
          "description": "This sharing key must be specified to access to a score or collection with a `privacy` mode set to `privateLink` and the current user is not a collaborator of the document.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collaborator of a score. The `userEmail` and `group` are only available if the requesting user is a collaborator of the related score (in this case these permissions will eventualy not be listed and exposed publicly).\n"
        },
        {
          "statusCode": "402",
          "description": "An API Error response"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/comments",
      "method": "getScoreComments",
      "httpMethod": "get",
      "tag": "Score",
      "description": "List comments",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": "Filter the comments by type"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort"
        },
        {
          "name": "direction",
          "schema": "string",
          "description": "Sort direction"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": "An API Error response"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/comments",
      "method": "postScoreComment",
      "httpMethod": "post",
      "tag": "Score",
      "description": "Post a new comment",
      "parameters": [
        {
          "name": "comment",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "context",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "mentions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "rawComment",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "replyTo",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "revision",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Comment added on a sheet music"
        },
        {
          "statusCode": "402",
          "description": "An API Error response"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/comments/{comment}",
      "method": "deleteScoreComment",
      "httpMethod": "delete",
      "tag": "Score",
      "description": "Delete a comment",
      "parameters": [],
      "responses": [
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/comments/{comment}",
      "method": "updateScoreComment",
      "httpMethod": "put",
      "tag": "Score",
      "description": "Update an existing comment",
      "parameters": [
        {
          "name": "comment",
          "schema": "string",
          "description": ""
        },
        {
          "name": "context",
          "schema": "object",
          "description": ""
        },
        {
          "name": "rawComment",
          "schema": "string",
          "description": ""
        },
        {
          "name": "revision",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Comment added on a sheet music"
        },
        {
          "statusCode": "402",
          "description": "An API Error response"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/comments/{comment}/resolved",
      "method": "markScoreCommentUnresolved",
      "httpMethod": "delete",
      "tag": "Score",
      "description": "Mark the comment as unresolved",
      "parameters": [
        {
          "name": "sharingKey",
          "schema": "string",
          "description": "This sharing key must be specified to access to a score or collection with a `privacy` mode set to `privateLink` and the current user is not a collaborator of the document.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/comments/{comment}/resolved",
      "method": "markScoreCommentResolved",
      "httpMethod": "put",
      "tag": "Score",
      "description": "Mark the comment as resolved",
      "parameters": [],
      "responses": [
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/fork",
      "method": "forkScore",
      "httpMethod": "post",
      "tag": "Score",
      "description": "Fork a score",
      "parameters": [
        {
          "name": "sharingKey",
          "schema": "string",
          "description": "This sharing key must be specified to access to a score or collection with a `privacy` mode set to `privateLink` and the current user is not a collaborator of the document.\n"
        },
        {
          "name": "collection",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The score and all its details"
        },
        {
          "statusCode": "402",
          "description": "An API Error response"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/revisions",
      "method": "getScoreRevisions",
      "httpMethod": "get",
      "tag": "Score",
      "description": "List the revisions",
      "parameters": [
        {
          "name": "sharingKey",
          "schema": "string",
          "description": "This sharing key must be specified to access to a score or collection with a `privacy` mode set to `privateLink` and the current user is not a collaborator of the document.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": "An API Error response"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/revisions",
      "method": "createScoreRevision",
      "httpMethod": "post",
      "tag": "Score",
      "description": "Create a new revision",
      "parameters": [
        {
          "name": "autosave",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "data",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dataEncoding",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A score revision metadata"
        },
        {
          "statusCode": "402",
          "description": "An API Error response"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/revisions/{revision}",
      "method": "getScoreRevision",
      "httpMethod": "get",
      "tag": "Score",
      "description": "Get a score revision",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "A score revision metadata"
        },
        {
          "statusCode": "402",
          "description": "An API Error response"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/revisions/{revision}/{format}",
      "method": "getScoreRevisionData",
      "httpMethod": "get",
      "tag": "Score",
      "description": "Get a score revision data",
      "parameters": [
        {
          "name": "sharingKey",
          "schema": "string",
          "description": "This sharing key must be specified to access to a score or collection with a `privacy` mode set to `privateLink` and the current user is not a collaborator of the document.\n"
        },
        {
          "name": "parts",
          "schema": "string",
          "description": "An optional a set of parts uuid to be exported. This parameter must be composed of parts uuids\nseparated by commas. For example \"59df645f-bb1c-f1b4-b573-d2afc4491f94,34ef645f-1aef-f3bc-1564-34cca4492b87\".\n"
        },
        {
          "name": "onlyCached",
          "schema": "boolean",
          "description": "Only return files already generated and cached in Flat's production\ncache. If the file is not availabe, a 404 will be returned\n"
        },
        {
          "name": "url",
          "schema": "boolean",
          "description": "Returns a json with the `url` in it instead of redirecting\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "402",
          "description": "An API Error response"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/submissions",
      "method": "getScoreSubmissions",
      "httpMethod": "get",
      "tag": "Score",
      "description": "List submissions related to the score",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/tracks",
      "method": "listScoreTracks",
      "httpMethod": "get",
      "tag": "Score",
      "description": "List the audio or video tracks linked to a score",
      "parameters": [
        {
          "name": "sharingKey",
          "schema": "string",
          "description": "This sharing key must be specified to access to a score or collection with a `privacy` mode set to `privateLink` and the current user is not a collaborator of the document.\n"
        },
        {
          "name": "assignment",
          "schema": "string",
          "description": "An assignment id with which all the tracks returned will be related to\n"
        },
        {
          "name": "listAutoTrack",
          "schema": "boolean",
          "description": "If true, and if available, return last automatically synchronized Flat's mp3 export as an additional track\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/tracks",
      "method": "addScoreTrack",
      "httpMethod": "post",
      "tag": "Score",
      "description": "Add a new video or audio track to the score",
      "parameters": [
        {
          "name": "default",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "synchronizationPoints",
          "schema": "array",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An audio track for a score"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/tracks/{track}",
      "method": "deleteScoreTrack",
      "httpMethod": "delete",
      "tag": "Score",
      "description": "Remove an audio or video track linked to the score",
      "parameters": [],
      "responses": [
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/tracks/{track}",
      "method": "getScoreTrack",
      "httpMethod": "get",
      "tag": "Score",
      "description": "Retrieve the details of an audio or video track linked to a score",
      "parameters": [
        {
          "name": "sharingKey",
          "schema": "string",
          "description": "This sharing key must be specified to access to a score or collection with a `privacy` mode set to `privateLink` and the current user is not a collaborator of the document.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An audio track for a score"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/tracks/{track}",
      "method": "updateScoreTrack",
      "httpMethod": "put",
      "tag": "Score",
      "description": "Update an audio or video track linked to a score",
      "parameters": [
        {
          "name": "default",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "synchronizationPoints",
          "schema": "array",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An audio track for a score"
        },
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/scores/{score}/untrash",
      "method": "untrashScore",
      "httpMethod": "post",
      "tag": "Score",
      "description": "Untrash a score",
      "parameters": [],
      "responses": [
        {
          "statusCode": "403",
          "description": "An API Error response"
        },
        {
          "statusCode": "404",
          "description": "An API Error response"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/users/{user}",
      "method": "getUser",
      "httpMethod": "get",
      "tag": "User",
      "description": "Get a public user profile",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Public User details"
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/users/{user}/likes",
      "method": "gerUserLikes",
      "httpMethod": "get",
      "tag": "User",
      "description": "List liked scores",
      "parameters": [
        {
          "name": "ids",
          "schema": "boolean",
          "description": "Return only the identifiers of the scores"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    },
    {
      "url": "/users/{user}/scores",
      "method": "getUserScores",
      "httpMethod": "get",
      "tag": "User",
      "description": "List user's scores",
      "parameters": [
        {
          "name": "parent",
          "schema": "string",
          "description": "Filter the score forked from the score id `parent`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "An API Error response"
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.flat.io/v2",
  "apiDescription": "The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:\n\n* Creating and importing new music scores using MusicXML, MIDI, Guitar Pro (GP3, GP4, GP5, GPX, GP), PowerTab, TuxGuitar and MuseScore files\n* Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI)\n* Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.\n\nThe Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body.\nThe [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/).\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).\n\nYou can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).\n\nGetting Started and learn more:\n\n* [API Overview and introduction](https://flat.io/developers/docs/api/)\n* [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html)\n* [SDKs](https://flat.io/developers/docs/api/sdks.html)\n* [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html)\n* [Changelog](https://flat.io/developers/docs/api/changelog.html)\n",
  "apiTitle": "Flat API",
  "endpoints": 51,
  "sdkMethods": 124,
  "schemas": 76,
  "parameters": 167,
  "contactUrl": "https://flat.io/developers/docs/api/",
  "contactEmail": "developers@flat.io",
  "difficultyScore": 203.75,
  "difficulty": "Hard"
}