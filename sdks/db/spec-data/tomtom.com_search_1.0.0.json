{
  "providerName": "tomtom.com",
  "openApiRaw": "https://developer.tomtom.com/system/files/swagger_models/search_api.yaml",
  "securitySchemes": {
    "api_key": {
      "in": "query",
      "name": "key",
      "type": "apiKey"
    }
  },
  "homepage": "tomtom.com",
  "serviceName": "search",
  "apiVersion": "1.0.0",
  "methods": [
    {
      "url": "/search/{versionNumber}/additionalData.{ext}",
      "method": "/search/{versionNumber}/additionalData.{ext}Get",
      "httpMethod": "get",
      "tag": "Additional Data",
      "typeScriptTag": "additionalData",
      "description": "Additional Data",
      "parameters": [
        {
          "name": "versionNumber",
          "schema": "integer",
          "required": true,
          "description": "Service version number. The current value is 2."
        },
        {
          "name": "ext",
          "schema": "string",
          "required": true,
          "description": "Expected response format."
        },
        {
          "name": "geometries",
          "schema": "string",
          "required": true,
          "description": "Comma separated list of geometry UUIDs, previously retrieved from an Search API request."
        },
        {
          "name": "geometriesZoom",
          "schema": "integer",
          "description": "Defines the precision of the geometries."
        }
      ],
      "responses": []
    },
    {
      "url": "/search/{versionNumber}/cS/{category}.{ext}",
      "method": "/search/{versionNumber}/cS/{category}.{ext}Get",
      "httpMethod": "get",
      "tag": "Search",
      "typeScriptTag": "search",
      "description": "Low Bandwith Category Search",
      "parameters": [
        {
          "name": "versionNumber",
          "schema": "integer",
          "required": true,
          "description": "Service version number. The current value is 2."
        },
        {
          "name": "category",
          "schema": "string",
          "required": true,
          "description": "Query string. Must be properly URL encoded."
        },
        {
          "name": "ext",
          "schema": "string",
          "required": true,
          "description": "Expected response format."
        },
        {
          "name": "typeahead",
          "schema": "boolean",
          "description": "If the \"typeahead\" flag is set, the query will be interpreted as a partial input and the search will enter <b>predictive</b> mode."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Maximum number of search results that will be returned."
        },
        {
          "name": "ofs",
          "schema": "integer",
          "description": "Starting offset of the returned results within the full result set."
        },
        {
          "name": "countrySet",
          "schema": "string",
          "description": "Comma separated string of country codes. This will limit the search to the specified countries."
        },
        {
          "name": "lat",
          "schema": "number",
          "description": "Latitude where results should be biased.\nNOTE: supplying a lat/lon without a radius will return search results biased to that point."
        },
        {
          "name": "lon",
          "schema": "number",
          "description": "Longitude where results should be biased\nNOTE: supplying a lat/lon without a radius will return search results biased to that point."
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "If radius <b>and</b> position are set, the results will be constrained to the defined area. The radius parameter is specified in meters."
        },
        {
          "name": "topLeft",
          "schema": "string",
          "description": "Top left position of the bounding box. This is specified as a comma separated string composed of lat., lon."
        },
        {
          "name": "btmRight",
          "schema": "string",
          "description": "Bottom right position of the bounding box. This is specified as a comma separated string composed of lat., lon."
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Language in which search results should be returned. Should be one of <a href=\"/search-api/search-api-documentation/supported-languages\">supported IETF language tags</a>, case insensitive."
        },
        {
          "name": "idxSet",
          "schema": "string",
          "description": "A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:\n  - <b>Addr</b> = Address range interpolation (when there is no PAD)\n  - <b>Geo</b> = Geographies\n  - <b>PAD</b> = Point Addresses\n  - <b>POI</b> = Points of interest\n  - <b>Str</b> = Streets\n  - <b>Xstr</b> = Cross Streets (intersections)"
        },
        {
          "name": "view",
          "schema": "string",
          "required": false,
          "description": "Geopolitical View."
        }
      ],
      "responses": []
    },
    {
      "url": "/search/{versionNumber}/categorySearch/{query}.{ext}",
      "method": "/search/{versionNumber}/categorySearch/{query}.{ext}Get",
      "httpMethod": "get",
      "tag": "Search",
      "typeScriptTag": "search",
      "description": "Category Search",
      "parameters": [
        {
          "name": "versionNumber",
          "schema": "integer",
          "required": true,
          "description": "Service version number. The current value is 2."
        },
        {
          "name": "query",
          "schema": "string",
          "required": true,
          "description": "Query string. Must be properly URL encoded."
        },
        {
          "name": "ext",
          "schema": "string",
          "required": true,
          "description": "Expected response format."
        },
        {
          "name": "typeahead",
          "schema": "boolean",
          "description": "If the \"typeahead\" flag is set, the query will be interpreted as a partial input and the search will enter <b>predictive</b> mode."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Maximum number of search results that will be returned."
        },
        {
          "name": "ofs",
          "schema": "integer",
          "description": "Starting offset of the returned results within the full result set."
        },
        {
          "name": "countrySet",
          "schema": "string",
          "description": "Comma separated string of country codes. This will limit the search to the specified countries."
        },
        {
          "name": "lat",
          "schema": "number",
          "description": "Latitude where results should be biased.\nNOTE: supplying a lat/lon without a radius will return search results biased to that point."
        },
        {
          "name": "lon",
          "schema": "number",
          "description": "Longitude where results should be biased\nNOTE: supplying a lat/lon without a radius will return search results biased to that point."
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "If radius <b>and</b> position are set, the results will be constrained to the defined area. The radius parameter is specified in meters."
        },
        {
          "name": "topLeft",
          "schema": "string",
          "description": "Top left position of the bounding box. This is specified as a comma separated string composed of lat., lon."
        },
        {
          "name": "btmRight",
          "schema": "string",
          "description": "Bottom right position of the bounding box. This is specified as a comma separated string composed of lat., lon."
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Language in which search results should be returned. Should be one of <a href=\"/search-api/search-api-documentation/supported-languages\">supported IETF language tags</a>, case insensitive."
        },
        {
          "name": "extendedPostalCodesFor",
          "schema": "string",
          "description": "Indexes for which extended postal codes should be included in the results. Available indexes are:\n  - <b>Addr</b> = Address ranges\n  - <b>Geo</b> = Geographies\n  - <b>PAD</b> = Point Addresses\n  - <b>POI</b> = Points of Interest\n  - <b>Str</b> = Streets\n  - <b>XStr</b> = Cross Streets (intersections)"
        },
        {
          "name": "view",
          "schema": "string",
          "required": false,
          "description": "Geopolitical View."
        }
      ],
      "responses": []
    },
    {
      "url": "/search/{versionNumber}/geocode/{query}.{ext}",
      "method": "/search/{versionNumber}/geocode/{query}.{ext}Get",
      "httpMethod": "get",
      "tag": "Geocoding",
      "typeScriptTag": "geocoding",
      "description": "Geocode",
      "parameters": [
        {
          "name": "versionNumber",
          "schema": "integer",
          "required": true,
          "description": "Service version number. The current value is 2."
        },
        {
          "name": "query",
          "schema": "string",
          "required": true,
          "description": "Query string. Must be properly URL encoded."
        },
        {
          "name": "ext",
          "schema": "string",
          "required": true,
          "description": "Expected response format."
        },
        {
          "name": "storeResult",
          "schema": "boolean",
          "description": "If the \"storeResult\" flag is set, the query will be interpreted as a stored geocode and will be billed according to the terms of use."
        },
        {
          "name": "typeahead",
          "schema": "boolean",
          "description": "If the \"typeahead\" flag is set, the query will be interpreted as a partial input and the search will enter <b>predictive</b> mode."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Maximum number of search results that will be returned."
        },
        {
          "name": "ofs",
          "schema": "integer",
          "description": "Starting offset of the returned results within the full result set."
        },
        {
          "name": "countrySet",
          "schema": "string",
          "description": "Comma separated string of country codes. This will limit the search to the specified countries."
        },
        {
          "name": "lat",
          "schema": "number",
          "description": "Latitude where results should be biased.\nNOTE: supplying a lat/lon without a radius will return search results biased to that point."
        },
        {
          "name": "lon",
          "schema": "number",
          "description": "Longitude where results should be biased\nNOTE: supplying a lat/lon without a radius will return search results biased to that point."
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "If radius <b>and</b> position are set, the results will be constrained to the defined area. The radius parameter is specified in meters."
        },
        {
          "name": "topLeft",
          "schema": "string",
          "description": "Top left position of the bounding box. This is specified as a comma separated string composed of lat., lon."
        },
        {
          "name": "btmRight",
          "schema": "string",
          "description": "Bottom right position of the bounding box. This is specified as a comma separated string composed of lat., lon."
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Language in which search results should be returned. Should be one of <a href=\"/search-api/search-api-documentation/supported-languages\">supported IETF language tags</a>, case insensitive."
        },
        {
          "name": "extendedPostalCodesFor",
          "schema": "string",
          "description": "Indexes for which extended postal codes should be included in the results. Available indexes are:\n  - <b>Addr</b> = Address ranges\n  - <b>Geo</b> = Geographies\n  - <b>PAD</b> = Point Addresses\n  - <b>POI</b> = Points of Interest\n  - <b>Str</b> = Streets\n  - <b>XStr</b> = Cross Streets (intersections)"
        },
        {
          "name": "view",
          "schema": "string",
          "required": false,
          "description": "Geopolitical View."
        }
      ],
      "responses": []
    },
    {
      "url": "/search/{versionNumber}/geometryFilter.{ext}",
      "method": "/search/{versionNumber}/geometryFilter.{ext}Get",
      "httpMethod": "get",
      "tag": "Filters",
      "typeScriptTag": "filters",
      "description": "Geometry Filter",
      "parameters": [
        {
          "name": "versionNumber",
          "schema": "integer",
          "required": true,
          "description": "Service version number. The current value is 2."
        },
        {
          "name": "ext",
          "schema": "string",
          "required": true,
          "description": "Expected response format."
        },
        {
          "name": "geometryList",
          "schema": "string",
          "required": true,
          "description": "List of geometries to filter by. Available types are CIRCLE (with the radius expressed in meters) and POLYGON."
        },
        {
          "name": "poiList",
          "schema": "string",
          "required": true,
          "description": "List of POIs to filter. The only required attribute of a POI is position, everything else is optional and will be echoed back when passed in."
        }
      ],
      "responses": []
    },
    {
      "url": "/search/{versionNumber}/geometryFilter.{ext}",
      "method": "/search/{versionNumber}/geometryFilter.{ext}Post",
      "httpMethod": "post",
      "tag": "Filters",
      "typeScriptTag": "filters",
      "description": "Geometry Filter",
      "parameters": [
        {
          "name": "versionNumber",
          "schema": "integer",
          "required": true,
          "description": "Service version number. The current value is 2."
        },
        {
          "name": "ext",
          "schema": "string",
          "required": true,
          "description": "Expected response format."
        },
        {
          "name": "geometryList",
          "schema": "array",
          "description": ""
        },
        {
          "name": "poiList",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/search/{versionNumber}/geometrySearch/{query}.{ext}",
      "method": "/search/{versionNumber}/geometrySearch/{query}.{ext}Get",
      "httpMethod": "get",
      "tag": "Search",
      "typeScriptTag": "search",
      "description": "Geometry Search",
      "parameters": [
        {
          "name": "versionNumber",
          "schema": "integer",
          "required": true,
          "description": "Service version number. The current value is 2."
        },
        {
          "name": "query",
          "schema": "string",
          "required": true,
          "description": "Query string. Must be properly URL encoded."
        },
        {
          "name": "ext",
          "schema": "string",
          "required": true,
          "description": "Expected response format."
        },
        {
          "name": "geometryList",
          "schema": "string",
          "description": "List of geometries to filter by. Available types are CIRCLE (with the radius expressed in meters) and POLYGON."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Maximum number of search results that will be returned."
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Language in which search results should be returned. Should be one of <a href=\"/search-api/search-api-documentation/supported-languages\">supported IETF language tags</a>, case insensitive."
        },
        {
          "name": "extendedPostalCodesFor",
          "schema": "string",
          "description": "Indexes for which extended postal codes should be included in the results. Available indexes are:\n  - <b>Addr</b> = Address ranges\n  - <b>Geo</b> = Geographies\n  - <b>PAD</b> = Point Addresses\n  - <b>POI</b> = Points of Interest\n  - <b>Str</b> = Streets\n  - <b>XStr</b> = Cross Streets (intersections)"
        },
        {
          "name": "idxSet",
          "schema": "string",
          "description": "A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:\n  - <b>Addr</b> = Address range interpolation (when there is no PAD)\n  - <b>Geo</b> = Geographies\n  - <b>PAD</b> = Point Addresses\n  - <b>POI</b> = Points of interest\n  - <b>Str</b> = Streets\n  - <b>Xstr</b> = Cross Streets (intersections)"
        }
      ],
      "responses": []
    },
    {
      "url": "/search/{versionNumber}/geometrySearch/{query}.{ext}",
      "method": "/search/{versionNumber}/geometrySearch/{query}.{ext}Post",
      "httpMethod": "post",
      "tag": "Search",
      "typeScriptTag": "search",
      "description": "Geometry Search",
      "parameters": [
        {
          "name": "versionNumber",
          "schema": "integer",
          "required": true,
          "description": "Service version number. The current value is 2."
        },
        {
          "name": "query",
          "schema": "string",
          "required": true,
          "description": "Query string. Must be properly URL encoded."
        },
        {
          "name": "ext",
          "schema": "string",
          "required": true,
          "description": "Expected response format."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Maximum number of search results that will be returned."
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Language in which search results should be returned. Should be one of <a href=\"/search-api/search-api-documentation/supported-languages\">supported IETF language tags</a>, case insensitive."
        },
        {
          "name": "extendedPostalCodesFor",
          "schema": "string",
          "description": "Indexes for which extended postal codes should be included in the results. Available indexes are:\n  - <b>Addr</b> = Address ranges\n  - <b>Geo</b> = Geographies\n  - <b>PAD</b> = Point Addresses\n  - <b>POI</b> = Points of Interest\n  - <b>Str</b> = Streets\n  - <b>XStr</b> = Cross Streets (intersections)"
        },
        {
          "name": "idxSet",
          "schema": "string",
          "description": "A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:\n  - <b>Addr</b> = Address range interpolation (when there is no PAD)\n  - <b>Geo</b> = Geographies\n  - <b>PAD</b> = Point Addresses\n  - <b>POI</b> = Points of interest\n  - <b>Str</b> = Streets\n  - <b>Xstr</b> = Cross Streets (intersections)"
        },
        {
          "name": "geometryList",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/search/{versionNumber}/nearbySearch/.{ext}",
      "method": "/search/{versionNumber}/nearbySearch/.{ext}Get",
      "httpMethod": "get",
      "tag": "Search",
      "typeScriptTag": "search",
      "description": "Nearby Search",
      "parameters": [
        {
          "name": "versionNumber",
          "schema": "integer",
          "required": true,
          "description": "Service version number. The current value is 2."
        },
        {
          "name": "ext",
          "schema": "string",
          "required": true,
          "description": "Expected response format."
        },
        {
          "name": "lat",
          "schema": "number",
          "required": true,
          "description": "Latitude where results should be biased.\nNOTE: supplying a lat/lon without a radius will return search results biased to that point."
        },
        {
          "name": "lon",
          "schema": "number",
          "required": true,
          "description": "Longitude where results should be biased\nNOTE: supplying a lat/lon without a radius will return search results biased to that point."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Maximum number of search results that will be returned."
        },
        {
          "name": "ofs",
          "schema": "integer",
          "description": "Starting offset of the returned results within the full result set."
        },
        {
          "name": "countrySet",
          "schema": "string",
          "description": "Comma separated string of country codes. This will limit the search to the specified countries."
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "If radius and position are set, the results will be constrained to the defined area. The radius parameter is specified in meters."
        },
        {
          "name": "topLeft",
          "schema": "string",
          "description": "Top left position of the bounding box. This is specified as a comma separated string composed of lat., lon."
        },
        {
          "name": "btmRight",
          "schema": "string",
          "description": "Bottom right position of the bounding box. This is specified as a comma separated string composed of lat., lon."
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Language in which search results should be returned. Should be one of <a href=\"/search-api/search-api-documentation/supported-languages\">supported IETF language tags</a>, case insensitive."
        },
        {
          "name": "extendedPostalCodesFor",
          "schema": "string",
          "description": "Indexes for which extended postal codes should be included in the results. Available indexes are:\n  - <b>Addr</b> = Address ranges\n  - <b>Geo</b> = Geographies\n  - <b>PAD</b> = Point Addresses\n  - <b>POI</b> = Points of Interest\n  - <b>Str</b> = Streets\n  - <b>XStr</b> = Cross Streets (intersections)"
        },
        {
          "name": "minFuzzyLevel",
          "schema": "integer",
          "description": "Minimum fuzziness level to be used."
        },
        {
          "name": "maxFuzzyLevel",
          "schema": "integer",
          "description": "Maximum fuzziness level to be used."
        },
        {
          "name": "idxSet",
          "schema": "string",
          "description": "A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:\n  - <b>Addr</b> = Address range interpolation (when there is no PAD)\n  - <b>Geo</b> = Geographies\n  - <b>PAD</b> = Point Addresses\n  - <b>POI</b> = Points of interest\n  - <b>Str</b> = Streets\n  - <b>Xstr</b> = Cross Streets (intersections)"
        },
        {
          "name": "view",
          "schema": "string",
          "required": false,
          "description": "Geopolitical View."
        }
      ],
      "responses": []
    },
    {
      "url": "/search/{versionNumber}/poiSearch/{query}.{ext}",
      "method": "/search/{versionNumber}/poiSearch/{query}.{ext}Get",
      "httpMethod": "get",
      "tag": "Search",
      "typeScriptTag": "search",
      "description": "Points of Interest Search",
      "parameters": [
        {
          "name": "versionNumber",
          "schema": "integer",
          "required": true,
          "description": "Service version number. The current value is 2."
        },
        {
          "name": "query",
          "schema": "string",
          "required": true,
          "description": "Query string. Must be properly URL encoded."
        },
        {
          "name": "ext",
          "schema": "string",
          "required": true,
          "description": "Expected response format."
        },
        {
          "name": "typeahead",
          "schema": "boolean",
          "description": "If the \"typeahead\" flag is set, the query will be interpreted as a partial input and the search will enter <b>predictive</b> mode."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Maximum number of search results that will be returned."
        },
        {
          "name": "ofs",
          "schema": "integer",
          "description": "Starting offset of the returned results within the full result set."
        },
        {
          "name": "countrySet",
          "schema": "string",
          "description": "Comma separated string of country codes. This will limit the search to the specified countries."
        },
        {
          "name": "lat",
          "schema": "number",
          "description": "Latitude where results should be biased.\nNOTE: supplying a lat/lon without a radius will return search results biased to that point."
        },
        {
          "name": "lon",
          "schema": "number",
          "description": "Longitude where results should be biased\nNOTE: supplying a lat/lon without a radius will return search results biased to that point."
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "If radius <b>and</b> position are set, the results will be constrained to the defined area. The radius parameter is specified in meters."
        },
        {
          "name": "topLeft",
          "schema": "string",
          "description": "Top left position of the bounding box. This is specified as a comma separated string composed of lat., lon."
        },
        {
          "name": "btmRight",
          "schema": "string",
          "description": "Bottom right position of the bounding box. This is specified as a comma separated string composed of lat., lon."
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Language in which search results should be returned. Should be one of <a href=\"/search-api/search-api-documentation/supported-languages\">supported IETF language tags</a>, case insensitive."
        },
        {
          "name": "extendedPostalCodesFor",
          "schema": "string",
          "description": "Indexes for which extended postal codes should be included in the results. Available indexes are:\n  - <b>Addr</b> = Address ranges\n  - <b>Geo</b> = Geographies\n  - <b>PAD</b> = Point Addresses\n  - <b>POI</b> = Points of Interest\n  - <b>Str</b> = Streets\n  - <b>XStr</b> = Cross Streets (intersections)"
        },
        {
          "name": "view",
          "schema": "string",
          "required": false,
          "description": "Geopolitical View."
        }
      ],
      "responses": []
    },
    {
      "url": "/search/{versionNumber}/reverseGeocode/crossStreet/{position}.{ext}",
      "method": "/search/{versionNumber}/reverseGeocode/crossStreet/{position}.{ext}Get",
      "httpMethod": "get",
      "tag": "Reverse Geocoding",
      "typeScriptTag": "reverseGeocoding",
      "description": "Cross Street lookup",
      "parameters": [
        {
          "name": "versionNumber",
          "schema": "integer",
          "required": true,
          "description": "Service version number. The current value is 2."
        },
        {
          "name": "position",
          "schema": "string",
          "required": true,
          "description": "This is specified as a comma separated string composed of lat., lon."
        },
        {
          "name": "ext",
          "schema": "string",
          "required": true,
          "description": "Expected response format."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Maximum number of cross-streets to return."
        },
        {
          "name": "spatialKeys",
          "schema": "boolean",
          "description": "If the \"spatialKeys\" flag is set, the response will also contain a proprietary geospatial keys for a specified location."
        },
        {
          "name": "heading",
          "schema": "number",
          "description": "The directional heading in degrees, usually similar to the course along a road segment. Entered in degrees, measured clockwise from north (so north is 0, east is 90, etc.)"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "The maximum distance in meters from the specified position for the reverse geocoder to consider."
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Language in which search results should be returned. Should be one of <a href=\"/search-api/search-api-documentation/supported-languages\">supported IETF language tags</a>, case insensitive."
        }
      ],
      "responses": []
    },
    {
      "url": "/search/{versionNumber}/reverseGeocode/{position}.{ext}",
      "method": "/search/{versionNumber}/reverseGeocode/{position}.{ext}Get",
      "httpMethod": "get",
      "tag": "Reverse Geocoding",
      "typeScriptTag": "reverseGeocoding",
      "description": "Reverse Geocode",
      "parameters": [
        {
          "name": "versionNumber",
          "schema": "integer",
          "required": true,
          "description": "Service version number. The current value is 2."
        },
        {
          "name": "position",
          "schema": "string",
          "required": true,
          "description": "This is specified as a comma separated string composed of lat., lon."
        },
        {
          "name": "ext",
          "schema": "string",
          "required": true,
          "description": "Expected response format."
        },
        {
          "name": "spatialKeys",
          "schema": "boolean",
          "description": "If the \"spatialKeys\" flag is set, the response will also contain a proprietary geospatial keys for a specified location."
        },
        {
          "name": "returnSpeedLimit",
          "schema": "boolean",
          "description": "To enable return of the posted speed limit (where available)."
        },
        {
          "name": "heading",
          "schema": "number",
          "description": "The directional heading in degrees, usually similar to the course along a road segment. Entered in degrees, measured clockwise from north (so north is 0, east is 90, etc.)"
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "The maximum distance in meters from the specified position for the reverse geocoder to consider."
        },
        {
          "name": "number",
          "schema": "string",
          "description": "If a number is sent in along with the request, the response may include the side of the street (Left/Right) and an offset position for that number."
        },
        {
          "name": "returnRoadUse",
          "schema": "boolean",
          "description": "Enables return of the road use array for reverse geocodes at street level."
        },
        {
          "name": "roadUse",
          "schema": "string",
          "description": "Restricts reverse geocodes to a certain type of road use. The road use array for reverse geocodes can be one or more of: [\"LimitedAccess\", \"Arterial\", \"Terminal\", \"Ramp\", \"Rotary\", \"LocalStreet\"]."
        },
        {
          "name": "callback",
          "schema": "string",
          "description": "Specifies the jsonp callback method."
        }
      ],
      "responses": []
    },
    {
      "url": "/search/{versionNumber}/routedFilter/{position}/{heading}.{ext}",
      "method": "/search/{versionNumber}/routedFilter/{position}/{heading}.{ext}Get",
      "httpMethod": "get",
      "tag": "Filters",
      "typeScriptTag": "filters",
      "description": "Routed Filter",
      "parameters": [
        {
          "name": "versionNumber",
          "schema": "integer",
          "required": true,
          "description": "Service version number. The current value is 2."
        },
        {
          "name": "position",
          "schema": "string",
          "required": true,
          "description": "This is specified as a comma separated string composed of lat., lon."
        },
        {
          "name": "heading",
          "schema": "number",
          "required": true,
          "description": "The directional heading in degrees, usually similar to the course along a road segment. Entered in degrees, measured clockwise from north (so north is 0, east is 90, etc.)"
        },
        {
          "name": "ext",
          "schema": "string",
          "required": true,
          "description": "Expected response format."
        },
        {
          "name": "poiList",
          "schema": "string",
          "required": true,
          "description": "List of POIs to filter. The only required attribute of a POI is position, everything else is optional and will be echoed back when passed in."
        },
        {
          "name": "routingTimeout",
          "schema": "integer",
          "description": "Only return results that arrive from routing engine within this time limit."
        }
      ],
      "responses": []
    },
    {
      "url": "/search/{versionNumber}/routedFilter/{position}/{heading}.{ext}",
      "method": "/search/{versionNumber}/routedFilter/{position}/{heading}.{ext}Post",
      "httpMethod": "post",
      "tag": "Filters",
      "typeScriptTag": "filters",
      "description": "Routed Filter",
      "parameters": [
        {
          "name": "versionNumber",
          "schema": "integer",
          "required": true,
          "description": "Service version number. The current value is 2."
        },
        {
          "name": "position",
          "schema": "string",
          "required": true,
          "description": "This is specified as a comma separated string composed of lat., lon."
        },
        {
          "name": "heading",
          "schema": "number",
          "required": true,
          "description": "The directional heading in degrees, usually similar to the course along a road segment. Entered in degrees, measured clockwise from north (so north is 0, east is 90, etc.)"
        },
        {
          "name": "ext",
          "schema": "string",
          "required": true,
          "description": "Expected response format."
        },
        {
          "name": "routingTimeout",
          "schema": "integer",
          "description": "Only return results that arrive from routing engine within this time limit."
        },
        {
          "name": "poiList",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/search/{versionNumber}/routedSearch/{query}/{position}/{heading}.{ext}",
      "method": "/search/{versionNumber}/routedSearch/{query}/{position}/{heading}.{ext}Get",
      "httpMethod": "get",
      "tag": "Search",
      "typeScriptTag": "search",
      "description": "Routed Search",
      "parameters": [
        {
          "name": "versionNumber",
          "schema": "integer",
          "required": true,
          "description": "Service version number. The current value is 2."
        },
        {
          "name": "query",
          "schema": "string",
          "required": true,
          "description": "Query string. Must be properly URL encoded."
        },
        {
          "name": "position",
          "schema": "string",
          "required": true,
          "description": "This is specified as a comma separated string composed of lat., lon."
        },
        {
          "name": "heading",
          "schema": "number",
          "required": true,
          "description": "The directional heading in degrees, usually similar to the course along a road segment. Entered in degrees, measured clockwise from north (so north is 0, east is 90, etc.)"
        },
        {
          "name": "ext",
          "schema": "string",
          "required": true,
          "description": "Expected response format."
        },
        {
          "name": "typeahead",
          "schema": "boolean",
          "description": "If the \"typeahead\" flag is set, the query will be interpreted as a partial input and the search will enter <b>predictive</b> mode."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Maximum number of search results that will be returned."
        },
        {
          "name": "multiplier",
          "schema": "integer",
          "description": "Multiplies the limit by N to gather more candidate POIs, which will then be sorted by drive distance, returning only the top candidates according to the limit."
        },
        {
          "name": "routingTimeout",
          "schema": "integer",
          "description": "Only return results that arrive from routing engine within this time limit."
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Language in which search results should be returned. Should be one of <a href=\"/search-api/search-api-documentation/supported-languages\">supported IETF language tags</a>, case insensitive."
        },
        {
          "name": "extendedPostalCodesFor",
          "schema": "string",
          "description": "Indexes for which extended postal codes should be included in the results. Available indexes are:\n  - <b>Addr</b> = Address ranges\n  - <b>Geo</b> = Geographies\n  - <b>PAD</b> = Point Addresses\n  - <b>POI</b> = Points of Interest\n  - <b>Str</b> = Streets\n  - <b>XStr</b> = Cross Streets (intersections)"
        },
        {
          "name": "idxSet",
          "schema": "string",
          "description": "A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:\n  - <b>Addr</b> = Address range interpolation (when there is no PAD)\n  - <b>Geo</b> = Geographies\n  - <b>PAD</b> = Point Addresses\n  - <b>POI</b> = Points of interest\n  - <b>Str</b> = Streets\n  - <b>Xstr</b> = Cross Streets (intersections)"
        }
      ],
      "responses": []
    },
    {
      "url": "/search/{versionNumber}/s/{query}.{ext}",
      "method": "/search/{versionNumber}/s/{query}.{ext}Get",
      "httpMethod": "get",
      "tag": "Search",
      "typeScriptTag": "search",
      "description": "Low bandwith Search",
      "parameters": [
        {
          "name": "versionNumber",
          "schema": "integer",
          "required": true,
          "description": "Service version number. The current value is 2."
        },
        {
          "name": "query",
          "schema": "string",
          "required": true,
          "description": "Query string. Must be properly URL encoded."
        },
        {
          "name": "ext",
          "schema": "string",
          "required": true,
          "description": "Expected response format."
        },
        {
          "name": "typeahead",
          "schema": "boolean",
          "description": "If the \"typeahead\" flag is set, the query will be interpreted as a partial input and the search will enter <b>predictive</b> mode."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Maximum number of search results that will be returned."
        },
        {
          "name": "ofs",
          "schema": "integer",
          "description": "Starting offset of the returned results within the full result set."
        },
        {
          "name": "countrySet",
          "schema": "string",
          "description": "Comma separated string of country codes. This will limit the search to the specified countries."
        },
        {
          "name": "lat",
          "schema": "number",
          "description": "Latitude where results should be biased.\nNOTE: supplying a lat/lon without a radius will return search results biased to that point."
        },
        {
          "name": "lon",
          "schema": "number",
          "description": "Longitude where results should be biased\nNOTE: supplying a lat/lon without a radius will return search results biased to that point."
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "If radius <b>and</b> position are set, the results will be constrained to the defined area. The radius parameter is specified in meters."
        },
        {
          "name": "topLeft",
          "schema": "string",
          "description": "Top left position of the bounding box. This is specified as a comma separated string composed of lat., lon."
        },
        {
          "name": "btmRight",
          "schema": "string",
          "description": "Bottom right position of the bounding box. This is specified as a comma separated string composed of lat., lon."
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Language in which search results should be returned. Should be one of <a href=\"/search-api/search-api-documentation/supported-languages\">supported IETF language tags</a>, case insensitive."
        },
        {
          "name": "idxSet",
          "schema": "string",
          "description": "A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:\n  - <b>Addr</b> = Address range interpolation (when there is no PAD)\n  - <b>Geo</b> = Geographies\n  - <b>PAD</b> = Point Addresses\n  - <b>POI</b> = Points of interest\n  - <b>Str</b> = Streets\n  - <b>Xstr</b> = Cross Streets (intersections)"
        },
        {
          "name": "view",
          "schema": "string",
          "required": false,
          "description": "Geopolitical View."
        }
      ],
      "responses": []
    },
    {
      "url": "/search/{versionNumber}/search/{query}.{ext}",
      "method": "/search/{versionNumber}/search/{query}.{ext}Get",
      "httpMethod": "get",
      "tag": "Search",
      "typeScriptTag": "search",
      "description": "Fuzzy Search",
      "parameters": [
        {
          "name": "versionNumber",
          "schema": "integer",
          "required": true,
          "description": "Service version number. The current value is 2."
        },
        {
          "name": "query",
          "schema": "string",
          "required": true,
          "description": "Query string. Must be properly URL encoded.\n\nTo perform a reverse geocode, the user can provide latitude and longitude coordinates directly in the query. More information can be found <a href=\"/search-api/search-api-documentation-search/fuzzy-search#AdditionalInfo\">here</a>."
        },
        {
          "name": "ext",
          "schema": "string",
          "required": true,
          "description": "Expected response format."
        },
        {
          "name": "typeahead",
          "schema": "boolean",
          "description": "If the \"typeahead\" flag is set, the query will be interpreted as a partial input and the search will enter <b>predictive</b> mode."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Maximum number of search results that will be returned."
        },
        {
          "name": "ofs",
          "schema": "integer",
          "description": "Starting offset of the returned results within the full result set."
        },
        {
          "name": "countrySet",
          "schema": "string",
          "description": "Comma separated string of country codes. This will limit the search to the specified countries."
        },
        {
          "name": "lat",
          "schema": "number",
          "description": "Latitude where results should be biased.\nNOTE: supplying a lat/lon without a radius will return search results biased to that point."
        },
        {
          "name": "lon",
          "schema": "number",
          "description": "Longitude where results should be biased\nNOTE: supplying a lat/lon without a radius will return search results biased to that point."
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "If radius <b>and</b> position are set, the results will be constrained to the defined area. The radius parameter is specified in meters."
        },
        {
          "name": "topLeft",
          "schema": "string",
          "description": "Top left position of the bounding box. This is specified as a comma separated string composed of lat., lon."
        },
        {
          "name": "btmRight",
          "schema": "string",
          "description": "Bottom right position of the bounding box. This is specified as a comma separated string composed of lat., lon."
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Language in which search results should be returned. Should be one of <a href=\"/search-api/search-api-documentation/supported-languages\">supported IETF language tags</a>, case insensitive."
        },
        {
          "name": "extendedPostalCodesFor",
          "schema": "string",
          "description": "Indexes for which extended postal codes should be included in the results. Available indexes are:\n  - <b>Addr</b> = Address ranges\n  - <b>Geo</b> = Geographies\n  - <b>PAD</b> = Point Addresses\n  - <b>POI</b> = Points of Interest\n  - <b>Str</b> = Streets\n  - <b>XStr</b> = Cross Streets (intersections)"
        },
        {
          "name": "minFuzzyLevel",
          "schema": "integer",
          "description": "Minimum fuzziness level to be used."
        },
        {
          "name": "maxFuzzyLevel",
          "schema": "integer",
          "description": "Maximum fuzziness level to be used."
        },
        {
          "name": "idxSet",
          "schema": "string",
          "description": "A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:\n  - <b>Addr</b> = Address range interpolation (when there is no PAD)\n  - <b>Geo</b> = Geographies\n  - <b>PAD</b> = Point Addresses\n  - <b>POI</b> = Points of interest\n  - <b>Str</b> = Streets\n  - <b>Xstr</b> = Cross Streets (intersections)"
        },
        {
          "name": "view",
          "schema": "string",
          "required": false,
          "description": "Geopolitical View."
        }
      ],
      "responses": []
    },
    {
      "url": "/search/{versionNumber}/searchAlongRoute/{query}.{ext}",
      "method": "/search/{versionNumber}/searchAlongRoute/{query}.{ext}Post",
      "httpMethod": "post",
      "tag": "Search",
      "typeScriptTag": "search",
      "description": "Along Route Search",
      "parameters": [
        {
          "name": "versionNumber",
          "schema": "integer",
          "required": true,
          "description": "Service version number. The current value is 2."
        },
        {
          "name": "query",
          "schema": "string",
          "required": true,
          "description": "Query string. Must be properly URL encoded."
        },
        {
          "name": "ext",
          "schema": "string",
          "required": true,
          "description": "Expected response format."
        },
        {
          "name": "maxDetourTime",
          "schema": "integer",
          "required": true,
          "description": "Maximum detour time"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Maximum number of search results that will be returned."
        },
        {
          "name": "route",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/search/{versionNumber}/structuredGeocode.{ext}",
      "method": "/search/{versionNumber}/structuredGeocode.{ext}Get",
      "httpMethod": "get",
      "tag": "Geocoding",
      "typeScriptTag": "geocoding",
      "description": "Structured Geocode",
      "parameters": [
        {
          "name": "versionNumber",
          "schema": "integer",
          "required": true,
          "description": "Service version number. The current value is 2."
        },
        {
          "name": "ext",
          "schema": "string",
          "required": true,
          "description": "Expected response format."
        },
        {
          "name": "countryCode",
          "schema": "string",
          "required": true,
          "description": "2 or 3 letter country code (e.g.: FR, ES)."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Maximum number of search results that will be returned."
        },
        {
          "name": "ofs",
          "schema": "integer",
          "description": "Starting offset of the returned results within the full result set."
        },
        {
          "name": "streetNumber",
          "schema": "string",
          "description": "The street number for the structured address."
        },
        {
          "name": "streetName",
          "schema": "string",
          "description": "The street name for the structured address."
        },
        {
          "name": "crossStreet",
          "schema": "string",
          "description": "The cross street name for the structured address."
        },
        {
          "name": "municipality",
          "schema": "string",
          "description": "The municipality (city/town) for the structured address."
        },
        {
          "name": "municipalitySubdivision",
          "schema": "string",
          "description": "The municipality subdivision (sub/super city) for the structured address."
        },
        {
          "name": "countryTertiarySubdivision",
          "schema": "string",
          "description": "The named area for the structured address."
        },
        {
          "name": "countrySecondarySubdivision",
          "schema": "string",
          "description": "The county for the structured address."
        },
        {
          "name": "countrySubdivision",
          "schema": "string",
          "description": "The state or province for the structured address."
        },
        {
          "name": "postalCode",
          "schema": "string",
          "description": "The zip code or postal code for the structured address."
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Language in which search results should be returned. Should be one of <a href=\"/search-api/search-api-documentation/supported-languages\">supported IETF language tags</a>, case insensitive."
        },
        {
          "name": "extendedPostalCodesFor",
          "schema": "string",
          "description": "Indexes for which extended postal codes should be included in the results. Available indexes are:\n  - <b>Addr</b> = Address ranges\n  - <b>Geo</b> = Geographies\n  - <b>PAD</b> = Point Addresses\n  - <b>POI</b> = Points of Interest\n  - <b>Str</b> = Streets\n  - <b>XStr</b> = Cross Streets (intersections)"
        }
      ],
      "responses": []
    }
  ],
  "apiBaseUrl": "https://api.tomtom.com",
  "apiDescription": "Search API is a RESTful API that allows developers to run a single line fuzzy search for addresses and POIs. Search API returns the latitude/longitude of a specific address, cross street, geographic feature, or point of interest (POI).",
  "apiTitle": "Search",
  "endpoints": 16,
  "sdkMethods": 19,
  "schemas": 0,
  "parameters": 203,
  "contactUrl": "https://developer.tomtom.com/contact-us",
  "difficultyScore": 69.75,
  "difficulty": "Easy"
}