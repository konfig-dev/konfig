{
  "providerName": "paylocity.com",
  "openApiRaw": "https://api.paylocity.com/api/v2/openapi",
  "homepage": "paylocity.com",
  "apiVersion": "2",
  "methods": [
    {
      "url": "/v2/companies/{companyId}/codes/{codeResource}",
      "method": "getAllCompanyCodesAndDescriptionsByResource",
      "httpMethod": "get",
      "tag": "Company Codes",
      "description": "Get All Company Codes",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "codeResource",
          "schema": "string",
          "required": true,
          "description": "Type of Company Code. Common values costcenter1, costcenter2, costcenter3, deductions, earnings, taxes, paygrade, positions."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/customfields/{category}",
      "method": "getAllCustomFieldsByCategory",
      "httpMethod": "get",
      "tag": "Custom Fields",
      "description": "Get All Custom Fields",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "category",
          "schema": "string",
          "required": true,
          "description": "Custom Fields Category"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees",
      "method": "addEmployee",
      "httpMethod": "post",
      "tag": "Employee",
      "description": "Add new employee",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "additionalDirectDeposit",
          "schema": "array",
          "description": ""
        },
        {
          "name": "additionalRate",
          "schema": "array",
          "description": ""
        },
        {
          "name": "benefitSetup",
          "schema": "object",
          "description": ""
        },
        {
          "name": "birthDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "coEmpCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "companyFEIN",
          "schema": "string",
          "description": ""
        },
        {
          "name": "companyName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "description": ""
        },
        {
          "name": "customBooleanFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customDateFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customDropDownFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customNumberFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customTextFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "departmentPosition",
          "schema": "object",
          "description": ""
        },
        {
          "name": "disabilityDescription",
          "schema": "string",
          "description": ""
        },
        {
          "name": "emergencyContacts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "employeeId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ethnicity",
          "schema": "string",
          "description": ""
        },
        {
          "name": "federalTax",
          "schema": "object",
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "description": ""
        },
        {
          "name": "homeAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "isHighlyCompensated",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "isSmoker",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "localTax",
          "schema": "array",
          "description": ""
        },
        {
          "name": "mainDirectDeposit",
          "schema": "object",
          "description": ""
        },
        {
          "name": "maritalStatus",
          "schema": "string",
          "description": ""
        },
        {
          "name": "middleName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "nonPrimaryStateTax",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ownerPercent",
          "schema": "number",
          "description": ""
        },
        {
          "name": "preferredName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "primaryPayRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "primaryStateTax",
          "schema": "object",
          "description": ""
        },
        {
          "name": "priorLastName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "salutation",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ssn",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "object",
          "description": ""
        },
        {
          "name": "suffix",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taxSetup",
          "schema": "object",
          "description": ""
        },
        {
          "name": "veteranDescription",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webTime",
          "schema": "object",
          "description": ""
        },
        {
          "name": "workAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "workEligibility",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The EmployeeId Response Model"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/",
      "method": "getAllEmployees",
      "httpMethod": "get",
      "tag": "Employee",
      "description": "Get all employees",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "pagesize",
          "schema": "integer",
          "required": false,
          "description": "Number of records per page. Default value is 25."
        },
        {
          "name": "pagenumber",
          "schema": "integer",
          "required": false,
          "description": "Page number to retrieve; page numbers are 0-based (so to get the first page of results, pass pagenumber=0). Default value is 0."
        },
        {
          "name": "includetotalcount",
          "schema": "boolean",
          "required": false,
          "description": "Whether to include the total record count in the header's X-Pcty-Total-Count property. Default value is true."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}",
      "method": "getEmployee",
      "httpMethod": "get",
      "tag": "Employee",
      "description": "Get employee",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The employee model"
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}",
      "method": "updateEmployee",
      "httpMethod": "patch",
      "tag": "Employee",
      "description": "Update employee",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        },
        {
          "name": "additionalDirectDeposit",
          "schema": "array",
          "description": ""
        },
        {
          "name": "additionalRate",
          "schema": "array",
          "description": ""
        },
        {
          "name": "benefitSetup",
          "schema": "object",
          "description": ""
        },
        {
          "name": "birthDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "coEmpCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "companyFEIN",
          "schema": "string",
          "description": ""
        },
        {
          "name": "companyName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "description": ""
        },
        {
          "name": "customBooleanFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customDateFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customDropDownFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customNumberFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customTextFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "departmentPosition",
          "schema": "object",
          "description": ""
        },
        {
          "name": "disabilityDescription",
          "schema": "string",
          "description": ""
        },
        {
          "name": "emergencyContacts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "employeeId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ethnicity",
          "schema": "string",
          "description": ""
        },
        {
          "name": "federalTax",
          "schema": "object",
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "description": ""
        },
        {
          "name": "homeAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "isHighlyCompensated",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "isSmoker",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "localTax",
          "schema": "array",
          "description": ""
        },
        {
          "name": "mainDirectDeposit",
          "schema": "object",
          "description": ""
        },
        {
          "name": "maritalStatus",
          "schema": "string",
          "description": ""
        },
        {
          "name": "middleName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "nonPrimaryStateTax",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ownerPercent",
          "schema": "number",
          "description": ""
        },
        {
          "name": "preferredName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "primaryPayRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "primaryStateTax",
          "schema": "object",
          "description": ""
        },
        {
          "name": "priorLastName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "salutation",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ssn",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "object",
          "description": ""
        },
        {
          "name": "suffix",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taxSetup",
          "schema": "object",
          "description": ""
        },
        {
          "name": "veteranDescription",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webTime",
          "schema": "object",
          "description": ""
        },
        {
          "name": "workAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "workEligibility",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}/additionalRates",
      "method": "addOrUpdateAdditionalRates",
      "httpMethod": "put",
      "tag": "Additional Rates",
      "description": "Add/update additional rates",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        },
        {
          "name": "changeReason",
          "schema": "string",
          "description": ""
        },
        {
          "name": "costCenter1",
          "schema": "string",
          "description": ""
        },
        {
          "name": "costCenter2",
          "schema": "string",
          "description": ""
        },
        {
          "name": "costCenter3",
          "schema": "string",
          "description": ""
        },
        {
          "name": "effectiveDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "endCheckDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "job",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rate",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rateCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rateNotes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ratePer",
          "schema": "string",
          "description": ""
        },
        {
          "name": "shift",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}/benefitSetup",
      "method": "updateOrAddEmployeeBenefitSetup",
      "httpMethod": "put",
      "tag": "Employee Benefit Setup",
      "description": "Add/update employee's benefit setup",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        },
        {
          "name": "benefitClass",
          "schema": "string",
          "description": ""
        },
        {
          "name": "benefitClassEffectiveDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "benefitSalary",
          "schema": "number",
          "description": ""
        },
        {
          "name": "benefitSalaryEffectiveDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "doNotApplyAdministrativePeriod",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "isMeasureAcaEligibility",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}/directDeposit",
      "method": "getAllDirectDeposit",
      "httpMethod": "get",
      "tag": "Direct Deposit",
      "description": "Get All Direct Deposit",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}/earnings",
      "method": "getAllEarnings",
      "httpMethod": "get",
      "tag": "Earnings",
      "description": "Get All Earnings",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}/earnings",
      "method": "addOrUpdateAnEmployeeEarning",
      "httpMethod": "put",
      "tag": "Earnings",
      "description": "Add/Update Earning",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        },
        {
          "name": "agency",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "amount",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "annualMaximum",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "calculationCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "costCenter1",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "costCenter2",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "costCenter3",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "earningCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "effectiveDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "endDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "frequency",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "goal",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "hoursOrUnits",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "isSelfInsured",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "jobCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "miscellaneousInfo",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "paidTowardsGoal",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "payPeriodMaximum",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "payPeriodMinimum",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "rate",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "rateCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "startDate",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}",
      "method": "getEarningsByEarningCode",
      "httpMethod": "get",
      "tag": "Earnings",
      "description": "Get Earnings by Earning Code",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        },
        {
          "name": "earningCode",
          "schema": "string",
          "required": true,
          "description": "Earning Code"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}/{startDate}",
      "method": "deleteEarningByEarningCodeAndStartDate",
      "httpMethod": "delete",
      "tag": "Earnings",
      "description": "Delete Earning by Earning Code and Start Date",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        },
        {
          "name": "earningCode",
          "schema": "string",
          "required": true,
          "description": "Earning Code"
        },
        {
          "name": "startDate",
          "schema": "string",
          "required": true,
          "description": "Start Date"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}/{startDate}",
      "method": "getEarningByEarningCodeAndStartDate",
      "httpMethod": "get",
      "tag": "Earnings",
      "description": "Get Earning by Earning Code and Start Date",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        },
        {
          "name": "earningCode",
          "schema": "string",
          "required": true,
          "description": "Earning Code"
        },
        {
          "name": "startDate",
          "schema": "string",
          "required": true,
          "description": "Start Date"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The employee earning model"
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}/emergencyContacts",
      "method": "addOrUpdateEmergencyContacts",
      "httpMethod": "put",
      "tag": "Emergency Contacts",
      "description": "Add/update emergency contacts",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        },
        {
          "name": "address1",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "address2",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "city",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "country",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "county",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "homePhone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mobilePhone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pager",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "primaryPhone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "priority",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "relationship",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "state",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "syncEmployeeInfo",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "workExtension",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "workPhone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "zip",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}/localTaxes",
      "method": "getAllLocalTaxes",
      "httpMethod": "get",
      "tag": "Local Taxes",
      "description": "Get all local taxes",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}/localTaxes",
      "method": "addLocalTax",
      "httpMethod": "post",
      "tag": "Local Taxes",
      "description": "Add new local tax",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        },
        {
          "name": "exemptions",
          "schema": "number",
          "description": ""
        },
        {
          "name": "exemptions2",
          "schema": "number",
          "description": ""
        },
        {
          "name": "filingStatus",
          "schema": "string",
          "description": ""
        },
        {
          "name": "residentPSD",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taxCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "workPSD",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}/localTaxes/{taxCode}",
      "method": "deleteLocalTaxByTaxCode",
      "httpMethod": "delete",
      "tag": "Local Taxes",
      "description": "Delete local tax by tax code",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        },
        {
          "name": "taxCode",
          "schema": "string",
          "required": true,
          "description": "Tax Code"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}/localTaxes/{taxCode}",
      "method": "getLocalTaxByTaxCode",
      "httpMethod": "get",
      "tag": "Local Taxes",
      "description": "Get local taxes by tax code",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        },
        {
          "name": "taxCode",
          "schema": "string",
          "required": true,
          "description": "Tax Code"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}/nonprimaryStateTax",
      "method": "addOrUpdateNonPrimaryStateTax",
      "httpMethod": "put",
      "tag": "Non-Primary State Tax",
      "description": "Add/update non-primary state tax",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        },
        {
          "name": "amount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "deductionsAmount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "dependentsAmount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "exemptions",
          "schema": "number",
          "description": ""
        },
        {
          "name": "exemptions2",
          "schema": "number",
          "description": ""
        },
        {
          "name": "filingStatus",
          "schema": "string",
          "description": ""
        },
        {
          "name": "higherRate",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "otherIncomeAmount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "percentage",
          "schema": "number",
          "description": ""
        },
        {
          "name": "reciprocityCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "specialCheckCalc",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taxCalculationCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taxCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "w4FormYear",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}/paystatement/details/{year}",
      "method": "getsEmployeePayStatementDetailDataBasedOnTheSpecifiedYear",
      "httpMethod": "get",
      "tag": "PayStatements",
      "description": "Get employee pay statement details data for the specified year.",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        },
        {
          "name": "year",
          "schema": "string",
          "required": true,
          "description": "The year for which to retrieve pay statement data"
        },
        {
          "name": "pagesize",
          "schema": "integer",
          "required": false,
          "description": "Number of records per page. Default value is 25."
        },
        {
          "name": "pagenumber",
          "schema": "integer",
          "required": false,
          "description": "Page number to retrieve; page numbers are 0-based (so to get the first page of results, pass pagenumber=0). Default value is 0."
        },
        {
          "name": "includetotalcount",
          "schema": "boolean",
          "required": false,
          "description": "Whether to include the total record count in the header's X-Pcty-Total-Count property. Default value is true."
        },
        {
          "name": "codegroup",
          "schema": "string",
          "required": false,
          "description": "Retrieve pay statement details related to specific deduction, earning or tax types. Common values include 401k, Memo, Reg, OT, Cash Tips, FED and SITW."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}/paystatement/details/{year}/{checkDate}",
      "method": "getsEmployeePayStatementDetailDataBasedOnTheSpecifiedYearAndCheckDate",
      "httpMethod": "get",
      "tag": "PayStatements",
      "description": "Get employee pay statement details data for the specified year and check date.",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        },
        {
          "name": "year",
          "schema": "string",
          "required": true,
          "description": "The year for which to retrieve pay statement data"
        },
        {
          "name": "checkDate",
          "schema": "string",
          "required": true,
          "description": "The check date for which to retrieve pay statement data"
        },
        {
          "name": "pagesize",
          "schema": "integer",
          "required": false,
          "description": "Number of records per page. Default value is 25."
        },
        {
          "name": "pagenumber",
          "schema": "integer",
          "required": false,
          "description": "Page number to retrieve; page numbers are 0-based (so to get the first page of results, pass pagenumber=0). Default value is 0."
        },
        {
          "name": "includetotalcount",
          "schema": "boolean",
          "required": false,
          "description": "Whether to include the total record count in the header's X-Pcty-Total-Count property. Default value is true."
        },
        {
          "name": "codegroup",
          "schema": "string",
          "required": false,
          "description": "Retrieve pay statement details related to specific deduction, earning or tax types. Common values include 401k, Memo, Reg, OT, Cash Tips, FED and SITW."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}/paystatement/summary/{year}",
      "method": "getsEmployeePayStatementSummaryDataBasedOnTheSpecifiedYear",
      "httpMethod": "get",
      "tag": "PayStatements",
      "description": "Get employee pay statement summary data for the specified year.",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        },
        {
          "name": "year",
          "schema": "string",
          "required": true,
          "description": "The year for which to retrieve pay statement data"
        },
        {
          "name": "pagesize",
          "schema": "integer",
          "required": false,
          "description": "Number of records per page. Default value is 25."
        },
        {
          "name": "pagenumber",
          "schema": "integer",
          "required": false,
          "description": "Page number to retrieve; page numbers are 0-based (so to get the first page of results, pass pagenumber=0). Default value is 0."
        },
        {
          "name": "includetotalcount",
          "schema": "boolean",
          "required": false,
          "description": "Whether to include the total record count in the header's X-Pcty-Total-Count property. Default value is true."
        },
        {
          "name": "codegroup",
          "schema": "string",
          "required": false,
          "description": "Retrieve pay statement details related to specific deduction, earning or tax types. Common values include 401k, Memo, Reg, OT, Cash Tips, FED and SITW."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}/paystatement/summary/{year}/{checkDate}",
      "method": "getsEmployeePayStatementSummaryDataBasedOnTheSpecifiedYearAndCheckDate",
      "httpMethod": "get",
      "tag": "PayStatements",
      "description": "Get employee pay statement summary data for the specified year and check date.",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        },
        {
          "name": "year",
          "schema": "string",
          "required": true,
          "description": "The year for which to retrieve pay statement data"
        },
        {
          "name": "checkDate",
          "schema": "string",
          "required": true,
          "description": "The check date for which to retrieve pay statement data"
        },
        {
          "name": "pagesize",
          "schema": "integer",
          "required": false,
          "description": "Number of records per page. Default value is 25."
        },
        {
          "name": "pagenumber",
          "schema": "integer",
          "required": false,
          "description": "Page number to retrieve; page numbers are 0-based (so to get the first page of results, pass pagenumber=0). Default value is 0."
        },
        {
          "name": "includetotalcount",
          "schema": "boolean",
          "required": false,
          "description": "Whether to include the total record count in the header's X-Pcty-Total-Count property. Default value is true."
        },
        {
          "name": "codegroup",
          "schema": "string",
          "required": false,
          "description": "Retrieve pay statement details related to specific deduction, earning or tax types. Common values include 401k, Memo, Reg, OT, Cash Tips, FED and SITW."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}/primaryStateTax",
      "method": "addOrUpdatePrimaryStateTax",
      "httpMethod": "put",
      "tag": "Primary State Tax",
      "description": "Add/update primary state tax",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        },
        {
          "name": "amount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "deductionsAmount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "dependentsAmount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "exemptions",
          "schema": "number",
          "description": ""
        },
        {
          "name": "exemptions2",
          "schema": "number",
          "description": ""
        },
        {
          "name": "filingStatus",
          "schema": "string",
          "description": ""
        },
        {
          "name": "higherRate",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "otherIncomeAmount",
          "schema": "number",
          "description": ""
        },
        {
          "name": "percentage",
          "schema": "number",
          "description": ""
        },
        {
          "name": "specialCheckCalc",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taxCalculationCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taxCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "w4FormYear",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}/sensitivedata",
      "method": "getSensitiveData",
      "httpMethod": "get",
      "tag": "Sensitive Data",
      "description": "Get sensitive data",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/employees/{employeeId}/sensitivedata",
      "method": "addOrUpdateSensitiveData",
      "httpMethod": "put",
      "tag": "Sensitive Data",
      "description": "Add/update sensitive data",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "employeeId",
          "schema": "string",
          "required": true,
          "description": "Employee Id"
        },
        {
          "name": "disability",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ethnicity",
          "schema": "object",
          "description": ""
        },
        {
          "name": "gender",
          "schema": "object",
          "description": ""
        },
        {
          "name": "veteran",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/companies/{companyId}/openapi",
      "method": "getCompanySpecificOpenApiDocumentation",
      "httpMethod": "get",
      "tag": "Company-Specific Schema",
      "description": "Get Company-Specific Open API Documentation",
      "parameters": [
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Bearer + JWT"
        },
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/credentials/secrets",
      "method": "addClientSecret",
      "httpMethod": "post",
      "tag": "Client Credentials",
      "description": "Obtain new client secret.",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/weblinkstaging/companies/{companyId}/employees/newemployees",
      "method": "addNewEmployeeToWebLink",
      "httpMethod": "post",
      "tag": "Employee Staging",
      "description": "Add new employee to Web Link",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Company Id"
        },
        {
          "name": "additionalDirectDeposit",
          "schema": "array",
          "description": ""
        },
        {
          "name": "benefitSetup",
          "schema": "array",
          "description": ""
        },
        {
          "name": "birthDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "customBooleanFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customDateFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customDropDownFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customNumberFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "customTextFields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "departmentPosition",
          "schema": "array",
          "description": ""
        },
        {
          "name": "disabilityDescription",
          "schema": "string",
          "description": ""
        },
        {
          "name": "employeeId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ethnicity",
          "schema": "string",
          "description": ""
        },
        {
          "name": "federalTax",
          "schema": "array",
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "fitwExemptReason",
          "schema": "string",
          "description": ""
        },
        {
          "name": "futaExemptReason",
          "schema": "string",
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "description": ""
        },
        {
          "name": "homeAddress",
          "schema": "array",
          "description": ""
        },
        {
          "name": "isEmployee943",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "isSmoker",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "localTax",
          "schema": "array",
          "description": ""
        },
        {
          "name": "mainDirectDeposit",
          "schema": "array",
          "description": ""
        },
        {
          "name": "maritalStatus",
          "schema": "string",
          "description": ""
        },
        {
          "name": "medExemptReason",
          "schema": "string",
          "description": ""
        },
        {
          "name": "middleName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "nonPrimaryStateTax",
          "schema": "array",
          "description": ""
        },
        {
          "name": "preferredName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "primaryPayRate",
          "schema": "array",
          "description": ""
        },
        {
          "name": "primaryStateTax",
          "schema": "array",
          "description": ""
        },
        {
          "name": "priorLastName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "salutation",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sitwExemptReason",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ssExemptReason",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ssn",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "array",
          "description": ""
        },
        {
          "name": "suffix",
          "schema": "string",
          "description": ""
        },
        {
          "name": "suiExemptReason",
          "schema": "string",
          "description": ""
        },
        {
          "name": "suiState",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taxDistributionCode1099R",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taxForm",
          "schema": "string",
          "description": ""
        },
        {
          "name": "veteranDescription",
          "schema": "string",
          "description": ""
        },
        {
          "name": "webTime",
          "schema": "object",
          "description": ""
        },
        {
          "name": "workAddress",
          "schema": "array",
          "description": ""
        },
        {
          "name": "workEligibility",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.paylocity.com/api",
  "apiDescription": "For general questions and support of the API, contact: webservices@paylocity.com\r\n# Overview\r\n\r\nPaylocity Web Services API is an externally facing RESTful Internet protocol. The Paylocity API uses HTTP verbs and a RESTful endpoint structure. OAuth 2.0 is used as the API Authorization framework. Request and response payloads are formatted as JSON.\r\nPaylocity supports v1 and v2 versions of its API endpoints. v1, while supported, won't be enhanced with additional functionality. For direct link to v1 documentation, please click [here](https://docs.paylocity.com/weblink/guides/Paylocity_Web_Services_API/v1/Paylocity_Web_Services_API.htm). For additional resources regarding v1/v2 differences and conversion path, please contact webservices@paylocity.com.\r\n\r\n##### Setup\r\n\r\nPaylocity will provide the secure client credentials and set up the scope (type of requests and allowed company numbers). You will receive the unique client id, secret, and Paylocity public key for the data encryption. The secret will expire in 365 days. \r\n* Paylocity will send you an e-mail 10 days prior to the expiration date for the current secret. If not renewed, the second e-mail notification will be sent 5 days prior to secret's expiration. Each email will contain the code necessary to renew the client secret. \r\n* You can obtain the new secret by calling API endpoint using your current not yet expired credentials and the code that was sent with the notification email. For details on API endpoint, please see Client Credentials section. \r\n* Both the current secret value and the new secret value will be recognized during the transition period. After the current secret expires, you must use the new secret. \r\n* If you were unable to renew the secret via API endpoint, you can still contact Service and they will email you new secret via secure email.\r\n\r\n\r\nWhen validating the request, Paylocity API will honor the defaults and required fields set up for the company default New Hire Template as defined in Web Pay.\r\n\r\n\r\n# Authorization\r\n\r\nPaylocity Web Services API uses OAuth2.0 Authentication with JSON Message Format.\r\n\r\n\r\nAll requests of the Paylocity Web Services API require a bearer token which can be obtained by authenticating the client with the Paylocity Web Services API via OAuth 2.0.\r\n\r\n\r\nThe client must request a bearer token from the authorization endpoint:\r\n\r\n\r\nauth-server for production: https://api.paylocity.com/IdentityServer/connect/token\r\n\r\n\r\nauth-server for testing: https://apisandbox.paylocity.com/IdentityServer/connect/token\r\n\r\nPaylocity reserves the right to impose rate limits on the number of calls made to our APIs. Changes to API features/functionality may be made at anytime with or without prior notice.\r\n\r\n##### Authorization Header\r\n\r\nThe request is expected to be in the form of a basic authentication request, with the \"Authorization\" header containing the client-id and client-secret. This means the standard base-64 encoded user:password, prefixed with \"Basic\" as the value for the Authorization header, where user is the client-id and password is the client-secret.\r\n\r\n##### Content-Type Header\r\n\r\nThe \"Content-Type\" header is required to be \"application/x-www-form-urlencoded\".\r\n\r\n##### Additional Values\r\n\r\nThe request must post the following form encoded values within the request body:\r\n\r\n    grant_type = client_credentials\r\n    scope = WebLinkAPI\r\n\r\n##### Responses\r\n\r\nSuccess will return HTTP 200 OK with JSON content:\r\n\r\n    {\r\n      \"access_token\": \"xxx\",\r\n      \"expires_in\": 3600,\r\n      \"token_type\": \"Bearer\"\r\n    }\r\n\r\n# Encryption\r\n\r\nPaylocity uses a combination of RSA and AES cryptography. As part of the setup, each client is issued a public RSA key.\r\n\r\nPaylocity recommends the encryption of the incoming requests as additional protection of the sensitive data. Clients can opt-out of the encryption during the initial setup process. Opt-out will allow Paylocity to process unencrypted requests.\r\n\r\nThe Paylocity Public Key has the following properties:\r\n\r\n* 2048 bit key size\r\n\r\n* PKCS1 key format\r\n\r\n* PEM encoding\r\n\r\n##### Properties\r\n\r\n* key (base 64 encoded): The AES symmetric key encrypted with the Paylocity Public Key. It is the key used to encrypt the content. Paylocity will decrypt the AES key using RSA decryption and use it to decrypt the content.\r\n\r\n* iv (base 64 encoded): The AES IV (Initialization Vector) used when encrypting the content.\r\n\r\n* content (base 64 encoded): The AES encrypted request. The key and iv provided in the secureContent request are used by Paylocity for decryption of the content.\r\n\r\nWe suggest using the following for the AES:\r\n\r\n* CBC cipher mode\r\n\r\n* PKCS7 padding\r\n\r\n* 128 bit block size\r\n\r\n* 256 bit key size\r\n\r\n##### Encryption Flow\r\n\r\n* Generate the unencrypted JSON payload to POST/PUT\r\n* Encrypt this JSON payload using your _own key and IV_ (NOT with the Paylocity public key)\r\n* RSA encrypt the _key_ you used in step 2 with the Paylocity Public Key, then, base64 encode the result\r\n* Base64 encode the IV used to encrypt the JSON payload in step 2\r\n* Put together a \"securecontent\" JSON object:\r\n \r\n{\r\n  'secureContent' : {\r\n    'key' : -- RSA-encrypted & base64 encoded key from step 3,\r\n    'iv' : -- base64 encoded iv from step 4\r\n    'content' -- content encrypted with your own key from step 2, base64 encoded\r\n  }\r\n}\r\n\r\n##### Sample Example\r\n\r\n    {\r\n      \"secureContent\": {\r\n        \"key\": \"eS3aw6H/qzHMJ00gSi6gQ3xa08DPMazk8BFY96Pd99ODA==\",\r\n        \"iv\": \"NLyXMGq9svw0XO5aI9BzWw==\",\r\n        \"content\": \"gAEOiQltO1w+LzGUoIK8FiYbU42hug94EasSl7N+Q1w=\"\r\n      }\r\n    }\r\n\r\n##### Sample C# Code\r\n\r\n    using Newtonsoft.Json;\r\n    using System;\r\n    using System.IO;\r\n    using System.Security.Cryptography;\r\n    using System.Text;\r\n\r\n    public class SecuredContent\r\n    {\r\n      [JsonProperty(\"key\")]\r\n      public string Key { get; set; }\r\n\r\n      [JsonProperty(\"iv\")]\r\n      public string Iv { get; set; }\r\n\r\n      [JsonProperty(\"content\")]\r\n      public string Content { get; set; }\r\n\r\n    }\r\n\r\n    public class EndUserSecureRequestExample\r\n    {\r\n      public string CreateSecuredRequest(FileInfo paylocityPublicKey, string unsecuredJsonRequest)\r\n      {\r\n        string publicKeyXml = File.ReadAllText(paylocityPublicKey.FullName, Encoding.UTF8);\r\n\r\n        SecuredContent secureContent = this.CreateSecuredContent(publicKeyXml, unsecuredJsonRequest);\r\n\r\n        string secureRequest = JsonConvert.SerializeObject(new { secureContent });\r\n\r\n        return secureRequest;\r\n      }\r\n\r\n      private SecuredContent CreateSecuredContent(string publicKeyXml, string request)\r\n      {\r\n        using (AesCryptoServiceProvider aesCsp = new AesCryptoServiceProvider())\r\n        {\r\n          aesCsp.Mode = CipherMode.CBC;\r\n          aesCsp.Padding = PaddingMode.PKCS7;\r\n          aesCsp.BlockSize = 128;\r\n          aesCsp.KeySize = 256;\r\n\r\n          using (ICryptoTransform crt = aesCsp.CreateEncryptor(aesCsp.Key, aesCsp.IV))\r\n          {\r\n            using (MemoryStream outputStream = new MemoryStream())\r\n            {\r\n              using (CryptoStream encryptStream = new CryptoStream(outputStream, crt, CryptoStreamMode.Write))\r\n              {\r\n                byte[] encodedRequest = Encoding.UTF8.GetBytes(request);\r\n                encryptStream.Write(encodedRequest, 0, encodedRequest.Length);\r\n                encryptStream.FlushFinalBlock();\r\n                byte[] encryptedRequest = outputStream.ToArray();\r\n\r\n                using (RSACryptoServiceProvider crp = new RSACryptoServiceProvider())\r\n                {\r\n                  crp.FromXmlstring(publicKeyXml);\r\n                  byte[] encryptedKey = crp.Encrypt(aesCsp.Key, false);\r\n\r\n                  return new SecuredContent()\r\n                  {\r\n                    Key = Convert.ToBase64string(encryptedKey),\r\n                    Iv = Convert.ToBase64string(aesCsp.IV),\r\n                    Content = Convert.ToBase64string(encryptedRequest)\r\n                  };\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n## Support\r\n\r\nQuestions about using the Paylocity API? Please contact webservices@paylocity.com.\r\n\r\n# Deductions (v1)\r\n\r\nDeductions API provides endpoints to retrieve, add, update and delete deductions for a company's employees. For schema details, click <a href=\"https://docs.paylocity.com/weblink/guides/Paylocity_Web_Services_API/v1/Paylocity_Web_Services_API.htm\" target=\"_blank\">here</a>.\r\n\r\n# OnBoarding (v1)\r\n\r\nOnboarding API sends employee data into Paylocity Onboarding to help ensure an easy and accurate hiring process for subsequent completion into Web Pay. For schema details, click <a href=\"https://docs.paylocity.com/weblink/guides/Paylocity_Web_Services_API/v1/Paylocity_Web_Services_API.htm\" target=\"_blank\">here</a>.",
  "apiTitle": "Paylocity API",
  "endpoints": 24,
  "sdkMethods": 30,
  "schemas": 21,
  "parameters": 318,
  "contactEmail": "webservices@paylocity.com",
  "difficultyScore": 120,
  "difficulty": "Medium"
}