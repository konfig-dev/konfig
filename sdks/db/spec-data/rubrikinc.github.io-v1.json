{
  "providerName": "rubrikinc.github.io",
  "openApiRaw": "https://rubrikinc.github.io/api-doc-v1-6.0/openapi.json",
  "securitySchemes": {
    "BasicAuth": {
      "scheme": "basic",
      "type": "http"
    },
    "Bearer": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "homepage": "rubrikinc.github.io",
  "apiVersion": "v1",
  "methods": [
    {
      "url": "/archive/aws/s3/{id}/account_id",
      "method": "getAwsAccountId",
      "httpMethod": "get",
      "tag": "/archive",
      "description": "Get the AWS account ID of an AWS S3 archival location",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of an AWS archival location that uses the S3 protocol."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/archive/location/{id}/owner/disable",
      "method": "disableArchivalLocation",
      "httpMethod": "post",
      "tag": "/archive",
      "description": "Disable location for archival and modification operations",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to an archival location object."
        }
      ],
      "responses": []
    },
    {
      "url": "/archive/location/{id}/owner/enable",
      "method": "enableArchivalLocation",
      "httpMethod": "post",
      "tag": "/archive",
      "description": "Enable archival location for archival and modification operations",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to an archival location object."
        }
      ],
      "responses": []
    },
    {
      "url": "/archive/location/{location_id}/reader/refresh/data_sources",
      "method": "refreshArchivalLocationDataSources",
      "httpMethod": "post",
      "tag": "/archive",
      "description": "Refresh archive information for a list of data sources",
      "parameters": [
        {
          "name": "location_id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to an archival location object."
        },
        {
          "name": "archivalDataSourceIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "localDataSourceIds",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/authorization/cache",
      "method": "deleteAuthzCache",
      "httpMethod": "delete",
      "tag": "/authorization",
      "description": "Clear cached authorization information",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/backup/retry",
      "method": "createBackupRemediationAsyncTask",
      "httpMethod": "post",
      "tag": "/backup",
      "description": "Reschedule unsuccessful backup tasks",
      "parameters": [
        {
          "name": "config",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "spec",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/backup/retry/{id}",
      "method": "getBackupRemediationAsyncTaskStatus",
      "httpMethod": "get",
      "tag": "/backup",
      "description": "Get status of reschedule attempt",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Async request id."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/backup/verify",
      "method": "verifySnapshot",
      "httpMethod": "post",
      "tag": "/backup",
      "description": "Trigger a job for snapshot verification",
      "parameters": [
        {
          "name": "locationIdOpt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "objectId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "shouldVerifyAfterOpt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "snapshotIdsOpt",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/backup/verify/{id}",
      "method": "getBackupVerificationAsyncRequestStatus",
      "httpMethod": "get",
      "tag": "/backup",
      "description": "Get asynchronous request details for Backup Verification",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the asynchronous request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/blackout_window",
      "method": "getBlackoutWindowStatus",
      "httpMethod": "get",
      "tag": "/blackout_window",
      "description": "Get current status of global blackout window",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/blackout_window",
      "method": "toggleBlackoutWindow",
      "httpMethod": "patch",
      "tag": "/blackout_window",
      "description": "Starts or stops the global blackout window in local Rubrik cluster",
      "parameters": [
        {
          "name": "isGlobalBlackoutActive",
          "schema": "boolean",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/certificate",
      "method": "queryCertificates",
      "httpMethod": "get",
      "tag": "/certificate",
      "description": "Get all certificates",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Search by certificate name."
        },
        {
          "name": "has_key",
          "schema": "boolean",
          "required": false,
          "description": "Search certificates by whether or not they contain a private key.\n"
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": "Search certificates by description."
        },
        {
          "name": "expiration",
          "schema": "string",
          "required": false,
          "description": "Search certificates by expiration."
        },
        {
          "name": "include_expired",
          "schema": "boolean",
          "required": false,
          "description": "Specifies whether to include expired certificates. The default is false."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Attribute by which the list of certificates is sorted."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sort order, either ascending or descending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/certificate",
      "method": "importCertificate",
      "httpMethod": "post",
      "tag": "/certificate",
      "description": "Import a certificate",
      "parameters": [
        {
          "name": "csrId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pemFile",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "privateKey",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/certificate/agent",
      "method": "queryAgentSecondaryCertificate",
      "httpMethod": "get",
      "tag": "/certificate/agent",
      "description": "Get all potential agent secondary cluster certificates",
      "parameters": [
        {
          "name": "is_agent_enabled",
          "schema": "boolean",
          "required": false,
          "description": "Filter based on whether or not certificates have been marked for use by agents."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/certificate/agent",
      "method": "markAgentSecondaryCertificate",
      "httpMethod": "post",
      "tag": "/certificate/agent",
      "description": "Mark a certificate to be added to agents",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/certificate/agent/{id}",
      "method": "unmarkAgentSecondaryCertificate",
      "httpMethod": "delete",
      "tag": "/certificate/agent",
      "description": "Unmark a certificate that was previously marked",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of certificate to remove."
        }
      ],
      "responses": []
    },
    {
      "url": "/certificate/{id}",
      "method": "deleteCertificate",
      "httpMethod": "delete",
      "tag": "/certificate",
      "description": "Delete imported certificate object",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The certificate ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/certificate/{id}",
      "method": "exportCertificate",
      "httpMethod": "get",
      "tag": "/certificate",
      "description": "Get a certificate summary to export",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of certificate to export."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/certificate/{id}",
      "method": "updateCertificate",
      "httpMethod": "patch",
      "tag": "/certificate",
      "description": "Update a certificate entry",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of certificate object to update."
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "pemFile",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud_utilization/cloud_out_forecast",
      "method": "doCloudOutForecast",
      "httpMethod": "post",
      "tag": "/cloud_utilization",
      "description": "Forecast of the cloud utilization for CloudOut",
      "parameters": [
        {
          "name": "consolidationFilter",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "forecastPeriodInGranularityUnit",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "granularity",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "slaParameters",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/me/upgrade/monitor_events",
      "method": "monitorEvents",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get event notifications",
      "parameters": [
        {
          "name": "event_notification_query",
          "schema": "array",
          "required": true,
          "description": "Specifies a list of events to monitor for notifications."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}",
      "method": "getPublicClusterInfo",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get cluster details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}",
      "method": "updateCluster",
      "httpMethod": "patch",
      "tag": "/cluster",
      "description": "Change Rubrik cluster properties",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of a Rubrik cluster object, or use *me* for the Rubrik cluster that is hosting the current API session."
        },
        {
          "name": "acceptedEulaVersion",
          "schema": "string",
          "description": ""
        },
        {
          "name": "geolocation",
          "schema": "object",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timezone",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/api_version",
      "method": "getClusterApiVersion",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get cluster REST API version",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/certificate",
      "method": "getClusterCertificate",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get the cluster certificate",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/manual_discover",
      "method": "manualDiscover",
      "httpMethod": "post",
      "tag": "/cluster",
      "description": "Manually discover nodes",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        },
        {
          "name": "nodeInfo",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/manual_discover_ipv4",
      "method": "manualDiscoverIpv4",
      "httpMethod": "post",
      "tag": "/cluster",
      "description": "Manually discover nodes over IPv4 address",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster, or *me* for the current cluster."
        },
        {
          "name": "nodeInfo",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/node_hostname",
      "method": "getClusterNodeHostnames",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get the node ID to hostname mapping for all the nodes in a Rubrik cluster\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/node_hostname",
      "method": "changeClusterNodeHostnames",
      "httpMethod": "post",
      "tag": "/cluster",
      "description": "Change hostname for nodes in a Rubrik cluster",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        }
      ],
      "responses": []
    },
    {
      "url": "/cluster/{id}/node_id",
      "method": "getClusterNodeIds",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get the name of the nodes in the cluster",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/rubrik_support_portal_credentials",
      "method": "hasRubrikSupportPortalCredentials",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Check credentials to the Rubrik support portal",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a Rubrik cluster, or use *me* for the Rubrik cluster that is hosting the current session.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/rubrik_support_portal_credentials",
      "method": "updateRubrikSupportPortalCredentials",
      "httpMethod": "post",
      "tag": "/cluster",
      "description": "Update credentials to the Rubrik support portal",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a Rubrik cluster, or use *me* for the Rubrik cluster that is hosting the current session.\n"
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/cluster/{id}/security/cors",
      "method": "getCorsConfiguration",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get CORS configuration",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/security/cors",
      "method": "updateCorsConfiguration",
      "httpMethod": "patch",
      "tag": "/cluster",
      "description": "Update CORS configuration",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        },
        {
          "name": "allowedHeaders",
          "schema": "string",
          "description": ""
        },
        {
          "name": "allowedOrigins",
          "schema": "string",
          "description": ""
        },
        {
          "name": "isEnabled",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/security/encryption",
      "method": "getEncryptionStatus",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get encryption at rest status",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/security/fips",
      "method": "getFips",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get FIPS enablement status",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/security/fips",
      "method": "updateFips",
      "httpMethod": "patch",
      "tag": "/cluster",
      "description": "Update FIPS enablement status",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        },
        {
          "name": "isEnabledInFlight",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/security/kmip/client",
      "method": "getKmipClient",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get the KMIP client configuration",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a Rubrik cluster. Use *me* to refer to the Rubrik cluster that is hosting the current API session."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/security/kmip/client",
      "method": "setKmipClient",
      "httpMethod": "put",
      "tag": "/cluster",
      "description": "Specify KMIP client credentials for nodes",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a Rubrik cluster. Use *me* to refer to the Rubrik cluster that is hosting the current API session."
        },
        {
          "name": "clientCertificateId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/security/kmip/server",
      "method": "deleteKmipServer",
      "httpMethod": "delete",
      "tag": "/cluster",
      "description": "Remove the specified KMIP server",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a Rubrik cluster. Use *me* to refer to the Rubrik cluster that is hosting the current API session."
        },
        {
          "name": "server_address",
          "schema": "string",
          "required": true,
          "description": "IPv4 address or FQDN (fully qualified domain name) of the KMIP server."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/security/kmip/server",
      "method": "getKmipServer",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get KMIP server information",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a Rubrik cluster. Use *me* to refer to the Rubrik cluster that is hosting the current API session."
        },
        {
          "name": "server_address",
          "schema": "string",
          "required": false,
          "description": "The address of the KMIP server."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/security/kmip/server",
      "method": "addKmipServer",
      "httpMethod": "put",
      "tag": "/cluster",
      "description": "Add a KMIP server",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a Rubrik cluster. Use *me* to refer to the Rubrik cluster that is hosting the current API session."
        },
        {
          "name": "serverAddress",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serverCertificateId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serverPort",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/security/password_requirements",
      "method": "queryPasswordRequirements",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get password requirements",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/security/password_requirements",
      "method": "patchPasswordRequirements",
      "httpMethod": "patch",
      "tag": "/cluster",
      "description": "Set password requirements",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        },
        {
          "name": "blockPreviousPasswords",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "clearApiTokens",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "clearWebSessions",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "minLength",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "minLowerCase",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "minNumerics",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "minSpecial",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "minUpperCase",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "useZxcvbn",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/security/totp/setting",
      "method": "getTotpGlobalSetting",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get global TOTP setting",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a Rubrik cluster. Use *me* to refer to the Rubrik cluster that is hosting the current API session."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/security/totp/setting",
      "method": "updateTotpGlobalSetting",
      "httpMethod": "put",
      "tag": "/cluster",
      "description": "Update TOTP global setting",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a Rubrik cluster. Use *me* to refer to the Rubrik cluster that is hosting the current API session."
        },
        {
          "name": "isEnforced",
          "schema": "boolean",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/security/truststore",
      "method": "unsetTruststoreCertificate",
      "httpMethod": "delete",
      "tag": "/cluster",
      "description": "Remove certificate associated with specified truststore",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        },
        {
          "name": "truststores",
          "schema": "array",
          "required": true,
          "description": "Comma separated list of truststore types."
        }
      ],
      "responses": []
    },
    {
      "url": "/cluster/{id}/security/truststore",
      "method": "getTruststores",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get summary of all truststores",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/security/truststore",
      "method": "setTruststoreCertificate",
      "httpMethod": "patch",
      "tag": "/cluster",
      "description": "Set certificates for one or more truststores",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        }
      ],
      "responses": []
    },
    {
      "url": "/cluster/{id}/security/web_signed_cert",
      "method": "resetWebSignedCertificate",
      "httpMethod": "delete",
      "tag": "/cluster",
      "description": "Reset the signed certificate for Web server",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/security/web_signed_cert",
      "method": "getWebSignedCertificate",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get the signed certificate for Web server",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/security/web_signed_cert",
      "method": "setWebSignedCertificate",
      "httpMethod": "put",
      "tag": "/cluster",
      "description": "Set a signed certificate for Web server",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        },
        {
          "name": "certificateId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/snmp_mib_link",
      "method": "getRubrikSnmpMibDownloadLink",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get the link for Rubrik SNMP MIB file",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/syslog_msg_mib_link",
      "method": "getSyslogMsgSnmpMibDownloadLink",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get the link for SYSLOG-MSG-MIB file",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/syslog_tc_mib_link",
      "method": "getSyslogTcSnmpMibDownloadLink",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get the link for SYSLOG-TC-MIB file",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/upgrade/available_version",
      "method": "availableVersion",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Retrieve CDM versions available for upgrade",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the Rubrik cluster. To query the local cluster, use *me*."
        },
        {
          "name": "filter_version",
          "schema": "string",
          "required": false,
          "description": "A string that filters the results based on the prefix. For example, the string \"5.1\" filters all releases in the 5.1 family. If more than one result is desired then this parameter can be used in conjunction with the `show_all` parameter."
        },
        {
          "name": "fetch_links",
          "schema": "boolean",
          "required": false,
          "description": "Include a download URL for the single version passed in the 'filter_version' parameter. A link response will not be provided if the chosen version is locally available, or if 'filter_version' is not specified.\n"
        },
        {
          "name": "source_version",
          "schema": "string",
          "required": false,
          "description": "The source version of Rubrik CDM used for the upgradeability check if 'filter_upgradable' if specified. If 'filter_upgradable' is not specified, this parameter is ignored.\n"
        },
        {
          "name": "ignore_local",
          "schema": "boolean",
          "required": false,
          "description": "If specified, ignore locally available versions."
        },
        {
          "name": "ignore_remote",
          "schema": "boolean",
          "required": false,
          "description": "If specified, ignore versions available in the Rubrik remote central repository.\n"
        },
        {
          "name": "ignore_downloading",
          "schema": "boolean",
          "required": false,
          "description": "If specified, ignore versions currently being downloaded."
        },
        {
          "name": "download_job_instance_id",
          "schema": "string",
          "required": false,
          "description": "If specified, filter results for downloading versions to the provided job instance ID.\n"
        },
        {
          "name": "filter_upgradable",
          "schema": "boolean",
          "required": false,
          "description": "When this parameter is set, the query only returns versions of the Rubrik CDM that can be upgraded to from the version specified in the 'source_version' parameter. If 'source_version' is not specified, we use the cluster version as the source_version.\n"
        },
        {
          "name": "show_all",
          "schema": "boolean",
          "required": false,
          "description": "When this parameter is set, the query shows all patch releases including releases with a newer version released in the same family. When set to false, the query returns only the latest version from each release family.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/upgrade/precheck_status",
      "method": "getPeriodicUpgradePrechecksStatus",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get the result of the latest run of the upgrade prechecks",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        },
        {
          "name": "fetch_next_run_info",
          "schema": "boolean",
          "required": false,
          "description": "If specified, fetch information corresponding to next upgrade prechecks job instance. If an upgrade prechecks job instance is currently running, results corresponding to it are returned.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/upgrade/precheck_status",
      "method": "runPeriodicUpgradePrechecks",
      "httpMethod": "post",
      "tag": "/cluster",
      "description": "Start an on demand run of the prechecks",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/upgrade/request/{request_id}",
      "method": "getAsyncRequestStatusForUpgrade",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get asynchronous request details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        },
        {
          "name": "request_id",
          "schema": "string",
          "required": true,
          "description": "ID of the request."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/upgrade/stage_cdm_software",
      "method": "stageCdmSoftware",
      "httpMethod": "post",
      "tag": "/cluster",
      "description": "Stage software on CDM for upgrade",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        },
        {
          "name": "md5sum",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "packageUrl",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "size",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "skipDownload",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "version",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/cluster/{id}/version",
      "method": "getClusterVersion",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get cluster software version",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Rubrik cluster or *me* for self."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/config/history/list_updates",
      "method": "queryConfigurationHistoryUpdates",
      "httpMethod": "get",
      "tag": "/config/history",
      "description": "View a list of filtered configuration updates",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the number of matches returned."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Ignore these many matches in the beginning."
        },
        {
          "name": "api_user",
          "schema": "string",
          "required": false,
          "description": "The username of the account. Applies a filter to the configuration updates performed by the specified username."
        },
        {
          "name": "node_id",
          "schema": "string",
          "required": false,
          "description": "The node ID. Applies a filter to the configuration updates for the specified node. When no node_id is specified, the filter shows both local and cluster-wide configurations. Specify 'cluster' for filtering out cluster-wide configuration updates."
        },
        {
          "name": "namespace",
          "schema": "string",
          "required": false,
          "description": "The configuration namespace. Applies a filter to the configuration updates for the specified namespace."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Name of the configuration. Applies a filter to the configuration updates for the specified configuration name."
        },
        {
          "name": "source",
          "schema": "string",
          "required": false,
          "description": "Source for configuration updates. Applies a filter to the configuration updates for the specified source."
        },
        {
          "name": "after_time",
          "schema": "string",
          "required": false,
          "description": "The earliest time configuration history is needed. Applies a filter that only shows configuration updates after the specified time."
        },
        {
          "name": "before_time",
          "schema": "string",
          "required": false,
          "description": "The latest time configuration history is needed. Applies filter to display only configuration updates prior to the specified time. The default value is the current time."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/config/history/ondate",
      "method": "retrieveConfigurationValues",
      "httpMethod": "get",
      "tag": "/config/history",
      "description": "View a list of configurations and their values on a given date",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the number of matches returned."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Ignore these many matches in the beginning."
        },
        {
          "name": "node_id",
          "schema": "string",
          "required": false,
          "description": "The name of the node that require configuration values. Applies a filter specific to the name of node. When no node_id is specified, the filter shows both local and cluster-wide configurations."
        },
        {
          "name": "namespace",
          "schema": "string",
          "required": true,
          "description": "The configuration namespace. Applies a filter to the configuration updates for the specified namespace."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "The name of the configuration option. Applies a filter to the configuration updates for the specified option."
        },
        {
          "name": "on_date",
          "schema": "string",
          "required": true,
          "description": "The timestamp for which to retrieve configuration values."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/csr",
      "method": "getAllCsrs",
      "httpMethod": "get",
      "tag": "/csr",
      "description": "Get all certificate signing requests",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/csr",
      "method": "generateCsr",
      "httpMethod": "post",
      "tag": "/csr",
      "description": "Generate a new private key and return a certificate signing request",
      "parameters": [
        {
          "name": "csrRequest",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/csr/{id}",
      "method": "deleteCsr",
      "httpMethod": "delete",
      "tag": "/csr",
      "description": "Delete a certificate signing request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Certificate signing request ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/data_source/snapshot/bulk_delete",
      "method": "bulkDeleteSnapshots",
      "httpMethod": "post",
      "tag": "/data_source",
      "description": "Bulk delete all snapshots for the given objects",
      "parameters": [
        {
          "name": "objectIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/data_source/{id}/expired_custom_retention_snapshots",
      "method": "expiredCustomRetentionSnapshots",
      "httpMethod": "get",
      "tag": "/data_source",
      "description": "Returns a list of snapshots that have expired according to their snapshot-level SLA Domain assignments\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The object ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Array containing information of snapshot which have been expired due to snapshot-level SLA domain assignments.\n"
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/data_source/{id}/snapshot/bulk_delete",
      "method": "bulkDeleteSnapshotsForObject",
      "httpMethod": "post",
      "tag": "/data_source",
      "description": "Bulk delete specified snapshots for the given object",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the object."
        },
        {
          "name": "locationId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "snapshotIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/database/log_report",
      "method": "queryLogReport",
      "httpMethod": "get",
      "tag": "/database/log_report",
      "description": "Get the database log backup delay information",
      "parameters": [
        {
          "name": "effective_sla_domain_id",
          "schema": "string",
          "required": false,
          "description": "Filter by effective SLA domain."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Filter by the database name substring."
        },
        {
          "name": "database_type",
          "schema": "string",
          "required": false,
          "description": "Filter by the database type."
        },
        {
          "name": "location",
          "schema": "string",
          "required": false,
          "description": "Filter by the database location."
        },
        {
          "name": "log_backup_delay",
          "schema": "integer",
          "required": false,
          "description": "Filter by the database log backup delay in seconds, greater than this value."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the number of matches returned."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Integer specifying the number of initial matches to ignore."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Specifies the attribute to use while sorting the summary information. Performs an ASCII sort using the specified attribute, in the order specified by sort_order."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sort order, either ascending or descending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/database/log_report/defaults",
      "method": "queryReportProperties",
      "httpMethod": "get",
      "tag": "/database/log_report",
      "description": "Get the database log backup report properties",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/database/log_report/defaults",
      "method": "updateReportProperties",
      "httpMethod": "patch",
      "tag": "/database/log_report",
      "description": "Update the database log backup report properties",
      "parameters": [
        {
          "name": "enableDelayNotification",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "logDelayNotificationFrequencyInMin",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "logDelayThresholdInMin",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/event",
      "method": "queryEventV1",
      "httpMethod": "get",
      "tag": "/event",
      "description": "Get information for all events",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Maximum number of events retrieved."
        },
        {
          "name": "after_id",
          "schema": "string",
          "required": false,
          "description": "An (event_id, time) tuple. When specified, returns all events with timestamps that come after the time value of after_id based on the sort order defined by the order_by_time parameter."
        },
        {
          "name": "before_date",
          "schema": "string",
          "required": false,
          "description": "Filter the events occurring after the specified date."
        },
        {
          "name": "after_date",
          "schema": "string",
          "required": false,
          "description": "Filter the events occurring before the specified date."
        },
        {
          "name": "order_by_time",
          "schema": "string",
          "required": false,
          "description": "The events are ordered by timestamp. Specify desc to show the latest entries first. Specify asc to show the oldest entries first. The default behavior is asc."
        },
        {
          "name": "should_include_event_series",
          "schema": "boolean",
          "required": false,
          "description": "A Boolean value that determines whether to include event series summary for every event. If set to 'true', a list of event series summary will be returned and each summary has an empty list of events. If set to 'false', an empty list of event series summary will be returned. The default value is 'false'. Setting it to 'true' will increase the response time."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/event/csv_download_link",
      "method": "getEventsCsvDownloadLink",
      "httpMethod": "get",
      "tag": "/event",
      "description": "Download summary of events as a CSV file",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Maximum number of events to retrieve. Default value is 100."
        },
        {
          "name": "event_series_status",
          "schema": "string",
          "required": false,
          "description": "Filter by the current status of the event series."
        },
        {
          "name": "event_status",
          "schema": "string",
          "required": false,
          "description": "Filter by the status of the latest event in the event series."
        },
        {
          "name": "event_type",
          "schema": "string",
          "required": false,
          "description": "Filter by the type of the latest event in the event series."
        },
        {
          "name": "event_severity",
          "schema": "string",
          "required": false,
          "description": "Filter by the severity of the latest event in the event series."
        },
        {
          "name": "object_ids",
          "schema": "array",
          "required": false,
          "description": "Filter the object IDs in the latest event series by matches to a comma-separated list of object IDs."
        },
        {
          "name": "object_type",
          "schema": "string",
          "required": false,
          "description": "Filter the events in the event series by a specified object type."
        },
        {
          "name": "object_name",
          "schema": "string",
          "required": false,
          "description": "Filter latest events according to the provided name using prefix search for resources and exact search for usernames."
        },
        {
          "name": "after_id",
          "schema": "string",
          "required": false,
          "description": "An (event_series_id, time) tuple. When specified, returns all event series whose latest event timestamp comes after the time value of after_id based on the sort order defined by the order_by_time parameter."
        },
        {
          "name": "before_date",
          "schema": "string",
          "required": false,
          "description": "Filter out event series that have events occurring after the specified date."
        },
        {
          "name": "after_date",
          "schema": "string",
          "required": false,
          "description": "Filter out event series that have events occurring before the specified date."
        },
        {
          "name": "order_by_time",
          "schema": "string",
          "required": false,
          "description": "The events in a series are ordered by timestamp. Specify desc to show the latest entries first. Specify asc to show the oldest entries first. The default behavior is desc."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/event/latest",
      "method": "queryLatestEventsV1",
      "httpMethod": "get",
      "tag": "/event",
      "description": "Get latest events with their associated event series information",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Maximum number of events retrieved."
        },
        {
          "name": "event_series_status",
          "schema": "string",
          "required": false,
          "description": "Filter by the current status of the event series."
        },
        {
          "name": "event_status",
          "schema": "string",
          "required": false,
          "description": "Filter by the status of the latest event in the event series."
        },
        {
          "name": "event_type",
          "schema": "string",
          "required": false,
          "description": "Filter by the type of the latest event in the event series."
        },
        {
          "name": "event_severity",
          "schema": "string",
          "required": false,
          "description": "Filter by the severity of the latest event in the event series."
        },
        {
          "name": "object_ids",
          "schema": "array",
          "required": false,
          "description": "Filter the object IDs in the latest event series by matches to a comma-separated list of object IDs."
        },
        {
          "name": "object_type",
          "schema": "string",
          "required": false,
          "description": "Filter the events in the event series by a specified object type."
        },
        {
          "name": "object_name",
          "schema": "string",
          "required": false,
          "description": "Filter latest events according to the provided name using prefix search for resources and exact search for usernames."
        },
        {
          "name": "after_id",
          "schema": "string",
          "required": false,
          "description": "An (event_series_id, time) tuple. When specified, returns all event series whose latest event timestamp comes after the time value of after_id based on the sort order defined by the order_by_time parameter."
        },
        {
          "name": "before_date",
          "schema": "string",
          "required": false,
          "description": "Filter out event series that have events occurring after the specified date."
        },
        {
          "name": "after_date",
          "schema": "string",
          "required": false,
          "description": "Filter out event series that have events occurring before the specified date."
        },
        {
          "name": "order_by_time",
          "schema": "string",
          "required": false,
          "description": "The events in a series are ordered by timestamp. Specify desc to show the latest entries first. Specify asc to show the oldest entries first. The default behavior is desc."
        },
        {
          "name": "should_include_event_series",
          "schema": "boolean",
          "required": false,
          "description": "A Boolean value that determines whether to include all events in the event series. The default value is 'false'. Setting it to 'true' will significantly increase the response time."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/event_series/{id}",
      "method": "queryEventSeriesByIdV1",
      "httpMethod": "get",
      "tag": "/event_series",
      "description": "Get all events and relevant information associated with an event series ID",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the event series."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/exclusion_pattern",
      "method": "queryExclusionPattern",
      "httpMethod": "get",
      "tag": "/exclusion_pattern",
      "description": "Get a summary of all exclusion patterns",
      "parameters": [
        {
          "name": "pattern",
          "schema": "string",
          "required": false,
          "description": "Filter a response by making an infix comparison of the exclusion patttern in the response with the specified value."
        },
        {
          "name": "is_mutable",
          "schema": "boolean",
          "required": false,
          "description": "Filter a response based on the mutability of the pattern."
        },
        {
          "name": "source_id",
          "schema": "string",
          "required": false,
          "description": "Filter a response based on the protectable object to which the exclusion pattern applies."
        },
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Limit a response to the results that have the specified primary cluster value."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the summary information to a specified maximum number of matches. Optionally, use with offset to start the count at a specified point. Optionally, use with sort_by to perform sort on given attributes. Include sort_order to determine the ascending or descending direction of the sort."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Starting position in the list of matches. The response includes the specified numbered entry and all higher numbered entries. Use with limit to retrieve the response as smaller groups of entries, for example for paging of results."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Specifies a comma-separated list of attributes to use in sorting the matches. Performs an ASCII sort of the values in the response using each specified attribute, in the order specified."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sort order, either ascending or descending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/exclusion_pattern",
      "method": "createExclusionPattern",
      "httpMethod": "post",
      "tag": "/exclusion_pattern",
      "description": "Create an exclusion pattern",
      "parameters": [
        {
          "name": "pattern",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sourceId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/exclusion_pattern/bulk",
      "method": "bulkDeleteExclusionPattern",
      "httpMethod": "delete",
      "tag": "/exclusion_pattern",
      "description": "Bulk delete the provided mutable exclusion patterns",
      "parameters": [
        {
          "name": "ids",
          "schema": "array",
          "required": true,
          "description": "The ID of each exclusion pattern to delete."
        }
      ],
      "responses": []
    },
    {
      "url": "/exclusion_pattern/bulk",
      "method": "bulkCreateExclusionPattern",
      "httpMethod": "post",
      "tag": "/exclusion_pattern",
      "description": "Bulk create exclusion patterns",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/exclusion_pattern/{id}",
      "method": "deleteExclusionPattern",
      "httpMethod": "delete",
      "tag": "/exclusion_pattern",
      "description": "Delete a mutable exclusion pattern",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the exclusion pattern."
        }
      ],
      "responses": []
    },
    {
      "url": "/exclusion_pattern/{id}",
      "method": "getExclusionPattern",
      "httpMethod": "get",
      "tag": "/exclusion_pattern",
      "description": "Get details of a exclusion pattern",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the exclusion pattern."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/exclusion_pattern/{id}",
      "method": "updateExclusionPattern",
      "httpMethod": "post",
      "tag": "/exclusion_pattern",
      "description": "Update a mutable exclusion pattern",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of exclusion pattern."
        },
        {
          "name": "isActive",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "isMutable",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "pattern",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/failover_cluster",
      "method": "queryFailoverCluster",
      "httpMethod": "get",
      "tag": "/failover_cluster",
      "description": "Get a summary of all failover clusters",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Filter a response by making an infix comparison of the failover cluster name in the response, with the specified value."
        },
        {
          "name": "operating_system_type",
          "schema": "string",
          "required": false,
          "description": "Filter a response based on the operating system type."
        },
        {
          "name": "sla_assignment",
          "schema": "string",
          "required": false,
          "description": "Limit a response to the results that have the specified SLA Domain assignment type."
        },
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Limit a response to the results that have the specified primary cluster value."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the summary information to a specified maximum number of matches. Optionally, use with offset to start the count at a specified point. Optionally, use with sort_by to perform sort on given attributes. Include sort_order to determine the ascending or descending direction of the sort."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Starting position in the list of matches. The response includes the specified numbered entry and all higher numbered entries. Use with limit to retrieve the response as smaller groups of entries, for example for paging of results."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Specifies a comma-separated list of attributes to use in sorting the matches. Performs an ASCII sort of the values in the response using each specified attribute, in the order specified."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sort order, either ascending or descending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/failover_cluster",
      "method": "createFailoverCluster",
      "httpMethod": "post",
      "tag": "/failover_cluster",
      "description": "Create a failover cluster",
      "parameters": [
        {
          "name": "configuredSlaDomainId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "hostIds",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/failover_cluster/bulk",
      "method": "bulkDeleteFailoverCluster",
      "httpMethod": "delete",
      "tag": "/failover_cluster",
      "description": "Delete the provided failover clusters",
      "parameters": [
        {
          "name": "ids",
          "schema": "array",
          "required": true,
          "description": "The ID of each failover cluster to delete."
        },
        {
          "name": "preserve_snapshots",
          "schema": "boolean",
          "required": false,
          "description": "Specifies whether to preserve the snapshots of the fileset which belong to a failover cluster application. When this value is 'true,' the snapshots are preserved. The default value is 'true'."
        }
      ],
      "responses": []
    },
    {
      "url": "/failover_cluster/failover_cluster_app",
      "method": "queryFailoverClusterApp",
      "httpMethod": "get",
      "tag": "/failover_cluster/failover_cluster_app",
      "description": "Get a summary of all failover cluster apps",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Filter the response by comparing the failover cluster app name with the specified value."
        },
        {
          "name": "sla_assignment",
          "schema": "string",
          "required": false,
          "description": "Limit a response to the results that have the specified SLA Domain assignment type."
        },
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Limit a response to the results that have the specified primary cluster value."
        },
        {
          "name": "operating_system_type",
          "schema": "string",
          "required": false,
          "description": "Filter a response based on the failover cluster operating system type."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the summary information to a specified maximum number of matches. Optionally, use with offset to start the count at a specified point. Optionally, use with sort_by to perform sort on given attributes. Include sort_order to determine the ascending or descending direction of the sort."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Starting position in the list of matches. The response includes the specified numbered entry and all higher numbered entries. Use with limit to retrieve the response as smaller groups of entries, for example for paging of results."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Specifies a comma-separated list of attributes to use in sorting the matches. Performs an ASCII sort of the values in the response using each specified attribute, in the order specified."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sort order, either ascending or descending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/failover_cluster/failover_cluster_app",
      "method": "createFailoverClusterApp",
      "httpMethod": "post",
      "tag": "/failover_cluster/failover_cluster_app",
      "description": "Create a failover cluster app",
      "parameters": [
        {
          "name": "configuredSlaDomainId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "failoverClusterAppSource",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "failoverClusterId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "failoverClusterType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/failover_cluster/failover_cluster_app/bulk",
      "method": "bulkDeleteFailoverClusterApp",
      "httpMethod": "delete",
      "tag": "/failover_cluster/failover_cluster_app",
      "description": "Delete failover cluster applications",
      "parameters": [
        {
          "name": "ids",
          "schema": "array",
          "required": true,
          "description": "The ID of each failover cluster application to delete."
        },
        {
          "name": "preserve_snapshots",
          "schema": "boolean",
          "required": false,
          "description": "Specifies whether to preserve the snapshots of the fileset that belongs to a failover cluster application. When this value is 'true,' the snapshots are preserved. The default value is 'true'."
        }
      ],
      "responses": []
    },
    {
      "url": "/failover_cluster/failover_cluster_app/{id}",
      "method": "deleteFailoverClusterApp",
      "httpMethod": "delete",
      "tag": "/failover_cluster/failover_cluster_app",
      "description": "Delete a failover cluster app",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the failover cluster app."
        },
        {
          "name": "preserve_snapshots",
          "schema": "boolean",
          "required": false,
          "description": "A Boolean that specifies whether to preserve the snapshots of the fileset which belong to a failover cluster application. When this value is 'true,' the snapshots are preserved. The default value is 'true'."
        }
      ],
      "responses": []
    },
    {
      "url": "/failover_cluster/failover_cluster_app/{id}",
      "method": "getFailoverClusterApp",
      "httpMethod": "get",
      "tag": "/failover_cluster/failover_cluster_app",
      "description": "Get details of a failover cluster app",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the failover cluster app."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/failover_cluster/failover_cluster_app/{id}",
      "method": "updateFailoverClusterApp",
      "httpMethod": "patch",
      "tag": "/failover_cluster/failover_cluster_app",
      "description": "Update a failover cluster app",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of failover cluster app."
        },
        {
          "name": "configuredSlaDomainId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "failoverClusterAppSource",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "failoverClusterId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "failoverClusterType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/failover_cluster/hierarchy/{id}",
      "method": "getFailoverClusterHierarchyObject",
      "httpMethod": "get",
      "tag": "/failover_cluster/hierarchy",
      "description": "Get summary of a hierarchy object",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the hierarchy object."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/failover_cluster/hierarchy/{id}/children",
      "method": "getFailoverClusterHierarchyChildren",
      "httpMethod": "get",
      "tag": "/failover_cluster/hierarchy",
      "description": "Get list of immediate descendant objects",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Filter a response by making an infix comparison of the failover cluster name or failover cluster app name."
        },
        {
          "name": "operating_system_type",
          "schema": "string",
          "required": false,
          "description": "Filter a response based on the failover cluster operating system type."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the parent failover cluster hierarchy object. To get top-level nodes, use **root** as the ID."
        },
        {
          "name": "object_type",
          "schema": "string",
          "required": false,
          "description": "Filter by node object type."
        },
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Filter by primary cluster ID, or **local**."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "An integer that specifies the maximum number of matches to return."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "An integer that specifies a number of initial matches to ignore."
        },
        {
          "name": "configured_sla_domain_id",
          "schema": "string",
          "required": false,
          "description": "Filter by configured SLA domain."
        },
        {
          "name": "sla_assignment",
          "schema": "string",
          "required": false,
          "description": "Filter by SLA assignment type."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Attribute to sort the results on."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sort order, either ascending or descending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/failover_cluster/hierarchy/{id}/descendants",
      "method": "getFailoverClusterHierarchyDescendants",
      "httpMethod": "get",
      "tag": "/failover_cluster/hierarchy",
      "description": "Get list of descendant objects",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Filter a response by making an infix comparison of the failover cluster name or failover cluster app name."
        },
        {
          "name": "operating_system_type",
          "schema": "string",
          "required": false,
          "description": "Filter a response based on the failover cluster operating system type."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the parent failover cluster hierarchy object. To get top-level nodes, use **root** as the ID."
        },
        {
          "name": "object_type",
          "schema": "string",
          "required": false,
          "description": "Filter by node object type."
        },
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Filter by primary cluster ID, or **local**."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "An integer that specifies the maximum number of matches to return."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "An integer that specifies a number of initial matches to ignore."
        },
        {
          "name": "configured_sla_domain_id",
          "schema": "string",
          "required": false,
          "description": "Filter by configured SLA domain."
        },
        {
          "name": "sla_assignment",
          "schema": "string",
          "required": false,
          "description": "Filter by SLA assignment type."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Attribute to sort the results on."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sort order, either ascending or descending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/failover_cluster/{id}",
      "method": "deleteFailoverCluster",
      "httpMethod": "delete",
      "tag": "/failover_cluster",
      "description": "Delete a failover cluster",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the failover cluster."
        },
        {
          "name": "preserve_snapshots",
          "schema": "boolean",
          "required": false,
          "description": "A Boolean that specifies whether to preserve the snapshots of the fileset which belong to a failover cluster application. When this value is 'true,' the snapshots are preserved. The default value is 'true'."
        }
      ],
      "responses": []
    },
    {
      "url": "/failover_cluster/{id}",
      "method": "getFailoverCluster",
      "httpMethod": "get",
      "tag": "/failover_cluster",
      "description": "Get details of a failover cluster",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the failover cluster."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/failover_cluster/{id}",
      "method": "updateFailoverCluster",
      "httpMethod": "patch",
      "tag": "/failover_cluster",
      "description": "Update a failover cluster",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of failover cluster."
        },
        {
          "name": "configuredSlaDomainId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "hostIds",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fileset",
      "method": "queryFileset",
      "httpMethod": "get",
      "tag": "/fileset",
      "description": "Get summary information for all filesets",
      "parameters": [
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Filter the summary information based on the primary_cluster_id of the primary Rubrik cluster.\nUse **_local_** as the primary_cluster_id of the Rubrik cluster that is hosting the current REST API session."
        },
        {
          "name": "host_id",
          "schema": "string",
          "required": false,
          "description": "Filter the summary information based on the ID of the host referenced by the fileset."
        },
        {
          "name": "share_id",
          "schema": "string",
          "required": false,
          "description": "Filter the summary information based on the ID of the host share referenced by the fileset.\nUse **_NONE_** to only return information for filesets that were not created based on a host share.\nUse **_ANY_** to only return information for filesets that were created based on a host share."
        },
        {
          "name": "is_relic",
          "schema": "boolean",
          "required": false,
          "description": "Filter the summary information based on the relic status of the fileset. Returns both relic and non relic if the parameter is not set."
        },
        {
          "name": "effective_sla_domain_id",
          "schema": "string",
          "required": false,
          "description": "Filter the summary information based on the ID of the effective SLA Domain inherited by a fileset.\nUse **_UNPROTECTED_** to only return information for filesets that do not have an effective SLA Domain.\nUse **_PROTECTED_** to only return information for filesets that do have an effective SLA Domain."
        },
        {
          "name": "template_id",
          "schema": "string",
          "required": false,
          "description": "Filter the summary information based on the ID of a fileset template.\n\nUse **_NONE_** to only return information for filesets that were not created from a fileset template.\n\nUse **_ANY_** to only return information for filesets that were created from a fileset template."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the summary information to a specified maximum number of filesets.\n\nOptionally, use with **_offset_** to start the count at a specified point.\n\nOptionally, use with **_sort_by_** to perform sort on given attributes. Include **_sort_order_** to determine the ascending or descending direction of sort."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Starting position in the list of fileset entries contained in the response. The summary information includes the specified numbered entry and all higher numbered entries. Use with **_limit_** to retrieve the summary information as smaller groups of entries, e.g. for paging of results."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Retrieve filesets with a name matching the provided name. The search is performed as a case-insensitive infix search."
        },
        {
          "name": "host_name",
          "schema": "string",
          "required": false,
          "description": "Retrieve filesets with a host name matching the provided name. The search is performed as a case-insensitive infix search."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Specifies a comma-separated list of fileset attributes to use in sorting the fileset summary information. Performs an ASCII sort of the summary information using each specified attribute, in the order specified.\n\nValid attributes are: **_name_**, **_hostName_**, **_templateType_**, **_slaName_**, **_includes_**, **_excludes_**, and **_exceptions_**. Requires **_sort_order_**."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sort order, either ascending or descending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fileset",
      "method": "createFileset",
      "httpMethod": "post",
      "tag": "/fileset",
      "description": "Create one fileset for a host",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/fileset/request/{id}",
      "method": "getFilesetAsyncRequestStatus",
      "httpMethod": "get",
      "tag": "/fileset",
      "description": "Get details about an async request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fileset/snapshot/{id}",
      "method": "deleteFilesetSnapshot",
      "httpMethod": "delete",
      "tag": "/fileset",
      "description": "Delete a fileset snapshot",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of snapshot."
        },
        {
          "name": "location",
          "schema": "string",
          "required": true,
          "description": "Snapshot location to delete. Use **_local_** to delete all local snapshots and **_all_** to delete the snapshot in all locations."
        }
      ],
      "responses": []
    },
    {
      "url": "/fileset/snapshot/{id}",
      "method": "getFilesetSnapshot",
      "httpMethod": "get",
      "tag": "/fileset",
      "description": "Get information for a fileset snapshot",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of snapshot."
        },
        {
          "name": "verbose",
          "schema": "boolean",
          "required": false,
          "description": "Whether or not to fetch verbose fileset snapshot information. The performance of this endpoint will decrease if set to true."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fileset/snapshot/{id}/browse",
      "method": "browseFilesetSnapshot",
      "httpMethod": "get",
      "tag": "/fileset",
      "description": "Lists all files and directories in a given path",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of snapshot."
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "The absolute path of the starting point for the directory listing."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Starting position in the list of path entries contained in the query results, sorted by lexicographical order. The response includes the specified numbered entry and all higher numbered entries."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Maximum number of entries in the response."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fileset/snapshot/{id}/download",
      "method": "createDownloadFilesetSnapshotFromCloud",
      "httpMethod": "post",
      "tag": "/fileset",
      "description": "Create a download fileset snapshot from archival request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of snapshot."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/fileset/snapshot/{id}/download_file",
      "method": "createFilesetDownloadFileJob",
      "httpMethod": "post",
      "tag": "/fileset",
      "description": "Create a file download job from a fileset backup",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of snapshot."
        },
        {
          "name": "legalHoldDownloadConfig",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "sourceDir",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/fileset/snapshot/{id}/export_file",
      "method": "createFilesetExportFileJob",
      "httpMethod": "post",
      "tag": "/fileset",
      "description": "Create export job",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of snapshot."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/fileset/snapshot/{id}/restore_file",
      "method": "createFilesetRestoreFileJob",
      "httpMethod": "post",
      "tag": "/fileset",
      "description": "Create restore job",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of snapshot."
        },
        {
          "name": "destinationDir",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ignoreErrors",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "sourceDir",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/fileset/{id}",
      "method": "deleteFileset",
      "httpMethod": "delete",
      "tag": "/fileset",
      "description": "Delete a fileset",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Provide a fileset ID to delete."
        },
        {
          "name": "preserve_snapshots",
          "schema": "boolean",
          "required": false,
          "description": "Flag to indicate whether to preserve snapshots of the fileset or to delete them. Default behavior is to preserve them."
        }
      ],
      "responses": []
    },
    {
      "url": "/fileset/{id}",
      "method": "getFileset",
      "httpMethod": "get",
      "tag": "/fileset",
      "description": "Get information for a single fileset",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Specify the fileset ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fileset/{id}",
      "method": "updateFileset",
      "httpMethod": "patch",
      "tag": "/fileset",
      "description": "Update a Fileset",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Fileset. to update."
        },
        {
          "name": "configuredSlaDomainId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "forceFull",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "forceFullPartitionIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "snapMirrorLabelForFullBackup",
          "schema": "string",
          "description": ""
        },
        {
          "name": "snapMirrorLabelForIncrementalBackup",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fileset/{id}/missed_snapshot",
      "method": "getMissedFilesetSnapshots",
      "httpMethod": "get",
      "tag": "/fileset",
      "description": "Get missed snapshots for a fileset",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the fileset."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fileset/{id}/search",
      "method": "searchFileset",
      "httpMethod": "get",
      "tag": "/fileset",
      "description": "Search for a file within the fileset",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Fileset ID to search."
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "The path query. Either path prefix or filename prefix."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Maximum number of entries in the response."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Pagination cursor returned by the previous request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fileset/{id}/snapshot",
      "method": "deleteFilesetSnapshots",
      "httpMethod": "delete",
      "tag": "/fileset",
      "description": "Delete all snapshots of a fileset",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the fileset."
        }
      ],
      "responses": []
    },
    {
      "url": "/fileset/{id}/snapshot",
      "method": "createFilesetBackupJob",
      "httpMethod": "post",
      "tag": "/fileset",
      "description": "Initiate an on-demand backup for a fileset",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Fileset."
        },
        {
          "name": "slaId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/fileset_template",
      "method": "queryFilesetTemplate",
      "httpMethod": "get",
      "tag": "/fileset_template",
      "description": "Get summary information for all fileset templates",
      "parameters": [
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Filter the summary information based on the primary_cluster_id of the primary Rubrik cluster.\nUse **_local_** as the primary_cluster_id of the Rubrik cluster that is hosting the current REST API session."
        },
        {
          "name": "operating_system_type",
          "schema": "string",
          "required": false,
          "description": "Filter the summary information based on the operating system type of the fileset. Accepted values: 'Windows', 'UnixLike', 'ANY', 'NONE'.\nUse **_NONE_** to only return information for fileset templates that do not have operating system type set.\nUse **_ANY_** to only return information for fileset templates that have operating system type set."
        },
        {
          "name": "share_type",
          "schema": "string",
          "required": false,
          "description": "Filter the summary information based on the share type where the fileset is assigned to. Accepted values: 'NFS', 'SMB', 'ANY', 'NONE'.\nUse **_NONE_** to only return information for fileset templates that do not have share type set.\nUse **_ANY_** to only return information for fileset templates that have share type set."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Retrieve fileset templates with a name matching the provided name. The search is performed as a case-insensitive infix search."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Specifies a comma-separated list of fileset attributes to use in sorting the fileset summary information. Performs an ASCII sort of the summary information using each specified attribute, in the order specified.\n\nValid attributes are: **_name_**, **_includes_**, **_excludes_**, **_exceptions_**, **_hostCount_**, **_shareType_**. Default sort_order is ascending."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sort order, either ascending or descending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fileset_template",
      "method": "createFilesetTemplate",
      "httpMethod": "post",
      "tag": "/fileset_template",
      "description": "Create a fileset template",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/fileset_template/{id}",
      "method": "deleteFilesetTemplate",
      "httpMethod": "delete",
      "tag": "/fileset_template",
      "description": "Delete a fileset template",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the fileset template to remove."
        },
        {
          "name": "preserve_snapshots",
          "schema": "boolean",
          "required": false,
          "description": "Flag to indicate whether to convert snapshots of all filesets of this template to relics or to delete them.  Default is true."
        }
      ],
      "responses": []
    },
    {
      "url": "/fileset_template/{id}",
      "method": "getFilesetTemplate",
      "httpMethod": "get",
      "tag": "/fileset_template",
      "description": "Get information for a fileset template",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the fileset template."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/fileset_template/{id}",
      "method": "updateFilesetTemplate",
      "httpMethod": "patch",
      "tag": "/fileset_template",
      "description": "Modify a fileset template",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the fileset template to update."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/hdfs",
      "method": "queryHdfs",
      "httpMethod": "get",
      "tag": "/hdfs",
      "description": "Get summary information for all HDFS directories",
      "parameters": [
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Filter the summary information based on the primary_cluster_id of the primary Rubrik cluster.\nUse **_local_** as the primary_cluster_id of the Rubrik cluster that is hosting the current REST API session."
        },
        {
          "name": "host_id",
          "schema": "string",
          "required": false,
          "description": "Filter the summary information based on the ID of the host referenced by the HDFS directory (name node)."
        },
        {
          "name": "is_relic",
          "schema": "boolean",
          "required": false,
          "description": "Filter the summary information based on the relic status of the HDFS directory. When this parameter is not set, the returned HDFS directory summary information is not filtered by relic status."
        },
        {
          "name": "effective_sla_domain_id",
          "schema": "string",
          "required": false,
          "description": "Filter the summary information based on the ID of the effective SLA Domain inherited by a HDFS directory.\nUse **_UNPROTECTED_** to only return information for HDFS directories that do not have an effective SLA Domain.\nUse **_PROTECTED_** to only return information for HDFS directories that have an effective SLA Domain."
        },
        {
          "name": "template_id",
          "schema": "string",
          "required": false,
          "description": "Filter the summary information based on the ID of a HDFS directory template.\nUse **_NONE_** to only return information for HDFS directories that were not created from a HDFS directory template.\nUse **_ANY_** to only return information for HDFS directories that were created from a HDFS directory template."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the summary information to a specified maximum number of HDFS directories.\nOptionally, use with **_offset_** to start the count at a specified point.\nOptionally, use with **_sort_by_** to perform sort on given attributes. Include **_sort_order_** to determine the ascending or descending direction of sort."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Starting position in the list of HDFS directory entries contained in the response. The summary information includes the specified numbered entry and all higher numbered entries. Use with **_limit_** to retrieve the summary information as a collection of grouped entries for paging."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Retrieve HDFS directories with a name matching the provided name. The search is performed as a case-insensitive infix search."
        },
        {
          "name": "host_name",
          "schema": "string",
          "required": false,
          "description": "Retrieve HDFS directories with a host name (name node) matching the provided name. The search is performed as a case-insensitive infix search."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Specifies a comma-separated list of HDFS directory attributes to use in sorting the HDFS directory summary information. Performs an ASCII sort of the summary information using each specified attribute, in the order specified.\nValid attributes are: **_name_**, **_hostName_**, **_templateType_**, **_slaName_**, **_includes_**, **_excludes_**, and **_exceptions_**. Requires **_sort_order_**."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sort order, either ascending or descending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/hdfs",
      "method": "createHdfs",
      "httpMethod": "post",
      "tag": "/hdfs",
      "description": "Create one HDFS directory for a host",
      "parameters": [
        {
          "name": "hostId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "templateId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/hdfs/request/{id}",
      "method": "getHdfsAsyncRequestStatus",
      "httpMethod": "get",
      "tag": "/hdfs",
      "description": "Get details about an asynchronous request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/hdfs/snapshot/{id}",
      "method": "deleteHdfsSnapshot",
      "httpMethod": "delete",
      "tag": "/hdfs",
      "description": "Delete a HDFS directory snapshot",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of snapshot."
        }
      ],
      "responses": []
    },
    {
      "url": "/hdfs/snapshot/{id}",
      "method": "getHdfsSnapshot",
      "httpMethod": "get",
      "tag": "/hdfs",
      "description": "Get information for a HDFS directory snapshot",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of snapshot."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/hdfs/snapshot/{id}/browse",
      "method": "browseHdfsSnapshot",
      "httpMethod": "get",
      "tag": "/hdfs",
      "description": "Lists all files and directories in a given path",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of snapshot."
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "The absolute path of the starting point for the directory listing."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Starting position in the list of path entries contained in the query results, sorted by lexicographical order. The response includes the specified numbered entry and all higher numbered entries."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Maximum number of entries in the response."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/hdfs/snapshot/{id}/export_file",
      "method": "createHdfsExportFileJob",
      "httpMethod": "post",
      "tag": "/hdfs",
      "description": "Create export job",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of snapshot."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/hdfs/snapshot/{id}/restore_file",
      "method": "createHdfsRestoreFileJob",
      "httpMethod": "post",
      "tag": "/hdfs",
      "description": "Create restore job",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of snapshot."
        },
        {
          "name": "destinationDir",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "shouldIgnoreErrors",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "sourceDir",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/hdfs/{id}",
      "method": "deleteHdfs",
      "httpMethod": "delete",
      "tag": "/hdfs",
      "description": "Delete a HDFS directory",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Provide a HDFS directory ID to delete."
        },
        {
          "name": "preserve_snapshots",
          "schema": "boolean",
          "required": false,
          "description": "A flag that indicates whether the snapshots of the HDFS directory are preserved or deleted. By default, snapshots are preserved."
        }
      ],
      "responses": []
    },
    {
      "url": "/hdfs/{id}",
      "method": "getHdfs",
      "httpMethod": "get",
      "tag": "/hdfs",
      "description": "Get information for a single HDFS directory",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Specify the HDFS directory ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/hdfs/{id}",
      "method": "updateHdfs",
      "httpMethod": "patch",
      "tag": "/hdfs",
      "description": "Update a HDFS directory",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the HDFS directory to update."
        },
        {
          "name": "configuredSlaDomainId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/hdfs/{id}/missed_snapshot",
      "method": "getMissedHdfsSnapshots",
      "httpMethod": "get",
      "tag": "/hdfs",
      "description": "Get missed snapshots for a HDFS directory",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the HDFS directory."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/hdfs/{id}/search",
      "method": "searchHdfs",
      "httpMethod": "get",
      "tag": "/hdfs",
      "description": "Search for a file within the HDFS directory",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "HDFS directory ID to search."
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "The path query. The query can be a path refix or a filename prefix."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Maximum number of entries in the response."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Pagination cursor returned by the previous request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/hdfs/{id}/snapshot",
      "method": "deleteHdfsSnapshots",
      "httpMethod": "delete",
      "tag": "/hdfs",
      "description": "Delete all snapshots of a HDFS directory",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the HDFS directory."
        }
      ],
      "responses": []
    },
    {
      "url": "/hdfs/{id}/snapshot",
      "method": "createHdfsBackupJob",
      "httpMethod": "post",
      "tag": "/hdfs",
      "description": "Initiate an on-demand backup for a HDFS directory",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the HDFS directory."
        },
        {
          "name": "slaId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/hdfs_template",
      "method": "queryHdfsTemplate",
      "httpMethod": "get",
      "tag": "/hdfs_template",
      "description": "Get summary information for all HDFS directory templates",
      "parameters": [
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Filter the summary information based on the primary_cluster_id of the primary Rubrik cluster.\nUse **_local_** as the primary_cluster_id of the Rubrik cluster that is hosting the current REST API session."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Retrieve HDFS directory templates with a name matching the provided name. The search is performed as a case-insensitive infix search."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Specifies a comma-separated list of HDFS directory attributes to use in sorting the HDFS directory summary information. Performs an ASCII sort of the summary information using each specified attribute, in the order specified.\nValid attributes are: **_name_**, **_includes_**, **_excludes_**, **_exceptions_**, **_hostCount_**. Default sort_order is ascending."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sort order, either ascending or descending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/hdfs_template",
      "method": "createHdfsTemplate",
      "httpMethod": "post",
      "tag": "/hdfs_template",
      "description": "Create a HDFS directory template",
      "parameters": [
        {
          "name": "exceptions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "excludes",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "includes",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/hdfs_template/{id}",
      "method": "deleteHdfsTemplate",
      "httpMethod": "delete",
      "tag": "/hdfs_template",
      "description": "Delete a HDFS directory template",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the HDFS directory template to remove."
        },
        {
          "name": "preserve_snapshots",
          "schema": "boolean",
          "required": false,
          "description": "A flag that indicates whether the snapshots of the HDFS directories of this template are converted to relics or deleted. By default, snapshots are converted. Set this flag to 'false' to delete the snapshots."
        }
      ],
      "responses": []
    },
    {
      "url": "/hdfs_template/{id}",
      "method": "getHdfsTemplate",
      "httpMethod": "get",
      "tag": "/hdfs_template",
      "description": "Get information for a HDFS directory template",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the HDFS directory template."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/hdfs_template/{id}",
      "method": "updateHdfsTemplate",
      "httpMethod": "patch",
      "tag": "/hdfs_template",
      "description": "Modify a HDFS directory template",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the HDFS directory template to update."
        },
        {
          "name": "exceptions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "excludes",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "includes",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/health_monitor/policies",
      "method": "getPolicies",
      "httpMethod": "get",
      "tag": "/health_monitor",
      "description": "Get details of health monitor policies",
      "parameters": [
        {
          "name": "policy_ids",
          "schema": "array",
          "required": false,
          "description": "Optional list of policy IDs."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/health_monitor/policy_status",
      "method": "getPolicyStatus",
      "httpMethod": "get",
      "tag": "/health_monitor",
      "description": "Get the status of health monitor policy enforcement",
      "parameters": [
        {
          "name": "policy_ids",
          "schema": "array",
          "required": false,
          "description": "Optional list of policy IDs. If not provided, the response includes the status of all the policies."
        },
        {
          "name": "node_ids",
          "schema": "array",
          "required": false,
          "description": "Optional list of Node IDs. If not provided, the response includes the status of all the nodes."
        },
        {
          "name": "has_detailed_status",
          "schema": "boolean",
          "required": false,
          "description": "Indicates if the policy enforcement status should include expanded result for each policy."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/health_monitor/run_policy",
      "method": "runPolicies",
      "httpMethod": "post",
      "tag": "/health_monitor",
      "description": "Enforce health monitor policies",
      "parameters": [
        {
          "name": "nodeIds",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "policyIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/hierarchy/bulk_sla_conflicts",
      "method": "bulkHierarchySlaConflictsV1",
      "httpMethod": "post",
      "tag": "/hierarchy",
      "description": "Retrieve the list of descendant objects with SLA conflicts in bulk",
      "parameters": [
        {
          "name": "ids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/host",
      "method": "queryHost",
      "httpMethod": "get",
      "tag": "/host",
      "description": "Get summary information for hosts",
      "parameters": [
        {
          "name": "operating_system_type",
          "schema": "string",
          "required": false,
          "description": "Filter the summary information based on the operating system type. Accepted values are 'Windows', 'UnixLike', 'ANY', 'NONE'.\nUse **_NONE_** to only return information for hosts templates that do not have operating system type set.\nUse **_ANY_** to only return information for hosts that have operating system type set."
        },
        {
          "name": "operating_system",
          "schema": "string",
          "required": false,
          "description": "Filter the summary information based on the operating system.\nUse **_AIX_**, **_Linux_** or **_Solaris_** to restrict the returned information to hosts with operating systems within the specified operating system family.\nUse a specific operating system release version to restrict the returned information to hosts with operating systems that match the specified version."
        },
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Filters the summary information based on the Rubrik cluster specified by the value of primary_cluster_id. Use 'local' for the Rubrik cluster that is hosting the current REST API session."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Retrieve hosts with a host name matching the provided name. The search type is infix."
        },
        {
          "name": "hostname",
          "schema": "string",
          "required": false,
          "description": "(Deprecated) Retrieve hosts with a host name matching the provided name. The search type is infix."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Specifies the host attribute to use in sorting the host summary information. Performs an ASCII sort of the summary information using the specified attribute, in the order specified.\nValid attributes are 'hostname'."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sort order, either ascending or descending."
        },
        {
          "name": "snappable_status",
          "schema": "string",
          "required": false,
          "description": "Determines whether to fetch hosts with additional privilege checks."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/host",
      "method": "registerHost",
      "httpMethod": "post",
      "tag": "/host",
      "description": "Register a host",
      "parameters": [
        {
          "name": "alias",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "hasAgent",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hdfsConfig",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "isOracleHost",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "nasConfig",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "oracleQueryUser",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oracleSysDbaUser",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "organizationId",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/host/background",
      "method": "registerHostAsync",
      "httpMethod": "post",
      "tag": "/host",
      "description": "Register a host",
      "parameters": [
        {
          "name": "alias",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "hasAgent",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hdfsConfig",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "isOracleHost",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "nasConfig",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "oracleQueryUser",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oracleSysDbaUser",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "organizationId",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/host/bulk_background",
      "method": "bulkRegisterHostAsync",
      "httpMethod": "post",
      "tag": "/host",
      "description": "Register hosts",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/host/certificate/{id}",
      "method": "updateCertificateHost",
      "httpMethod": "put",
      "tag": "/host",
      "description": "Update certificate",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the host."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/host/hierarchy/{id}",
      "method": "getHostHierarchyObject",
      "httpMethod": "get",
      "tag": "/host/hierarchy",
      "description": "Get summary of a host/share hierarchy object",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the host hierarchy object."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/host/hierarchy/{id}/children",
      "method": "getHostHierarchyChildren",
      "httpMethod": "get",
      "tag": "/host/hierarchy",
      "description": "Get immediate descendant objects",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the parent host hierarchy object. To get top-level nodes, use **root** as the ID."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Search object by object name."
        },
        {
          "name": "object_type",
          "schema": "string",
          "required": false,
          "description": "Filter by node object type."
        },
        {
          "name": "effective_sla_domain_id",
          "schema": "string",
          "required": false,
          "description": "Filter by ID of effective SLA domain."
        },
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Filter by primary cluster ID, or **local**."
        },
        {
          "name": "sla_assignment",
          "schema": "string",
          "required": false,
          "description": "Limit a response to the results that have the specified SLA Domain assignment type."
        },
        {
          "name": "template_id",
          "schema": "string",
          "required": false,
          "description": "Filter by fileset template ID."
        },
        {
          "name": "vendor_type",
          "schema": "string",
          "required": false,
          "description": "Filter by NAS vendor."
        },
        {
          "name": "export_point",
          "schema": "string",
          "required": false,
          "description": "Search object by export point."
        },
        {
          "name": "operating_system_type",
          "schema": "string",
          "required": false,
          "description": "Filter the summary information based on the operating system type. Accepted values are 'Windows', 'UnixLike', 'ANY', 'NONE'.\nUse **_NONE_** to only return information for hosts templates that do not have operating system type set.\nUse **_ANY_** to only return information for hosts that have operating system type set."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Attribute to sort the results on."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Order for sorting the results, either ascending or descending."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the number of matches returned."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Number of matches to ignore from the beginning of the results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/host/make_primary",
      "method": "hostMakePrimary",
      "httpMethod": "post",
      "tag": "/host",
      "description": "Make this cluster the primary for agents on a set of hosts",
      "parameters": [
        {
          "name": "ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "oldPrimaryClusterUuid",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/host/rbs",
      "method": "getRbsHostInfo",
      "httpMethod": "get",
      "tag": "/host",
      "description": "Get the Rubrik Backup Service details for a host",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "IP address or hostname of the host."
        },
        {
          "name": "username",
          "schema": "string",
          "required": true,
          "description": "Name of the user account that has sudo/admin privileges on the RBS host. This is required to install/uninstall/upgrade RBS packages on the RBS host."
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": "Password associated with the username that has access to the host."
        },
        {
          "name": "operation_timeout",
          "schema": "integer",
          "required": false,
          "description": "Number of seconds after which the operation is terminated if it has not completed execution. Default value is 600 seconds."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/host/rbs/install",
      "method": "rbsInstall",
      "httpMethod": "post",
      "tag": "/host",
      "description": "Install Rubrik Backup Service on a host",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/host/rbs/uninstall",
      "method": "rbsUninstall",
      "httpMethod": "post",
      "tag": "/host",
      "description": "Uninstall Rubrik Backup Service from a host",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/host/rbs/upgrade",
      "method": "rbsUpgrade",
      "httpMethod": "post",
      "tag": "/host",
      "description": "Upgrade Rubrik Backup Service on a host",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/host/share/bulk",
      "method": "bulkUpdateHostShare",
      "httpMethod": "patch",
      "tag": "/host/share",
      "description": "Update network shares",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/host/share/bulk",
      "method": "bulkAddHostShares",
      "httpMethod": "post",
      "tag": "/host/share",
      "description": "Add NAS shares in bulk",
      "parameters": [
        {
          "name": "hostId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "nasShares",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/host/{id}",
      "method": "deleteHost",
      "httpMethod": "delete",
      "tag": "/host",
      "description": "Delete a registered host",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the host to delete."
        }
      ],
      "responses": []
    },
    {
      "url": "/host/{id}",
      "method": "getHost",
      "httpMethod": "get",
      "tag": "/host",
      "description": "Get summary information for a host",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the registered host."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/host/{id}",
      "method": "updateHost",
      "httpMethod": "patch",
      "tag": "/host",
      "description": "Modify information for a registered host",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the registered host."
        },
        {
          "name": "alias",
          "schema": "string",
          "description": ""
        },
        {
          "name": "compressionEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "hdfsConfig",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hostVfdDriverInstalled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "hostVfdEnabled",
          "schema": "string",
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "description": ""
        },
        {
          "name": "isOracleHost",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "mssqlCbtDriverInstalled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "mssqlCbtEnabled",
          "schema": "string",
          "description": ""
        },
        {
          "name": "nasConfig",
          "schema": "object",
          "description": ""
        },
        {
          "name": "oracleQueryUser",
          "schema": "string",
          "description": ""
        },
        {
          "name": "oracleSysDbaUser",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/host/{id}/nas_share_discover",
      "method": "discoverNasShares",
      "httpMethod": "get",
      "tag": "/host",
      "description": "Discover and return all shares on a NAS host",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The discoverable NAS host ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/host/{id}/refresh",
      "method": "refreshHost",
      "httpMethod": "post",
      "tag": "/host",
      "description": "Refresh a host",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a host object."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/host/{id}/search",
      "method": "searchHost",
      "httpMethod": "get",
      "tag": "/host",
      "description": "Search for a file within the host",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the host to search."
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "The path query. Either path prefix or filename prefix."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/host/{id}/volume",
      "method": "queryHostVolume",
      "httpMethod": "get",
      "tag": "/host",
      "description": "Get list of Volume Group volumes",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the host."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/hyperv/vm/{id}/request/force_full_snapshot",
      "method": "getHypervVirtualMachineForceFullSpec",
      "httpMethod": "get",
      "tag": "/hyperv/vm",
      "description": "Retrieve the configuration which has been set for forcing a full snapshot for a Hyper-V Virtual Machine",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the Hyper-V virtual machine."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/hyperv/vm/{id}/request/force_full_snapshot",
      "method": "requestHypervVirtualMachineForceFullSnapshot",
      "httpMethod": "post",
      "tag": "/hyperv/vm",
      "description": "Request a full snapshot during next backup job of a Hyper-V virtual machine",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Hyper-V virtual machine."
        },
        {
          "name": "virtualDiskInfos",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/idp_auth_domain",
      "method": "queryIdProviderAuthDomain",
      "httpMethod": "get",
      "tag": "/idp_auth_domain",
      "description": "Get a list of IdP authentication domains",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/idp_auth_domain",
      "method": "createIdProviderAuthDomain",
      "httpMethod": "post",
      "tag": "/idp_auth_domain",
      "description": "Add a new IdP authentication domain",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/idp_auth_domain/{id}",
      "method": "deleteIdProviderAuthDomain",
      "httpMethod": "delete",
      "tag": "/idp_auth_domain",
      "description": "Delete an IdP authentication domain for the given ID",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the IdP authentication domain to be deleted."
        }
      ],
      "responses": []
    },
    {
      "url": "/idp_auth_domain/{id}",
      "method": "getIdProviderAuthDomain",
      "httpMethod": "get",
      "tag": "/idp_auth_domain",
      "description": "Get an IdP authentication domain for the given id",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the IdP Authentication Domain to be retrieved."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/idp_auth_domain/{id}",
      "method": "updateIdProviderAuthDomain",
      "httpMethod": "patch",
      "tag": "/idp_auth_domain",
      "description": "Update an existing IdP authentication domain",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the IdP authentication domain to be updated."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/job_monitoring",
      "method": "getJobMonitoringInfo",
      "httpMethod": "get",
      "tag": "/job_monitoring",
      "description": "Get job monitoring information",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Maximum number of entries to retrieve. The default value is 25. Value needs to be a positive number."
        },
        {
          "name": "job_event_status",
          "schema": "array",
          "required": false,
          "description": "Filters results by the current event status of the job. The filters should be separated by ','."
        },
        {
          "name": "job_type",
          "schema": "string",
          "required": false,
          "description": "Filters results by job type."
        },
        {
          "name": "should_include_log_related_job",
          "schema": "boolean",
          "required": false,
          "description": "A Boolean that specifies whether or not to include log- related jobs. Default value is 'false'."
        },
        {
          "name": "is_first_full",
          "schema": "boolean",
          "required": false,
          "description": "Filter results by first full status."
        },
        {
          "name": "object_type",
          "schema": "string",
          "required": false,
          "description": "Filters results by a specified object type."
        },
        {
          "name": "object_name",
          "schema": "string",
          "required": false,
          "description": "Filters results by the provided value for object_name, using infix search."
        },
        {
          "name": "node_name",
          "schema": "string",
          "required": false,
          "description": "Filter results by node name."
        },
        {
          "name": "effective_sla_domain_id",
          "schema": "string",
          "required": false,
          "description": "Filters results by the provided sla doimain id."
        },
        {
          "name": "is_on_demand",
          "schema": "boolean",
          "required": false,
          "description": "Filters results according to their on-demand status."
        },
        {
          "name": "last_update_time",
          "schema": "string",
          "required": false,
          "description": "All rows updated at or after this time will be returned."
        },
        {
          "name": "after_id",
          "schema": "string",
          "required": false,
          "description": "Fetches all rows after given row cursor."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "The column by which to sort the entries."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "The sorting order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/job_monitoring/csv_download_link",
      "method": "getJobMonitoringInfoCsvDownloadLink",
      "httpMethod": "get",
      "tag": "/job_monitoring",
      "description": "Download job monitoring information as a CSV file",
      "parameters": [
        {
          "name": "job_monitoring_state",
          "schema": "string",
          "required": true,
          "description": "State of the jobs in the CSV."
        },
        {
          "name": "job_event_status",
          "schema": "string",
          "required": false,
          "description": "Filters results by the current event status of the job."
        },
        {
          "name": "job_type",
          "schema": "string",
          "required": false,
          "description": "Filters results by job type."
        },
        {
          "name": "should_include_log_related_job",
          "schema": "boolean",
          "required": false,
          "description": "A Boolean that specifies whether or not to include log- related jobs. Default value is 'false'."
        },
        {
          "name": "object_type",
          "schema": "string",
          "required": false,
          "description": "Filters results by a specified object type."
        },
        {
          "name": "object_name",
          "schema": "string",
          "required": false,
          "description": "Filters results by the provided value for object_name, using infix search."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/job_monitoring/subscription",
      "method": "getMonitoringSubscriptions",
      "httpMethod": "get",
      "tag": "/job_monitoring",
      "description": "Returns all email subscriptions for the monitoring page",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/job_monitoring/subscription",
      "method": "createMonitoringSubscription",
      "httpMethod": "post",
      "tag": "/job_monitoring",
      "description": "Create an email subscription to the job monitoring page",
      "parameters": [
        {
          "name": "attachments",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "emailAddresses",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "jobStates",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "timeAttributes",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/job_monitoring/subscription/{subscription_id}",
      "method": "deleteMonitoringSubscription",
      "httpMethod": "delete",
      "tag": "/job_monitoring",
      "description": "Delete a monitoring page email subscription",
      "parameters": [
        {
          "name": "subscription_id",
          "schema": "string",
          "required": true,
          "description": "ID of the monitoring subscription to delete."
        }
      ],
      "responses": []
    },
    {
      "url": "/job_monitoring/subscription/{subscription_id}",
      "method": "getMonitoringSubscription",
      "httpMethod": "get",
      "tag": "/job_monitoring",
      "description": "Get a specific monitoring email subscription by id",
      "parameters": [
        {
          "name": "subscription_id",
          "schema": "string",
          "required": true,
          "description": "ID of the monitoring subscription to acquire."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/job_monitoring/subscription/{subscription_id}",
      "method": "updateMonitoringSubscription",
      "httpMethod": "patch",
      "tag": "/job_monitoring",
      "description": "Update a monitoring email subscription",
      "parameters": [
        {
          "name": "subscription_id",
          "schema": "string",
          "required": true,
          "description": "ID of the monitoring subscription."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/job_monitoring/summary_by_job_state",
      "method": "getMonitoringJobCountByJobState",
      "httpMethod": "get",
      "tag": "/job_monitoring",
      "description": "Get job monitoring summary information separated by job state",
      "parameters": [
        {
          "name": "job_types",
          "schema": "array",
          "required": false,
          "description": "Filter by a comma separated list of job types."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/job_monitoring/summary_by_job_type",
      "method": "getMonitoringJobCountByJobType",
      "httpMethod": "get",
      "tag": "/job_monitoring",
      "description": "Get job monitoring summary information separated by job type",
      "parameters": [
        {
          "name": "job_monitoring_state",
          "schema": "string",
          "required": true,
          "description": "Filter by job state."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ldap_service",
      "method": "queryLdapService",
      "httpMethod": "get",
      "tag": "/ldap_service",
      "description": "Get a list of LDAP services",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ldap_service",
      "method": "createLdapService",
      "httpMethod": "post",
      "tag": "/ldap_service",
      "description": "Add a new authentication domain",
      "parameters": [
        {
          "name": "advancedOptions",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "authServers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "baseDn",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "bindUserName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "bindUserPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "certificateId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dynamicDnsName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "isTotpEnforced",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "mfaServerId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/ldap_service/{id}",
      "method": "deleteLdapService",
      "httpMethod": "delete",
      "tag": "/ldap_service",
      "description": "Delete an authentication domain for the given ID",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the authentication domain to be deleted."
        }
      ],
      "responses": []
    },
    {
      "url": "/ldap_service/{id}",
      "method": "getLdapService",
      "httpMethod": "get",
      "tag": "/ldap_service",
      "description": "Get a LDAP service for the given ID",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the authentication domain to be retrieved."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ldap_service/{id}",
      "method": "patchLdapService",
      "httpMethod": "patch",
      "tag": "/ldap_service",
      "description": "Update an existing authentication domain",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the authentication domain to be updated."
        },
        {
          "name": "advancedOptions",
          "schema": "object",
          "description": ""
        },
        {
          "name": "authServers",
          "schema": "array",
          "description": ""
        },
        {
          "name": "baseDn",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bindUserName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bindUserPassword",
          "schema": "string",
          "description": ""
        },
        {
          "name": "certificateId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dynamicDnsName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "isTotpEnforced",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "mfaServerId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ldap_service/{id}",
      "method": "putLdapService",
      "httpMethod": "put",
      "tag": "/ldap_service",
      "description": "Replace the values of an authentication domain",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the authentication domain to be updated."
        },
        {
          "name": "advancedOptions",
          "schema": "object",
          "description": ""
        },
        {
          "name": "authServers",
          "schema": "array",
          "description": ""
        },
        {
          "name": "baseDn",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bindUserName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bindUserPassword",
          "schema": "string",
          "description": ""
        },
        {
          "name": "certificateId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dynamicDnsName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "isTotpEnforced",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "mfaServerId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/legal_hold/object",
      "method": "getLegalHoldObjects",
      "httpMethod": "get",
      "tag": "/legal_hold",
      "description": "Get objects part of Legal Hold",
      "parameters": [
        {
          "name": "object_id",
          "schema": "string",
          "required": false,
          "description": "Limit the list to a particular object."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the number of matches returned."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Specifies a number of initial matches to ignore."
        },
        {
          "name": "object_name",
          "schema": "string",
          "required": false,
          "description": "Limits the list to objects that match a specified value for the object name."
        },
        {
          "name": "object_type",
          "schema": "string",
          "required": false,
          "description": "Limits the list to objects that match a specified type."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "The attribute used to sort summary information. The optional parameter _sort_order_ specifies ascending or descending sort order."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Specifies ascending or descending sort order. Summary results are sorted in ascending order when this parameter is not specified."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/legal_hold/object/{id}/dissolve",
      "method": "dissolveLegalHoldSnapshots",
      "httpMethod": "post",
      "tag": "/legal_hold",
      "description": "Dissolve a collection of snapshots of specified data source from Legal Hold",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the data source."
        },
        {
          "name": "snapshotIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/legal_hold/snapshot",
      "method": "queryLegalHold",
      "httpMethod": "get",
      "tag": "/legal_hold",
      "description": "Get snasphots held under legal hold",
      "parameters": [
        {
          "name": "object_id",
          "schema": "string",
          "required": false,
          "description": "Limit the list to snapshot for the particular object."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the number of matches returned."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "An integer that specifies a number of initial matches to ignore."
        },
        {
          "name": "object_name",
          "schema": "string",
          "required": false,
          "description": "Limits the list to objects that match a specified value for the object name."
        },
        {
          "name": "object_type",
          "schema": "string",
          "required": false,
          "description": "Limits the list to objects that match a specified type."
        },
        {
          "name": "before_date",
          "schema": "string",
          "required": false,
          "description": "Limits the list to snapshots with holds created before a specified date."
        },
        {
          "name": "after_date",
          "schema": "string",
          "required": false,
          "description": "Limits the list to snapshots with holds created after a specified date."
        },
        {
          "name": "placed_on_hold_before_date",
          "schema": "string",
          "required": false,
          "description": "Limits the list to snapshots which were placed on legal hold before a specified date."
        },
        {
          "name": "placed_on_hold_after_date",
          "schema": "string",
          "required": false,
          "description": "Limits the list to snapshots which were placed on legal hold after a specified date."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "The attribute used to sort summary information. The optional parameter **_sort_order_** specifies ascending or descending sort order."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Specifies ascending or descending sort order. Summary results are sorted in ascending order when this parameter is not specified."
        },
        {
          "name": "snapshot_type",
          "schema": "string",
          "required": false,
          "description": "Specifies the type of snapshots to be returned."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/legal_hold/snapshot",
      "method": "applyLegalHold",
      "httpMethod": "post",
      "tag": "/legal_hold",
      "description": "Apply a Legal Hold",
      "parameters": [
        {
          "name": "holdConfig",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "snapshotId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/managed_volume/snapshot/export/{id}/script",
      "method": "createManagedVolumeGenerateScriptJob",
      "httpMethod": "post",
      "tag": "/managed_volume",
      "description": "Generate and download unified view script",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of snapshot export."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/mfa/rsa/server",
      "method": "queryRsaMfaServers",
      "httpMethod": "get",
      "tag": "/mfa/rsa",
      "description": "Get RSA server configuration",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mfa/rsa/server",
      "method": "createRsaMfaServer",
      "httpMethod": "post",
      "tag": "/mfa/rsa",
      "description": "Register a new RSA server",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/mfa/rsa/server/{id}",
      "method": "deleteRsaMfaServer",
      "httpMethod": "delete",
      "tag": "/mfa/rsa",
      "description": "Delete RSA server",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the RSA server."
        }
      ],
      "responses": []
    },
    {
      "url": "/mfa/rsa/server/{id}",
      "method": "getRsaMfaServer",
      "httpMethod": "get",
      "tag": "/mfa/rsa",
      "description": "Get RSA server configuration",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the RSA server."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mfa/rsa/server/{id}",
      "method": "updateRsaMfaServer",
      "httpMethod": "patch",
      "tag": "/mfa/rsa",
      "description": "Update RSA server configuration",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the RSA server."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/availability_group",
      "method": "queryMssqlAvailabilityGroupV1",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Returns summary information for Microsoft SQL availability groups",
      "parameters": [
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Filter by primary cluster."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/availability_group/{id}",
      "method": "getMssqlAvailabilityGroupV1",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Returns detailed information for a Microsoft SQL availability group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL availability group to fetch."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/availability_group/{id}",
      "method": "updateMssqlAvailabilityGroupV1",
      "httpMethod": "patch",
      "tag": "/mssql",
      "description": "Update a Microsoft SQL availability group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL availability group to update."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db",
      "method": "queryMssqlDb",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Get summary information for SQL Server databases",
      "parameters": [
        {
          "name": "instance_id",
          "schema": "string",
          "required": false,
          "description": "Filter by Microsoft SQL instance."
        },
        {
          "name": "availability_group_id",
          "schema": "string",
          "required": false,
          "description": "Filter by the `id` of an Always On Availability Group."
        },
        {
          "name": "effective_sla_domain_id",
          "schema": "string",
          "required": false,
          "description": "Filter by effective SLA domain."
        },
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Filter by primary cluster."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Filter by a substring of the database name."
        },
        {
          "name": "sla_assignment",
          "schema": "string",
          "required": false,
          "description": "SLA Assignment of the database."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the number of matches returned."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "An integer that specifies a number of initial matches to ignore."
        },
        {
          "name": "is_relic",
          "schema": "boolean",
          "required": false,
          "description": "Filter database summary information by the value of the `isRelic` field."
        },
        {
          "name": "is_live_mount",
          "schema": "boolean",
          "required": false,
          "description": "Filter database summary information by the value of the `isLiveMount` field."
        },
        {
          "name": "is_log_shipping_secondary",
          "schema": "boolean",
          "required": false,
          "description": "Filter database summary information by the value of the `isLogShippingSecondary` field."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Specifies the SQL Server Database attribute to use in sorting the summary information. Performs an ASCII sort using the specified attribute, in the order specified by sort_order."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sort order, either ascending or descending."
        },
        {
          "name": "include_backup_task_info",
          "schema": "boolean",
          "required": false,
          "description": "Include backup task information in response."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/bulk",
      "method": "bulkUpdateMssqlDbV1",
      "httpMethod": "patch",
      "tag": "/mssql",
      "description": "Update multiple Microsoft SQL databases",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/bulk/snapshot",
      "method": "createOnDemandMssqlBatchBackupV1",
      "httpMethod": "post",
      "tag": "/mssql",
      "description": "Take an on-demand backup of multiple Microsoft SQL databases",
      "parameters": [],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/bulk/snapshot/{id}",
      "method": "getOnDemandMssqlBatchBackupResultV1",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Returns details for an on-demand backup of multiple Microsoft SQL databases",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the on-demand backup request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/count",
      "method": "countMssqlDbV1",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Returns a count of Microsoft SQL databases",
      "parameters": [
        {
          "name": "root_id",
          "schema": "string",
          "required": false,
          "description": "Include only instances that belong to this root."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/defaults",
      "method": "getDefaultDbPropertiesV1",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Returns the current default properties for Microsoft SQL databases",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/defaults",
      "method": "updateDefaultDbPropertiesV1",
      "httpMethod": "patch",
      "tag": "/mssql",
      "description": "Update the default properties for Microsoft SQL databases",
      "parameters": [
        {
          "name": "cbtStatus",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "logBackupFrequencyInSeconds",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "logRetentionTimeInHours",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/log_shipping",
      "method": "queryLogShippingConfigurations",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Get log shipping configurations",
      "parameters": [
        {
          "name": "primary_database_id",
          "schema": "string",
          "required": false,
          "description": "ID of a primary database object."
        },
        {
          "name": "primary_database_name",
          "schema": "string",
          "required": false,
          "description": "Filter log shipping configuration objects by performing an infix search using the name of a primary database."
        },
        {
          "name": "secondary_database_name",
          "schema": "string",
          "required": false,
          "description": "Filter log shipping configuration objects by performing an infix search using the name of a secondary database."
        },
        {
          "name": "location",
          "schema": "string",
          "required": false,
          "description": "Filter log shipping configuration objects by performing an infix search using the location string value (host/instance) for a secondary database."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Filter log shipping configuration objects based on the status value for the secondary database."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the summary information to a specified maximum number of results."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Starting position in the list of results contained in the response. The summary information includes the specified numbered result and all higher numbered results."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Specifies an attribute used to ASCII-sort the results. Sorting by the last_applied attribute represents the timestamp as an ISO 8601-encoded string."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sort order, either ascending or descending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/log_shipping/{id}",
      "method": "deleteLogShippingConfiguration",
      "httpMethod": "delete",
      "tag": "/mssql",
      "description": "Delete a specified log shipping configuration",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of a log shipping configuration object."
        },
        {
          "name": "delete_secondary_database",
          "schema": "boolean",
          "required": false,
          "description": "Boolean value that determines whether to attempt to delete the secondary database associated with the specified log shipping configuration. The default value is false. When set to false, no attempt is made to delete the secondary database. When set to true, starts an asynchronous job to delete the secondary database."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/log_shipping/{id}",
      "method": "getLogShippingConfiguration",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Get a log shipping configuration",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of a log shipping configuration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/log_shipping/{id}",
      "method": "updateLogShippingConfiguration",
      "httpMethod": "patch",
      "tag": "/mssql",
      "description": "Update a specified log shipping configuration",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of a log shipping configuration object."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/log_shipping/{id}/reseed",
      "method": "reseedSecondary",
      "httpMethod": "post",
      "tag": "/mssql",
      "description": "Reseed a secondary database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the log shipping configuration object for the specified secondary database."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/mount",
      "method": "queryMssqlMount",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Get summary information for all Live Mounts SQL Server databases",
      "parameters": [
        {
          "name": "source_database_id",
          "schema": "string",
          "required": false,
          "description": "Filters by the ID of the source SQL Server database."
        },
        {
          "name": "source_database_name",
          "schema": "string",
          "required": false,
          "description": "Filters by the name of the source SQL Server database using infix search."
        },
        {
          "name": "target_instance_id",
          "schema": "string",
          "required": false,
          "description": "Filters by the ID of the target SQL Server instance."
        },
        {
          "name": "mounted_database_name",
          "schema": "string",
          "required": false,
          "description": "Filters by the name of the mounted SQL Server database using infix search."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Specifies the SQL Server Live Mount attribute to use in sorting the summary information. Performs an ASCII sort using the specified attribute, in the order specified by sort_order."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Specifies the sort order, either ascending or descending. Default order is ascending."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Returns the portion of the ordered list that starts after the element specified by the offset number."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Sets the maximum number of a elements to include in the data array of the response."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/mount/{id}",
      "method": "createMssqlUnmount",
      "httpMethod": "delete",
      "tag": "/mssql",
      "description": "Delete a Live Mount of a SQL Server database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Live Mount to delete."
        },
        {
          "name": "force",
          "schema": "boolean",
          "required": false,
          "description": "Remove all data within the Rubrik cluster related to the Live Mount, even if the SQL Server database cannot be contacted. Default value is false."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/mount/{id}",
      "method": "getMssqlMount",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Get detailed information for a Live Mount of a SQL Server database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Live Mount to fetch."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/recoverable_range/download/{id}",
      "method": "getDeleteMssqlDbRecoverableRangesStatusV1",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Get the deletion status of downloaded recoverable ranges",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Job ID of the deletion for which to check progress."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/snapshot/{id}",
      "method": "getMssqlDbSnapshot",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Get details information about a Microsoft SQL database snapshot",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the snapshot."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/{id}",
      "method": "getMssqlDb",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Get detailed information for a Microsoft SQL database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL database to fetch."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/{id}",
      "method": "updateMssqlDb",
      "httpMethod": "patch",
      "tag": "/mssql",
      "description": "Update a Microsoft SQL database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL database to update."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/{id}/browse",
      "method": "browseMssqlBackupFiles",
      "httpMethod": "post",
      "tag": "/mssql",
      "description": "List snapshots and logs from a Microsoft SQL database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL database."
        },
        {
          "name": "backupType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "endPoint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "legalHoldDownloadConfig",
          "schema": "object",
          "description": ""
        },
        {
          "name": "recoveryPoint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "startPoint",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/{id}/compatible_instance",
      "method": "getCompatibleMssqlInstancesV1",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Get compatible instances for the recovery of a Microsoft SQL database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL database."
        },
        {
          "name": "recovery_time",
          "schema": "string",
          "required": false,
          "description": "Time, in ISO8601 format, to recover to. For example \"2016-01-01T01:23:45.678Z\". If this is not specified, the latest recoverable time is used."
        },
        {
          "name": "recovery_type",
          "schema": "string",
          "required": true,
          "description": "Recovery type."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/{id}/download",
      "method": "downloadFromArchive",
      "httpMethod": "post",
      "tag": "/mssql",
      "description": "Download snapshots and log backups from archival",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL database."
        },
        {
          "name": "recoveryPoint",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/{id}/download_files",
      "method": "createDownloadMssqlBackupFiles",
      "httpMethod": "post",
      "tag": "/mssql",
      "description": "Download snapshots and logs backups from a Microsoft SQL Database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL database."
        },
        {
          "name": "backupType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "endPoint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "legalHoldDownloadConfig",
          "schema": "object",
          "description": ""
        },
        {
          "name": "recoveryPoint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "startPoint",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/{id}/download_files_by_id",
      "method": "createDownloadMssqlBackupFilesById",
      "httpMethod": "post",
      "tag": "/mssql",
      "description": "Downloads a list of snapshot and log backups from a Microsoft SQL database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL database."
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "legalHoldDownloadConfig",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/{id}/export",
      "method": "createExportMssqlDb",
      "httpMethod": "post",
      "tag": "/mssql",
      "description": "Export a Microsoft SQL database to a new location",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL database."
        },
        {
          "name": "allowOverwrite",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "finishRecovery",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "maxDataStreams",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "recoveryPoint",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "targetDataFilePath",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "targetDatabaseName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "targetFilePaths",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "targetInstanceId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "targetLogFilePath",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/{id}/log_backup",
      "method": "createOnDemandMssqlLogBackup",
      "httpMethod": "post",
      "tag": "/mssql",
      "description": "Take an on-demand log backup for a Microsoft SQL database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL database."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/{id}/log_shipping",
      "method": "createLogShippingConfiguration",
      "httpMethod": "post",
      "tag": "/mssql",
      "description": "Create a log shipping configuration",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the primary database object."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/{id}/missed_recoverable_range",
      "method": "getMssqlDbMissedRecoverableRanges",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Get missed recoverable ranges of a Microsoft SQL database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL database."
        },
        {
          "name": "after_time",
          "schema": "string",
          "required": false,
          "description": "Filter the missed ranges to end after this time. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678\"."
        },
        {
          "name": "before_time",
          "schema": "string",
          "required": false,
          "description": "Filter the missed ranges to start before this time. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678\"."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/{id}/missed_snapshot",
      "method": "getMissedMssqlDbSnapshots",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Get summary information for missed snapshots of a SQL database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL database."
        },
        {
          "name": "after_time",
          "schema": "string",
          "required": false,
          "description": "Filter snapshots to those missed on or after this time. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678\"."
        },
        {
          "name": "before_time",
          "schema": "string",
          "required": false,
          "description": "Filter snapshots to those missed on or before this time. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678\"."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/{id}/mount",
      "method": "createMssqlMount",
      "httpMethod": "post",
      "tag": "/mssql",
      "description": "Live Mount SQL Server database from a point in time copy",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the SQL Server database."
        },
        {
          "name": "mountedDatabaseName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "recoveryModel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "recoveryPoint",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "targetInstanceId",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/{id}/recoverable_range",
      "method": "getMssqlDbRecoverableRanges",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Get recoverable ranges of a Microsoft SQL database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL database."
        },
        {
          "name": "after_time",
          "schema": "string",
          "required": false,
          "description": "Filter ranges to end after this time. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678Z\"."
        },
        {
          "name": "before_time",
          "schema": "string",
          "required": false,
          "description": "Filter ranges to start before this time. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678\"."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/{id}/recoverable_range/download",
      "method": "deleteDownloadedMssqlDbRecoverableRangesV1",
      "httpMethod": "delete",
      "tag": "/mssql",
      "description": "Delete downloaded recoverable ranges of a Microsoft SQL database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL database."
        },
        {
          "name": "after_time",
          "schema": "string",
          "required": false,
          "description": "Delete only the downloaded snapshots and logs taken after this time. The date-time string should be in ISO8601 format. For example, \"2016-01-01T01:23:45.678\"."
        },
        {
          "name": "before_time",
          "schema": "string",
          "required": false,
          "description": "Delete only the downloaded snapshots and logs taken before this time. The date-time string should be in ISO8601 format. For example, \"2016-01-01T01:23:45.678\"."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/{id}/restore",
      "method": "createRestoreMssqlDb",
      "httpMethod": "post",
      "tag": "/mssql",
      "description": "Restore a Microsoft SQL database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL database."
        },
        {
          "name": "finishRecovery",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "maxDataStreams",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "recoveryPoint",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/{id}/restore_estimate",
      "method": "mssqlRestoreEstimateV1",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Returns a size estimate for a restore or export",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL database."
        },
        {
          "name": "time",
          "schema": "string",
          "required": false,
          "description": "Time, in ISO8601 date-time format, to recover to. For example, \"2016-01-01T01:23:45.678\". This value or the LSN are required."
        },
        {
          "name": "lsn",
          "schema": "string",
          "required": false,
          "description": "LSN to recover to. This value or the LSN are required."
        },
        {
          "name": "recovery_fork_guid",
          "schema": "string",
          "required": false,
          "description": "Recovery fork GUID of LSN to recover to. Meaningful only when lsn is specified."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/{id}/restore_files",
      "method": "mssqlGetRestoreFilesV1",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Returns a list all database files to be restored",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL database."
        },
        {
          "name": "time",
          "schema": "string",
          "required": false,
          "description": "Time, in ISO8601 date-time format, to recover to. For example, \"2016-01-01T01:23:45.678\". This value or the LSN are required."
        },
        {
          "name": "lsn",
          "schema": "string",
          "required": false,
          "description": "LSN to recover to. This value or the time are required."
        },
        {
          "name": "recovery_fork_guid",
          "schema": "string",
          "required": false,
          "description": "Recovery fork GUID of LSN to recover to. Meaningful only when lsn is specified."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/{id}/snappable_id",
      "method": "mssqlGetSnappableIdV1",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Returns the snappableId for a Microsoft SQL database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL database."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/{id}/snapshot",
      "method": "deleteMssqlDbSnapshots",
      "httpMethod": "delete",
      "tag": "/mssql",
      "description": "Delete all snapshots of a Microsoft SQL database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL database."
        }
      ],
      "responses": []
    },
    {
      "url": "/mssql/db/{id}/snapshot",
      "method": "queryMssqlDbSnapshot",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Get summary information for snapshots of a Microsoft SQL database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL database."
        },
        {
          "name": "after_time",
          "schema": "string",
          "required": false,
          "description": "Filter snapshots to those taken on or after this time. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678\"."
        },
        {
          "name": "before_time",
          "schema": "string",
          "required": false,
          "description": "Filter snapshots to those taken before or on this time. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678\"."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/db/{id}/snapshot",
      "method": "createOnDemandMssqlBackup",
      "httpMethod": "post",
      "tag": "/mssql",
      "description": "Take an on-demand backup of a Microsoft SQL database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL database."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/hierarchy/{id}",
      "method": "getMssqlHierarchyObject",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Get summary of a SQL Server hierarchy object",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the SQL Server hierarchy object."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/hierarchy/{id}/children",
      "method": "getMssqlHierarchyChildren",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Get list of immediate descendant objects",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the parent SQL Server hierarchy object. To get top-level nodes, use **root** as the ID.\n"
        },
        {
          "name": "effective_sla_domain_id",
          "schema": "string",
          "required": false,
          "description": "Filter by the ID of the effective SLA Domain."
        },
        {
          "name": "object_type",
          "schema": "array",
          "required": false,
          "description": "Filter by a comma-separated list of node object types.\n"
        },
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Filter by primary cluster ID, or **local**."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the number of matches returned."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "An integer that specifies the number of initial matches to ignore.\n"
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Filter children by provided name."
        },
        {
          "name": "is_relic",
          "schema": "boolean",
          "required": false,
          "description": "Filter by the value of the `isRelic` field for nodes with object type MssqlDatabase."
        },
        {
          "name": "is_live_mount",
          "schema": "boolean",
          "required": false,
          "description": "Filter database by the value of the `isLiveMount` field for nodes with object type MssqlDatabase."
        },
        {
          "name": "is_log_shipping_secondary",
          "schema": "boolean",
          "required": false,
          "description": "Filter by the value of the `isLogShippingSecondary` field for nodes with object type MssqlDatabase."
        },
        {
          "name": "is_clustered",
          "schema": "boolean",
          "required": false,
          "description": "Filter by the value of the `isClustered` field for nodes with object type MssqlDatabase or MssqlInstance."
        },
        {
          "name": "has_instances",
          "schema": "boolean",
          "required": false,
          "description": "Boolean that filters top-level nodes with the Host or WindowsCluster object type by whether or not the nodes have children MssqlInstance nodes. When this value is 'true,' the filter shows only nodes with children MssqlInstance nodes. When this value is 'false,' the filter shows only nodes without children MssqlInstance nodes."
        },
        {
          "name": "sla_assignment",
          "schema": "string",
          "required": false,
          "description": "Filter by SLA assignment type."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Attribute to sort the results on."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sort order, either ascending or descending."
        },
        {
          "name": "snappable_status",
          "schema": "string",
          "required": false,
          "description": "Determines whether SQL Server instances are fetched with additional privilege checks."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/hierarchy/{id}/descendants",
      "method": "getMssqlHierarchyDescendants",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Get list of descendant objects",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the parent SQL server hierarchy object. To get top-level nodes, use **root** as the ID.\n"
        },
        {
          "name": "effective_sla_domain_id",
          "schema": "string",
          "required": false,
          "description": "Filter by the ID of the effective SLA Domain."
        },
        {
          "name": "object_type",
          "schema": "array",
          "required": false,
          "description": "Filter by a comma-separated list of node object types.\n"
        },
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Filter by primary cluster ID, or **local**."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the number of matches returned."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "An integer that specifies the number of initial matches to ignore.\n"
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Filter descendants by provided name."
        },
        {
          "name": "is_relic",
          "schema": "boolean",
          "required": false,
          "description": "Filter by the value of the `isRelic` field for nodes with MssqlDatabase as the value of the object type field."
        },
        {
          "name": "is_live_mount",
          "schema": "boolean",
          "required": false,
          "description": "Filter database by the value of the `isLiveMount` field for nodes with MssqlDatabase as the value of the object type field."
        },
        {
          "name": "is_log_shipping_secondary",
          "schema": "boolean",
          "required": false,
          "description": "Filter by the value of the `isLogShippingSecondary` field for nodes with MssqlDatabase as the value of the object type field."
        },
        {
          "name": "is_clustered",
          "schema": "boolean",
          "required": false,
          "description": "Filter by the value of the `isClustered` field for nodes with object type MssqlDatabase or MssqlInstance."
        },
        {
          "name": "has_instances",
          "schema": "boolean",
          "required": false,
          "description": "Boolean that filters top-level nodes with the Host or WindowsCluster object type by whether or not the nodes have children MssqlInstance nodes. When this value is 'true,' the filter shows only nodes with children MssqlInstance nodes. When this value is 'false,' the filter shows only nodes without children MssqlInstance nodes."
        },
        {
          "name": "sla_assignment",
          "schema": "string",
          "required": false,
          "description": "Filter by SLA Domain assignment type."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Attribute to sort the results on."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sort order, either ascending or descending."
        },
        {
          "name": "snappable_status",
          "schema": "string",
          "required": false,
          "description": "Determines whether SQL Server instances are fetched with additional privilege checks."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/host/configuration",
      "method": "queryMssqlHostConfig",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Get the summary of SQL Server host configurations",
      "parameters": [
        {
          "name": "host_id",
          "schema": "array",
          "required": false,
          "description": "IDs of the hosts."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/host/configuration",
      "method": "createMssqlHostConfig",
      "httpMethod": "post",
      "tag": "/mssql",
      "description": "Create a SQL Server host configuration",
      "parameters": [],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/host/configuration/{host_id}",
      "method": "deleteMssqlHostConfig",
      "httpMethod": "delete",
      "tag": "/mssql",
      "description": "Delete the SQL Server host configuration",
      "parameters": [
        {
          "name": "host_id",
          "schema": "string",
          "required": true,
          "description": "ID of the host."
        }
      ],
      "responses": []
    },
    {
      "url": "/mssql/host/configuration/{host_id}",
      "method": "getMssqlHostConfig",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Get the configuration for a specific host",
      "parameters": [
        {
          "name": "host_id",
          "schema": "string",
          "required": true,
          "description": "ID of the host."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/host/configuration/{host_id}",
      "method": "updateMssqlHostConfig",
      "httpMethod": "patch",
      "tag": "/mssql",
      "description": "Update host configuration",
      "parameters": [
        {
          "name": "host_id",
          "schema": "string",
          "required": true,
          "description": "ID of the SQL Server host to update the host configuration."
        },
        {
          "name": "enableDatabaseBatchSnapshots",
          "schema": "string",
          "description": ""
        },
        {
          "name": "enableGroupFetch",
          "schema": "string",
          "description": ""
        },
        {
          "name": "enableVdi",
          "schema": "string",
          "description": ""
        },
        {
          "name": "enableVdiDb",
          "schema": "string",
          "description": ""
        },
        {
          "name": "fileRestoreReadParallelism",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "fileRestoreWriteParallelism",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "fileTransferParallelism",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "mssqlDefaultMaxDataStreamsPerDatabase",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "physicalHostDatabaseRestoreThrottleMaxRefCount",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "physicalHostLogBackupThrottleMaxRefCount",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "throttlePhysicalHostMaxRefCount",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/instance",
      "method": "queryMssqlInstance",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Get summary information for Microsoft SQL instances",
      "parameters": [
        {
          "name": "root_id",
          "schema": "string",
          "required": false,
          "description": "Include only instances that belong to this root."
        },
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Limits the instances returned within one cluster specified by primary_cluster_id."
        },
        {
          "name": "snappable_status",
          "schema": "string",
          "required": false,
          "description": "Determines whether SQL Server instances are fetched with additional privilege checks."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/instance/count",
      "method": "countMssqlInstanceV1",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Returns a count of Microsoft SQL instances",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/instance/{id}",
      "method": "getMssqlInstance",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Get detailed information for a Microsoft SQL instance",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL instance."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/instance/{id}",
      "method": "updateMssqlInstance",
      "httpMethod": "patch",
      "tag": "/mssql",
      "description": "Update a Microsoft SQL instance",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Microsoft SQL instance."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/request/{id}",
      "method": "getMssqlAsyncRequestStatus",
      "httpMethod": "get",
      "tag": "/mssql",
      "description": "Get details for an async request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the async request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mssql/sla_domain/assign",
      "method": "assignMssqlSlaProperties",
      "httpMethod": "post",
      "tag": "/mssql",
      "description": "Assign SLA properties to SQL Server objects",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/oracle/aco_example_download_link",
      "method": "getExampleAcoDownloadLink",
      "httpMethod": "get",
      "tag": "/oracle",
      "description": "Link to download the Advanced Recovery Options example file",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/oracle/aco_parameter_list",
      "method": "getAcoParameterList",
      "httpMethod": "get",
      "tag": "/oracle",
      "description": "List of supported Advanced Cloning Options",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/oracle/data_guard_group/{id}",
      "method": "updateOracleDataGuardGroup",
      "httpMethod": "patch",
      "tag": "/oracle",
      "description": "Update an Oracle Data Guard group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to an Oracle Data Guard group object."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/oracle/db",
      "method": "queryOracleDbV1",
      "httpMethod": "get",
      "tag": "/oracle",
      "description": "Get summary information for Oracle databases",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Filters a response by making an infix comparison of the database name, SID, and tablespaces in the response with the specified value."
        },
        {
          "name": "sla_assignment",
          "schema": "string",
          "required": false,
          "description": "Limits the response to Oracle databases that are protected by the specified type of SLA Domain assignment."
        },
        {
          "name": "effective_sla_domain_id",
          "schema": "string",
          "required": false,
          "description": "Filters by effective SLA Domain ID."
        },
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Limits the response to Oracle databases that have the specified primary cluster value."
        },
        {
          "name": "is_relic",
          "schema": "boolean",
          "required": false,
          "description": "Limits the response to Oracle databases that have the specified isRelic value."
        },
        {
          "name": "is_live_mount",
          "schema": "boolean",
          "required": false,
          "description": "Limits the response to Oracle databases that have the specified isLiveMount value."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limits the summary information to the specified number of matches. Optionally, it can be used with offset to begin the count of matches at the number specified in the offset parameter, and with sort_by to sort the results by the specified attribute."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Determines the elements to include in the response starting with the element at the index number specified here. Optionally used with limit to enable paging of the results by retrieving a smaller number of elements in the response."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Specifies a comma-separated list of attributes to use in sorting the matches. Performs an ASCII sort of the values in the response using each specified attribute, in the order specified."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Specifies the ascending or descending order to sort the elements in the response by the attributes specified in the sort_by parameter."
        },
        {
          "name": "include_backup_task_info",
          "schema": "boolean",
          "required": false,
          "description": "Specifies whether to include the backup task information in the response."
        },
        {
          "name": "is_data_guard_group",
          "schema": "boolean",
          "required": false,
          "description": "Limits the response to Oracle databases that have the specified value for the isDataGuardGroup flag."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/oracle/db/bulk",
      "method": "bulkUpdateOracleDb",
      "httpMethod": "patch",
      "tag": "/oracle",
      "description": "Update Oracle Databases",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/oracle/db/{id}",
      "method": "getOracleDbV1",
      "httpMethod": "get",
      "tag": "/oracle",
      "description": "Get Oracle database information",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of an Oracle database object."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/oracle/db/{id}",
      "method": "updateOracleDbV1",
      "httpMethod": "patch",
      "tag": "/oracle",
      "description": "Update an Oracle database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of an Oracle database object."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/oracle/db/{id}/downloaded_snapshots",
      "method": "deleteDownloadedSnapshots",
      "httpMethod": "delete",
      "tag": "/oracle",
      "description": "Delete downloaded Oracle database snapshots and log snapshots",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Oracle database."
        },
        {
          "name": "after_time",
          "schema": "string",
          "required": false,
          "description": "Uses the ISO 8601 format to specify the start of the time period used by the asynchronous snapshot expiration job, as in the example \"2016-01-01T01:23:45.678\"."
        },
        {
          "name": "before_time",
          "schema": "string",
          "required": false,
          "description": "Uses the ISO 8601 format to specify the end of the time period used by the asynchronous snapshot expiration job, as in the example \"2016-01-01T01:23:45.678\"."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/oracle/db/{id}/restore_estimate",
      "method": "oracleRestoreEstimate",
      "httpMethod": "get",
      "tag": "/oracle",
      "description": "Get a size estimate for a restore or export",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Oracle database."
        },
        {
          "name": "snapshot_id",
          "schema": "string",
          "required": false,
          "description": "ID of the snapshot to recover to."
        },
        {
          "name": "recovery_time",
          "schema": "string",
          "required": false,
          "description": "The date and time for the recovery restore point, specified in the ISO 8601 format, as in the example \"2016-01-01T01:23:45.678\"."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/oracle/db/{id}/validate",
      "method": "createOracleValidateBackupJob",
      "httpMethod": "post",
      "tag": "/oracle",
      "description": "Validate Oracle database backups",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the database to be validated."
        },
        {
          "name": "numChannels",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "recoveryPoint",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "sgaMaxSizeInMb",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "targetMountPath",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "targetOracleHome",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "targetOracleHostOrRacId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/oracle/host/bulk",
      "method": "bulkUpdateOracleHost",
      "httpMethod": "patch",
      "tag": "/oracle",
      "description": "Update Oracle Hosts",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/oracle/rac/bulk",
      "method": "bulkUpdateOracleRac",
      "httpMethod": "patch",
      "tag": "/oracle",
      "description": "Update Oracle RACs",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/oracle/validate_aco_file",
      "method": "validateOracleAcoFile",
      "httpMethod": "post",
      "tag": "/oracle",
      "description": "Validate Oracle ACO file",
      "parameters": [
        {
          "name": "is_live_mount",
          "schema": "boolean",
          "required": true,
          "description": "Boolean that determines whether the ACO file is being used for a Live Mount."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organization/{id}/envoy/bulk",
      "method": "bulkDeleteEnvoys",
      "httpMethod": "delete",
      "tag": "/organization",
      "description": "Remove a list of Rubrik Envoy objects",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to an organization object."
        },
        {
          "name": "envoyIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/organization/{id}/envoy/bulk",
      "method": "bulkUpdateEnvoys",
      "httpMethod": "patch",
      "tag": "/organization",
      "description": "Update a list of Rubrik Envoy objects",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to an organization object."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/organization/{id}/envoy/bulk",
      "method": "bulkCreateEnvoys",
      "httpMethod": "post",
      "tag": "/organization",
      "description": "Create a list of Rubrik Envoy objects",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to an organization object."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/principal",
      "method": "searchPrincipalsV1",
      "httpMethod": "get",
      "tag": "/principal",
      "description": "Search for principals",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Maximum number of results to return."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Starting offset of the results to return."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Attribute by which to sort. Default is \"name\"."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sort order. Default order is ascending."
        },
        {
          "name": "auth_domain_id",
          "schema": "string",
          "required": false,
          "description": "ID of the authentication domain that contains the principal."
        },
        {
          "name": "organization_id",
          "schema": "string",
          "required": false,
          "description": "ID of the organization of which the principal is a member."
        },
        {
          "name": "is_assigned_roles_or_is_local",
          "schema": "boolean",
          "required": false,
          "description": "A Boolean that specifies whether the principal has any roles assigned or is a local user. When a principal is a local user, or when the principal has any roles assigned, this value is 'true'.\n"
        },
        {
          "name": "role_id",
          "schema": "string",
          "required": false,
          "description": "ID of a role assigned to the principal."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "The name of the principal."
        },
        {
          "name": "principal_type",
          "schema": "string",
          "required": false,
          "description": "The type of principal."
        },
        {
          "name": "is_totp_enabled",
          "schema": "boolean",
          "required": false,
          "description": "Indicates if the principal has TOTP authentication enabled. Returns the users with TOTP authentication enabled when the value is true.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/principal/role",
      "method": "getRolesForPrincipals",
      "httpMethod": "get",
      "tag": "/principal",
      "description": "Get roles assigned to principals",
      "parameters": [
        {
          "name": "principals",
          "schema": "array",
          "required": true,
          "description": "IDs of the principals."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/principal/role",
      "method": "assignRolesToPrincipals",
      "httpMethod": "post",
      "tag": "/principal",
      "description": "Assign roles to principals",
      "parameters": [
        {
          "name": "principals",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "roles",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/principal/role/bulk_revoke",
      "method": "revokeRolesFromPrincipals",
      "httpMethod": "post",
      "tag": "/principal",
      "description": "Revoke roles from principals",
      "parameters": [
        {
          "name": "principals",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "roles",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/replication/location_pause/disable",
      "method": "disablePerLocationPause",
      "httpMethod": "post",
      "tag": "/replication",
      "description": "Resume replication from specified source clusters",
      "parameters": [
        {
          "name": "shouldSkipOldSnapshots",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "sourceClusterUuids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/replication/location_pause/enable",
      "method": "enablePerLocationPause",
      "httpMethod": "post",
      "tag": "/replication",
      "description": "Pause replication from specified source clusters",
      "parameters": [
        {
          "name": "shouldCancelImmediately",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "sourceClusterUuids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/report/compliance_summary",
      "method": "getComplianceSummaryV1",
      "httpMethod": "get",
      "tag": "/reports",
      "description": "Get compliance summary information",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/compliance_summary_sla",
      "method": "getComplianceSummarySlav1",
      "httpMethod": "get",
      "tag": "/reports",
      "description": "Get compliance summary information",
      "parameters": [
        {
          "name": "snapshot_range",
          "schema": "string",
          "required": true,
          "description": "An SLA Domain-based range of snapshots. Compliance is calculated for snapshots in the range."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/report/config",
      "method": "setReportConfig",
      "httpMethod": "patch",
      "tag": "/reports",
      "description": "Modify the report config",
      "parameters": [
        {
          "name": "cleanupReportJobInstanceForLogJobs",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/role",
      "method": "getRoles",
      "httpMethod": "get",
      "tag": "/role",
      "description": "Get all roles in an organization",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Maximum number of results to return."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Starting offset of the results to return."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Attribute used to sort the role list."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sort order used, ascending or descending."
        },
        {
          "name": "organization_id",
          "schema": "string",
          "required": false,
          "description": "The ID of the organization the roles are a part of. When empty, the Rubrik cluster infers the organization from the session.\n"
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "The name of the role."
        },
        {
          "name": "role_template",
          "schema": "array",
          "required": false,
          "description": "List of comma-separated role templates by which to filter the roles.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/role",
      "method": "createRole",
      "httpMethod": "post",
      "tag": "/role",
      "description": "Create a new role",
      "parameters": [
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "organizationId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "roleTemplate",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/role/{id}",
      "method": "deleteRole",
      "httpMethod": "delete",
      "tag": "/role",
      "description": "Delete a role",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the role."
        }
      ],
      "responses": []
    },
    {
      "url": "/role/{id}",
      "method": "getRole",
      "httpMethod": "get",
      "tag": "/role",
      "description": "Get role information for the specified role",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the role."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/role/{id}",
      "method": "updateRole",
      "httpMethod": "patch",
      "tag": "/role",
      "description": "Update role information",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the role."
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/saml/authn_request/{idp_name}",
      "method": "makeSamlAuthnRequest",
      "httpMethod": "post",
      "tag": "/saml",
      "description": "Make SAML authentication request",
      "parameters": [
        {
          "name": "idp_name",
          "schema": "string",
          "required": true,
          "description": "Name of the IdP Authentication Domain to authenticate with."
        },
        {
          "name": "isForIdpTest",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "redirectPath",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/saml/rubrik_metadata",
      "method": "configRubrikSamlMetadata",
      "httpMethod": "post",
      "tag": "/saml",
      "description": "Configure and generate Rubrik SAML metadata",
      "parameters": [
        {
          "name": "hostAddress",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/saml/sso_status",
      "method": "getSamlSsoStatus",
      "httpMethod": "get",
      "tag": "/saml",
      "description": "Check SAML SSO Status",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sap_hana/db",
      "method": "querySapHanaDatabases",
      "httpMethod": "get",
      "tag": "/sap_hana",
      "description": "Get summary information for discovered SAP HANA databases",
      "parameters": [
        {
          "name": "effective_sla_domain_id",
          "schema": "string",
          "required": false,
          "description": "The ID of the SLA Domain that controls the protection of the host."
        },
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "The ID of the Rubrik cluster that provides primary protection for the SAP HANA databases."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "The name of the SAP HANA database."
        },
        {
          "name": "sla_assignment",
          "schema": "string",
          "required": false,
          "description": "The name of the SLA Domain that controls the protection of the SAP HANA database."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the number of matches returned."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "An integer that specifies a number of initial matches to ignore."
        },
        {
          "name": "is_relic",
          "schema": "boolean",
          "required": false,
          "description": "Specify whether the SAP HANA database is accessible on the Rubrik cluster."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Specifies the SAP HANA Database attribute to use in sorting the summary information."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "The order to sort the responses by. Valid choices are asc (ascending) and desc (descending)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sap_hana/db/request/{id}",
      "method": "getSapHanaDbAsyncRequestStatus",
      "httpMethod": "get",
      "tag": "/sap_hana",
      "description": "Get the status of a SAP HANA database request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sap_hana/db/snapshot/{id}",
      "method": "deleteSapHanaDbSnapshot",
      "httpMethod": "delete",
      "tag": "/sap_hana",
      "description": "Delete a particular full snapshot of a SAP HANA database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a SAP HANA database full snapshot."
        }
      ],
      "responses": []
    },
    {
      "url": "/sap_hana/db/snapshot/{id}",
      "method": "getSapHanaDbSnapshot",
      "httpMethod": "get",
      "tag": "/sap_hana",
      "description": "Get SAP HANA database snapshot details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of snapshot."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sap_hana/db/{id}",
      "method": "getSapHanaDatabase",
      "httpMethod": "get",
      "tag": "/sap_hana",
      "description": "Get detailed information for an SAP HANA database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the SAP HANA database."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sap_hana/db/{id}",
      "method": "patchSapHanaDatabase",
      "httpMethod": "patch",
      "tag": "/sap_hana",
      "description": "Update the SLA Domain for an SAP HANA database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the SAP HANA database."
        },
        {
          "name": "configuredSlaDomainId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "logSnapshotJobIntervalInMinutes",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sap_hana/db/{id}/configure_restore",
      "method": "configureSapHanaRestore",
      "httpMethod": "post",
      "tag": "/sap_hana",
      "description": "Configure the target database for system copy restore",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the target SAP HANA database to be configured."
        },
        {
          "name": "snappable_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/sap_hana/db/{id}/missed_snapshot",
      "method": "getMissedSapHanaDbSnapshots",
      "httpMethod": "get",
      "tag": "/sap_hana",
      "description": "Retrieve summary information for missed snapshots of a SAP HANA database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the SAP HANA database."
        },
        {
          "name": "after_time",
          "schema": "string",
          "required": false,
          "description": "Filter for snapshots that are missed on or after this time. The date-time string must be in ISO8601 format, for example, \"2016-01-01T01:23:45.678\"."
        },
        {
          "name": "before_time",
          "schema": "string",
          "required": false,
          "description": "Filter for snapshots that are missed on or before this time. The date-time string must be in ISO8601 format, for example, \"2016-01-01T01:23:45.678\"."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sap_hana/db/{id}/recoverable_range",
      "method": "getSapHanaDbRecoverableRanges",
      "httpMethod": "get",
      "tag": "/sap_hana",
      "description": "Get recoverable ranges of a SAP HANA database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the SAP HANA database."
        },
        {
          "name": "after_time",
          "schema": "string",
          "required": false,
          "description": "Filter ranges to end after this time. The date-time string should be in an ISO8601 format. For example, \"2016-01-01T01:23:45.678Z\"."
        },
        {
          "name": "before_time",
          "schema": "string",
          "required": false,
          "description": "Filter ranges to start before this time. The date-time string should be in an ISO8601 format. For example, \"2016-01-01T01:23:45.678Z\"."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sap_hana/db/{id}/snapshot",
      "method": "querySapHanaDbSnapshot",
      "httpMethod": "get",
      "tag": "/sap_hana",
      "description": "Get a summary list of snapshots for a SAP HANA database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a SAP HANA database object."
        },
        {
          "name": "backup_type",
          "schema": "string",
          "required": false,
          "description": "Filter snapshots to those of a particular backup type."
        },
        {
          "name": "after_time",
          "schema": "string",
          "required": false,
          "description": "Filter snapshots to those taken on or after this time. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678\"."
        },
        {
          "name": "before_time",
          "schema": "string",
          "required": false,
          "description": "Filter snapshots to those taken before or on this time. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678\"."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sap_hana/db/{id}/snapshot",
      "method": "createOnDemandSapHanaBackup",
      "httpMethod": "post",
      "tag": "/sap_hana",
      "description": "Create on demand database snapshot",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a SAP HANA database object."
        },
        {
          "name": "slaId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/sap_hana/db/{id}/unconfigure_restore",
      "method": "unconfigureSapHanaRestore",
      "httpMethod": "post",
      "tag": "/sap_hana",
      "description": "Reset the configuration for system copy restore on target database",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to target SAP HANA database object."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/sap_hana/system",
      "method": "querySapHanaSystems",
      "httpMethod": "get",
      "tag": "/sap_hana",
      "description": "Get summary information for added SAP HANA systems",
      "parameters": [
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "The ID of the Rubrik cluster that provides primary protection for the SAP HANA databases."
        },
        {
          "name": "sid",
          "schema": "string",
          "required": false,
          "description": "The SAP System Identification (SID) code for the SAP HANA system."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the number of matches returned."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "An integer that specifies a number of initial matches to ignore."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "The SAP HANA system attribute to use in sorting the responses."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "The order to sort the responses by. Valid choices are asc (ascending) and desc (descending)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sap_hana/system",
      "method": "addSapHanaSystem",
      "httpMethod": "post",
      "tag": "/sap_hana",
      "description": "Add a SAP HANA system",
      "parameters": [
        {
          "name": "dataPathSpec",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "hostIds",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "instanceNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/sap_hana/system/request/{id}",
      "method": "getSapHanaSystemAsyncRequestStatus",
      "httpMethod": "get",
      "tag": "/sap_hana",
      "description": "Get the status of a SAP HANA system request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the request object used to poll the status."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sap_hana/system/{id}",
      "method": "deleteSapHanaSystem",
      "httpMethod": "delete",
      "tag": "/sap_hana",
      "description": "Delete a SAP HANA system",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the SAP HANA system."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/sap_hana/system/{id}",
      "method": "getSapHanaSystem",
      "httpMethod": "get",
      "tag": "/sap_hana",
      "description": "Get summary information for a SAP HANA system",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the SAP HANA system."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sap_hana/system/{id}",
      "method": "patchSapHanaSystem",
      "httpMethod": "patch",
      "tag": "/sap_hana",
      "description": "Update the SLA Domain for a SAP HANA system",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the SAP HANA system."
        },
        {
          "name": "configuredSlaDomainId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "hostIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "instanceNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/sap_hana/system/{id}/refresh",
      "method": "createSapHanaSystemRefresh",
      "httpMethod": "post",
      "tag": "/sap_hana",
      "description": "Refresh SAP HANA system metadata",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the SAP HANA system."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/session",
      "method": "createSession",
      "httpMethod": "post",
      "tag": "/session",
      "description": "Create user session",
      "parameters": [
        {
          "name": "organization_id",
          "schema": "string",
          "required": false,
          "description": "Bind the new session to the specified organization. When this parameter is not specified, the session will be bound to an organization chosen according to the user's preferences and authorizations."
        },
        {
          "name": "realm",
          "schema": "string",
          "required": false,
          "description": "Bind the new session to the specified directory. When this parameter is unspecified, the session will be bound to local domain."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/session/{id}",
      "method": "deleteSession",
      "httpMethod": "delete",
      "tag": "/session",
      "description": "Delete user session",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Session ID or  *me* for session of bearer token."
        }
      ],
      "responses": []
    },
    {
      "url": "/sla_domain",
      "method": "querySlaDomain",
      "httpMethod": "get",
      "tag": "/sla_domain",
      "description": "Get list of SLA Domains",
      "parameters": [
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Limits the information retrieved to those SLA Domains that are associated with the Rubrik cluster ID that is specified by primary_cluster_id. Use **local** for the Rubrik cluster that is hosting the current REST API session."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Limit the list information to those SLA Domains which match the specified SLA Domain 'name' value."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Attribute to use to sort the SLA Domains summary information. Optionally use **_sort_order_** to specify whether to sort in ascending or descending order."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sort order, either ascending or descending. If not specified, SLA Domain summary results will be sorted in ascending order."
        },
        {
          "name": "data_sources",
          "schema": "array",
          "required": false,
          "description": "Limit the list information to SLA Domains that can be assigned to specified data sources."
        },
        {
          "name": "snapshot_ids",
          "schema": "array",
          "required": false,
          "description": "Limit the list information to SLA Domains that can be assigned to specified snapshots."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sla_domain",
      "method": "createSlaDomain",
      "httpMethod": "post",
      "tag": "/sla_domain",
      "description": "Create SLA Domain",
      "parameters": [
        {
          "name": "allowedBackupWindows",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "archivalSpecs",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "firstFullAllowedBackupWindows",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "frequencies",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "isRetentionLocked",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "localRetentionLimit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "replicationSpecs",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/sla_domain/assign_to_downloaded_snapshots",
      "method": "assignSlaToDownloadedSnapshots",
      "httpMethod": "post",
      "tag": "/sla_domain",
      "description": "Assign retention SLA Domain to the downloaded snapshots of a single object",
      "parameters": [
        {
          "name": "objectId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "slaDomainId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "snapshotIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/sla_domain/{id}",
      "method": "deleteSlaDomain",
      "httpMethod": "delete",
      "tag": "/sla_domain",
      "description": "Remove SLA Domain",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the SLA Domain."
        }
      ],
      "responses": []
    },
    {
      "url": "/sla_domain/{id}",
      "method": "getSlaDomain",
      "httpMethod": "get",
      "tag": "/sla_domain",
      "description": "Get SLA Domain details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the SLA Domain."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sla_domain/{id}",
      "method": "patchSlaDomain",
      "httpMethod": "patch",
      "tag": "/sla_domain",
      "description": "Patch SLA Domain",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the SLA Domain."
        },
        {
          "name": "should_apply_to_existing_snapshots",
          "schema": "boolean",
          "required": false,
          "description": "A Boolean that determines whether the new configuration retains existing snapshots of data sources that are currently retained by this SLA Domain. The value is 'true' by default."
        },
        {
          "name": "allowedBackupWindows",
          "schema": "array",
          "description": ""
        },
        {
          "name": "archivalSpecs",
          "schema": "array",
          "description": ""
        },
        {
          "name": "firstFullAllowedBackupWindows",
          "schema": "array",
          "description": ""
        },
        {
          "name": "frequencies",
          "schema": "array",
          "description": ""
        },
        {
          "name": "isRetentionLocked",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "localRetentionLimit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "replicationSpecs",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sla_domain/{id}",
      "method": "updateSlaDomain",
      "httpMethod": "put",
      "tag": "/sla_domain",
      "description": "Update SLA Domain",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the SLA Domain."
        },
        {
          "name": "should_apply_to_existing_snapshots",
          "schema": "boolean",
          "required": false,
          "description": "A Boolean that determines whether the new configuration retains existing snapshots of data sources that are currently retained by this SLA Domain. The value is 'true' by default."
        },
        {
          "name": "allowedBackupWindows",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "archivalSpecs",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "firstFullAllowedBackupWindows",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "frequencies",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "isRetentionLocked",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "localRetentionLimit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "replicationSpecs",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/snapshot/{id}/storage/stats",
      "method": "getSnapshotStorageStatsV1",
      "httpMethod": "get",
      "tag": "/snapshot",
      "description": "Returns storage stats for a snapshot",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a snapshot object."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/syslog/export",
      "method": "getSyslogExportRules",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get the configured syslog export rules",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/syslog/export",
      "method": "addSyslogExportRule",
      "httpMethod": "post",
      "tag": "/cluster",
      "description": "Add a new syslog export rule",
      "parameters": [
        {
          "name": "certificateId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "enableTls",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "facility",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "port",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "protocol",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "severity",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/syslog/export/test",
      "method": "testSyslogExportRule",
      "httpMethod": "post",
      "tag": "/cluster",
      "description": "Test the specified syslog export rule",
      "parameters": [
        {
          "name": "certificateId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "enableTls",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "facility",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "port",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "protocol",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "severity",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/syslog/export/{id}",
      "method": "deleteSyslogExportRule",
      "httpMethod": "delete",
      "tag": "/cluster",
      "description": "Delete the specified syslog export rule",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the syslog export rule."
        }
      ],
      "responses": []
    },
    {
      "url": "/syslog/export/{id}",
      "method": "getSyslogExportRule",
      "httpMethod": "get",
      "tag": "/cluster",
      "description": "Get the specified syslog export rule",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of syslog export rule."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/syslog/export/{id}",
      "method": "updateSyslogExportRule",
      "httpMethod": "patch",
      "tag": "/cluster",
      "description": "Update the specified syslog export rule",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of syslog export rule."
        },
        {
          "name": "certificateId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "enableTls",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "facility",
          "schema": "string",
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "description": ""
        },
        {
          "name": "port",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "protocol",
          "schema": "string",
          "description": ""
        },
        {
          "name": "severity",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/unmanaged_object",
      "method": "queryUnmanagedObjectV1",
      "httpMethod": "get",
      "tag": "/unmanaged_object",
      "description": "Get summary of all the objects with unmanaged snapshots",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the number of matches returned."
        },
        {
          "name": "after_id",
          "schema": "string",
          "required": false,
          "description": "First unmanaged object after which objects should be retrieved."
        },
        {
          "name": "search_value",
          "schema": "string",
          "required": false,
          "description": "Filters by the object name using infix search."
        },
        {
          "name": "unmanaged_status",
          "schema": "string",
          "required": false,
          "description": "Filters by object status. Valid status are Protected, Unprotected, and Relic."
        },
        {
          "name": "object_type",
          "schema": "string",
          "required": false,
          "description": "Filter by the type of the unmanaged object."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Sort the result by given attribute."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "The sort order. The default sort order is ascending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/unmanaged_object/assign_retention_sla",
      "method": "assignToRetentionSlaAsync",
      "httpMethod": "post",
      "tag": "/unmanaged_object",
      "description": "Assign relic/unmanaged entities to an SLA Domain for managing retention asynchronously",
      "parameters": [
        {
          "name": "managedIds",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "shouldApplyToNonPolicySnapshots",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "slaDomainId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/unmanaged_object/reader_object",
      "method": "queryUnmanagedReaderObject",
      "httpMethod": "get",
      "tag": "/unmanaged_object",
      "description": "Get summary of all unmanaged reader objects",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the number of matches returned."
        },
        {
          "name": "after_id",
          "schema": "string",
          "required": false,
          "description": "Retrieve objects after the unmanaged object with the specified ID."
        },
        {
          "name": "object_name",
          "schema": "string",
          "required": false,
          "description": "Search object by object name."
        },
        {
          "name": "unmanaged_status",
          "schema": "string",
          "required": false,
          "description": "Filters by object status. Valid status are Protected, Unprotected, and Relic."
        },
        {
          "name": "object_type",
          "schema": "string",
          "required": false,
          "description": "Filter by the type of the unmanaged object."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Sort the result by given attribute."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "The sort order. The default sort order is ascending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/unmanaged_object/snapshot/bulk_archive_tier",
      "method": "bulkTierExistingSnapshots",
      "httpMethod": "post",
      "tag": "/unmanaged_object",
      "description": "Bulk tier existing snapshots to cold storage",
      "parameters": [
        {
          "name": "locationId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "objectIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/unmanaged_object/{id}/snapshot",
      "method": "queryUnmanagedObjectSnapshotsV1",
      "httpMethod": "get",
      "tag": "/unmanaged_object",
      "description": "Get summary of all the snapshots for a given object",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of a object."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the number of matches returned."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Ignore these many matches in the beginning."
        },
        {
          "name": "search_value",
          "schema": "string",
          "required": false,
          "description": "Search snapshot by date and time."
        },
        {
          "name": "snapshot_type",
          "schema": "string",
          "required": false,
          "description": "Filter by snapshot type. Valid types are OnDemand, PolicyBased, Retrieved."
        },
        {
          "name": "before_date",
          "schema": "string",
          "required": false,
          "description": "Filter all the snapshots before a date."
        },
        {
          "name": "after_date",
          "schema": "string",
          "required": false,
          "description": "Filter all the snapshots after a date."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Sort by given attribute."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "The sort order. The default sort order is ascending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/user/lockout",
      "method": "getUserAccountLockoutSettings",
      "httpMethod": "get",
      "tag": "/user",
      "description": "Get the local user account lockout settings",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/user/lockout",
      "method": "manageUserAccountLockoutSettings",
      "httpMethod": "patch",
      "tag": "/user",
      "description": "Update the local user account lockout settings",
      "parameters": [
        {
          "name": "accountLockoutDurationInMinutes",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "maxFailedLoginsForLocalUser",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/user/{id}/totp/config",
      "method": "resetTotp",
      "httpMethod": "delete",
      "tag": "/user",
      "description": "Reset the TOTP for the given user",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The user account object ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/user/{id}/totp/config",
      "method": "setupTotp",
      "httpMethod": "put",
      "tag": "/user",
      "description": "Configure the TOTP secret for the given user",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The user account object ID."
        },
        {
          "name": "otpForValidation",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "secret",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/user/{id}/totp/new_secret",
      "method": "generateTotpSecret",
      "httpMethod": "post",
      "tag": "/user",
      "description": "Generate a TOTP secret key for the given user",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The user account object ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/user/{id}/totp/status",
      "method": "getTotpStatus",
      "httpMethod": "get",
      "tag": "/user",
      "description": "Get the TOTP status for the given user",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The user account object ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/user/{id}/unlock",
      "method": "unlockUser",
      "httpMethod": "post",
      "tag": "/user",
      "description": "Unlock a user account",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the user account that has been locked."
        }
      ],
      "responses": []
    },
    {
      "url": "/user_defined_tag",
      "method": "deleteUserDefinedTagBulk",
      "httpMethod": "delete",
      "tag": "/user_defined_tag",
      "description": "Delete a list of user-defined resource tags",
      "parameters": [
        {
          "name": "ids",
          "schema": "array",
          "required": true,
          "description": "An array of IDs of the user-defined resource tags to be deleted. Any non-existent ID in the array will be ignored.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Lists the IDs of resource tags that were deleted successfully.\n"
        }
      ]
    },
    {
      "url": "/user_defined_tag",
      "method": "queryUserDefinedTag",
      "httpMethod": "get",
      "tag": "/user_defined_tag",
      "description": "Get user-defined resource tags",
      "parameters": [
        {
          "name": "key",
          "schema": "string",
          "required": false,
          "description": "Filter results by resource tag."
        },
        {
          "name": "scope_ref_id",
          "schema": "string",
          "required": false,
          "description": "Filter results by archival location id."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Returns the results of a query on user-defined resource tags.\n"
        }
      ]
    },
    {
      "url": "/user_defined_tag",
      "method": "createUserDefinedTag",
      "httpMethod": "post",
      "tag": "/user_defined_tag",
      "description": "Create a user-defined resource tag for tagging cloud compute resources",
      "parameters": [
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "scopeRefId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "value",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Provides the details for a user-defined resource tag, which tags cloud compute resources created by CloudOn and CloudOut.\n"
        }
      ]
    },
    {
      "url": "/user_defined_tag/{id}",
      "method": "deleteUserDefinedTag",
      "httpMethod": "delete",
      "tag": "/user_defined_tag",
      "description": "Delete a user-defined resource tag",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the user-defined resource tag."
        }
      ],
      "responses": []
    },
    {
      "url": "/user_defined_tag/{id}",
      "method": "getUserDefinedTag",
      "httpMethod": "get",
      "tag": "/user_defined_tag",
      "description": "Get user-defined tag",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the user-defined resource tag."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Provides the details for a user-defined resource tag, which tags cloud compute resources created by CloudOn and CloudOut.\n"
        }
      ]
    },
    {
      "url": "/user_defined_tag/{id}",
      "method": "updateUserDefinedTag",
      "httpMethod": "patch",
      "tag": "/user_defined_tag",
      "description": "Update the value of a user-defined resource tag",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the user-defined resource tag."
        },
        {
          "name": "value",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Provides the details for a user-defined resource tag, which tags cloud compute resources created by CloudOn and CloudOut.\n"
        }
      ]
    },
    {
      "url": "/vcd/cluster",
      "method": "queryVcdClusterV1",
      "httpMethod": "get",
      "tag": "/vcd/cluster",
      "description": "Get summary for all vCD Clusters",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Search for a vCD Cluster object by name."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Filter the results using the status value of the vCD Cluster objects."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Attribute to sort the results on."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Order for sorting the results, either ascending or descending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/cluster",
      "method": "createVcdClusterV1",
      "httpMethod": "post",
      "tag": "/vcd/cluster",
      "description": "Add a vCD Cluster",
      "parameters": [],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/cluster/request/{id}",
      "method": "getVcdClusterAsyncRequestStatusV1",
      "httpMethod": "get",
      "tag": "/vcd/cluster",
      "description": "Get vCD Cluster job status",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to an asynchronous job."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/cluster/{id}",
      "method": "deleteVcdClusterV1",
      "httpMethod": "delete",
      "tag": "/vcd/cluster",
      "description": "Remove vCD Cluster",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a vCD Cluster object."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/cluster/{id}",
      "method": "getVcdClusterV1",
      "httpMethod": "get",
      "tag": "/vcd/cluster",
      "description": "Get vCD Cluster details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a vCD Cluster object."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/cluster/{id}",
      "method": "updateVcdClusterV1",
      "httpMethod": "patch",
      "tag": "/vcd/cluster",
      "description": "Change vCD Cluster object",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a vCD Cluster object."
        },
        {
          "name": "caCerts",
          "schema": "string",
          "description": ""
        },
        {
          "name": "configuredSlaDomainId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/cluster/{id}/refresh",
      "method": "refreshVcdClusterV1",
      "httpMethod": "post",
      "tag": "/vcd/cluster",
      "description": "Refresh a vCD Cluster",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a vCD Cluster object."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/cluster/{id}/vimserver",
      "method": "queryVcdVimServerV1",
      "httpMethod": "get",
      "tag": "/vcd/cluster",
      "description": "Get VimServers of a vCD Cluster",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a vCD Cluster object."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Attribute to sort the results on."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Order for sorting the results, either ascending or descending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/hierarchy/{id}",
      "method": "getVcdHierarchyObjectV1",
      "httpMethod": "get",
      "tag": "/vcd/hierarchy",
      "description": "Get summary of a vCD hierarchy object",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the vCD hierarchy object."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/hierarchy/{id}/children",
      "method": "getVcdHierarchyChildrenV1",
      "httpMethod": "get",
      "tag": "/vcd/hierarchy",
      "description": "Get immediate descendant objects",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the parent vCD hierarchy object. To get top-level nodes, use **root** as the ID."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Attribute to sort the results on."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Order for sorting the results, either ascending or descending."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the number of matches returned."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Number of matches to ignore from the beginning of the results."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Search object by object name."
        },
        {
          "name": "is_relic",
          "schema": "boolean",
          "required": false,
          "description": "Filter by isRelic field of vCD vApp hierarchy object. Return both relic and non-relic children when this value is not specified."
        },
        {
          "name": "effective_sla_domain_id",
          "schema": "string",
          "required": false,
          "description": "Filter by ID of effective SLA domain."
        },
        {
          "name": "object_type",
          "schema": "string",
          "required": false,
          "description": "Filter by node object type."
        },
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Filter by primary cluster ID, or **local**."
        },
        {
          "name": "sla_assignment",
          "schema": "string",
          "required": false,
          "description": "Filter by SLA assignment type."
        },
        {
          "name": "snappable_status",
          "schema": "string",
          "required": false,
          "description": "Filters vCD hierarchy objects based on the specified query value."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/hierarchy/{id}/descendants",
      "method": "getVcdHierarchyDescendantsV1",
      "httpMethod": "get",
      "tag": "/vcd/hierarchy",
      "description": "Get list of descendant objects",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the parent vCD hierarchy object. To get top-level nodes, use **root** as the ID."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Attribute to sort the results on."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Order for sorting the results, either ascending or descending."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the number of matches returned."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Ignore these many matches in the beginning."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Search object by object name."
        },
        {
          "name": "is_relic",
          "schema": "boolean",
          "required": false,
          "description": "Filter by isRelic field of vCD vApp hierarchy object. Return both relic and non-relic descendants if this query is not set."
        },
        {
          "name": "effective_sla_domain_id",
          "schema": "string",
          "required": false,
          "description": "Filter by ID of effective SLA domain."
        },
        {
          "name": "object_type",
          "schema": "string",
          "required": false,
          "description": "Filter by node object type."
        },
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Filter by primary cluster ID, or **local**."
        },
        {
          "name": "sla_assignment",
          "schema": "string",
          "required": false,
          "description": "Filter by SLA assignment type."
        },
        {
          "name": "snappable_status",
          "schema": "string",
          "required": false,
          "description": "Filters vCD hierarchy objects based on the specified query value."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/vapp",
      "method": "queryVcdVappsV1",
      "httpMethod": "get",
      "tag": "/vcd/vapp",
      "description": "Get summary for vApps",
      "parameters": [
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Attribute to sort the vCD vApp list on."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Order for sorting the results, either ascending or descending."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the number of matches returned."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Number of matches to ignore from the beginning of the results."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Search for a vCD vApp object by name."
        },
        {
          "name": "is_relic",
          "schema": "boolean",
          "required": false,
          "description": "Filter by isRelic field of vCD vApp object. Return both relic and non-relic vApps when this value is not specified."
        },
        {
          "name": "effective_sla_domain_id",
          "schema": "string",
          "required": false,
          "description": "Filter by ID of the effective SLA domain."
        },
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Filter by primary cluster ID, or **local**."
        },
        {
          "name": "sla_assignment",
          "schema": "string",
          "required": false,
          "description": "Filter by SLA assignment type."
        },
        {
          "name": "include_backup_task_info",
          "schema": "boolean",
          "required": false,
          "description": "Include backup task information in response."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/vapp/request/{id}",
      "method": "getVappAsyncRequestStatusV1",
      "httpMethod": "get",
      "tag": "/vcd/vapp",
      "description": "Get vApp job status",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to an asynchronous job."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/vapp/snapshot/{id}",
      "method": "deleteVappSnapshotV1",
      "httpMethod": "delete",
      "tag": "/vcd/vapp",
      "description": "Delete a vApp snapshot",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a snapshot object."
        },
        {
          "name": "location",
          "schema": "string",
          "required": true,
          "description": "Location of the snapshot to delete. Use _local_ to delete only the local copy of the snapshot. Use _all_ to delete the snapshot locally, on a replication target, and at an archival location."
        }
      ],
      "responses": []
    },
    {
      "url": "/vcd/vapp/snapshot/{id}",
      "method": "getVappSnapshotV1",
      "httpMethod": "get",
      "tag": "/vcd/vapp",
      "description": "Get vApp snapshot details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a snapshot object."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/vapp/snapshot/{id}/download",
      "method": "createVcdVappDownloadSnapshotFromCloudV1",
      "httpMethod": "post",
      "tag": "/vcd/vapp",
      "description": "Download snapshot from archive",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of snapshot."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/vapp/snapshot/{snapshot_id}/export",
      "method": "createVappExportV1",
      "httpMethod": "post",
      "tag": "/vcd/vapp",
      "description": "Export vApp snapshot",
      "parameters": [
        {
          "name": "snapshot_id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to the vApp snapshot object."
        },
        {
          "name": "exportMode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "networksToRestore",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "newVappParams",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "shouldPowerOnVappAfterExport",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "targetVappId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "vmsToExport",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/vapp/snapshot/{snapshot_id}/export/options",
      "method": "getVappSnapshotExportOptionsV1",
      "httpMethod": "get",
      "tag": "/vcd/vapp",
      "description": "Get exportable network configurations",
      "parameters": [
        {
          "name": "snapshot_id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to the vApp snapshot object to export."
        },
        {
          "name": "export_mode",
          "schema": "string",
          "required": true,
          "description": "Target type for the specified vApp export."
        },
        {
          "name": "target_vapp_id",
          "schema": "string",
          "required": false,
          "description": "ID assigned to the target vApp object, when the export is into an existing vApp. When the export is not into a target vApp, remove the 'target_vapp_id' member."
        },
        {
          "name": "target_org_vdc_id",
          "schema": "string",
          "required": false,
          "description": "ID assigned to a target organization VDC object. Use the ID when exporting a vApp snapshot to create a new vApp on the specified target organization VDC. When the exported vApp snapshot is not used to create a new vApp on a target organization VDC, remove the 'target_org_vdc_id' member."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/vapp/snapshot/{snapshot_id}/instant_recover",
      "method": "createVappInstantRecoveryV1",
      "httpMethod": "post",
      "tag": "/vcd/vapp",
      "description": "Instant Recovery of vApp virtual machines",
      "parameters": [
        {
          "name": "snapshot_id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to the vApp snapshot object."
        },
        {
          "name": "shouldPowerOnVmsAfterRecovery",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "vmsToRestore",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/vapp/snapshot/{snapshot_id}/instant_recover/options",
      "method": "getVappSnapshotInstantRecoveryOptionsV1",
      "httpMethod": "get",
      "tag": "/vcd/vapp",
      "description": "Get Instant Recovery information",
      "parameters": [
        {
          "name": "snapshot_id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a vApp snapshot object."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/vapp/template/snapshot/{snapshot_id}/export",
      "method": "createVappTemplateSnapshotExport",
      "httpMethod": "post",
      "tag": "/vcd/vapp",
      "description": "Export of a vApp template snapshot",
      "parameters": [
        {
          "name": "snapshot_id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a vApp snapshot object."
        },
        {
          "name": "catalogId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orgVdcId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "storagePolicyId",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/vapp/template/snapshot/{snapshot_id}/export/options",
      "method": "getVappTemplateSnapshotExportOptions",
      "httpMethod": "get",
      "tag": "/vcd/vapp",
      "description": "Get Export information for a vApp template snapshot",
      "parameters": [
        {
          "name": "snapshot_id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a vApp snapshot object."
        },
        {
          "name": "catalog_id",
          "schema": "string",
          "required": true,
          "description": "ID of the target catalog object."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of template object to create. This is used to verify the existence of a template with the given name. Templates must have unique names."
        },
        {
          "name": "org_vdc_id",
          "schema": "string",
          "required": false,
          "description": "ID assigned to a target organization vDC object. Use the ID when exporting a vApp template snapshot to a specified organization VDC. This ID is used to fetch the avaiable choices to pick the storage profile of the template. Leave this field empty to use the options from the original organization vDC or the target catalog defaults."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Provides different options available for a vApp template snapshot export. Fields that correspond to unavailable choices are skipped."
        }
      ]
    },
    {
      "url": "/vcd/vapp/{id}",
      "method": "getVcdVappV1",
      "httpMethod": "get",
      "tag": "/vcd/vapp",
      "description": "Get details of a specific vApp",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a vApp object."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/vapp/{id}",
      "method": "updateVcdVappV1",
      "httpMethod": "patch",
      "tag": "/vcd/vapp",
      "description": "Update vApp",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a vApp object."
        },
        {
          "name": "configuredSlaDomainId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "isBestEffortSynchronizationEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "isPaused",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "vcdVmMoidsToExcludeFromSnapshot",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/vapp/{id}/missed_snapshot",
      "method": "vcdMissedSnapshotsV1",
      "httpMethod": "get",
      "tag": "/vcd/vapp",
      "description": "Get details about missed snapshots for a vApp",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the vApp."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/vapp/{id}/search",
      "method": "searchVappV1",
      "httpMethod": "get",
      "tag": "/vcd/vapp",
      "description": "Search for a file in a vApp",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the vApp."
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "The path query. Use either a path prefix or a filename prefix."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/vapp/{id}/snapshot",
      "method": "deleteVappSnapshotsV1",
      "httpMethod": "delete",
      "tag": "/vcd/vapp",
      "description": "Delete all snapshots of vApp",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a vApp object."
        }
      ],
      "responses": []
    },
    {
      "url": "/vcd/vapp/{id}/snapshot",
      "method": "queryVappSnapshotV1",
      "httpMethod": "get",
      "tag": "/vcd/vapp",
      "description": "Get list of snapshots of vApp",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a vApp object."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vcd/vapp/{id}/snapshot",
      "method": "createOnDemandSnapshotV1",
      "httpMethod": "post",
      "tag": "/vcd/vapp",
      "description": "Create an on-demand snapshot for a vApp",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a vApp object."
        },
        {
          "name": "slaId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/compute_cluster",
      "method": "queryComputeCluster",
      "httpMethod": "get",
      "tag": "/vmware/compute_cluster",
      "description": "Get all the clusters belonging to this datacenter",
      "parameters": [
        {
          "name": "datacenter_id",
          "schema": "string",
          "required": false,
          "description": "Filter clusters on data center ID."
        },
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Filter on a primary cluster ID. Also accepts value 'local'."
        },
        {
          "name": "snappable_status",
          "schema": "string",
          "required": false,
          "description": "Determines whether to fetch Compute Clusters with additional privilege checks."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/compute_cluster/request/{id}",
      "method": "getAsyncRequestStatusForComputeCluster",
      "httpMethod": "get",
      "tag": "/vmware/compute_cluster",
      "description": "Get asynchronous request details for VMware cluster",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of an asynchronous request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/compute_cluster/{id}",
      "method": "getComputeCluster",
      "httpMethod": "get",
      "tag": "/vmware/compute_cluster",
      "description": "Get details for the compute cluster",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the compute cluster."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/compute_cluster/{id}",
      "method": "updateComputeCluster",
      "httpMethod": "patch",
      "tag": "/vmware/compute_cluster",
      "description": "Modify information for a VMware compute cluster",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the compute cluster."
        },
        {
          "name": "configuredSlaDomainId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/compute_cluster/{id}/install_io_filter",
      "method": "installIoFilter",
      "httpMethod": "post",
      "tag": "/vmware/compute_cluster",
      "description": "Install the Rubrik ioFilter to the VMware cluster with a specific ID",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the VMware compute cluster."
        },
        {
          "name": "fqdn",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/compute_cluster/{id}/io_filter",
      "method": "getIoFilters",
      "httpMethod": "get",
      "tag": "/vmware/compute_cluster",
      "description": "Get the ioFilters on the VMware compute cluster with a specific ID",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the VMware compute cluster."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/compute_cluster/{id}/uninstall_io_filter",
      "method": "uninstallIoFilter",
      "httpMethod": "post",
      "tag": "/vmware/compute_cluster",
      "description": "Uninstall the Rubrik ioFilter from the VMware cluster with a specific ID",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the VMware compute cluster."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/compute_cluster/{id}/upgrade_io_filter",
      "method": "upgradeIoFilter",
      "httpMethod": "post",
      "tag": "/vmware/compute_cluster",
      "description": "Upgrade the Rubrik ioFilter for the VMware cluster with a specific ID",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the VMware compute cluster."
        },
        {
          "name": "fqdn",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/config/cdp/get_preferred_cdp_network_protocol",
      "method": "getPreferredCdpNetworkProtocol",
      "httpMethod": "get",
      "tag": "/vmware/config",
      "description": "Returns the current preference of CDM between IPv4 and IPv6 for CDP data transfer",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/config/cdp/set_preferred_cdp_network_protocol",
      "method": "setPreferredCdpNetworkProtocol",
      "httpMethod": "patch",
      "tag": "/vmware/config",
      "description": "Set the current preference of CDM between IPv4 and IPv6 for CDP data transfer",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/config/recovery/networks",
      "method": "getVmwareRecoveryNetworks",
      "httpMethod": "get",
      "tag": "/vmware/config",
      "description": "Get all the VMware recovery networks for a compute resource ID",
      "parameters": [
        {
          "name": "compute_resource_id",
          "schema": "string",
          "required": true,
          "description": "Get VMware recovery networks for the compute resource ID."
        },
        {
          "name": "compute_resource_type",
          "schema": "string",
          "required": true,
          "description": "The type of the compute resource."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of VMware networks."
        }
      ]
    },
    {
      "url": "/vmware/hierarchy/export",
      "method": "getVmwareHierarchyExport",
      "httpMethod": "get",
      "tag": "/vmware/hierarchy",
      "description": "Get Available VMware Hierarchy Objects for Export Operations",
      "parameters": [
        {
          "name": "root_id",
          "schema": "string",
          "required": false,
          "description": "Get child objects of given root ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/hierarchy/{id}/export",
      "method": "getVmwareHierarchyObject",
      "httpMethod": "get",
      "tag": "/vmware/hierarchy",
      "description": "Get VMware Hierarchy Object Information",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Get VMware hierarchy objects of given ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/host",
      "method": "queryVmwareHost",
      "httpMethod": "get",
      "tag": "/vmware/host",
      "description": "Get summary of all the ESXi hypervisor",
      "parameters": [
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "ID of the Primary cluster."
        },
        {
          "name": "compute_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Filter by ID of Compute Cluster."
        },
        {
          "name": "snappable_status",
          "schema": "string",
          "required": false,
          "description": "Requests additional data about VMware Hosts based on the specified query value."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/host/{id}",
      "method": "getVmwareHost",
      "httpMethod": "get",
      "tag": "/vmware/host",
      "description": "Get details of a ESXi hypervisor",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the VMWare host."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/host/{id}",
      "method": "updateVmwareHost",
      "httpMethod": "patch",
      "tag": "/vmware/host",
      "description": "Update the SLA Domain for an ESXi hypervisor",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the ESXi hypervisor."
        },
        {
          "name": "configuredSlaDomainId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/host/{id}/datastore",
      "method": "getVmwareHostDatastore",
      "httpMethod": "get",
      "tag": "/vmware/host",
      "description": "Get details of datastores in a ESXi hypervisor",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the VMWare host."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vcenter",
      "method": "queryVcenter",
      "httpMethod": "get",
      "tag": "/vmware/vcenter",
      "description": "Get list of vCenters",
      "parameters": [
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Limits the information to the Rubrik cluster specified by the value of primary_cluster_id. Use 'local' for the Rubrik cluster that is hosting the current REST API session."
        },
        {
          "name": "snappable_status",
          "schema": "string",
          "required": false,
          "description": "Determines whether to fetch vCenters with additional privilege checks."
        },
        {
          "name": "ignore_connection_status",
          "schema": "boolean",
          "required": false,
          "description": "Don't ping vCenters for connection status. The connection_status field in the response is unusable."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vcenter",
      "method": "createVcenter",
      "httpMethod": "post",
      "tag": "/vmware/vcenter",
      "description": "Add vCenter Server",
      "parameters": [
        {
          "name": "caCerts",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "computeVisibilityFilter",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "conflictResolutionAuthz",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vcenter/hotadd/vm",
      "method": "queryHotAddProxyVm",
      "httpMethod": "get",
      "tag": "/vmware/vcenter",
      "description": "Get a list of HotAdd proxy virtual machines",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Limit the list information to HotAdd proxy virtual machines that match the specified HotAdd proxy virtual machine 'name' value."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Attribute to use to sort the HotAdd proxy virtual machines summary information. Optionally use **_sort_order_** to specify whether to sort in ascending or descending order."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sort order, either ascending or descending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vcenter/request/{id}",
      "method": "getVcenterAsyncRequestStatus",
      "httpMethod": "get",
      "tag": "/vmware/vcenter",
      "description": "Get vCenter Server async request",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vcenter/{id}",
      "method": "deleteVcenter",
      "httpMethod": "delete",
      "tag": "/vmware/vcenter",
      "description": "Remove vCenter Server",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the vCenter Server. to remove."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vcenter/{id}",
      "method": "getVcenter",
      "httpMethod": "get",
      "tag": "/vmware/vcenter",
      "description": "Get the details of a vCenter Server",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the vCenter Server."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vcenter/{id}",
      "method": "patchVcenter",
      "httpMethod": "patch",
      "tag": "/vmware/vcenter",
      "description": "Update the SLA Domain for a vCenter Server",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the vCenter Server."
        },
        {
          "name": "caCerts",
          "schema": "string",
          "description": ""
        },
        {
          "name": "configuredSlaDomainId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vcenter/{id}",
      "method": "updateVcenter",
      "httpMethod": "put",
      "tag": "/vmware/vcenter",
      "description": "Update vCenter Server",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the vCenter Server."
        },
        {
          "name": "caCerts",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "computeVisibilityFilter",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "conflictResolutionAuthz",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vcenter/{id}/hotadd/bandwidth",
      "method": "getHotAddBandwidth",
      "httpMethod": "get",
      "tag": "/vmware/vcenter",
      "description": "Get the ingest and export bandwidth limits for HotAdd with the vCenter",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the vCenter server from which to derive the number of proxies needed."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vcenter/{id}/hotadd/bandwidth",
      "method": "setHotAddBandwidth",
      "httpMethod": "post",
      "tag": "/vmware/vcenter",
      "description": "Set the ingest and export bandwidth limits for HotAdd with the vCenter",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the vCenter server upon which the Rubrik cluster is setting the HotAdd bandwidth limits."
        },
        {
          "name": "exportLimit",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "ingestLimit",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/vmware/vcenter/{id}/hotadd/needed",
      "method": "getNumProxiesNeeded",
      "httpMethod": "get",
      "tag": "/vmware/vcenter",
      "description": "Get the number of HotAdd proxies needed for the vCenter",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the vCenter server for which to get the number of proxies needed."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vcenter/{id}/hotadd/network",
      "method": "getHotAddNetwork",
      "httpMethod": "get",
      "tag": "/vmware/vcenter",
      "description": "Retrieve the user-configured network for HotAdd operations",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the vCenter server for which the Rubrik cluster is retrieving the configured HotAdd network information."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vcenter/{id}/hotadd/network",
      "method": "setHotAddNetwork",
      "httpMethod": "post",
      "tag": "/vmware/vcenter",
      "description": "Set the user-configured network for HotAdd backup and recovery",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the vCenter server for which the Rubrik cluster is setting the HotAdd network information."
        },
        {
          "name": "network_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "static_ip_info",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/vmware/vcenter/{id}/networks",
      "method": "getNetworks",
      "httpMethod": "get",
      "tag": "/vmware/vcenter",
      "description": "Get the user-configured networks in the vCenter",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the vCenter server for which to retrieve user-configured networks."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vcenter/{id}/refresh",
      "method": "createRefresh",
      "httpMethod": "post",
      "tag": "/vmware/vcenter",
      "description": "Refresh vCenter Server metadata",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the vCenter Server."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vcenter/{id}/refresh_vm",
      "method": "createRefreshVmV1",
      "httpMethod": "post",
      "tag": "/vmware/vcenter",
      "description": "Refresh single virtual machine metadata in a vcenter",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the vCenter server that controls the management of the virtual machine whose metadata will be refreshed."
        }
      ],
      "responses": []
    },
    {
      "url": "/vmware/vm",
      "method": "queryVm",
      "httpMethod": "get",
      "tag": "/vmware/vm",
      "description": "Get list of VMs",
      "parameters": [
        {
          "name": "effective_sla_domain_id",
          "schema": "string",
          "required": false,
          "description": "Filter by ID of effective SLA Domain."
        },
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Filter by primary cluster ID, or **local**."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the number of matches returned."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Ignore these many matches in the beginning."
        },
        {
          "name": "is_relic",
          "schema": "boolean",
          "required": false,
          "description": "Filter by the isRelic field of the virtual machine. When this parameter is not set, return both relic and non-relic virtual machines."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Search by using a virtual machine name."
        },
        {
          "name": "moid",
          "schema": "string",
          "required": false,
          "description": "Search by using a virtual machine managed object ID."
        },
        {
          "name": "sla_assignment",
          "schema": "string",
          "required": false,
          "description": "Filter by SLA Domain assignment type."
        },
        {
          "name": "guest_os_name",
          "schema": "string",
          "required": false,
          "description": "Filters by the name of operating system using infix search."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "Sort results based on the specified attribute."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "Sort order, either ascending or descending."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/batch_mount",
      "method": "batchMountSnapshot",
      "httpMethod": "post",
      "tag": "/vmware/vm",
      "description": "Live mount a snapshot each from a set of virtual machines",
      "parameters": [
        {
          "name": "snapshots",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/cdp",
      "method": "getVmwareCdpLiveInfo",
      "httpMethod": "post",
      "tag": "/vmware/vm",
      "description": "Returns the live CDP info for a set of CDP-enabled virtual machines",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/cdp_state",
      "method": "getVmwareCdpStateInfo",
      "httpMethod": "post",
      "tag": "/vmware/vm",
      "description": "Returns CDP state info for a set of virtual machines",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/make_primary",
      "method": "vmMakePrimary",
      "httpMethod": "post",
      "tag": "/vmware/vm",
      "description": "Make this cluster the primary for agents on a set of VMs",
      "parameters": [],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/missed_recoverable_range",
      "method": "getVmwareVmMissedRecoverableRangesInBatch",
      "httpMethod": "post",
      "tag": "/vmware/vm",
      "description": "Returns the recoverable ranges that were missed for a set of CDP-enabled virtual machines",
      "parameters": [
        {
          "name": "after_time",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "before_time",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "vmIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/recoverable_range",
      "method": "getVmwareVmRecoverableRangesInBatch",
      "httpMethod": "post",
      "tag": "/vmware/vm",
      "description": "Returns the recoverable ranges for a set of CDP-enabled virtual machines",
      "parameters": [
        {
          "name": "after_time",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "before_time",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "vmIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/request/{id}",
      "method": "getAsyncRequestStatus",
      "httpMethod": "get",
      "tag": "/vmware/vm",
      "description": "Get asynchronous request details for VM",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of an asynchronous request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/snapshot/bulk",
      "method": "bulkCreateOnDemandBackup",
      "httpMethod": "post",
      "tag": "/vmware/vm",
      "description": "Take an on-demand snapshot of multiple virtual machines",
      "parameters": [
        {
          "name": "slaId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "vms",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/snapshot/mount",
      "method": "queryMountV1",
      "httpMethod": "get",
      "tag": "/vmware/vm",
      "description": "Get Live Mount information",
      "parameters": [
        {
          "name": "vm_id",
          "schema": "string",
          "required": false,
          "description": "Filters information by virtual machine ID."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Starting position in the list of Live Mount entries contained in the response. The summary information includes the specified numbered entry and all higher numbered entries. Use with **_limit_** to retrieve the summary information as smaller groups of entries, e.g. for paging of the results."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the summary information to a specified maximum number of entries. Optionally, use with **_offset_** to start the count at a specified point. Default is 25."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/snapshot/mount/{id}",
      "method": "createUnmount",
      "httpMethod": "delete",
      "tag": "/vmware/vm",
      "description": "Delete a Live Mount VM",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of a Live Mount."
        },
        {
          "name": "force",
          "schema": "boolean",
          "required": false,
          "description": "Force unmount to remove metadata when the datastore of the Live Mount virtual machine was moved off of the Rubrik cluster."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/snapshot/mount/{id}",
      "method": "getMountV1",
      "httpMethod": "get",
      "tag": "/vmware/vm",
      "description": "Get information for a Live Mount",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of a Live Mount."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/snapshot/mount/{id}",
      "method": "updateMount",
      "httpMethod": "patch",
      "tag": "/vmware/vm",
      "description": "Power a Live Mount on and off",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of a Live Mount."
        },
        {
          "name": "powerStatus",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "shouldForce",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/snapshot/mount/{id}/relocate",
      "method": "relocateMount",
      "httpMethod": "post",
      "tag": "/vmware/vm",
      "description": "Relocate a virtual machine to another datastore",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the live mount."
        },
        {
          "name": "datastoreId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/snapshot/{id}",
      "method": "deleteVmwareSnapshot",
      "httpMethod": "delete",
      "tag": "/vmware/vm",
      "description": "Delete VM snapshot",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of snapshot."
        },
        {
          "name": "location",
          "schema": "string",
          "required": true,
          "description": "Location of the snapshot. Use **_local_** to delete only the local copy of the snapshot. Or use **_all_** to delete the snapshot locally, on a replication target, and at an archival location."
        }
      ],
      "responses": []
    },
    {
      "url": "/vmware/vm/snapshot/{id}",
      "method": "getSnapshot",
      "httpMethod": "get",
      "tag": "/vmware/vm",
      "description": "Get VM snapshot details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of a snapshot."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/snapshot/{id}/browse",
      "method": "browseVmwareSnapshot",
      "httpMethod": "get",
      "tag": "/vmware/vm",
      "description": "List files in VM snapshot",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of snapshot."
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "The absolute path of the starting point for the directory listing."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Starting position in the list of path entries contained in the query results, sorted by lexicographical order. The response includes the specified numbered entry and all higher numbered entries."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Maximum number of entries in the response."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/snapshot/{id}/download",
      "method": "createDownloadSnapshotFromCloud",
      "httpMethod": "post",
      "tag": "/vmware/vm",
      "description": "Download snapshot from archive",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of snapshot."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/snapshot/{id}/download_file",
      "method": "createDownloadFileJob",
      "httpMethod": "post",
      "tag": "/vmware/vm",
      "description": "Download file from VM snapshot",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of a snapshot."
        },
        {
          "name": "legalHoldDownloadConfig",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/snapshot/{id}/export",
      "method": "createExportV1",
      "httpMethod": "post",
      "tag": "/vmware/vm",
      "description": "Export VM snapshot",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of a snapshot."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/snapshot/{id}/export_with_download",
      "method": "createExportWithDownloadFromCloudV1",
      "httpMethod": "post",
      "tag": "/vmware/vm",
      "description": "Download a snapshot from an archival location, then export a virtual machine using the downloaded snapshot",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of a snapshot."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/snapshot/{id}/instant_recover",
      "method": "createInstantRecovery",
      "httpMethod": "post",
      "tag": "/vmware/vm",
      "description": "Instantly recover a VM",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of Snapshot."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/snapshot/{id}/mount",
      "method": "createMountV1",
      "httpMethod": "post",
      "tag": "/vmware/vm",
      "description": "Live mount a VM from a snapshot",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of a snapshot."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/snapshot/{id}/restore_file",
      "method": "createRestoreFileJob",
      "httpMethod": "post",
      "tag": "/vmware/vm",
      "description": "Restore file from VM snapshot",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of a snapshot."
        },
        {
          "name": "domainName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ignoreErrors",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "restorePath",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "shouldRestoreXAttrs",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "shouldSaveCredentials",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "shouldUseAgent",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/snapshots",
      "method": "querySnapshotsForVms",
      "httpMethod": "post",
      "tag": "/vmware/vm",
      "description": "Get snapshot information for a list of virtual machines",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/virtual_disk/{id}",
      "method": "getVirtualDisk",
      "httpMethod": "get",
      "tag": "/vmware/vm",
      "description": "Details about the specific Virtual Disk",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Virtual Disk."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/virtual_disk/{id}",
      "method": "updateVirtualDisk",
      "httpMethod": "patch",
      "tag": "/vmware/vm",
      "description": "Update a specific Virtual Disk",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Virtual Disk."
        },
        {
          "name": "excludeFromSnapshots",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/{id}",
      "method": "getVm",
      "httpMethod": "get",
      "tag": "/vmware/vm",
      "description": "Get VM details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the virtual machine."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/{id}",
      "method": "updateVm",
      "httpMethod": "patch",
      "tag": "/vmware/vm",
      "description": "Update VM",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of virtual machine."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/{id}/guest_script/run",
      "method": "runGuestOsScript",
      "httpMethod": "post",
      "tag": "/vmware/vm",
      "description": "Run guest OS script",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the virtual machine."
        },
        {
          "name": "phase",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/vmware/vm/{id}/missed_recoverable_range",
      "method": "getVmwareMissedRecoverableRanges",
      "httpMethod": "get",
      "tag": "/vmware/vm",
      "description": "Get missed time ranges for point in time recovery",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The virtual machine ID."
        },
        {
          "name": "after_time",
          "schema": "string",
          "required": false,
          "description": "Filter ranges to end after this time. The date-time string should be in ISO8601 format, such as `2018-01-01T01:23:45.678Z`."
        },
        {
          "name": "before_time",
          "schema": "string",
          "required": false,
          "description": "Filter ranges to start before this time. The date-time string should be in ISO8601 format, such as `2018-01-01T01:23:45.678Z`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/{id}/missed_snapshot",
      "method": "missedSnapshots",
      "httpMethod": "get",
      "tag": "/vmware/vm",
      "description": "Get details about missed snapshots for a VM",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of a virtual machine."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/{id}/recoverable_range",
      "method": "getVmwareRecoverableRanges",
      "httpMethod": "get",
      "tag": "/vmware/vm",
      "description": "Get available time ranges for point in time recovery",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The virtual machine ID."
        },
        {
          "name": "after_time",
          "schema": "string",
          "required": false,
          "description": "Filter ranges to end after this time. The date-time string should be in ISO8601 format, such as `2018-01-01T01:23:45.678Z`."
        },
        {
          "name": "before_time",
          "schema": "string",
          "required": false,
          "description": "Filter ranges to start before this time. The date-time string should be in ISO8601 format, such as `2018-01-01T01:23:45.678Z`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/{id}/register_agent",
      "method": "vmRegisterAgent",
      "httpMethod": "post",
      "tag": "/vmware/vm",
      "description": "Register Rubrik Backup Service",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID assigned to a virtual machine object."
        }
      ],
      "responses": []
    },
    {
      "url": "/vmware/vm/{id}/request/force_full_snapshot",
      "method": "getVmForceFullSpec",
      "httpMethod": "get",
      "tag": "/vmware/vm",
      "description": "Retrieve the configuration for forcing a full snapshot of a VMware virtual machine",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the VMware virtual machine."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/{id}/request/force_full_snapshot",
      "method": "requestVmForceFullSnapshot",
      "httpMethod": "post",
      "tag": "/vmware/vm",
      "description": "Request a full snapshot for the next backup job of a VMware virtual machine",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the VMware virtual machine."
        },
        {
          "name": "virtualDiskInfos",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/{id}/search",
      "method": "searchVm",
      "httpMethod": "get",
      "tag": "/vmware/vm",
      "description": "Search for a file from a VM",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the virtual machine."
        },
        {
          "name": "path",
          "schema": "string",
          "required": true,
          "description": "The path query. Use either a path prefix or a filename prefix."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Maximum number of entries in the response."
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "Pagination cursor returned by the previous request."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/{id}/snapshot",
      "method": "deleteVmwareSnapshots",
      "httpMethod": "delete",
      "tag": "/vmware/vm",
      "description": "Delete all snapshots of VM",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Virtual machine ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/vmware/vm/{id}/snapshot",
      "method": "querySnapshot",
      "httpMethod": "get",
      "tag": "/vmware/vm",
      "description": "Get list of snapshots of VM",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the virtual machine."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/vmware/vm/{id}/snapshot",
      "method": "createOnDemandBackup",
      "httpMethod": "post",
      "tag": "/vmware/vm",
      "description": "Create an on-demand snapshot for a VM",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the virtual machine."
        },
        {
          "name": "slaId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/volume_group",
      "method": "queryVolumeGroup",
      "httpMethod": "get",
      "tag": "/volume_group",
      "description": "Get list of Volume Groups",
      "parameters": [
        {
          "name": "effective_sla_domain_id",
          "schema": "string",
          "required": false,
          "description": "The ID of the SLA Domain that controls the protection of the Volume Group."
        },
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "The ID of the Rubrik cluster that provides primary protection for the Volume Group."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the number of matches returned."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Ignore these many matches in the beginning."
        },
        {
          "name": "is_relic",
          "schema": "boolean",
          "required": false,
          "description": "Specifies whether the results should contain only Volume Groups that are accessible on the Rubrik cluster."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "The name of the Volume Group."
        },
        {
          "name": "sla_assignment",
          "schema": "string",
          "required": false,
          "description": "The type of SLA assigned to the Volume Group."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "The Volume Group attribute to use in storing the responses. Valid attributes are `name` and `effectiveSlaDomainName`."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "The order to sort the responses. Valid choices are asc (ascending) or desc (descending)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/volume_group/snapshot/mount",
      "method": "queryVolumeGroupSnapshotMount",
      "httpMethod": "get",
      "tag": "/volume_group",
      "description": "Get summary information for all mounts",
      "parameters": [
        {
          "name": "source_volume_group_id",
          "schema": "string",
          "required": false,
          "description": "The ID of the source Volume Group."
        },
        {
          "name": "source_host_name",
          "schema": "string",
          "required": false,
          "description": "A prefix of the source host name. The prefix is used as a response filter when available."
        },
        {
          "name": "sort_by",
          "schema": "string",
          "required": false,
          "description": "The Volume Group mount attribute used in sorting the responses. Valid choices are name, sourceHostName, snapshotDate, and mountedDate."
        },
        {
          "name": "sort_order",
          "schema": "string",
          "required": false,
          "description": "The order to sort the responses. Valid choices are asc (ascending) or desc (descending)."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Ignore these many matches in the beginning."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Limit the number of matches returned. The default value is 25."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/volume_group/snapshot/mount/{id}",
      "method": "getVolumeGroupSnapshotMount",
      "httpMethod": "get",
      "tag": "/volume_group",
      "description": "Get summary information for a mount",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the Volume Group mount."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/volume_group/snapshot/{id}",
      "method": "getVolumeGroupSnapshot",
      "httpMethod": "get",
      "tag": "/volume_group",
      "description": "Get Volume Group snapshot details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the Volume Group snapshot."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/volume_group/{id}",
      "method": "getVolumeGroup",
      "httpMethod": "get",
      "tag": "/volume_group",
      "description": "Get Volume Group details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the Volume Group."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/volume_group/{id}",
      "method": "patchVolumeGroup",
      "httpMethod": "patch",
      "tag": "/volume_group",
      "description": "Update Volume Group properties",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of Volume Group."
        },
        {
          "name": "configuredSlaDomainId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "forceFull",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "isPaused",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "volumeIdsIncludedInSnapshots",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/volume_group/{id}/latest_snapshot",
      "method": "queryVolumeGroupLatestSnapshot",
      "httpMethod": "get",
      "tag": "/volume_group",
      "description": "Get the latest snapshot of the Volume Group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Volume Group."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/volume_group/{id}/request/force_full_snapshot",
      "method": "getVolumeGroupForceFullSpec",
      "httpMethod": "get",
      "tag": "/volume_group",
      "description": "Retrieve the configuration for forcing a full snapshot",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the Volume Group."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/volume_group/{id}/request/force_full_snapshot",
      "method": "requestVolumeGroupForceFullSnapshot",
      "httpMethod": "post",
      "tag": "/volume_group",
      "description": "Request a full snapshot on the next backup job of a Volume Group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the Volume Group."
        },
        {
          "name": "volumeInfos",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/volume_group/{id}/snapshot",
      "method": "queryVolumeGroupSnapshot",
      "httpMethod": "get",
      "tag": "/volume_group",
      "description": "Get list of snapshots of the Volume Group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the Volume Group."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/volume_group/{id}/snapshot",
      "method": "createOnDemandVolumeGroupBackup",
      "httpMethod": "post",
      "tag": "/volume_group",
      "description": "Create on-demand snapshot for the Volume Group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the Volume Group."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/windows_cluster",
      "method": "queryWindowsCluster",
      "httpMethod": "get",
      "tag": "/windows_cluster",
      "description": "Get summary information for Windows clusters",
      "parameters": [
        {
          "name": "primary_cluster_id",
          "schema": "string",
          "required": false,
          "description": "Filter by primary_cluster_id. Use **local** for the local cluster."
        },
        {
          "name": "is_agentless",
          "schema": "boolean",
          "required": false,
          "description": "Filter by is_agentless flag."
        },
        {
          "name": "snappable_status",
          "schema": "string",
          "required": false,
          "description": "Determines whether Windows clusters are fetched with additional privilege checks."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/windows_cluster/{id}",
      "method": "getWindowsCluster",
      "httpMethod": "get",
      "tag": "/windows_cluster",
      "description": "Get detailed information for a Windows cluster",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID of the Windows cluster."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "/api/v1",
  "apiDescription": "\nCopyright © 2017-2021 Rubrik Inc. [Legal](#section/Legal)\n\n# Introduction\n\nWelcome to the Rubrik™ REST API documentation.\n\nThe Rubrik REST API provides a RESTful interface for working with Rubrik clusters and Rubrik Edge virtual appliances. The Rubrik REST API can be used to query, configure, and control nearly all of the operations of the Rubrik software.\n\nThrough authenticated and encrypted interaction with the Rubrik REST API server, perform any of the operations that are available through the Rubrik web UI and many bulk-type operations that might otherwise be difficult or impossible to perform.\n\nThis documentation provides reference information and examples of typical workflows for the Rubrik REST API. For more detailed information about working with Rubrik clusters and Rubrik Edge virtual appliances refer to the *Rubrik User Guide*.\n\nA quick way to become familiar with the Rubrik REST API, is to use the Rubrik REST API Explorer. [OpenAPI](#section/OpenAPI) describes this tool.\n\nRefer to the [changelog](#section/Changelog) to see information about changes within this version of the Rubrik REST API.\n\n# Changelog\n\n Revisions are listed with the most recent revision first.\n\n ### Changes to V1 API in Rubrik Version 6.0.0\n ## Feature additions/improvements:\n * Added optional fields: id(type: string) and networkType(type:\n   VmwareNetworkType Enum) to VmwareNetworkInfo, which is used by:\n   `Get /vmware/vm/{id}/snapshot`\n   `Get /vmware/config/recovery/networks`\n * Added new optional field `maxLocalRetentionLimit` to\n   `CloudOutForecastSlaParameters`.\n * Added following new endpoints for health monitor:\n   `POST /health_monitor/run_policy`\n   `GET /health_monitor/policies`\n   `GET /health_monitor/policy_status`\n * Added new endpoints `POST /sap_hana/db/{id}/configure_restore` and\n   `/sap_hana/db/{id}/unconfigure_restore` to configure and unconfigure\n   system copy restore on the target SAP HANA database.\n * Added new endpoint `POST /sla_domain/assign_to_downloaded_snapshots` to\n   assign retention SLA only to snapshots at downloaded locations.\n * Copied the following endpoints from the internal Rubrik REST API listing\n   to the v1 listing:\n   `GET /oracle/db`\n   `GET /oracle/db/{id}`\n   `PATCH /oracle/db/{id}`\n   Added a new optional parameter `is_data_guard_group` to `GET /oracle/db`.\n * Added new optional fields `advancedRecoveryConfigMap`, `preScriptPath`,\n   `postScriptPath`, and `shouldStopRecoveryOnPreScriptFailure` to\n   `ExportOracleDbConfig` and `MountOracleDbConfig` which specify the\n   Advanced Cloning Options (ACO) map, pre script path, post script path,\n   and whether to stop the recovery on pre-script failure, respectively.\n * Added new endpoint `POST /oracle/validate_aco_file` to validate the given\n   Advanced Cloning Options (ACO) file and retrieve the validation results.\n * Added new endpoint `GET /oracle/aco_parameter_list` to fetch the list of\n   supported Advanced Cloning Options (ACO) parameter names.\n * Added new endpoint `PATCH /oracle/data_guard_group/{id}` to update the SLA\n   and user settings for a Data Guard group.\n * Added new endpoints to get and change hostnames of nodes in a Rubrik cluster.\n   'GET /cluster/{id}/node_hostname',\n   'POST /cluster/{id}/node_hostname'.\n * Added a new object `NodeHostnameInfo` used by\n   `GET /cluster/{id}/node_hostname` and `POST /cluster/{id}/node_hostname`.\n * Added new endpoint to get Rubrik Backup Service details for a host.\n   `GET /host/rbs`\n * Added new endpoint to install Rubrik Backup Service on a host.\n   `POST /host/rbs/install`\n * Added new endpoint to uninstall Rubrik Backup Service from a host.\n   `POST /host/rbs/uninstall`\n * Added new endpoint to upgrade Rubrik Backup Service on a host.\n   `POST /host/rbs/upgrade`\n * Added new endpoints for user-defined tags management\n   `GET /user_defined_tag`\n   `POST /user_defined_tag`\n   `DELETE /user_defined_tag`\n   `GET /user_defined_tag/{id}`\n   `PATCH /user_defined_tag/{id}`\n   `DELETE /user_defined_tag/{id}`\n * Added new optional field 'numChannels' to 'OracleValidateConfig' object.\n   This field specifies the number of channels used when validating Oracle\n   backups.\n * Added new endpoint for batch VM snpshots query.\n   `POST /vmware/vm/snapshots`\n * Added new endpoints for SQL Server host configuration.\n   `GET /mssql/host/configuration`,\n   `POST /mssql/host/configuration`,\n   `GET /mssql/host/configuration/{host_id}`,\n   `PATCH /mssql/host/configuration/{host_id}`,\n   `DELETE /mssql/host/configuration/{host_id}`\n * Added new optional field `dataRetrievalCostInUSD` to\n   `CloudOutStorageForecastSummary`.\n * Added `POST /cloud_utilization/cloud_out_forecast` endpoint to forecast cloud\n   utilization for archival use case.\n * Changed `lastUpdatedTime` to be required in\n * Changed `retryStatus` to be required in\n   `JobMonitoringInfo` which is used in endpoints `GET /job_monitoring`\n   and `GET /polaris/job_monitoring`.\n * Changed `lastUpdatedTime` to be required in\n   `JobMonitoringInfo` which is used in endpoints `GET /job_monitoring`\n   and `GET /polaris/job_monitoring`.\n * Added a new endpoint to bulk tier existing snapshots\n   `POST /unmanaged_object/snapshot/bulk_archive_tier`\n * Added new field `snapshotVerificationInfo` to\n   `VerificationResponse` to include event information\n   about snapshots.\n * Added new optional fields `errorInfo` and\n   `retryStatus` to `JobMonitoringInfo` to include backup\n   failure remediation status.\n * Added new optional fields `snapMirrorLabelForFullBackup` and\n   `snapMirrorLabelForIncrementalBackup` to `FilesetSummary`, `FilesetUpdate`\n   and `FilesetCreate` to support SnapMirror destination volume\n   backup.\n   `FilesetSummary` is used by endpoints:\n    `GET /v1/fileset`,\n    `GET /v1/fileset/{id}`.\n   `FilesetUpdate` is used by endpoints:\n    `PATCH /v1/fileset/{id}`.\n   `FilesetCreate` is used by endpoints:\n    `POST /internal/fileset/bulk`,\n    `POST /v1/fileset`.\n * Added new values of `IoFilterStatus` and `HostUiFilterStatus`\n   to help distinguish cluster and ESXi host states when there is\n   a mismatch between the installed IO filter and ESXi host versions,\n   instead of defaulting to Unsupported.\n * Added new endpoints `GET /cluster/{id}/security/totp/setting` and\n   `PUT /cluster/{id}/security/totp/setting` for retreiving and\n   updating the 2-Step Verification global setting, respectively.\n * Added new optional field `computeVisibilityFilter` to\n   `GET /vmware/vcenter/{id}`, `POST /vmware/vcenter` and `PUT /vmware/vcenter`\n    to specify compute resource visibility.\n ## New features:\n * Added new endpoint for querying LDAP domain names.\n   `GET /ldap_service/domain_name`\n * Added new endpoints for supporting truststores\n   `GET /v1/cluster/{id}/security/truststore`\n   `DELETE /v1/cluster/{id}/security/truststore`\n   `PATCH /v1/cluster/{id}/security/truststore`\n * Added new field `isOnSnapMirrorDestVolume` to HostHierarchyObjectSummary\n   returned by `GET /host/hierarchy/{id}/children`.\n * Added new endpoint, `GET /volume_group/{id}/request/force_full_snapshot`.\n   This endpoint retrieves the configuration used to force a full snapshot\n   of a Volume Group.\n * Added new endpoint, `POST /volume_group/{id}/request/force_full_snapshot`.\n   This endpoint requests to force a full snapshot of a Volume Group.\n * Added new endpoint, `POST /archive/location/{id}/owner/disable` to disable\n   archival location.\n * Added new endpoint, `POST /archive/location/{id}/owner/enable` to enable\n   archival location.\n * Added new optional field `dataPathSpec` to `SapHanaSystemConfig` include\n   details of SAP HANA system data path\n * Copied the following endpoints from the internal Rubrik REST API listing\n  to the v1 listings:\n     * `GET /vcd/hierarchy/{id}` to get summary of a vCD hierarchy object.\n     * `GET /vcd/hierarchy/{id}/children` to get immediate descendant objects.\n     * `GET /vcd/hierarchy/{id}/descendants` to get list of descendant objects.\n     * `GET /vcd/cluster` to get summary for all vCD Clusters.\n     * `POST /vcd/cluster` to add a vCD Cluster.\n     * `GET /vcd/cluster/{id}/vimserver` to get VimServers of a vCD Cluster.\n     * `POST /vcd/cluster/{id}/refresh` to refresh a vCD Cluster.\n     * `GET /vcd/cluster/{id}` to get vCD Cluster details.\n     * `PATCH /vcd/cluster/{id}` to modify the hostname and credentials of a\n      specified vCD Cluster object.\n     * `DELETE /vcd/cluster/{id}` to remove vCD Cluster.\n     * `GET /vcd/cluster/request/{id}` to get vCD Cluster job status.\n     * `GET /vcd/vapp` to get summary for vApps.\n     * `GET /vcd/vapp/{id}` to get vApp details.\n     * `PATCH /vcd/vapp/{id}` to make changes to the parameters of a\n      specified vApp object.\n     * `GET /vcd/vapp/{id}/snapshot` to retrieve summary information for each\n      of the snapshot objects of a specified vApp object.\n     * `POST /vcd/vapp/{id}/snapshot` to start an asynchronous job to create\n      an on-demand snapshot for a specified vApp object.\n     * `DELETE /vcd/vapp/{id}/snapshot` to delete all snapshots of vApp.\n     * `GET /vcd/vapp/snapshot/{id}` to get vApp snapshot details.\n     * `DELETE /vcd/vapp/snapshot/{id}` to delete vApp snapshot.\n     * `GET /vcd/vapp/{id}/missed_snapshot` to get details about missed\n      snapshots for a vApp.\n     * `GET /vcd/vapp/snapshot/{snapshot_id}/export/options` to get\n      exportable network configurations.\n     * `POST /vcd/vapp/snapshot/{snapshot_id}/export` to export vApp snapshot.\n     * `POST /vcd/vapp/snapshot/{snapshot_id}/instant_recover` to instant\n      Recovery of vApp virtual machines.\n     * `GET /vcd/vapp/snapshot/{snapshot_id}/instant_recover/options` to get\n      Instant Recovery information.\n     * `GET /vcd/vapp/request/{id}` to retrieve the details of a specified\n      asynchronous job for a vApp.\n     * `GET /vcd/vapp/{id}/search` to search for a file from a vApp.\n     * `POST /vcd/vapp/snapshot/{id}/download` to download snapshot from\n      archive.\n * Added new endpoint, `GET /hyperv/vm/{id}/request/force_full_snapshot`.\n   This endpoint retrieves the configuration used to force a full snapshot\n   of a Hyper-V virtual machine.\n * Added new endpoint, `POST /hyperv/vm/{id}/request/force_full_snapshot`.\n   This endpoint requests to force a full snapshot of a Hyper-V virtual machine.\n * Added new endpoint, `GET /vmware/vm/{id}/request/force_full_snapshot`.\n  This endpoint retrieves the configuration used to force a full snapshot\n  of a VMware virtual machine.\n * Added new endpoint `POST /vmware/vm/{id}/request/force_full_snapshot`.\n  This endpoint requests to force a full snapshot of a VMware virtual machine.\n### Changes to V1 API in Rubrik Version 5.3.2\n ## Feature additions/improvements:\n * Modified instanceName field in the `GET /mssql/db` endpoint by adding\n   the network name for SQL Server databases belonging to a cluster\n   instance.\n\n ### Changes to V1 API in Rubrik Version 5.3.1\n ## Feature additions/improvements:\n * Added `GET /exclusion_pattern`\n   endpoint to get all exclusion patterns.\n * Added `GET /exclusion_pattern/{id}`\n   endpoint to get a exclusion pattern by id.\n * Added `POST /exclusion_pattern`\n   endpoint to create a new exclusion pattern.\n * Added `POST /exclusion_pattern/bulk`\n   endpoint to bulk create new exclusion patterns.\n * Added `PATCH /exclusion_pattern/{id}`\n   endpoint to update a exclusion pattern.\n * Added `DELETE /exclusion_pattern/{id}`\n   endpoint to delete a exclusion pattern.\n * Added `DELETE /exclusion_pattern/bulk`\n   endpoint to bulk delete exclusion patterns.\n * Added new optional field `keyProtection` to `EncryptionStatus`\n   to support returning key protection status via v1 API\n   `GET /cluster/{id}/security/encryption`.\n * Added `Post /vmware/vm/snapshot/{id}/export_with_download` endpoint to export\n   a vm snapshot from an archival location.\n * Added new field `index` to `JobMonitoringObjectsCountByType`, which contains\n   the total count of all Index jobs.\n * Added `Index` to `JobMonitoringTaskType`.\n * Added new optional field `isTotpEnforced` to `LdapServiceInfo`,\n   `LdapServiceSummary`, and `LdapServiceInfoUpdate` to support\n   TOTP enforcement for LDAP services in followin APIs.\n   `POST /v1/ldap_service`\n   `GET /v1/ldap_service`\n   `GET /v1/ldap_service/{id}`\n   `PATCH /v1/ldap_service/{id}`\n   `PUT /v1/ldap_service/{id}`\n * Added new optional field `isTotpEnabled` as a query param in API\n   `GET /v1/principal` for fetch users with TOTP enabled.\n * Added new optional fields `mfaServerName`, `isTotpEnabled`, and\n   `isTotpEnforced` to `PrincipalSummaryV1` as part of response from\n   API `GET /v1/principal` for rendering principals' MFA status.\n * Modified `AgentConnectStatus` enum to add value SecondaryCluster for\n   multicluster Rubrik Backup Service support. This will be the status on a\n   cluster that is not the primary.\n * Added new endpoint and optional fields for VMware network selection.\n    GET /vmware/config/recovery/networks for getting recovery networks.\n\n ## New features:\n * Added new endpoints for supporting TOTP configuration.\n   `GET /user/{id}/totp/status`\n   `PUT /user/{id}/totp/config`\n   `DELETE /user/{id}/totp/config`\n   `POST /user/{id}/totp/new_secret`\n * Added new endpoints for supporting multicluster Rubrik Backup Service.\n   `POST /vmware/vm/make_primary`\n   `POST /host/make_primary`\n * Added new endpoints for managing multicluster Rubrik Backup Service\n   certificates.\n   `GET /certificate/agent`\n   `POST /certificate/agent`\n   `DELETE /certificate/agent/{id}`\n\n ### Changes to V1 API in Rubrik Version 5.3.0\n ## Deprecation:\n * Deprecated `SnapshotCloudStorageTier` enum value Cold. It will be left,\n   but will be mapped internally to the new value, AzureArchive,\n   which is recommended as a replacement.\n * Removed signature and sigAlg return fields from `SamlSsoAuthnRequestDetail`,\n   which were wrongly introduced in 5.1.\n * Removed `GET /vmware/resource_pool` endpoint, which doesn't have backend implementation.\n * Removed `GET /vmware/resource_pool/{id}` endpoint, which doesn't have backend implementation.\n ## New features:\n * Added `Deleted` as new failover cluster node connection status in\n   FailoverClusterNodeConnectionStatus. The FailoverClusterNodeConnectionStatus\n   is in FailoverClusterNode object and is used by\n   `GET /failover_cluster`,\n   `GET /failover_cluster/{id}`,\n   `GET /failover_cluster/hierarchy/{id}`,\n   `GET /failover_cluster/hierarchy/{id}/children`,\n   `GET /failover_cluster/hierarchy/{id}/descendants` endpoints.\n * Added `POST /cluster/{id}/manual_discover_ll_ipv4` endpoint to allow discovery of new\n   nodes over link local ipv4 network.\n * Added new optional field `groupMaxLevel` to `AdvancedLdapConfiguration`\n   included in `LdapServiceSummary`, `LdapServiceInfo` and `LdapServiceInfoUpdate`\n   objects used by endpoints:\n   `GET /ldap_service`,\n   `POST /ldap_service`,\n   `GET /ldap_service/{id}`,\n   `PUT /ldap_service/{id}`,\n   `PATCH /ldap_service/{id}`.\n * Added `is_on_demand` as an optional parameter to `GET /job_monitoring`\n * Added `GET /cluster/{id}/syslog_msg_mib_link` and\n   `GET /cluster/{id}/syslog_tc_mib_link` endpoints to allow downloading syslog\n   SNMP MIB files.\n * Added `POST /vmware/vm/missed_recoverable_range` endpoint to get missed recoverable\n   ranges for a list of virtual machines.\n * Added `GET /backup/retry/{id}` endpoint to get status of reschedule\n   operation.\n * Added `POST /backup/retry` endpoint to reschedule unsuccessful backup tasks.\n * Added `POST /vmware/vm/recoverable_range` endpoint to get recoverable ranges\n   for a list of virtual machines.\n * Added endpoint `POST /hierarchy/bulk_sla_conflicts`. Bulk get the list of\n   descendant objects with SLA conflicts.\n * Added endpoint `GET /snapshot/{id}/storage/stats`. Returns storage stats\n   for a snapshot.\n * Added optional query parameter `include_expired` to `GET /certificate`\n   endpoint, excluded expired certs by default after the change.\n * Added endpoint\n   `GET /job_monitoring/subscription`. Gets all subscriptions to\n   monitoring page.\n * Modified `SnapshotCloudStorageTier`, enum adding values AzureArchive, Glacier,\n   and GlacierDeepArchive.\n * Added endpoint\n   `GET /backup/verify/{id}`. Get asynchronous request\n   details for a Backup Verification job.\n * Added new optional field `privateKey` to `CertificateImportRequest`\n   object sent to `POST /certificate`. Using this field will fail the request\n   if the provided private key is not successfully parsed.\n * Added endpoint\n   `DELETE /job_monitoring/subscription/{subscription_id}`. Delete a\n   monitoring page email subscription.\n * Added endpoint\n   `PATCH /job_monitoring/subscription/{subscription_id}`. Update a\n   monitoring email subscription.\n * Added endpoint\n   `GET /job_monitoring/subscription/{subscription_id}`. Get a\n   specific monitoring email subscription by id.\n * Added endpoint\n   `POST /job_monitoring/subscription`. Create an email subscription\n   to the job monitoring page.\n * Added new endpoint `POST /backup/verify`\n    Verifies the validity of a snapshot.\n * Added endpoint `PATCH /organization/{id}/envoy/bulk`. Update a list of\n   Rubrik Envoy objects.\n * Added new field `isGpsLoginEnabled` to `SamlSsoStatus` returned by\n   `GET /saml/sso_status`\n * Added endpoint `GET /oracle/aco_example_download_link`. Get a download link\n   for an example Advanced Recovery Options file.\n * Added endpoint `POST /organization/{id}/envoy/bulk`. Create a list of Rubrik\n   Envoy objects.\n * Added endpoint `Delete /organization/{id}/envoy/bulk`. Remove a list of\n   Rubrik Envoy objects.\n * Added organization ID parameter to the response object\n   IdProviderAuthDomainSummary.\n * Added endpoint `GET /vmware/vcenter/hotadd/vm`. Gets details about\n    all HotAdd proxy virtual machines.\n * Added endpoint `POST /sap_hana/system/{id}/refresh`. Initiates an\n    asynchronous job to refresh SAP HANA system metadata.\n * Added new field `vcenterName` to `VritualMachineDetail` returned by\n   `GET /vmware/vm/{id}`.\n * Added endpoint `DELETE /sap_hana/system/{id}`. Initiates an asynchronous\n    job to delete a SAP HANA system object.\n * Added endpoint `GET /sap_hana/system/request/{id}`. Gets details about\n    a SAP HANA system related asynchronous request.\n * Added endpoint `POST /sap_hana/db/{id}/snapshot`. Initiates a job to\n    take an on-demand full snapshot of a SAP HANA database.\n * Added endpoint `GET /sap_hana/db/request/{id}`. Gets details about\n    a SAP HANA database related request.\n * Added endpoint `GET /sap_hana/db/{id}/snapshot`. Returns a list of\n    summary of snapshots of a SAP HANA database.\n * Added endpoint `GET /sap_hana/db/snapshot/{id}`. Gets details about\n    a SAP HANA database snapshot.\n * Added the `POST /oracle/db/{id}/validate` to trigger an validation job on Oracle backups.\n * Added new values `RetentionSlaDomainName` , `ObjectType`, `SnapshotCount`,\n   `AutoSnapshotCount` and  `ManualSnapshotCount` to\n   `UnmanagedObjectSortAttribute` field of the\n   `GET /unmanaged_object/reader_object` endpont.\n * Added new values `RetentionSlaDomainName` , `ObjectType`, `SnapshotCount`,\n   `AutoSnapshotCount` and  `ManualSnapshotCount` to\n   `UnmanagedObjectSortAttribute` field of the `GET /unmanaged_object` endpont.\n * Added the `POST /replication/location_pause/disable` to\n    resume replication from source cluster(s).\n * Added the `POST /replication/location_pause/enable` to\n    pause replication from source cluster(s).\n * Added endpoint `POST /sap_hana/system`. Adds new entry for SAP HANA system\n    and stores in database.\n * Added endpoint `GET /sap_hana/db`. Returns summary of all discovered\n    SAP HANA databases.\n * Added endpoint `GET /sap_hana/db/{id}` Returns summary of SAP HANA database\n    with given ID.\n * Added `AggregateSapHanaDb`, `SapHanaDb` and `SapHanaSystem` to the\n    `object_type` filtering field of the `GET /event/latest` endpoint.\n * Added the new optional field `failoverClusterAppName` to FilesetSummary\n    returned by `GET /fileset` and `GET /fileset/{id}`.\n * Added the `GET /user/lockout` endpoint to\n    get the status of local user account lockout.\n * Added the `PATCH /user/lockout` endpoint to\n    update the local user account lockout config.\n * Added the `POST /user/{id}/unlock` endpoint to unlock local user.\n * Added the `GET /cluster/{id}/upgrade/precheck_status` endpoint to\n    get the result of the latest run of periodic upgrade prechecks.\n * Added the `POST /cluster/{id}/upgrade/precheck_status` endpoint to\n    start an on-demand run of the periodic upgrade prechecks.\n * Added the `GET /cluster/{id}/rubrik_support_portal_credentials`\n    endpoint to check if the cluster already has credentials\n    for the Rubrik support portal.\n * Added the `POST /cluster/{id}/rubrik_support_portal_credentials`\n    endpoint to update Rubrik support portal credentials for\n    the cluster.\n * Added the `GET /vmware/vcenter/{id}/networks` endpoint to get the\n    networks in a vCenter.\n * Added new field `isOracleHost` to HostDetail\n   returned by `GET /host/{id}`.\n * Added the `POST /vmware/vcenter/{id}/hotadd/network` endpoint to set\n   the network for a HotAdd proxy virtual machine.\n * Added new endpoint `GET /host/{id}/nas_share_discover`. Returns all\n   shares on the NAS host specified by 'id'.\n * Added new endpoint `POST /host/share/bulk` to allow adding NAS\n   shares in bulk without validating their share credentials.\n * Added `GET /volume_group` to retrieve a current list of Volume Groups.\n * Added `GET /volume_group/{id}` to retrieve the details of a Volume Group.\n * Added `PATCH /volume_group/{id}` to modify the details of a Volume Group.\n * Added `GET /volume_group/{id}/snapshot` to retrieve the details of all\n   snapshots of a Volume Group.\n * Added `POST /volume_group/{id}/snapshot` to create an on-demand snapshot\n   of a Volume Group.\n * Added `GET /volume_group/snapshot/{id}` to get the details of a Volume\n   Group snapshot.\n * Added `GET /volume_group/snapshot/mount` to retrieve summary information\n   of all Volume Group mounts.\n * Added `GET /volume_group/snapshot/mount/{id}` to retrieve summary\n   information of one Volume Group mount.\n * Added `GET /host/{id}/volume` to retrieve a list of all volumes on a\n   Volume Group host.\n * Made field `restoreScriptSmbPath` optional in `VolumeGroupMountSummary`.\n   This change affects the endpoints `/volume_group/snapshot/mount` and\n   `/volume_group/snapshot/mount/{id}`.\n * Added endpoint `GET /mfa/rsa/server` to get all MFA servers.\n * Added endpoint `POST /mfa/rsa/server` to create a new MFA server.\n * Added endpoint `GET /mfa/rsa/server/{id}` to get a specific MFA server.\n * Added endpoint `PATCH /mfa/rsa/server/{id}` to update an MFA server.\n * Added endpoint `DELETE /mfa/rsa/server/{id}` to delete an MFA server.\n * Added endpoint `PUT /cluster/{id}/security/web_signed_cert`\n    to set the web server certificate.\n * Added endpoint `DELETE /cluster/{id}/security/web_signed_cert`\n    to use the default, self-signed web server certificate.\n * Added endpoint `PUT /cluster/{id}/security/kmip/client` to configure\n    the KMIP client on Rubrik.\n * Added endpoint `GET /cluster/{id}/security/kmip/client` to get\n    the KMIP client configuration.\n * Added endpoint `GET /cluster/{id}/security/kmip/server` to get the\n    KMIP server configurations.\n * Added endpoint `PUT /cluster/{id}/security/kmip/server` to configure a\n    KMIP server.\n * Added endpoint `DELETE /cluster/{id}/security/kmip/server` to delete a\n    configured KMIP server.\n * Added endpoint `GET /database/log_report` to retrieve the database log\n    report summary.\n * Added endpoint `POST /unmanaged_object/assign_retention_sla` to assign\n    a retention SLA to unmanaged objects asynchronously.\n * Added endpoint `GET /sap_hana/db/{id}/recoverable_range`. Gets details\n    about recoverable ranges of a SAP HANA database.\n * Added new  field `legalHoldDownloadConfig` to `MssqlBackupSelection` and\n   `DownloadMssqlBackupFilesByIdJobConfig`. An optional Boolean that specifies\n   whether the download is in response to a Legal Hold. This change affects\n   endpoints `/mssql/db/{id}/download_files_by_id`,\n   `/mssql/db/{id}/download_files` and `/mssql/db/{id}/browse`.\n * Added new field `canUnmount` to `VolumeGroupMountSummary`, an optional\n   boolean value that indicates if the logged-in user has the authority\n   to remove the specified mount.\n * Added `GET /vmware/vcenter/{id}/hotadd/needed` endpoint to get the\n    number of HotAdd proxies needed for a vCenter.\n * Added endpoint `DELETE /sap_hana/db/snapshot/{id}`. Initiates a request\n   to delete a full snapshot of a SAP HANA database.\n * Added new field `needsMigration` to `VolumeGroupSummary`. This change\n   affects the endpoints `GET /volume_group` and `GET /volume_group/{id}`.\n * Added new fields `usedFastVhdx` and `fileSizeInBytes` to\n   `VolumeGroupSnapshotSummary`. This change affects the endpoints\n   `GET /volume_group/{id}/snapshot` and `GET /volume_group/snapshot/{id}`.\n * Added endpoint `GET /cluster/me/upgrade/monitor_events` to get notifications\n   about events occurring at CDM.\n * Added endpoint `GET /volume_group/{id}/latest_snapshot` to retrieve summary\n   information of the latest snapshot of a Volume Group.\n * Added `GET /vmware/vcenter/{id}/hotadd/bandwidth` endpoint to get the\n   HotAdd bandwidth limits for a vCenter.\n * Added `POST /vmware/vcenter/{id}/hotadd/bandwidth` endpoint to set the\n   HotAdd bandwidth limits for a vCenter.\n * Added field `isVmc` returned by `GET /vmware/vcenter` to retrieve summary\n   information of a vCenter.\n * Added new optional field `unreadable` to `BrowseResponse`, which is used by\n   `GET /browse`.\n * Added new endpoint `GET /config/history/list_updates` Returns a list of\n   filtered configuration updates.\n * Added new endpoint `GET /config/history/ondate` Returns a list of\n   configurations and their values on a given date.\n * Added new field `dataToTransfer` to `EventSeriesSummaryV1`, an optional\n   integer value that represents the amount of data that needs to be\n   transferred by the job corresponding to the event.\n * Added new field `estimatedTimeRemaining` to `EventSeriesSummaryV1`, an\n   optional string value that represents the estimated time remaining until\n   the job corresponding to the event has completed. The estimated time has\n   millisecond granularity.\n * Added endpoint `GET /sap_hana/db/{id}/missed_snapshot` Returns a list of\n    summary information for the missed snapshots of a SAP HANA database.\n * Added new field `forceFull` to `VolumeGroupSummary`. This change\n   affects the endpoints `GET /volume_group` and `GET /volume_group/{id}`.\n * Modified afterId in response of `GET /event/latest` and `GET /event`\n   to point to each individual event in the list response instead of having\n   all afterId values in the list response point to the last event in the\n   list.\n * Copied `GET /mssql/availability_group` endpoint from internal to v1 to get\n   all SQL Server availability groups.\n * Copied `GET /mssql/availability_group/{id}` endpoint from internal to v1 to\n   get details of a SQL Server availability group.\n * Copied `PATCH /mssql/availability_group/{id}` endpoint from internal to\n   v1 to update a SQL Server availability group.\n * Copied `PATCH /mssql/db/bulk` endpoint from internal to v1 to update multiple\n   SQL Server databases.\n * Copied `POST /mssql/db/bulk/snapshot` endpoint from internal to v1 to take on\n   demand snapshot of multiple SQL Server databases.\n * Copied `GET /mssql/db/bulk/snapshot/{id}` endpoint from internal to v1 to get\n   details of on demand snapshot of multiple SQL Server databases.\n * Copied `GET /mssql/db/count` endpoint from internal to v1 to get the count of\n   SQL Server databases.\n * Copied `GET /mssql/instance/count` endpoint from internal to v1 to get the\n   count of SQL Server instances.\n * Copied `DELETE /mssql/db/{id}/recoverable_range/download` endpoint from\n   internal to v1 to delete downloaded recoverable ranges of a SQL Server\n   database.\n * Copied `GET /mssql/db/recoverable_range/download/{id}` endpoint from\n   internal to v1 to get the status of delete downloaded recoverable range job.\n * Copied `GET /mssql/db/{id}/compatible_instance` endpoint from internal to v1\n   to get compatible instances for the recovery of a SQL Server database.\n * Copied `GET /mssql/db/{id}/restore_estimate` endpoint from internal to v1 to\n   get size estimate for restore or export of a SQL Server database.\n * Copied `GET /mssql/db/{id}/restore_files` endpoint from internal to v1 to get\n   all data files to be restored for an export or restore operation on a SQL\n   Server database.\n * Copied `GET /mssql/db/{id}/snappable_id` endpoint from internal to v1 to get\n   the snappable id of a SQL Server database.\n * Copied `GET /mssql/db/defaults` endpoint from internal to v1 to get the\n   default properties for SQL Server databases.\n * Copied `PATCH /mssql/db/defaults` endpoint from internal to v1 to update the\n * Added new field `instanceChildrenInfo` to the response from the v1 endpoint\n   `GET /mssql/hierarchy/root/children`. The new field is an array of type\n   `MssqlInstanceShortSummary` that contains the managed identifier, the name and\n   active node for a Windows Failover Cluster instance.\n * Added enums for the `sort_by` parameter in `GET /mssql/db`.\n * Added `POST /cluster/{id}/manual_discover_ipv4` endpoint to allow discovery of new\n   nodes over IPv4 network.\n ## Breaking changes:\n * Added new field `nodeName` in FailoverClusterNodeOrder object used by\n   `PATCH /failover_cluster/failover_cluster_app/{id}` and\n   `POST /failover_cluster/failover_cluster_app` endpoints.\n   The `nodeName` is the name of the failover cluster node.\n * Renamed the field `vips` in FailoverClusterAppSource object to\n   `virtualIps`. The FailoverClusterAppSource is used by\n   `GET /failover_cluster/failover_cluster_app`,\n   `GET /failover_cluster/failover_cluster_app/{id}`,\n   `GET /failover_cluster/hierarchy/{id}`,\n   `GET /failover_cluster/hierarchy/{id}/children`,\n   `GET /failover_cluster/hierarchy/{id}/descendants`,\n   `PATCH /failover_cluster/failover_cluster_app/{id}` and\n   `POST /failover_cluster/failover_cluster_app` endpoints.\n * Removed `POST /cluster/{id}/manual_discover_ll_ipv4`\n\n### Changes to V1 API in Rubrik Version 5.2.2\n ## New features:\n * Added optional field isOnDemand to `EventSeriesSummaryV1`.\n   The parameter indicates if the job associated with the event\n   series is a on demand job.\n\n ### Changes to V1 API in Rubrik Version 5.2.1\n ## New features:\n * Added optional query parameters limit and offset to support pagination for\n   GET /role endpoint.\n\n ### Changes to V1 API in Rubrik Version 5.2.0\n ## Deprecation:\n * Deprecating `slaId` field returned by `GET /mssql/db/{id}/snapshot`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `GET /mssql/db/snapshot/{id}`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `GET /vmware/vm/{id}/snapshot`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `GET /vmware/vm/{id}`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `GET /vmware/vm/snapshot/{id}`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `GET /hdfs/snapshot/{id}`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `GET /hdfs`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `POST /hdfs`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `GET /hdfs/{id}`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `PATCH /hdfs/{id}`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `GET /fileset/snapshot/{id}`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `GET /fileset`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `POST /fileset`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `GET /fileset/{id}`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `PATCH /fileset/{id}`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `GET /failover_cluster/\n    failover_cluster_app/{id}`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n ## New features:\n * Added new endpoint\n  `GET /data_source/{id}/expired_custom_retention_snapshots`.\n   Get all expired snapshots which were explicitly assigned a SLA domain.\n * Added new field `parentSnapshotId` to FilesetSnapshotDetail returned by\n   `GET /fileset/snapshot/{id}`.\n * Added new field `parentSnapshotId` to HdfsSnapshotDetail returned by\n   `GET /hdfs/snapshot/{id}`.\n * Added new field `parentSnapshotId` to MssqlDbSnapshotSummary returned by\n   `GET /mssql/db/{id}/snapshot`.\n * Added new field `parentSnapshotId` to MssqlDbSnapshotDetail returned by\n   `GET /mssql/db/snapshot/{id}`.\n * Added new field `parentSnapshotId` to VmSnapshotSummary returned by\n   `GET /vmware/vm/{id}/snapshot`.\n * Added new field `parentSnapshotId` to VmSnapshotDetail returned by\n   `GET /vmware/vm/snapshot/{id}`.\n * Added new field `retentionSlaDomanId` to MssqlHierarchyObjectSummary\n   returned by `GET /mssql/hierarchy/{id}`.\n * Added new field `retentionSlaDomanId` to MssqlHierarchyObjectSummary\n   returned by `GET /mssql/hierarchy/{id}/descendants`.\n * Added new field `retentionSlaDomanId` to MssqlHierarchyObjectSummary\n   returned by `GET /mssql/hierarchy/{id}/children`.\n * Added new field `retentionSlaDomanId` to MssqlDbDetail\n   returned by `GET /mssql/db/{id}`.\n * Added new field `retentionSlaDomanId` to MssqlDbDetail\n   returned by `PATCH /mssql/db/{id}`.\n * Added new field `retentionSlaDomanId` to MssqlDbDetail\n   returned by `PATCH /mssql/db/bulk`.\n * Added new field `retentionSlaDomanId` to MssqlDbSnapshotDetail\n   returned by `GET /mssql/db/snapshot/{id}`.\n * Added new field `retentionSlaDomanId` to MssqlDbSummary\n   returned by `GET /mssql/db`.\n * Added new field `retentionSlaDomainId` to ComputeClusterDetail\n   returned by `PATCH /vmware/compute_cluster/{id}`.\n * Added new field `retentionSlaDomainId` to VmwareHostDetail\n   returned by `PATCH /vmware/host/{id}`.\n * Added new field `retentionSlaDomainId` to VmwareVmMountDetailV1\n   returned by `PATCH /vmware/vm/snapshot/mount/{id}`.\n * Added new field `retentionSlaDomainId` to VmwareVmMountSummary\n   returned by `GET /vmware/vm/snapshot/mount`.\n * Added new field `retentionSlaDomainId` to BulkOracleDbDetails\n   returned by `PATCH /oracle/db/bulk`.\n * Added new field `retentionSlaDomainId` to ComputeClusterDetail\n   returned by `GET /vmware/compute_cluster/{id}`.\n * Added new field `retentionSlaDomainId` to UnmanagedObjectDetails\n   returned by `GET /unmanaged_object`.\n * Added new field `retentionSlaDomainId` to UnmanagedObjectSummary\n   returned by `GET /unmanaged_object/reader_object`.\n * Added new field `retentionSlaDomainId` to VirtualMachineDetail\n   returned by `GET /vmware/vm/{id}`.\n * Added new field `retentionSlaDomainId` to VirtualMachineDetail\n   returned by `PATCH /vmware/vm/{id}`.\n * Added new field `retentionSlaDomainId` to VirtualMachineSummary\n   returned by `GET /vmware/vm`.\n * Added new field `retentionSlaDomainId` to VmSnapshotDetail\n   returned by `GET /vmware/vm/snapshot/{id}`.\n * Added new field `retentionSlaDomainId` to VmwareHostDetail\n   returned by `GET /vmware/host/{id}`.\n * Added new field `retentionSlaDomainId` to VmwareVmMountDetailV1\n   returned by `GET /vmware/vm/snapshot/mount/{id}`.\n * Added new field `retentionSlaDomainId` to UnmanagedObjectSummary\n   returned by `GET /unmanaged_object`.\n * Added new endpoint `GET /report/compliance_summary_sla`. Returns the\n   compliance summary information for all protected objects based on a\n   SLA Domain-based requirement of whether the last expected snapshot was taken.\n   Currently behind flag, will not return correct information\n   until flag is flipped.\n * Added endpoint `GET /cluster/{id}/upgrade/available_version` which\n      retrieves a list of Rubrik CDM versions available to upgrade the Rubrik\n      cluster.\n * Added endpoint `GET /cluster/{id}/upgrade/request/${request_id}` to\n   query the status of an asynchronous upgrade related request.\n * Added endpoint `POST /cluster/{id}/upgrade/stage_cdm_software` which\n   allows staging CDM software for upgrades on the cluster.\n * Added new field `hasSnapshotsWithPolicy` to UnmanagedObjectDetails returned\n   by GET `/unmanaged_object`.\n * Added new field `hasSnapshotsWithPolicy` to UnmanagedObjectSummary returned\n   by GET `/unmanaged_object`.\n * Added new field `hasSnapshotsWithPolicy` to UnmanagedObjectSummary returned\n   by GET `/unmanaged_object/reader_object`\n * Added new field `slaLastUpdateTime` to BulkOracleDbDetails\n   returned by `PATCH /oracle/db/bulk`.\n * Added new field `slaLastUpdateTime` to BulkOracleHostDetails\n   returned by `PATCH /oracle/host/bulk`.\n * Added new field `slaLastUpdateTime` to BulkOracleRacDetails\n   returned by `PATCH /oracle/rac/bulk`.\n * Added new field `slaLastUpdateTime` to ComputeClusterDetail\n   returned by `GET /vmware/compute_cluster/{id}`.\n * Added new field `slaLastUpdateTime` to ComputeClusterDetail\n   returned by `PATCH /vmware/compute_cluster/{id}`.\n * Added new field `slaLastUpdateTime` to ComputeClusterSummary\n   returned by `GET /vmware/compute_cluster`.\n * Added new field `slaLastUpdateTime` to FailoverClusterAppDetail\n   returned by `GET /failover_cluster/failover_cluster_app/{id}`.\n * Added new field `slaLastUpdateTime` to FailoverClusterAppSummary\n   returned by `GET /failover_cluster/failover_cluster_app`.\n * Added new field `slaLastUpdateTime` to FailoverClusterAppSummary\n   returned by POST `/failover_cluster/failover_cluster_app`.\n * Added new field `slaLastUpdateTime` to FailoverClusterAppSummary\n   returned by `PATCH /failover_cluster/failover_cluster_app/{id}`.\n * Added new field `slaLastUpdateTime` to FailoverClusterDetail\n   returned by POST `/failover_cluster`.\n * Added new field `slaLastUpdateTime` to FailoverClusterDetail\n   returned by `GET /failover_cluster/{id}`.\n * Added new field `slaLastUpdateTime` to FailoverClusterDetail\n   returned by `PATCH /failover_cluster/{id}`.\n * Added new field `slaLastUpdateTime` to FailoverClusterHierarchyObjectSummary\n   returned by `GET /failover_cluster/hierarchy/{id}`.\n * Added new field `slaLastUpdateTime` to FailoverClusterHierarchyObjectSummary\n   returned by `GET /failover_cluster/hierarchy/{id}/children`.\n * Added new field `slaLastUpdateTime` to FailoverClusterHierarchyObjectSummary\n   returned by `GET /failover_cluster/hierarchy/{id}/descendants`.\n * Added new field `slaLastUpdateTime` to FailoverClusterSummary\n   returned by `GET /failover_cluster`.\n * Added new field `slaLastUpdateTime` to FilesetDetail\n   returned by `POST /fileset`.\n * Added new field `slaLastUpdateTime` to FilesetDetail\n   returned by `GET /fileset/{id}`.\n * Added new field `slaLastUpdateTime` to FilesetDetail\n   returned by `PATCH /fileset/{id}`.\n * Added new field `slaLastUpdateTime` to FilesetSummary\n   returned by `GET /fileset`.\n * Added new field `slaLastUpdateTime` to HdfsDetail\n   returned by `POST /hdfs`.\n * Added new field `slaLastUpdateTime` to HdfsDetail\n   returned by `GET /hdfs/{id}`.\n * Added new field `slaLastUpdateTime` to HdfsDetail\n   returned by `PATCH /hdfs/{id}`.\n * Added new field `slaLastUpdateTime` to HdfsSummary\n   returned by `GET /hdfs`.\n * Added new field `slaLastUpdateTime` to HostHierarchyObjectSummary\n   returned by `GET /host/hierarchy/{id}`.\n * Added new field `slaLastUpdateTime` to HostHierarchyObjectSummary\n   returned by `GET /host/hierarchy/{id}/children`.\n * Added new field `slaLastUpdateTime` to VcenterDetail\n   returned by `GET /vmware/vcenter/{id}`.\n * Added new field `slaLastUpdateTime` to VcenterSummary\n   returned by `GET /vmware/vcenter`.\n * Added new field `slaLastUpdateTime` to VcenterSummary\n   returned by `PATCH /vmware/vcenter/{id}`.\n * Added new field `slaLastUpdateTime` to VcenterSummary\n   returned by `PUT /vmware/vcenter/{id}`.\n * Added new field `slaLastUpdateTime` to VirtualMachineDetail\n * Added `PATCH /host/share/bulk` endpoint to update multiple network shares.\n * Added new field `isCustomRetentionApplied` to SnapshotSummary returned by\n   `GET /unmanaged_object/{id}/snapshot`.\n * Added new field `slaLastUpdateTime` to VirtualMachineDetail\n   returned by `GET /vmware/vm/{id}`.\n * Added new field `slaLastUpdateTime` to VirtualMachineDetail\n   returned by `PATCH /vmware/vm/{id}`.\n * Added new field `slaLastUpdateTime` to VirtualMachineSummary\n   returned by `GET /vmware/vm`.\n * Added new field `slaLastUpdateTime` to VmSnapshotDetail\n   returned by `GET /vmware/vm/snapshot/{id}`.\n * Added new field `slaLastUpdateTime` to VmwareHostDetail\n   returned by `GET /vmware/host/{id}`.\n * Added new field `slaLastUpdateTime` to VmwareHostDetail\n   returned by `PATCH /vmware/host/{id}`.\n * Added new field `slaLastUpdateTime` to VmwareHostSummary\n   returned by `GET /vmware/host`.\n * Added new field `slaLastUpdateTime` to VmwareVmMountDetailV1\n   returned by `GET /vmware/vm/snapshot/mount/{id}`.\n * Added new field `slaLastUpdateTime` to VmwareVmMountDetailV1\n   returned by `PATCH /vmware/vm/snapshot/mount/{id}`.\n * Added new field `slaLastUpdateTime` to VmwareVmMountSummary\n   returned by `GET /vmware/vm/snapshot/mount`.\n * Added new field `isCustomRetentionApplied` to SnapshotSummary returned by\n   `GET /unmanaged_object/{id}/snapshot`.\n * Added new Field `configuredSlaDomainType` to BulkOracleDbDetails returned by\n  `PATCH /oracle/db/bulk`.\n * Added new Field `configuredSlaDomainType` to BulkOracleHostDetails returned\n   by `PATCH /oracle/host/bulk`.\n * Added new Field `configuredSlaDomainType` to BulkOracleRacDetails returned by\n  `PATCH /oracle/rac/bulk`.\n * Added new Field `configuredSlaDomainType` to ComputeClusterDetail returned by\n  `GET /vmware/compute_cluster/{id}`.\n * Added new Field `configuredSlaDomainType` to ComputeClusterDetail returned by\n  `PATCH /vmware/compute_cluster/{id}`.\n * Added new Field `configuredSlaDomainType` to ComputeClusterSummary returned\n   by `GET /vmware/compute_cluster`.\n * Added new Field `configuredSlaDomainType` to FailoverClusterAppDetail\n   returned by `GET /failover_cluster/failover_cluster_app/{id}`.\n * Added new Field `configuredSlaDomainType` to FailoverClusterAppSummary\n   returned by `GET /failover_cluster/failover_cluster_app`.\n * Added new Field `configuredSlaDomainType` to FailoverClusterAppSummary\n   returned by `POST /failover_cluster/failover_cluster_app`.\n * Added new Field `configuredSlaDomainType` to FailoverClusterAppSummary\n   returned by `PATCH /failover_cluster/failover_cluster_app/{id}`.\n * Added new Field `configuredSlaDomainType` to FailoverClusterDetail returned\n   by `POST /failover_cluster`.\n * Added new Field `configuredSlaDomainType` to FailoverClusterDetail returned\n   by `GET /failover_cluster/{id}`.\n * Added new Field `configuredSlaDomainType` to FailoverClusterDetail returned\n   by `PATCH /failover_cluster/{id}`.\n * Added new Field `configuredSlaDomainType` to\n   FailoverClusterHierarchyObjectSummary returned by\n   `GET /failover_cluster/hierarchy/{id}`.\n * Added new Field `configuredSlaDomainType` to\n   FailoverClusterHierarchyObjectSummary returned by\n   `GET /failover_cluster/hierarchy/{id}/children`.\n * Added new Field `configuredSlaDomainType` to\n   FailoverClusterHierarchyObjectSummary returned by\n   `GET /failover_cluster/hierarchy/{id}/descendants`.\n * Added new Field `configuredSlaDomainType` to  FailoverClusterSummary returned\n   by `GET /failover_cluster`.\n * Added new Field `configuredSlaDomainType` to FilesetDetail returned by\n  `POST /fileset`.\n * Added new Field `configuredSlaDomainType` to FilesetDetail returned by\n  `GET /fileset/{id}`.\n * Added new Field `configuredSlaDomainType` to FilesetDetail returned by\n  `PATCH /fileset/{id}`.\n * Added new Field `configuredSlaDomainType` to FilesetSummary returned by\n  `GET /fileset`.\n * Added new Field `configuredSlaDomainType` to HdfsDetail returned by\n  `POST /hdfs`.\n * Added new Field `configuredSlaDomainType` to HdfsDetail returned by\n  `GET /hdfs/{id}`.\n * Added new Field `configuredSlaDomainType` to HdfsDetail returned by\n  `PATCH /hdfs/{id}`.\n * Added new Field `configuredSlaDomainType` to HdfsSummary returned by\n  `GET /hdfs`.\n * Added new Field `configuredSlaDomainType` to HostHierarchyObjectSummary\n   returned by `GET /host/hierarchy/{id}`.\n * Added new Field `configuredSlaDomainType` to HostHierarchyObjectSummary\n   returned by `GET /host/hierarchy/{id}/children`.\n * Added new Field `configuredSlaDomainType` to UnmanagedObjectDetails returned\n   by `GET /unmanaged_object`.\n * Added new Field `configuredSlaDomainType` to UnmanagedObjectSummary returned\n   by `GET /unmanaged_object`.\n * Added new Field `configuredSlaDomainType` to UnmanagedObjectSummary returned\n   by `GET /unmanaged_object/reader_object`.\n * Added new Field `configuredSlaDomainType` to VcenterDetail returned by\n   `GET /vmware/vcenter/{id}`.\n * Added new Field `configuredSlaDomainType` to VcenterSummary returned by\n   `GET /vmware/vcenter`.\n * Added new Field `configuredSlaDomainType` to VcenterSummary returned by\n   `PATCH /vmware/vcenter/{id}`.\n * Added new Field `configuredSlaDomainType` to VcenterSummary returned by\n   `PUT /vmware/vcenter/{id}`.\n * Added new Field `configuredSlaDomainType` to VirtualMachineDetail returned by\n   `GET /vmware/vm/{id}`.\n * Added new Field `configuredSlaDomainType` to VirtualMachineDetail returned by\n  `PATCH /vmware/vm/{id}`.\n * Added new Field `configuredSlaDomainType` to VirtualMachineSummary returned\n   by `GET /vmware/vm`.\n * Added new Field `configuredSlaDomainType` to VmSnapshotDetail returned by\n  `GET /vmware/vm/snapshot/{id}`.\n * Added new Field `configuredSlaDomainType` to VmwareHostDetail returned by\n  `GET /vmware/host/{id}`.\n * Added new Field `configuredSlaDomainType` to VmwareHostDetail returned by\n  `PATCH /vmware/host/{id}`.\n * Added new Field `configuredSlaDomainType` to VmwareHostSummary returned by\n  `GET /vmware/host`.\n * Added new Field `configuredSlaDomainType` to VmwareVmMountDetailV1 returned\n   by `GET /vmware/vm/snapshot/mount/{id}`.\n * Added new Field `configuredSlaDomainType` to VmwareVmMountDetailV1 returned\n   by `PATCH /vmware/vm/snapshot/mount/{id}`.\n * Added new Field `configuredSlaDomainType` to VmwareVmMountSummary returned by\n  `GET /vmware/vm/snapshot/mount`.\n * Added new field `isCustomRetentionApplied` to FilesetSnapshotDetail returned\n   by `GET /fileset/snapshot/{id}`.\n * Added new field `isCustomRetentionApplied` to HdfsSnapshotDetail returned by\n   `GET /hdfs/snapshot/{id}`.\n * Added new field `isCustomRetentionApplied` to MssqlDbSnapshotSummary returned\n   by `GET /mssql/db/{id}/snapshot`.\n * Added new field `isCustomRetentionApplied` to MssqlDbSnapshotDetail returned\n   by `GET /mssql/db/snapshot/{id}`.\n * Added new field `isCustomRetentionApplied` to VmSnapshotSummary returned by\n   `GET /vmware/vm/{id}/snapshot`.\n * Added new field `isCustomRetentionApplied` to VmSnapshotDetail returned by\n   `GET /vmware/vm/snapshot/{id}`.\n * Added endpoint `POST /cluster/{id}/manual_discover`, which allows\n   the customer to manually input data that would be learned using\n   mDNS discovery. Returns same output as the `discover` endpoint.\n * Added new endpoint `POST /data_source/{id}/snapshot/bulk_delete`.\n    Delete given snapshots for an object.\n * Added new endpoint `POST /data_source/snapshot/bulk_delete`.\n    Delete all snapshots for given objects.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of FilesetSnapshotDetail returned by\n   `GET /fileset/snapshot/{id}`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of HdfsSnapshotDetail returned by\n   `GET/hdfs/snapshot/{id}`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of MssqlDbSnapshotSummary returned by\n   `GET /mssql/db/{id}/snapshot`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of MssqlDbSnapshotDetail returned by\n   `GET /mssql/db/snapshot/{id}`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of VmSnapshotSummary returned by\n   `GET /vmware/vm/{id}/snapshot`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of VmSnapshotDetail returned by\n   `GET /vmware/vm/snapshot/{id}`.\n * Added new field `SnapshotRetentionInfo` to FilesetSnapshotDetail returned by\n   `GET /fileset/snapshot/{id}`.\n * Added new field `SnapshotRetentionInfo` to HdfsSnapshotDetail returned by\n   `GET /hdfs/snapshot/{id}`.\n * Added new field `SnapshotRetentionInfo` to MssqlDbSnapshotSummary returned by\n   `GET /mssql/db/{id}/snapshot`.\n * Added new field `SnapshotRetentionInfo` to MssqlDbSnapshotDetail returned by\n   `GET /mssql/db/snapshot/{id}`.\n * Added new field `SnapshotRetentionInfo` to VmSnapshotSummary returned by\n   `GET /vmware/vm/{id}/snapshot`.\n * Added new field `SnapshotRetentionInfo` to VmSnapshotDetail returned by\n   `GET /vmware/vm/snapshot/{id}`.\n * Added new endpoint `GET /unmanaged_object/{id}/snapshot`. Returns summary\n   of all the snapshots for a given object.\n * Added new endpoint `GET /unmanaged_object`. Returns the summary of all the\n   objects with unmanaged snapshots.\n * Added new endpoint `GET /report/compliance_summary`. Returns the summary of\n   snapshot compliance based on a time-based requirement of at least one\n   snapshot in each 24 hour report period for each protected object.\n   This endpoint ignores the policies assigned to protected objects through SLA\n   Domains.\n * Added new endpoint `GET /cluster/{id}/node_id`. Returns the IDs of the\n   nodes in the cluster.\n * Added new endpoint `GET /role`. Returns role metadata for all roles in an\n   organization.\n * Added new endpoint `POST /role`. Create a new role.\n * Added new endpoint `GET /role/{id}`. Get role metadata and the list of\n   principals assigned to a specific role.\n * Added new endpoint `PATCH /role/{id}`. Update metadata for a specific role.\n * Added new endpoint `DELETE /role/{id}`. Delete a role.\n * Added new endpoint `GET /principal`. Get principals.\n * Added new endpoint `GET /principal/role`. Get list of roles assigned to\n   principals.\n * Added new endpoint `POST /principal/role`. Assign roles to principals.\n * Added new endpoint `POST /principal/role/bulk_revoke`. Revoke roles from\n   principals.\n * Added `DELETE /certificate/{id}` endpoint to delete a certificate.\n * Added `PATCH /cluster/{id}/security/cors` endpoint to update the current CORS\n   support configuration for a web server.\n * Added `GET /cluster/{id}/security/cors` endpoint to get the current CORS\n   support configuration for a web server.\n * Added new optional field `failoverClusterAppId` to FilesetSummary and\n   FilesetCreate in `POST /fileset`, `GET /fileset` and `PATCH /fileset/{id}`\n   endpoints to enable clustered fileset backup.\n * Added `GET /unmanaged_object/reader_object` endpoint to get all\n   unmanaged objects that are recovered from reader archival locations.\n * Added `GET /failover_cluster` endpoint to get all failover clusters.\n * Added `POST /failover_cluster` endpoint to create a failover cluster.\n * Added `GET /failover_cluster/{id}` endpoint to retrieve a failover\n   cluster by id.\n * Added `PATCH /failover_cluster/{id}` endpoint to update a failover cluster.\n * Added `DELETE /failover_cluster/{id}` endpoint to delete a failover cluster.\n * Added `GET /failover_cluster/failover_cluster_app` endpoint to get all\n   failover cluster apps.\n * Added `POST /failover_cluster/failover_cluster_app` endpoint to create a\n   failover cluster app.\n * Added `GET /failover_cluster/failover_cluster_app/{id}` endpoint to retrieve\n   a failover cluster app by ID.\n * Added `PATCH /failover_cluster/failover_cluster_app/{id}` endpoint to update\n   a failover cluster app.\n * Added `DELETE /failover_cluster/failover_cluster_app/{id}` endpoint to delete\n   a failover cluster app.\n * Added `GET /legal_hold/snapshot` endpoint to get snapshots under legal hold.\n * Added `POST /legal_hold/snapshot` endpoint to apply legal hold on a snapshot.\n * Added `GET /legal_hold/object` endpoint to get all objects with snasphot\n   under legal hold.\n * Added `POST /legal_hold/snapshot/dissolve` to dissolve legal hold from\n   snapshots.\n * Added optional field `shouldUseAgent` to `RestoreFileJobConfig`.\n   in `POST /vmware/vm/snapshot/{id}/restore_file` to specify\n   whether to use Rubrik Backup Service to restore file. Default value is true.\n * Added `America/Costa_Rica`and `America/St_Johns` as supported cluster time\n   zones.\n * Added `GET /failover_cluster/hierarchy/{id}` to get summary of a\n   failover cluster hierarchy object.\n * Added `GET /failover_cluster/hierarchy/{id}/children` to get list of\n   immediate descendant objects.\n * Added `GET /failover_cluster/hierarchy/{id}/descendants` to get list of\n   descendant objects.\n * Added `GET /job_monitoring` to get job summary information, with options\n   to filter and sort the results for protection and recovery jobs that are\n   currently running, scheduled to run or completed in the past 24 hours.\n * Added `GET /job_monitoring/summary_by_job_type` to get job summary\n   information separated by job type for all jobs that are currently running,\n   scheduled to run or completed in the past 24 hours.\n * Added `GET /job_monitoring/summary_by_job_state` to get job summary\n   information separated by job state for all running jobs, jobs that have\n   been scheduled and jobs that are complete, for protection and recovery\n   jobs in the past 24 hours.\n * Added `GET /job_monitoring/csv_download_link` which returns a link to\n   download job summary information with the same filters as the\n   `GET /job_monitoring` API.\n * Added optional field 'legalHoldDownloadConfig' to\n   'FilesetDownloadFileJobConfig', 'DownloadFileJobConfig'.\n   This is an optional argument containing a Boolean parameter to depict if\n   the download is being triggered for Legal Hold use case.\n * Added optional field isPlacedOnLegalHold to BaseSnapshotSummary.\n   The Boolean parameter specifies whether the snapshot is placed under a\n   Legal Hold.\n * Added `POST /mssql/db/{id}/browse` endpoint to list backups, which includes\n   both snapshots and logs.\n * Added `POST /mssql/db/{id}/download_files` endpoint to download a list of\n   backup files specified by time range or point in time.\n * Added `POST /mssql/db/{id}/download_files_by_id` endpoint to download a list\n   of backup files specified by ID.\n * Added `PATCH /report/config` to set the number of days for which the report\n   job instances for log jobs are retained.\n * Added ISO8601 format date as a way of specifying time in MssqlRecoveryPoint.\n * Added primaryDatabaseLogBackupFrequency parameter to the response objects\n   MssqlLogShippingSummary and MssqlLogShippingDetail.\n * Added targetInstanceName parameter to MssqlMountSummary\n * Added `POST /mssql/db/{id}/download` endpoint to download the logs/snapshots\n   required to restore a SQL database to a given recovery point.\n * Added the optional fields uid, surname, and emailAddress to the\n   GenericCsrRequest (renamed from CsrRequest) and renamed WebCsrRequest\n   to CsrRequest.\n * Added new endpoints `PATCH /oracle/db/bulk`,\n   `PATCH /oracle/host/bulk`, and `PATCH /oracle/rac/bulk` for bulk\n   updating an array of IDs with `OracleProperties`.\n * Added an optional query parameter\n   `should_apply_to_existing_snapshots` to `PATCH /sla_domain/{id}` to\n   apply the new SLA configuration to existing snapshots of data sources\n   retained by the specified SLA Domain.\n * Added an optional query parameter\n   `should_apply_to_existing_snapshots` to `PUT /sla_domain/{id}` to\n   apply the new SLA configuration to existing snapshots of data sources\n   retained by the specified SLA Domain.\n * Added optional field 'shouldForce' to 'UpdateMountConfig' in PATCH\n   vmware/vm/snapshot/mount/{id} endpoint. Use this field to forcibly power\n   down a virtual machine mounted with Storage vMotion.\n * Added a new optional field `isOracleHost` to `HostRegister` in `POST /host`.\n   and `HostUpdate` in `PATCH /host/{id}` to indicate if we should discover\n   Oracle information during registration and host refresh.\n * Added a new model `EventCsvDownloadResponse` and REST API endpoints\n   `/event/csv_download_link` for downloading CSV file for event summary\n   information in the Activity log UI page.\n * Added `GET /host/hierarchy/{id}` to get summary of a\n   host/share hierarchy object.\n * Added `GET /host/hierarchy/{id}/children` to get list of\n   immediate descendant objects.\n * Added `isInVmc` in `GET /vmware/vm/{id}` and `PATCH /vmware/vm/{id}`.\n   to return whether the virtual machine is in a VMC setup.\n * Added `pendingSlaDomain` field to `GET /vmware/vm/{id}` and\n   `PATCH /vmware/vm/{id}` to indicate a pending SLA Domain assignment\n   on the Virtual Machine.\n * Added `pendingSlaDomain` field to `GET /mssql/hierarchy/{id}`,\n   `GET /mssql/hierarchy/{id}/children`, and\n   `GET /mssql/hierarchy/{id}/descendants` to indicate a pending SLA\n   Domain assignment on the MSSQL object.\n * Added `pendingSlaDomain` field to `GET /fileset`,\n   `POST /fileset`, `GET /fileset/{id}`, and `PATCH /fileset/{id}`\n   to indicate a pending SLA Domain assignment on the Fileset.\n * Added `pendingSlaDomain` field to the objects referenced by the\n   `filesets` field in the response objects of\n   `GET /failover_cluster/hierarchy/{id}`,\n   `GET /failover_cluster/hierarchy/{id}/children`,\n   `GET /failover_cluster/hierarchy/{id}/descendants`,\n   `GET /host/hierarchy/{id}`, and `GET /host/hierarchy/{id}/children`\n   to indicate a pending SLA Domain assignment on the object.\n * Added endpoint `POST /vmware/vcenter/{id}/refresh_vm` which\n    allows refreshing metadata for a single virtual machine in a vCenter.\n * Added optional field `shouldForceFull` to the body parameter of\n   `PATCH /mssql/db/{id}` to enable requiring a full snapshot for a specified\n    SQL Server database.\n * Added `LinuxHost`, `WindowsHost` and `NasHost` to the\n   `object_type` filtering field of the `GET /event/latest` endpoint.\n\n ### Changes to V1 API in Rubrik Version 5.1.1\n ## Breaking changes:\n\n ## New features:\n * Added `has_instances` parameter to GET `/mssql/hierarchy/{id}/descendants`.\n   and GET `/mssql/hierarchy/{id}/children`. Added `hasInstances` field in the\n   response object.\n\n ### Changes to V1 API in Rubrik Version 5.1.0\n ## Deprecation:\n\n ## New features:\n * Added `GET /archive/aws/s3/{id}/account_id` endpoint to get the\n   account ID of the AWS data location.\n * Added `DELETE /authorization/cache` endpoint to clear cached authorization\n   information.\n * Added the `GET /syslog/export` endpoint to get all syslog export rules.\n * Added the `POST /syslog/export` endpoint to add a syslog export rule.\n * Added the `GET /syslog/export/{id}` endpoint to get a syslog export rule.\n * Added the `PATCH /syslog/export/{id}` endpoint to update a syslog export\n   rule.\n * Added the `DELETE /syslog/export/{id}` endpoint to delete a syslog export\n   rule.\n * Added the `POST /syslog/export/test` endpoint to test a syslog export rule.\n * Added stubs for the `GET /event/latest` endpoint to V1 to\n   facilitate a future migration from internal to V1.\n * Added stubs for the `GET /event_series/{id}` endpoint to V1\n   to facilitate a future migration from internal to V1.\n * Added stubs for the `GET /event` endpoint to V1 to facilitate\n   a future migration from internal to V1.\n * Added optional query parameter 'snappableStatus' to /vmware/vcenter,\n   /vmware/compute_cluster, /vmware/host,  /host, /mssql/instance, and\n   /windows_cluster. This parameter enables a user to fetch the set of\n   protectable objects from the list of objects visible to that user.\n * Added optional field `alias` to HostSummary, HostRegister, and HostUpdate\n   schemas. This field will allow the user to specify an alias for each host\n   which can be used for search.\n * Added `POST /archive/location/{location_id}/reader/refresh/data_sources`.\n   endpoint to refresh the metadata of a list of given data sources from\n   the given reader location.\n * Added `POST /managed_volume/snapshot/export/{id}/script` endpoint to\n   generate a script to create a directory to view all files in all channels\n   of a managed volume snapshot export.\n * Moved the `GET /blackout_window` endpoint from internal to V1.\n * Moved the `PATCH /blackout_window` endpoint from internal to V1.\n * Added `GET /certificate` endpoint to get all imported certificates.\n * Added `POST /certificate` endpoint to import a certificate.\n * Added `GET /certificate/{id}` endpoint to retrieve a certificate by id.\n * Added `PATCH /certificate/{id}` endpoint to update a certificate.\n * Added `GET /csr` endpoint to get all outstanding\n   Certificate-Signing-Requests.\n * Added `POST /csr` endpoint to generate a Certificate-Signing-Request.\n * Added 'DELETE /oracle/db/{id}/downloaded__snapshots' endpoint\n   to delete downloaded Oracle db snapshots and log snapshots.\n * Added unauthenticated endpoint `GET /saml/sso_status` to check\n   SAML SSO status. For example, we can check whether SSO is enabled or not.\n * Added optional field archivalTieringSpec to ArchivalSpecV2 to support\n   archival tiering. This enables the user to configure either Instant Tiering\n   or Smart Tiering (with a corresponding minimum accessible duration) on an\n   SLA domain with archival configured to an Azure archival location.\n * Updated endpoint /mssql/db to have a new optional query paramter,\n   indicating if backup task information should be included.\n * Added the `IoFilterSummary` object with `id`, `name`, `version`, `vendor`.\n   fields and `summary`, `releaseDate` optional fields.\n * Added `GET /vmware/computer_cluster/request/{id}` endpoint to get the details\n   of an asynchronous request that involves a VMware compute cluster.\n * Added `PATCH /vmware/computer_cluster/{id}` endpoint to update\n   the configuredSlaDomainId for a VMware compute cluster with a specific ID.\n * Added `GET /vmware/compute_cluster/{id}/io_filter` to get the ioFilters on\n   the VMware compute cluster with a specific ID.\n * Added `POST /vmware/compute_cluster/{id}/install_io_filter` endpoint to\n   install the Rubrik ioFilter to the VMware compute cluster with a specific\n   ID.\n * Added `POST /vmware/compute_cluster/{id}/uninstall_io_filter` endpoint to\n   uninstall the Rubrik ioFilter from the VMware compute cluster with a\n   specific ID.\n * Added `POST /vmware/compute_cluster/{id}/upgrade_io_filter` endpoint to\n   upgrade the Rubrik ioFilter to the latest version for the VMware compute\n   cluster with a specific ID.\n * Moved the `GET /vmware/compute_cluster` endpoint from internal to V1.\n * Moved the `GET /vmware/compute_cluster/{id}` endpoint from internal to V1.\n * Added endpoint /saml/authn_request/{idp_name} for making SAML\n * Added an optional field 'isRetentionLocked' to 'POST /sla_domain',\n   'PUT /sla_domain/{id}' and 'PATCH /sla_domain/{id}' to allow users to manage\n   the Retention Lock capabilities of an SLA Domain.\n * Added endpoint 'POST /saml/authn_request/{idp_name}' for making SAML\n   authentication request for a given ID Provider.\n * Added endpoint 'POST /saml/rubrik_metadata' for downloading Rubrik SAML\n   metadata file.\n * Added a series of new endpoints /idp_auth_domain for managing SAML\n   Id Provider integration.\n * Moved the 'connectionStatus' field from VcenterDetail to VcenterSummary.\n * Added new optional query parameters 'data_sources' and 'snapshot_ids' to\n   'GET /sla_domain' endpoint. This allows users to filter SLA Domains based\n   on whether they can be assigned to specified data sources and snapshots.\n * Changed the existing endpoints `GET /mssql/db/` `GET /mssql/instance`.\n   `GET /mssql/db/{id}` `PATCH /mssql/db/{id}` `GET /mssql/db/snapshot/{id}`.\n   `GET /mssql/instance/{id}` `GET /mssql/instance/{id}` to return an\n   unprotectable reason as a string in the 'unprotectableReason' field instead\n   of a JSON struct.\n * Added a `PUT /host/certificate/{id}` endpoint to update the\n   certificate of the given host\n * Added `GET /vcd/vapp/template/snapshot/{snapshot_id}/export` to get\n   available options for a vApp template snapshot export.\n * Added `POST /vcd/vapp/template/snapshot/{snapshot_id}/export` to queue\n   export of a vApp template snapshot.\n * Added continuous data protection state for each VMware virtual machine.\n * Added optional field 'isIoFilterInstalled' to vCenter summary. Returns true\n   if any Rubrik IO filters are installed on any compute clusters that are\n   a part of the vCenter.\n * Added optional field `cloudStorageTier` to `BaseSnapshotSummary`, to indicate\n   the current storage tier of the archived copy of a snapshot.\n * Added `POST ` /vmware/vm/cdp endpoint to get live CDP info for a list of\n   virtual machines.\n * Added `POST ` /vmware/vm/cdp_state endpoint to get CDP state info for a list\n   of virtual machines.\n * Added the optional field isEffectiveSlaDomainRetentionLocked to\n   FilesetSummary. The field is a Boolean that specifies whether the effective\n   SLA Domain of a fileset is retention locked.\n * Added optional field isEffectiveSlaDomainRetentionLocked to `Snappable`.\n   The parameter depicts if the effective SLA domain for the data source is\n   a Retention Lock SLA Domain.\n * Added optional field isConfiguredSlaDomainRetentionLocked to SlaAssignable.\n   The parameter depicts if the configured SLA domain for the object is a\n   Retention Lock SLA Domain.\n * Added optional parameter `ignore_connection_status` to `GET /vmware/vcenter`.\n   to skip calculating connection status.\n * Added required fields: isCdpEnabled(type: boolean) and cdpState(type:\n   CdpState Enum) to VirtualMachineDetails.\n * Moved the GET `/mssql/hierarchy/{id}/descendants` and\n   GET `/mssql/hierarchy/{id}/children` endpoints from internal to v1.\n   Added the `is_relic`, `is_live_mount` `is_clustered`, and\n   `is_log_shipping_secondary`.\n   parameters. Changed acceptable values of `object_type` and `sort_by`.\n   parameters. Added `hasPermissions`, `isInAvailabilityGroup`,\n   `descendantSlaDomains`, `instanceChildren`,\n   `unprotectableReasons`, `isLiveMount`, `isLogShippingSecondary`,\n   `hostStatus`, `cbtEnabled`, `cbtEffectiveStatus`, `isClustered` and\n   `clusterInstanceAddress` fields in the\n   response object. Removed `replicaCount` field in the response object.\n   Added support for returning non-availability databases.\n   Changed `object_type` query parameter to take a comma-separated list of\n   object types.\n   Added the GET `/mssql/hierarchy/{id}` endpoint to get a specific hierarchy\n   object.\n * Added the POST `/mssql/sla_domain/assign` endpoint to assign SLA properties\n   to SQL Server objects.\n * Added isRetentionLocked to MssqlInstanceSummary.\n\n ### Changes to V1 API in Rubrik Version 5.0.3\n ## Deprecation:\n\n ## New features and improvements:\n * Added a new optional field 'oracleQueryUser' to HostRegister, HostUpdate\n   and HostDetail objects, for setting the Oracle username for account with\n   query privileges on the host. This applies the following endpoints:\n   POST /host/bulk, PATCH /host/{id}, and GET /host/{id}.\n\n ### Changes to V1 API in Rubrik Version 5.0.2\n ## Deprecation:\n\n ## New features and improvements:\n * Added `GET /oracle/db/{id}/restore_estimate` endpoint to provide an\n   estimate of the amount of data that must be downloaded for a restore\n   operation.\n * Introduced optional field `logicalSize` to `VirtualMachineDetail`. This\n   field gives the sum of logical sizes of all the disks in the virtual\n   machine.\n * Added optional parameter `ignore_connection_status` to\n   `GET /vmware/vcenter/{id}`. Set this parameter to skip calculating\n   connection status.\n\n ### Changes to V1 API in Rubrik Version 5.0.1\n ## Deprecation:\n\n ## New features and improvements:\n * Added `GET /cluster/{id}/security/encryption` endpoint to provide encryption\n   at rest status of the cluster.\n * Added `GET /vmware/host/{id}/datastore` endpoint to get the details\n   of datastores for an ESXi host.\n * Added `POST /vmware/vm/mount/{id}/relocate` endpoint to migrate datastore\n   for a virtual machine from Live Mount or Instant Recovery.\n * Added `America/Santiago`, `Australia/Adelaide` and `Australia/Brisbane` as\n   supported cluster time zones.\n\n ### Changes to V1 API in Rubrik Version 5.0.0\n ## Deprecation:\n * Deprecating query paramter `hostname` of `GET /host` and response property\n   `hostname` of `GET /host`, `POST /host`, `PUT /host/certificate/{id}`,\n   `GET /host/{id}`, `PATCH /host/{id}`, and `POST /host/{id}/refresh`.\n   Use `name` instead. Support for `hostname` is present in v1 and removed in v2.\n * Deprecating response property `isArchived` of `GET /mssql/db`,\n   `GET /mssql/db/{id}`, and `PATCH /mssql/db/{id}`. Use\n   `isDeleted` instead. Support for `isArchived` is present in v1 and removed in v2.\n * Deprecating parameter `datastoreName` of `Post /vmware/vm/snapshot/{id}/mount`.\n\n ## New features:\n * Added a new PUT endpoint to /ldap_service/{id}.\n * Added /cluster/{id}/snmp_mib_link endpoint.\n * Added a new optional field 'oracleSysDbaUser' to /host/{id} POST endpoint\n   during register host for setting the Oracle username for account with sysdba\n   privileges on this host.\n * Added a new optional field 'oracleSysDbaUser' to /host/{id} endpoint for\n   changing the Oracle username for account with sysdba privileges on this\n   host.\n * Added a new optional field 'mfaServerId' to /ldap_service endpoint for\n   associating a configured MFA server.\n * Added a new /sla_domain endpoint with the same functionality as /v1, but\n   added support for weekly and quarterly time units and modify the config of\n   monthly and yearly.\n * Added a new optional field 'isArrayEnabled' to 'FilesetTemplateCreate'\n   for creation of storage array-enabled fileset templates. We also include\n   this new field in 'FilesetTemplateDetail'.\n * Added a new optional field 'arraySpec' to 'FilesetCreate' for\n   creation of storage array-enabled filesets. We also include\n   this new field in the responses of the `GET /fileset/{id}` and\n   `GET /fileset` endpoints.\n * Added ability to use the /host/{id} endpoint to specify a host level\n   setting for enabling or disabling CBT backups of SQL Server databases,\n   along with new optional fields 'mssqlCbtEnabled', 'mssqlCbtEffectiveStatus'\n   and 'mssqlCbtDriverInstalled'.\n * Added ability to use the /host/{id} endpoint to instruct the Rubrik cluster\n   to remove the CBT driver from a Windows host that has CBT backups of SQL\n   Server databases disabled.\n * Added new optional field 'isPassthrough' to 'POST /fileset' endpoint to\n   indicate if we want to take a direct archive backup.\n * Added a new field unprotectable_reasons to GET /mssql/db/{id} and\n   GET /mssql/instance/{id}. This field keeps track of the reasons that a\n   SQL Server database or instance cannot be protected by Rubrik.\n * Added ability to use the /host/{id} endpoint to specify a host level\n   setting for enabling or disabling VFD backups of volumes on Windows hosts.\n * Added ability to use the /host/{id} endpoint to instruct the Rubrik cluster\n   to remove the VFD driver from a Windows host that has VFD backups of volumes\n   disabled.\n * Added new optional field 'isOverwrite' to ExportMssqlDbJobConfig for\n   'POST /mssql/db/{id}/export' endpoint to enable overwriting an existing\n   database while using the export operation.\n * Added a new optional field 'allowOverwrite' to the\n   'POST /mssql/db/{id}/export' endpoint to allow overwriting an existing\n   database during the export.\n * Added a new field 'hasAttachingDisk' to 'GET /vmware/vm/snapshot/mount' and\n   'GET /vmware/vm/snapshot/mount/{id}' that indicates to the user whether\n   this is an attaching disk mount job.\n * Added a new field 'attachingDiskCount' to 'GET /vmware/vm/snapshot/mount'\n   and 'GET /vmware/vm/snapshot/mount/{id}' that indicate to the user how many\n   disks are attached.\n * Removed optional field 'clusterInstanceAddress' from\n   'PATCH /mssql/instance/{id}' endpoint since host-centric discovery for\n   cluster instances eliminates the need to edit the instance address.\n * Added new field `missedSnapshotTimeUnits` in `MissedSnapshot`.\n * Added new field 'vmxFileContent' in getSnapshotDetail\n * Added new optional fields 'organizationId' and 'organizationName' to\n   `/host/{id}` and `/host` endpoints to get the organization a host is\n   assigned to due to Envoy.\n * Added new field 'vmwareTagList' in getSnapshotDetail\n * Added new endpoint GET /cluster/{id}/certificate to get the cluster cert.\n * Added new optional field PATCH /vmware/vm/{id} to indicate whether or not\n   to refresh the in-memory cache after updates to a virtual machine record.\n * Added new field 'shouldRecoverTags' in MountSnapshotJobConfigV1\n * Added new field 'shouldRecoverTags' in InstantRecoveryJobConfig\n * Added new field 'shouldRecoverTags' in ExportSnapshotJobConfig\n * Added a new optional field 'operating_system' to 'GET /host'.\n * Added a new optional field 'apiEndpoint' to 'NasBaseConfig'.\n * Added new optional field 'enableSymlinkResolution' to FilesetSummary in\n   'POST /fileset', \"GET /fileset\" and \"PATCH /fileset/{id}\" endpoints to\n   indicate if we want to resolve symlinks during metadata scan.\n * Added new optional field 'enableHardlinkSupport' to FilesetSummary and\n   FilesetCreate in 'POST /fileset', \"GET /fileset\" and \"PATCH /fileset/{id}\"\n   endpoints to enable recognition and deduplication of hardlinks in\n   fileset backup.\n\n ## Improvements:\n * Added optional 'apiToken' and 'apiEndpoint' fields to NasConfig to support\n   Pure FlashBlade devices.\n * Added a new field 'guestOsName' to GET /vmware/vm. This allows users to\n   filter virtual machines based on the guest operating system name.\n * Enhanced GET /vmware/vm/snapshot/{id} response by adding disk details\n   such as fileName and deviceKey.\n * Added isMountAllowed field to the response of GET\n   /mssql/db/{id}/recoverable_range. This helps identify which recoverable\n   ranges support Live Mount, which is affected by whether a database snapshot\n   contains filestreams.\n * Added optional query parameters limit and offset to support pagination for\n   GET /mssql/db endpoint.\n * Added optional query parameters sortOrder and sortBy to enable users to\n   sort the results of GET /mssql/db endpoint by effectiveSlaDomainId and name.\n\n ### Changes to V1 API in Rubrik Version 4.2\n ## Breaking changes:\n * The input field OperatingSystemType value `Linux` is replaced by `UnixLike`.\n   in FilesetTemplateCreateDefinition, used by POST /fileset-template, and\n   in FilesetTemplatePatchDefinition, used by PATCH /fileset_template/{id}.\n * The input field operating_system_type value `Linux` is replaced by `UnixLike`.\n   in GET /fileset-template and GET /host.\n\n ## New features:\n * Added a new /ldap_service endpoint for managing Active Directory integration.\n * Added a new optional field 'nasBaseConfig' to GET /api/v1/host. This field\n   allows NAS (Isilon/NetApp) api credential to be displayed and edited.\n * GET /host/{id}/search now returns search results for filesets, Windows volume\n   groups, and storage array volume groups belonging to the host. Previously,\n   the endpoint would only return fileset search results.\n * Added endpoints for actions related to log shipping configurations:\n   POST /mssql/db/{id}/log_shipping to create, GET /mssql/db/log_shipping to\n   query, GET /mssql/db/log_shipping/{id} to retrieve individual details,\n   DELETE /mssql/db/log_shipping/{id} to delete, and POST\n   /mssql/db/log_shipping/{id}/reseed to reseed an unhealthy secondary\n   database.\n * Added `Africa/Johannesburg`, `Africa/Lagos` and `Africa/Nairobi` as\n   supported cluster time zones.\n ## Improvements:\n * Added 2 new optional fields `apiHostname` and `zoneName` to POST /host\n   and GET /host. These fields allow different zones to be configured for\n   Isilon NAS.\n * Added a new field 'geolocation' to GET /cluster/{id} and PATCH /cluster/{id}.\n   These allow users to view and modify the geolocation of the cluster,\n   respectively.\n * Added a new field `guestOsType` to the `VirtualMachineDetail`.\n   object used in response of `GET /vmware/vm/{id}`.\n * Added an optional organizationId field to the HostRegister request in POST\n   /host to allow users with the global admin RBAC role to add a host to an\n   organization specified by the value of the organizationId field.\n * Added canLiveMount field to the responses of `GET /mssql/db/snapshot/{id}`.\n   and `GET /mssql/db/{id}/snapshot`.\n * Added an optional field `agentStatus` to `VirtualMachineSummary` object used\n   in response of `GET /vmware/vm` endpoint. This allows user to check the\n   Rubrik Backup Service connection status of the corresponding VMware VM.\n * Added the `POST /vmware/vm/{id}/register_agent` endpoint.\n * Added a new field 'createDatastoreOnly' to POST\n   /vmware/vm/snapshot/{id}/mount. This allows user to mount snapshot to vmware\n   datastore only, without create a virtual machine.\n * Added a new field `numWindowsVolumeGroups` to the `SlaDomainDetail` and\n   `SlaDomainSummary` objects used in response to `GET /sla_domain` endpoints.\n * Added new optional field 'shouldRefreshCacheAfterUpdate' for PATCH\n   /vmware/vm/{id} to indicate whether or not to refresh the in-memory cache\n   after updates to a virtual machine record.\n\n ### Changes to V1 API in Rubrik Version 4.1\n\n ## Breaking changes:\n * The 'allowedBackupWindow' and 'firstFullBackupWindow' input field for\n   /sla_domain now take the cluster time zone instead of UTC.\n\n ## New features:\n * Added POST /host/{id}/refresh endpoint to refresh hosts without\n   registering them again\n * Added GET /fileset/snapshot/{id} endpoint to retrieve details of a\n   fileset snapshot.\n * Added POST /mssql/db/{id}/log_backup endpoint for taking on-demand\n   log backup of SQL Server databases.\n * Added a new optional query parameter 'is_agentless' to\n   GET /windows_cluster. This allows users to filter all clusters that\n   do not have any hosts with Rubrik connectors installed. If this\n   parameter is omitted, all clusters are returned.\n * Added a new field 'isAgentless' to GET /windows_cluster. This indicates\n   whether all the hosts on this windows cluster do not have Rubrik connector\n   installed. If even one host has Rubrik connector installed, this will\n   be set to false.\n * Added a new optional 'organization_id' query parameter on POST /session.\n   This allows users to specify the organization to which they intend to\n   authenticate. If this parameter is omitted, an organization is chosen\n   automatically.\n * Added a new 'organizationId' field to the response on POST /session. This\n   indicates the organization to which the user has authenticated.\n * Added a new field 'moid' on GET /vmware/vm. This allows users to search\n   VMWare VMs by Managed Object ID. The list of results of the call can now\n   additionally be sorted in ascending/descending order by moid.\n * Added new fields 'replicas' and 'availabilityGroupId' on GET /mssql/db\n   and GET /mssql/db/{id}. If a database is an availability database,\n   it will have some number of replicas, which are copies of the database\n   running on different instances. Otherwise, there will only be one\n   replica, which represents the single copy of the database. The field\n   'availabilityGroupId' will be set only for availability databases\n   and points to the availability group of the database. Also deprecated\n   several fields on these endpoints, as they should now be accessed via\n   the 'replicas' field.\n * Added a field 'cloudInstantiationSpec' on GET /vmware/vm and PATCH\n   /vmware/vm/{id} to allow enabling/disabling/updating specs for automatic\n   conversion to cloud image on a per VM basis\n * Added a new optional query parameter 'availabilityGroupId' to GET /mssql/db,\n   in order to filter databases by their availability group ID.\n * Added a new field 'timezone' to GET /cluster/{id} and PATCH /cluster/{id}.\n   These calls show and change, the current time zone setting of the cluster.\n * Add a new field 'ignoreErrors' to POST /vmware/vm/snapshot/{id}/restore_file\n   that will let job to ignore file errors during restore jobs.\n * Added `Asia/Kolkata` and `Asia/Kathmandu` as supported cluster time zones.\n\n ### Changes to V1 API in Rubrik version 4.0\n\n New features:\n * Added a new field 'name' on GET /sla_domain. This allows users to search\n   SLA Domains by name. Users can also sort the SLA Domain summary results\n   in ascending/descending order by name\n * The Rubrik cluster generates a unique ID for each virtual machine when a\n   vCenter Server is added. When a virtual machine changes to another vCenter\n   Server or unregisters and registers with the same vCenter Server, a new\n   unique ID is generated for that virtual machine. When this happens, the\n   virtual machine object associated with the original ID becomes a relic.\n   In this release we have added the option conflictResolutionAuthz to\n   add/edit vCenter endpoints of the Rubrik REST APIs. This option can take\n   either 'AllowAutoConflictResolution' to authorize the linking of relic\n   virtual machine objects with the current virtual machine object of a\n   specific virtual machine, and makes the collective snapshot history\n   available through the current object. Or it can take 'NoConflictResolution'\n   to not allow linking. Default value is 'NoConflictResolution'.\n * Introduced endpoints for SQL Server Live Mounts: POST /mssql/db/{id}/mount,\n   GET /mssql/db/mount, GET /mssql/db/mount/{id}, and\n   DELETE /mssql/db/mount/{id}. These allow users to create, query for, and\n   delete Live Mounts for SQL Server databases.\n * Added the isLiveMount field to the response of GET /mssql/db. Added an\n   optional is_live_mount query parameter to filter by this field.\n * Added links field to the paginated responses of\n   GET /vmware/vm, /vmware/vm/mount and /fileset endpoints. This allows users\n   to navigate between pages by following the href in links.prev and links.next.\n * Introduced optional caCerts parameter for the vCenter post/put/patch\n   endpoints to specify trusted CA certs to use when connecting to a vCenter\n   server and associated ESX hosts.\n * Modified PATCH /mssql/instance/{id} endpoint to support SQL db\n   auto-protection, added fields configuredSlaDomainId,\n   logBackupFrequencyInSeconds, logRetentionHours, and copyOnly to the PATCH\n   request, as well as configuredSlaDomainId, configuredSlaDomainName,\n   logBackupFrequencyInSeconds, logRetentionHours, and copyOnly to the GET and\n   PATCH responses.\n * Added GET /vmware/vcenter/{id} endpoint to allow fetching details of a\n   single vCenter server, including its refresh and delete status.\n * Introduced optional parameter keepMacAddresses to\n   POST /vmware/vm/snapshot/{id}/mount, /vmware/vm/snapshot/{id}/export, and\n   /vmware/vm/snapshot/{id}/instant_recovery endpints.\n   This allows new VMs to have the same MAC address as their source VMs.\n * Introduced optional parameters offset and limit to support\n   pagination for Browse end-point.\n * Added `nodeId` to `AsyncRequestStatus` to improve debugging job failures.\n\n\n ### Changes to V1 API in Rubrik version 3.2\n\n New features:\n * Added an option to preserve the virtual machine moid during instant recovery.\n   Use this option cautiously. It will permanently overwrite the source\n   virtual machine. The source virtual machine cannot be recovered if the\n   operation fails. It will not create a new virtual machine and rename\n   the original one so we could fall back to the original in case of a failure\n   in the process. This is not exposed in the Web UI and the API user should\n   be careful to not destroy the original virtual machine by accident.\n * Introduced shareId into /fileset endpoints to support\n   the creation of filesets based on network shares.\n * Introduced optional config parameter for all on demand\n   snapshot endpoints. The config parameter includes an optional slaId field.\n   The policies of the specified SLA Domain determine the retention of backups\n   on the local Rubrik cluster, the retention target, and the archival location.\n * Introduced optional parameters to endpoint /mssql/db/{id}/export,\n   so that physical filenames and logical filenames can be changed\n   for exported databases. These two parameters are newFilename and\n   newLogicalName.\n * Introduced optional config parameter for the VM patch endpoint\n   (PATCH /vmware/vm/{id}) to specify a guest credential for a\n   specific VM.\n * Introduced optional query parameters to endpoint /host, to\n   support infix searching by hostname and sort order of results.\n * Introduced slaId and slaName field to all snapshot summary/details object.\n   These fields specify the SLA Domain object that is associated with the\n   snapshot.\n\nBug Fixes:\n * Made path parameter required in GET /fileset/snapshot/{id}/browse\n   and GET /vmware/vm/snapshot/{id}/browse. Previously, an error was\n   thrown when path wasn't passed in. This solves that bug.\n\n ### Changes to V1 API in Rubrik version 3.1\n Initial GA release\n\n# Overview #\nThe Rubrik REST API provides a means to work with Rubrik clusters and Rubrik Edge virtual appliances using text-based representations of the resource objects that are managed by the Rubrik software.\n\nIn its simplest form, the RESTful architecture used by the Rubrik REST API has the following workflow:\n1. Client authenticates with the Rubrik REST API server and starts a session.\n2. Client sends an HTTP request to the URI for a resource object.\n3. Server handles the request and sends an HTTP response with a JSON formatted response body.\n\nThis overview section provides a basic description of the HTTP requests and responses used with the Rubrik REST API. The [Authentication](#section/Authentication) section provides information about how a client authenticates with the Rubrik REST API server.\n\n## Documentation conventions\n\nThe descriptions in this documentation use 'Rubrik cluster' to refer to both Rubrik clusters and Rubrik Edge virtual appliances.\n\nThe documentation uses a dollar symbol to indicate a variable in body text and code samples. Some examples:\n* `$cluster_address` to represent a Rubrik cluster IP or resolvable host name\n* `$snapshot_id` to represent the ID of a specific snapshot\n* `$request_id` to represent the ID of a specific asynchronous request\n\nTo shorten the path shown in a code sample, the documentation sometimes replaces a longer variable form with the variable form `{id}`. This variable form represents the `id` value for an associated member string in a response body or request URL.\n\nThe documentation use the term 'snappable' to refer to all objects that have data that can be protected by a Rubrik cluster or a Rubrik Edge appliance. For example, all of the following are 'snappables':\n* Virtual machines\n* File systems\n* SQL Server databases\n\n## Versioning\n\nThe Rubrik REST API structures the request URL to include the version of the API. This ensures that backwards incompatible improvements in a new version are not unintentionally used with an earlier version of the API.\n\nThe URL of a request includes a segment that identifies the version of the API. In the URL, the version segment always follows immediately after the Rubrik REST API server name or IPv4 address.\n\nFor example, for a Rubrik cluster with the server address `$cluster_address` a request to the cluster endpoint for Rubrik REST API v1 would look like this:\n`https://$cluster_address/api/v1/cluster`\n\nIn this URL, the `v1` represents the version number for Rubrik REST API v1.\n\nThe Rubrik REST API increments the version number when the new version includes a change that is not backward compatible.\n\nExamples of changes that are not backward compatible include:\n* Resource type removed\n* Required parameter added to an existing resource type\n* Required parameter removed from an existing resource type\n* Renamed resource or parameter\n* Authentication requirement added for a previously unauthenticated resource\n\nWhen the Rubrik REST API has changes that are not backward compatible, those changes appear in a new version. For example, incompatible changes to v1 appear in v2. The Rubrik REST API server makes v2 endpoints available on the path: `https://$cluster_address/api/v2/`. The Rubrik REST API server continues to provide the v1 endpoints on the path: `https://$cluster_address/api/v1/`.\n\n### Changes within a version\n\nBackward compatible changes can be added to the Rubrik REST API as part of an update of the Rubrik CDM software on a Rubrik cluster or Rubrik Edge appliance. When this occurs, the version number remains the same and the URL segment that identifies the API version does not change. The [Changelog](#section/Changelog) that is provided in the docs for each version of the Rubrik REST API describes the changes that are made within that version.\n\nExamples of backward compatible changes include:\n* New API resource added\n* New optional request parameters added to existing resources\n* New properties added to existing responses\n\n## Architecture\n\nThe Rubrik REST API architecture centers around logical entities called *resource objects*. Resource objects can be discrete entities or can contain a hierarchy of other, dependent, resource objects. A dependent, or child, resource object is referenced through the parent object.\n\nFor example, a virtualization environment is a resource object that contains virtual machines as child resource objects. The virtual machines, in turn, contain snapshots as child resource objects. To address this hierarchy, the path to a snapshot must include the parent objects.\nAs shown here those parent objects are the virtualization environment (`vmware`) and the virtual machine (`vm`): `/vmware/vm/snapshot`.\n\nWhen a request addresses a specific resource object the path must include the  `id` of that specific object.\n\nFor example, to address a specific snapshot with the `id` value of `123-456` the path would be: `/vmware/vm/snapshot/123-456`.\n\nThe full URL for the request would be: `https://$cluster_address/api/v1/vmware/vm/snapshot/123-456`\n\nThe path in this example points to a specific snapshot with the `id` value of `123-456`.\n\nThe `id` is an opaque value which is generated by the Rubrik REST API. It does not follow any specific format.\n\n### API base path\n\nEach endpoint in the Rubrik REST API exists on one of two possible base paths:\n* `https://$cluster_address/api/v1/`\n* `https://$cluster_address/api/internal/`\n\nThe `/api/v1` base path provides the most commonly used endpoints. Rubrik considers these endpoints to be stable. Rubrik designs new releases of the Rubrik REST API to provide as much backward compatibility for these endpoints as possible. After an upgrade to a new version of the Rubrik CDM software, or to a new version of the Rubrik REST API, existing calls to endpoints on the `/api/v1` base path will normally continue to work.\n\nThe primary purpose of the `/api/internal` base path is to provide endpoints that are used by the Rubrik cluster. These endpoints are *internal* in the sense that the Rubrik CDM software uses them to provide a wide variety of cloud data management features. The evolution and improvement of the Rubrik CDM software can cause changes to these endpoints, removal of these endpoints, or addition of new `/api/internal` endpoints. Rubrik does not attempt to make the `/api/internal` endpoints backward compatible.\n\n### Requests\n\nTo perform a task, the Rubrik REST API uses an HTTP request. Most requests perform one of these actions:\n* Get an instance of an object from a list\n* Add an instance of an object to a list\n* Perform an operation on an object using the `id` of the object.\n\nThe following table describes the HTTP method and endpoint excerpts for some typical HTTP requests.\n\n**Note:** The endpoints shown here would be appended to the base URL: `https://$cluster_address/vmware`.\n\n| Method | Endpoint | Description |\n| ------ | --- | ----------- |\n| GET | `/vm/snapshot` | Returns a list of snapshots. |\n| POST | `/vm/snapshot` | Creates a new snapshot resource object. |\n| GET | `/vm/snapshot/{id}` | Returns information about the snapshot that is identified by `id`. |\n| PATCH | `/vm/snapshot/mount/{id}` | Changes the power status of the mounted snapshot that is identified by `id`. |\n| PUT | `/vcenter/{id}` | Provides a request body with a complete update of the properties of the vCenter Server object that is identified by `id`. |\n| DELETE | `/vm/snapshot/{id}` | Deletes the snapshot that is identified by `id`. |\n| GET | `/vm/{id}/missed_snapshot` | Returns the value of `missed_snapshot` for a snapshot that is identified by `id`. |\n| POST | `/vm/snapshot/{id}/mount` | Performs a `mount` operation using the snapshot that is identified by `id`. |\n\n#### Reserved ID alias\n\nThe alias `me` can be used with some endpoints as a shorthand replacement for the current, or local, value of that resource object type. For example, for the resource object type `/cluster` the alias `me` can be substituted for the `id` of the Rubrik cluster that is hosting the current session. For the resource object type `/session` the alias `me` can be substituted for the `id` of the current session.\n\nIn filters, use the alias `local` to refer to the Rubrik cluster that is hosting the current session.\n\n#### Timestamp\n\nThe Rubrik REST API uses a timestamp to express all time values. The timestamp meets the standards of ISO 8601 and uses Coordinated Universal Time (UTC). Timestamps take the form: YYYY-MM-DDTHH:MM:SSZ, with YYYY for the four digit year value, MM for the two digit month value, DD for the two digit day of the month value, HH for the two digit hour value using a 24-hour clock, MM for the two digit minute value, and SS for the two digit second value. The T stands for time and the Z stands for Zulu time, another name for UTC.\n\n**Example:** Timestamp in a JSON-formatted response body\n\n```bash\n{\n  \"createdTimestamp\": \"2016-02-11T18:02:24Z\"\n}\n```\n\n### Responses\n\nThe Rubrik REST API server responds to all requests by sending an HTTP response message. The response contains a status code and, when appropriate, a JSON object in the response body.\n\n#### Status codes\n\nThe Rubrik REST API server includes an HTTP status code with every response. The following table describes the status codes supported by the Rubrik REST API server.\n\n| Status code | Description |\n| ----------- | ----------- |\n| 200&nbsp;OK | Request succeeded. Not used for a DELETE request, or for a POST request that creates a resource. |\n| 201&nbsp;Created | POST request to create a resource object succeeded. |\n| 202&nbsp;Accepted | Request was successfully accepted for further processing. |\n| 204&nbsp;No&nbsp;Content | Request succeeded and the response body is empty. Used for successful DELETE requests and for successful POST requests that do not return content. |\n| 400&nbsp;Bad&nbsp;Request | Request failed because it was malformed. The request may be garbled, or it may be missing required parameters. |\n| 401&nbsp;Unauthorized | The requestor has insufficient authorization to perform the requested action. |\n| 403&nbsp;Forbidden | The requested action is blocked in the current context. |\n| 404&nbsp;Not&nbsp;Found | The request references a resource object that is unknown to the Rubrik REST API server. |\n| 415&nbsp;Unsupported Media Type | The HTTP header of the request specifies a media type that is not supported by the Rubrik REST API server. |\n| 422&nbsp;Unprocessable Entity | The request specifies a correct media type and contains correct syntax but cannot be processed because of semantical errors. |\n| 500&nbsp;Internal Server Error | The Rubrik REST API server encountered an unhandled error. |\n| 503&nbsp;Service Unavailable Error | The Rubrik REST API server is temporarily unavailable. |\n\n#### Response body\n\nThe JSON object included in a response body can contain members (`{string : value}`) and arrays (`[elements]`). Also, members and arrays can be nested within members and arrays.\n\nWhen a response includes a resource object, the object always includes an `id` member in the form `id : $id`. The value of the `id` member is the unique ID of the resource.\n\nWhen a response includes a large array (or list) of elements, the Rubrik REST API server encloses the array in a `ListResponse` structure. The `ListResponse` structure breaks a lengthy array into 'pages' of information to make the information easier to manage. Refer to 'Working with lists' for information about managing arrays with large numbers of values.\n\n#### Status code 400 responses\n\nThe Rubrik REST API server sends a response containing the HTTP status code '400 Bad Request' when the server cannot process the request. This can be caused by malformed request syntax, invalid request message framing, or deceptive request routing.\n\nThe Rubrik REST API server returns a '400 Bad Request' when:\n* Request does not conform with the format specified in OpenAPI definition files. For example, the request is missing required fields.\n* Request is malformed. For example, the request has a malformed `id`.\n* Request contains unsupported `enum` values.\n\n#### Status code 422 responses\n\nThe Rubrik REST API server sends a response containing the HTTP status code '422 Unproccessable entity' when the request is syntactically correct but has semantic errors.\n\nFor example, when a request refers to an archival location that is not available. Although the request is properly formed, the Rubrik REST API server cannot act on the request because of the missing archival location, and the server returns '422 Unproccessable entity'.\n\nThe Rubrik REST API server also returns '422 Unproccessable entity' when invalid credentials are submitted during login. In that situation, the request may be correctly formed but the action cannot be completed by using the supplied values.\n\nThe following table describes the members of a '422 Unproccessable entity' response object.\n\n| Member | Optional | Description |\n| ------ | --- | ----------- |\n| `type` | No | Error category. Possible values include: vcenter_error, oracle_error, rubrik_error |\n| `message` | No | Plain text explanation of the cause of the error. |\n| `code` | Yes | A short text string representing the cause of the error. |\n| `param` | Yes | The request member that is the source of the error, such as `backup_window`. |\n\n## Working with lists\n\nWhen a request returns a large list of elements, the response array can be encapsulated within a `ListResponse` object. The `ListResponse` object is a pagination structure for the elements in the response array. The `ListResponse` object allows the response array to be addressed through smaller subsets of the array, or 'pages'.\n\nTo work with a `ListResponse` object, form a request that calls for a specific page of the results by specifying an offset value and a limit. The response includes the elements from the list starting at the offset value and continuing to the limit. When the limit is very large, or unspecified, the Rubrik REST API server returns as many elements as can be handled by the available memory.\n\nThe `ListResponse` object consists of the members described in the following table.\n\n| Member | Optional | Description |\n| ------ | --- | ----------- |\n| `hasMore` | No | Indicates whether the array contains elements that are not provided by the current response. `true` if more elements are available for the original request and `false` if the last element is in the current response. |\n| `data` | No | An array of the requested elements. Can be all or some of the elements requested. The elements can be members, arrays, or objects. |\n| `total` | Yes | Total number of elements. |\n| `links` | Yes | When `hasMore` is true, provides a request URL for the next page of results. When appropriate, also provides a request URL for the previous page of results. The request URLs provided by `links` retain the query parameters from the original request. For example, a request URL would retain a value specified by `limit` and a value specified by `search`. The exception to this is the value specified by `offset`, which the Rubrik REST API server uses to specify next and previous pages. |\n\nControl the contents of a `ListResponse` object by including the following optional query parameters with the original request:\n* `limit`\nDefines the maximum number of a elements to include in the `data` array of the response. Available memory may prevent the return of all elements for very large `limit` values. When that occurs, the response includes `\"hasMore\": true`.\n* `offset`\nIndex reference point to use when determining the elements to include in a response. Include the next element after the index number specified by `offset`. The default value is `0`, which means the list page that is provided in the response starts with first element in the list.\n\nFor example, if the total number of elements in response to a query are 100, and the request includes the following query parameters: `limit=10` and `offset=30`, then the response will include a list page with elements 31-40.\n\nWhen the `ListResponse` object provides `next` and `prev`, use the URL specified by `next` to request the next page of elements or use the URL specified by `prev` to request the previous page of elements.\n\n**Example:** Request for all snapshots from a Rubrik cluster\n\nThe initial request uses the query parameter `limit=1`.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/vmware/vm/snapshot?limit=1\"\n```\n\nThe response returns the first element and `\"hasMore\": true` indicates that more than one snapshot meets the request.\n\n```bash\n{\n  \"hasMore\": true,\n  \"status\": \"RUNNING\",\n  \"data\": [\n    {\n      \"id\": \"1\",\n      \"name\": \"Windows2012\"\n    }\n  ],\n  \"links\": {\n    \"next\": {\n      \"href\": \"https://$cluster_address/api/v1/vmware/vm/snapshot?limit=1&offset=1\"\n    }\n  }\n}\n\n```\n\nTo obtain the next element, the request is reissued with the query parameters set to: `limit=1&offset=1`. This could also be achieved by using the URL specified by `next` to request the next page.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/vmware/vm/snapshot?limit=1&offset=1\"\n```\n\nThe response returns the second element in the array. Since there are elements before and after the element in the response, the `links` member contains both a `next` request URL and a `prev` request URL.\n\n```bash\n{\n  \"hasMore\": false,\n  \"status\": \"RUNNING\",\n  \"data\": [\n    {\n      \"id\": \"2\",\n      \"name\": \"Windows2016\"\n    }\n  ],\n  \"links\": {\n    \"prev\": {\n       \"href\": \"https://$cluster_address/api/v1/vmware/vm/snapshot?limit=1&offset=0\",\n      \"rel\": \"prev\"\n    },\n    \"next\": {\n      \"href\": \"https://$cluster_address/api/v1/vmware/vm/snapshot?limit=1&offset=2\",\n      \"rel\": \"next\"\n    }\n  }\n}\n```\n\n## Asynchronous requests\n\nThe Rubrik REST API server uses asynchronous (async) API requests for tasks that take longer to run. By using async requests the Rubrik REST API server avoids blocking the requestor from performing other tasks while the async tasks run.\n\nThe response to an async request includes a task object in the response body. The following table describes the members of a task object.\n\n| Member | Optional | Description |\n| ------ | --- | ----------- |\n| `id` | No |  ID assigned to the task.  |\n| `status` | No |  Status of the task: 'RUNNING', 'SUCCEEDED', 'CANCELED', or 'FAILED'.   |\n| `error` | No | Message describing reason for canceled or failed task, or 'None'. |\n| `startTime` | Yes | Timestamp when the Rubrik cluster schedules the task. |\n| `endTime` | Yes | Timestamp when the task ends. |\n| `progress` | Yes | Percentage of the task that is complete. |\n| `links` | No | Polling request array that provides information about how to poll the task. |\n\nThe following table describes the polling request array in the `links` member.\n\n| Member | Optional | Description |\n| ------ | --- | ----------- |\n| `href` | No | URL to send requests to when polling the task. |\n| `rel` | No | Provides a value of 'self' to indicate that the array refers to the resource represented by the parent JSON object. |\n\nWhen an async task is completed the Rubrik REST API server adds a second array to the `links` member in the response that is sent. The second array provides information about how to request the result of the async task.\n\nThe following table describes the results array in the `links` member.\n\n| Member | Optional | Description |\n| ------ | --- | ----------- |\n| `href` | No | URL to send a request to for the result of the task. |\n| `rel` | No | Provides a value of 'result' to indicate that the array refers to the resource represented by the parent JSON object. |\n\n**Example:** Starting a mount task and polling the task status\n\nTo initiate a mount operation, send a POST request to the mount endpoint. Include an object containing the details of the snapshot.\n\n```bash\ncurl -X POST \"https://$cluster_address/api/v1/vmware/vm/snapshot/$snapshot_id/mount\"\n```\n\nThe Rubrik REST API server returns a task object for the mount operation. The task object describes the task status as 'RUNNING' and provides the `links` member which contains the polling request array.\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"status\": \"RUNNING\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vmware/vm/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\nUsing the information provided in the task object, send a GET request to poll the task status.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/vmware/vm/request/$request_id\"\n```\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"status\": \"RUNNING\",\n  \"error\": \"None\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vmware/vm/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\nContinue to poll the task object until the status changes to 'SUCCEEDED'.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/vmware/vm/request/$request_id\"\n```\n\nWhen the task object status changes to 'SUCCEEDED', the `links` member of the request includes a results array that provides a URL for the task results.\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"status\": \"SUCCEEDED\",\n  \"error\": \"None\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vmware/vm/request/$request_id\",\n      \"rel\": \"self\"\n    },\n    {\n      \"href\": \"https://$cluster_address/api/v1/vmware/vm/$mounted_vm_id\",\n      \"rel\": \"result\"\n    }\n  ]\n}\n```\n\n# OpenAPI\nThe Rubrik REST API specification conforms to the OpenAPI 2.0 Specification. Tools that work with the OpenAPI 2.0 Specification can be used with the Rubrik REST API specification.\n\nDevelopment releases (pre-1.0) of the Rubrik REST API specification made reference to 'swagger'. The previous release of the OpenAPI 2.0 Specification was named the Swagger 1.2 Specification.\n\nDownload the Rubrik REST API specification for your tools. [Download](./api-docs)\n\n## Rubrik REST API Explorer\nThe Rubrik REST API Explorer is a browser-based API client hosted by the Rubrik cluster. The Explorer has the Rubrik REST API specification built in. You can use the Explorer to try out Rubrik REST API calls and view the responses.\n\n**IMPORTANT:** The Explorer interacts with the Rubrik cluster through the API calls you make. Use care when making calls that modify or delete configurations and data.\n\nTo access the Rubrik REST API Explorer, click: [Rubrik REST API Explorer](./playground/)\n\n# Authentication\n\nThe Rubrik REST API server requires that all API calls use the HTTPS protocol.\nTo meet the security requirements of that protocol, the Rubrik REST API server\nuses a self-signed certificate. A Certificate Authority cannot validate a\nself-signed certificate. Configure client tools to ignore the certificate\nvalidation error.\n\nThe Rubrik REST API server requires authentication and authorization for each\nAPI call, except calls made to the following endpoints:\n\n* [/cluster/me/version](#operation/getClusterVersion)\n* [/cluster/me/api_version](#operation/getClusterApiVersion)\n\n## Authentication session\nRubrik REST API server authenticates a session using either of the following\nmethods:\n\n* BasicAuth\n* Token\n\nThe Rubrik REST API server requires that you use an authorized username and\npassword for the Rubrik cluster. Usernames are managed by either the Rubrik\ncluster or by your LDAP service.\n\n### BasicAuth authentication\n\nBasicAuth authentication uses the HTTP Basic Authentication method and requires\nyou to include the user credentials with each API call. Since each API call\nmade using the BasicAuth method is separately authenticated, you do not need\nto manage the session state. You also do not need to log out of a session,\nsince this method does not create a session.\n\nTo use the BasicAuth method, provide the user credentials in the\n'Authorization' header of an API call.\n\nUse the string `Basic` followed by the Base64 encoding of `<username:password>`\nas the user credentials, where `<username:password>` is the username for an\nAdmin account on the host Rubrik cluster, a colon, and the account password.\n\n**Example:** Using curl to retrieve a session ID\n\nThis example uses the local Admin username 'admin' and the password 'pass' to\nretrieve: a session ID, the Rubrik server software version, and the API\nversion.\n\nThe curl command shown here takes `<username:password>`, adds 'Basic ' to the\nstring, and Base64 encodes the result.\n\n The command includes the following arguments:\n * `-k` to bypass an alert about the self-signed certificate\n * `-u` to flag the `<username:password>` string\n * `-X` to flag the HTTP method `GET`\n\n```bash\ncurl -k -u admin:pass -X GET \"https://$cluster_address/api/v1/cluster/me\"\n```\nThe Rubrik REST API server returns the following response body.\n```bash\n{\n  \"id\": \"$cluster_id\",\n  \"version\": \"3.1.0\",\n  \"apiVersion\": \"1.0\"\n}\n```\n\n### Token authentication\n\nToken authentication creates a token at the beginning of a session and then\nuses that token to authenticate the API calls that are made during the session.\nThe token remains valid for the session - normally 30 minutes after the last\nactivity. You can close a session and invalidate the session token at any time\nby making a DELETE call to `/session/{id}` where `{id}` is the session ID or\n`me` for the current session ID.\n\n**Example:** Token authentication in a session\n\nThis example uses the local Admin username 'admin' and the password 'pass'. To\nopen a session, first use the [BasicAuth](#section/BasicAuth) method to\nauthenticate a POST call to [/session](#operation/createSession).\n\n```bash\ncurl -k -u admin:pass -X POST \"https://$cluster_address/api/v1/session\"\n```\n\nThe response body includes an array with the session token.\n\n```bash\n{\n  \"id\": \"$session_id\",\n  \"token\": \"$token_id\",\n  \"userId\": \"$user_id\"\n}\n```\nFor all subsequent calls during the session, include the token in the\nAuthorization header using the form: `Authorization: Bearer $token_id` where\n`$token_id` is the value of the `token` member from the response array.\n\nIn this curl command, the GET request to\n[/cluster](#operation/getPublicClusterInfo) uses `-H` to provide the\n`Authorization: Bearer $token_id` value.\n\n```bash\ncurl -k -H \"Authorization: Bearer $token_id\" -X GET\n  \"https://$cluster_address/api/v1/cluster/me\"\n```\n\nThe response body contains an array with the session ID, the Rubrik\ncluster software version, and the API version.\n\n```bash\n{\n  \"id\": \"$cluster_id\",\n  \"version\": \"3.1.0\",\n  \"apiVersion\": \"1.0\"\n}\n```\n\nTo close the session and invalidate the session token, make a DELETE call to\n[/session](#operation/deleteSession) using the value of the `id` key or use\n`me`. The alias `me` represents the session specified in the Authorization\nheader.\n\n```bash\ncurl -k -H \"Authorization: Bearer $token_id\" -X DELETE\n  \"https://$cluster_address/api/v1/session/me\"\n```\n\n## LDAP Authentication\n\nThe Rubrik cluster can be integrated with an LDAP service for\nauthentication. The API endpoints provide support for adding, updating and\ndeleting a specific LDAP service as well as list all of the\nconfigured LDAP services.\n\n### Add a new LDAP service\nYou can add a new LDAP service by making a POST call to\n[/ldap_service](#operation/createLdapService). Adding a new LDAP\nservice requires information about the dynamic DNS name of the service, an\nadministrative user who is authorized to create a computer user account as\nwell as search for all the LDAP objects needed for use by the\nRubrik cluster. The Rubrik cluster resolves the dynamic DNS name using DNS\nSRV records while honoring the advertised priority values.\n\n**Example:** Adds a new LDAP service for use by the Rubrik cluster\n\nThis example adds an LDAP service that uses a dynamic DNS name\nof *example.com*, with a bind administrator user of *Administrator* with a\npassword of *VerySafe*.\n\n```bash\ncurl -k -u admin:pass -X POST -d '{\"dynamicDnsName\": \"example.com\",\n  \"bindUserName\": \"Administrator\", \"bindUserPassword\": \"VerySafe\"}'\n  'https://$cluster_address/api/v1/ldap_service'\n```\n\nThe response body includes the ID associated with this LDAP service.\n\n```bash\n{\n  \"id\": \"499aeb71-f114-45a5-8456-91b9f6c45ddd\",\n  \"domainType\": \"AD\",\n  \"name\": \"example.com\",\n  \"serviceAccount\": \"cluster10-c8D7A54$\",\n  \"initialRefreshStatus\": \"ongoing\"\n}\n```\n\nThe parameters associated with the LDAP service can be updated by\nmaking a PATCH request to [/ldap_service/{id}](#operation/patchLdapService)\nor a PUT request to [/ldap_service/{id}](#operation/putLdapService).\n\nFor example, you could add a prioritized list of authentication servers that\nsupercede the LDAP servers advertised for the dynamic DNS name. These\nauthentication servers can even be proxies that connect to the actual\nLDAP servers.\n\n**Example:** Add two new LDAP services\n\nThis example adds two LDAP servers called ad-proxy1.example.com\nand ad-proxy2.cloud.example.com.\n\n```bash\ncurl -k -u admin:pass -X PATCH -d '{ \"authServers\":\n[\"ldap://ad-proxy1.example.com:389\", \"ldap://ad-proxy2.example.com:389\"]}'\nhttps://$cluster_address/api/v1/ldap_service/499aeb71-f114-45a5-8456-91b9f6c45ddd\n```\n\nThe response body confirms a successful update.\n\n```bash\n{\n  \"id\": \"499aeb71-f114-45a5-8456-91b9f6c45ddd\",\n  \"domainType\": \"AD\",\n  \"name\": \"example.com\",\n  \"initialRefreshStatus\": \"success\"\n}\n```\n\n### List configured LDAP services\nYou can get a listing of all the configured authentication domains using\na GET request to [/ldap_service](#operation/queryLdapService).\n\n**Example:** Get the list of LDAP services.\n\n```bash\ncurl -k -u admin:pass -X GET 'https://$cluster_address/api/v1/ldap_service'\n```\n\nThe response body will contain the ID of all the authentication realms.\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"id\": \"499aeb71-f114-45a5-8456-91b9f6c45ddd\",\n      \"domainType\": \"AD\",\n      \"name\": \"example.com\",\n      \"serviceAccount\": \"cluster10-c8D7A54$\",\n      \"initialRefreshStatus\": \"success\"\n    },\n    {\n      \"id\": \"9fef084b-75f8-4c03-9efa-c73b55be5da8\",\n      \"domainType\": \"LOCAL\",\n      \"name\": \"local\",\n      \"initialRefreshStatus\": \"success\"\n    }\n  ],\n  \"total\": 2\n}\n\n```\n\n### Get information about a specific LDAP service\n\nYou can also get information about a specific LDAP service using\na GET request to [/ldap_service/{id}](#operation/getLdapService).\n\n**Example:** Get information about a configured LDAP service.\n\n```bash\ncurl -k -u admin:pass -X GET\n  'https://$cluster_address/api/v1/ldap_service/499aeb71-f114-45a5-8456-91b9f6c45ddd'\n```\n\nThe response body will contain information about the specified LDAP service.\n\n```bash\n{\n  \"id\": \"499aeb71-f114-45a5-8456-91b9f6c45ddd\",\n  \"domainType\": \"AD\",\n  \"name\": \"example.com\",\n  \"serviceAccount\": \"cluster10-c8D7A54$\",\n  \"initialRefreshStatus\": \"success\"\n}\n```\n\n### Delete an LDAP service\nAny LDAP service that is configured to a Rubrik cluster can\nbe removed by issuing a DELETE request to\n[/ldap_service/{id}](#operation/deleteLdapService).\n\n**Example:** Remove an LDAP service\n\n```bash\ncurl -k -u admin:pass -X DELETE\nhttps://$cluster_address/api/v1/ldap_service/499aeb71-f114-45a5-8456-91b9f6c45ddd\n\n```\n\n## LDAP domain authentication\nScripts that automate calls to the Rubrik REST API endpoints must\ninclude one of the available authentication methods: the HTTP Basic\nmethod, the session method, or the API token method.\n\nWhen the HTTP Basic method is used, and authentication is through\nan LDAP domain, issues can arise when the Rubrik cluster is\nconfigured with multiple LDAP domains. With this method, the\nauthentication server first attempts to authenticate through the\nRubrik cluster local domain. If that authentication attempt does not\nsucceed, the authentication server attempts authentication with each\navailable LDAP domain. If there are several LDAP domains configured,\nthen this process can slow down authentication. With many LDAP\ndomains, the authentication can potentially have too many failed\nlogins and result in an account lock-out.\n\nAlthough using the [API token for authentication](#token-authentication) is recommended for\nscripting, using the session authentication method will also avoid\nthese issues. The following python script provides an example of how\nto use session authentication in a script. The method used in this\nexample can be duplicated in other scripting languages to suit your\nscripting requirements.\n\n```\ntry:\n    sessionData = None\n\n    session = requests.Session()\n    session.auth = ($username, $password)\n    session.verify = False\n    session.headers = {'Content-type': 'application/json'}\n    requests.adapters.HTTPAdapter()\n    session.mount('https://', requests.adapters.HTTPAdapter(pool_connections=1))\n\n    # First, login to create a Web Session Token\n    loginData = {\n       \"initParams\": {\n           \"organizationId\": $org_id\n        }\n    }\n    login = session.post(\n    url='https://{}/api/internal/session/realm/{}'.format($RubrikCluster, $domain_display_name),\n    data=json.dumps(loginData),\n    timeout=300)\n    assert login.ok and 'session' in login.json()\n    sessionData = login.json()['session']\n    session.headers.update({'Authorization': 'Bearer {}'.format(sessionData['token'])})\n    session.auth = None\n\n    # Issue the desired request\n    cluster = session.get(url='https://{}/api/v1/cluster/me'.format($RubrikCluster))\n    assert cluster.ok\n    print('Session Auth: {}'.format(cluster.json()['name']))\n\nfinally:\n    if sessionData:\n        # Delete the web sessions explicitly. Rubrik CDM supports a\n        # limited number of sessions per user. Once this limit is exceeded,\n        # a random web session is discarded. This could log out the\n        # user from the UI or cause another script to fail.\n\n       logoutData = {\n           \"tokenIds\": [\n               sessionData['id']\n            ],\n            \"userId\": sessionData['userId']\n        }\n        logout = session.post(\n            url='https://{}/api/internal/session/bulk_delete'.format($RubrikCluster),\n            data=json.dumps(logoutData),\n            timeout=300)\n        assert logout.ok\n```\nWhere:\n    * `$username` is the name of the user account to be authenticated.\n    * `$password` is the password associated with the username.\n    * `$org_id` is the ID of the organization representing the tenant.\n    * `$RubrikCluster` is the IPv4 address or resolvable hostname of\n       the Rubrik cluster.\n    * `$domain_display_name` is the name of the LDAP domain.\n\n## SAML ID Provider Authentication\n\nThe Rubrik cluster can be integrated with a SAML ID Provider authentication\ndomain for authentication. The Rubrik REST API provides API endpoints for\nmanaging and configuring the ID Provider authentication domain with\nthe Rubrik cluster. The Rubrik REST API also provides API endpoints for\ncreating the SAML authentication request\nand handling the SAML authentication response.\n\n### Add a new SAML ID Provider Authentication Domain\nYou can add a new ID Provider by making a POST call to\n[/idp_auth_domain](#operation/createIdProviderAuthDomain).\nAdding a new ID Provider requires the ID Provider metadata XML file\nin base64 encoding, and a human-friendly name for the ID Provider.\n\n**Example:** Adds a new ID Provider for use by the Rubrik cluster\n\n```bash\ncurl -k -u admin:pass -X POST -d '{\"name\": \"new-idp\",\n  \"metadataXmlBase64\": \"1VZbj6LYFn438T9UPI+mi7slpqsnm2sBQgm...\"}'\n  'https://$cluster_address/api/v1/idp_auth_domain'\n```\n\nThe response body includes the ID associated with this Active Directory.\n\n```bash\n{\n  \"id\": \"499aeb71-f114-45a5-8456-91b9f6c45ddd\",\n  \"name\": \"new-idp\",\n  \"entityId\": \"http://www.example.com/idp1\",\n  \"ssoUrl\": \"https://www.example.com/idp1/sso\",\n  \"signCert\": \"-----BEGIN CERTIFICATE-----\\nMIIDrDCCApSg...\\n-----END CERTIFICATE-----\"\n}\n```\n\n### Update an existing SAML ID Provider Authentication Domain\nThe name and metadata associated with the ID Provider can be updated by\nmaking a PATCH request to\n[/idp_auth_domain/{id}](#operation/updateIdProviderAuthDomain).\nThis API call can update either of the two parameters.\n\n**Example:** Update name of the ID Provider\n\nThis example update the name of ID Provider \"new-idp\" as \"updated-idp\",\nand update metadata with new ID Provider \"http://www.example.com/idp2\"\n\n```bash\ncurl -k -u admin:pass -X PATCH -d '{ \"name\": \"updated-idp\",\n  \"metadataXmlBase64\": \"1VZbj6AQwTIr4deKspU/zyR9fxqPPebgQ...\"}'\n  'https://$cluster_address/api/v1/idp_auth_domain/499aeb71-f114-45a5-8456-91b9f6c45ddd'\n```\n\nThe response body confirms a successful update.\n\n```bash\n{\n  \"id\": \"499aeb71-f114-45a5-8456-91b9f6c45ddd\",\n  \"name\": \"updated-idp\",\n  \"entityId\": \"http://www.example.com/idp2\",\n  \"ssoUrl\": \"https://www.example.com/idp2/sso\",\n  \"signCert\": \"-----BEGIN CERTIFICATE-----\\nMIIDrDCCtchA...\\n-----END CERTIFICATE-----\"\n}\n```\n\n### List configured ID Provider Authentication Domains\nYou can get a listing of all the configured ID Providers using\na GET request to [/idp_auth_domain](#operation/queryIdProviderAuthDomain).\n\n**Example:** Get the list of ID Provider authentication domains.\n\n```bash\ncurl -k -u admin:pass -X GET 'https://$cluster_address/api/v1/idp_auth_domain'\n```\n\nThe response body contains the ID of all the ID provider\nauthentication domains.\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"id\": \"499aeb71-f114-45a5-8456-91b9f6c45ddd\",\n      \"name\": \"new-idp\",\n      \"entityId\": \"http://www.example.com/idp1\",\n      \"ssoUrl\": \"https://www.example.com/idp1/sso\",\n      \"signCert\": \"-----BEGIN CERTIFICATE-----\\nMIIDrDCCApSg...\\n-----END CERTIFICATE-----\"\n    },\n    {\n      \"id\": \"9fef084b-75f8-4c03-9efa-c73b55be5da8\",\n      \"name\": \"another-idp\",\n      \"entityId\": \"http://www.example.com/idp2\",\n      \"ssoUrl\": \"https://www.example.com/idp2/sso\",\n      \"signCert\": \"-----BEGIN CERTIFICATE-----\\nMIIDrDCCtchA...\\n-----END CERTIFICATE-----\"\n    }\n  ],\n  \"total\": 2\n}\n\n```\n\n### Get information about a specific SAML ID Provider Authentication Domain\nYou can also get information about a specific ID Provider using\na GET request to [/idp_auth_domain/{id}](#operation/getIdProviderAuthDomain).\n\n**Example:** Get information about a configured ID Provider.\n\n```bash\ncurl -k -u admin:pass -X GET\n  'https://$cluster_address/api/v1/idp_auth_domain/499aeb71-f114-45a5-8456-91b9f6c45ddd'\n```\n\nThe response body contains information about this ID provider\nauthentication domain.\n\n```bash\n{\n  \"id\": \"499aeb71-f114-45a5-8456-91b9f6c45ddd\",\n  \"name\": \"new-idp\",\n  \"entityId\": \"http://www.example.com/idp1\",\n  \"ssoUrl\": \"https://www.example.com/idp1/sso\",\n  \"signCert\": \"-----BEGIN CERTIFICATE-----\\nMIIDrDCCApSg...\\n-----END CERTIFICATE-----\"\n}\n```\n\n### Delete an ID Provider Authentication Domain\nAny ID Provider authentication domain that is configured\nto a Rubrik cluster can be removed by issuing a DELETE request to\n[/idp_auth_domain/{id}](#operation/deleteIdProviderAuthDomain).\n\n**Example:** Remove the ID Provider authentication domain\n\n```bash\ncurl -k -u admin:pass -X DELETE\nhttps://$cluster_address/api/v1/idp_auth_domain/499aeb71-f114-45a5-8456-91b9f6c45ddd\n```\n\n### Download Rubrik SAML Metadata\nGenerate the Rubrik SAML service provider metadata file and\nget the URL of the file by issuing a GET request to\n[/saml/rubrik_metadata](#operation/configRubrikSamlMetadata).\n\n**Example:**  Generate the Rubrik SAML metadata file without providing\nan address for the host at the endpoint. The cluster chooses\na floating IP as the host address.\n\n```bash\ncurl -k -u admin:pass -X POST -d '{}'\n  'https://$cluster_address/api/v1/saml/rubrik_metadata'\n```\n\n**Example:** Generate the Rubrik SAML metadata file and specify\nan address for the host at the endpoint.\n\n```bash\ncurl -k -u admin:pass -X POST -d '{\"hostAddress\": \"my.rubrik.saml.sp.com\"}'\n  'https://$cluster_address/api/v1/saml/rubrik_metadata'\n```\n\n### Check SAML SSO Status ###\nSend a GET request to unauthenticated endpoint\n[/saml/sso_status](#operation/getSamlSsoStatus) to check SAML SSO status.\nThe status is represented by an object that contains 1) a Boolean value that\ndetermines whether or not SSO is enabled. 2) an optional String value that\nindicates the name of the default IdP authentication domain for SSO login.\nThe default IdP will be configured when there is only one IdP configured in\nthe cluster. 3) a Boolean value, isGpsLoginEnabled, that determines whether\nfederated login is enabled.\n\n**Example:** Check SAML SSO status\n\n```bash\ncurl -k -X GET 'https://$cluster_address/api/v1/saml/sso_status'\n```\n\n### Make SAML Authentication Request\nSend a POST request to [/saml/authn_request](#operation/makeSamlAuthnRequest)\nto generate a signed SAML authentication request for the authentication domain\nof a specified ID Provider. The request can include optional parameters to\nspecify a redirection resource path  and to specify that the request\nis a test of the configuration for the ID Provider. The response provides\nthe data that is required for a SAML SSO authentication request for\nthe ID Provider. This is an unauthenticated API.\n\n**Example:** Make the SAML authentication request for ID Provider my-idp-1\n\n```bash\ncurl -k -X POST https://$cluster_address/api/v1/saml/authn_request/my-idp-1\n  -d '{\"redirectPath\": \"/web/bin/index.html#/welcome\", \"isForIdpTest\": false}'\n```\n\n# Principal Management\n\n## Searching for principals\n\nTo search for principals, send a GET request to the\n[`/principal`](#operation/searchPrincipalsV1) endpoint.\n\nThis endpoint only returns principals from the organization to which the\ncurrently logged-in user belongs.\n\nAll query parameters are optional. Each specified query parameters (besides the\nsorting parameters) will further restrict the set of results.\n\n**Example:**\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/principal?\nname=$name&\nauth_domain_id=$auth_domain_id&\norganization_id=$organization_id&\nrole_id=$role_id&\nis_assigned_roles_or_is_local=$is_assigned_roles_or_is_local&\nsort_by=$sort_by&\nsort_order=$sort_order&\nlimit=$limit&\noffset=$offset\"\n```\n\n## Assigning roles to principals\n\nTo get a list of roles assigned to principals, send a GET request to the\n[`/principal/role`](#operation/getRolesForPrincipals) endpoint.\n\n**Example:**\n```bash\ncurl -X GET -d \"https://$cluster_address/api/v1/principal/role?\nprincipals=$principal_ids\"\n```\n\nTo assign roles to a set of principals, send a POST request to the\n[`/principal/role`](#operation/assignRolesToPrincipals)\nendpoint.\n\n**Example:**\n```bash\ncurl -X POST -d '{\n  \"principals\": \"[$principal_id]\",\n  \"roles\": \"[$role_id]\"\n}' \"https://$cluster_address/api/v1/principal/role\"\n```\n\nTo revoke roles from a set of principals, send a POST request to the\n[`/principal/role/bulk_revoke`](#operation/revokeRolesFromPrincipals)\nendpoint.\n\n**Example:**\n```bash\ncurl -X POST -d '{\n  \"principals\": \"[$principal_id]\",\n  \"roles\": \"[$role_id]\"\n}' \"https://$cluster_address/api/v1/principal/role/bulk_revoke\"\n```\n\n# Role Management\n\nThis section provides details on role management on CDM.\n\n## Role Lifecycle Management\n\nTo create a new role, send a POST request to the\n[`/role`](#operation/createRole) endpoint.\n\n**Example:**\n```bash\ncurl -X POST -d '{\n  \"name\": \"$role_name\",\n  \"description\": \"$description\"\n}' \"https://$cluster_address/api/v1/role\"\n```\n\nTo update a new role, send a PATCH request to the\n[`/role/$role_id`](#operation/updateRole) endpoint.\n\n**Example:**\n```bash\ncurl -X PATCH -d '{\n  \"name\": \"$role_name\",\n  \"description\": \"$description\"\n}' \"https://$cluster_address/api/v1/role/$role_id\"\n```\n\nTo delete a role, send a DELETE request to the\n[`/role/$role_id`](#operation/deleteRole) endpoint.\n\n**Example:**\n```bash\ncurl -X DELETE \"https://$cluster_address/api/v1/role/$role_id\"\n```\n\nTo get role metadata for all roles in an organization,\nsend a GET request to the [`/role`](#operation/getRoles) endpoint.\n\nAll query parameters are optional. The getRoles endpoint uses the\norganization ID of the current user session when the API call does\nnot specify an organization ID.\n\n**Example:**\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/role?\norganization_id=$organization_id&\nname=$role_name\"\n```\n\nTo get role metadata for a specific role, send a GET request to the\n[`/role/$role_id`](#operation/getRole) endpoint.\n\n**Example:**\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/role/$role_id\"\n```\n\n\n# Authorization\n\nThis section provides details on authorizing calls to the Rubrik CDM REST API.\n\n## Clearing the authorization cache\nStale authorization information cached on the Rubrik CDM API server can cause\nAPI call failures. Clearing the cache on the node targeted by an API call can\nprevent this error.\n\nTo clear the cache, send a DELETE request to the\n[`/authorization/cache`](#operation/deleteAuthzCache) endpoint.\n```bash\ncurl -X DELETE \"https://$cluster_address/api/v1/authorization/cache\"\n```\n\n# Rubrik certificate management\n\nThis section explains how to manage certificates.\n\n## Retrieving all imported certificates\n\nTo retrieve all imported certificates from the cluster, send a GET request to\nthe [`/certificate`](#operation/queryCertificates) endpoint.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/certificate\"\n```\n\nThe Rubrik REST API server returns an array of objects with the certId,\nthe name, the description, the certificate, whether the certificate has\na private key, the expiration time, and what objects are using the certificate.\n\n```bash\n{\n  \"certId\": \"$certId\",\n  \"name\": \"$certName\",\n  \"hasKey\": true,\n  \"expiration\": \"$certExpiration\",\n  \"usedBy\": {}\n}\n```\n\n## Importing a certificate\n\nTo import a certificate, send a POST request to the\n[`/certificates`](#operation/importCertificate) endpoint.\n\n```bash\ncurl -X POST -d '{\n  \"name\": \"certName\",\n  \"pemFile\": \"$pemFile\",\n  \"privateKey\": \"$privateKey\",\n  \"description\": \"$description\"\n}' \"https://$cluster_address/api/v1/certificate\"\n```\n\nThe Rubrik REST API server returns an object with the certId, the name,\nthe description, the certificate, whether the certificate has a private key,\nthe expiration time, and what objects are using the certificate.\n\n```bash\n{\n  \"certId\": \"$certId\",\n  \"name\": \"$certName\",\n  \"hasKey\": true,\n  \"expiration\": \"$certExpiration\",\n  \"usedBy\": {}\n}\n```\n\n## Retrieving a certificate\n\nTo retrieve a certificate, send a GET request to the\n[`/certificate/{id}`](#operation/exportCertificate) endpoint.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/certificate/$cert_id\"\n```\n\nThe Rubrik REST API server returns an object with the certId, the name,\nthe description, the certificate, whether the certificate has a private key,\nthe expiration time, and what objects are using the certificate.\n\n## Updating a certificate\n\nTo update a certificate, send a PATCH request to the\n[`/certificate/{id}`](#operation/updateCertificate) endpoint.\n\n```bash\ncurl -X POST -d '{\n  \"name\": \"certName\",\n  \"pemFile\": \"$pemFile\",\n  \"description\": \"$description\"\n}' \"https://$cluster_address/api/v1/certificate/$cert_id\"\n```\n\nThe Rubrik REST API server returns an object with the certId, the name,\nthe description, the certificate, whether the certificate has a private key,\nthe expiration time, and what objects are using the certificate.\n\n## Deleting a Certificate\n\nTo delete a certificate, send a DELETE request to the\n[`/certificate/{id}`](#operation/deleteCertificate) endpoint.\n\n```bash\ncurl -X DELETE \"https://$cluster_address/api/v1/certificate/$cert_id\"\n```\n\n## Generating a Certificate Signing Request (CSR)\n\nTo generate a CSR, send a POST request to the\n[`/csr`](#operation/generateCsr) endpoint.\n\n```bash\ncurl -X POST -d '{\n  \"hostnames\": \"$hostnames\",\n  \"name\": \"$name\",\n  \"organizations\": \"$organization\",\n  \"organizationUnit\": \"$organizationUnit\",\n  \"country\": \"$country\",\n  \"state\": \"$state\",\n  \"city\": \"$city\"\n}' \"https://$cluster_address/api/v1/csr\"\n```\nHostnames and name are required. The Rubrik REST API server will respond with\nthe information provided in the POST request, in addition to the CSR to be\nsigned.\n\n## Retrieving all outstanding Certificate Signing Requests\n\nTo retrieve all outstanding CSRs, send a GET request to the\n[`/csr`](#operation/getAllCsrs) endpoint.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/csr\"\n```\nThe Rubrik REST API server returns an array of objects with the csrId,\nthe name, the CSR, and all information provided to generate the CSR.\n\n## Deleting a Certificate Signing Request (CSR)\n\nTo delete a CSR, send a DELETE request to the\n[`/csr/{id}`](#operation/deleteCsr) endpoint.\n\n```bash\ncurl -X DELETE \"https://$cluster_address/api/v1/csr/$csr_id\"\n```\n\n## Managing Rubrik Backup Service secondary cluster certificates\n\nThe Rubrik Backup Service can be setup to allow registering with multiple Rubrik\nclusters. See the Multicluster Rubrik Backup Service section of the Rubrik CDM\nUser Guide for details. Certificates for replication source or replication\ntarget clusters are automatically added without calling the API in this section.\nTo mark a certificate to be added to agents, send a POST request to\n[`/certificate/agent`](#operation/markAgentSecondaryCertificate).\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"cert_id\": \"$certId\"\n  }' \\\n  \"https://$cluster_address/api/v1/certificate/agent\"\n```\n\nTo list all qualified certificates that have been\n[imported to the cluster](#section/Rubrik-certificate-management/Importing-a-certificate),\nsend a GET request to\n[`/certificate/agent`](#operation/queryAgentSecondaryCertificate).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/certificate/agent\"\n```\n\nTo unmark a certificate so that is is no longer added to agents, send a DELETE\nrequest to\n[`/certificate/agent/{id}`](#operation/unmarkAgentSecondaryCertificate).\n\n```bash\ncurl -X DELETE \"https://$cluster_address/api/v1/certificate/agent/$certId\"\n```\n\n# Cluster configuration history\nRubrik REST API provides the `/config/history` endpoints for\nadministrators to audit the changes made to the configuration\nparameters on a Rubrik cluster.\n\nThe ability to audit the configuration changes allows administrators to\ntrack the information related to the configuration changes, such as the\nold and new values of the configuration parameters, the user account\nthat made the changes, the time of each change, and the name of the\ncluster or node where the changes were made.\n\nThe `/config/history` endpoints apply to the following\nconfiguration parameters:\n* Global or cluster wide configuration\n* Local or node specific configuration\n\n## Retrieving a summary of configuration changes\nTo retrieve a list of configuration updates based on specific parameters,\nsend a GET request to [`/config/history/list_updates`]\n(#operation/queryConfigurationHistoryUpdates).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/config/history/list_updates\"\n```\n\nTo retrieve information for a specific configuration parameter\ninclude the name of the parameter in the request. To retrieve\ninformation for all configuration parameters that fit within the specified\nfilters, do not specify a parameter name.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/config/history/list_updates?name=$config_name\"\n```\nThe *Rubrik CDM User Guide* describes the parameters that can be\nconfigured to filter the results of the `GET /config/history/list_updates`\nendpoint.\n\nThe Rubrik REST API server responds with a list of JSON objects for the\nconfiguration updates that meet all specified filters.\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"nodeId\": \"string\",\n      \"namespace\": \"string\",\n      \"name\": \"string\",\n      \"oldValue\": \"string\",\n      \"newValue\": \"string\",\n      \"apiUser\": \"string\",\n      \"modifiedDateTime\": \"2021-02-26T17:21:54.520Z\",\n      \"source\": \"string\",\n      \"configChangeMetadata\": \"string\"\n    }\n  ],\n  \"total\": 0\n}\n```\n\n## Retrieving a summary of configuration changes on a given date\nTo retrieve the values of configuration parameters on a specific date,\nsend a GET request to [`/config/history/ondate`]\n(#operation/retrieveConfigurationValues).\n\nSpecify values for the `namespace` and `on_date` query parameters\nthat are required to send the GET request.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/config/history/ondate?namespace=$namespace&on_date=$timestamp\"\n```\n\nTo retrieve information for a specific configuration parameter\ninclude the name of the parameter in the request, along with the\nnamespace and on_date parameters. To retrieve information for all\nconfiguration parameters that fit within the specified filters, do not\nspecify a configuration parameter name.\n\nThe *Rubrik CDM User Guide* describes the parameters that can be\nconfigured to filter the results of the `GET /config/history/ondate`\nendpoint.\n\nThe Rubrik REST API server responds with a list of JSON objects for the\nconfiguration updates that meet all specified filters.\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"namespace\": \"string\",\n      \"name\": \"string\",\n      \"defaultValue\": \"string\",\n      \"onDate\": \"2021-02-26T17:21:54.526Z\",\n      \"valueOnDate\": \"string\",\n      \"currentValue\": \"string\",\n      \"nodeId\": \"string\"\n    }\n  ],\n  \"total\": 0\n}\n```\n\n# Rubrik cluster management\n\nThis section explains how to retrieve basic information about a Rubrik cluster, as well as how to update the name of a cluster.\n\n## Discovering Nodes\n**Example:** Discovering unbootstrapped nodes on a network\nThe discover endpoint cannot function without multicast DNS. When multicast DNS is not available, manually specify hostname and IPv6 information about the Rubrik cluster to enable node discovery.\nTo input information about unbootstrapped nodes located on this network, send a POST request to the [`/cluster/{id}/$manual_discover`](#operation/manualDiscover) endpoint.\n\n```bash\ncurl -X POST \\\n  -d '{\"nodeInfo\": [ {\"hostname\": \"string\", \"ipv6\": \"string\" } ] }' \\\n  \"https://$cluster_address/api/v1/cluster/$manual_discover\"\n```\n\nThe [`/cluster/{id}/$manual_discover_ipv4`](#operation/manualDiscoverIpv4) endpoint also discovers nodes over an IPv4 network.\n\n```bash\ncurl -X POST \\\n  -d '{\"nodeInfo\": [ {\"hostname\": \"string\", \"ipv4\": \"string\" } ] }' \\\n  \"https://$cluster_address/api/v1/cluster/$manual_discover_ipv4\"\n```\n\n## Retrieving Rubrik Cluster Information\n\n\n**Example:** Retrieving publicly available information about a Rubrik cluster\n\nTo retrieve information about a Rubrik cluster, send a GET request to the [`/cluster/$cluster_id`](#operation/getPublicClusterInfo) endpoint. The Rubrik REST API server responds with the publicly available information for the specified Rubrik cluster.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/cluster/$cluster_id\"\n```\n\nThe Rubrik REST API server returns an array with the session ID, the Rubrik cluster software version, the API version, the Rubrik cluster name, and the Rubrik cluster time zone.\n\n```bash\n{\n  \"id\": \"$cluster_id\",\n  \"version\": \"4.1.0\",\n  \"apiVersion\": \"1.0\",\n  \"name\": \"$cluster_name\",\n  \"timezone\": {\n    \"timezone\": \"$cluster_timezone\"\n  }\n}\n```\nTo retrieve the cluster certificate, send a GET request to the\n[`/cluster/{id}/certificate`](#operation/getClusterCertificate) endpoint.\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/cluster/$cluster_id/certificate\"\n```\nTo request only the current software version of the Rubrik cluster, send a GET request to the [`/cluster/$cluster_id/version`](#operation/getClusterVersion) endpoint.\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/cluster/$cluster_id/version\"\n```\n\nTo request only the current REST API version running on the cluster, send a GET request to [`/cluster/$cluster_id/api_version`](#operation/getClusterApiVersion)\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/cluster/$cluster_id/api_version\"\n```\n\nTo get the download link for Rubrik SNMP MIB file, send a GET request to [`/cluster/$cluster_id/snmp_mib_link`](#operation/getRubrikSnmpMibDownloadLink)\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/cluster/$cluster_id/snmp_mib_link\"\n```\n\nTo get the download link for the SYSLOG-MSG-MIB file, send a GET request to [`/cluster/$cluster_id/syslog_msg_mib_link`](#operation/getSyslogMsgSnmpMibDownloadLink)\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/cluster/$cluster_id/syslog_msg_mib_link\"\n```\n\nTo get the download link for the SYSLOG-TC-MIB file, send a GET request to [`/cluster/$cluster_id/syslog_tc_mib_link`](#operation/getSyslogTcSnmpMibDownloadLink)\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/cluster/$cluster_id/syslog_tc_mib_link\"\n```\n\nTo retrieve the encryption at rest status of the cluster, send a GET request to the [`/cluster/$cluster_id/encryption`](#operation/getEncryptionStatus) endpoint.\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/cluster/$cluster_id/security/encryption\"\n```\n\nTo retrieve the IDs of the nodes in the cluster, send a GET request to the ['/cluster/$cluster_id/node_id'](#operation/getClusterNodeIds) endpoint.\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/cluster/$cluster_id/node_id\"\n```\n\n## Hostnames for nodes in a Rubrik cluster\n\n### Retrieving hostnames for nodes in a Rubrik cluster\n\nTo retrieve the hostnames of the nodes in a Rubrik cluster, send a GET request to the ['/cluster/$cluster_id/node_hostname'](#operation/getClusterNodeHostnames) endpoint.\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/cluster/$cluster_id/node_hostname\"\n```\nThe Rubrik REST API server responds with an array of node ID to hostname mappings for all the nodes in the specified Rubrik cluster.\n```bash\n[\n  {\n    \"id\": \"RVM000000000001\",\n    \"hostname\": \"myhost01\"\n  },\n  {\n    \"id\": \"RVM000000000002\",\n    \"hostname\": \"myhost02\"\n  }\n]\n```\n\n### Updating hostnames for nodes in a Rubrik cluster\n\nTo update the hostnames of the nodes in the Rubrik cluster, send a POST request to the ['/cluster/$cluster_id/node_hostname'](#operation/changeClusterNodeHostnames) endpoint.\n```bash\ncurl -X POST \\\n  -d '[{ \"id\": \"$id\", \"hostname\":\" \"$hostname\" }]' \\\n  \"https://$cluster_address/api/v1/cluster/$cluster_id/node_hostname\"\n```\nThe Rubrik REST API server responds with an appropriate message.\n\n## Changing the Rubrik cluster name or time zone\n\nTo change the name or the current time zone of a Rubrik cluster, send a PATCH request to the [`/cluster/$cluster_id`](#operation/updateCluster) endpoint.  Specify the new name as the value of `$cluster_name`, and specify the new time zone as the value of `$cluster_timezone`.\n\n**Example:** Changing the name and the time zone of a Rubrik cluster\n\n```bash\ncurl -X PATCH \\\n  -d '{ \"clusterName\": $cluster_name, \"timezone\": { \"timezone\": $cluster_timezone } }' \\\n  \"https://$cluster_address/api/v1/cluster/$cluster_id\"\n```\n\nThe response provides the attributes of the specified Rubrik cluster object, including the new name, and the new time zone.\n\n```bash\n{\n  \"id\": \"$cluster_id\",\n  \"version\": \"4.1.0\",\n  \"apiVersion\": \"1.0\",\n  \"name\": \"$cluster_name\",\n  \"timezone\": {\n      \"timezone\": \"$cluster_timezone\"\n  }\n}\n```\n\n## Stage CDM software to the cluster.\n\nSend a POST request to the [`/cluster/{id}/upgrade/stage_cdm_software`](#operation/stageCdmSoftware) endpoint.\n\n```bash\ncurl -X POST \\\n  -d '{\"version\": \"$version\", \"packageUrl\": \"$packageUrl\", \"md5sum\": \"$md5sum\", \"size\": $size, \"skipDownload\": $skipDownload }' \\\n  \"https://$cluster_address/api/v1/cluster/$cluster_id/upgrade/stage_cdm_software\"\n```\n\n## Query asynchronous job status for upgrade related job\n\nTo query the job status details of an asynchronous job that is related to upgrades, issue a GET to [`/cluster/{id}/upgrade/request/{request_id}`](#operation/getAsyncRequestStatusForUpgrade).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/cluster/$cluster_id/upgrade/request/$request_id\"\n```\n\n## Retrieve CDM version available for upgrade\n\nSend a GET request to the [`/cluster/{id}/upgrade/available_version`](#operation/availableVersion) endpoint.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/cluster/upgrade/available_version\"\n```\n\n## Retrieving Rubrik cluster prechecks status.\nTo start an on demand run of the periodic upgrade prechecks,\n send a POST request to the [`/cluster/{id}/upgrade/precheck_status`](#operation/runPeriodicUpgradePrechecks) endpoint.\n\n```bash\ncurl -X POST \"https://$cluster_address/api/v1/cluster/$cluster_id/upgrade/\nprecheck_status\"\n```\n\nTo retrieve the result of the latest run of periodic upgrade prechecks,\n send a GET request to the [`/cluster/{id}/upgrade/precheck_status`](#operation/getPeriodicUpgradePrechecksStatus) endpoint.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/cluster/$cluster_id/upgrade/\nprecheck_status\"\n```\n\nThe Rubrik REST API server returns a response which provides the list of\n failures along with start time and end time.\n```bash\n{\n  \"endTime\": 1580385970715,\n  \"isOnDemand\": false,\n  \"failureResults\": [\n    {\n      \"isUserRemediable\": false,\n      \"errorMessage\": \"Sample error message\",\n      \"precheckName\": \"Sample precheck name\",\n      \"userRemediableAction\": \"\",\n      \"userRemediableActionMessage\": \"\"\n    }\n  ],\n  \"startTime\": 1580385904457\n}\n```\n\n## Checking if a Rubrik cluster has an existing set of Rubrik support portal credentials\n\nSend a GET request to the [`/cluster/{id}/rubrik_support_portal_credentials`](#operation/hasRubrikSupportPortalCredentials) endpoint.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/cluster/$cluster_id/rubrik_support_portal_credentials\"\n```\n\n## Updating Rubrik support portal credentials on a Rubrik cluster\n\nSend a POST request to the [`/cluster/{id}/rubrik_support_portal_credentials`](#operation/updateRubrikSupportPortalCredentials) endpoint.\n\n```bash\ncurl -X POST \\\n  -d '{\"username\" : \"$username\", \"password\": \"$password\"}' \\\n  \"https://$cluster_address/api/v1/cluster/$cluster_id/rubrik_support_portal_credentials\"\n```\n\n## Monitoring events on CDM\n\nSend a GET request to the [`/cluster/me/upgrade/monitor_events`]\n(#operation/monitorEvents) endpoint.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/cluster/me/upgrade/monitor_events\"\n```\n\n# Passwords\n\n## Setting password requirements\n\nTo set cluster-wide password requirements, send a PATCH request to\n[`/cluster/{id}/security/password_requirements`]\n(#operation/patchPasswordRequirements).\nThe following parameters are optional:\n```bash\ncurl -X PATCH \\\n  -d '{\n    \"id\": \"$cluster_id\",\n    \"minLength\": \"$min_length\",\n    \"minUpperCase\": \"$min_upper_case\",\n    \"minLowerCase\": \"$min_lower_case\",\n    \"minNumerics\": \"$min_numerics\",\n    \"minSpecial\": \"$min_special\",\n    \"useZxcvbn\": \"$use_zxcvbn\" }' \\\n  \"https://$cluster_address/api/v1/cluster/{id}/security/password_requirements\"\n```\n\nThe Rubrik REST API server responds with a summary of the password requirements:\n```bash\n{\n  \"id\": \"$cluster_id\",\n  \"minLength\": \"$min_length\",\n  \"maxLength\": \"$max_length\",\n  \"minUpperCase\": \"$min_upper_case\",\n  \"minLowerCase\": \"$min_lower_case\",\n  \"minNumerics\": \"$min_numerics\",\n  \"minSpecial\": \"$min_special\",\n  \"useZxcvbn\": \"$use_zxcvbn\"\n}\n```\n\n## Getting current password requirements\n\nTo retrieve the existing cluster-wide password requirments,\nsend a GET request to\n[`/cluster/{id}/security/password_requirements`]\n(#operation/queryPasswordRequirements)\n\n```bash\ncurl -X GET \\\n  -d '{\n    \"id\": \"$cluster_id\" }' \\\n  \"https://$cluster_address/api/v1/cluster/{id}/security/password_requirements\"\n\n```\n\nThe Rubrik REST API server responds with a summary of the password requirements:\n```bash\n{\n  \"id\": \"$cluster_id\",\n  \"minLength\": \"$min_length\",\n  \"maxLength\": \"$max_length\",\n  \"minUpperCase\": \"$min_upper_case\",\n  \"minLowerCase\": \"$min_lower_case\",\n  \"minNumerics\": \"$min_numerics\",\n  \"minSpecial\": \"$min_special\",\n  \"useZxcvbn\": \"$use_zxcvbn\"\n}\n```\n\n## Managing the Web Server Certificate\n\nTo retrieve the existing web server certificate signed by a CA, send\na GET request to:\n[`/cluster/{id}/security/web_signed_cert`]\n(#operation/getWebSignedCertificate)\n\n```bash\ncurl -X GET \\\n  -d '{\n    \"id\": \"$cluster_id\" }' \\\n  \"https://$cluster_address/api/v1/cluster/{id}/security/web_signed_cert\"\n```\n```bash\n{\n  \"webServerConfiguredWithCASignedCertificate\": true,\n  \"cert\": {\n    \"certId\": \"string\",\n    \"name\": \"string\",\n    \"pemFile\": \"string\",\n    \"hasKey\": true,\n    \"expiration\": \"2020-03-30T19:32:08.221Z\",\n    \"usedBy\": \"string\",\n    \"description\": \"string\"\n  }\n}\n```\n\nSet the web server certificate used by Rubrik for REST API\ncommunications by sending a PUT request to the\n[`/cluster/{id}/security/web_signed_cert`](#operation/setWebSignedCertificate)\nendpoint:\n\n```bash\ncurl -X PUT \\\n  -d '{\n    \"certificateId\": \"string\"}' \\\n  \"https://$cluster_address/api/v1/cluster/{id}/security/web_signed_cert\"\n```\n```bash\n{\n  \"id\": \"string\",\n  \"status\": \"string\",\n  \"progress\": 0,\n  \"startTime\": \"2020-03-30T19:09:13.400Z\",\n  \"endTime\": \"2020-03-30T19:09:13.400Z\",\n  \"nodeId\": \"string\",\n  \"error\": {\n    \"message\": \"string\"\n  },\n  \"links\": [\n    {\n      \"href\": \"string\",\n      \"rel\": \"string\"\n    }\n  ]\n}\n```\n\nTo use the default, self-signed certificate, send a DELETE request to the\n[`/cluster/{id}/security/web_signed_cert`](#operation/resetWebSignedCertificate)\nendpoint.\n\n```bash\ncurl -X DELETE \\\n  -d '{\n    \"id\": \"$cluster_id\" }' \\\n  \"https://$cluster_address/api/v1/cluster/{id}/security/web_signed_cert\"\n```\n```bash\n{\n  \"id\": \"string\",\n  \"status\": \"string\",\n  \"progress\": 0,\n  \"startTime\": \"2020-03-30T19:31:13.024Z\",\n  \"endTime\": \"2020-03-30T19:31:13.025Z\",\n  \"nodeId\": \"string\",\n  \"error\": {\n    \"message\": \"string\"\n  },\n  \"links\": [\n    {\n      \"href\": \"string\",\n      \"rel\": \"string\"\n    }\n  ]\n}\n```\n\n## Managing Truststores\n\nTo retrieve the existing truststore configuration, send\na GET request to:\n[`/cluster/{id}/security/truststore`]\n(#operation/getTruststores)\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/cluster/{id}/security/truststore\"\n```\n```bash\n{\n  \"hasMore\": false\n  \"data\": [\n    {\n      \"truststoreType\": \"TruststoreType\",\n      \"certificates\": [\n        {\n          \"certId\": \"string\",\n          \"name\": \"string\",\n          \"pemFile\": \"string\",\n          \"hasKey\": true,\n          \"expiration\": \"2020-03-30T19:32:08.221Z\",\n          \"usedBy\": \"string\",\n          \"description\": \"string\"\n        }\n      ]\n    }\n  ]\n}\n```\n\nTo set the certificates for one or more of the truststores used by Rubrik,\nsend a PATCH request to the\n[`/cluster/{id}/security/truststore`](#operation/setTruststoreCertificate)\nendpoint:\n\n```bash\ncurl -X PATCH \\\n  -d '{\n      \"truststorePayload\": [ \\\n        {\"truststoreType\": \"TruststoreType\", certIds: [\"string\", \"string\"]} \\\n      ]}' \\\n  \"https://$cluster_address/api/v1/cluster/{id}/security/truststore\"\n```\n```bash\nOK\n```\n\nTo clear the certificates for one or more of the truststores used by Rubrik,\nsend a DELETE request to the\n[`/cluster/{id}/security/truststore`](#operation/unsetTruststoreCertificate)\nendpoint:\n\n```bash\ncurl -X DELETE \\\n  \"https://$cluster_address/api/v1/cluster/{id}/security/truststore?truststores=$truststore1,$truststore2\"\n```\n```bash\nOK\n```\n\n## Updating CORS support configuration\n\nTo update the CORS support configuration for a web server, send a PATCH request\nto [`/cluster/{id}/security/cors`](#operation/updateCorsConfiguration).\n```bash\ncurl -X PATCH \\\n  -d '{\n    \"isEnabled\": \"$is_enabled\",\n    \"allowedOrigins\": \"$allowed_origins\",\n    \"allowedHEaders\": \"$allowed_headers\" }' \\\n  \"https://$cluster_address/api/v1/cluster/{id}/security/cors\"\n```\n\n## Getting CORS support configuration\n\nRetrieve the current CORS support configuration with a GET request to:\n[`/cluster/{id}/security/cors`](#operation/getCorsConfiguration).\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/cluster/{id}/security/cors\"\n```\n\n## Getting FIPS enablement status\n\nRetrieve the current FIPS enablement status with a GET request to:\n[`/cluster/{id}/security/fips`](#operation/getFips).\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/cluster/{id}/security/fips\"\n```\n\n## Updating FIPS enablement\n\nTo update the FIPS enablement for a cluster, send a PATCH request\nto [`/cluster/{id}/security/fips`](#operation/updateFips).\n```bash\ncurl -X PATCH \\\n  -d '{\n    \"isEnabledInFlight\": \"$is_enabled_in_flight\" }' \\\n  \"https://$cluster_address/api/v1/cluster/{id}/security/fips\"\n```\n\n## Managing KMIP Servers\nTo configure a new KMIP server integration, send a PUT request to the\n[`/cluster/{id}/security/kmip/server`](#operation/addKmipServer) endpoint.\n```bash\ncurl -X PUT \\\n  -d '{\n    \"serverAddress\": \"string\",\n    \"serverCertificateId\": \"string\",\n    \"serverPort\": 0}' \\\n  \"https://$cluster_address/api/v1/cluster/{id}/security/kmip/server\"\n\n```\n```bash\n{\n  \"id\": \"string\",\n  \"status\": \"string\",\n  \"progress\": 0,\n  \"startTime\": \"2020-03-31T22:10:40.912Z\",\n  \"endTime\": \"2020-03-31T22:10:40.912Z\",\n  \"nodeId\": \"string\",\n  \"error\": {\n    \"message\": \"string\"\n  },\n  \"links\": [\n    {\n      \"href\": \"string\",\n      \"rel\": \"string\"\n    }\n  ]\n}\n```\n\nFor information about a configured KMIP server, send a GET request to the\n[`/cluster/{id}/security/kmip/server`](#operation/getKmipServer) endpoint:\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/cluster/{id}/security/kmip/server?server_address=$address\"\n```\n```bash\n[\n  {\n    \"serverAddress\": \"string\",\n    \"serverCertificateId\": \"string\",\n    \"serverPort\": 0\n  }\n]\n```\nTo delete an existing KMIP server integration, send a DELETE\nrequest to [`/cluster/{id}/security/kmip/server`](#operation/deleteKmipServer):\n```bash\ncurl -X DELETE \\\n\"https://$cluster_address/api/v1/cluster/{id}/security/kmip/server?server_address=$address\"\n```\n```bash\n{\n  \"id\": \"string\",\n  \"status\": \"string\",\n  \"progress\": 0,\n  \"startTime\": \"2020-03-31T22:15:26.693Z\",\n  \"endTime\": \"2020-03-31T22:15:26.693Z\",\n  \"nodeId\": \"string\",\n  \"error\": {\n    \"message\": \"string\"\n  },\n  \"links\": [\n    {\n      \"href\": \"string\",\n      \"rel\": \"string\"\n    }\n  ]\n}\n\n```\n\n## Managing the KMIP Client\nTo configure the KMIP client, send a PUT request to\n[`/cluster/{id}/security/kmip/client`](#operation/setKmipClient)\n```bash\ncurl -X PUT \\\n  -d '{\n    \"username\": \"string\",\n    \"password\": \"string\",\n    \"clientCertificateId\": \"string\"\n    }' \\\n  \"https://$cluster_address/api/v1/cluster/{id}/security/kmip/client\"\n```\n```bash\n\n```\nTo retrieve information about the confiugred KMIP client, send a GET request to\n[`/cluster/{id}/security/kmip/client`](#operation/getKmipClient)\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/cluster/{id}/security/kmip/client\"\n```\n```bash\n{\n  \"username\": \"string\",\n  \"clientCertificateId\": \"string\",\n  \"isPasswordSet\": true\n}\n```\n\n## Manage the 2-Step Verification Global Setting\n### Retrieving the 2-Step Verification global setting\nTo retrieve the 2-Step Verification global setting for\na specific Rubrik cluster, send a GET request to\n[`/cluster/{id}/security/totp/setting`](#operation/getTotpGlobalSetting).\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/cluster/{id}/security/totp/setting\"\n```\nThe Rubrik REST API server responds with the 2-Step Verification setting for\nthe specified Rubrik cluster.\n```bash\n{\n  \"isEnforced\": true\n}\n```\n\n### Updating the 2-Step Verification global setting\nTo update the 2-Step Verification global setting for\na specific Rubrik cluster, send a PUT request to\n[`/cluster/{id}/security/totp/setting`](#operation/updateTotpGlobalSetting).\n```bash\ncurl -X PUT \\\n  -d '{\"isEnforced\": true}'\n  \"https://$cluster_address/api/v1/cluster/{id}/security/totp/setting\"\n```\nThe Rubrik REST API server responds with the updated 2-Step Verification \nsetting for the specified Rubrik cluster.\n```bash\n{\n  \"isEnforced\": true\n}\n```\n\n# Event\n\n## Get latest events and event series info for event series\nSend a GET request to [`/event/latest`](#operation/queryLatestEventsV1)\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/event/latest\"\n```\n\n## Get information for all events\nSend a GET request to [`/event`](#operation/queryEventV1)\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/event\"\n```\n\n## Get all events and relevant information associated with an event series\nSend a GET request to [`/event_series/{id}`](#operation/queryEventSeriesByIdV1)\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/event_series/{id}\"\n```\n\n## Get download link of CSV file containing summary of events\nSend a GET request to\n[`/event/csv_download_link`](#operation/getEventsCsvDownloadLink)\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1//event/csv_download_link\"\n```\n\n# SLA Domains\n\nRubrik clusters provide automated data management and protection through SLA Domains.\nAn SLA Domain defines the data management and protection policies for their assigned snappables (virtual machines, file systems, and applications).\n\nTo provide policy based management and protection of a snappable, add the snappable to an SLA Domain, or to multiple SLA Domains.\n\n## Retrieving SLA Domains\n\nBefore assigning snappables to SLA Domains, get a list of the SLA Domains that exist on a Rubrik cluster. For a new Rubrik cluster, the list shows only the default SLA Domains. When custom SLA Domains are added to the Rubrik cluster, the list is modified to include those SLA Domains.\n\n**Example:** Retrieving SLA Domains from a Rubrik cluster\n\nSend a GET request to [`/sla_domain`](#operation/querySlaDomain).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/sla_domain\"\n```\n\nThe Rubrik REST API server returns a `ListResponse` object of all SLA Domains.\nAt a minimum, the `ListResponse` object includes the default SLA Domains: Gold, Silver, and Bronze.\n\n```bash\n{\n  \"data\": [\n    {\n      \"id\": \"$gold_sla_id\",\n      \"name\": \"Gold\"\n    },\n    {\n      \"id\": \"$silver_sla_id\",\n      \"name\": \"Silver\"\n    },\n    {\n      \"id\": \"$bronze_sla_id\",\n      \"name\": \"Bronze\"\n    }\n  ],\n  \"hasMore\": false,\n  \"total\": 3\n}\n```\n\nTo obtain more details about a specific SLA domain send a GET request with the `id` of one of the SLA Domains to the `/sla_domain/{id}` endpoint:  [`/sla_domain/{id}`](#operation/getSlaDomain)\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/sla_domain/$bronze_sla_id\"\n```\nThe Rubrik REST API server responds with the details of the specified SLA Domain.\n\n```bash\n{\n  \"id\": \"$bronze_sla_id\",\n  \"primaryClusterId\": \"$cluster_id\",\n  \"name\": \"Bronze\",\n  \"frequencies\": [\n    {\n      \"timeUnit\": \"Daily\",\n      \"frequency\": 1,\n      \"retention\": 32\n    },\n    {\n      \"timeUnit\": \"Monthly\",\n      \"frequency\": 1,\n      \"retention\": 12\n    },\n    {\n      \"timeUnit\": \"Yearly\",\n      \"frequency\": 1,\n      \"retention\": 2\n    }\n  ],\n  \"allowedBackupWindows\": [],\n  \"firstFullAllowedBackupWindows\": [],\n  \"archivalSpecs\": [],\n  \"replicationSpecs\": [\n    {\n      \"locationId\": \"$repl_location_id\",\n      \"retentionLimit\": 0\n    }\n  ],\n  \"numDbs\": 0,\n  \"numFilesets\": 7,\n  \"numLinuxHosts\": 3,\n  \"numWindowsHosts\": 2,\n  \"numVms\": 1,\n  \"isDefault\": false,\n  \"uiColor\": \"#cc8366\"\n}\n```\n\n## Working with SLA Domains\n\nTo work with an SLA Domain, obtain the `id` of that SLA Domain. As described in [Retrieving SLA Domains](#section/SLA-Domains/Retrieving-SLA-Domains), start by sending a GET request to [`/sla_domain`](#operation/querySlaDomain).\n\nThe Rubrik REST API server responds with a `ListResponse` object that contains all of the SLA Domains on the specfied Rubrik cluster. From that list object, find the data array element that has the `name` value of the selected SLA Domain. In the same array element as the `name` value, note the value of the `id` string.\n\n## Creating SLA Domains\n\nTo create an SLA domain send a POST request to [`/sla_domain`](#operation/createSlaDomain). Include the attributes for the SLA Domain in the request body.\n\nThe following table describes the required and optional attributes to include in the request body when creating an SLA Domain.\n\n| Attribute | Req'd | JSON Type | Description |\n| ------ | --- | ----- | ----------- |\n| `name` | Yes | String | Name of the SLA Domain.  |\n| `frequencies` | Yes | Array | Each member defines a policy by specifying: `timeUnit`, `frequency`, and `retention`. Requires at least one member in the array.  |\n| `allowedBackupWindows` | Yes | Array | Each member defines a backup window using values for `startTimeAttributes` and `durationInHours`. The time specified in `startTimeAttributes` uses the Rubrik cluster time zone. To specify multiple backup windows, add an array member for each window. To create an SLA Domain without a backup window, specify a null array value: `[]`.  |\n| `firstFullAllowedBackupWindows` | Yes | Array | Each member defines a period when first full backups are allowed by specifying: `startTimeAttributes` and `durationInHours`. Several first full backup windows can be specified by adding an array member for each one. Create an SLA Domain without a first full backup window by specifying a null array value: `[]`.  |\n| `localRetentionLimit` | No | String | Specify an integer value to set the number of days to retain a local copy of a snapshot. When an archival location is specified, specify `0` to enable Instant Archiving. |\n| `archivalSpecs` | No | Array | Defines the archival location for the SLA Domain by specifying: `locationId` and `archivalThreshold`. Currently limited to one array member. |\n| `replicationSpecs` | No | Array | Defines the replication location for the SLA Domain by specifying: `locationId` and `retentionLimit`. Currently limited to one array member. |\n\n**Example:** Creating an SLA Domain for daily backups\n\nCreate an SLA Domain that takes a backup once a day and retains the backup for seven days. Do not set a backup window or a first full backup window. Do not include archival or replication.\n\n```bash\ncurl -X POST \\\n  -d '{\n  \"name\": \"Daily SLA\",\n  \"frequencies\": [\n    {\n      \"timeUnit\": \"Day\",\n      \"frequency\": 1,\n      \"retention\": 7\n    }\n  ],\n  \"allowedBackupWindows\": [],\n  \"firstFullAllowedBackupWindows\": [] }' \\\n  \"https://$cluster_address/api/v1/sla_domain\"\n```\nThe response confirms the attributes of the SLA Domain and provides the `id` of the new SLA Domain.\n\n```bash\n{\n  \"id\": \"$sla_id\",\n  \"name\": \"Daily SLA\",\n  \"frequencies\": [\n    {\n      \"timeUnit\": \"Day\",\n      \"frequency\": 1,\n      \"retention\": 7\n    }\n  ],\n  \"allowedBackupWindows\": [],\n  \"firstFullAllowedBackupWindows\": []\n}\n```\n## Modifying SLA Domains\n\nTo modify the attributes of an SLA domain send a PUT request to [`/sla_domain/{id}`](#operation/updateSlaDomain). Include in the request body the new attributes.\n\n**Example:** Modifying the daily backup SLA Domain\n\nChange the SLA Domain that was created in [Creating SLA Domains](#section/SLA-Domains/Creating-SLA-Domains) to increase the retention to 14 days.\n\n```bash\ncurl -X PUT \\\n  -d '{\n  \"name\": \"Daily SLA\",\n  \"frequencies\": [\n    {\n      \"timeUnit\": \"Day\",\n      \"frequency\": 1,\n      \"retention\": 14\n    }\n  ],\n  \"allowedBackupWindows\": [],\n  \"firstFullAllowedBackupWindows\": [] }' \\\n  \"https://$cluster_address/api/v1/sla_domain/$sla_id\"\n```\nThe response confirms the new attribute.\n\n```bash\n{\n  \"id\": \"$sla_id\",\n  \"name\": \"Daily SLA\",\n  \"frequencies\": [\n    {\n      \"timeUnit\": \"Day\",\n      \"frequency\": 1,\n      \"retention\": 14\n    }\n  ],\n  \"allowedBackupWindows\": [],\n  \"firstFullAllowedBackupWindows\": []\n}\n```\n## Patching SLA Domains\n\nTo patch the attributes of an SLA domain, send a PATCH request to\n[`/sla_domain/{id}`](#operation/patchSlaDomain). Include in the request body\nonly the attributes that needs to be patched.\n\n**Example:** Patching the daily backup SLA Domain\n\nPatch the SLA Domain that was created in [Creating SLA Domains]\n(#section/SLA-Domains/Creating-SLA-Domains) to change the archival\nspecifications.\n\n```bash\ncurl -X PATCH \\\n  -d '{\n  \"archivalSpecs\": [\n    {\n        \"locationId\": \"some-valid-archived-location-id\",\n        \"archivalThreshold\": 14\n    }\n  ]}' \\\n  \"https://$cluster_address/api/v1/sla_domain/$sla_id\"\n```\nThe response confirms the new attribute and also includes the other\nattributes that were not changed.\n\n```bash\n{\n  \"id\": \"$sla_id\",\n  \"name\": \"Daily SLA\",\n  \"frequencies\": [\n    {\n      \"timeUnit\": \"Day\",\n      \"frequency\": 1,\n      \"retention\": 7\n    }\n  ],\n  \"archivalSpecs\": [\n    {\n      \"locationId\": \"some-valid-archived-location-id\",\n      \"archivalThreshold\": 14\n    }\n  ],\n  \"allowedBackupWindows\": [],\n  \"firstFullAllowedBackupWindows\": []\n}\n```\n## Deleting SLA Domains\n\nTo delete an SLA domain send a DELETE request to [`/sla_domain/{id}`](#operation/deleteSlaDomain).\n\n**Example:** Deleting an SLA Domain\n\nDelete an SLA Domain with the `id` of `$sla_id`.\n\n```bash\ncurl -X DELETE \"https://$cluster_address/api/v1/sla_domain/$sla_id\"\n```\nThe Rubrik REST API server responds with HTTP response code 204. This indicates the request succeeded and the response body is empty.\n\n## Inherited protection\n\nThe Rubrik REST API uses the reserved value `INHERIT` with the `configuredSlaDomainId` string to identify a snappable that derives its protection policy from a parent object. Examples of this:\n* VMware virtual machine inherits from vCenter Server\n* SQL Server database inherits from SQL Server instance\n\nEvery snappable that can be protected through an SLA Domain is represented by an object that has a `configuredSlaDomainId` attribute and an `effectiveSlaDomainId` attribute. The `configuredSlaDomainId` attribute contains either the value of a direct SLA Domain assignment or the reserved value `INHERIT`.\n\nThe `effectiveSlaDomainId` attribute contains the value of the SLA Domain setting that the Rubrik cluster actually applies to the snappable. When the value of the `configuredSlaDomainId` attribute is `INHERIT`, the value of the `effectiveSlaDomainId` attribute is derived from a parent object of the snappable. In all other cases, the value of the `effectiveSlaDomainId` attribute is the same as the value of the `configuredSlaDomainId` attribute.\n\n\n## SLA Domain assignments\n\nTo assign a snappable to an SLA Domain, use the endpoint that is provided for that type of snappable.\n* VMware virtual machines  \nSend a PATCH request to  [`/vmware/vm/{id}`](#operation/updateVm). [VMware virtual machines](#section/VMware-virtual-machines) provides more information about this.\n* Linux or Windows filesets  \nSend a PATCH request to  [`/fileset/{id}`](#operation/updateFileset). [Filesets](#section/Filesets) provides more information about this.\n* SQL Server databases  \nSend a PATCH request to  [`/mssql/db/{id}`](#operation/updateMssqlDb). [SQL Server databases](#section/SQL-Server-databases) provides more information about this.\n\n## Assigning SLA Domain to downloaded snapshots\n\nTo assign an SLA Domain to a list of snapshots at their downloaded locations,\nsend a POST request to the [`/sla_domain/assign_to_downloaded_snapshots`]\n(#operation/assignSlaToDownloadedSnapshots) endpoint.\n\n**Example:** Assigning an SLA Domain with ID $slaId to list of snapshots -\n             $s1Id, $s2Id of object $snappableId\n\n```bash\ncurl -X POST \\\n  -d '{\n   \"slaDomainId\": $slaId\n   \"objectId\": $snappableId\n   \"snapshotIds\": [$s1Id, $s2Id]}' \\\n   \"https://$cluster_address/api/v1/sla_domain/assign_to_downloaded_snapshots\"\n```\n\n```bash\n{\n  \"responses\": [\n    {\n      \"id\": \"string\",\n      \"status\": \"string\",\n      \"progress\": 0,\n      \"startTime\": \"2019-10-29T22:11:35.256Z\",\n      \"endTime\": \"2019-10-29T22:11:35.256Z\",\n      \"nodeId\": \"string\",\n      \"error\": {\n        \"message\": \"string\"\n      },\n      \"links\": [\n        {\n          \"href\": \"string\",\n          \"rel\": \"string\"\n        }\n      ]\n    }\n  ]\n}\n```\n\nThe Rubrik REST API server responds with HTTP response code 200 and the\nresponse body containing the details of the async request.\n\n# Virtual machines\n\nThe Rubrik cluster protects virtual machines running in a VMware vSphere\nenvironment through the VADP APIs. The Rubrik cluster also works with\nthe Rubrik Backup Service running on the virtual machine to provide:\n\n* Optimal performance when restoring files and folders to the virtual machine\n* Application consistent snapshots of a Windows virtual machine\n\n\n## vCenter servers\n\nA Rubrik cluster normally protects and manages virtual machines through the vCenter Server that administers those virtual machines. After a vCenter server is added to a Rubrik cluster, the Rubrik cluster automatically discovers the virtual machines that are administered by that vCenter server.\n\n### Retrieving vCenter Servers\n\nRequest a list of the vCenter servers that are registered with a Rubrik cluster by sending a GET request to  [`/vmware/vcenter`](#operation/queryVcenter).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/vmware/vcenter\"\n```\n\nThe Rubrik REST API server responds with the first page of a `ListResponse` object.\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"id\": \"$vcenter_id0\",\n      \"hostname\": \"$vcenter_address0\",\n      \"username\": \"$vcenter_admin0\",\n      \"configuredSlaDomainId\": \"INHERIT\",\n      \"primaryClusterId\": \"$cluster_id\",\n      \"caCerts\": \"$ca_certs0\"\n    },\n    {\n      \"id\": \"$vcenter_id1\",\n      \"hostname\": \"$vcenter_address1\",\n      \"username\": \"$vcenter_admin1\",\n      \"configuredSlaDomainId\": \"INHERIT\",\n      \"primaryClusterId\": \"$cluster_id\",\n      \"caCerts\": \"$ca_certs1\"\n    }\n  ],\n  \"total\": 2\n}\n```\nDepending on the number of registered vCenter Servers, all of the entries on the list may not be included on the first page. [Working with lists](#section/Overview/Working-with-lists) describes how to work with a ListResponse object to obtain additional pages of the list.\n\n\n### Adding a vCenter server\n\nTo add a vCenter server, send a POST request to [`/vmware/vcenter`](#operation/createVcenter).\nInclude in the body of the request the address of the vCenter server and credentials for a user account (`username`) that has the required permissions. The Rubrik User Guide provides details about creating an account with the required permissions.\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"hostname\": \"$vcenter_address\",\n    \"username\": \"$vcenter_admin\",\n    \"password\": \"$vcenter_password\" }' \\\n  \"https://$cluster_address/api/v1/vmware/vcenter\"\n```\n\nThe Rubrik REST API server initiates the asynchronous request task and responds with a task object.\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"status\": \"RUNNING\",\n  \"error\": \"None\",\n  \"progress\": \"$request_progress\"\n  \"links\": [\n    {\n      href: \"https://$cluster_address/api/v1/vmware/vcenter/request/$request_id\",\n      rel: \"self\"\n    }\n  ]\n}\n```\n\nUsing the information provided in the task object, send a GET request to the [`/vmware/vcenter/request/{id}`](#operation/getVcenterAsyncRequestStatus) endpoint to poll the task status. When the value of `status` in the task object is `SUCCEEDED`, the task finished successfully.\n\n### Retrieve vCenter Server details\nGet the details for a vCenter Server that is registered with a Rubrik cluster by sending a GET request to [`/vmware/vcenter/{id}`](#operation/getVcenter).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/vmware/vcenter/{id}\"\n```\n\nThe Rubrik REST API server responds with the details of the specified vCenter Server object.\n\n```bash\n{\n  \"id\": \"$id\",\n  \"hostname\": \"$vcenter_address0\",\n  \"username\": \"$vcenter_admin0\",\n  \"configuredSlaDomainId\": \"INHERIT\",\n  \"primaryClusterId\": \"$cluster_id\"\n}\n```\n\n### Modifying a vCenter Server entry\n\nTo change the information that a Rubrik cluster stores for a vCenter Server, send a PUT request to [`/vmware/vcenter/{id}`](#operation/updateVcenter). All of the members of the `VcenterConfig` object must be in the PUT request. Using the new values, include in the body of the PUT request each member (`{string : value}`) of the `VcenterConfig` object:\n* `\"hostname\": \"$vcenter_address\"`\n* `\"username\": \"$vcenter_admin\"`\n* `\"password\": \"$vcenter_password\"`\n\nTo change the configured SLA that is configured for a vCenter Server or to change CA certificates for the vCenter, send a PATCH request to[`/vmware/vcenter/{id}`](#operation/patchVcenter).\n\n```bash\ncurl -X PUT \\\n  -d '{\n    \"hostname\": \"$vcenter_address\",\n    \"username\": \"$vcenter_admin\",\n    \"password\": \"$vcenter_password\" }' \\\n  \"https://$cluster_address/api/v1/vmware/vcenter/$vcenter_id\"\n```\n\nThe Rubrik REST API server sends a response, with the updated details of the vCenter Server entry in the response body.\n\n```bash\n{\n  \"id\": \"$vcenter_id\",\n  \"hostname\": \"$vcenter_address\",\n  \"username\": \"$vcenter_admin\",\n  \"configuredSlaDomainId\": \"INHERIT\",\n  \"primaryClusterId\": \"$cluster_id\",\n  \"caCerts\": \"$ca_certs\"\n}\n```\n### Removing a vCenter Server entry\n\nTo remove a vCenter Server entry from a Rubrik cluster, first unmount any Live Mount and Instant Recovery virtual machines for the vCenter Server. Then send a DELETE request to [`/vmware/vcenter/{id}`](#operation/deleteVcenter).\n\n```bash\ncurl -X DELETE \\\n  \"https://$cluster_address/api/v1/vmware/vcenter/$vcenter_id\"\n```\nThe Rubrik REST API server initiates the asynchronous delete task and responds with a task object.\n\n```bash\n{\n    \"id\": \"$request_id\",\n    \"status\": \"RUNNING\",\n    \"error\": \"None\",\n    \"progress\": 0,\n    \"startTime\": \"$start_timestamp\",\n    \"endTime\": \"$end_timestamp\",\n    \"links\": [\n      {\n        \"href\": \"https://$cluster_address/api/v1/vmware/vcenter/request/$request_id\",\n        \"rel\": \"self\"\n      }\n    ]\n  }\n```\nUsing the information provided in the task object, send a GET request to poll the task status. When the value of `status` in the task object is `SUCCEEDED`, the removal of the vCenter Server object finished successfully.\n\n### Force refresh of virtual machine on a vCenter\nForce a refresh of the metadata for a single virtual machine by sending a POST\nrequest to [`/vmware/vcenter/{id}`](#operation/createRefreshVmV1).\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"vmMoid\": \"$vm_moid\" }' \\\n  \"https://$cluster_address/api/v1/vmware/vcenter/{id}/refresh_vm\"\n```\n\nThe Rubrik REST API server responds with a 204 response.\n\n\n\n### Metadata refresh\n\nThe Rubrik cluster regularly refreshes the metadata of the registered vCenter Servers. As part of a refresh operation, the Rubrik cluster discovers any changes or additions to the virtual machines that are administered by the vCenter Servers. Instead of waiting for a regular refresh, a metadata refresh can be manually initiated by sending a POST request to [`/vmware/vm/refresh`](#operation/createRefresh), using the Rubrik cluster ID (`$cluster_address`) and the vCenter Server ID (`$vcenter_id`).\n\n```bash\ncurl -X POST \\\n  \"https://$cluster_address/api/v1/vmware/vcenter/$vcenter_id/refresh\"\n```\n\nThe Rubrik REST API server initiates the asynchronous request task and responds with a task object.\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"status\": \"RUNNING\",\n  \"error\": \"None\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vmware/vcenter/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\nUsing the information provided in the task object, send a GET request to poll the task status. When the value of `status` in the task object is `SUCCEEDED`, the metadata refresh completed successfully.\n\n## ESXi hypervisors\n\nRetrieve a list of all available ESXi hypervisors in the vSphere environment by sending a GET request to [`/vmware/host`](#operation/queryVmwareHost).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/vmware/host?primary_cluster_id=$cluster_id\"\n```\nThe value of `primary_cluster_id` is the `id` of a Rubrik cluster. Use `local` to retrieve a list for the Rubrik cluster that is hosting the current session.\n\nThe Rubrik REST API server responds with the first page of a `ListResponse` object.\n\n**Note:** To shorten the example, the response uses ellipsis to replace some members.\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"id\": \"$esxi_id\",\n      \"name\": \"$esxi_name\",\n      \"datacenterId\": \"$datacenter_id\",\n      \"computeClusterId\": \"$compute_cluster_id\",\n      \"datastores\": [\n      ...\n      ],\n      \"configuredSlaDomainId\": \"INHERIT\",\n      \"primaryClusterId\": \"$cluster_id\"\n    }\n    ],\n  \"total\": 1\n}\n```\n\nRetrieve more details for an ESXi hypervisor by sending a GET request to [`/vmware/host/{id}`](#operation/getVmwareHost)\n\n```bash\ncurl -X POST \\\n  \"https://$cluster_address/api/v1/vmware/host/$esxi_id\"\n```\n\nThe Rubrik REST API server responds with the details for the specified ESXi hypervisor.\n\n**Note:** To shorten the example, the response uses ellipsis to replace some members.\n\n```bash\n{\n  \"id\": \"$esxi_id\",\n  \"moid\": \"$moid\",\n  \"name\": \"$esxi_name\",\n  \"computeClusterId\": \"$compute_cluster_id\",\n  \"datacenter\": {\n    \"id\": \"$datacenter_id\",\n    \"name\": \"$datacenter_name\",\n    \"vcenterId\": \"$vcenter_id\",\n    \"configuredSlaDomainId\": \"INHERIT\",\n    \"primaryClusterId\": \"$cluster_id\"\n  },\n  \"datastores\": [\n    ...\n  ],\n  \"virtualMachines\": [\n    ...\n  ],\n  \"configuredSlaDomainId\": \"INHERIT\",\n  \"primaryClusterId\": \"$cluster_id\"\n}\n```\n\nAdditionally, To change the SLA Domain that is configured for an ESXi hypervisor, send a PATCH request on [`/vmware/host`](#operation/updateVmwareHost)\n\n```bash\ncurl -X POST \\\n  \"https://$cluster_address/api/v1/vmware/host/$snapshot_id\"\n```\n\nRetrieve datastore details for an ESXi hypervisor by sending a GET request to [`/vmware/host/{id}/datastore`](#operation/getVmwareHostDatastore)\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/vmware/host/$esxi_id/datastore\"\n```\n\n\n## Virtual machine protection\n\nAfter a vCenter Server is registered, the Rubrik cluster acquires metadata for the virtual machines that are administered through that vCenter Server. Using the metadata, assign Rubrik cluster protection to the virtual machines.\n\nThe typical protection workflow involves the following tasks:\n1. Find the virtual machine resource object.\n2. (Optional) Enable scripts on the virtual machine.\n3. (Optional) Exclude specified vmdk files for the virtual machine.\n4. Assign the virtual machine to an SLA Domain.\n5. (Optional) Get the configuration used to force a full snapshot of the\n   virtual machine.\n6. (Optional) Request a forced full snapshot for the virtual machine.\n\n### Finding virtual machines\nGet a list of the virtual machine objects known to the Rubrik cluster by sending a GET request to [`/vmware/vm`](#operation/queryVm). The Rubrik REST API server returns a response that includes a `ListResponse` object. Use query parameters as part of the GET request, to filter the list and to work with the `ListResponse` object.\n\nA GET request that is sent to the [`/vmware/vm`](#operation/queryVm) endpoint accepts the query parameters that are described in the following table.\n| Parameter | Description |\n| --------- | ----------- |\n| `effective_sla_domain_id` | SLA Domain applied to the virtual machine, either directly or derived. Use `UNPROTECTED` for virtual machines that do not have a derived or direct SLA Domain. |\n| `primary_cluster_id` | The `id` of the primary Rubrik cluster for the virtual machine. Use `local` for the Rubrik cluster that is hosting the Rubrik REST API session. |\n| `limit` | Maximum number of a elements to include in the `data` array of the response. |\n| `offset` | Index reference point to use when determining the elements to include in the response. |\n| `is_relic` | Relic status of the virtual machine. `true` to specify only relic virtual machines. `false` to exclude relic virtual machines. Do not include the parameter to include both relic and non-relic virtual machines. |\n| `name` | String value to match in any part of the name of a virtual machine.  |\n| `moid` | String value to match in any part of the MOID of a virtual machine.  |\n| `sla_assignment` | SLA Domain assignment status of the virtual machine. Use `derived` for virtual machines that derive protection status from another resource object. Use `direct` for virtual machines that have a directly assigned SLA Domain. Use `unassigned` for virtual machines that do not have a direct or derived SLA Domain. |\n| `guest_os_name` | Filter by vm guest os name using infix search. |\n| `sort_by` | Perform an ASCII sort of the elements in the `ListResponse` object data array by a specified object value: `effective_sla_domain_id`, `name`, `moid`, `folderPath`, or `infraPath`. |\n| sort_order | Sort order for the elements in the ListResponse object data array. Use `asc` for ascending sort or `desc` for descending sort. |\n\n\n**Example:** Retrieving a list of virtual machine resource objects\n\nRetrieve a list of unprotected virtual machine resource objects that have 'test' in their name. Limit the first page of the response to the first object.\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/vmware/vm?effective_sla_domain_id=UNPROTECTED&limit=1&offset=0&name=test\"\n```\nThe Rubrik REST API server responds with a `ListResponse` object. The first page has the first object of the 156 objects that matched the query parameters.\n\n**Note:** To shorten the example, the response uses ellipsis to replace some members.\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"id\": \"$vm_id\",\n      \"moid\": \"$vm_moid\",\n      \"name\": \"abctest123\",\n      \"vcenterId\": \"$vcenter_id\",\n      \"hostName\": \"$esxi_host_name\",\n      \"hostId\": \"$esxi_host_id\",\n      \"clusterName\": \"$vcenter_cluster_name\",\n      \"powerStatus\": \"poweredOn\",\n      \"configuredSlaDomainId\": \"INHERIT\",\n      \"configuredSlaDomainName\": \"Inherit\",\n      \"effectiveSlaDomainId\": \"UNPROTECTED\",\n      \"effectiveSlaDomainName\": \"Unprotected\",\n      \"slaAssignment\": \"Unassigned\",\n      \"ipAddress\": \"$vm_ip\",\n      \"toolsInstalled\": true,\n      \"primaryClusterId\": \"$cluster_id\",\n      \"isReplicationEnabled\": false,\n      \"folderPath\": [\n        ...\n      ],\n      \"infraPath\": [\n        ...\n      ],\n      \"vmwareToolsInstalled\": true,\n      \"isRelic\": false,\n      \"maxNestedVsphereSnapshots\": -1,\n      \"snapshotConsistencyMandate\": \"UNKNOWN\",\n      \"physicalStorage\": 0,\n      \"guestCredentialAuthorizationStatus\": \"PENDING\"\n    }\n  ],\n  \"total\": 156\n}\n```\n\n### Retrieving more details for a virtual machine\nTo get detailed information for a specified virtual machine object, send a GET request to [`/vmware/vm/{id}`](#operation/getVm).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/vmware/vm/$vm_id\"\n```\nThe Rubrik REST API server responds with the details for the virtual machine object.\n\n**Note:** To shorten the example, the response uses ellipsis to replace some members.\n\n```bash\n{\n  \"id\": \"$vm_id\",\n  \"moid\": \"$vm_moid\",\n  \"name\": \"abctest123\",\n  \"powerStatus\": \"poweredOn\",\n  \"configuredSlaDomainId\": \"INHERIT\",\n  \"effectiveSlaDomain\": {\n    ...\n  },\n  \"slaAssignment\": \"Unassigned\",\n  \"blackoutWindowStatus\": {\n    \"isGlobalBlackoutActive\": false,\n    \"isSnappableBlackoutActive\": false\n  },\n  \"blackoutWindows\": {\n    ...\n    ],\n    \"snappableBlackoutWindows\": []\n  },\n  \"currentHost\": {\n    ...\n  },\n  \"virtualDiskIds\": [\n    ...\n  ],\n  \"snapshots\": [],\n  \"ipAddress\": \"$vm_ip\",\n  \"toolsInstalled\": true,\n  \"snapshotCount\": 0,\n  \"snapshotConsistencyMandate\": \"\",\n  \"maxNestedVsphereSnapshots\": -1,\n  \"primaryClusterId\": \"$cluster_id\",\n  \"isReplicationEnabled\": false,\n  \"isRelic\": false,\n  \"physicalStorage\": 0,\n  \"guestOsName\": \"$guest_os\",\n  \"guestCredentialAuthorizationStatus\": \"PENDING\",\n  \"isArrayIntegrationPossible\": false,\n  \"isArrayIntegrationEnabled\": false\n}\n```\n\n### Register Rubrik Backup Service\n\nTo register Rubrik Backup Service running on a specified virtual machine,\nsend a POST request to\n[`/vmware/vm/{id}/register_agent`](#operation/vmRegisterAgent).\n\n```bash\ncurl -X POST \\\n  \"https://$cluster_address/api/v1/vmware/vm/$vm_id/register_agent\"\n```\nThe Rubrik REST API server responds with an HTTP 204 response when the\nregistration is successful.\n\n\n### Enabling scripts\n\nA virtual machine object can be configured to start scripts on the guest operating system. A script can be started before the backup (`preBackupScript`), after the snapshot completes (`postSnapScript`), and after the backup task completes (`postBackupScript`). The *Rubrik User Guide* provides information about script requirements.\n\nTo configure a virtual machine object to start scripts, send a PATCH request to [`/vmware/vm/{id}`](#operation/updateVm). Since this is a PATCH request, only the elements of the virtual machine object that are modified or added should be included in the request body. All three script members are shown in the request body in this model, but all are optional.\n\n```bash\ncurl -X PATCH \\\n -d '{\n      \"preBackupScript\": {\n        \"scriptPath\": \"$pre_script_path\",\n        \"timeoutMs\": 10000,\n        \"failureHandling\": \"abort\"\n      },\n      \"postSnapScript\": {\n        \"scriptPath\": \"$postsnap_script_path\",\n        \"timeoutMs\": 10000,\n        \"failureHandling\": \"abort\"\n      },\n      \"postBackupScript\": {\n        \"scriptPath\": \"$postbackup_script_path\",\n        \"timeoutMs\": 10000,\n        \"failureHandling\": \"abort\"\n      }\n    }' \\\n  \"https://$cluster_address/api/v1/vmware/vm/$vm_id\"\n```\n\nThe Rubrik REST API server sends an HTTP 200 response that includes the modified or added members in the response body.\n\n#### Manually starting a virtual machine script\n\nFor testing or to run a script before running a backup, manually trigger the script by sending a POST request to [`/vmware/vm/{id}/guest_script/run`](#operation/runGuestOsScript). To manually start a script, the script must first be a part of the configuration of the virtual machine object. Use the value of the `phase` member to identify the script, as follows:\n* Use `PreBackup` for the script identified by the `preBackupScript` member.\n* Use `PostSnap` for the script identified by the `postSnapScript` member.\n* Use `PostBackup` for the script identified by the `postBackupScript` member.\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"phase\": \"PreBackup\" }' \\\n  \"https://$cluster_address/api/v1/vmware/vm/$vm_id/guest_script/run\"\n```\nThe Rubrik REST API server responds with an HTTP 204 response when the script finishes with a 0 exit code.\n\n\n### Excluding a VMDK file\n\nThe Rubrik cluster can be configured to ignore some of the VMDK files of a virtual machine while protecting the other VMDK files of that virtual machine. To exclude a VMDK file, send a GET request to [`/vmware/vm/virtual_disk/{id}`](#operation/getVirtualDisk) using the `$disk_id` of the VMDK file.\n\nTo get the `$disk_id` values, send a GET request to [`/vmware/vm/{id}`](#operation/getVm). The response body has the `disk_id` values for the virtual machine in the `virtualDiskIds` array.\n\nAfter identifying the `$disk_id` for a VMDK file, obtain the current state of the VMDK file.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/vmware/vm/virtual_disk/$disk_id\"\n```\nThe Rubrik REST API server responds with the value of `excludeFromSnapshots`.\n\n```bash\n{\n  \"id\": \"$disk_id\",\n  \"excludeFromSnapshots\": false\n}\n```\nWhen the value is `false` the Rubrik cluster is not configured to exclude the VMDK file. Change this value to `true` to instruct the Rubrik cluster to exclude the VMDK file from all subsequent snapshots of the virtual machine.\n\nSend a PATCH request to [`/vmware/vm/virtual_disk/{id}`](#operation/updateVirtualDisk) to change the value of `excludeFromSnapshots` to `true` and exclude the VMDK file.\n\n```bash\ncurl -X PATCH \\\n  -d '{\n    \"excludeFromSnapshots\": true }' \\\n  \"https://$cluster_address/api/v1/vmware/vm/virtual_disk/$disk_id\"\n```\n\nThe Rubrik REST API server responds with the updated `excludeFromSnapshots` value for the VMDK file.\n\n```bash\n{\n  \"id\": \"$disk_id\",\n  \"excludeFromSnapshots\": true\n}\n```\n\n### Assigning a virtual machine to an SLA Domain\nTo protect a virtual machine through the rules and policies of an SLA Domain send a PATCH request to [`/vmware/vm/{id}`](#operation/updateVm) with the value of `configuredSlaDomainId` set to the `$sla_domain_id`.\n\n**Note:** [Retrieving SLA Domains](#section/SLA-Domains/Retrieving-SLA-Domains) describes how to retrieve the SLA Domain objects on a Rubrik cluster.\n\n```bash\ncurl -X PATCH -d \\\n  '{\n    \"configuredSlaDomainId\": \"$sla_domain_id\"\n  }' \\\n  \"https://$cluster_address/api/v1/vmware/vm/$vm_id\"\n```\nThe Rubrik REST API server responds with confirmation of the assignment.\n\n```bash\n{\n  \"id\": \"$vm_id\",\n  \"configuredSlaDomainId\": \"$sla_domain_id\"\n}\n```\n### Getting the configuration used to force a full snapshot of a virtual machine\n\nTo retrieve the configuration of a virtual machine that is used to force a full\nsnapshot of the virtual machine, send a GET request to\n[`/vmware/vm/{id}/request/force_full_snapshot`](#operation/getVmForceFullSpec).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/vmware/vm/{id}/request/force_full_snapshot\"\n```\n\nThe Rubrik REST API server responds with the force full snapshot object\nwhich contains the latest configuration of the virtual machine.\n\n```bash\n{\n  \"vmId\": \"$vm_id\",\n  \"virtualDiskInfos\": [\n    {\n      \"virtualDiskId\": \"$disk_id\",\n      \"shouldDedupe\": false\n    },\n    {\n      \"virtualDiskId\": \"$disk_id\",\n      \"shouldDedupe\": true\n    }\n  ]\n}\n```\n### Requesting a forced full snapshot for a virtual machine\n\nTo force a full snapshot of a virtual machine, send a POST request to\n[`/vmware/vm/{id}/request/force_full_snapshot`](#operation/requestVmForceFullSnapshot).\n\n```bash\ncurl -X POST \"https://$cluster_address/api/v1/vmware/vm/{id}/request/force_full_snapshot\"\n```\n\nThe Rubrik REST API server persists the configuration for forcing a\nfull snapshot until the next backup job, which takes a full snapshot\nand clears the configuration.\n\n```bash\n{\n  \"vmId\": \"$vm_id\",\n  \"virtualDiskInfos\": [\n    {\n      \"virtualDiskId\": \"$disk_id\",\n      \"shouldDedupe\": false\n    },\n    {\n      \"virtualDiskId\": \"$disk_id\",\n      \"shouldDedupe\": true\n    }\n  ]\n}\n```\n## Snapshot management\n\nManaging snapshots includes the following possible actions:\n* Retrieving snapshot information\n* Retrieving snapshot information for multiple virtual machines\n* Retrieving snapshot details\n* Retrieving missed snapshot information\n* Creating on-demand snapshots\n* Expiring individual snapshots\n* Expiring all snapshots for a virtual machine\n\n### Retrieving snapshot information\n\nTo retrieve a list of the snapshots for a virtual machine, send a GET request to [`/vmware/vm/{id}/snapshot`](#operation/querySnapshot).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/vmware/vm/$vm_id/snapshot\"\n```\nThe Rubrik REST API server responds with a `ListResponse` object.\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"date\": \"$timestamp0\",\n      \"indexState\": 0,\n      \"cloudState\": 0,\n      \"vmName\": \"$vm_name\",\n      \"replicationLocationIds\": [],\n      \"id\": \"$snapshot_id0\",\n      \"consistencyLevel\": \"$consistency_level0\",\n      \"archivalLocationIds\": [],\n      \"isOnDemandSnapshot\": false\n    },\n    {\n      \"date\": \"$timestamp1\",\n      \"indexState\": 0,\n      \"cloudState\": 0,\n      \"vmName\": \"$vm_name\",\n      \"replicationLocationIds\": [],\n      \"id\": \"$snapshot_id1\",\n      \"consistencyLevel\": \"$consistency_level1\",\n      \"archivalLocationIds\": [],\n      \"isOnDemandSnapshot\": true\n    }\n ],\n \"total\": 2\n}\n```\nEach member of the data array includes the `id` of a snapshot. Use this value (`$snapshot_id`) to perform tasks with the snapshot, such as:\n* Browsing for data in the snapshot\n* Downloading data from the snapshot\n* Restoring data from the snapshot\n* Exporting data from the snapshot\n* Mounting a virtual machine from the snapshot\n\n### Retrieving snapshot information for a batch of virtual machines\n\nTo retrieve lists of snapshots for a batch of virtual machines, send a POST request to [`/vmware/vm/snapshots`](#operation/querySnapshotsForVms).\nThis reuqest taks a list of virtual mahine IDs.\n\n```bash\ncurl -X POST \\\n  -d '{\n     \"vm_ids\": [\"vmId_1\", \"vmId_2\"]\n     }'\\\n      \"https://$cluster_address/api/v1/vmware/vm/snapshots\"\n```\n\nThe Rubrik REST API server responds with a `BatchVmSnapshotSummaries`\nobject.\n\n```bash\n{\n  \"responses\":\n  [\n    {\n      \"vmId\": \"vmId_1\",\n      \"VmSnapshotSummaries\":\n      [\n        {\n          \"date\": \"$timestamp0\",\n          \"indexState\": 0,\n          \"cloudState\": 0,\n          \"vmName\": \"$vm_name\",\n          \"replicationLocationIds\": [],\n          \"id\": \"$snapshot_id0\",\n          \"consistencyLevel\": \"$consistency_level0\",\n          \"archivalLocationIds\": [],\n          \"isOnDemandSnapshot\": false\n        }\n      ]\n    },\n    {\n      \"vmId\": \"vmId_2\",\n      \"VmSnapshotSummaries\":\n      [\n        {\n          \"date\": \"$timestamp0\",\n          \"indexState\": 0,\n          \"cloudState\": 0,\n          \"vmName\": \"$vm_name\",\n          \"replicationLocationIds\": [],\n          \"id\": \"$snapshot_id0\",\n          \"consistencyLevel\": \"$consistency_level0\",\n          \"archivalLocationIds\": [],\n          \"isOnDemandSnapshot\": false\n        }\n      ]\n    }\n  ]\n}\n```\n\n### Retrieving snapshot details\n\nTo retrieve details for a specified snapshot send a GET request to [`/vmware/vm/snapshot/{id}`](#operation/getSnapshot).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/vmware/vm/snapshot/$snapshot_id\"\n```\nThe Rubrik REST API server responds with the details of the specified snapshot.\n\n**Note:** To shorten the example, the response uses ellipsis to replace some members.\n\n```bash\n{\n  \"date\": \"$timestamp\",\n  \"indexState\": 0,\n  \"virtualMachine\": {\n   ...\n  },\n  \"vmName\": \"$vm_name\",\n  \"isCorrupt\": false,\n  \"replicationLocationIds\": [],\n  \"archivalLocationIds\": [],\n  \"snapshotDiskIds\": [\n    \"$vmdk_id\"\n  ],\n  \"isOnDemandSnapshot\": false,\n  \"cloudState\": 0,\n  \"id\": \"$snapshot_id\",\n  \"consistencyLevel\": \"1\",\n  \"config\": \"[]\"\n}\n```\n\n### Retrieving missed snapshot information\n\nThe Rubrik cluster stores information for missed snapshots. *Missed snapshots* are snapshot tasks that are not completed as required by the rules and policies of an SLA Domain.  Retrieve missed snapshot information for a virtual machine by sending  a GET request to [`/vmware/vm/{id}/missed_snapshot`](#operation/missedSnapshots).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/vmware/vm/$vm_id/missed_snapshot\"\n```\nThe Rubrik REST API server responds with a `ListResponse` object.\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"archivalLocationType\": [\n        \"missed\"\n      ],\n      \"missedSnapshotTime\": \"$timestamp0\"\n    },\n    {\n      \"archivalLocationType\": [\n        \"missed\"\n      ],\n      \"missedSnapshotTime\": \"$timestamp1\"\n    }\n  ],\n  \"total\": 2\n}\n```\n\n### Creating on-demand snapshots\n\nOn-demand snapshots can be created for both protected and unprotected virtual machines. To create an on-demand snapshot of a virtual machine send a POST request to [`/vmware/vm/{id}/snapshot`](#operation/createOnDemandBackup).\n\n```bash\ncurl -X POST \\\n  \"https://$cluster_address/api/v1/vmware/vm/$vm_id/snapshot\"\n```\nThe Rubrik REST API server initiates the asynchronous snapshot task and responds with a task object.\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"status\": \"ACQUIRING\",\n  \"progress\": 0,\n  \"startTime\": \"$timestamp\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vmware/vm/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\nUsing the information provided in the task object, send a GET request to poll the task status. When the value of `status` in the task object is `SUCCEEDED`, the on-demand snapshot finished successfully.\n\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/vmware/vm/request/$request_id\"\n```\nThe Rubrik REST API server sends a task object with `status=\"SUCCEEDED\"`.  The task object for a successful snapshot includes the URI for the snapshot: `https://$cluster_address/api/v1/vmware/vm/snapshot/$snapshot_id`.\n\n```bash\n{\n  \"id\":\"$request_id\",\n  \"status\":\"SUCCEEDED\",\n  \"startTime\":\"$timestamp0\",\n  \"endTime\":\"$timestamp1\",\n  \"links\":[\n    {\n      \"href\":\"https://$cluster_address/api/v1/vmware/vm/snapshot/$snapshot_id\",\n      \"rel\":\"result\"\n    },\n   {\n      \"href\":\"https://$cluster_address/api/v1/vmware/vm/request/$request_id\",\n      \"rel\":\"self\"\n   }\n  ]\n}\n```\n\n### Expiring individual snapshots\n\nOn-demand snapshots and snapshots for unprotected virtual machines can be expired by using the snapshot `id`. To expire an individual snapshot, send a DELETE request to [`/vmware/vm/snapshot/{id}`](#operation/deleteVmwareSnapshot). Include the query parameter `location` to specify whether to expire all copies of the snapshot, or only the local copy. Use `location=local` to expire only the copy of the snapshot on the specified Rubrik cluster. Use `location=all` to expire all copies of the snapshot, including replicas and archival copies.\n\n```bash\ncurl -X DELETE \\\n  \"https://$cluster_address/api/v1/vmware/vm/snapshot/$snapshot_id?location=$snapshot_location\"\n```\nThe Rubrik REST API server expires the specified snapshot and responds with HTTP response code 204. This indicates the request succeeded and the response body is empty.\n\nThe Rubrik REST API server responds with HTTP response code 422 'Unprocessable Entity', when the specified snapshot is not one of the following:\n* On-demand snapshot\n* Snapshot for an unprotected virtual machine\n\n### Expiring all snapshots for a virtual machine\n\nAll snapshots for an unprotected virtual machine can be expired by using the virtual machine `id`. To expire all snapshots for an unprotected virtual machine, send a DELETE request to [`/vmware/vm/{id}/snapshot`](#operation/deleteVmwareSnapshots). The Rubrik cluster expires all snapshots, replicas, and archival snapshots for the specified virtual machine.\n\n```bash\ncurl -X DELETE \\\n  \"https://$cluster_address/api/v1/vmware/vm/$vm_id/snapshot\"\n```\nThe Rubrik REST API server expires all snapshots for the specified virtual machine in all locations and responds with HTTP response code 204. This indicates the request succeeded and the response body is empty.\n\nThe Rubrik REST API server responds with HTTP response code 422 'Unprocessable Entity', when the specified virtual machine is protected through an SLA Domain assignment.\n\n\n\n\n## Data recovery\nTo recover a file or folder from a snapshot, retrieve the `id` of the file or folder using either search or browse. Then use the `id` with one of the recovery methods:\n* Download the file or folder\n* Restore the file or folder to the source location\n* Export the file or folder to another host\n\n### Searching for data in snapshots\n\nSearch for files and folders across all indexed snapshots of a virtual machine by using the virtual machine `id`. Send a GET request to [`/vmware/vm/{id}/search`](#operation/searchVm) with the `path` query parameter. Use a path segment string or a name segment string for the value of `path`.\n\n**IMPORTANT:** The snapshot used in this task must be indexed. Indexing makes the file system structure of the data available to the Rubrik cluster. To determine whether a snapshot has been successfully indexed, send a GET request to [`/vmware/vm/snapshot/{id}`](#operation/getSnapshot) as described in the 'Retrieving snapshot information' section of [Snapshot management](#section/Virtual-machines/Snapshot-management). Look at the value of `indexState`. A value of `1` means the snapshot has been indexed. A value of `0` means the snapshot has not been indexed.\n\nThe Rubrik REST API server uses the rules described in the following table when matching the value of `path` with folders and files in the indexed snapshots.\n| Type | Rule | Description |\n| ---- | ---- | ----------- |\n| Path delimiter | Forward slashes and backslashes are equally recognized as path delimiters. | In the value of path, `/` matches both `/` and `\\`, and `\\` matches both `/` and `\\`. |\n| Path segments | Path segments match all files and folders that begin with the same path segment. | For example, '/abc/x' matches files and folders at '/abc/' or '\\abc\\\\' with a filename or folder name that starts with 'x'. |\n| Name segments | Name segments match all files and folders that begin with the same name segment. | For example, 'xyz' matches files and folders with a filename or folder name that starts with 'xyz', in all path locations. |\n| Characters | Any character that the guest operating system accepts in a file path can be used.  | For example, the greater than symbol `>` and the lesser than symbol `<` are not allowed. |\n| Windows drive | To specify a full path on a Windows guest follow the Windows file system requirement. | For example, to specify the 'temp' folder on the 'D' drive of a Windows virtual machine, use: `D:\\temp`. |\n\n**Example:** Searching for files and folders\n\nSearch for all files and folders in '/usr/local/' with a name that starts with the later 'g'.\n\nSend a GET request to [`/vmware/vm/{id}/search`](#operation/searchVm) with `path=/usr/local/g`.\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/vmware/vm/$vm_id/search?path=%2Fusr%2Flocal%2Fg\"\n```\nThe Rubrik REST API server responds with a `ListResponse` object. The data array has two members, a directory at: `/usr/local/games` and a file at: `/usr/local/gamehints`.\n\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"path\": \"/usr/local/games\",\n      \"filename\": \"games\",\n      \"fileVersions\": [\n        {\n          \"lastModified\": \"$timestamp0\",\n          \"size\": 4096,\n          \"snapshotId\": \"$snapshot_id0\",\n          \"fileMode\": \"directory\",\n          \"source\": \"cloud\"\n        }\n      ]\n    },\n    {\n    \"path\": \"/usr/local/gamehints\",\n    \"filename\": \"gamehints\",\n    \"fileVersions\": [\n      {\n        \"lastModified\": \"$timestamp1\",\n        \"size\": 14480,\n        \"snapshotId\": \"$snapshot_id1\",\n        \"fileMode\": \"file\",\n        \"source\": \"cloud\"\n      },\n      {\n        \"lastModified\": \"$timestamp2\",\n        \"size\": 14480,\n        \"snapshotId\": \"$snapshot_id2\",\n        \"fileMode\": \"file\",\n        \"source\": \"cloud\"\n      }\n    ]\n   }\n  ],\n  \"total\": 2\n}\n```\n\n### Browsing for data in snapshots\n\nBrowse for files and folders with an indexed snapshot by using the snapshot `id`. Send a GET request to  [`/vmware/vm/snapshot/{id}/browse`](#operation/browseVmwareSnapshot) with the `path` query parameter.  Use a path segment string for the value of `path`. The response provides a ListResponse object that includes all of the files and folders in the directory that is specified by the value of `path`.\n\n**IMPORTANT:** The snapshot used in this task must be indexed. Indexing makes the file system structure of the data available to the Rubrik cluster. To determine whether a snapshot has been successfully indexed, send a GET request to [`/vmware/vm/snapshot/{id}`](#operation/getSnapshot) as described in the 'Retrieving snapshot information' section of [Snapshot management](#section/Virtual-machines/Snapshot-management). Look at the value of `indexState`. A value of `1` means the snapshot has been indexed. A value of `0` means the snapshot has not been indexed.\n\nThe Rubrik REST API server uses the rules described in the following table when matching the value of `path` with the path in the specified snapshot.\n| Type | Rule | Description |\n| ---- | ---- | ----------- |\n| Path delimiter | Forward slashes and backslashes are equally recognized as path delimiters. | In the value of path, `/` matches both `/` and `\\`, and `\\` matches both `/` and `\\`. |\n| Path description | The path description must end in a directory name, without an ending slash. | For example, '/abc/x' returns all files and folders in the directory at '/abc/x', but '/abc/x/' returns an HTTP 422 response. |\n| Characters | Any character that the guest operating system accepts in a file path can be used.  | For example, the greater than symbol `>` and the lesser than symbol `<` are not allowed. |\n| Windows drive | To specify a full path on a Windows guest follow the Windows file system requirement. | For example, to specify the 'temp' folder on the 'D' drive of a Windows virtual machine, use: `D:\\temp`. |\n\n**Example:** Browsing for files and folders\n\nRetrieve a ListResponse object with all of the files and folders in '/home'.\n\nSend a GET request to  [`/vmware/vm/snapshot/{id}/browse`](#operation/browseVmwareSnapshot) with `path=/home`.\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/vmware/vm/snapshot/$snapshot_id/browse?path=%2Fhome&offset=0\"\n```\nThe Rubrik REST API server responds with a `ListResponse` object. The data array has two members, the directory: `ubuntu` and the file: `ubuntu.tar`.\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"filename\": \"ubuntu\",\n      \"path\": \"ubuntu\",\n      \"lastModified\": \"$timestamp0\",\n      \"size\": 31892819777,\n      \"fileMode\": \"directory\",\n      \"statusMessage\": \"\"\n    },\n    {\n      \"filename\": \"ubuntu.tar\",\n      \"path\": \"ubuntu.tar\",\n      \"lastModified\": \"$timestamp1\",\n      \"size\": 4746675383,\n      \"fileMode\": \"file\",\n      \"statusMessage\": \"\"\n    }\n  ],\n  \"total\": 2\n}\n```\n### Downloading data from a snapshot\n\nData can be retrieved from a snapshot by creating a download link for an individual file and folder from the snapshot. To have the Rubrik cluster create a download link, send a POST request to [`/vmware/vm/snapshot/{id}/download`](#operation/createDownloadFileJob). Include in the request body the string/value pair: `\"path\":\"$path\"`, where `$path` is the full path to the file or folder. When `$path` refers to a folder, the Rubrik cluster creates a ZIP file of the folder and all that it contains.\n\nThe basic download work flow is:\n1. Send a POST request to start the asynchronous download task.\n2. Send a GET request to poll the task status.\n3. When the task succeeds, use the download link provided in the response body to retrieve the file or folder.\n\n**IMPORTANT:** The snapshot used in this task must be indexed. Indexing makes the file system structure of the data available to the Rubrik cluster. To determine whether a snapshot has been successfully indexed, send a GET request to [`/vmware/vm/snapshot/{id}`](#operation/getSnapshot) as described in the 'Retrieving snapshot information' section of [Snapshot management](#section/Virtual-machines/Snapshot-management). Look at the value of `indexState`. A value of `1` means the snapshot has been indexed. A value of `0` means the snapshot has not been indexed.\n\n```bash\ncurl -X POST -d \\\n'{\n   \"path\": \"$full_source_path\"\n }' \\\n 'https://$cluster_address/api/v1/vmware/vm/snapshot/$snapshot_id/download_file'\n```\nThe Rubrik REST API server initiates the asynchronous request task and responds with a task object.\n\n```bash\n{\n  \"id\": \"$download_task_id\",\n  \"status\": \"QUEUED\",\n  \"progress\": 0,\n  \"startTime\": \"$timestamp\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vmware/vcenter/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\n### Restoring data from a snapshot\n\nTo restore a file or folder to the source virtual machine send a POST request to [`/vmware/vm/snapshot/{id}/restore_file`](#operation/createRestoreFileJob). With the request, include a request body. The following table describes the members of the request body.\n\n| Name | Description |\n| ---- | ----------- |\n| `path` | Full path of the file or folder. |\n| `domainName` | Authentication domain for the credentials being used to authenticate and authorize the action. |\n| `username` | Username of account to authenticate and authorize the action. |\n| `password` | Password for the account to authenticate and authorize the action. |\n| `restorePath` | Full path location for the restore of the file or folder. The action can create a directory at the end of the specified path, but cannot create directories that are specified within the path. |\n| `shouldUseAgent` | Instruct the Rubrik cluster to restore the file using Rubrik Backup Service running on virtual machine. Use `true` to restore using RBS and `false` to restore using `VMware tools`. |\n| `shouldSaveCredentials` | Instruct the Rubrik cluster to save the credentials included in the request. Use `true` to save the credentials and `false` to use the credentials only for the current request. |\n| `shouldRestoreXAttrs` | Instruct the Rubrik cluster to restore the\nextended attributes of all files and folders included in the `path`.\nWhen restoring to a Linux host, extended attributes are restored.\nWhen restoring to a Windows host, alternate data streams (ADS) are\nrestored. Use `true` to restore this metadata and `false` otherwise. |\n\n```bash\ncurl -X POST -d \\\n'{\n   \"path\": \"$full_source_path\",\n   \"domainName\": \"$auth_domain\",\n   \"username\": \"$username\",\n   \"password\": \"$password\",\n   \"restorePath\": \"$full_restore_path\",\n   \"shouldUseAgent\" : true,\n   \"shouldSaveCredentials\": true,\n   \"shouldRestoreXAttrs\": true\n }' \\\n \"https://$cluster_address/api/v1/vmware/vm/snapshot/$snapshot_id/restore_file\"\n```\n\nThe Rubrik REST API server initiates the asynchronous request task and responds with a task object.\n\n```bash\n{\n  \"id\": \"$restore_task_id\",\n  \"status\": \"QUEUED\",\n  \"progress\": 0,\n  \"startTime\": \"$timestamp\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vmware/vcenter/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\n\n## Snapshot mount operations\nSnapshot mount operations include the following possible actions:\n* Retrieving a snapshot from an archival location\n* Mounting a snapshot by using Instant Recovery\n* Mounting a snapshot by using Live Mount\n* Mounting a snapshot for a batch of virtual machines using Live Mount\n* Exporting a snapshot\n* Downloading a snapshot from an archival location and then exporting it\n* Changing the properties of a mounted virtual machine\n* Removing a virtual machine mount\n* Migrating a datastore for a virtual machine from Live Mount or Instant Recovery\n\n### Retrieving a snapshot from an archival location\n\nTo work with a snapshot that is stored only at an archival location, first download the snapshot to the Rubrik cluster by sending a POST request to [`/vmware/vm/snapshot/{id}/download`](#operation/createDownloadSnapshotFromCloud).\n\n```bash\ncurl -X POST \\\n  \"https://$cluster_address/api/v1/vmware/vm/snapshot/$snapshot_id/download\"\n```\nThe Rubrik REST API server initiates the asynchronous request task and responds with a task object.\n\n```bash\n{\n  \"id\": \"$snap_download_task_id\",\n  \"status\": \"QUEUED\",\n  \"progress\": 0,\n  \"startTime\": \"$timestamp\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vmware/vcenter/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\n### Mounting a snapshot by using Instant Recovery\n\nReplace a source virtual machine from a snapshot by using the Instant Recovery feature. To use Instant Recovery, send a POST request to [`/vmware/vm/snapshot/{id}/instant_recover`](#operation/createInstantRecovery). This request requires a snapshot `id` and can optionally include the parameters that are described in the following table.\n\n| Name | Description |\n| ---- | ----------- |\n| `hostId` | The `id` of an ESXi hypervisor. When not specified, the Rubrik cluster uses the original hypervisor. |\n| `vmName` | Assigns a specified name to the virtual machine. |\n| `removeNetworkDevices` | Determines whether the virtual machine has network devices. Use `true` to remove network devices from the virtual machine. Use `false` to keep the existing network devices. |\n\n```bash\ncurl -X POST -d \\\n  '{\n    \"vmName\": \"$vm_name\",\n    \"hostId\": \"$esxi_id\",\n    \"removeNetworkDevices\": true\n   }' \\\n   \"https://$cluster_address/api/v1/vmware/vm/snapshot/$snapshot_id/instant_recover\"\n```\nThe Rubrik REST API server initiates the asynchronous request task and responds with a task object.\n\n```bash\n{\n  \"id\": \"$instant_recovery_task_id\",\n  \"status\": \"QUEUED\",\n  \"progress\": 0,\n  \"startTime\": \"$timestamp\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vmware/vcenter/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\n### Mounting a snapshot by using Live Mount\n\nMount a new virtual machine from a snapshot by using the Live Mount feature. To use Live Mount, send a POST request to [`/vmware/vm/snapshot/{id}/mount`](#operation/createMountV1). This request requires a snapshot `id` and can optionally include the parameters that are described in the following table.\n\n| Name | Description |\n| ---- | ----------- |\n| `hostId` | The `id` of an ESXi hypervisor. When not specified, the Rubrik cluster uses the original hypervisor. |\n| `vmName` | Assigns a specified name to the virtual machine. |\n| `dataStoreName` | Obsolete paraemeter. |\n| `disableNetwork` | Determines whether the virtual machine has access to the network. Use `true` to Mount the snapshot with network access disabled. Use `false` to allow the virtual machine to access the network. |\n| `removeNetworkDevices` | Determines whether the virtual machine has network devices. Use `true` to remove network devices from the virtual machine. Use `false` to keep the existing network devices. |\n| `powerOn` | Determines whether the virtual machine is powered on after mounting. Use `true` to power on the virtual machine. Use `false` to leave the virtual machine powered off after mounting. |\n\n\n```bash\ncurl -X POST \\\n  -d '{\n     \"hostId\": \"$esxi_id\",\n     \"vmName\": \"$vm_name\",\n     \"dataStoreName\": \"$datastore_name\",\n     \"disableNetwork\": $network_state,\n     \"removeNetworkDevices\": $network_devices_state,\n     \"powerOn\": $power_state\n   }'\\\n    \"https://$cluster_address/api/v1/vmware/vm/snapshot/$snapshot_id/mount\"\n```\n\nThe Rubrik REST API server initiates the asynchronous request task and responds with a task object.\n\n```bash\n{\n  \"id\": \"$live_mount_task_id\",\n  \"status\": \"QUEUED\",\n  \"progress\": 0,\n  \"startTime\": \"$timestamp\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vmware/vcenter/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\n### Mounting a snapshot for a batch of virtual machines using Live Mount\n\nMount a snapshot each for a batch of virtual machines. Send a POST request to\n[`/vmware/vm/batch_mount`](#operation/batchMountSnapshot). This request\nrequires a snapshots parameter to identify the virtual machine and the snapshot\nof the virtual machine to mount.\nThe following parameters are available to identify the snapshot: `snapshotId`,\n`snapshotBeforeDate`, and `snapshotAfterDate`. One of the parameters must be configured\nto identify the snapshot to be mounted.\n\n| Name | Required | Type | Description |\n| ---- | -------- | ---- | ----------- |\n| `vmId` | Required | String | The `id` of the virtual machine. |\n| `snapshotId` | Optional | String | The `id` of the snapshot to mount. |\n| `snapshotBeforeDate` | Optional | Date | If the snapshotId is not specified, mount the newest snapshot before the date specified for this parameter. |\n| `snapshotAfterDate` | Optional | Date | If the snapshotId and the snapshotBeforeDate are not specified, mount the oldest snapshot after the date specified for this parameter. |\n| `config` | Required | Object | [Properties of the /vmware/vm/snapshot/{id}/mount endpoint.](#mounting-a-snapshot-by-using-live-mount) |\n\n```bash\ncurl -X POST \\\n  -d '{\n     \"snapshots\": [\n       {\n         \"vmId\": \"$vm_id\",\n         \"snapshotBeforeDate\": \"$timestamp\",\n         \"config\": {\n           \"hostId\": \"$esxi_id\",\n           \"vmName\": \"$vm_name\",\n           \"dataStoreName\": \"$datastore_name\",\n           \"disableNetwork\": $network_state,\n           \"removeNetworkDevices\": $network_devices_state,\n           \"powerOn\": $power_state\n         }\n       }\n     ]\n     }'\\\n      \"https://$cluster_address/api/v1/vmware/vm/batch_mount\"\n```\n\nThe Rubrik REST API server initiates a batch of mount jobs and\nresonds with objects tracking the job status.\n\n```bash\n{\n  \"responses\": [\n    {\n      \"id\": \"$live_mount_task_id\",\n      \"status\": \"QUEUED\",\n      \"progress\": 0,\n      \"startTime\": \"$timestamp\",\n      \"links\": [\n        {\n          \"href\": \"https://$cluster_address/api/v1/vmware/request/$request_id\",\n          \"rel\": \"self\"\n        }\n      ]\n    }\n  ]\n}\n```\n### Retrieving the ID of the mount\n\nAfter a mount task successfully completes, the `id` of the mount object can be retrieved by sending a GET request to [`/vmware/vm/request/{id}`](#operation/getAsyncRequestStatus) and using the `$request_id` value from the original request object for the Live Mount.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/vmware/vm/request/$request_id\"\n```\nThe Rubrik REST API server responds with a request object that includes the `id` of the mount object.\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vmware/vm/snapshot/mount/$mount_id\",\n      \"rel\": \"result\"\n    },\n    {\n      \"href\": \"https://$cluster_address/api/v1/vmware/vm/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"status\": \"SUCCEEDED\"\n}\n```\n### Retrieving active mounts\n\nTo retrieve a list of all of the active mounts for a Rubrik cluster, send a GET request to [`/vmware/vm/snapshot/mount`](#operation/queryMountV1).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/vmware/vm/snapshot/mount\"\n```\nThe Rubrik REST API server responds with a ListResponse object.\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"id\": \"$mount_id\",\n      \"snapshotDate\": \"$snapshot_timestamp\",\n      \"vmId\": \"$source_vm_id\",\n      \"mountedVmId\": \"$mounted_vm_id\",\n      \"hostId\": \"$esxi_id\",\n      \"isReady\": true\n    }\n  ],\n  \"total\": 1\n}\n```\n### Retrieving the details for a mount\n\nTo retrieve details about a specific mount, send a GET request to [`/vmware/vm/snapshot/mount/{id}`](#operation/getMountV1).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/vmware/vm/snapshot/mount/$mount_id\"\n```\nThe Rubrik REST API server responds with the details.\n\n```bash\n{\n  \"snapshotDate\": \"$timestamp\",\n  \"vmId\": \"$source_vm_id\",\n  \"isReady\": true,\n  \"hostId\": \"$esxi_id\",\n  \"id\": \"$mount_id\",\n  \"mountedVmId\": \"$mounted_vm_id\"\n}\n```\n\n### Exporting a snapshot\n\nTo export a snapshot send a POST request to\n[`/vmware/vm/snapshot/{id}/export`](#operation/createExportV1). This request\nrequires a snapshot `id` and the parameters that are described in the\nfollowing table.\n\n| Name | Description |\n| ---- | ----------- |\n| `datastoreId` | The `id` of a datastore for the specified ESXi hypervisor. |\n| `vmName` | Assigns a specified name to the virtual machine. |\n| `hostId` | The `id` of an ESXi hypervisor. |\n| `disableNetwork` | Determines whether the virtual machine has access to the network. Use `true` to Mount the snapshot with network access disabled. Use `false` to allow the virtual machine to access the network. |\n| `removeNetworkDevices` | Determines whether the virtual machine has network devices. Use `true` to remove network devices from the virtual machine. Use `false` to keep the existing network devices. |\n| `powerOn` | Determines whether the virtual machine is powered on after mounting. Use `true` to power on the virtual machine. Use `false` to leave the virtual machine powered off after mounting. |\n| `unregisterVm` | Determines whether to add the exported virtual machine to the vCenter Server inventory. Use `true` to remove the exported virtual machine from the associated vCenter Server inventory. Use `false` to add the exported virtual machine to the associated vCenter Server inventory. |\n\n\n```bash\ncurl -X  -d \\\n '{\n   \"datastoreId\": \"string\",\n   \"vmName\": \"string\",\n   \"hostId\": \"string\",\n   \"disableNetwork\": true,\n   \"removeNetworkDevices\": true,\n   \"powerOn\": true,\n   \"unregisterVm\": true\n }' \\\n \"https://$cluster_address/api/v1/vmware/vm/snapshot/$snapshot_id/export\"\n```\n\nThe Rubrik REST API server initiates the asynchronous request task and responds with a task object.\n\n```bash\n{\n  \"id\": \"$export_task_id\",\n  \"status\": \"QUEUED\",\n  \"progress\": 0,\n  \"startTime\": \"$timestamp\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vmware/vcenter/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\n### Exporting a snapshot from an archival location\n\nTo export a snapshot from an archival location, send a POST\nrequest to [`/vmware/vm/snapshot/{id}/export_with_download`]\n(#operation/createExportWithDownloadFromCloudV1). This request requries\na snapshot `id` and the parameters that are described in the following table.\n\n| Name | Description |\n| ---- | ----------- |\n| `datastoreId` | `id` of a datastore for the specified ESXi hypervisor. |\n| `vmName` | Assigns a name to the virtual machine. |\n| `hostId` | `id` of an ESXi hypervisor. |\n| `disableNetwork` | Determines if the virtual machine has access to the\n                     network. `true` mounts the snapshot with network\n                     access disabled. `false` allows the virtual machine\n                     to access the network. |\n| `removeNetworkDevices` | Determines if the virtual machine includes network\n                           devices. `true` removes network devices from\n                           the virtual machine.`false` keeps the existing\n                           network devices. |\n| `powerOn` | Determines if the virtual machine is powered on after\n              mounting. `true` powers on the virtual machine. `false`\n              leaves the virtual machine powered off after mounting. |\n| `unregisterVm` | Determines if the exported virtual machine is added to\n                   the vCenter Server inventory. `true` removes the exported\n                   virtual machine from the associated vCenter Server\n                   inventory. `false` adds the exported virtual machine\n                   to the associated vCenter Server inventory. |\n\n```bash\ncurl -X  -d \\\n '{\n   \"datastoreId\": \"string\",\n   \"vmName\": \"string\",\n   \"hostId\": \"string\",\n   \"disableNetwork\": true,\n   \"removeNetworkDevices\": true,\n   \"powerOn\": true,\n   \"unregisterVm\": true\n }' \\\n \"https://$cluster_address/api/v1/vmware/vm/snapshot/$id/export_with_download\"\n```\n\nThe Rubrik REST API server initiates the asynchronous request task and responds\nwith a task object.\n\n```bash\n{\n  \"id\": \"$download_task_id\",\n  \"status\": \"QUEUED\",\n  \"progress\": 0,\n  \"startTime\": \"$timestamp\",\n  \"links\": [\n    {\n      \"href\":\n         \"https://$cluster_address/api/v1/vmware/vcenter/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\n### Changing power status of a mounted virtual machine\n\nTo change the power status of a mounted virtual machine send a PATCH request to [`/vmware/vm/snapshot/mount/{id}`](#operation/updateMount). Include in the request body, the member `\"powerStatus\": $power_state`. For `$power_state`, use `true` to power on the virtual machine, or use `false` to power off the virtual machine.\n\n```bash\ncurl -X PATCH \\\n  -d '{\n    \"powerStatus\": $power_state }' \\\n  \"https://$cluster_address/api/v1/vmware/vm/snapshot/mount/$mount_id\"\n```\n\nThe Rubrik REST API server responds with the mount details.\n\n```bash\n{\n  \"powerStatus\": \"$power_state\",\n  \"id\": \"$mount_id\",\n  \"snapshotDate\": \"$timestamp\",\n  \"vmId\": \"$vm_id\",\n  \"mountedVmId\": \"$mounted_vm_id\",\n  \"hostId\": \"$esxi_id\",\n  \"isReady\": true,\n  \"mountRequestId\": \"$mount_request_id\",\n  \"unmountRequestId\": \"$unmount_request_id\"\n}\n```\n\n### Removing a virtual machine mount\n\nTo remove a Live Mount send a DELETE request to [`/vmware/vm/snapshot/mount/{id}`](#operation/createUnmount). To remove a mount object after live migration of the virtual machine include the query parameter `force=true`.\n\n```bash\ncurl -X DELETE \\\n  \"https://$cluster_address/api/v1/vmware/vm/snapshot/mount/$mount_id\"\n```\nThe Rubrik REST API server initiates the asynchronous request task and responds with a task object.\n\n```bash\n{\n  \"id\": \"$delete_mount_task_id\",\n  \"status\": \"QUEUED\",\n  \"progress\": 0,\n  \"startTime\": \"$timestamp\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vmware/vcenter/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\n### Get recoverable ranges for a CDP-enabled virtual machine\n\nFor a list of time ranges to which a CDP-enabled virtual machine can recover, send a GET request to [`/vmware/vm/{id}/recoverable_range`](#operation/getVmwareRecoverableRanges). The time range start and end timestamps are specified as milliseconds from epoch.\nAny point-in-time recovery operation from version 2 of the API can use the time ranges returned by this API call for any CDP-enabled virtual machine.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/vmware/$vm_id/recoverable_range\n```\n\n```bash\n{\n  \"data\": [\n    \"beginTime\": \"2018-01-01T12:34:56.789Z\",\n    \"endTime\": \"2018-01-01T12:34:56.789Z\"\n  ],\n  \"hasMore\": false,\n  \"total\": 1\n}\n```\n\n### Get missed recoverable ranges for a CDP-enabled virtual machine\n\nFor a list of time ranges to which a CDP-enabled virtual machine cannot recover to, send a GET request to [`/vmware/vm/{id}/missed_recoverable_range`](#operation/getVmwareMissedRecoverableRanges). The time range start and end timestamps are specified as milliseconds from epoch.\nAny point-in-time recovery operation from version 2 of the API can use the time ranges returned by this API call for any CDP-enabled virtual machine.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/vmware/$vm_id/missed_recoverable_range\n```\n\n```bash\n{\n  \"data\": [\n    \"beginTime\": \"2018-01-01T12:34:56.789Z\",\n    \"endTime\": \"2018-01-01T12:34:56.789Z\"\n  ],\n  \"hasMore\": false,\n  \"total\": 1\n}\n```\n\n### Migrating a datastore for a virtual machine from Live Mount or Instant Recovery\n\nSend a POST request to [`/vmware/vm/snapshot/mount/{id}/relocate`](#operation/relocateMount) to migrate a datastore for a virtual machine created from Live Mount or Instant Recovery.\n\n\n### Get compute cluster information\n\nVMware compute cluster can be found by a GET on [`/vmware/compute_cluster`](#operation/queryComputeCluster).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/vmware/compute_cluster\"\n```\n\n```bash\n{\n  \"data\": [\n    {\n      \"id\": \"compute_cluster_id\",\n      \"name\": \"compute_cluster_name\",\n      \"configuredSlaDomainId\": \"configured_sla_domain_id\",\n      \"configuredSlaDomainName\": \"configured_sla_domain_name\",\n      \"primaryClusterId\": \"primary_cluster_id\",\n      \"datacenterId\": \"datacenter_id\",\n      \"effectiveSlaDomainId\": \"effective_sla_domain_id\",\n      \"effectiveSlaDomainName\": \"effective_sla_domain_name\",\n      \"effectiveSlaSourceObjectId\": \"effective_sla_source_object_id\",\n      \"effectiveSlaSourceObjectName\": \"effective_sla_source_object_name\"\n    }\n  ],\n  \"hasMore\": false,\n  \"total\": 1\n}\n```\n\nFurther details are acquired from GET [`/vmware/compute_cluster/{id}`](#operation/getComputeCluster).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/vmware/compute_cluster/$compute_clustere_id\"\n```\n\n```bash\n{\n  \"id\": \"compute_cluster_id\",\n  \"name\": \"compute_cluster_name\",\n  \"configuredSlaDomainId\": \"configured_sla_domain_id\",\n  \"configuredSlaDomainName\": \"configured_sla_domain_name\",\n  \"primaryClusterId\": \"primary_cluster_id\",\n  \"datacenterId\": \"datacenter_id\",\n  \"effectiveSlaDomainId\": \"effective_sla_domain_id\",\n  \"effectiveSlaDomainName\": \"effective_sla_domain_name\",\n  \"effectiveSlaSourceObjectId\": \"effective_sla_source_object_id\",\n  \"effectiveSlaSourceObjectName\": \"effective_sla_source_object_name\"\n  \"moid\": \"compute_cluster_moid\",\n  \"hosts\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"configuredSlaDomainId\": \"string\",\n      \"configuredSlaDomainName\": \"string\",\n      \"primaryClusterId\": \"string\",\n      \"datacenterId\": \"string\",\n      \"computeClusterId\": \"string\",\n      \"datastores\": [\n        {\n          \"id\": \"string\",\n          \"name\": \"string\",\n          \"capacity\": 0,\n          \"dataStoreType\": \"string\",\n          \"dataCenterName\": \"string\",\n          \"isLocal\": true\n         }\n      ],\n      \"effectiveSlaDomainId\": \"string\",\n      \"effectiveSlaDomainName\": \"string\",\n      \"effectiveSlaSourceObjectId\": \"string\",\n      \"effectiveSlaSourceObjectName\": \"string\"\n    }\n  ],\n\"virtualMachines\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"configuredSlaDomainId\": \"string\",\n      \"configuredSlaDomainName\": \"string\",\n      \"primaryClusterId\": \"string\",\n      \"slaAssignment\": \"Derived\",\n      \"effectiveSlaDomainId\": \"string\",\n      \"effectiveSlaDomainName\": \"string\",\n      \"effectiveSlaSourceObjectId\": \"string\",\n      \"effectiveSlaSourceObjectName\": \"string\",\n      \"moid\": \"string\",\n      \"vcenterId\": \"string\",\n      \"hostName\": \"string\",\n      \"hostId\": \"string\",\n      \"clusterName\": \"string\",\n      \"snapshotConsistencyMandate\": \"UNKNOWN\",\n      \"powerStatus\": \"string\",\n      \"protectionDate\": \"2018-10-02T20:33:03.833Z\",\n      \"ipAddress\": \"string\",\n      \"agentStatus\": {\n        \"agentStatus\": \"string\",\n        \"disconnectReason\": \"string\"\n      },\n      \"toolsInstalled\": true,\n      \"isReplicationEnabled\": true,\n      \"folderPath\": [\n        {\n          \"id\": \"string\",\n          \"managedId\": \"string\",\n          \"name\": \"string\"\n        }\n      ],\n      \"infraPath\": [\n        {\n          \"id\": \"string\",\n          \"managedId\": \"string\",\n          \"name\": \"string\"\n        }\n      ],\n      \"vmwareToolsInstalled\": true,\n      \"isRelic\": true,\n      \"guestCredentialAuthorizationStatus\": \"string\",\n      \"cloudInstantiationSpec\": {\n        \"imageRetentionInSeconds\": 0\n      },\n      \"parentAppInfo\": {\n        \"id\": \"string\",\n        \"isProtectedThruHierarchy\": true\n      }\n    }\n  ]\n}\n```\n\nconfiguredSlaDomainId could be updated by a PATCH [`/vmware/compute_cluster/{id}`](#operation/updateComputeCluster).\n\n```bash\ncurl -X PATCH \\\n  -d '{\n    \"sla_assignable\": $sla_domain }' \\\n  \"https://$cluster_address/api/v1/vmware/compute_cluster/$compute_clustere_id\"\n```\n\n```bash\n{\n  \"id\": \"compute_cluster_id\",\n  \"name\": \"compute_cluster_name\",\n  \"configuredSlaDomainId\": \"configured_sla_domain_id\",\n  \"configuredSlaDomainName\": \"configured_sla_domain_name\",\n  \"primaryClusterId\": \"primary_cluster_id\",\n  \"datacenterId\": \"datacenter_id\",\n  \"effectiveSlaDomainId\": \"effective_sla_domain_id\",\n  \"effectiveSlaDomainName\": \"effective_sla_domain_name\",\n  \"effectiveSlaSourceObjectId\": \"effective_sla_source_object_id\",\n  \"effectiveSlaSourceObjectName\": \"effective_sla_source_object_name\"\n  \"moid\": \"compute_cluster_moid\",\n  \"hosts\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"configuredSlaDomainId\": \"string\",\n      \"configuredSlaDomainName\": \"string\",\n      \"primaryClusterId\": \"string\",\n      \"datacenterId\": \"string\",\n      \"computeClusterId\": \"string\",\n      \"datastores\": [\n        {\n          \"id\": \"string\",\n          \"name\": \"string\",\n          \"capacity\": 0,\n          \"dataStoreType\": \"string\",\n          \"dataCenterName\": \"string\",\n          \"isLocal\": true\n         }\n      ],\n      \"effectiveSlaDomainId\": \"string\",\n      \"effectiveSlaDomainName\": \"string\",\n      \"effectiveSlaSourceObjectId\": \"string\",\n      \"effectiveSlaSourceObjectName\": \"string\"\n    }\n  ],\n\"virtualMachines\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"configuredSlaDomainId\": \"string\",\n      \"configuredSlaDomainName\": \"string\",\n      \"primaryClusterId\": \"string\",\n      \"slaAssignment\": \"Derived\",\n      \"effectiveSlaDomainId\": \"string\",\n      \"effectiveSlaDomainName\": \"string\",\n      \"effectiveSlaSourceObjectId\": \"string\",\n      \"effectiveSlaSourceObjectName\": \"string\",\n      \"moid\": \"string\",\n      \"vcenterId\": \"string\",\n      \"hostName\": \"string\",\n      \"hostId\": \"string\",\n      \"clusterName\": \"string\",\n      \"snapshotConsistencyMandate\": \"UNKNOWN\",\n      \"powerStatus\": \"string\",\n      \"protectionDate\": \"2018-10-02T20:33:03.833Z\",\n      \"ipAddress\": \"string\",\n      \"agentStatus\": {\n        \"agentStatus\": \"string\",\n        \"disconnectReason\": \"string\"\n      },\n      \"toolsInstalled\": true,\n      \"isReplicationEnabled\": true,\n      \"folderPath\": [\n        {\n          \"id\": \"string\",\n          \"managedId\": \"string\",\n          \"name\": \"string\"\n        }\n      ],\n      \"infraPath\": [\n        {\n          \"id\": \"string\",\n          \"managedId\": \"string\",\n          \"name\": \"string\"\n        }\n      ],\n      \"vmwareToolsInstalled\": true,\n      \"isRelic\": true,\n      \"guestCredentialAuthorizationStatus\": \"string\",\n      \"cloudInstantiationSpec\": {\n        \"imageRetentionInSeconds\": 0\n      },\n      \"parentAppInfo\": {\n        \"id\": \"string\",\n        \"isProtectedThruHierarchy\": true\n      }\n    }\n  ]\n}\n```\n\n### Query asynchronous job status for VMware compute cluster\n\nTo query the job status details of an asynchronous job that is related to an VMware compute cluster with a GET to [`/vmware/compute_cluster/request/{id}`](#operation/getAsyncRequestStatusForComputeCluster).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/vmware/compute_cluster/request/$job_id\"\n```\n\n```bash\n{\n  \"id\": \"string\",\n  \"status\": \"string\",\n  \"progress\": 0,\n  \"startTime\": \"2018-10-02T20:33:03.933Z\",\n  \"endTime\": \"2018-10-02T20:33:03.933Z\",\n  \"nodeId\": \"string\",\n  \"error\": {\n    \"message\": \"string\"\n  },\n  \"links\": [\n    {\n      \"href\": \"string\",\n      \"rel\": \"string\"\n    }\n  ]\n}\n```\n\n### VMware IO filters operations\n\nAll IO filters on a specific VMware compute cluster can be found with a GET on [`/vmware/compute_cluster/{id}/io_filter`](#operation/getIoFilters).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/vmware/compute_cluster/$compute_cluster_id/io_filter\"\n```\n\n```bash\n{\n  \"data\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"version\": \"string\",\n      \"vendor\": \"string\",\n      \"releaseDate\": \"string\",\n      \"summary\": \"string\"\n    }\n  ],\n  \"hasMore\": false,\n  \"total\": 1\n}\n```\n\nInstall the latest version of Rubrik IO filter to a specific VMware compute cluster with a POST on [`/vmware/compute_cluster/{id}/install_io_filter`](#operation/installIoFilter).\n\n```bash\ncurl -X POST \"https://$cluster_address/api/v1/vmware/compute_cluster/$compute_cluster_id/install_io_filter\"\n```\n\n```bash\n{\n  \"id\": \"string\",\n  \"status\": \"string\",\n  \"progress\": 0,\n  \"startTime\": \"2018-10-02T20:33:03.933Z\",\n  \"endTime\": \"2018-10-02T20:33:03.933Z\",\n  \"nodeId\": \"string\",\n  \"error\": {\n    \"message\": \"string\"\n  },\n  \"links\": [\n    {\n      \"href\": \"string\",\n      \"rel\": \"string\"\n    }\n  ]\n}\n```\n\nUninstall the Rubrik IO filter from a specific VMware compute cluster with a POST on [`/vmware/compute_cluster/{id}/uninstall_io_filter`](#operation/uninstallIoFilter).\n\n```bash\ncurl -X POST \"https://$cluster_address/api/v1/vmware/compute_cluster/$compute_cluster_id/uninstall_io_filter\"\n```\n\n```bash\n{\n  \"id\": \"string\",\n  \"status\": \"string\",\n  \"progress\": 0,\n  \"startTime\": \"2018-10-02T20:33:03.933Z\",\n  \"endTime\": \"2018-10-02T20:33:03.933Z\",\n  \"nodeId\": \"string\",\n  \"error\": {\n    \"message\": \"string\"\n  },\n  \"links\": [\n    {\n      \"href\": \"string\",\n      \"rel\": \"string\"\n    }\n  ]\n}\n```\n\nUpdate the Rubrik IO filter to the latest version for a specific VMware compute cluster with a POST on [`/vmware/compute_cluster/{id}/upgrade_io_filter`](#operation/upgradeIoFilter).\n\n```bash\ncurl -X POST \"https://$cluster_address/api/v1/vmware/compute_cluster/$compute_cluster_id/upgrade_io_filter\"\n```\n\n```bash\n{\n  \"id\": \"string\",\n  \"status\": \"string\",\n  \"progress\": 0,\n  \"startTime\": \"2018-10-02T20:33:03.933Z\",\n  \"endTime\": \"2018-10-02T20:33:03.933Z\",\n  \"nodeId\": \"string\",\n  \"error\": {\n    \"message\": \"string\"\n  },\n  \"links\": [\n    {\n      \"href\": \"string\",\n      \"rel\": \"string\"\n    }\n  ]\n}\n```\n\n### Getting Live CDP fields for a batch of CDP-enabled virtual machines\n\nSend a POST request to\n[`/vmware/vm/cdp`](#operation/getVmwareCdpLiveInfo).\nThe request takes a list of virtual machine IDs that correspond to CDP-enabled\nvirtual machines as a mandatory parameter named 'ids'.\n\n```bash\ncurl -X POST \\\n  -d '{\n     \"ids\": [\"id_1\", \"id_2\"]\n     }'\\\n      \"https://$cluster_address/api/v1/vmware/vm/cdp\"\n```\n\nThe Rubrik REST API server responds with a `ListResponse` object.\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n    \"vmId\": \"id_1\",\n    \"localRecoveryPoint\": \"2018-01-01T12:34:56.789Z\",\n    \"remoteRecoveryPoint\": \"2018-01-01T12:34:56.789Z\"\n    },\n    {\n    \"vmId\": \"id_2\",\n    \"localRecoveryPoint\": \"\",\n    \"remoteRecoveryPoint\": \"\"\n    }\n  ]\n  \"total\": 2\n}\n```\n### Getting CDP State fields for a batch of CDP-enabled virtual machines\n\nSend a POST request to\n[`/vmware/vm/cdp_state`](#operation/getVmwareCdpStateInfo).\nThe request takes a list of virtual machine IDs that correspond to CDP-enabled\nvirtual machines as a mandatory parameter named 'ids'.\n\n```bash\ncurl -X POST \\\n  -d '{\n     \"ids\": [\"id_1\", \"id_2\"]\n     }'\\\n      \"https://$cluster_address/api/v1/vmware/vm/cdp_state\"\n```\n\nThe Rubrik REST API server responds with a `ListResponse` object.\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n    \"vmId\": \"id_1\",\n    \"localStatus\": \"Active\",\n    \"replicationStatus\": \"Healthy\",\n    \"healthPercentage\": \"85%\"\n    },\n    {\n    \"vmId\": \"id_2\",\n    \"localStatus\": \"Active\",\n    \"replicationStatus\": \"Healthy\",\n    \"healthPercentage\": \"100%\"\n    }\n  ]\n  \"total\": 2\n}\n```\n\n### Getting recoverable ranges for a batch of CDP-enabled virtual machines\n\nTo get the recoverable time ranges for a batch of CDP-enabled virtual\nmachines, send a POST request to [`/vmware/vm/recoverable_range`]\n(#operation/getVmwareVmRecoverableRangesInBatch). The request takes a list of\nvirtual machine IDs, and optionally a \"before_time\" and \"after_time\" as a filter\nof the time range. The returned recoverable range timestamps are specified as\nmilliseconds from epoch.\n\n```bash\ncurl -X POST \\\n  -d '{\n     \"vmIds\": [\"vmId_1\", \"vmId_2\"]\n     }'\\\n      \"https://$cluster_address/api/v1/vmware/vm/recoverable_range\"\n```\n\nThe Rubrik REST API server responds with a `BatchVmwareVmRecoverableRanges`\nobject.\n\n```bash\n{\n  \"responses\":\n  [\n    {\n      \"vmId\": \"vmId_1\",\n      \"recoverableRanges\":\n      [\n        {\n          \"beginTime\": \"2018-01-01T12:34:56.789Z\",\n          \"endTime\": \"2018-01-01T12:38:56.789Z\"\n        }\n      ]\n    },\n    {\n      \"vmId\": \"vmId_2\",\n      \"recoverableRanges\":\n      [\n        {\n          \"beginTime\": \"2018-01-01T12:34:57.789Z\",\n          \"endTime\": \"2018-01-01T12:38:57.789Z\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n### Getting missed recoverable ranges for a batch of CDP-enabled\n### virtual machines\n\nTo get the missed recoverable time ranges for a batch of CDP-enabled virtual\nmachines, send a POST request to [`/vmware/vm/missed_recoverable_range`]\n(#operation/getVmwareVmMissedRecoverableRangesInBatch). The request takes a\nlist of virtual machine IDs, and optionally a \"before_time\" and \"after_time\"\nas a filter of the time range. The returned missed recoverable range timestamps\nare specified as milliseconds from epoch. If no filters being specified, the\nmissed recoverable range will be calculated based on the retention window,\ni.e. from retention time to the current time\n\n```bash\ncurl -X POST \\\n  -d '{\n     \"vmIds\": [\"vmId_1\", \"vmId_2\"]\n     }'\\\n      \"https://$cluster_address/api/v1/vmware/vm/missed_recoverable_range\"\n```\n\nThe Rubrik REST API server responds with a\n`BatchVmwareVmMissedRecoverableRanges` object.\n\n```bash\n{\n  \"responses\":\n  [\n    {\n      \"vmId\": \"vmId_1\",\n      \"missedRecoverableRanges\":\n      [\n        {\n          \"beginTime\": \"2018-01-01T12:34:56.789Z\",\n          \"endTime\": \"2018-01-01T12:38:56.789Z\"\n        }\n      ]\n    },\n    {\n      \"vmId\": \"vmId_2\",\n      \"missedRecoverableRanges\":\n      [\n        {\n          \"beginTime\": \"2018-01-01T12:34:57.789Z\",\n          \"endTime\": \"2018-01-01T12:38:57.789Z\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n## Get VMware Hierarchy Objects\nSend a GET request to\n[`/vmware/hierarchy/export`](#operation/getVmwareHierarchyExport).\nThe request takes an optional root ID for the hierarchy. This endpoint\nis used to retrieve the set of objects that are valid recovery targets\nduring a VMware Virtual Machine Export operations. This is limited to\nVMware Clusters, Hosts, and Resource Pools. The available options for\nthe root ID are None (return top level objects), Clusters (return child\nHosts and Resource Pools), Standalone Hosts (return child Resource\nPools), or Resource Pools (return child Resource Pools).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/vmware/hierarchy/export\"\n```\n\nThe Rubrik REST API server responds with a `ListResponse` object.\n```bash\n{\n  \"hasMore\": true,\n    \"data\": [\n      {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"objectType\": \"string\",\n        \"location\": \"string\",\n        \"hasChildren\": true,\n        \"datastores\": [\n        ...\n        ],\n        \"recoverableTo\": true,\n      },\n    ]\n}\n```\n\n## Get VMware Hierarchy Object\nSend a GET request to\n[`/vmware/hierarchy/{id}/export`](#operation/getVmwareHierarchyObject).\nThe request takes an ID for the hierarchy object. This endpoint\nis used to retrieve the VMware Hierarchy object that are valid recovery targets\nduring a VMware Virtual Machine Export operations. This is limited to\nVMware Clusters, Hosts, and Resource Pools. The available options for\nthe ID are Compute Cluster ID , Standalone Hosts ID, or Resource Pools ID.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/vmware/hierarchy/{id}/export\"\n```\n\nThe Rubrik REST API server responds with a `VmwareHierarchyInfo` object.\n```bash\n{\n  \"responses\":\n  {\n   \"id\": \"string\",\n    \"name\": \"string\",\n    \"objectType\": \"string\",\n    \"location\": \"string\",\n    \"hasChildren\": true,\n    \"datastores\": [\n    ...\n    ],\n    \"recoverableTo\": true,\n  }\n}\n```\n\n## Get VMware User-Configured Network List\nSend a GET request to\n[`/vmware/vcenter/{id}/networks`](#operation/getNetworks).\nThe request takes an ID for the vCenter server for which to retrieve the\nuser-configured networks and returns the networks' names and IDs.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/vmware/vcenter/{id}/networks\"\n```\n\nThe Rubrik REST API server responds with a `NetworkInfo` object.\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n    \"id\": \"network_id\",\n    \"name\": \"network_name\"\n    }\n  ]\n  \"total\": 1\n}\n```\n\n## Set Network for HotAdd Backups and Recoveries\nSend a POST request to\n[`/vmware/vcenter/{id}/hotadd/network`](#operation/setHotAddNetwork). The\nrequest takes an ID for the vCenter server and a user-configured network\nID. It can also optionally take the information about static IP configuration.\nThis static IP configuration requires the IP address range and the subnet mask,\noptionally taking in a gateway and list of DNS servers.\n\n```bash\ncurl -X POST \\\n-d '{\n  \"hotadd_network_info\": {\n    \"network_id\":\"string\",\n    \"static_ip_info\": {\n      \"ip_addresses\":[\"list\", \"of\", \"ips\"],\n      \"subnet_mask\":\"string\",\n      \"gateway\":\"string\",\n      \"dns_servers\":[\"list\", \"of\", \"dns\", \"servers\"]\n    }\n  }\n}'\n\\  \"https://$cluster_address/api/v1/vmware/vcenter/{id}/hotadd/network\"\n```\n\nThe Rubrik REST API server responds with an HTTP 204 response when the\nnetwork is set up properly.\n\n## Get Network Information for HotAdd Backups and Recoveries\nSend a GET request to\n[`/vmware/vcenter/{id}/hotadd/network`](#operation/getHotAddNetwork). The\nrequest takes an ID for the vCenter server.\n\n```bash\ncurl -x GET \"https://$cluster_address/api/v1/vmware/vcenter/{id}/hotadd/network\"\n```\n\nThe Rubrik REST API server responds with a `HotAddNetworkConfigWithName` object.\n```bash\n{\n  \"networkName\": \"$networkName\",\n  \"staticIpConfig\": {\n    \"ip_addresses\": [\"list\", \"of\", \"ips\"],\n    \"subnet_mask\": \"$subnet_mask\",\n    \"gateway\": \"$gateway\",\n    \"dns_servers\": [\"list\", \"of\", \"dns\", \"servers\"]\n  }\n}\n```\n\n## Bulk creating on-demand snapshots\nOn-demand snapshots can be created for both protected and unprotected virtual\nmachines. To create an on-demand snapshot of a set of virtual machines, send a\nPOST request to\n[`/vmware/vm/snapshot/bulk`](#operation/bulkCreateOnDemandBackup).\n\n```bash\ncurl -X POST \\\n  -d '{\n     \"vms\": [\n       {\n         \"vmId\": \"$vm_id\"\n       }\n     ],\n     }'\\\n      \"https://$cluster_address/api/v1/vmware/vm/snapshot/bulk\"\n```\n\nThe Rubrik REST API server initiates the asynchronous snapshot tasks and\nresponds with objects tracking the job status.\n```bash\n{\n  \"responses\": [\n    {\n      \"id\": \"$request_id\",\n      \"status\": \"QUEUED\",\n      \"progress\": 0,\n      \"startTime\": \"$timestamp\",\n      \"links\": [\n        {\n          \"href\": \"https://$cluster_address/api/v1/vmware/vm/snapshot/bulk\",\n          \"rel\": \"self\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n## Get VMware HotAdd proxy virtual machine list\nTo retrieve the list of VMware HotAdd proxy virtual machines, send a GET\nrequest to the [`/vmware/vcenter/hotadd/vm`](#operation/queryHotAddProxyVm)\nendpoint.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/vmware/vcenter/hotadd/vm\"\n```\n\nThe Rubrik REST API server responds with a `ListResponse` object.\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"vcenterName\": \"string\",\n      \"computeClusterName\": \"string\",\n      \"hostName\": \"string\",\n      \"datastoreName\": \"string\",\n      \"networkInfo\": {\n        \"networkName\":\"string\",\n        \"staticIpConfig\": {\n          \"ip_addresses\":[\"list\", \"of\", \"ips\"],\n          \"subnet_mask\":\"string\",\n          \"gateway\":\"string\",\n          \"dns_server\":\"string\"\n        }\n      },\n      \"status\": \"OK\",\n      \"UsedPortCount\": 0,\n    },\n  ]\n}\n```\n\n## Get Number of HotAdd Proxies Needed for Vcenter\nSend a GET request to\n[`/vmware/vcenter/{id}/hotadd/needed`](#operation/getNumProxiesNeeded).\nThe request takes an ID for the vCenter server for which to return the\nnumber of HotAdd proxies needed.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/vmware/vcenter/{id}/hotadd/needed\"\n```\n\nThe Rubrik cluster returns the number of proxies needed.\n```bash\n{\n  \"needed\": 7\n}\n```\n\n## Get Ingest and Export Bandwidth Limits Using HotAdd for Vcenter.\nSend a GET request to\n[`/vmware/vcenter/{id}/hotadd/bandwidth`](#operation/getHotAddBandwidth).\nThe request takes the vCenter server ID and returns the\ningest and export bandwidth limits for that vCenter, when using HotAdd.\n\n```bash\ncurl -X GET \\\n\"https://$cluster_address/api/v1/vmware/vcenter/{id}/hotadd/bandwidth\"\n```\n\nThe Rubrik cluster returns the bandwidth limits in Mbps.\n```bash\n{\n  \"ingestLimit\": 7,\n  \"exportLimit\": 7\n}\n```\n\n## Set Ingest and Export Bandwidth Limits Using HotAdd for Vcenter.\nSend a POST request to\n[`/vmware/vcenter/{id}/hotadd/bandwidth`](#operation/setHotAddBandwidth).\nThe request takes an ID for the vCenter server and the bandwidth limits to\nupdate. Setting a bandwidth limit to 0 clears the limit in that\ndirection.\n\n```bash\ncurl -X POST \\\n-d '{\n  \"hot_add_bandwidth_info\": {\n    \"ingestLimit\": 0,\n    \"exportLimit\": 0\n  }\n}'\n\\ \"https://$cluster_address/api/v1/vmware/vcenter/{id}/hotadd/bandwidth\"\n```\n\nThe Rubrik REST API server responds with an HTTP 204 response when the\nbandwidth limits are set properly.\n\n### Get preferred CDP network protocol\n\nTo retrieve the currently preferred network protocol (IPv4 or IPv6) used for\nCDP data transfer, send a GET request to\n[`/vmware/config/cdp/get_preferred_cdp_network_protocol`](#operation/getPreferredCdpNetworkProtocol).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/vmware/config/cdp/get_preferred_cdp_network_protocol\"\n```\n\nThe Rubrik REST API server responds with the preferred CDP\nnetwork protocol.\n\n```bash\n{\n  \"preferredCdpNetworkProtocol\": \"IPv4\"\n}\n```\n\nThe configuration of VMware ESX subnets take priority over this setting.\nWhen a valid IPv6 ESX subnet is defined, CDP uses IPv6 for data transfer\neven when the preferred protocol is IPv4.\n\n### Set preferred CDP network protocol\n\nSet the preferred network protocol (IPv4 or IPv6) used for CDP data\ntransfer by sending a PATCH request to\n[`/vmware/config/cdp/set_preferred_cdp_network_protocol`](#operation/setPreferredCdpNetworkProtocol).\n\n```bash\ncurl -X PATCH \\\n  \"https://$cluster_address/api/v1/vmware/config/cdp/set_preferred_cdp_network_protocol\"\n```\n\nThe Rubrik REST API server responds with the updated preferred CDP\nnetwork protocol.\n\n```bash\n{\n  \"preferredCdpNetworkProtocol\": \"IPv4\"\n}\n```\n\n## Migrate cluster associated with Rubrik Backup Service\n\nSee the\n[host section](#section/Hosts/Migrate-cluster-associated-with-Rubrik-Backup-Service)\nfor more details. To migrate the primary cluster for the Rubrik Backup Service\non a virtual machine, send a POST request to\n[`/vmware/vm/make_primary`](#operation/vmMakePrimary).\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"ids\": [\n      \"$vm_id1\",\n      ...\n    ] }' \\\n  \"https://$cluster_address/api/v1/vmware/vm/make_primary\"\n```\n\nThe Rubrik REST API server initiates the asynchronous request task and responds\nwith a task object.\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"status\": \"RUNNING\",\n  \"error\": \"None\",\n  \"progress\": \"$request_progress\"\n  \"links\": [\n    {\n      href: \"https://$cluster_address/api/v1/vmware/vm/request/$request_id\",\n      rel: \"self\"\n    }\n  ]\n}\n```\n\n### Get VMware Networks for virtual machine recovery\n\nTo get all the available VMware networks for the specified compute resource,\nsend a GET request to\n[`/vmware/config/recovery/networks`](#operation/getVmwareRecoveryNetworks).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/vmware/config/recovery/networks\"\n```\n\nThe Rubrik REST API server returns a collection of all the available\nrecovery networks `VmwareNetworkInfo` for the compute resource specified by\nthe `compute_resource_id` parameter.\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"computeResourceId\": string,\n      \"computeResourceType\": string,\n    },\n  ],\n  \"total\": 1,\n}\n```\n\n# Legal Hold\n\n### Get summary of snapshots which are placed under legal hold\nSend a GET request to [`/legal_hold/snapshot`](#operation/queryLegalHold).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/legal_hold/snapshot\"\n```\n\n```bash\n{\n  \"data\": [\n    {\n      \"objectId\": \"$object_id\",\n      \"objectName\": \"$object_name\",\n      \"objectType\": \"$object_type\",\n      \"snapshotId\": \"$snapshot_id\",\n      \"snapshotTime\": \"2019-11-12T10:35:12.784Z\",\n      \"placeOnHoldTime\": \"2019-11-13T11:11:06.456Z\",\n      \"locationsPresent\": [\n        \"$location1_id\",\n        \"$location2_id\"\n      ],\n      \"isOnDemandSnapshot\": true\n    }\n  ],\n  \"hasMore\": false,\n  \"total\": 1\n}\n```\n\n### Place a snapshot on legal hold\nTo place a snapshot under legal hold, send a POST request to [`/legal_hold/snapshot`](#operation/applyLegalHold).\n\n```bash\ncurl -X POST \\\n  -d '{ \"snapshotId\": \"$snapshot_id\", \"holdConfig\": {\"isHoldInPlace\": true} }' \\\n   \"https://$cluster_address/api/v1/legal_hold/snapshot\"\n```\n\nThe rubrik REST API server responds with the legal hold summary object if request succeeds.\n\n```bash\n{\n  \"objectId\": \"$object_id\",\n  \"objectName\": \"$object_name\",\n  \"objectType\": \"$object_type\",\n  \"snapshotId\": \"$snapshot_id\",\n  \"snapshotTime\": \"2019-11-12T10:35:12.784Z\",\n  \"placeOnHoldTime\": \"2019-11-13T11:11:06.456Z\",\n  \"locationsPresent\": [\n    \"$location1_id\",\n    \"$location2_id\"\n  ],\n  \"isOnDemandSnapshot\": true\n}\n```\n\n### Get objects which are part of legal hold\nSend a GET request to [`/legal_hold/object`](#operation/getLegalHoldObjects) to retrieve a list of objects with snapshots that are under a legal hold.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/legal_hold/object\"\n```\n\n```bash\n{\n  \"data\": [\n    {\n      \"objectId\": \"$object_id\",\n      \"objectName\": \"$object_name\",\n      \"objectType\": \"$object_type\",\n      \"numberOfSnapshotsHeld\": 1\n    }\n  ],\n  \"hasMore\": false,\n  \"total\": 1\n}\n```\n\nTo return a list of the snapshots for a specific object that are under legal hold, send a GET request to [`/legal_hold/snapshot`](#operation/queryLegalHold) with the ID of the object in the object_id parameter.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/legal_hold/snapshot?object_id=$object_id\"\n```\n\n```bash\n{\n  \"data\": [\n    {\n      \"objectId\": \"$object_id\",\n      \"objectName\": \"$object_name\",\n      \"objectType\": \"$object_type\",\n      \"snapshotId\": \"$snapshot_id\",\n      \"snapshotTime\": \"2019-11-12T10:35:12.784Z\",\n      \"placeOnHoldTime\": \"2019-11-13T11:11:06.456Z\",\n      \"locationsPresent\": \"\",\n      \"isOnDemandSnapshot\": true\n    }\n  ],\n  \"hasMore\": false,\n  \"total\": 1\n}\n```\n\n### Dissolve legal hold\nTo remove a legal hold from a collection of object snapshots, send a POST request to [`/legal_hold/object/{id}/dissolve`](#operation/dissolveLegalHoldSnapshots).\n\n```bash\ncurl -X POST \\\n  -d '{ \"snapshotIds\": [\"$snapshot_id\"] }' \\\n  \"https://$cluster_address/api/v1/legal_hold/object/$object_id/dissolve\"\n```\n\nThe Rubrik REST API server responds with the list of snapshots on which legal hold has been dissolved.\n\n```bash\n{\n  \"dissolvedSnapshotIds\": [\n    \"$snapshot_id\"\n  ]\n}\n```\n\n# Cloud Utilization\n\nRubrik clusters can utilize the cloud for storage and compute for\nsnapshot archival and data consolidation on archival locations.\n\n## Forecasting cloud utilization\n\nTo forecast the cloud utilization according to specified SLA domain\nparameters, send a POST request to:\n[`/cloud_utilization/cloud_out_forecast`](#operation/doCloudOutForecast).\n\n**Example:** Forecasting cloud utilization\n\n```bash\ncurl -X POST -d '{\n  \"cloudOutForecastRequest\": {\n    \"slaParameters\": {\n      \"frequencies\": {\n        \"monthly\": {\n          \"frequency\": 1,\n          \"retention\": 12\n        },\n        \"yearly\": {\n          \"frequency\": 1,\n          \"retention\": 2\n        }\n      },\n      \"archivalSpecs\": {\n        \"locationId\": \"75892476-c158-45fb-8ea9-365c634da294\",\n        \"archivalThreshold\": 1\n      }\n    },\n    \"consolidationFilter\": \"ForecastWithConsolidation\",\n    \"granularity\": Year,\n    \"forecastPeriodInGranularityUnit\": 3\n  }\n}' \"https://$cluster_address/api/v1/cloud_utilization/cloud_out_forecast\"\n```\n\nThe response gives the forecast result summary.\n\n```bash\n{\n  \"assumptions\": {\n    \"logicalDataSizeInGB\": 1000.0,\n    \"annualGrowthRateInPercent\": 7.0,\n    \"compressionFactor\": 2.5,\n    \"frequencyChangeRates\": {\n      \"monthlyChangeRateInPercent\": 10.0,\n      \"yearlyChangeRateInPercent\": 30.0\n    }\n  },\n  \"locationForecast\": {\n    \"locationName\": \"S3:s3-location-name\",\n    \"locationType\": \"S3\",\n    \"locationRegion\": \"us-west-2\",\n    \"instanceType\": \"m5.2xlarge\",\n    \"storageForecast\": {\n      \"forecastWithConsolidation\": {\n        \"storageUsedInGB\": [1000, 1100, 1105],\n        \"storageCostInUSD\": [276, 304, 305],\n        \"dataRetrievalCostInUSD\": [0, 0, 0],\n        \"perStorageClassForecast\": [\n          {\n            \"storageClass\": \"STANDARD\",\n            \"storageUsedInGB\": [900, 1150, 1450],\n            \"storageCostInUSD\": [176, 304, 376]\n          }\n        ]\n      }\n    },\n    \"computeForecast\": {\n      \"forecastWithConsolidation\": {\n        \"computeDurationInHrs\": [0, 11, 12],\n        \"computeCostInUSD\": [0, 8, 9]\n      }\n    }\n  }\n}\n```\n\n# User-defined tag\n\nRubrik CDM clusters can manage user-defined tags attached to the compute resources created by CloudOn and CloudOut.\n\nResource tags are associated with a cloud archival location, such as AWS or Azure. Rubrik CDM allows a maximum of 10 resource tags for each archival location. Check with the cloud provider for additional restrictions on resource tags.\n\nIf a compute resource supports tagging during creation by the cloud provider, user-defined resource tags are attached at resource creation time. Otherwise, user-defined resource tags are attached to the compute resource after creation.\n\n* Compute Instances: Bolt, Converter, Transient instances, Converted Instances\n* Disks/Snapshots: EBS Volumes/Snapshots, Managed Disks/Snapshot\n* Images: AMIs, Images\n\n## Query existing user-defined tags on a CDM cluster\n\nTo query existing user-defined tags on a CDM cluster, send a GET request to the\n[`/user_defined_tag`](#operation/queryUserDefinedTag) endpoint.\n\n**Example:** Query existing user-defined tags on a CDM cluster\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/user_defined_tag\"\n```\n\n```json\n{\n        \"resourceTags\": [{\n                \"id\": \"38400000-8cf0-11bd-b23e-10b96e4ef00d\",\n                \"key\": \"department\",\n                \"value\": \"engineering\",\n                \"lastUpdateTime\": \"2021-01-31T11:54:24 UTC\",\n                \"scopeRefId\": \"a0ef0663-7a7c-4027-9972-061780e52fee\"\n        }]\n}\n```\n\n## Create a new user-defined tag on a CDM cluster\n\nTo create a new user-defined tag on a CDM cluster, send a POST request to the\n[`/user_defined_tag`](#operation/createUserDefinedTag) endpoint.\n\n**Example:** Create a new user-defined tags on a CDM cluster\n\n```bash\ncurl -X POST \\\n  -d '{\n          \"key\": \"department\",\n          \"value\": \"engineering\",\n          \"scopeRefId\": \"a0ef0663-7a7c-4027-9972-061780e52fee\"\n    }' \\\n  \"https://$cluster_address/api/v1/user_defined_tag\"\n```\n\n```json\n{\n        \"id\": \"38400000-8cf0-11bd-b23e-10b96e4ef00d\",\n        \"key\": \"department\",\n        \"value\": \"engineering\",\n        \"lastUpdateTime\": \"2021-01-31T11:54:24 UTC\",\n        \"scopeRefId\": \"a0ef0663-7a7c-4027-9972-061780e52fee\"\n}\n```\n\n## Delete existing user-defined tags on a CDM cluster\n\nTo delete existing user-defined tags on a CDM cluster, send a DELETE request to the\n[`/user_defined_tag`](#operation/deleteUserDefinedTagBulk) endpoint.\n\n**Example:** Delete existing user-defined tags on a CDM cluster\n\n```bash\ncurl -X DELETE \"https://$cluster_address/api/v1/user_defined_tag?ids=$id\"\n```\n\n```json\n{\n        \"ids\": [\"38400000-8cf0-11bd-b23e-10b96e4ef00d\"]\n}\n```\n\n## Get information about a user-defined tag on a CDM cluster\n\nTo fetch an existing user-defined tag on a CDM cluster, send a GET request to the\n[`/user_defined_tag/{id}`](#operation/getUserDefinedTag) endpoint.\n\n**Example:** To fetch an existing user-defined tag on a CDM cluster\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/user_defined_tag/$id\"\n```\n\n```json\n{\n        \"id\": \"38400000-8cf0-11bd-b23e-10b96e4ef00d\",\n        \"key\": \"department\",\n        \"value\": \"engineering\",\n        \"lastUpdateTime\": \"2021-01-31T11:54:24 UTC\",\n        \"scopeRefId\": \"a0ef0663-7a7c-4027-9972-061780e52fee\"\n}\n```\n\n## Update information about an existing user-defined tag on a CDM cluster\n\nTo update an existing user-defined tag on a CDM cluster, send a PATCH request to the\n[`/user_defined_tag/{id}`](#operation/updateUserDefinedTag) endpoint.\n\n**Example:** To update an existing user-defined tag on a CDM cluster\n\n```bash\ncurl -X PATCH \\\n -d '{\"value\": \"engineering\"}' \\\n \"https://$cluster_address/api/v1/user_defined_tag/$id\"\n```\n```json\n{\n        \"id\": \"38400000-8cf0-11bd-b23e-10b96e4ef00d\",\n        \"key\": \"department\",\n        \"value\": \"engineering\",\n        \"lastUpdateTime\": \"2021-01-31T11:54:24 UTC\",\n        \"scopeRefId\": \"a0ef0663-7a7c-4027-9972-061780e52fee\"\n}\n```\n\n## Delete a existing user-defined tag on a CDM cluster\n\nTo delete an existing user-defined tag on a CDM cluster, send a DELETE request to the\n[`/user_defined_tag/{id}`](#operation/deleteUserDefinedTag) endpoint.\n\n**Example:** To delete an existing user-defined tag on a CDM cluster\n\n```bash\ncurl -X DELETE \"https://$cluster_address/api/v1/user_defined_tag/$id\"\n```\n\n\n\n# Hosts\n\nRubrik clusters can protect file system data and application data through direct interaction with a host operating system. This method of protection does not require a virtual environment API. Instead, the Rubrik cluster works with the Rubrik Backup Service software that is running on supported Linux hosts and Windows hosts.\n\nIn some situations, the Rubrik cluster can directly interact with hosts without the Rubrik Backup Service, for example when providing protection of data on a network share.\n\n## Rubrik Backup Service\n\nThe Rubrik Backup Service software must be installed on a host to enable file system level protection and direct protection of supported applications. The Rubrik Backup Service software is signed by a specific Rubrik cluster and can only be used with that Rubrik cluster.\n\nThe following URLs provide access to the Rubrik Backup Service software on a Rubrik cluster:\n* Linux: https://$cluster_address/connector/rubrik-agent.x86_64.rpm\n* Windows: https://$cluster_address/connector/RubrikBackupService.zip\n\n**IMPORTANT:** The Rubrik User Guide describes how to install the Rubrik Backup Service software, and lists the permissions and settings that are required to allow the Rubrik Backup Service to provide support for specific operating systems, applications, and clusters.\n\n## Registering a host\nAfter installing the Rubrik Backup Service on a host, register the host with the Rubrik cluster. Registering initiates secure communication between the Rubrik cluster and the Rubrik Backup Service on the host. After a host is registered, the Rubrik Backup Service on the host sends detailed information about the host to the Rubrik cluster.\n\nThe Rubrik Backup Service scans a registered host for protectable objects, such as: applications, databases, and Windows clusters. The Rubrik Backup Service sends the results of the scan to the Rubrik cluster.\n\nTo register a host, send a POST request to [`/host`](#operation/registerHost) and include `hostname: $hostname`. The `$hostname` value must be the IPv4 address of the host or the resolvable hostname of the host.\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"hostname\": \"$hostname\" }' \\\n  \"https://$cluster_address/api/v1/host\"\n```\n\nTo register the host and discover protection points of the host in the background, send a POST request to [`/host/background`](#operation/registerHostAsync) and include `hostname: $hostname`. The`$hostname` value must be the IPv4 address of the host or the resolvable hostname of the host.\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"hostname\": \"$hostname\" }' \\\n  \"https://$cluster_address/api/v1/host/background\"\n```\nThe Rubrik REST API server responds with the details for the host, including the connection status.\n\n```bash\n{\n  \"id\": \"$host_id\",\n  \"name\": \"$hostname\",\n  \"hostname\": \"$hostname\", (deprecated)\n  \"primaryClusterId\": \"$cluster_id\",\n  \"agentId\": \"$agent_id\",\n  \"operatingSystem\": \"$os_version\",\n  \"operatingSystemType\": \"$os_type\",\n  \"status\": \"Connected\",\n  \"compressionEnabled\": false\n}\n```\n\nTo register bulk hosts in the background, send a POST request to [`/host/bulk_background`](#operation/bulkRegisterHostAsync) and include `hostname: $hostname`. The`$hostname` value must be the IPv4 address of the host or the resolvable hostname of the host.\n\n```\ncurl -X POST \\\n  -d '{\n    [{\"hostname\": \"$hostname1\"}, {\"hostname\": \"$hostname2\"}] }' \\\n  \"https://$cluster_address/api/v1/host/bulk_background\"\n```\n\nThe `status` field in the response is returned as `Refreshing` until the host has finished discovering all the mssql instances, oracle DBs, etc. After this step, status is returned as `Connected` and all discovery is done for the host\n\nFor background hosts, the connection status is returned as `Refreshing` until the host is fully registered. After this step, that status is returned as `Connected` and all discovery is done for the host\n\n## Retrieving host information\n\nTo retrieve a current list of the hosts that are registered with a Rubrik cluster, send a GET request to [`/host`](#operation/queryHost).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/host\"\n```\n\nThe Rubrik REST API server responds with a ListResponse object that contains the first page of the current list.\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"id\": \"$host_id0\",\n      \"name\": \"$hostname0\",\n      \"hostname\": \"$hostname0\", (deprecated)\n      \"primaryClusterId\": \"$cluster_id\",\n      \"operatingSystem\": \"$os_version0\",\n      \"operatingSystemType\": \"$os_type0\",\n      \"status\": \"Connected\"\n    },\n    {\n      \"id\": \"$host_id1\",\n      \"name\": \"$hostname1\",\n      \"hostname\": \"$hostname1\", (deprecated)\n      \"primaryClusterId\": \"$cluster_id\",\n      \"operatingSystem\": \"$os_version1\",\n      \"operatingSystemType\": \"$os_type1\",\n      \"status\": \"Connected\"\n    }\n  ],\n  \"total\": 2\n}\n```\nDepending on the number of registered hosts, the complete list of registered hosts may not be included on the first page. [Working with lists](#section/Overview/Working-with-lists) describes how to work with a ListResponse object to obtain additional pages of the list.\n\n\nTo retrieve the details for a specified host, send a GET request to [`/host/{id}`](#operation/getHost).\n\nAdding a host will cause Rubrik to communicate with the remote Rubrik agent and get detailed information about the host.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/host/$host_id0\"\n```\nThe Rubrik REST API server responds with the details of the specified host.\n\n```bash\n  {\n    \"id\": \"$host_id0\",\n    \"name\": \"$hostname0\",\n    \"hostname\": \"$hostname0\", (deprecated)\n    \"primaryClusterId\": \"$cluster_id\",\n    \"agentId\": \"$agent_id\",\n    \"operatingSystem\": \"$os_version0\",\n    \"operatingSystemType\": \"$os_type0\",\n    \"status\": \"Connected\",\n    \"compressionEnabled\": false\n  }\n```\n\n## Adding a host without the Rubrik Backup Service\n\nA host without the Rubrik Backup Service can be added by setting the `hasAgent` flag to `false`. This can be used to register a host that will be accessed through network shares.\n\n```bash\ncurl -X POST \\\n  -d '{ \\\n    \"hostname\": \"$hostname\",\n    \"hasAgent\": \"false\" }' \\\n  \"https://$cluster_address/api/v1/host\"\n```\n\n## Modifying a registered host\n\nTo change the FQDN or IPv4 address that the Rubrik cluster uses to connect with a registered host, send a PATCH request to [`/host`](#operation/updateHost). Use the value of `hostname` to specify the new FQDN or IPv4 address of the host. Optionally, also use this PATCH request to specify whether to compress the data that is transmitted to and from the host. Set the value of `compressionEnabled` to `true` to enable compression or set the value to `false` to turn compression off.\n\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"hostname\": \"$hostname\",\n    \"compressionEnabled\": true }' \\\n  \"https://$cluster_address/api/v1/host/$host_id\"\n```\n\nThe Rubrik REST API server responds with a confirmation of the new details of the registered host.\n\n```bash\n {\n  \"id\": \"$host_id\",\n  \"name\": \"$hostname\",\n  \"hostname\": \"$hostname\", (deprecated)\n  \"primaryClusterId\": \"$cluster_id\",\n  \"agentId\": \"$agent_id\",\n  \"operatingSystem\": \"$os_version\",\n  \"operatingSystemType\": \"$os_type\",\n  \"status\": \"Connected\",\n  \"compressionEnabled\": true\n }\n```\n## Removing a host\n\nRemove a host from the Rubrik cluster when the host no longer requires protection. The Rubrik cluster moves all of the unexpired backups for the host filesets of the host to Unmanaged Objects.\n\nTo remove a host send a DELETE request to [`/host/{id}`](#operation/deleteHost).\n\n```bash\ncurl -X DELETE \\\n  \"https://$cluster_address/api/v1/host/$host_id\"\n```\n\nThe Rubrik REST API server responds with HTTP response code 204. This indicates the request succeeded and the response body is empty.\n\n## Refreshing a Host\n\nRefresh a host when changes made on the host do not appear in the\nRubrik web UI. The refresh requests updated information from the\nRubrik Backup Service that is running on the host.\n\nTo refresh a host send a POST request to\n[`/host/{id}/refresh`](#operation/refreshHost)\n\n```bash\ncurl -X POST \\\n  \"https://$cluster_address/api/v1/host/$host_id/refresh\"\n```\n\nThe Rubrik REST API server responds with HTTP response code 200 and\nincludes the updated properties of the host object in the response body.\n\n## Updating a Host Certificate\n\nWhen a host has a new certificate that is not registered with Rubrik\nthe Rubrik cluster will not communicate with that host until the\ncertificate is updated. In order to do that send a PUT request to\n[`/host/certificate/{id}`](#operation/updateCertificateHost)\n\n```bash\ncurl -X PUT \\\n  \"https://$cluster_address/api/v1/host/certificate/$host_id\"\n```\n\nThe Rubrik REST API server responds with the details of the specified host.\n\n## Migrate cluster associated with Rubrik Backup Service\n\nHosts can register with multiple clusters but can only communicate or back up to\na single cluster. Such a cluster is the primary cluster for that host. See the\nMulticluster Rubrik Backup Service section of the Rubrik CDM User Guide for\ndetails. To change the primary cluster to the current cluster, for Rubrik Backup\nService on a host, send a POST request to\n[`/host/make_primary`](#operation/hostMakePrimary).\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"ids\": [\n      \"$host_id1\",\n      ...\n    ] }' \\\n  \"https://$cluster_address/api/v1/host/make_primary\"\n```\n\nThe Rubrik REST API server initiates the asynchronous request task and responds\nwith a task object.\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"status\": \"RUNNING\",\n  \"error\": \"None\",\n  \"progress\": \"$request_progress\"\n  \"links\": [\n    {\n      href: \"https://$cluster_address/api/v1/vmware/vm/request/$request_id\",\n      rel: \"self\"\n    }\n  ]\n}\n```\n\nTo migrate the Rubrik Backup Service on a virtual machine, see the\n[corresponding virtual machine API](#section/Virtual-machines/Migrate-cluster-associated-with-Rubrik-Backup-Service).\n\nAlternatively, in a disaster recovery scenario, when migrating the primary\ncluster for all hosts *and* virtual machines from an old cluster to this one,\nsend a POST request to [`/host/make_primary`](#operation/hostMakePrimary) with\noldPrimaryClusterUuid specified. Note that the hosts and virtual machines must\nalready have been registered on this cluster.\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"oldPrimaryClusterUuid\": \"12345678-90ab-cdef-1234-567890abcdef\" }' \\\n  \"https://$cluster_address/api/v1/host/make_primary\"\n```\n\n## Windows Server Failover Clustering nodes\n\nTo begin working with Windows Server Failover Clustering (WSFC) clusters, register each WSFC node with the Rubrik cluster as described in [`Registering a host`](#section/Hosts/Registering-a-host). The scan performed by the Rubrik Backup Service on each WSFC node detects the WSFC cluster and provides information about the WSFC cluster to the Rubrik cluster.\n\nTo view WSFC cluster information, send a GET request to [`/windows_cluster`](#operation/queryWindowsCluster).\n\n**Note:** The variable `$cluster_address` refers to the FQDN or IPv4 address of the Rubrik cluster.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/windows_cluster\"\n```\nThe Rubrik REST API server responds with a ListResponse object that contains the first page of the list of WSFC clusters.\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"id\": \"$wsfc_id\",\n      \"name\": \"$wsfc_name\",\n      \"fqdn\": \"$wsfc_fqdn\",\n      \"hostIds\": [\n        \"$wsfc_node_id0\",\n        \"$wsfc_node_id1\"\n      ],\n      \"primaryClusterId\": \"$cluster_id\"\n    }\n  ],\n  \"total\": 1\n}\n```\n\nTo retrieve detailed information about a WSFC cluster, send a GET request to: [`/windows_cluster/{id}`](#operation/getWindowsCluster), where `$cluster_id` is the `id` of the WSFC cluster.\n\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/windows_cluster/$cluster_id\"\n```\n\nThe Rubrik REST API server responds with the details for the specified WSFC cluster.\n\n```bash\n{\n  \"name\": \"$wsfc_name\",\n  \"id\": \"$wsfc_id\",\n  \"naturalId\": \"$cluster_natural_id\",\n  \"hostIds\": [\n  \"$wsfc_node_id0\",\n  \"$wsfc_node_id1\"\n  ],\n  \"fqdn\": \"$wsfc_fqdn\",\n  \"primaryClusterId\": \"$cluster_id\"\n}\n```\n\n## Bulk Update Host Shares\n\nTo update a list of Host shares in bulk, send a PATCH request to the [`/host/share/bulk`](#operation/bulkUpdateHostShare) endpoint with a bulk_update_properties to complete an update.\n\n```bash\ncurl -X PATCH \\\n  -d '[\n    {\n      \"shareId\": \"$share_id\",\n      \"updateProperties\": {\n        \"exportPoint\": \"$export_point\",\n        \"username\": \"$username\",\n        \"password\": \"$password\",\n        \"domain\": \"$domain\",\n        \"hostShareParameters\": {\n          \"isNetAppSnapDiffEnabled\": true,\n          \"isIsilonChangelistEnabled\": true\n        }\n      }\n    }\n  ]' \\\n  \"https://$cluster_address/api/v1/host/share/bulk\"\n```\n\nThe Rubrik REST API server responds with the details of the updated Host shares.\n\n## Discover shares on NAS host\n\nTo retrieve a current list of shares (NFS/SMB) on a specific NAS host,\nsend a GET request to [`/host/{id}/nas_share_discover`](#operation/discoverNasShares)\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/host/{id}/nas_share_discover\"\n```\n\nThe Rubrik REST API server responds with a List object that contains all\ndiscovered shares on the NAS host.\n\n```bash\n{\n  [\n    {\n      \"shareType\": \"NFS\",\n      \"exportPoint\": \"/ifs/data/dir1\",\n    },\n    {\n      \"shareType\": \"SMB\",\n      \"exportPoint\": \"ifs_data\",\n    }\n  ]\n}\n```\n\n## Bulk add NAS shares\n\nTo add NAS shares in bulk without validating their share credentials, send a\nPOST request to [`/host/share/bulk`](#operation/bulkAddHostShares)\n\n```bash\ncurl -X POST \\\n  -d '{ \\\n    [ \\\n      { \\\n        \"shareType\": \"$share_type\", \\\n        \"exportPoint\": \"$export_point\" \\\n      },\n      { \\\n        \"shareType\": \"$share_type\", \\\n        \"exportPoint\": \"$export_point\" \\\n      }, \\\n    ] \\\n  }' \\\n  \"https://$cluster_address/api/v1/host/share/bulk\"\n```\n\nThe Rubrik REST API server responds with details of added shares.\n\n## Getting a list of volumes on a Volume Group host\n\nTo retrieve a list of all volumes on a Volume Group host, send a GET\nrequest to [`/host/{id}/volume`](#operation/queryHostVolume)\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/host/{id}/volume\"\n```\n\nThe Rubrik REST API server responds with summary information for each\nvolume on the specified Volume Group host.\n\n```\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"id\": \"string\",\n      \"fileSystemType\": \"NTFS\",\n      \"mountPoints\": [\n        \"string\"\n      ],\n      \"size\": 0,\n      \"naturalId\": \"string\",\n      \"volumeGroupId\": \"string\",\n      \"isCurrentlyPresentOnSystem\": true\n    }\n  ],\n  \"total\": 0\n}\n```\n\n## Remote RBS management\nThe Rubrik Backup Service (RBS) management endpoints provide the capability to install/uninstall/upgrade RBS on remote hosts.\n\n### Retrieving the Rubrik Backup Service host information\n\nTo get the Rubrik Backup Service host information, send a GET request to [`/host/rbs`](#operation/getRbsHostInfo).\n\n```bash\ncurl -X GET \\\n  -d '{\n    \"name\": \"$hostname\",\n    \"username\": \"$username\",\n    \"password\": \"$password\",\n    \"operationTimeout\": 600 }' \\\n  \"https://$cluster_address/api/v1/host/rbs\"\n```\n\n\nThe Rubrik REST API server responds with summary information for Rubrik Backup Service host.\n\n```\n{\n  \"name\": \"$hostname\",\n  \"agentId\": \"$rbsAgentId\",\n  \"agentVersion\": \"$rbsVersion\",\n  \"osInfo\": \"$osInfo\",\n  \"osType\": \"$osType\",\n  \"status\": \"Installed\"\n}\n```\n\n### Installing Rubrik Backup Service on a host\n\nTo install Rubrik Backup Service on a host, send a POST request to [`/host/rbs/install`](#operation/rbsInstall).\n\nInstall Rubrik Backup Service on a host with operationMode as Synchronous.\n```bash\ncurl -X POST \\\n  -d '{\n    \"name\": \"$hostname\",\n    \"username\": \"$username\",\n    \"password\": \"$password\",\n    \"operationTimeout\": 600,\n    \"operationMode\": Synchronous }' \\\n  \"https://$cluster_address/api/v1/host/rbs/install\"\n```\n\nThe Rubrik REST API server responds with the summary of Rubrik Backup Service on the host.\n```bash\n{\n  \"rbsHostSummary\": {\n    \"name\": \"$hostname\",\n    \"agentId\": \"$rbsAgentId\",\n    \"agentVersion\": \"$rbsVersion\",\n    \"osInfo\": \"$osInfo\",\n    \"osType\": \"$osType\",\n    \"status\": \"Installed\"\n  }\n}\n```\n\nInstall Rubrik Backup Service on a host with operationMode as Asynchronous.\n```bash\ncurl -X POST \\\n  -d '{\n    \"name\": \"$hostname\",\n    \"username\": \"$username\",\n    \"password\": \"$password\",\n    \"operationTimeout\": 600,\n    \"operationMode\": Asynchronous }' \\\n  \"https://$cluster_address/api/v1/host/rbs/install\"\n```\n\nThe Rubrik REST API server initiates the asynchronous task and responds\nwith a task object.\n\n```bash\n{\n  \"asyncRequestStatus\": {\n    \"id\": \"$id\",\n    \"status\": \"$status\",\n    \"progress\": 0,\n    \"startTime\": \"2021-03-24T23:27:41.493Z\",\n    \"endTime\": \"2021-03-24T23:27:41.493Z\",\n    \"nodeId\": \"$nodeId\",\n    \"error\": {\n      \"message\": \"$message\"\n    },\n    \"links\": [\n      {\n        \"href\": \"$href\",\n        \"rel\": \"$rel\"\n      }\n    ]\n  }\n}\n```\n\n### Uninstalling Rubrik Backup Service from a host\n\nTo uninstall Rubrik Backup Service from a host, send a POST request to [`/host/rbs/uninstall`](#operation/rbsUninstall).\n\nUninstall Rubrik Backup Service from a host with operationMode as Synchronous.\n```bash\ncurl -X POST \\\n  -d '{\n    \"name\": \"$hostname\",\n    \"username\": \"$username\",\n    \"password\": \"$password\",\n    \"operationTimeout\": 600,\n    \"operationMode\": Synchronous }' \\\n  \"https://$cluster_address/api/v1/host/rbs/uninstall\"\n```\n\nThe Rubrik REST API server responds with the summary of Rubrik Backup Service on the host.\n```bash\n{\n  \"rbsHostSummary\": {\n    \"name\": \"$hostname\",\n    \"status\": \"NotInstalled\"\n  }\n}\n```\n\nUninstall Rubrik Backup Service from a host with operationMode as Asynchronous.\n```bash\ncurl -X POST \\\n  -d '{\n    \"name\": \"$hostname\",\n    \"username\": \"$username\",\n    \"password\": \"$password\",\n    \"operationTimeout\": 600,\n    \"operationMode\": Asynchronous }' \\\n  \"https://$cluster_address/api/v1/host/rbs/uninstall\"\n```\n\nThe Rubrik REST API server initiates the asynchronous task and responds\nwith a task object.\n```bash\n{\n  \"asyncRequestStatus\": {\n    \"id\": \"$id\",\n    \"status\": \"$status\",\n    \"progress\": 0,\n    \"startTime\": \"2021-03-24T23:27:41.493Z\",\n    \"endTime\": \"2021-03-24T23:27:41.493Z\",\n    \"nodeId\": \"$nodeId\",\n    \"error\": {\n      \"message\": \"$message\"\n    },\n    \"links\": [\n      {\n        \"href\": \"$href\",\n        \"rel\": \"$rel\"\n      }\n    ]\n  }\n}\n\n### Upgrading Rubrik Backup Service on a host\n\nTo upgrade Rubrik Backup Service on a host, send a POST request to [`/host/rbs/upgrade`](#operation/rbsUpgrade).\n\nUpgrade Rubrik Backup Service on a host with operationMode as Synchronous.\n```bash\ncurl -X POST \\\n  -d '{\n    \"name\": \"$hostname\",\n    \"username\": \"$username\",\n    \"password\": \"$password\",\n    \"operationTimeout\": 600,\n    \"operationMode\": Synchronous }' \\\n  \"https://$cluster_address/api/v1/host/rbs/upgrade\"\n```\n\nThe Rubrik REST API server responds with the summary of Rubrik Backup Service on the host.\n```bash\n{\n  \"rbsHostSummary\": {\n    \"name\": \"$hostname\",\n    \"agentId\": \"$rbsAgentId\",\n    \"agentVersion\": \"$rbsVersion\",\n    \"osInfo\": \"$osInfo\",\n    \"osType\": \"$osType\",\n    \"status\": \"Installed\"\n  }\n}\n```\n\nUpgrade Rubrik Backup Service on a host with operationMode as Asynchronous.\n```bash\ncurl -X POST \\\n  -d '{\n    \"name\": \"$hostname\",\n    \"username\": \"$username\",\n    \"password\": \"$password\",\n    \"operationTimeout\": 600,\n    \"operationMode\": Asynchronous }' \\\n  \"https://$cluster_address/api/v1/host/rbs/upgrade\"\n```\n\nThe Rubrik REST API server initiates the asynchronous task and responds\nwith a task object.\n\n```bash\n{\n  \"asyncRequestStatus\": {\n    \"id\": \"$id\",\n    \"status\": \"$status\",\n    \"progress\": 0,\n    \"startTime\": \"2021-03-24T23:27:41.493Z\",\n    \"endTime\": \"2021-03-24T23:27:41.493Z\",\n    \"nodeId\": \"$nodeId\",\n    \"error\": {\n      \"message\": \"$message\"\n    },\n    \"links\": [\n      {\n        \"href\": \"$href\",\n        \"rel\": \"$rel\"\n      }\n    ]\n  }\n}\n```\n\n# Failover cluster\n\nThis REST API is used to manage failover cluster objects of UnixLike hosts.\n\n### Add a new failover cluster\nAdd a new failover cluster by making a POST call to\n[/failover_cluster](#operation/createFailoverCluster).\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"name\": \"$name\",\n    \"hostIds\": [ \"$hostId\" ],\n    \"configuredSlaDomainId\": \"$configuredSlaDomainId\"}'\\\n  \"https://$cluster_address/api/v1/failover_cluster\"\n```\n\n```bash\n{\n  \"id\": \"$id\",\n  \"name\": \"$name\",\n  \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n  \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n  \"configuredSlaDomainType\": \"ProtectionSla\",\n  \"primaryClusterId\": \"$primaryClusterId\",\n  \"isConfiguredSlaDomainRetentionLocked\": true,\n  \"slaLastUpdateTime\": \"2020-04-20T17:30:30.743Z\",\n  \"effectiveSlaDomainId\": \"$effectiveSlaDomainId\",\n  \"effectiveSlaDomainName\": \"$effectiveSlaDomainName\",\n  \"isEffectiveSlaDomainRetentionLocked\": true,\n  \"effectiveSlaDomainPolarisManagedId\": \"$effectiveSlaDomainPolarisManagedId\",\n  \"effectiveSlaSourceObjectId\": \"$effectiveSlaSourceObjectId\",\n  \"effectiveSlaSourceObjectName\": \"$effectiveSlaSourceObjectName\",\n  \"nodes\": [\n    {\n      \"id\": \"$id\",\n      \"name\": \"$name\",\n      \"connectionStatus\": \"Connected\",\n      \"operatingSystem\": \"$operatingSystem\"\n    }\n  ],\n  \"connectionStatus\": \"Connected\",\n  \"slaAssignment\": \"Derived\",\n  \"operatingSystemType\": \"$operatingSystemType\",\n  \"numNodes\": $numNodes,\n  \"numApps\": 0\n}\n\n```\n\n### Get all failover clusters\nGet a listing of all failover clusters using\na GET request to [/failover_cluster](#operation/queryFailoverCluster).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/failover_cluster?sort_order=asc\"\n```\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"id\": \"$id\",\n      \"name\": \"$name\",\n      \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n      \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n      \"configuredSlaDomainType\": \"ProtectionSla\",\n      \"primaryClusterId\": \"$primaryClusterId\",\n      \"isConfiguredSlaDomainRetentionLocked\": false,\n      \"effectiveSlaDomainId\": \"$effectiveSlaDomainId\",\n      \"effectiveSlaDomainName\": \"$effectiveSlaDomainName\",\n      \"isEffectiveSlaDomainRetentionLocked\": false,\n      \"effectiveSlaSourceObjectId\": \"$effectiveSlaSourceObjectId\",\n      \"nodes\": [\n        {\n          \"id\": \"$id\",\n          \"name\": \"$name\",\n          \"connectionStatus\": \"Connected\",\n          \"operatingSystem\": \"$operatingSystem\"\n        },\n        {\n          \"id\": \"$id\",\n          \"name\": \"$name\",\n          \"connectionStatus\": \"Connected\",\n          \"operatingSystem\": \"$operatingSystem\"\n        }\n      ],\n      \"connectionStatus\": \"Connected\",\n      \"slaAssignment\": \"$slaAssignment\",\n      \"operatingSystemType\": \"$operatingSystemType\"\n    }\n  ],\n  \"total\": 1\n}\n```\n\n### Get information about a specific failover cluster\nGet information about a specific failover cluster using\na GET request to\n[/failover_cluster/{id}](#operation/getFailoverCluster).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/failover_cluster/$failover_cluster_id\"\n```\n\n```bash\n{\n  \"id\": \"$id\",\n  \"name\": \"$name\",\n  \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n  \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n  \"configuredSlaDomainType\": \"ProtectionSla\",\n  \"primaryClusterId\": \"$primaryClusterId\",\n  \"isConfiguredSlaDomainRetentionLocked\": false,\n  \"effectiveSlaDomainId\": \"$effectiveSlaDomainId\",\n  \"effectiveSlaDomainName\": \"$effectiveSlaDomainName\",\n  \"isEffectiveSlaDomainRetentionLocked\": false,\n  \"effectiveSlaSourceObjectId\": \"$effectiveSlaSourceObjectId\",\n  \"nodes\": [\n    {\n      \"id\": \"$id\",\n      \"name\": \"$name\",\n      \"connectionStatus\": \"Connected\",\n      \"operatingSystem\": \"$operatingSystem\"\n    },\n    {\n      \"id\": \"$id\",\n      \"name\": \"$name\",\n      \"connectionStatus\": \"Connected\",\n      \"operatingSystem\": \"$operatingSystem\"\n    }\n  ],\n  \"connectionStatus\": \"Connected\",\n  \"slaAssignment\": \"$slaAssignment\",\n  \"operatingSystemType\": \"$operatingSystemType\",\n  \"numNodes\": $numNodes,\n  \"numApps\": $numApps\n}\n```\n\n### Update the parameters of an existing failover cluster\nThe parameters associated with the failover cluster can be updated by\nmaking a PATCH request to\n[/failover_cluster/{id}](#operation/updateFailoverCluster)\n\n```bash\ncurl -X PATCH \\\n  -d '{\n    \"name\": \"$name\",\n    \"hostIds\": [ \"$hostId\" ],\n    \"configuredSlaDomainId\": \"$configuredSlaDomainId\"}'\\\n  \"https://$cluster_address/api/v1/failover_cluster/$failover_cluster_id\"\n```\n\n```bash\n{\n  \"id\": \"$id\",\n  \"name\": \"$name\",\n  \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n  \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n  \"configuredSlaDomainType\": \"ProtectionSla\",\n  \"primaryClusterId\": \"$primaryClusterId\",\n  \"isConfiguredSlaDomainRetentionLocked\": true,\n  \"slaLastUpdateTime\": \"2020-04-20T18:26:56.893Z\",\n  \"effectiveSlaDomainId\": \"$effectiveSlaDomainId\",\n  \"effectiveSlaDomainName\": \"$effectiveSlaDomainName\",\n  \"isEffectiveSlaDomainRetentionLocked\": true,\n  \"effectiveSlaDomainPolarisManagedId\": \"$effectiveSlaDomainPolarisManagedId\",\n  \"effectiveSlaSourceObjectId\": \"$effectiveSlaSourceObjectId\",\n  \"effectiveSlaSourceObjectName\": \"$effectiveSlaSourceObjectName\",\n  \"nodes\": [\n    {\n      \"id\": \"$id\",\n      \"name\": \"$name\",\n      \"connectionStatus\": \"Connected\",\n      \"operatingSystem\": \"$operatingSystem\"\n    }\n  ],\n  \"connectionStatus\": \"Connected\",\n  \"slaAssignment\": \"Derived\",\n  \"operatingSystemType\": \"$operatingSystemType\",\n  \"numNodes\": $numNodes,\n  \"numApps\": $numApps\n}\n```\n\n### Delete a specific failover cluster\nAny failover cluster can be removed by issuing a DELETE request to\n[/failover_cluster/{id}](#operation/deleteFailoverCluster).\n\n```bash\ncurl -X DELETE \\\n  \"https://$cluster_address/api/v1/failover_cluster/$failover_cluster_id?preserve_snapshots=false\"\n```\n\n### Bulk delete a failover cluster\nA list of failover clusters can be removed by issuing a DELETE request to\n[/failover_cluster/bulk](#operation/bulkDeleteFailoverCluster).\n\n```bash\ncurl -X DELETE \\\n  \"https://$cluster_address/api/v1/failover_cluster/bulk?ids=$failover_cluster_id1,$failover_cluster_id2&preserve_snapshots=false\"\n```\n\n# Failover cluster App\n\nUse this REST API to manage failover cluster app objects.\n\n### Add a new failover cluster app\nAdd a new failover cluster app by making a POST call to\n[/failover_cluster/failover_cluster_app](#operation/createFailoverClusterApp).\n\nUse either the virtualIps or nodeOrders options in the failoverClusterAppSource request parameter to create a failover cluster app.\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"name\": \"$name\",\n    \"failoverClusterType\": \"Windows\",\n    \"failoverClusterId\": \"$failoverClusterId\",\n    \"failoverClusterAppSource\": {\n      \"virtualIps\": [\n        \"$virtualIp\"\n      ],\n      \"nodeOrders\": [\n        {\n          \"nodeId\": \"$nodeId\",\n          \"nodeName\": \"$nodeName\",\n          \"order\": 0\n        }\n      ]\n    },\n    \"configuredSlaDomainId\": \"string\"}'\\\n  \"https://$cluster_address/api/v1/failover_cluster/failover_cluster_app\"\n```\n\nResponse when a failover cluster app is created using the virtualIps option in the failoverClusterAppSource request parameter.\n\n```bash\n{\n  \"id\": \"$id\",\n  \"name\": \"$name\",\n  \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n  \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n  \"configuredSlaDomainType\": \"ProtectionSla\",\n  \"primaryClusterId\": \"$primaryClusterId\",\n  \"isConfiguredSlaDomainRetentionLocked\": true,\n  \"slaLastUpdateTime\": \"2020-04-21T17:32:44.266Z\",\n  \"effectiveSlaDomainId\": \"$effectiveSlaDomainId\",\n  \"effectiveSlaDomainName\": \"$effectiveSlaDomainName\",\n  \"isEffectiveSlaDomainRetentionLocked\": true,\n  \"effectiveSlaDomainPolarisManagedId\": \"$effectiveSlaDomainPolarisManagedId\",\n  \"effectiveSlaSourceObjectId\": \"$effectiveSlaSourceObjectId\",\n  \"effectiveSlaSourceObjectName\": \"$effectiveSlaSourceObjectName\",\n  \"failoverClusterType\": \"Windows\",\n  \"failoverClusterId\": \"$failoverClusterId\",\n  \"failoverClusterAppSource\": {\n    \"virtualIps\": [\n      \"$virtualIp\"\n    ]\n  },\n  \"connectionStatus\": \"Connected\",\n  \"slaAssignment\": \"Derived\",\n  \"operatingSystemType\": \"$operatingSystemType\",\n  \"failoverClusterName\": \"$failoverClusterName\"\n}\n```\n\nResponse when a failover cluster app is created using the nodeOrders option in the failoverClusterAppSource request parameter.\n\n```bash\n{\n  \"id\": \"$id\",\n  \"name\": \"$name\",\n  \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n  \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n  \"configuredSlaDomainType\": \"ProtectionSla\",\n  \"primaryClusterId\": \"$primaryClusterId\",\n  \"isConfiguredSlaDomainRetentionLocked\": true,\n  \"slaLastUpdateTime\": \"2020-04-21T17:32:44.266Z\",\n  \"effectiveSlaDomainId\": \"$effectiveSlaDomainId\",\n  \"effectiveSlaDomainName\": \"$effectiveSlaDomainName\",\n  \"isEffectiveSlaDomainRetentionLocked\": true,\n  \"effectiveSlaDomainPolarisManagedId\": \"$effectiveSlaDomainPolarisManagedId\",\n  \"effectiveSlaSourceObjectId\": \"$effectiveSlaSourceObjectId\",\n  \"effectiveSlaSourceObjectName\": \"$effectiveSlaSourceObjectName\",\n  \"failoverClusterType\": \"Windows\",\n  \"failoverClusterId\": \"$failoverClusterId\",\n  \"failoverClusterAppSource\": {\n    \"nodeOrders\": [\n      {\n        \"nodeId\": \"$nodeId\",\n        \"nodeName\": \"$nodeName\",\n        \"order\": 0\n      }\n    ]\n  },\n  \"connectionStatus\": \"Connected\",\n  \"slaAssignment\": \"Derived\",\n  \"operatingSystemType\": \"$operatingSystemType\",\n  \"failoverClusterName\": \"$failoverClusterName\"\n}\n```\n\n### Get all failover cluster apps\nGet a listing of all failover cluster apps using\na GET request to\n[/failover_cluster/failover_cluster_app](#operation/queryFailoverClusterApp).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/failover_cluster/failover_cluster_app?sort_order=asc\"\n```\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"id\": \"$id\",\n      \"name\": \"$name\",\n      \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n      \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n      \"configuredSlaDomainType\": \"ProtectionSla\",\n      \"primaryClusterId\": \"$primaryClusterId\",\n      \"isConfiguredSlaDomainRetentionLocked\": false,\n      \"effectiveSlaDomainId\": \"$effectiveSlaDomainId\",\n      \"effectiveSlaDomainName\": \"$effectiveSlaDomainName\",\n      \"isEffectiveSlaDomainRetentionLocked\": false,\n      \"effectiveSlaSourceObjectId\": \"$effectiveSlaSourceObjectId\",\n      \"failoverClusterType\": \"UnixLike\",\n      \"failoverClusterId\": \"$failoverClusterId\",\n      \"failoverClusterAppSource\": {\n        \"virtualIps\": [\n          \"$virtualIp\"\n        ]\n      },\n      \"connectionStatus\": \"Connected\",\n      \"slaAssignment\": \"$slaAssignment\",\n      \"operatingSystemType\": \"Linux\",\n      \"failoverClusterName\": \"$failoverClusterName\"\n    }\n  ],\n  \"total\": 1\n}\n```\n\n\n### Get information about a specific failover cluster app\nGet information about a specific failover cluster app using\na GET request to\n[/failover_cluster/failover_cluster_app/{id}](#operation/getFailoverClusterApp).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/failover_cluster/failover_cluster_app/$failover_cluster_app_id\"\n```\n\n```bash\n{\n  \"id\": \"$id\",\n  \"name\": \"$name\",\n  \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n  \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n  \"configuredSlaDomainType\": \"ProtectionSla\",\n  \"primaryClusterId\": \"$primaryClusterId\",\n  \"isConfiguredSlaDomainRetentionLocked\": true,\n  \"slaLastUpdateTime\": \"2020-04-21T18:00:46.694Z\",\n  \"effectiveSlaDomainId\": \"$effectiveSlaDomainId\",\n  \"effectiveSlaDomainName\": \"$effectiveSlaDomainName\",\n  \"isEffectiveSlaDomainRetentionLocked\": true,\n  \"effectiveSlaDomainPolarisManagedId\": \"$effectiveSlaDomainPolarisManagedId\",\n  \"effectiveSlaSourceObjectId\": \"$effectiveSlaSourceObjectId\",\n  \"effectiveSlaSourceObjectName\": \"$effectiveSlaSourceObjectName\",\n  \"failoverClusterType\": \"Windows\",\n  \"failoverClusterId\": \"$failoverClusterId\",\n  \"failoverClusterAppSource\": {\n    \"virtualIps\": [\n      \"$virtualIp\"\n    ],\n  },\n  \"connectionStatus\": \"Connected\",\n  \"slaAssignment\": \"Derived\",\n  \"operatingSystemType\": \"$operatingSystemType\",\n  \"failoverClusterName\": \"$failoverClusterName\",\n  \"filesets\": [\n    {\n      \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n      \"forceFull\": true,\n      \"forceFullPartitionIds\": [\n        0\n      ],\n      \"allowBackupNetworkMounts\": true,\n      \"allowBackupHiddenFoldersInNetworkMounts\": true,\n      \"useWindowsVss\": true,\n      \"id\": \"$id\",\n      \"name\": \"$name\",\n      \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n      \"configuredSlaDomainType\": \"ProtectionSla\",\n      \"primaryClusterId\": \"$primaryClusterId\",\n      \"isConfiguredSlaDomainRetentionLocked\": true,\n      \"slaLastUpdateTime\": \"2020-04-21T18:00:46.694Z\",\n      \"hostName\": \"$hostName\",\n      \"templateId\": \"$templateId\",\n      \"templateName\": \"$templateName\",\n      \"operatingSystemType\": \"$operatingSystemType\",\n      \"effectiveSlaDomainId\": \"$effectiveSlaDomainId\",\n      \"isEffectiveSlaDomainRetentionLocked\": true,\n      \"effectiveSlaDomainName\": \"$effectiveSlaDomainName\",\n      \"effectiveSlaDomainPolarisManagedId\": \"$effectiveSlaDomainPolarisManagedId\",\n      \"includes\": [\n        \"$includes\"\n      ],\n      \"excludes\": [\n        \"$excludes\"\n      ],\n      \"exceptions\": [\n        \"$exceptions\"\n      ],\n      \"isRelic\": true,\n      \"isPassthrough\": true,\n      \"enableSymlinkResolution\": true,\n      \"enableHardlinkSupport\": true,\n      \"failoverClusterAppId\": \"$failoverClusterAppId\",\n      \"failoverClusterAppName\": \"$failoverClusterAppName\",\n      \"pendingSlaDomain\": {\n        \"objectId\": \"$objectId\",\n        \"pendingSlaDomainId\": \"$pendingSlaDomainId\",\n        \"pendingSlaDomainName\": \"$pendingSlaDomainName\",\n        \"isPendingSlaDomainRetentionLocked\": true\n      },\n      \"protectionDate\": \"2020-04-21T18:00:46.694Z\",\n      \"snapshotCount\": 0,\n      \"archivedSnapshotCount\": 0,\n      \"snapshots\": [\n        {\n          \"id\": \"$id\",\n          \"date\": \"2020-04-21T18:00:46.694Z\",\n          \"expirationDate\": \"2020-04-21T18:00:46.694Z\",\n          \"sourceObjectType\": \"$sourceObjectType\",\n          \"isOnDemandSnapshot\": true,\n          \"isCustomRetentionApplied\": true,\n          \"cloudState\": 0,\n          \"consistencyLevel\": \"$consistencyLevel\",\n          \"indexState\": 0,\n          \"replicationLocationIds\": [\n            \"$replicationLocationIds\"\n          ],\n          \"archivalLocationIds\": [\n            \"$archivalLocationIds\"\n          ],\n          \"slaId\": \"$slaId\",\n          \"slaName\": \"$slaName\",\n          \"isRetainedByRetentionLockSla\": true,\n          \"cloudStorageTier\": \"Hot\",\n          \"isPlacedOnLegalHold\": true,\n          \"snapshotRetentionInfo\": {\n            \"localInfo\": {\n              \"id\": \"$id\",\n              \"name\": \"$name\",\n              \"isSnapshotPresent\": true,\n              \"isExpirationDateCalculated\": true,\n              \"expirationTime\": \"2020-04-21T18:00:46.694Z\",\n              \"snapshotFrequency\": \"$snapshotFrequency\",\n              \"isExpirationInformationUnavailable\": true\n            },\n            \"archivalInfos\": [\n              {\n                \"id\": \"$id\",\n                \"name\": \"$name\",\n                \"isSnapshotPresent\": true,\n                \"isExpirationDateCalculated\": true,\n                \"expirationTime\": \"2020-04-21T18:00:46.694Z\",\n                \"snapshotFrequency\": \"$snapshotFrequency\",\n                \"isExpirationInformationUnavailable\": true\n              }\n            ],\n            \"replicationInfos\": [\n              {\n                \"id\": \"$id\",\n                \"name\": \"$name\",\n                \"isSnapshotPresent\": true,\n                \"isExpirationDateCalculated\": true,\n                \"expirationTime\": \"2020-04-21T18:00:46.694Z\",\n                \"snapshotFrequency\": \"$snapshotFrequency\",\n                \"isExpirationInformationUnavailable\": true\n              }\n            ],\n            \"cloudNativeLocationInfo\": [\n              {\n                \"id\": \"$id\",\n                \"name\": \"$name\",\n                \"isSnapshotPresent\": true,\n                \"isExpirationDateCalculated\": true,\n                \"expirationTime\": \"2020-04-21T18:00:46.694Z\",\n                \"snapshotFrequency\": \"$snapshotFrequency\",\n                \"isExpirationInformationUnavailable\": true\n              }\n            ]\n          },\n          \"filesetName\": \"$filesetName\",\n          \"fileCount\": 0,\n          \"snapdiffUsed\": true\n        }\n      ],\n      \"localStorage\": 0,\n      \"archiveStorage\": 0,\n      \"preBackupScript\": \"$preBackupScript\",\n      \"postBackupScript\": \"$postBackupScript\",\n      \"backupScriptTimeout\": 0,\n      \"backupScriptErrorHandling\": \"$backupScriptErrorHandling\"\n    }\n  ]\n}\n```\n\n### Update the parameters of an existing failover cluster app\nThe parameters associated with the failover cluster app can be updated by\nmaking a PATCH request to\n[/failover_cluster/failover_cluster_app/{id}](#operation/updateFailoverClusterApp)\n\nUse either the virtualIps or nodeOrders options in the failoverClusterAppSource request parameter to update a failover cluster app.\n\n```bash\ncurl -X PATCH \\\n  -d '{\n    \"name\": \"$name\",\n    \"failoverClusterType\": \"Windows\",\n    \"failoverClusterId\": \"$failoverClusterId\",\n    \"failoverClusterAppSource\": {\n      \"virtualIps\": [\n        \"$virtualIp\"\n      ],\n      \"nodeOrders\": [\n        {\n          \"nodeId\": \"$nodeId\",\n          \"nodeName\": \"$nodeName\",\n          \"order\": 0\n        }\n      ]\n    },\n    \"configuredSlaDomainId\": \"string\"}'\\\n  \"https://$cluster_address/api/v1/failover_cluster/failover_cluster_app/$failover_cluster_app_id\"\n```\n\nResponse when a failover cluster app is updated using the virtualIps option in the failoverClusterAppSource request parameter.\n\n```bash\n{\n  \"id\": \"$id\",\n  \"name\": \"$name\",\n  \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n  \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n  \"configuredSlaDomainType\": \"ProtectionSla\",\n  \"primaryClusterId\": \"$primaryClusterId\",\n  \"isConfiguredSlaDomainRetentionLocked\": true,\n  \"slaLastUpdateTime\": \"2020-04-21T18:24:20.126Z\",\n  \"effectiveSlaDomainId\": \"$effectiveSlaDomainId\",\n  \"effectiveSlaDomainName\": \"$effectiveSlaDomainName\",\n  \"isEffectiveSlaDomainRetentionLocked\": true,\n  \"effectiveSlaDomainPolarisManagedId\": \"$effectiveSlaDomainPolarisManagedId\",\n  \"effectiveSlaSourceObjectId\": \"$effectiveSlaSourceObjectId\",\n  \"effectiveSlaSourceObjectName\": \"$effectiveSlaSourceObjectName\",\n  \"failoverClusterType\": \"Windows\",\n  \"failoverClusterId\": \"$failoverClusterId\",\n  \"failoverClusterAppSource\": {\n    \"virtualIps\": [\n      \"$virtualIp\"\n    ],\n  },\n  \"connectionStatus\": \"Connected\",\n  \"slaAssignment\": \"Derived\",\n  \"operatingSystemType\": \"$operatingSystemType\",\n  \"failoverClusterName\": \"$failoverClusterName\"\n}\n```\n\nResponse when a failover cluster app is updated using the nodeOrders option in the failoverClusterAppSource request parameter.\n\n```bash\n{\n  \"id\": \"$id\",\n  \"name\": \"$name\",\n  \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n  \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n  \"configuredSlaDomainType\": \"ProtectionSla\",\n  \"primaryClusterId\": \"$primaryClusterId\",\n  \"isConfiguredSlaDomainRetentionLocked\": true,\n  \"slaLastUpdateTime\": \"2020-04-21T18:24:20.126Z\",\n  \"effectiveSlaDomainId\": \"$effectiveSlaDomainId\",\n  \"effectiveSlaDomainName\": \"$effectiveSlaDomainName\",\n  \"isEffectiveSlaDomainRetentionLocked\": true,\n  \"effectiveSlaDomainPolarisManagedId\": \"$effectiveSlaDomainPolarisManagedId\",\n  \"effectiveSlaSourceObjectId\": \"$effectiveSlaSourceObjectId\",\n  \"effectiveSlaSourceObjectName\": \"$effectiveSlaSourceObjectName\",\n  \"failoverClusterType\": \"Windows\",\n  \"failoverClusterId\": \"$failoverClusterId\",\n  \"failoverClusterAppSource\": {\n    \"nodeOrders\": [\n      {\n        \"nodeId\": \"$nodeId\",\n        \"nodeName\": \"$nodeName\",\n        \"order\": 0\n      }\n    ]\n  },\n  \"connectionStatus\": \"Connected\",\n  \"slaAssignment\": \"Derived\",\n  \"operatingSystemType\": \"$operatingSystemType\",\n  \"failoverClusterName\": \"$failoverClusterName\"\n}\n```\n\n### Delete a specific failover cluster app\nRemove any failover cluster app by issuing a DELETE request to\n[/failover_cluster/failover_cluster_app/{id}](#operation/deleteFailoverClusterApp).\n\n```bash\ncurl -X DELETE \\\n  \"https://$cluster_address/api/v1/failover_cluster/failover_cluster_app/$failover_cluster_app_id?preserve_snapshots=false\"\n```\n\n### Bulk delete a failover cluster apps\nSpecify a list of failover cluster applications to remove by issuing a DELETE\nrequest to [/failover_cluster/failover_cluster_app//bulk](#operation/bulkDeleteFailoverClusterApp).\n\n```bash\ncurl -X DELETE \\\n  \"https://$cluster_address/api/v1/failover_cluster/failover_cluster_app/bulk?ids=$failover_cluster_app_id1,$failover_cluster_app_id2&preserve_snapshots=false\"\n```\n\n# Failover cluster hierarchy\n\nThis REST API is used to get failover cluster hierarchy objects.\n\n### Get summary of a hierarchy object\nGet a summary of a hierarchy object by making a GET call to\n[/failover_cluster/hierarchy/{id}](#operation/getFailoverClusterHierarchyObject).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/failover_cluster/hierarchy/$failover_cluster_app_id\"\n```\n\n```bash\n{\n  \"id\": \"$id\",\n  \"name\": \"$name\",\n  \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n  \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n  \"configuredSlaDomainType\": \"ProtectionSla\",\n  \"primaryClusterId\": \"$primaryClusterId\",\n  \"isConfiguredSlaDomainRetentionLocked\": false,\n  \"effectiveSlaDomainId\": \"$effectiveSlaDomainId\",\n  \"effectiveSlaDomainName\": \"$effectiveSlaDomainName\",\n  \"isEffectiveSlaDomainRetentionLocked\": false,\n  \"effectiveSlaSourceObjectId\": \"Global:::All\",\n  \"objectType\": \"FailoverClusterApp\",\n  \"descendentCount\": {\n    \"failoverCluster\": 0,\n    \"failoverClusterApp\": 0,\n    \"fileset\": 1\n  },\n  \"isDeleted\": false,\n  \"numNodes\": 0,\n  \"failoverClusterType\": \"UnixLike\",\n  \"failoverClusterAppConnectionStatus\": \"Connected\",\n  \"failoverClusterAppName\": \"$failoverClusterAppName\",\n  \"failoverClusterAppSource\": {\n    \"virtualIps\": [\n      \"$virtualIp\"\n    ]\n  },\n  \"slaAssignment\": \"$slaAssignment\",\n  \"filesets\": [\n    {\n      \"allowBackupNetworkMounts\": false,\n      \"allowBackupHiddenFoldersInNetworkMounts\": false,\n      \"useWindowsVss\": false,\n      \"id\": \"$id\",\n      \"name\": \"$name\",\n      \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n      \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n      \"configuredSlaDomainType\": \"ProtectionSla\",\n      \"primaryClusterId\": \"$primaryClusterId\",\n      \"isConfiguredSlaDomainRetentionLocked\": false,\n      \"hostName\": \"$hostName\",\n      \"templateId\": \"$templateId\",\n      \"templateName\": \"$templateName\",\n      \"operatingSystemType\": \"UnixLike\",\n      \"effectiveSlaDomainId\": \"$effectiveSlaDomainId\",\n      \"isEffectiveSlaDomainRetentionLocked\": false,\n      \"includes\": [\n        \"$includes\"\n      ],\n      \"excludes\": [],\n      \"exceptions\": [],\n      \"isRelic\": false,\n      \"isPassthrough\": false,\n      \"enableSymlinkResolution\": false,\n      \"enableHardlinkSupport\": false,\n      \"failoverClusterAppId\": \"$failoverClusterAppId\",\n      \"failoverClusterAppName\": \"$failoverClusterAppName\"\n    }\n  ]\n}\n```\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/failover_cluster/hierarchy/$failover_cluster_id\"\n```\n\n```bash\n{\n  \"id\": \"$id\",\n  \"name\": \"$name\",\n  \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n  \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n  \"configuredSlaDomainType\": \"ProtectionSla\",\n  \"primaryClusterId\": \"$primaryClusterId\",\n  \"isConfiguredSlaDomainRetentionLocked\": false,\n  \"effectiveSlaDomainId\": \"$effectiveSlaDomainId\",\n  \"effectiveSlaDomainName\": \"$effectiveSlaDomainName\",\n  \"isEffectiveSlaDomainRetentionLocked\": false,\n  \"effectiveSlaSourceObjectId\": \"Global:::All\",\n  \"objectType\": \"HostFailoverCluster\",\n  \"descendentCount\": {\n    \"failoverCluster\": 0,\n    \"failoverClusterApp\": 1,\n    \"fileset\": 1\n  },\n  \"isDeleted\": false,\n  \"numNodes\": 2,\n  \"nodes\": [\n    {\n      \"id\": \"$id\",\n      \"name\": \"$name\",\n      \"connectionStatus\": \"Connected\",\n      \"operatingSystem\": \"$operatingSystem\"\n    },\n    {\n      \"id\": \"$id\",\n      \"name\": \"$name\",\n      \"connectionStatus\": \"Connected\",\n      \"operatingSystem\": \"$operatingSystem\"\n    }\n  ],\n  \"failoverClusterConnectionStatus\": \"Connected\",\n  \"failoverClusterName\": \"$failoverClusterName\",\n  \"numFailoverClusterApps\": 1,\n  \"slaAssignment\": \"$slaAssignment\",\n  \"operatingSystemType\": \"$operatingSystemType\"\n}\n```\n\n### Get list of immediate descendant objects\nGet a list of immediate descendant objects using a GET request to\n[/failover_cluster/hierarchy/{id}/children](#operation/getFailoverClusterHierarchyChildren).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/failover_cluster/hierarchy/root/children\"\n```\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"id\": \"$id\",\n      \"name\": \"$name\",\n      \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n      \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n      \"configuredSlaDomainType\": \"ProtectionSla\",\n      \"primaryClusterId\": \"$primaryClusterId\",\n      \"isConfiguredSlaDomainRetentionLocked\": false,\n      \"effectiveSlaDomainId\": \"$effectiveSlaDomainId\",\n      \"effectiveSlaDomainName\": \"$effectiveSlaDomainName\",\n      \"isEffectiveSlaDomainRetentionLocked\": false,\n      \"effectiveSlaSourceObjectId\": \"Global:::All\",\n      \"objectType\": \"HostFailoverCluster\",\n      \"descendentCount\": {\n        \"failoverCluster\": 0,\n        \"failoverClusterApp\": 1,\n        \"fileset\": 1\n      },\n      \"isDeleted\": false,\n      \"numNodes\": 2,\n      \"nodes\": [\n        {\n          \"id\": \"$id\",\n          \"name\": \"$name\",\n          \"connectionStatus\": \"Connected\",\n          \"operatingSystem\": \"$operatingSystem\"\n        },\n        {\n          \"id\": \"$id\",\n          \"name\": \"$name\",\n          \"connectionStatus\": \"Connected\",\n          \"operatingSystem\": \"$operatingSystem\"\n        }\n      ],\n      \"failoverClusterConnectionStatus\": \"Connected\",\n      \"failoverClusterName\": \"$failoverClusterName\",\n      \"numFailoverClusterApps\": $numFailoverClusterApps,\n      \"slaAssignment\": \"$slaAssignment\",\n      \"operatingSystemType\": \"$operatingSystemType\"\n    }\n  ],\n  \"total\": 1\n}\n```\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/failover_cluster/hierarchy/$failover_cluster_id/children\"\n```\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"id\": \"$id\",\n      \"name\": \"$name\",\n      \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n      \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n      \"configuredSlaDomainType\": \"ProtectionSla\",\n      \"primaryClusterId\": \"$primaryClusterId\",\n      \"isConfiguredSlaDomainRetentionLocked\": false,\n      \"effectiveSlaDomainId\": \"$effectiveSlaDomainId\",\n      \"effectiveSlaDomainName\": \"$effectiveSlaDomainName\",\n      \"isEffectiveSlaDomainRetentionLocked\": false,\n      \"effectiveSlaSourceObjectId\": \"Global:::All\",\n      \"objectType\": \"FailoverClusterApp\",\n      \"descendentCount\": {\n        \"failoverCluster\": 0,\n        \"failoverClusterApp\": 0,\n        \"fileset\": 1\n      },\n      \"isDeleted\": false,\n      \"numNodes\": 0,\n      \"failoverClusterType\": \"UnixLike\",\n      \"failoverClusterAppConnectionStatus\": \"Connected\",\n      \"failoverClusterAppName\": \"$failoverClusterAppName\",\n      \"failoverClusterAppSource\": {\n        \"virtualIps\": [\n          \"$virtualIp\"\n        ]\n      },\n      \"slaAssignment\": \"$slaAssignment\",\n      \"filesets\": [\n        {\n          \"allowBackupNetworkMounts\": false,\n          \"allowBackupHiddenFoldersInNetworkMounts\": false,\n          \"useWindowsVss\": false,\n          \"id\": \"$id\",\n          \"name\": \"$name\",\n          \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n          \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n          \"configuredSlaDomainType\": \"ProtectionSla\",\n          \"primaryClusterId\": \"$primaryClusterId\",\n          \"isConfiguredSlaDomainRetentionLocked\": false,\n          \"hostName\": \"$hostName\",\n          \"templateId\": \"$templateId\",\n          \"templateName\": \"$templateName\",\n          \"operatingSystemType\": \"UnixLike\",\n          \"effectiveSlaDomainId\": \"$effectiveSlaDomainId\",\n          \"isEffectiveSlaDomainRetentionLocked\": false,\n          \"includes\": [\n            \"$includes\"\n          ],\n          \"excludes\": [],\n          \"exceptions\": [],\n          \"isRelic\": false,\n          \"isPassthrough\": false,\n          \"enableSymlinkResolution\": false,\n          \"enableHardlinkSupport\": false,\n          \"failoverClusterAppId\": \"$failoverClusterAppId\",\n          \"failoverClusterAppName\": \"$failoverClusterAppName\"\n        }\n      ]\n    }\n  ],\n  \"total\": 1\n}\n```\n\n### Get list of descendant objects\nGet a list of descendant objects using\na GET request to\n[/failover_cluster/hierarchy/{id}/descendants](#operation/getFailoverClusterHierarchyDescendants).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/failover_cluster/hierarchy/$failover_cluster_id/descendants\"\n```\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"id\": \"$id\",\n      \"name\": \"$name\",\n      \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n      \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n      \"configuredSlaDomainType\": \"ProtectionSla\",\n      \"primaryClusterId\": \"$primaryClusterId\",\n      \"isConfiguredSlaDomainRetentionLocked\": false,\n      \"effectiveSlaDomainId\": \"$effectiveSlaDomainId\",\n      \"effectiveSlaDomainName\": \"$effectiveSlaDomainName\",\n      \"isEffectiveSlaDomainRetentionLocked\": false,\n      \"effectiveSlaSourceObjectId\": \"Global:::All\",\n      \"objectType\": \"FailoverClusterApp\",\n      \"descendentCount\": {\n        \"failoverCluster\": 0,\n        \"failoverClusterApp\": 0,\n        \"fileset\": 1\n      },\n      \"isDeleted\": false,\n      \"numNodes\": 0,\n      \"failoverClusterType\": \"UnixLike\",\n      \"failoverClusterAppConnectionStatus\": \"Connected\",\n      \"failoverClusterAppName\": \"$failoverClusterAppName\",\n      \"failoverClusterAppSource\": {\n        \"virtualIps\": [\n          \"$virtualIp\"\n        ]\n      },\n      \"slaAssignment\": \"$slaAssignment\",\n      \"filesets\": [\n        {\n          \"allowBackupNetworkMounts\": false,\n          \"allowBackupHiddenFoldersInNetworkMounts\": false,\n          \"useWindowsVss\": false,\n          \"id\": \"$id\",\n          \"name\": \"$name\",\n          \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n          \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n          \"configuredSlaDomainType\": \"ProtectionSla\",\n          \"primaryClusterId\": \"$primaryClusterId\",\n          \"isConfiguredSlaDomainRetentionLocked\": false,\n          \"hostName\": \"$hostName\",\n          \"templateId\": \"$templateId\",\n          \"templateName\": \"$templateName\",\n          \"operatingSystemType\": \"UnixLike\",\n          \"effectiveSlaDomainId\": \"$effectiveSlaDomainId\",\n          \"isEffectiveSlaDomainRetentionLocked\": false,\n          \"includes\": [\n            \"$includes\"\n          ],\n          \"excludes\": [],\n          \"exceptions\": [],\n          \"isRelic\": false,\n          \"isPassthrough\": false,\n          \"enableSymlinkResolution\": false,\n          \"enableHardlinkSupport\": false,\n          \"failoverClusterAppId\": \"$failoverClusterAppId\",\n          \"failoverClusterAppName\": \"$failoverClusterAppName\"\n        }\n      ]\n    },\n    {\n      \"id\": \"$id\",\n      \"name\": \"$name\",\n      \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n      \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n      \"configuredSlaDomainType\": \"ProtectionSla\",\n      \"primaryClusterId\": \"$primaryClusterId\",\n      \"isConfiguredSlaDomainRetentionLocked\": false,\n      \"effectiveSlaDomainId\": \"$effectiveSlaDomainId\",\n      \"effectiveSlaDomainName\": \"$effectiveSlaDomainName\",\n      \"isEffectiveSlaDomainRetentionLocked\": false,\n      \"effectiveSlaSourceObjectId\": \"$effectiveSlaSourceObjectId\",\n      \"effectiveSlaSourceObjectName\": \"$effectiveSlaSourceObjectName\",\n      \"objectType\": \"Fileset\",\n      \"descendentCount\": {\n        \"failoverCluster\": 0,\n        \"failoverClusterApp\": 0,\n        \"fileset\": 0\n      },\n      \"isDeleted\": false,\n      \"numNodes\": 0,\n      \"slaAssignment\": \"$slaAssignment\"\n    }\n  ],\n  \"total\": 2\n}\n```\n\n# Filesets\n\nA fileset defines a set of files and folders on a Linux, Unix, or\nWindows host, or on NAS shares. The Rubrik cluster uses the filesets\nthat are specified for a host or a NAS share to determine the data to\nprotect on that host or share.\n\nThe Rubrik cluster interprets a fileset based on the values provided in\nthe Include, Exclude, and Do Not Exclude arrays of the fileset template\nthat the fileset is based on. The Rubrik cluster uses the values of the\narrays to determine the files and folders in a fileset. The Do Not\nExclude array specifies objects that should not be excluded from the\nfileset by the values in the Exclude array.\n\n## Fileset workflow\nTo protect data through filesets perform the following tasks:\n1. Obtain and install the Rubrik Backup Service software on the host.\nThe *Rubrik CDM User Guide* describes this task.\n2. Add the host to the Rubrik cluster.\nThe [Hosts](#section/Hosts) section describes this task.\n3. Create a fileset template that defines a set of file system data to\nprotect.\nThe [Fileset templates](#fileset-templates) section describes this task.\n4. Use a fileset template to assign a fileset to a host.\n5. Assign the host fileset to an SLA Domain.\n\n## Fileset templates\nA fileset template encompasses a set of file system metadata that is\nneeded to define filesets. The metadata includes the file system\npaths on the host that need protection or paths that do not need\nprotection.\nThe metadata varies with the type of the host or the NAS share to\nwhich the template applies.\n\n### Retrieving fileset templates\nTo retrieve the current list of fileset templates, send a GET request to the\n[`/fileset_template`](#operation/queryFilesetTemplate) endpoint.\n\n```bash\ncurl -X GET \\\n\"https://$cluster_address/api/v1/fileset_template\"\n```\n\nThe Rubrik REST API server responds with a ListResponse object containing the\nfirst page of the current list of fileset templates.\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"allowBackupNetworkMounts\": false,\n      \"allowBackupHiddenFoldersInNetworkMounts\": false,\n      \"useWindowsVss\": false,\n      \"name\": \"$fileset_name\",\n      \"includes\": [\n        \"/users\"\n      ],\n      \"excludes\": [],\n      \"exceptions\": [],\n      \"operatingSystemType\": \"$os_type1\",\n      \"isArrayEnabled\": true,\n      \"id\": \"$fileset_template_id0\",\n      \"primaryClusterId\": \"$cluster_id\",\n      \"isArchived\": false,\n      \"hostCount\": 0,\n      \"shareCount\": 0\n    }\n   ],\n   \"total\": 1\n }\n```\n\nTo retrieve the details of a specific fileset template, send a GET request\nto the [`fileset_template/{id}`](#operation/getFilesetTemplate) endpoint.\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/fileset_template/$fileset_template_id0\"\n```\n\nThe Rubrik REST API server responds with the details of the fileset template\nidentified by the value of the `{id}` path parameter.\n\n### Creating a fileset template\nCreate a fileset template to simplify creating identical filesets for\nmultiple hosts.\n\nOperations for a fileset object are described in the\n[Fileset](#fileset) section.\n\nTo create a fileset-template, send a POST request to\n[`/fileset_template`](#operation/createFilesetTemplate) with the\nrequired details: `name`, `includes`, and `operatingSystemType`\nor `shareType`.\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"name\": \"Users\",\n    \"includes\": [\"C:\\\\Users\"],\n    \"operatingSystemType\": \"$os_type1\"\n    }' \\\n  \"https://$cluster_address/api/v1/fileset_template\"\n```\nTo create a fileset template for a specific type of NAS share, replace\n`operatingSystemType` with `shareType` in the above payload.\nFor example, `\"shareType\":\"NFS\"`.\n\nThe Rubrik REST API server responds with the new fileset template object.\n\n```bash\n{\n  \"allowBackupNetworkMounts\": true,\n  \"allowBackupHiddenFoldersInNetworkMounts\": true,\n  \"useWindowsVss\": true,\n  \"name\": \"Users\",\n  \"includes\": [\n    \"C:\\\\users\"\n  ],\n  \"excludes\": [],\n  \"exceptions\": [],\n  \"operatingSystemType\": \"$os_type1\",\n  \"isArrayEnabled\": false,\n  \"id\": \"$fileset_template_id1\",\n  \"primaryClusterId\": \"$cluster_id\",\n  \"isArchived\": false,\n  \"hostCount\": 0,\n  \"shareCount\": 0\n}\n```\n\n### Updating a fileset template\nTo modify the values of a specific fileset template, send a PATCH request\nto the [`/fileset_template/{id}`](#operation/updateFilesetTemplate)\nendpoint.\n\n```bash\ncurl -X PATCH \\\n  -d '{\n        \"id\": \"$fileset_template_id0\",\n        \"allowBackupNetworkMounts\": true\n     }' \\\n  \"https://$cluster_address/api/v1/fileset_template/$fileset_template_id0\"\n```\n\nThe Rubrik REST API server responds with the details of the updated\nfileset template.\n\n```bash\n{\n      \"allowBackupNetworkMounts\": true,\n      \"allowBackupHiddenFoldersInNetworkMounts\": false,\n      \"useWindowsVss\": false,\n      \"name\": \"$fileset_name\",\n      \"includes\": [\n        \"/users\"\n      ],\n      \"excludes\": [],\n      \"exceptions\": [],\n      \"operatingSystemType\": \"$os_type2\",\n      \"isArrayEnabled\": true,\n      \"id\": \"$fileset_template_id0\",\n      \"primaryClusterId\": \"$cluster_id\",\n      \"isArchived\": false,\n      \"hostCount\": 0,\n      \"shareCount\": 0\n    }\n```\n\n### Deleting a fileset template\nTo delete a specific fileset template and all the associated filesets,\nsend a DELETE request to the\n[`/fileset_template/{id}`](#operation/deleteFilesetTemplate) endpoint.\n\n```bash\ncurl -X DELETE \\\n  \"https://$cluster_address/api/v1/fileset_template/$fileset_template_id0\"\n```\n\n## Fileset\nA fileset is an instance of the fileset template that is assigned to a\nspecific host.\n\n### Retrieving filesets\nTo retrieve the current list of filesets, send a GET request to the\n[`/fileset`](#operation/queryFileset) endpoint.\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/fileset\"\n```\nThe Rubrik REST API server responds with a ListResponse object\ncontaining the first page of the current list of filesets.\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"allowBackupNetworkMounts\": true,\n      \"allowBackupHiddenFoldersInNetworkMounts\": true,\n      \"useWindowsVss\": true,\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"configuredSlaDomainId\": \"string\",\n      \"configuredSlaDomainName\": \"string\",\n      \"configuredSlaDomainType\": \"ProtectionSla\",\n      \"primaryClusterId\": \"string\",\n      \"isConfiguredSlaDomainRetentionLocked\": true,\n      \"slaLastUpdateTime\": \"2021-03-03T18:42:24.766Z\",\n      \"hostId\": \"string\",\n      \"shareId\": \"string\",\n      \"hostName\": \"string\",\n      \"templateId\": \"string\",\n      \"templateName\": \"string\",\n      \"operatingSystemType\": \"string\",\n      \"effectiveSlaDomainId\": \"string\",\n      \"isEffectiveSlaDomainRetentionLocked\": true,\n      \"effectiveSlaDomainName\": \"string\",\n      \"effectiveSlaDomainPolarisManagedId\": \"string\",\n      \"includes\": [\n        \"string\"\n      ],\n      \"excludes\": [\n        \"string\"\n      ],\n      \"exceptions\": [\n        \"string\"\n      ],\n      \"isRelic\": true,\n      \"arraySpec\": {\n        \"proxyHostId\": \"string\"\n      },\n      \"isPassthrough\": true,\n      \"enableSymlinkResolution\": true,\n      \"enableHardlinkSupport\": true,\n      \"failoverClusterAppId\": \"string\",\n      \"failoverClusterAppName\": \"string\",\n      \"pendingSlaDomain\": {\n        \"objectId\": \"string\",\n        \"pendingSlaDomainId\": \"string\",\n        \"pendingSlaDomainName\": \"string\",\n        \"isPendingSlaDomainRetentionLocked\": true\n      },\n      \"snapMirrorLabelForFullBackup\": \"string\",\n      \"snapMirrorLabelForIncrementalBackup\": \"string\"\n    }\n  ],\n  \"total\": 0\n}\n```\n\nTo retrieve the details of a specific fileset, send a GET request to the\n[`/fileset/{id}`](#operation/getFileset) endpoint.\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/fileset/$fileset_id\"\n```\n\nThe Rubrik REST API server responds with the details of the fileset\nidentified by the value of the {id} path parameter.\n\n### Creating a fileset\nTo create a fileset, send a POST request to [`/fileset`](#operation/createFileset) with the required details: the `hostId` or `shareId`, and\nthe `templateId`.\nSee [Retrieving fileset templates](#retrieving-fileset-templates) for\ninformation on obtaining a template ID, to create a fileset.\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"templateId\": \"$fileset_template_id\",\n    \"hostId\": \"$host_id\" }' \\\n  \"https://$cluster_address/api/v1/fileset\"\n```\nTo create a fileset for a NAS share, replace `hostId` with `shareId` in\nthe above payload.\nFor example, `\"shareId\": \"$share_id\"`.\n\nThe Rubrik REST API server responds with the new fileset object.\n\n```bash\n{\n  \"configuredSlaDomainId\": \"UNPROTECTED\",\n  \"forceFull\": false,\n  \"forceFullPartitionIds\": [],\n  \"allowBackupNetworkMounts\": true,\n  \"allowBackupHiddenFoldersInNetworkMounts\": false,\n  \"useWindowsVss\": false,\n  \"id\": \"$fileset_id\",\n  \"name\": \"$fileset_name\",\n  \"configuredSlaDomainName\": \"Unprotected\",\n  \"configuredSlaDomainType\": \"ProtectionSla\",\n  \"primaryClusterId\": \"$cluster_id\",\n  \"isConfiguredSlaDomainRetentionLocked\": false,\n  \"hostId\": \"$host_id\",\n  \"hostName\": \"$hostname\",\n  \"templateId\": \"$fileset_template_id\",\n  \"templateName\": \"$fileset_template_name\",\n  \"operatingSystemType\": \"UnixLike\",\n  \"effectiveSlaDomainId\": \"UNPROTECTED\",\n  \"isEffectiveSlaDomainRetentionLocked\": false,\n  \"effectiveSlaDomainName\": \"Unprotected\",\n  \"includes\": [\n    \"$location_to_protect\"\n  ],\n  \"excludes\": [],\n  \"exceptions\": [],\n  \"isRelic\": false,\n  \"isPassthrough\": false,\n  \"enableSymlinkResolution\": false,\n  \"enableHardlinkSupport\": false,\n  \"snapshotCount\": 0,\n  \"archivedSnapshotCount\": 0,\n  \"snapshots\": []\n}\n```\n### Updating a fileset\nTo update the values of a specific fileset, send a PATCH request to the\n[`/fileset/{id}`](#operation/updateFileset) endpoint. The request\npayload includes the properties to be updated.\n\n```bash\ncurl -X PATCH \\\n  -d '{\n           \"configuredSlaDomainId\": \"string\",\n           \"forceFull\": true,\n           \"forceFullPartitionIds\": [\n                       0\n            ],\n            \"snapMirrorLabelForFullBackup\": \"string\",\n            \"snapMirrorLabelForIncrementalBackup\": \"string\"\n       }' \\\n  \"https://$cluster_address/api/v1/fileset/$fileset_id\"\n```\n\nThe Rubrik REST API server responds with the details of the updated\nfileset.\n\n### Deleting a fileset\nTo delete a specific fileset, send a DELETE request to the\n[`/fileset/{id}`](#operation/deleteFileset) endpoint. \nBy default, the Rubrik cluster preserves the snapshots of the fileset to\nbe deleted.\n\n```bash\ncurl -X DELETE \\\n  \"https://$cluster_address/api/v1/fileset/$fileset_id\"\n```\nTo delete the snapshots of the fileset along with the fileset, set the\n`preserve_snapshots` query parameter to `false` in the DELETE\nrequest.\n\n```bash\ncurl -X DELETE \\\n\"https://$cluster_address/api/v1/fileset/$fileset_id?preserve_snapshots=false\"\n```\nThe Rubrik REST API server deletes the specified fileset and the\nsnapshots associated with the fileset.\n\n## On-demand backups of host filesets\n### Creating on-demand snapshot\nTo initiate an on-demand snapshot of a fileset, send a POST request to\nthe [`/fileset/{id}/snapshot`](#operation/createFilesetBackupJob)\nendpoint.\n\n```bash\ncurl -X POST \\\n  \"https://$cluster_address/api/v1/fileset/$fileset_id/snapshot\"\n```\n\nThe Rubrik REST API responds with the ID for the on-demand snapshot\nrequest along with other details about the request, like the status and\nthe time at which the request was received.\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"status\": \"QUEUED\",\n  \"progress\": 0,\n  \"startTime\": \"2021-03-04T20:07:55.169Z\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/fileset/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n### Retrieving snapshot ID\nTo retrieve the snapshot ID, retrieve the status of the on-demand\nsnapshot request by sending a GET request to the\n[`/fileset/request/{id}`](#operation/getFilesetAsyncRequestStatus)\nendpoint.\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/fileset/request/$request_id\"\n```\n\nThe Rubrik REST API server responds with the status of the on-demand\nsnapshot request. If the snapshot has completed successfully, the\nresponse includes the ID for the snapshot in the reference link to the\nsnapshot.\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"status\": \"SUCCEEDED\",\n  \"startTime\": \"2021-03-04T20:07:55.169Z\",\n  \"endTime\": \"2021-03-04T20:12:54.792Z\",\n  \"nodeId\": \"$node_id\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/fileset/$snapshot_id/snapshot\",\n      \"rel\": \"result\"\n    },\n    {\n      \"href\": \"https://$cluster_address/api/v1/fileset/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\n### Retrieving snapshot details\nTo retrieve information about a specific snapshot, send a GET request to\nthe [`/fileset/snapshot/{id}`](#operation/getFilesetSnapshot) endpoint.\nBy default, the flag to return verbose information about the fileset is set to `false`. Change the value of the `verbose` flag to `true` to get\ndetailed information about the fileset.\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/fileset/snapshot/$snapshot_id?verbose=false\"\n```\nThe Rubrik REST API responds with the details of the specified fileset snapshot.\n\n```bash\n{\n  \"id\": \"$snapshot_id\",\n  \"date\": \"2021-03-04T20:08:00.000Z\",\n  \"sourceObjectType\": \"Fileset\",\n  \"isOnDemandSnapshot\": true,\n  \"isCustomRetentionApplied\": false,\n  \"cloudState\": 0,\n  \"indexState\": 1,\n  \"replicationLocationIds\": [],\n  \"archivalLocationIds\": [],\n  \"slaId\": \"UNPROTECTED\",\n  \"slaName\": \"Unprotected\",\n  \"isRetainedByRetentionLockSla\": false,\n  \"isPlacedOnLegalHold\": false,\n  \"snapshotRetentionInfo\": {\n    \"localInfo\": {\n      \"id\": \"$cluster_id\",\n      \"name\": \"LOCAL\",\n      \"isSnapshotPresent\": true,\n      \"isExpirationDateCalculated\": true,\n      \"snapshotFrequency\": \"Forever\"\n    },\n    \"archivalInfos\": [],\n    \"replicationInfos\": [],\n    \"cloudNativeLocationInfo\": []\n  },\n  \"filesetName\": \"$fileset_name\",\n  \"fileCount\": 10,\n  \"lastModified\": \"2021-02-24T14:13:33+0000\",\n  \"size\": 23572\n}\n```\n\n### Deleting fileset snapshots\nTo delete a specific fileset snapshot, send a DELETE request to the\n[`/fileset/snapshot/{id}`](#operation/deleteFilesetSnapshot) endpoint,\nwhere `{id}` is the ID of the snapshot.\n\n```bash\ncurl -X DELETE \\\n  \"https://$cluster_address/api/v1/fileset/snapshot/$snapshot_id\"\n```\nThe Rubrik REST API deletes the specified fileset snapshot.\n\nTo delete all the snapshots of a specific fileset, send a DELETE request\nto the [`/fileset/{id}/snapshot`](#operation/deleteFilesetSnapshots)\nendpoint, where `{id}` is the ID of the fileset.\n\n```bash\ncurl -X DELETE \"https://$cluster_address/api/v1/fileset/$fileset_id/snapshot\"\n```\nThe Rubrik REST API deletes all the snapshots of the specified fileset.\n\n## SLA Domain protection of host filesets\n\nTo assign an SLA to a fileset, send a PATCH request to the\n[`/fileset/{id}`](#operation/updateFileset) endpoint.\n\n```bash\ncurl -X PATCH \\\n  -d '{ \n    \"configuredSlaDomainId\": \"$sla_domain_id\" }' \\\n  \"https://$cluster_address/api/v1/fileset/$fileset_id\"\n```\nThe Rubrik REST API server responds with the details of the updated\nfileset.\n\n```bash\n{\n  \"id\": \"$fileset_id\",\n  \"excludes\": [],\n  \"operatingSystemType\": \"Windows\",\n  \"includes\": [\n    \"C:\\\\Users\"\n  ],\n  \"hostId\": \"$host_id\",\n  \"templateId\": \"$fileset_template_id\",\n  \"configuredSlaDomainId\": \"$sla_domain_id\"\n}\n```\n\n### Retrieving missed snapshots\nTo retrieve the details of snapshots that were missed for a fileset,\nsend a GET request to the [`/fileset/{id}/missed_snapshot`](#operation/getMissedFilesetSnapshots) endpoint.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/fileset/$fileset_id/missed_snapshot\"\n```\nThe Rubrik REST API server responds with the details of snapshots\nthat were missed, for the specified fileset.\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"archivalLocationType\": [\n        \"LOCAL\"\n      ],\n      \"missedSnapshotTime\": \"2021-03-04T07:59:59.999Z\",\n      \"missedSnapshotTimeUnits\": [\n        {\n          \"timeUnit\": \"Daily\",\n          \"frequency\": 1,\n          \"retention\": 2\n        }\n      ]\n    }\n  ],\n  \"total\": 1\n}\n```\n\n## Search & Recovery\n### Searching at fileset-level\nTo search for specific file within a fileset, send a GET request to the\n[`/fileset/{id}/search`](#operation/searchFileset) endpoint. Specify\na path prefix or a filename prefix in the `path` query parameter.\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/fileset/$fileset_id/search?path=$path\"\n```\n\nThe Rubrik REST API server responds with the details of the files that\nmatch the search query.\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"path\": \"$path_to_file\",\n      \"filename\": \"$filename\",\n      \"fileVersions\": [\n        {\n          \"snapshotId\": \"$snapshot_id\",\n          \"lastModified\": \"2014-07-17T02:02:54+0000\",\n          \"size\": 533120,\n          \"fileMode\": \"file\",\n          \"source\": \"cloud\"\n        }\n      ]\n    }\n  ],\n  \"total\": 1\n}\n```\n### Searching at host-level\nTo search for specific file at the host-level, send a GET request to the\n[`/host/{id}/search`](#operation/searchHost) endpoint. Specify\na path prefix or a filename prefix in the `path` query parameter.\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/host/$host_id/search?path=$path\"\n```\n\nThe Rubrik REST API server responds with the details of the files that\nmatch the search query.\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"path\": \"$path_to_file\",\n      \"filename\": \"$filename\",\n      \"fileVersions\": [\n        {\n          \"snapshotId\": \"$snapshot_id\",\n          \"lastModified\": \"2014-07-17T02:02:54+0000\",\n          \"size\": 533120,\n          \"fileMode\": \"file\",\n          \"source\": \"cloud\"\n        }\n      ]\n    }\n  ],\n  \"total\": 1\n}\n```\n\n### Browsing files in a snapshot\nTo list all files and folders within a snapshot, send a GET request to the\n[`/fileset/snapshot/{id}/browse`](#operation/browseFilesetSnapshot)\nendpoint.\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/fileset/snapshot/$snapshot_id/browse?path=$absolute_file_path\"\n```\n\nThe Rubrik REST API server responds with the details of all the files\nand folders available at the specified path in the snapshot.\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"filename\": \"$filename\",\n      \"path\": \"$path_relative_to_absolute_file_path\",\n      \"lastModified\": \"2016-12-01T23:26:59+0000\",\n      \"size\": 529024,\n      \"fileMode\": \"file\",\n      \"statusMessage\": \"\"\n    }\n  ],\n  \"total\": 1\n}\n```\n### Download options\nThere are two options for downloading the files of a fileset snapshot:\ndownload the entire snapshot or download specific files from the\nsnapshot.\n\nTo download the entire snapshot from an archival location, send a\nPOST request to the\n[`/fileset/snapshot/{id}/download`](#operation/createDownloadFilesetSnapshotFromCloud) endpoint.\n\n\n```bash\ncurl -X POST \\\n  \"https://$cluster_address/api/v1/fileset/snapshot/$snapshot_id/download\"\n```\n\nTo download files from a specific location in a snapshot, send a POST\nrequest to the [`/fileset/snapshot/{id}/download_file`](#operation/createFilesetDownloadFileJob) endpoint.\n\n```bash\ncurl -X POST -d \\\n'{\n    \"sourceDir\": \"$path_to_download_from\"\n }' \\\n  \"https://$cluster_address/api/v1/fileset/snapshot/$snapshot_id/download_file\"\n```\n\nThe Rubrik REST API server initiates an async download job and returns\na job instance ID.\n\n```bash\n{\n  \"id\": \"$job_instance_id\",\n  \"status\": \"QUEUED\",\n  \"progress\": 0,\n  \"startTime\": \"2021-03-05T18:19:27.584Z\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address//api/v1/fileset/request/$job_instance_id\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\nTo retrieve the download location, send a GET request to the\n[`fileset/request/{id}`](#operation/getFilesetAsyncRequestStatus) endpoint where, `{id}` is the `$job_instance_id`.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/fileset/request/$job_instance_id\"\n```\n\nThe Rubrik REST API server responds with the status of the download\njob. The response includes a download link when the job completes\nsuccessfully.\n\n```bash\n{\n  \"id\": \"$job_instance_id\",\n  \"status\": \"SUCCEEDED\",\n  \"startTime\": \"2021-03-05T18:01:43.755Z\",\n  \"endTime\": \"2021-03-05T18:02:48.481Z\",\n  \"nodeId\": \"$node_id\",\n  \"links\": [\n    {\n      \"href\": \"$download_url\",\n      \"rel\": \"result\"\n    },\n    {\n      \"href\": \"https://$cluster_address/api/v1/fileset/request/$job_instance_id\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\n### Recovery options\nTo restore files from a fileset snapshot on to the source host, send a\nPOST request to the [`/fileset/snapshot/{id}/restore_file`](#operation/createFilesetRestoreFileJob) endpoint.\n\n```bash\ncurl -X POST -d \\\n  '{\n    \"sourceDir\": \"$source_of_restore\",\n    \"destinationDir\": \"$destination_of_restore\"\n  }' \\\n  \"https://$cluster_address/api/v1/fileset/snapshot/$snapshot_id/restore_file\"\n```\n\nTo restore files from a fileset snapshot on to a host other than the\nsource host, send a POST request to the [`/fileset/snapshot/{id}/export_file`](#operation/createFilesetExportFileJob).\n\n```bash\ncurl -X POST -d \\\n  '{\n    \"sourceDir\": \"$source_of_restore\",\n    \"destinationDir\": \"$destination_of_restore\",\n    \"hostId\": \"$destination_host_id\"\n  }' \\\n  \"https://$cluster_address/api/v1/fileset/snapshot/$snapshot_id/export_file\"\n```\n\nThe Rubrik REST API server initiates an async restore job and returns\na job instance ID.\n\n```bash\n{\n  \"id\": \"$job_instance_id\",\n  \"status\": \"QUEUED\",\n  \"progress\": 0,\n  \"startTime\": \"2021-03-05T18:19:27.584Z\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address//api/v1/fileset/request/$job_instance_id\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\nTo check the progress of the request, send a GET request to the\n[`fileset/request/{id}`](#operation/getFilesetAsyncRequestStatus) endpoint where, `{id}` is the `$job_instance_id`.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/fileset/request/$job_instance_id\"\n```\n\nThe Rubrik REST API server responds with the status of the restore\njob.\n\n```bash\n{\n  \"id\": \"$job_instance_id\",\n  \"status\": \"SUCCEEDED\",\n  \"startTime\": \"2021-03-05T18:01:43.755Z\",\n  \"endTime\": \"2021-03-05T18:02:48.481Z\",\n  \"nodeId\": \"$node_id\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/fileset/request/$job_instance_id\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\n#  host hierarchy\n\nThis REST API is used to get host/share hierarchy objects.\n\n### Get summary of a hierarchy object\nGet a summary of a hierarchy object by making a GET call to\n[/host/hierarchy/{id}]\\\n(#operation/getHostHierarchyObject).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/host/hierarchy/{id}\"\n```\n\nThe Rubrik REST API server returns a host hierarchy object contains the ID,\nobjectType, status, descendantCount, primaryClusterId, name, alias,\noperatingSystem, operatingSystemType shareType, vendorType, hostId, exportPoint,\nfilesets and isSnapdiff.\n\n### Get list of immediate descendant objects\nGet a list of immediate descendant objects using a GET request to\n[/host/hierarchy/{id}/children]\\\n(#operation/getHostHierarchyChildren).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/host/hierarchy/{id}/children\"\n```\n\nThe Rubrik REST API server returns a list of host hierarchy objects.\n\n# Directories\n\nA HDFS directory defines a set of files and folders on a HDFS cluster.  The Rubrik cluster uses the directorys that are assigned to a HDFS cluster to determine the data to protect on that cluster.\n\nThe Rubrik cluster interprets a directory based on the values provided in the\nInclude, Exclude, and Do Not Exclude arrays. The Rubrik cluster applies a\nset of rules to the values provided in these arrays and permits several\ntypes of values to be added to the arrays. The Do Not Exclude array specifies objects that should not be excluded from the directory by the values in the Exclude array.\n\n## Directory workflow\nThe basic workflow to follow when using directorys to protect data in host file systems is:\n1. Obtain and install the Rubrik Backup Service software on the HDFS cluster.\nThe Rubrik user guide describes this task.\n2. Add the HDFS cluster to the Rubrik cluster.\nThe [Hosts](#section/Hosts) section describes this task.\n3. Create a directory template that defines a set of file system data to protect.\n4. Use a directory template to assign a directory to a host.\n5. Assign the host directory to an SLA Domain.\n\n## Directory templates\n\nFirst, create a directory template.\nA directory template can be used to create directory instances for various HDFS clusters.\nPerforming a POST on [`/hdfs_template`](#operation/createHdfsTemplate)  with the necessary details will create a directory template.\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"name\": \"Users\",\n    \"includes\": [\"/Users\"]}' \\\n  \"https://$cluster_address/api/v1/hdfs_template\"\n```\n\n```bash\n{\n  \"id\": \"$directory_template_id\",\n  \"name\": \"Users\",\n  \"excludes\": [],\n  \"includes\": [\n    \"/Users\"\n  ]\n}\n```\n\nTo get the details of a directory template, use GET on the [`/hdfs_template/{id}`](#operation/getHdfsTemplate) endpoint.\n\n```bash\ncurl -X GET \\\n  -d '{\n    \"id\": \"$directory_template_id\" }' \\\n  \"https://$cluster_address/api/v1/hdfs_template\"\n```\n\n```bash\n{\n  \"id\": \"$host_id\",\n  \"hostname\": \"$hostname\",\n  \"status\": \"Connected\"\n}\n```\n\nTo get the current list of all directory templates matching a query, use GET on the [`/hdfs_template`](#operation/queryHdfsTemplate) endpoint.\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"hostname\": \"$hostname\" }' \\\n  \"https://$cluster_address/api/v1/hdfs_template\"\n```\n\n```bash\n{\n  \"id\": \"$host_id\",\n  \"hostname\": \"$hostname\",\n  \"status\": \"Connected\"\n}\n```\n\nModify with PATCH on the [`/hdfs_template/{id}`](#operation/updateHdfsTemplate) endpoint.\n\n```bash\ncurl -X PATCH \\\n  -d '{\n    \"id\": \"$directory_template_id\" }' \\\n  \"https://$cluster_address/api/v1/hdfs_template\"\n```\n\n```bash\n{\n  \"id\": \"$host_id\",\n  \"hostname\": \"$hostname\",\n  \"status\": \"Connected\"\n}\n```\n\nDelete with the [`/hdfs_template/{id}`](#operation/deleteHdfsTemplate) endpoint.\n\n```bash\ncurl -X DELETE \\\n  -d '{\n    \"id\": \"$directory_template_id\" }' \\\n  \"https://$cluster_address/api/v1/hdfs_template\"\n```\n## Directory\n\nCreate a directory using a directory template.\nThe directory is an instance of the template that is assigned to a specific HDFS cluster.\n\nTo get the current list of HDFS clusters, use GET on the [`/hdfs`](#operation/queryHdfs) endpoint.\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"hostname\": \"$hostname\" }' \\\n  \"https://$cluster_address/api/v1/hdfs\"\n```\n\n```bash\n{\n  \"id\": \"$host_id\",\n  \"hostname\": \"$hostname\",\n  \"status\": \"Connected\"\n}\n```\n\nTo get the current further details of HDFS clusters, use GET on the [`/hdfs/{id}`](#operation/getHdfs) endpoint.\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"hostname\": \"$hostname\" }' \\\n  \"https://$cluster_address/api/v1/hdfs\"\n```\n\n```bash\n{\n  \"id\": \"$host_id\",\n  \"hostname\": \"$hostname\",\n  \"status\": \"Connected\"\n}\n```\n\nA directory can be created with a POST on [`/hdfs`](#operation/createHdfs).\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"templateId\": \"$directory_template_id\",\n    \"hostId\": \"$host_id\" }' \\\n  \"https://$cluster_address/api/v1/hdfs\"\n```\n\n```bash\n{\n  \"id\": \"$directory_id\",\n  \"excludes\": [],\n  \"includes\": [\n    \"/Users\"\n  ],\n  \"hostId\": \"$host_id\",\n  \"templateId\": \"$directory_template_id\",\n  \"configuredSlaDomainId\": \"UNPROTECTED\"\n}\n```\n\nA directory can be deleted with a DELETE on [`/hdfs`](#operation/deleteHdfs).\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"templateId\": \"directory_template_id\",\n    \"hostId\": \"$host_id\" }' \\\n  \"https://$cluster_address/api/v1/hdfs\"\n```\n\n```bash\n{\n  \"id\": \"$directory_id\",\n  \"excludes\": [],\n  \"includes\": [\n    \"/Users\"\n  ],\n  \"hostId\": \"$host_id\",\n  \"templateId\": \"$directory_template_id\",\n  \"configuredSlaDomainId\": \"UNPROTECTED\"\n}\n```\n## On demand backups of HDFS cluster directorys\n\nTo create an on-demand snapshot, use POST on [`/hdfs/{id}/snapshot`](#operation/createHdfsBackupJob).\n\n```bash\ncurl -X POST \\\n  \"https://$cluster_address/api/v1/hdfs/$directory_id/snapshot\"\n```\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/hdfs/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"status\": \"QUEUED\"\n}\n```\n\nAfter taking a snapshot, retrieve the `$snapshot_id` by querying [`/hdfs/request`](#operation/getHdfsAsyncRequestStatus).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/hdfs/request/$request_id\"\n```\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/hdfs/snapshot/$snapshot_id\",\n      \"rel\": \"result\"\n    },\n    {\n      \"href\": \"https://$cluster_address/api/v1/hdfs/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"status\": \"SUCCEEDED\"\n}\n```\n\n\nAfter taking a snapshot, retrieve the `$snapshot_id` from the request.\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/hdfs/request/$request_id\"\n```\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/hdfs/snapshot/$snapshot_id\",\n      \"rel\": \"result\"\n    },\n    {\n      \"href\": \"https://$cluster_address/api/v1/hdfs/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"status\": \"SUCCEEDED\"\n}\n```\n\nFor more information about a specific snapshot, send a GET request to\nthe [`/hdfs/snapshot/{id}`](#operation/getHdfsSnapshot) endpoint.\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/hdfs/snapshot/$snapshot_id\"\n```\n\n```bash\n{\n  \"id\": \"$snapshot_id\"\n  \"date\": <timestamp1>,\n  \"expirationDate\": <timestamp2>,\n  \"sourceObjectType\": \"Hdfs\",\n  \"isOnDemandSnapshot\": true,\n  \"cloudState\": 2,\n  \"consistencyLevel\": \"none\",\n  \"indexState\": 1,\n  \"replicationLocationIds\": [\n    \"$replication_location_id\"\n  ],\n  \"archivalLocationIds\": [\n    \"$archival_location_id\"\n  ],\n  \"slaId\": \"$sla_id\",\n  \"slaName\": \"sla\",\n  \"directoryName\": \"directory\",\n  \"fileCount\": 10,\n  \"lastModified\": <timestamp3>,\n  \"size\": 533120\n}\n```\n\nTo delete a specific snapshot, send a DELETE request to the\n[`/hdfs/snapshot/{id}`](#operation/deleteHdfsSnapshot) endpoint,\nwhere `{id}` is the ID of the snapshot.\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/hdfs/snapshot/$snapshot_id\"\n```\n\n```bash\n{\n}\n```\n\nDelete all snapshots for a specific HDFS cluster with a DELETE on [`/hdfs/{id}/snapshot`](#operation/deleteHdfsSnapshots).\n\n```bash\ncurl -X DELETE \"https://$cluster_address/api/v1/hdfs/$id/snapshot\"\n```\n## SLA Domain protection of host directorys\n\nAssign a directory to an SLA with a PATCH [`/hdfs/{id}`](#operation/updateHdfs).\n\n```bash\ncurl -X PATCH \\\n  -d '{\n    \"configuredSlaDomainId\": \"$sla_domain_id\" }' \\\n  \"https://$cluster_address/api/v1/hdfs/$directory_id\"\n```\n\n```bash\n{\n  \"id\": \"$directory_id\",\n  \"excludes\": [],\n  \"includes\": [\n    \"/Users\"\n  ],\n  \"hostId\": \"$host_id\",\n  \"templateId\": \"$directory_template_id\",\n  \"configuredSlaDomainId\": \"$sla_domain_id\"\n}\n```\n\nList missed snapshots with a GET on [`/hdfs/{id}/missed_snapshot`](#operation/getMissedHdfsSnapshots).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/hdfs/$id/missed_snapshot\"\n```\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"missedSnapshotTime\": \"2000-01-02T11:08:40.420Z\"\n    }\n  ],\n  \"total\": 1\n}\n```\n\n## Search & Recovery\n\nOnce snapshots have been taken, they can be used to search for files and recover.\n\nFile search can be performed on a specific directory using its `$directory_id` with a GET on [`/hdfs/{id}/search`](#operation/searchHdfs) and specifying the file path with the `path` query parameter.\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/hdfs/$directory_id/search?path=home\"\n```\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"path\": \"/home\",\n      \"filename\": \"home\",\n      \"fileVersions\": [\n        {\n          \"snapshotId\": \"$snapshot_id\",\n          \"lastModified\": \"2014-07-17T02:02:54+0000\",\n          \"size\": 533120\n        }\n      ]\n    }\n  ],\n  \"total\": 1\n}\n```\n\nFiles within a snapshot can be browsed by using GET on [`/hdfs/snapshot/{id}/browse`](#operation/browseHdfsSnapshot).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/hdfs/snapshot/$snapshot_id/browse?path=%2Fhome&offset=0\"\n```\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"filename\": \"ubuntu\",\n      \"path\": \"ubuntu\",\n      \"lastModified\": \"2016-12-01T23:26:59+0000\",\n      \"size\": 529024,\n    }\n  ],\n  \"total\": 1\n}\n```\n\nFiles from a snapshot can also be restored to a host with POST on [`/hdfs/snapshot/{id}/restore_file`](#operation/createHdfsRestoreFileJob).\n\n```bash\ncurl -X POST -d \\\n  '{\n    \"sourceDir\": \"/foo.txt\",\n    \"destinationDir\": \"/bar.txt\"\n  }' \\\n  \"https://$cluster_address/api/v1/hdfs/snapshot/$snapshot_id/restore_file\"\n```\n\nFiles can also be restored to a different host with POST on [`/hdfs/snapshot/{id}/export_file`](#operation/createHdfsExportFileJob).\n\n```bash\ncurl -X POST -d \\\n  '{\n    \"sourceDir\": \"/foo.txt\",\n    \"destinationDir\": \"/bar.txt\",\n    \"hostId\": \"$host_id\"\n  }' \\\n  \"https://$cluster_address/api/v1/hdfs/snapshot/$snapshot_id/export_file\"\n```\n\n# SQL Server databases\n\nVersion 3.0 added support for Microsoft SQL backups.\nFirst add the hosts hosting the Microsoft SQL databases as specified in the [host protection](#section/Hosts) section.\nOnce the host has been added, instances and databases will be auto-discovered.\n\n## Instances\n\nMicrosoft SQL instances can be found by a GET on [`/mssql/instance`](#operation/queryMssqlInstance)\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/mssql/instance\"\n```\n\n```bash\n{\n  \"data\": [\n    {\n      \"id\": \"$instance_id\",\n      \"name\": \"$instance_name\",\n      \"configuredSlaDomainId\": \"INHERIT\",\n      \"configuredSlaDomainName\": \"Inherit\",\n      \"effectiveSlaDomainId\": \"INHERIT\",\n      \"effectiveSlaDomainName\": \"Inherit\"\n    }\n  ],\n  \"hasMore\": false,\n  \"total\": 1\n}\n```\n\nFurther details are acquired from [`/mssql/instance/{id}`](#operation/getMssqlInstance).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/mssql/instance/$instance_id\"\n```\n\n```bash\n{\n  \"data\": [\n    {\n      \"id\": \"$instance_id\",\n      \"name\": \"$instance_name\",\n      \"configuredSlaDomainId\": \"INHERIT\",\n      \"configuredSlaDomainName\": \"Inherit\",\n      \"effectiveSlaDomainId\": \"UNPROTECTED\",\n      \"effectiveSlaDomainName\": \"Unprotected\"\n    }\n  ],\n  \"hasMore\": false,\n  \"total\": 1\n}\n```\n\nThe Rubrik cluster auto-detects most fields of the Microsoft SQL instance. However, certain fields such as the `clusterInstanceAddress` can be overridden with a PATCH to [`/mssql/instance/{id}`](#operation/updateMssqlInstance).\n\n```bash\ncurl -X PATCH \\\n  -d '{\n    \"clusterInstanceAddress\": \"1.1.1.1\"\n  }' \\\n  \"https://$cluster_address/api/v1/mssql/instance/$instance_id\"\n```\n\n```bash\n{\n  \"data\": [\n    '{\n      \"id\": \"$instance_id\",\n      \"name\": \"$instance_name\",\n      \"configuredSlaDomainId\": \"INHERIT\",\n      \"configuredSlaDomainName\": \"Inherit\",\n      \"effectiveSlaDomainId\": \"UNPROTECTED\",\n      \"effectiveSlaDomainName\": \"Unprotected\",\n      \"clusterInstanceAddress\": \"1.1.1.1\"\n  }' \\\n    }\n  ],\n  \"hasMore\": false,\n  \"total\": 1\n}\n```\n\nThe total number of SQL Server Instances can be found by GET on\n[/mssql/instance/count](#operation/countMssqlInstanceV1).\n\n  ```bash\n  curl -X GET \"https://$cluster_address/api/v1/mssql/instance/count\"\n  ```\n\n  ```bash\n  {\n    \"count\": $total_number_of_instances\n  }\n  ```\n\n## Databases\n\nAll Microsoft SQL databases on an instance can be found with a GET on\n [`/mssql/db`](#operation/queryMssqlDb).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/mssql/db?instance_id=$instance_id\"\n```\n\n```bash\n{\n  \"data\": [\n    {\n      \"id\": \"$db_id\",\n      \"name\": \"$db_name\",\n      \"configuredSlaDomainId\": \"INHERIT\",\n      \"configuredSlaDomainName\": \"Inherit\",\n      \"effectiveSlaDomainId\": \"UNPROTECTED\",\n      \"effectiveSlaDomainName\": \"Unprotected\",\n      \"instanceId\": \"$instance_id\"\n      \"instanceName\": \"$instance_name\"\n    }\n  ],\n  \"hasMore\": false,\n  \"total\": 1\n}\n```\n\nFurther details are acquired from [`/mssql/db/{id}`](#operation/getMssqlDb).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/mssql/db/$db_id\"\n```\n\n```bash\n{\n  \"data\": [\n    {\n      \"id\": \"$db_id\",\n      \"name\": \"$db_name\",\n      \"configuredSlaDomainId\": \"INHERIT\",\n      \"configuredSlaDomainName\": \"Inherit\",\n      \"effectiveSlaDomainId\": \"UNPROTECTED\",\n      \"effectiveSlaDomainName\": \"Unprotected\",\n      \"instanceId\": \"$instance_id\"\n      \"instanceName\": \"$instance_name\"\n    }\n  ],\n  \"hasMore\": false,\n  \"total\": 1\n}\n```\n\nThe total number of SQL Server Databases can be found by GET on\n [/mssql/db/count](#operation/countMssqlDbV1).\n\n  ```bash\n  curl -X GET \"https://$cluster_address/api/v1/mssql/db/count?root_id=$host_id\"\n  ```\n\n  ```bash\n  {\n    \"numTotal\": 15,\n    \"numProtected\": 2,\n    \"numNoSla\": 0,\n    \"numDoNotProtect\": 13\n  }\n  ```\n\nSnappable Id of a SQL Server database can be found by GET on\n[/mssql/db/{id}/snappable_id](#operation/mssqlGetSnappableIdV1).\n\n  ```bash\n  curl -X GET \"https://$cluster_address/api/v1/mssql/db/$db_id/snappable_id\"\n  ```\n\n  ```bash\n  {\n    \"snappableId\": \"$snappable_id\"\n  }\n  ```\n\nThe properties of SQL Server database can be updated by PATCH on\n[/mssql/db/bulk](#operation/bulkUpdateMssqlDbV1).\n\n```bash\ncurl -X PATCH \"https://$cluster_address/api/v1/mssql/db/bulk\" -d\\\n'[\n  {\n      \"databaseId\": \"$db_id\",\n      \"updateProperties\": {\n         \"logBackupFrequencyInSeconds\": 2000,\n         \"logRetentionHours\": 180,\n         \"copyOnly\": true,\n         \"maxDataStreams\": 8,\n         \"isPaused\": true,\n         \"shouldForceFull\": true\n   }\n }\n]'\n```\n\n```bash\n[\n  {\n    \"id\": \"MssqlDatabase:::5d1da757-95d0-4740-9851-53c25c3dda2d\",\n    \"name\": \"simple_rec\",\n    \"configuredSlaDomainId\": \"ea82adf1-fa12-4b33-89af-9c2a08802a5d\",\n    \"configuredSlaDomainName\": \"Gold\",\n    \"configuredSlaDomainType\": \"ProtectionSla\",\n    \"primaryClusterId\": \"977dbc71-8137-4de5-be23-67251f0b63c1\",\n    \"isConfiguredSlaDomainRetentionLocked\": false,\n    \"effectiveSlaDomainId\": \"ea82adf1-fa12-4b33-89af-9c2a08802a5d\",\n    \"effectiveSlaDomainName\": \"Gold\",\n    \"isEffectiveSlaDomainRetentionLocked\": false,\n    \"effectiveSlaSourceObjectId\": \"MssqlDatabase:::5d1da757-95d0-4740-9851-53c25c3dda2d\",\n    \"effectiveSlaSourceObjectName\": \"simple_rec\",\n    \"slaAssignment\": \"Direct\",\n    \"retentionSlaDomainId\": \"ea82adf1-fa12-4b33-89af-9c2a08802a5d\",\n    \"rootProperties\": {\n      \"rootType\": \"Host\",\n      \"rootId\": \"Host:::151e41d1-5395-4940-98ec-17460eae8949\",\n      \"rootName\": \"10.0.46.37\"\n    },\n    \"instanceId\": \"MssqlInstance:::442b9524-9e45-4b03-aa66-eec1f3d0c470\",\n    \"instanceName\": \"SQLEXPRESS\",\n    \"isRelic\": false,\n    \"copyOnly\": true,\n    \"logBackupFrequencyInSeconds\": 2000,\n    \"logBackupRetentionHours\": 180,\n    \"isLiveMount\": false,\n    \"isLogShippingSecondary\": false,\n    \"recoveryModel\": \"FULL\",\n    \"state\": \"ONLINE\",\n    \"hasPermissions\": true,\n    \"isInAvailabilityGroup\": false,\n    \"replicas\": [\n      {\n        \"instanceId\": \"MssqlInstance:::442b9524-9e45-4b03-aa66-eec1f3d0c470\",\n        \"instanceName\": \"SQLEXPRESS\",\n        \"recoveryModel\": \"FULL\",\n        \"state\": \"ONLINE\",\n        \"hasPermissions\": true,\n        \"isStandby\": false,\n        \"recoveryForkGuid\": \"83145A93-8921-4318-8508-B9ABE1D3B0F6\",\n        \"isArchived\": false,\n        \"isDeleted\": false,\n        \"rootProperties\": {\n          \"rootType\": \"Host\",\n          \"rootId\": \"Host:::151e41d1-5395-4940-98ec-17460eae8949\",\n          \"rootName\": \"10.0.46.37\"\n        }\n      }\n    ],\n    \"unprotectableReasons\": [],\n    \"numMissedSnapshot\": 0,\n    \"lastSnapshotTime\": \"2020-09-07T13:36:33.000Z\",\n    \"includeBackupTaskInfo\": false,\n    \"isOnline\": true,\n    \"blackoutWindowStatus\": {\n      \"isGlobalBlackoutActive\": false,\n      \"isSnappableBlackoutActive\": true\n    },\n    \"blackoutWindows\": {\n      \"globalBlackoutWindows\": [],\n      \"snappableBlackoutWindows\": [\n        {\n          \"startTime\": \"2020-09-13T11:02:04+0000\"\n        }\n      ]\n    },\n    \"snapshotCount\": 2,\n    \"isLocal\": true,\n    \"isStandby\": false,\n    \"latestRecoveryPoint\": \"2020-09-07T14:11:54.000Z\",\n    \"oldestRecoveryPoint\": \"2020-09-07T12:47:38.000Z\",\n    \"protectionDate\": \"2020-08-26T07:43:26.429Z\",\n    \"recoveryForkGuid\": \"83145A93-8921-4318-8508-B9ABE1D3B0F6\",\n    \"maxDataStreams\": 8,\n    \"localStorage\": 1363475,\n    \"archiveStorage\": 0\n  }\n]\n```\n\n## Availability Groups\n\nTo get the details of a SQL Server Availability Group, GET on\n[`/mssql/availability_group/{id}`](#operation/getMssqlAvailabilityGroupV1).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/mssql/availability_group/$availability_group_id\"\n```\n\n```bash\n{\n  \"id\": \"$availability_group_id\",\n  \"name\": \"$availability_group_name\",\n  \"configuredSlaDomainId\": \"$sla_id\",\n  \"configuredSlaDomainName\": \"$sla_name\",\n  \"configuredSlaDomainType\": \"$sla_type\",\n  \"primaryClusterId\": \"$primary_cluster_id\",\n  \"isConfiguredSlaDomainRetentionLocked\": $is_sla_retention_locked,\n  \"effectiveSlaDomainId\": \"$sla_id\",\n  \"effectiveSlaDomainName\": \"$sla_name\",\n  \"isEffectiveSlaDomainRetentionLocked\": $is_sla_retention_locked,\n  \"slaAssignment\": \"$sla_assignment\",\n  \"logBackupFrequencyInSeconds\": $log_backup_frequenct,\n  \"logRetentionHours\": $log_backup_retention,\n  \"copyOnly\": $copy_only\n}\n```\n\nTo get a summary of all SQL Server Availability Groups, GET on\n[`/mssql/availability_group`](#operation/queryMssqlAvailabilityGroupV1).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/mssql/availability_group\"\n```\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"id\": \"$availability_group_id\",\n      \"name\": \"$availability_group_name\",\n      \"configuredSlaDomainId\": \"$sla_id\",\n      \"configuredSlaDomainName\": \"$sla_name\",\n      \"configuredSlaDomainType\": \"$sla_type\",\n      \"primaryClusterId\": \"$primary_cluster_id\",\n      \"isConfiguredSlaDomainRetentionLocked\": $is_sla_retention_locked,\n      \"effectiveSlaDomainId\": \"$sla_id\",\n      \"effectiveSlaDomainName\": \"$sla_name\",\n      \"isEffectiveSlaDomainRetentionLocked\": $is_sla_retention_locked,\n      \"slaAssignment\": \"$sla_assignment\",\n      \"logBackupFrequencyInSeconds\": $log_backup_frequenct,\n      \"logRetentionHours\": $log_backup_retention,\n      \"copyOnly\": $copy_only\n    }\n  ],\n  \"total\": 1\n}\n```\n\nTo update a SQL Server Availability Group, PATCH on\n[`/mssql/availability_group/{id}`](#operation/updateMssqlAvailabilityGroupV1).\n\n```bash\ncurl -X PATCH \"https://$cluster_address/api/v1/mssql/availability_group/$availability_group_id\" -d\\\n '{\n    \"logBackupFrequencyInSeconds\": $log_backup_freq,\n    \"logRetentionHours\": $log_backup_retention,\n    \"copyOnly\": $copy_only,\n    \"configuredSlaDomainId\\\": \"$sla_id\"\n  }'\n```\n\n```bash\n{\n  \"id\": \"$availability_group_id\",\n  \"name\": \"$availability_group_name\",\n  \"configuredSlaDomainId\": \"$sla_id\",\n  \"configuredSlaDomainName\": \"$sla_name\",\n  \"configuredSlaDomainType\": \"$sla_type\",\n  \"primaryClusterId\": \"$primary_cluster_id\",\n  \"isConfiguredSlaDomainRetentionLocked\": $is_sla_retention_locked,\n  \"effectiveSlaDomainId\": \"$sla_id\",\n  \"effectiveSlaDomainName\": \"$sla_name\",\n  \"isEffectiveSlaDomainRetentionLocked\": $is_sla_retention_locked,\n  \"slaAssignment\": \"$sla_assignment\",\n  \"logBackupFrequencyInSeconds\": $log_backup_frequenct,\n  \"logRetentionHours\": $log_backup_retention,\n  \"copyOnly\": $copy_only\n}\n```\n\n## Protection\n\nTo create an on-demand snapshot, POST on [`/mssql/db/{id}/snapshot`](#operation/createOnDemandMssqlBackup).\n\n```bash\ncurl -X POST \\\n  \"https://$cluster_address/api/v1/mssql/db/$db_id/snapshot\"\n```\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/mssql/db/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"status\": \"QUEUED\"\n}\n```\n\nOnce the snapshot has been taken, the `$snapshot_id` can be retrieved from the request with [`/mssql/request/{id}`](#operation/getMssqlAsyncRequestStatus).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/mssql/request/$request_id\"\n```\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/mssql/db/snapshot/$snapshot_id\",\n      \"rel\": \"result\"\n    },\n    {\n      \"href\": \"https://$cluster_address/api/v1/mssql/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"status\": \"SUCCEEDED\"\n}\n```\n\nThe `$snapshot_id` can be used to extract further information on the snapshot with a GET on [`/mssql/db/snapshot/{id}`](#operation/getMssqlDbSnapshot).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/mssql/db/snapshot/$snapshot_id\"\n```\n\n```bash\n{\n  \"id\": \"$snapshot_id\",\n  \"date\": \"2017-02-02T18:53:12.718Z\",\n  \"isOnDemandSnapshot\": true\n}\n```\n\nTo create an on-demand log backup, POST on [`/mssql/db/{id}/log_backup`](#operation/createOnDemandMssqlLogBackup).\n\n```bash\ncurl -X POST \\\n  \"https://$cluster_address/api/v1/mssql/db/$db_id/log_backup\"\n```\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/mssql/db/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"status\": \"QUEUED\"\n}\n```\n\nTo protect a specific database under an SLA, perform a PATCH on [`/mssql/db/{id}`](#operation/updateMssqlDb)\n\n```bash\ncurl -X PATCH \\\n  -d '{\n    \"configuredSlaDomainId\": \"$sla_domain_id\" }' \\\n  \"https://$cluster_address/api/v1/mssql/db/$db_id\"\n```\n\n```bash\n{\n  \"id\": \"$db_id\",\n  \"name\": \"$db_name\",\n  \"configuredSlaDomainId\": \"$sla_domain_id\",\n  \"configuredSlaDomainName\": \"$sla_domain_name\",\n  \"effectiveSlaDomainId\": \"$sla_domain_id\",\n  \"effectiveSlaDomainName\": \"sla_domain_name\",\n  \"instanceId\": \"$instance_id\"\n  \"instanceName\": \"$instance_name\"\n}\n```\n\nList all snapshots for a database with a GET on [`/mssql/db/{id}/snapshot`](#operation/queryMssqlDbSnapshot).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/mssql/db/$db_id/snapshot\"\n```\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"id\": \"$snapshot_id\",\n      \"date\": \"2017-02-02T18:53:12.718Z\",\n      \"isOnDemandSnapshot\": true\n    }\n  ],\n  \"total\": 1\n}\n```\n\nPoint-in-time recovery is supported when log backups are taken. The range of recoverable times can be listed with a GET on [`/mssql/db/{id}/recoverable_range`](#operation/getMssqlDbRecoverableRanges).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/mssql/db/$db_id/recoverable_range\"\n```\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"beginTime\": \"2017-02-02T18:53:12.694Z\",\n      \"endTime\": \"2017-02-02T20:53:12.694Z\"\n    }\n  ],\n  \"total\": 1\n}\n```\n\n## Download\nThe Rubrik REST API server provides endpoints to browse and\ndownload snapshots and logs for a specific SQL Server database.\n\n### Browsing SQL Server snapshots\nTo view a list of snapshots and log backups of a specific SQL Server\ndatabase, send a POST request to the \n[`/mssql/db/{id}/browse`](#operation/browseMssqlBackupFiles)\nendpoint where, `{id}` is the ID of the SQL Server database.\n\nThis POST call fetches metadata based on a timestamp or the\nlog sequence number (LSN) provided in the request payload.\n\nTo fetch a list of snapshots and log backups that are required to\nrecover to a point in time, specify the point in time using either the\n`date` or the `lsnpoint` attribute of the `recoveryPoint` attribute.\nBoth `date` and `lsnPoint` cannot be used at the same time.\n\n```bash\ncurl -X POST -d \\\n  '{ \n        \"recoveryPoint\": {\"date\": \"2019-08-15T10:40\"}\n   }' \\\n  \"https://$cluster_address/api/v1/mssql/db/$db_id/browse\n```\n\nTo fetch a list of snapshots and log backups that fit within a range,\nspecify the range by using a combination of the `startPoint` and\n`endPoint` attributes.\nWithin the `startPoint` and `endPoint` attributes, specify values for\neither the `lsnPoint` or the `date` attributes, not for both.\n\n```bash\ncurl -X POST -d \\\n  '{ \n        \"startPoint\": {\"date\": \"2019-08-15T10:40\"}, \n        \"endPoint\": {\"date\": \"2019-08-15T10:45:47\"} \n   }' \\\n  \"https://$cluster_address/api/v1/mssql/db/$db_id/browse\n```\n\nTo recover to a point in time, use the `recoveryPoint` attribute; do\nnot define a range using the `startPoint` and `endPoint` attributes.\n\nTo fetch a list of snapshots and log backups that fit within a range,\nspecify the beginning of a range using the `startPoint` attribute and\nspecify the end of the range using the `endPoint` attribute.\nWhen specifying a range, do not specify a `recoveryPoint`.\n\nThe Rubrik REST API server responds with the list of the log and\ndatabase snapshots that fit within the parameters specified in the\nrequest.\n\n```bash\n{\n  \"items\": [\n    {\n      \"backupId\": \"e8f0c6ee-fafc-4740-b9c9-deadba9815df\",\n      \"backupType\": \"Log\",\n      \"path\": \"testdb/logs/2019-08-15T10-40-58Z.trn\",\n      \"date\": \"2019-08-15T10:40:58.000Z\",\n      \"lsn\": \"45000000219000001\",\n      \"recoveryForkGuid\": \"03F633D8-6B5A-48F5-97F0-401440F124FD\",\n      \"backupSize\": 86528\n    },\n    {\n      \"backupId\": \"5e3de1ce-f5ab-4787-a057-accec64fe7af\",\n      \"backupType\": \"Snapshot\",\n      \"path\": \"testdb/snapshot-2019-08-15T10-45-31Z/\",\n      \"date\": \"2019-08-15T10:45:47.000Z\",\n      \"lsn\": \"45000000221300001\",\n      \"recoveryForkGuid\": \"03F633D8-6B5A-48F5-97F0-401440F124FD\",\n      \"backupSize\": 16777216\n    },\n    {\n      \"backupId\": \"c57d1908-c085-43ef-9a7f-fcb482994bf7\",\n      \"backupType\": \"Log\",\n      \"path\": \"testdb/logs/2019-08-15T10-46-03Z.trn\",\n      \"date\": \"2019-08-15T10:46:03.000Z\",\n      \"lsn\": \"45000000222300001\",\n      \"recoveryForkGuid\": \"03F633D8-6B5A-48F5-97F0-401440F124FD\",\n      \"backupSize\": 86528\n    }\n  ]\n}\n\n```\n\n### Downloading all SQL Server snapshots and logs\nTo initiate a request to build a zip file containing the\nsnapshots and log backups that are required to recover to a specific\npoint in time, or a range of time, send a POST request to the\n[`/mssql/db/{id}/download_files`](#operation/createDownloadMssqlBackupFiles) endpoint.\n\nThe usage of parameters for this POST call is identical to the usage\ndescribed for the [browse API call](#browsing-sql-server-snapshots).\n\n```bash\ncurl -X POST -d \\\n  '{ \"startPoint\": {\"date\": \"2019-08-15T10:40\"}, \"endPoint\": {\"date\": \"2019-08-15T10:45:47\"} }' \\\n  \"https://$cluster_address/api/v1/mssql/db/$db_id/download_files\n```\n\nThe Rubrik REST API server responds with the details of the\nasynchronous task that is initiated by the POST API call.\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"status\": \"$request_status\",\n  \"progress\": 0,\n  \"startTime\": \"2021-03-23T20:38:05.511Z\",\n  \"endTime\": \"2021-03-23T20:38:05.511Z\",\n  \"nodeId\": \"$node_id\",\n  \"error\": {\n    \"message\": \"$error_message\"\n  },\n  \"links\": [\n    {\n      \"href\": \"string\",\n      \"rel\": \"string\"\n    }\n  ]\n}\n```\n\nTo check the status of the download request, send a GET request to the\n(`/mssql/request/{id}`)[#operation/getMssqlAsyncRequestStatus]\nendpoint where, `{id}` is the `$request_id`.\n\nThe Rubrik REST API server responds with the link to\ndownload the zip file when the zip file is ready for download.\n\n### Downloading specific SQL Server snapshots and logs\nTo initiate a request to build a zip file containing\nspecific snapshots and log backups, send a POST\nrequest to the [`/mssql/db/{id}/download_files_by_id`](#operation/createDownloadMssqlBackupFilesById) endpoint with\nthe object IDs for the snapshots and logs to be downloaded.\n\n```bash\ncurl -X POST -d \\\n  '{ \"items\": [\"e8f0c6ee-fafc-4740-b9c9-deadba9815df\", \"c57d1908-c085-43ef-9a7f-fcb482994bf7\"] }' \\\n  \"https://$cluster_address/api/v1/mssql/db/$db_id/download_files_by_id\"\n```\n\nThe Rubrik REST API server responds with the details of the\nasynchronous task that is initiated by the POST API call.\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"status\": \"$request_status\",\n  \"progress\": 0,\n  \"startTime\": \"2021-03-23T20:38:05.511Z\",\n  \"endTime\": \"2021-03-23T20:38:05.511Z\",\n  \"nodeId\": \"$node_id\",\n  \"error\": {\n    \"message\": \"$error_message\"\n  },\n  \"links\": [\n    {\n      \"href\": \"string\",\n      \"rel\": \"string\"\n    }\n  ]\n}\n```\nTo check the status of the download request, send a GET request to the\n(`/mssql/request/{id}`)[#operation/getMssqlAsyncRequestStatus]\nendpoint where, `{id}` is the `$request_id`.\n\nThe Rubrik REST API server responds with the link to\ndownload the zip file when the zip file is ready for download.\n\nThe zip file uses the naming convention of `$database_name`-\n`$random_string`.zip.\n\nThe path to the log backup files inside the zip file is of the form\n`$database_name`/logs/`$database_name`-`$timestamp`.trn.\nFor example, if the `$database_name` is `BigDatabase`, the log\nbackup file is located at `BigDatabase/logs/BigDatabase-2021-03-23T03-15-55Z.trn` inside the downloaded zip\nfile.\n\nThe path to the database snapshot files inside the zip file is of the form\n`$database_name`/snapshot-`$timestamp`/`$snapshot_files`. For\nexample, if the `$database_name` is\n`BigDatabase` and a snapshot filename is `snapshot.mdf`, then the \nlocation of the file inside the downloaded zip file is\n`BigDatabase/snapshot-2021-03-23T03-15-55Z/snapshot.mdf`.\n\n\nMake an asynchronous POST request to the [`/mssql/db/{id}/download`](#operation/downloadFromArchive) endpoint to download snapshots and logs from archival for a given database and recovery point.\n\n```bash\ncurl -X POST -d \\\n  '{ \"recoveryPoint\": { \"timestampMs\": 12345 } }' \\\n  \"https://$cluster_address/api/v1/mssql/db/$db_id/download\"\n```\n\nA 'missed snapshot' occurs when a snapshot that is required by SLA Domain policy cannot be created.\nTo retrieve information about missed snapshots, send a GET request to the [`/mssql/db/{id}/missed_snapshot`](#operation/getMissedMssqlDbSnapshots) endpoint.\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/mssql/db/$db_id/missed_snapshot\"\n```\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"missedSnapshotTime\": \"2000-01-02T11:08:40.420Z\"\n    }\n  ],\n  \"total\": 1\n}\n```\n\nTo retrieve the recoverable time ranges that were missed for a specified database, send a GET request to the [`/mssql/db/{id}/missed_recoverable_range`](#operation/getMssqlDbMissedRecoverableRanges) endpoint.\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/mssql/db/$db_id/missed_recoverable_range\"\n```\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"beginTime\": \"2017-02-02T18:53:12.694Z\",\n      \"endTime\": \"2017-02-02T20:53:12.694Z\"\n    }\n  ],\n  \"total\": 1\n}\n```\n\nDelete all snapshots for a specific database with a DELETE on [`/mssql/db/{id}/snapshot`](#operation/deleteMssqlDbSnapshots).\n\n```bash\ncurl -X DELETE \"https://$cluster_address/api/v1/mssql/db/$db_id/snapshot\"\n```\n\nAssign SLA properties to multiple objects with a POST to\n[`mssql/sla_domain/assign`](#operation/assignMssqlSlaProperties).\n\n```bash\ncurl -X POST -d \\\n  '{\n    \"ids\": [\"$id1\", \"$id2\"],\n    \"copyOnly\": true,\n    \"configuredSlaDomainId\": \"$slaDomainId\"\n  }' \\\n  \"https://$cluster_address/api/v1/mssql/sla_domain/assign\"\n```\n\nTo take on demand snapshot of multiple SQL Server databases, perform POST on\n [`/mssql/db/bulk/snapshot`](#operation/createOnDemandMssqlBatchBackupV1).\n\n```bash\ncurl -X POST \"https://$cluster_address/api/v1/mssql/db/bulk/snapshot\" -d\\\n'{\n   \"slaId\": \"$sla_id\",\n   \"databaseIds\": [\n     \"$db_id_1\",\n     \"$db_id_2\"\n   ],\n   \"instanceIds\": [\n     \"$instance_id_3\"\n   ],\n   \"hostIds\": [\n     \"$host_id_4\",\n     \"$host_id_5\",\n     \"$host_id_6\",\n   ],\n   \"windowsClusterIds\": [\n     \"$windows_cluster_id_7\"\n   ],\n   \"availabilityGroupIds\": [\n     \"$availability_group_id_8\"\n   ],\n   \"forceFullSnapshot\": true\n }'\n```\n```bash\n{\n  \"id\": \"$mssql_multi_host_batch_backup_job_id\",\n  \"status\": \"$job_status\",\n  \"progress\": $job_progress,\n  \"startTime\": \"$job_start_time\",\n  \"links\": [\n    {\n      \"href\": \"$link1\",\n      \"rel\": \"self\"\n    }\n  ]\n\n```\n\nGet the details of on demand backup job of SQL Server databases by performing\n GET on\n [`/mssql/db/bulk/snapshot/{id}`](#operation/getOnDemandMssqlBatchBackupResultV1).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/mssql/db/bulk/snapshot/$mssql_multi_host_batch_backup_job_id\"\n```\n\n```bash\n{\n  \"id\": \"$mssql_multi_host_batch_backup_job_id\",\n  \"successfulSnapshots\": [\n    {\n      \"databaseId\": \"$db_id\",\n      \"snapshotId\": \"$snapshot_id\"\n    }\n  ],\n  \"failedSnapshots\": [\n    {\n      \"databaseId\": \"$db_id_2\",\n      \"error\": \"$error\"\n    }\n  ],\n  \"canceledSnapshots\": []\n}\n```\n\n\nTo delete all the downloaded snapshots and logs for a SQL Server database,\n perform DELETE on\n [`mssql/db/{id}/recoverable_range/download`](#operation/deleteDownloadedMssqlDbRecoverableRangesV1).\n\n```bash\ncurl -X DELETE \"https://$cluster_address/api/v1/mssql/db/$db_id/recoverable_range_download\"\n```\n```bash\n{\n  \"jobInstanceId\": \"$expire_mssql_download_ranges_job_id\"\n}\n```\n\nTo get the deletion status of downloaded recoverable range, perform GET on\n [`/mssql/db/recoverable_range/download/{id}`](#operation/getDeleteMssqlDbRecoverableRangesStatusV1).\n\n```bash\ncurl -X GET \\\n\"https://$cluster_address/api/v1/mssql/db/recoverable_range/download/$expire_mssql_download_ranges_job_id\"\n```\n\n```bash\n{\n  \"id\": \"$expire_mssql_download_ranges_job_id\"\n  \"status\": \"SUCCEEDED\",\n  \"startTime\": \"$job_start_time\",\n  \"endTime\": \"$job_end_time\",\n  \"jobType\": \"EXPIRE_MSSQL_DOWNLOADED_RANGES\",\n  \"nodeId\": \"$node_id\",\n  \"isDisabled\": $is_disabled,\n  \"archived\": $archived\n}\n```\n\nTo get the default SQL Server database backup properties, perform GET on\n [`/mssql/db/defaults`](#operation/getDefaultDbPropertiesV1).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/mssql/db/defaults\"\n```\n\n```bash\n{\n  \"logBackupFrequencyInSeconds\": $log_backup_frequency,\n  \"cbtStatus\": $cbt_status,\n  \"logRetentionTimeInHours\": $log_retention_time\n}\n```\n\nTo update the default SQL Server database backup properties, perform PATCH on\n [`/mssql/db/defaults`](#operation/updateDefaultDbPropertiesV1).\n\n```bash\ncurl -X PATCH \"https://$cluster_address/api/v1/mssql/db/defaults\" -d\\\n '{\n    \"logBackupFrequencyInSeconds\": 900,\n    \"cbtStatus\": true,\n    \"logRetentionTimeInHours\": 168\n  }'\n```\n\n```bash\n{\n  \"logBackupFrequencyInSeconds\": 900,\n  \"cbtStatus\": true,\n  \"logRetentionTimeInHours\": 168\n}\n```\n\n## Restore\n\nPerform a restore with a POST on [`/mssql/db/{id}/restore`](#operation/createRestoreMssqlDb) specifying the timestamp as the recovery point.\n\n```bash\ncurl -X POST -d \\\n  '{\n    \"recoveryPoint\": {\n      \"timestampMs\": 12345\n    }\n  }' \\\n  \"https://$cluster_address/api/v1/mssql/db/$db_id/restore\"\n```\n\nA database can also be exported to another instance with a POST on [`/mssql/db/{id}/export`](#operation/createExportMssqlDb).\n\n```bash\ncurl -X POST -d \\\n  '{\n    \"recoveryPoint\": {\n      \"timestampMs\": 12345\n    },\n    \"targetInstanceId\": \"$instance_id\",\n    \"targetDatabaseName\": \"$db_name\"\n  }' \\\n  \"https://$cluster_address/api/v1/mssql/db/$db_id/export\"\n```\n\nList of all the database files which are needed to restore a SQL Server\n database can be found by GET on\n [/mssql/db/{id}/restore_files](#operation/mssqlGetRestoreFilesV1).\n\n  ```bash\n  curl -X GET \"https://$cluster_address/api/v1mssql/db/$db_id/restore_files?time=$time_to_restore\"\n  ```\n\n  ```bash\n  [\n    {\n      \"logicalName\": \"$logical_file_name\",\n      \"originalPath\": \"$original_file_path\",\n      \"originalName\": \"$original_file_name\",\n      \"fileType\": \"Data\",\n      \"fileId\": $file_id\n    },\n    {\n      \"logicalName\": \"$logical_file_name\",\n      \"originalPath\": \"$original_file_path\",\n      \"originalName\": \"$original_file_name\",\n      \"fileType\": \"Log\",\n      \"fileId\": $file_id\n    }\n  ]\n  ```\n\nAn estimate of resources needed for restoring a SQL Server database can be\n found by GET on\n [/mssql/db/{id}/restore_estimate](#operation/mssqlRestoreEstimateV1).\n\n  ```bash\n  curl -X GET \"https://$cluster_address/api/v1/mssql/db/$db_id/restore_estimate?time=$time_to_restore\"\n  ```\n\n  ```bash\n  {\n    \"bytesFromCloud\": $bytes_from_cloud\n  }\n  ```\n\nGet compatible instances for recovery of a SQL Server database by performing\n GET on\n [/mssql/db/{id}/compatible_instance](#operation/getCompatibleMssqlInstancesV1).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/mssql/db/$db_id/compatible_instance?recovery_type=$recovery_type\"\n```\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"logBackupFrequencyInSeconds\": $log_backup_frequency,\n      \"logRetentionHours\": $log_backup_retention,\n      \"copyOnly\": $copy_only,\n      \"id\": \"$instance_id\",\n      \"internalTimestamp\": $internal_timestamp,\n      \"name\": \"$instance_name\",\n      \"primaryClusterId\": \"$cluster_id\",\n      \"rootProperties\": {\n        \"rootType\": \"$root_type\",\n        \"rootId\": \"$root_id\",\n        \"rootName\": \"$root_name\"\n      },\n      \"version\": \"$version\",\n      \"configuredSlaDomainId\": \"$sla_domain_id\",\n      \"configuredSlaDomainType\": \"$sla_type\",\n      \"configuredSlaDomainName\": \"$sla_name\",\n      \"isRetentionLocked\": $is_retention_locked,\n      \"unprotectableReasons\": []\n    }\n  ],\n  \"total\": 1\n}\n```\n\n## Live Mount\n\nPerform a Live Mount with a POST on [`/mssql/db/{id}/mount`](#operation/createMssqlMount), specifying the timestamp as the recovery point.\n\n```bash\ncurl -X POST -d \\\n  '{\n    \"recoveryPoint\": {\n      \"timestampMs\": 12345\n    },\n    \"mountedDatabaseName\": \"$db_name\"\n  }' \\\n  \"https://$cluster_address/api/v1/mssql/db/$db_id/mount\"\n```\n\nAll current Live Mounts can be found with a GET on [`/mssql/db/mount`](#operation/queryMssqlMount).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/mssql/db/mount\"\n```\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"id\": \"$mount_id\",\n      \"sourceDatabaseId\": \"$source_db_id\",\n      \"sourceRecoveryPoint\": {\n        \"timestampMs\": 12345\n      },\n      \"targetInstanceId\": \"$target_instance_id\",\n      \"creationDate\": \"2017-02-02T18:53:12.694Z\",\n      \"isReady\": true,\n      \"mountedDatabaseId\": \"$mounted_db_id\"\n    }\n  ],\n  \"total\": 1\n}\n```\n\nFurther details for a single Live Mount are acquired from [`/mssql/db/mount/{id}`](#operation/getMssqlMount).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/mssql/db/mount/$mount_id\"\n```\n\n```bash\n{\n  \"id\": \"$mount_id\",\n  \"sourceDatabaseId\": \"$source_db_id\",\n  \"sourceRecoveryPoint\": {\n    \"timestampMs\": 12345\n  },\n  \"targetInstanceId\": \"$target_instance_id\",\n  \"creationDate\": \"2017-02-02T18:53:12.694Z\",\n  \"isReady\": true,\n  \"mountedDatabaseId\": \"$mounted_db_id\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/mssql/db/$source_db_id\",\n      \"rel\": \"sourceDatabase\"\n    },\n    {\n      \"href\": \"https://$cluster_address/api/v1/mssql/instance/$target_instance_id\",\n      \"rel\": \"targetInstance\"\n    },\n    {\n      \"href\": \"https://$cluster_address/api/v1/mssql/db/$mounted_db_id\",\n      \"rel\": \"mountedDatabase\"\n    }\n  ],\n}\n```\n\nDelete a Live Mount with a DELETE on [`/mssql/db/mount/{id}`](#operation/createMssqlUnmount).\n\n```bash\ncurl -X DELETE \"https://$cluster_address/api/v1/mssql/db/mount/$mount_id\"\n```\n\n## Log Shipping\n\nCreate a Log Shipping Configuration with a POST on [`/mssql/db/{id}/log_shipping`](#operation/createLogShippingConfiguration).\n\n```bash\ncurl -X POST -d \\\n  '{\n    \"config\": {\n      \"targetInstanceId\": \"$target_instance_id\",\n      \"targetDatabaseName\": \"$db_name\",\n      \"state\": \"$state\"\n    }\n  }' \\\n  \"https://$cluster_address/api/v1/mssql/db/{id}/log_shipping\"\n```\n\nAll current Log Shipping Configurations can be found with a GET on [`/mssql/db/log_shipping`](#operation/queryLogShippingConfigurations).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/mssql/db/log_shipping\"\n```\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"id\": \"$log_shipping_id\",\n      \"lastAppliedPoint\": \"2017-02-02T18:53:12.694Z\",\n      \"location\": \"$host_name/$instance_name\",\n      \"primaryDatabaseId\": \"$primary_db_id\",\n      \"primaryDatabaseName\": \"$primary_database_name\",\n      \"secondaryDatabaseName\": \"$secondary_database_name\",\n      \"secondaryDatabaseId\": \"$secondary_database_id\",\n      \"state\": \"$state\",\n      \"status\": \"OK\"\n    }\n  ],\n  \"total\": 1\n}\n```\n\nFurther details for a single Log Shipping configuration are acquired from [`/mssql/db/log_shipping/{id}`](#operation/getLogShippingConfiguration).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/mssql/db/log_shipping/{id}\"\n```\n\n```bash\n{\n  \"id\": \"$log_shipping_id\",\n  \"lastAppliedPoint\": \"2017-02-02T18:53:12.694Z\",\n  \"location\": \"$host_name/$instance_name\",\n  \"primaryDatabaseId\": \"$primary_db_id\",\n  \"primaryDatabaseName\": \"$primary_database_name\",\n  \"secondaryDatabaseName\": \"$secondary_database_name\",\n  \"secondaryDatabaseId\": \"$secondary_database_id\",\n  \"state\": \"$state\",\n  \"status\": \"OK\"\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/mssql/db/$primary_db_id\",\n      \"rel\": \"primaryDatabase\"\n    },\n    {\n      \"href\": \"https://$cluster_address/api/v1/mssql/instance/$secondary_instance_id\",\n      \"rel\": \"secondaryInstance\"\n    },\n    {\n      \"href\": \"https://$cluster_address/api/v1/mssql/db/$secondary_db_id\",\n      \"rel\": \"secondaryDatabase\"\n    }\n  ],\n}\n```\n\nUpdate a Log Shipping Configuration with a PATCH on [`/mssql/db/log_shipping/{id}`](#operation/updateLogShippingConfiguration).\n\n```bash\ncurl -X PATCH -d \\\n  '{\n    \"config\": {\n      \"state\": \"$state\"\n    }\n  }' \\\n  \"https://$cluster_address/api/v1/mssql/db/log_shipping/$id\"\n```\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/mssql/db/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"status\": \"QUEUED\"\n}\n```\n\nDelete a Log Shipping Configuration with a DELETE on [`/mssql/db/log_shipping/{id}`](#operation/deleteLogShippingConfiguration).\n\n```bash\ncurl -X DELETE \"https://$cluster_address/api/v1/mssql/db/log_shipping/$id?delete_secondary_database=true\"\n```\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/mssql/db/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"status\": \"QUEUED\"\n}\n```\n\nReseed a Log Shipping Configuration with a POST on [`/mssql/db/log_shipping/{id}/reseed`](#operation/reseedSecondary)\n\n```bash\ncurl -X POST -d \\\n  '{\n    \"config\": {\n      \"state\": \"$state\"\n    }\n  }' \\\n  \"https://$cluster_address/api/v1/mssql/db/log_shipping/$id/reseed\"\n```\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/mssql/db/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"status\": \"QUEUED\"\n}\n```\n\n# Hierarchy\n\nThis REST API is used to get SQL Server hierarchy objects.\n\n### Get list of immediate descendant objects\nGet a list of immediate descendant objects using a GET request to\n[/mssql/hierarchy/{id}/children]\\\n(#operation/getMssqlHierarchyChildren).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/mssql/hierarchy/{id}/children\"\n```\n\n```bash\n{\n  \"data\": [\n    {\n      \"id\": \"$database_id\",\n      \"name\": \"$database_name\",\n      \"objectType\": \"MssqlDatabase\",\n      \"descendantCount\": {},\n      \"hasPermissions\": true,\n      \"isInAvailabilityGroup\": false,\n      \"isLiveMount\": false,\n      \"isLogShippingSecondary\": false,\n      \"configuredSlaDomainId\": \"INHERIT\",\n      \"configuredSlaDomainName\": \"Inherit\",\n      \"effectiveSlaDomainId\": \"INHERIT\",\n      \"effectiveSlaDomainName\": \"Inherit\"\n    }\n  ],\n  \"hasMore\": false,\n  \"total\": 1\n}\n```\n\n### Get list of descendant objects\nGet a list of descendant objects using\na GET request to\n[/mssql/hierarchy/{id}/descendants]\\\n(#operation/getMssqlHierarchyDescendants).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/mssql/hierarchy/{id}/descendants\"\n```\n\n```bash\n{\n  \"data\": [\n    {\n      \"id\": \"$database_id\",\n      \"name\": \"$database_name\",\n      \"objectType\": \"MssqlDatabase\",\n      \"descendantCount\": {},\n      \"hasPermissions\": true,\n      \"isInAvailabilityGroup\": false,\n      \"isLiveMount\": false,\n      \"isLogShippingSecondary\": false,\n      \"configuredSlaDomainId\": \"INHERIT\",\n      \"configuredSlaDomainName\": \"Inherit\",\n      \"effectiveSlaDomainId\": \"INHERIT\",\n      \"effectiveSlaDomainName\": \"Inherit\"\n    }\n  ],\n  \"hasMore\": false,\n  \"total\": 1\n}\n```\n\n### Get an object\nGet an object in the hierarchy using a GET request to\n[/mssql/hierarchy/{id}]\\\n(#operation/getMssqlHierarchyObject).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/mssql/hierarchy/{id}\"\n```\n\n```bash\n{\n  \"id\": \"$database_id\",\n  \"name\": \"$database_name\",\n  \"objectType\": \"MssqlDatabase\",\n  \"descendantCount\": {},\n  \"hasPermissions\": true,\n  \"isInAvailabilityGroup\": false,\n  \"isLiveMount\": false,\n  \"isLogShippingSecondary\": false,\n  \"configuredSlaDomainId\": \"INHERIT\",\n  \"configuredSlaDomainName\": \"Inherit\",\n  \"effectiveSlaDomainId\": \"INHERIT\",\n  \"effectiveSlaDomainName\": \"Inherit\"\n}\n```\n## Host configurations\n\n### Retrieving SQL Server host configurations\nTo retrieve all the SQL Server host configurations, send a GET request to\n [`/mssql/host/configuration`](#operation/queryMssqlHostConfig).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1//mssql/host/configuration\"\n```\n\nThe Rubrik REST API server responds with a list of all the SQL Server host \nconfigurations.\n```bash\n{\n  \"data\": [\n    {\n      \"hostId\": \"hostId\",\n      \"enableDatabaseBatchSnapshots\": \"Enabled\",\n      \"enableVdi\": \"Enabled\",\n      \"enableVdiDb\": \"Enabled\",\n      \"enableGroupFetch\": \"Enabled\",\n      \"enableCbtBackup\": \"Enabled\",\n      \"physicalHostLogBackupThrottleMaxRefCount\": 10,\n      \"throttlePhysicalHostMaxRefCount\": 3,\n      \"fileTransferParallelism\": 8,\n      \"mssqlDefaultMaxDataStreamsPerDatabase\": 2,\n      \"fileRestoreReadParallelism\": 16,\n      \"fileRestoreWriteParallelism\": 4\n    }\n  ],\n  \"hasMore\": false,\n  \"total\": 1\n}\n```\n\nTo retrieve the configuration of a specific SQL Server host, send a GET \nrequest to\n [`/mssql/host/configuration/{host_id}`](#operation/getMssqlHostConfig).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1//mssql/host/configuration/{host_id}\"\n```\n\nThe Rubrik REST API server responds with the configuration details of the \nspecified SQL Server host.\n\n```bash\n{\n  \"enableDatabaseBatchSnapshots\": \"Enabled\",\n  \"enableVdi\": \"Enabled\",\n  \"enableVdiDb\": \"Enabled\",\n  \"enableGroupFetch\": \"Enabled\",\n  \"enableCbtBackup\": \"Enabled\",\n  \"physicalHostLogBackupThrottleMaxRefCount\": 10,\n  \"throttlePhysicalHostMaxRefCount\": 3,\n  \"fileTransferParallelism\": 8,\n  \"mssqlDefaultMaxDataStreamsPerDatabase\": 2,\n  \"fileRestoreReadParallelism\": 16,\n  \"fileRestoreWriteParallelism\": 4\n}\n```\n\n\n### Creating a SQL Server host configuration\nTo create a new SQL Server host configuration, send a POST request to\n [`/mssql/host/configuration`](#operation/createMssqlHostConfig).\n\n```bash\ncurl -X POST -d \\\n '{\n   \"hostId\": \"hostId\",\n   \"enableDatabaseBatchSnapshots\": \"Enabled\",\n   \"enableVdi\": \"Enabled\",\n   \"enableVdiDb\": \"Enabled\",\n   \"enableGroupFetch\": \"Enabled\",\n   \"enableCbtBackup\": \"Enabled\",\n   \"physicalHostLogBackupThrottleMaxRefCount\": 10,\n   \"throttlePhysicalHostMaxRefCount\": 3,\n   \"fileTransferParallelism\": 8,\n   \"mssqlDefaultMaxDataStreamsPerDatabase\": 2,\n   \"fileRestoreReadParallelism\": 16,\n   \"fileRestoreWriteParallelism\": 4\n }' \\\n\"https://$cluster_address/api/v1/mssql/host/configuration\"\n```\n\nThe Rubrik REST API server responds with the details of the new SQL Server \nhost configuration.\n```bash\n{\n  \"hostId\": \"hostId\",\n  \"enableDatabaseBatchSnapshots\": \"Enabled\",\n  \"enableVdi\": \"Enabled\",\n  \"enableVdiDb\": \"Enabled\",\n  \"enableGroupFetch\": \"Enabled\",\n  \"enableCbtBackup\": \"Enabled\",\n  \"physicalHostLogBackupThrottleMaxRefCount\": 10,\n  \"throttlePhysicalHostMaxRefCount\": 3,\n  \"fileTransferParallelism\": 8,\n  \"mssqlDefaultMaxDataStreamsPerDatabase\": 2,\n  \"fileRestoreReadParallelism\": 16,\n  \"fileRestoreWriteParallelism\": 4\n}\n```\n\n### Updating a SQL Server host configuration\nTo update the configuration of a specific SQL Server host, send a PATCH \nrequest to\n [`/mssql/host/configuration/{host_id}`](#operation/updateMssqlHostConfig).\n\n```bash\ncurl -X PATCH -d \\\n '{\n   \"enableDatabaseBatchSnapshots\": true,\n   \"enableVdi\": true,\n   \"enableVdiDb\": false,\n   \"enableGroupFetch\": false,\n   \"enableCbtBackup\": false,\n   \"physicalHostLogBackupThrottleMaxRefCount\": 10,\n   \"throttlePhysicalHostMaxRefCount\": 3,\n   \"fileTransferParallelism\": 8,\n   \"mssqlDefaultMaxDataStreamsPerDatabase\": 2,\n   \"fileRestoreReadParallelism\": 16,\n   \"fileRestoreWriteParallelism\": 4\n }' \\\n\"https://$cluster_address/api/v1//mssql/host/configuration/{host_id}\"\n```\n\nThe Rubrik REST API server responds with the updated configuration details of \nthe specified SQL Server host.\n\n```bash\n{\n  \"enableDatabaseBatchSnapshots\": \"Enabled\",\n  \"enableVdi\": \"Enabled\",\n  \"enableVdiDb\": \"Enabled\",\n  \"enableGroupFetch\": \"Enabled\",\n  \"enableCbtBackup\": \"Enabled\",\n  \"physicalHostLogBackupThrottleMaxRefCount\": 10,\n  \"throttlePhysicalHostMaxRefCount\": 3,\n  \"fileTransferParallelism\": 8,\n  \"mssqlDefaultMaxDataStreamsPerDatabase\": 2,\n  \"fileRestoreReadParallelism\": 16,\n  \"fileRestoreWriteParallelism\": 4\n}\n```\n\n### Deleting a SQL Server host configuration\nTo delete a specific SQL Server host configuration, send a DELETE request to\n [`/mssql/host/configuration/{host_id}`](#operation/deleteMssqlHostConfig).\n\n```bash\ncurl -X DELETE \"https://$cluster_address/api/v1/mssql/host/configuration/{host_id}\"\n```\n\nThe Rubrik REST API server deletes the specified SQL Server host configuration.\n\n# Oracle Databases\n\n## Delete Downloaded Oracle Db Snapshots and Log Snapshots\n\nTo request an asynchronous job to expire downloaded database snapshots taken during a specified time period as well as log snapshots that contain any logs with timestamps within that time period, send a DELETE request to the [`/oracle/db/{id}/downloaded_snapshots`](#operation/deleteDownloadedSnapshots) endpoint with optional query parameters before_time and after_time.\n\n```bash\ncurl -X DELETE \\\n  \"https://$cluster_address/api/v1/oracle/db/{id}/downloaded_snapshots?before_time=2016-01-01T01:23:45.678&after_time=2016-01-01T01:23:45.678\"\n  ```\nAn async request is returned and can be polled to retrieve the job status.\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/internal/oracle/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"status\": \"QUEUED\"\n}\n```\n\n## Provide Estimate for Restore Operation Download\n\nTo request the number of bytes that must be downloaded for a restore operation for an Oracle database, send a GET request to the [`/oracle/db/{id}/restore_estimate`](#operation/oracleRestoreEstimate) endpoint with the snapshot ID or the time to be restored to.\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/oracle/db/{id}/restore_estimate?recovery_time=2016-01-01T01:23:45.678\"\n```\nAn OracleRestoreEstimateResult object is returned which stores the number of bytes which are needed to restore.\n\n```bash\n{\n  \"bytesToRestore\": \"$bytesToRestore\",\n}\n```\n\n## Bulk Update Oracle Databases\n\nTo update a list of Oracle Databases in bulk, send a PATCH request to the [`/oracle/db/bulk`](#operation/bulkUpdateOracleDb) endpoint with a bulk_update_properties to complete a update.\n\n```bash\ncurl -X PATCH \\\n  -d '{\n    \"ids\": \"$ids\",\n    \"logBackupFrequencyInMinutes\": \"$logBackupFrequencyInMinutes\",\n    \"logRetentionHours\": \"$logRetentionHours\",\n    \"hostLogRetentionHours\": \"$hostLogRetentionHours\",\n    \"numChannels\": \"$numChannels\",\n    \"hostMount\": \"string\",\n    \"configuredSlaDomainIdDeprecated\": \"string\",\n    \"nodeOrder\": [\n      {\n        \"nodeName\": \"string\",\n        \"order\": 0\n      }\n    ]\n  }' \\\n  \"https://$cluster_address/api/v1/oracle/db/bulk\"\n```\n\nA BulkOracleDbDetails object contains an array of OracleDbDetail is returned.\n\n## Bulk Update Oracle Hosts\n\nTo update a list of Oracle hosts in bulk, send a PATCH request to the [`/oracle/host/bulk`](#operation/bulkUpdateOracleHost) endpoint with a bulk_update_properties to complete a update.\n\n```bash\ncurl -X PATCH \\\n  -d '{\n    \"ids\": \"$ids\",\n    \"logBackupFrequencyInMinutes\": \"$logBackupFrequencyInMinutes\",\n    \"logRetentionHours\": \"$logRetentionHours\",\n    \"hostLogRetentionHours\": \"$hostLogRetentionHours\",\n    \"numChannels\": \"$numChannels\",\n    \"hostMount\": \"string\",\n    \"configuredSlaDomainIdDeprecated\": \"string\",\n    \"nodeOrder\": [\n      {\n        \"nodeName\": \"string\",\n        \"order\": 0\n      }\n    ]\n  }' \\\n  \"https://$cluster_address/api/v1/oracle/host/bulk\"\n```\n\nA BulkOracleHostDetails object contains an array of OracleHostDetail is returned.\n\n## Bulk Update Oracle RACs\n\nTo update a list of Oracle RACs in bulk, send a PATCH request to the [`/oracle/rac/bulk`](#operation/bulkUpdateOracleRac) endpoint with a bulk_update_properties to complete a update.\n\n```bash\ncurl -X PATCH \\\n  -d '{\n    \"ids\": \"$ids\",\n    \"logBackupFrequencyInMinutes\": \"$logBackupFrequencyInMinutes\",\n    \"logRetentionHours\": \"$logRetentionHours\",\n    \"hostLogRetentionHours\": \"$hostLogRetentionHours\",\n    \"numChannels\": \"$numChannels\",\n    \"hostMount\": \"string\",\n    \"configuredSlaDomainIdDeprecated\": \"string\",\n    \"nodeOrder\": [\n      {\n        \"nodeName\": \"string\",\n        \"order\": 0\n      }\n    ]\n  }' \\\n  \"https://$cluster_address/api/v1/oracle/rac/bulk\"\n```\n\nA BulkOracleRacDetails object contains an array of OracleRacDetail is returned.\n\n## Trigger a ORACLE_VALIDATE_BACKUP job to validate backups of selected recovery point on a choosing Oracle host\n\nTo request an asynchronous job to validate backups of selected recovery point on a choosing Oracle host or Oracle RAC, send a POST request to the [`/oracle/db/{id}/validate`](#operation/createOracleValidateBackupJob) endpoint with a OracleValidateConfig.\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"config\": {\n      \"recoveryPoint\": { \"timestampMs\": 12345 },\n      \"targetOracleHostOrRacId\": \"54321\":,\n      \"sgaMaxSize\": 4,\n      \"targetOracleHome\": \"/fullpath/for/oracleHome\",\n      \"targetMountPath\": \"/fullpath/for/mountPath\",\n      \"numChannels\": 4\n    }\n  }' \\\n  \"https://$cluster_address/api/v1/oracle/db/{id}/validate\n  ```\nAn async request is returned and can be polled to retrieve the job status.\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/internal/oracle/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ],\n  \"status\": \"QUEUED\"\n}\n```\n\n## Get a download link of example Advanced Recovery Options file\n\nTo get a link to download an example Advanced Recovery Options file, send a GET request to the [`/oracle/aco_example_download_link`](#operation/getExampleAcoDownloadLink) endpoint.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/oracle/aco_example_download_link\"\n```\n\nAn OracleFileDownloadLink object is returned which has a link to download the sample Advanced Recovery Options file.\n\n## Update Oracle Data Guard Group\n\nTo update an Oracle Data Guard group, send a PATCH request to the [`/oracle/data_guard_group/{id}`](#operation/updateOracleDataGuardGroup) endpoint. Edit the update_properties field with the properties to be updated.\n\n```bash\ncurl -X PATCH \\\n  -d '{\n    \"logBackupFrequencyInMinutes\": \"$logBackupFrequencyInMinutes\",\n    \"logRetentionHours\": \"$logRetentionHours\",\n    \"hostLogRetentionHours\": \"$hostLogRetentionHours\",\n    \"numChannels\": \"$numChannels\",\n    \"hostMount\": \"string\",\n    \"shouldBackupFromPrimaryOnly\": false,\n    \"preferredDGMemberUniqueNames\": [\"unique_name\"]\n    ]\n  }' \\\n  \"https://$cluster_address/api/v1/oracle/data_guard_group/{id}\"\n```\n\nThe Rubrik REST API server responds with an OracleDbDetail object containing information about the Data Guard group.\n```bash\n{\n  \"id\": \"OracleDatabase:::1e7d288f-deed-4d72-a3a2-ad578c093f2e\",\n  \"name\": \"rbk\",\n  \"configuredSlaDomainId\": \"INHERIT\",\n  \"configuredSlaDomainName\": \"Inherit\",\n  \"configuredSlaDomainType\": \"ProtectionSla\",\n  \"primaryClusterId\": \"55a8c22c-424c-41ee-91e0-94c282281e4b\",\n  \"isConfiguredSlaDomainRetentionLocked\": false,\n  \"effectiveSlaDomainId\": \"UNPROTECTED\",\n  \"effectiveSlaDomainName\": \"Unprotected\",\n  \"isEffectiveSlaDomainRetentionLocked\": false,\n  \"effectiveSlaSourceObjectId\": \"Global:::All\",\n  \"slaAssignment\": \"Unassigned\",\n  \"retentionSlaDomainId\": \"UNPROTECTED\",\n  \"infraPath\": [],\n  \"isRelic\": false,\n  \"numTablespaces\": 0,\n  \"logBackupFrequencyInMinutes\": 0,\n  \"numMissedSnapshot\": 0,\n  \"includeBackupTaskInfo\": true,\n  \"isDbLocalToTheCluster\": true,\n  \"hostLogRetentionHours\": 0,\n  \"isArchiveLogModeEnabled\": true,\n  \"dbUniqueName\": \"DG_rbk\",\n  \"dataGuardType\": \"DataGuardGroup\",\n  \"dataGuardGroupMembers\": [\n    {\n      \"dbUniqueName\": \"rbk\",\n      \"role\": \"PRIMARY\",\n      \"standaloneHostId\": \"OracleHost:::d108cb3f-e4c6-4579-8aa1-f471940d6f8f\",\n      \"standaloneHostName\": \"oel75-121-dg-primary-20210421023956\"\n    }\n  ],\n  \"logRetentionHours\": 720,\n  \"numChannels\": 1,\n  \"hostMount\": \"/var/rubrik/oracle\",\n  \"tablespaces\": [],\n  \"snapshotCount\": 0,\n  \"isLiveMount\": false,\n  \"hostsInfo\": [\n    {\n      \"id\": \"Host:::0134de15-10b7-4296-a0b4-7232d2a9edaa\",\n      \"hostname\": \"10.0.188.224\",\n      \"oracleSysDbaUser\": \"oracle\",\n      \"oracleQueryUser\": \"oracle\"\n    }\n  ],\n  \"shouldBackupFromPrimaryDGGroupMemberOnly\": true,\n  \"preferredDGMemberUniqueNames\": []\n}\n```\n\n## Retrieving Oracle databases\n### Retrieving a summary of all Oracle databases\n\nTo get a list of Oracle databases, send a GET request to the [`/oracle/db`](#operation/queryOracleDbV1) endpoint.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/oracle/db\"\n```\n\nThe Rubrik REST API server responds with a list of OracleDbSummary objects containing information about the databases.\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"id\": \"OracleDatabase:::912819e7-d603-4c1a-860a-88ba9c15b930\",\n      \"name\": \"rbk\",\n      \"configuredSlaDomainId\": \"INHERIT\",\n      \"configuredSlaDomainName\": \"Inherit\",\n      \"configuredSlaDomainType\": \"ProtectionSla\",\n      \"primaryClusterId\": \"55a8c22c-424c-41ee-91e0-94c282281e4b\",\n      \"isConfiguredSlaDomainRetentionLocked\": false,\n      \"effectiveSlaDomainId\": \"UNPROTECTED\",\n      \"effectiveSlaDomainName\": \"Unprotected\",\n      \"isEffectiveSlaDomainRetentionLocked\": false,\n      \"effectiveSlaSourceObjectId\": \"Global:::All\",\n      \"slaAssignment\": \"Unassigned\",\n      \"retentionSlaDomainId\": \"UNPROTECTED\",\n      \"infraPath\": [\n        {\n          \"name\": \"oel75-121-dg-primary-20210421023956\",\n          \"id\": \"OracleHost:::d108cb3f-e4c6-4579-8aa1-f471940d6f8f\"\n        }\n      ],\n      \"isRelic\": false,\n      \"numTablespaces\": 5,\n      \"numMissedSnapshot\": 0,\n      \"includeBackupTaskInfo\": false,\n      \"isDbLocalToTheCluster\": true,\n      \"hostLogRetentionHours\": 0,\n      \"sid\": \"rbk\",\n      \"standaloneHostId\": \"OracleHost:::d108cb3f-e4c6-4579-8aa1-f471940d6f8f\",\n      \"numInstances\": 1,\n      \"instances\": [\n        {\n          \"hostName\": \"10.0.188.224\",\n          \"instanceSid\": \"rbk\"\n        }\n      ],\n      \"isArchiveLogModeEnabled\": true,\n      \"standaloneHostName\": \"oel75-121\",\n      \"archiveLogDestinations\": [\n        \"\"\n      ],\n      \"isPrimary\": true,\n      \"dbUniqueName\": \"rbk\",\n      \"databaseRole\": \"PRIMARY\",\n      \"dataGuardType\": \"DataGuardMember\",\n      \"dataGuardGroupId\": \"OracleDatabase:::1e7d288f-deed-4d72-a3a2-ad578c093f2e\",\n      \"dataGuardGroupName\": \"DG_rbk\"\n    }\n  ],\n  \"total\": 1\n}\n```\n\n### Retrieving detailed information for a specific Oracle database\n\nTo get detailed information about an Oracle Database, send a GET request to the [`/oracle/db/{id}`](#operation/getOracleDbV1) endpoint where, {id} is the ID of the Oracle database.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/oracle/db/$oracle_database_id\"\n```\n\nThe Rubrik REST API server responds with an OracleDbDetail object containing information about the specified  database.\n\n```bash\n{\n  \"id\": \"OracleDatabase:::912819e7-d603-4c1a-860a-88ba9c15b930\",\n  \"name\": \"rbk\",\n  \"configuredSlaDomainId\": \"INHERIT\",\n  \"configuredSlaDomainName\": \"Inherit\",\n  \"configuredSlaDomainType\": \"ProtectionSla\",\n  \"primaryClusterId\": \"55a8c22c-424c-41ee-91e0-94c282281e4b\",\n  \"isConfiguredSlaDomainRetentionLocked\": false,\n  \"effectiveSlaDomainId\": \"UNPROTECTED\",\n  \"effectiveSlaDomainName\": \"Unprotected\",\n  \"isEffectiveSlaDomainRetentionLocked\": false,\n  \"effectiveSlaSourceObjectId\": \"Global:::All\",\n  \"slaAssignment\": \"Unassigned\",\n  \"retentionSlaDomainId\": \"UNPROTECTED\",\n  \"infraPath\": [\n    {\n      \"name\": \"oel75-121-dg-primary-20210421023956\",\n      \"id\": \"OracleHost:::d108cb3f-e4c6-4579-8aa1-f471940d6f8f\"\n    }\n  ],\n  \"isRelic\": false,\n  \"numTablespaces\": 5,\n  \"logBackupFrequencyInMinutes\": 0,\n  \"numMissedSnapshot\": 0,\n  \"includeBackupTaskInfo\": true,\n  \"isDbLocalToTheCluster\": true,\n  \"hostLogRetentionHours\": 0,\n  \"sid\": \"rbk\",\n  \"standaloneHostId\": \"OracleHost:::d108cb3f-e4c6-4579-8aa1-f471940d6f8f\",\n  \"numInstances\": 1,\n  \"instances\": [\n    {\n      \"hostName\": \"10.0.188.224\",\n      \"instanceSid\": \"rbk\"\n    }\n  ],\n  \"isArchiveLogModeEnabled\": true,\n  \"standaloneHostName\": \"oel75-121-dg-primary-20210421023956\",\n  \"archiveLogDestinations\": [\n    \"\"\n  ],\n  \"isPrimary\": true,\n  \"dbUniqueName\": \"rbk\",\n  \"databaseRole\": \"PRIMARY\",\n  \"dataGuardType\": \"DataGuardMember\",\n  \"dataGuardGroupId\": \"OracleDatabase:::1e7d288f-deed-4d72-a3a2-ad578c093f2e\",\n  \"dataGuardGroupName\": \"DG_rbk\",\n  \"logRetentionHours\": 720,\n  \"numChannels\": 1,\n  \"hostMount\": \"/var/rubrik/oracle\",\n  \"tablespaces\": [\n    \"SYSAUX\",\n    \"SYSTEM\",\n    \"UNDOTBS1\",\n    \"USERS\",\n    \"TEMP\"\n  ],\n  \"snapshotCount\": 0,\n  \"oracleHome\": \"/u01/app/oracle/product/12.1.0.2/dbhome_1\",\n  \"isLiveMount\": false,\n  \"hostsInfo\": [\n    {\n      \"id\": \"Host:::0134de15-10b7-4296-a0b4-7232d2a9edaa\",\n      \"hostname\": \"10.0.188.224\",\n      \"oracleSysDbaUser\": \"oracle\",\n      \"oracleQueryUser\": \"oracle\"\n    }\n  ]\n}\n```\n\n## Updating Oracle Database\n\nTo update an Oracle database, send a PATCH request to the [`/oracle/db/{id}`](#operation/updateOracleDbV1) endpoint. Edit the update_properties field with the properties to be updated.\n\n```bash\ncurl -X PATCH \\\n  -d '{\n    \"logBackupFrequencyInMinutes\": \"$logBackupFrequencyInMinutes\",\n    \"logRetentionHours\": \"$logRetentionHours\",\n    \"hostLogRetentionHours\": \"$hostLogRetentionHours\",\n    \"numChannels\": \"$numChannels\",\n    \"hostMount\": \"$hostMount\"\n    ]\n  }' \\\n  \"https://$cluster_address/api/v1/oracle/db/$oracle_database_id\"\n```\n\nThe Rubrik REST API server responds with an OracleDbDetail object containing information about the updated database.\n```bash\n{\n  \"id\": \"OracleDatabase:::912819e7-d603-4c1a-860a-88ba9c15b930\",\n  \"name\": \"rbk\",\n  \"configuredSlaDomainId\": \"INHERIT\",\n  \"configuredSlaDomainName\": \"Inherit\",\n  \"configuredSlaDomainType\": \"ProtectionSla\",\n  \"primaryClusterId\": \"55a8c22c-424c-41ee-91e0-94c282281e4b\",\n  \"isConfiguredSlaDomainRetentionLocked\": false,\n  \"effectiveSlaDomainId\": \"UNPROTECTED\",\n  \"effectiveSlaDomainName\": \"Unprotected\",\n  \"isEffectiveSlaDomainRetentionLocked\": false,\n  \"effectiveSlaSourceObjectId\": \"Global:::All\",\n  \"slaAssignment\": \"Unassigned\",\n  \"retentionSlaDomainId\": \"UNPROTECTED\",\n  \"infraPath\": [\n    {\n      \"name\": \"oel75-121-dg-primary-20210421023956\",\n      \"id\": \"OracleHost:::d108cb3f-e4c6-4579-8aa1-f471940d6f8f\"\n    }\n  ],\n  \"isRelic\": false,\n  \"numTablespaces\": 5,\n  \"logBackupFrequencyInMinutes\": 0,\n  \"numMissedSnapshot\": 0,\n  \"includeBackupTaskInfo\": true,\n  \"isDbLocalToTheCluster\": true,\n  \"hostLogRetentionHours\": 0,\n  \"sid\": \"rbk\",\n  \"standaloneHostId\": \"OracleHost:::d108cb3f-e4c6-4579-8aa1-f471940d6f8f\",\n  \"numInstances\": 1,\n  \"instances\": [\n    {\n      \"hostName\": \"10.0.188.224\",\n      \"instanceSid\": \"rbk\"\n    }\n  ],\n  \"isArchiveLogModeEnabled\": true,\n  \"standaloneHostName\": \"oel75-121-dg-primary-20210421023956\",\n  \"archiveLogDestinations\": [\n    \"\"\n  ],\n  \"isPrimary\": true,\n  \"dbUniqueName\": \"rbk\",\n  \"databaseRole\": \"PRIMARY\",\n  \"dataGuardType\": \"DataGuardMember\",\n  \"dataGuardGroupId\": \"OracleDatabase:::1e7d288f-deed-4d72-a3a2-ad578c093f2e\",\n  \"dataGuardGroupName\": \"DG_rbk\",\n  \"logRetentionHours\": 720,\n  \"numChannels\": 1,\n  \"hostMount\": \"/var/rubrik/oracle\",\n  \"tablespaces\": [\n    \"SYSAUX\",\n    \"SYSTEM\",\n    \"UNDOTBS1\",\n    \"USERS\",\n    \"TEMP\"\n  ],\n  \"snapshotCount\": 0,\n  \"oracleHome\": \"/u01/app/oracle/product/12.1.0.2/dbhome_1\",\n  \"isLiveMount\": false,\n  \"hostsInfo\": [\n    {\n      \"id\": \"Host:::0134de15-10b7-4296-a0b4-7232d2a9edaa\",\n      \"hostname\": \"10.0.188.224\",\n      \"oracleSysDbaUser\": \"oracle\",\n      \"oracleQueryUser\": \"oracle\"\n    }\n  ]\n}\n```\n\n## Get Oracle Advanced Cloning Options (ACO) parameters\n\nTo get a list of supported ACO parameter names, send a GET request to the [`/oracle/aco_parameter_list`](#operation/getAcoParameterList) endpoint.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/oracle/aco_parameter_list\"\n```\n\nThe Rubrik REST API server responds with an OracleAcoParameterList object which contains the list of supported ACO parameter names.\n\n## Validate an Oracle Advanced Cloning Options (ACO) config file\n\nTo validate an ACO file, send a POST request to the [`/oracle/validate_aco_file`](#operation/validateOracleAcoFile) endpoint. Send the base 64 encoded string of the ACO file contents in the body and a boolean determining whether the ACO file is for a Live Mount or not, as a query parameter.\n```bash\ncurl -X POST \\\n  -d '{\n    \"aco_contents_base64\": \"$aco_contents_base64\"\n  }' \\\n  \"https://$cluster_address/api/v1/oracle/validate_aco_file?is_live_mount={is_live_mount}\n```\n\nThe Rubrik REST API server validates the given ACO file contents and returns an OracleAcoValidationResult containing the validation result of the ACO file given.\n\n# vApps\n\nThe Rubrik cluster protects vApps running in a VMware vCloud Director environment through the vCloud Director REST APIs.\nThe Rubrik cluster must connect to the underlying vCenter servers to protect vApps.\n\n## vApp Templates\n\nThe Rubrik cluster protects vApp template objects through the vCloud Director APIs.\n\n## vCloud Director server\n\nA Rubrik cluster protects and manages vApps and vApp templates through the vCloud Director server that administers those\nvApps. After a vCloud Director server is added to a Rubrik cluster, the Rubrik cluster automatically discovers the vApps\nadministered under the server.\n\n### Retrieving details for a vApp template snapshot export\n\nTo retrieve the options available for exporting a specified vApp template snapshot to an organization vDC and available\nstorage policies, send a GET request\nto [`/vcd/vapp/template/snapshot/{snapshot_id}/export/options`](#operation/getVappTemplateSnapshotExportOptions).\n\nTo filter the results of the GET request sent to the \n[`/vcd/vapp/template/snapshot/{snapshot_id}/export/options`](#operation/getVappTemplateSnapshotExportOptions)\nendpoint, configure the following query parameters before sending the request.\n\n| Parameter  | Required | Type   | Description |\n| ---------- | -------- | ------ | ----------- |\n|`catalog_id`| Required | string | ID of the target Catalog object.|\n|`name`      | Required | string | Name of template object to be created. This is used to verify the existence of a template with the given name. Templates must have unique names.\n|`org_vdc_id`| Optional | string | ID assigned to a target organization VDC object. This parameter is required when advanced export options are used.\n\nA vApp template export targets a catalog and requires a valid storage policy and organization vDC. There are three\noptions available for export of a vApp template -\n\n* **OriginalVdcExportOptions** - This option is used to export to the original organization vDC of the vApp template\n  when the snapshot was taken. Only available when the catalog to export is under the same organization as the original\n  organization vDC and the vDC is still active.\n  `org_vdc_id` is not required when using this option.\n* **DefaultCatalogExportOptions** - This option is used to export to the vDC corresponding to the default storage policy\n  of the catalog. This option is unavailable for catalogs that do not have storage policies.\n  `org_vdc_id` is not required when using this option.\n* **AdvancedExportOptions** - This option is used to export to a specific organization vDC under the same organization\n  as the Catalog to export. The GET request returns the choices of storage policies available.\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/vcd/vapp/template/snapshot/$snapshot_id/export/options?catalog_id=$catalog_id&name=$template_name\"\n```\n\nThe Rubrik REST API responds with a `VappTemplateExportOptionsUnion` object which has fields for all the above options.\n\n**Note:** To shorten the example, the response uses ellipses to replace some members.\n\n```bash\n{\n  \"hasMore\": false,\n  \"originalVdcExportOptions\" :\n    {\n      \"orgVdcId\": \"$org_vdc_id1\",\n      \"availableStoragePolicies\": [\n        ...\n      ]\n    },\n   \"defaultCatalogExportOptions\" :\n    {\n      \"orgVdcId\": \"$org_vdc_id1\",\n      \"availableStoragePolicies\": [\n        ...\n      ]\n    },\n   \"advancedExportOptions\" :\n    {\n      \"orgVdcId\": \"$org_vdc_id1\",\n      \"availableStoragePolicies\": [\n        ...\n      ]\n    }\n}\n```\n\n### Exporting a vApp template snapshot\n\nTo create a new vApp template in a catalog using the export feature, send a POST request to the \n[`/vcd/vapp/template/snapshot/{snapshot_id}/export`](#operation/createVappTemplateSnapshotExport) endpoint.\nThe request takes the snapshot_id as a path parameter. The request payload includes the parameters described in the \nfollowing table.\n\n| Name            | Required | Type   | Description |\n| --------------- | -------- | ------ | ----------- |\n|`name`           | Required | string | Name of vApp template to be created.|\n|`catalogId`      | Required | string | ID of the Catalog where the vApp template is created.|\n|`orgVdcId`       | Required | string | ID of the organization vDC where the vApp template is created.|\n|`storagePolicyId`| Required | string | ID of the organization vDC storage policy to be used. In case a storage policy ID is not provided, the default storage policy of the organization vDC is used.\n\n**Note:** The Catalog and organization vDC must belong to the same organization. When providing a storage policy, that\nstorage policy must be present in the organization vDC.\n\n```bash\ncurl -X POST -d \\\n  '{\n    \"name\": \"$template_name\",\n    \"catalogId\": \"$catalog_id\",\n    \"orgVdcId\": \"$org_vdc_id\"\n   }' \\\n   \"https://$cluster_address/api/v1/vcd/vapp/template/snapshot/$snapshot_id/export\"\n```\n\nThe Rubrik REST API server initiates the asynchronous request task and responds with the the details of the\nAsyncRequestStatus request.\n\n```bash\n{\n  \"id\": \"$request_id\",\n  \"status\": \"QUEUED\",\n  \"progress\": 0,\n  \"startTime\": \"$timestamp\",\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vcd/vapp/request/$request_id\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\n### Retrieving summary of vApps\n\nTo retrieve the summary information for all vCD vApp objects, send a GET request to the\n[`/vcd/vapp`](#operation/queryVcdVappsV1) endpoint. The parameters described in the following table are available to \nfilter the results of the GET request.\n\n| Name                     | Required | Type    | Description |\n| ------------------------ | -------- | ------- | ----------- |\n|`sort_by`                 | Optional | string  | Attribute to sort the vCD vApp list on.|\n|`sort_order`              | Optional | string  | Order for sorting the results, either ascending or descending.|\n|`limit`                   | Optional | int     | Limit the number of matches returned.|\n|`offset`                  | Optional | int     | Number of matches to ignore from the beginning of the results.|\n|`name`                    | Optional | string  | Search for a vCD vApp object by name.|\n|`is_relic`                | Optional | boolean | Filter by isRelic field of vCD vApp object. Returns both relic and non-relic vApps when this value is not specified.|\n|`effective_sla_domain_id` | Optional | string  | SLA Domain applied to the virtual machine, either directly or derived.|\n|`primary_cluster_id`      | Optional | string  | Filter by primary cluster ID, or **local**.|\n|`sla_assignment`          | Optional | string  | Filter by SLA assignment type.|\n|`include_backup_task_info`| Optional | boolean | Include backup task information in response.|\n\n ```bash\n curl -X GET \"https://$cluster_address/api/v1/vcd/vapp\"\n ```\n\nThe Rubrik REST API server responds with a list of vApp objects that fit the specified parameters. The response is a \nList of VcdVappSummary objects.\n\n ```bash\n {\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"id\": \"$vappId\",\n      \"name\": \"$vappName\",\n      \"configuredSlaDomainId\": \"INHERIT\",\n      \"configuredSlaDomainName\": \"Inherit\",\n      \"configuredSlaDomainType\": \"ProtectionSla\",\n      \"primaryClusterId\": \"$primaryClusterId\",\n      \"isConfiguredSlaDomainRetentionLocked\": true,\n      \"slaLastUpdateTime\": \"$slaLastUpdateTime\",\n      \"effectiveSlaDomainId\": \"UNPROTECTED\",\n      \"effectiveSlaDomainName\": \"Unprotected\",\n      \"isEffectiveSlaDomainRetentionLocked\": true,\n      \"effectiveSlaDomainPolarisManagedId\": \"$effectiveSlaDomainPolarisManagedId\",\n      \"effectiveSlaSourceObjectId\": \"$effectiveSlaSourceObjectId\",\n      \"effectiveSlaSourceObjectName\": \"$effectiveSlaSourceObjectName\",\n      \"slaAssignment\": \"Derived\",\n      \"retentionSlaDomainId\": \"$retentionSlaDomainId\",\n      \"vcdClusterId\": \"$vcdId\",\n      \"vcdClusterName\": \"$vcdClusterName\",\n      \"infraPath\": [\n        ...\n      ],\n      \"isRelic\": true,\n      \"numMissedSnapshot\": 0,\n      \"lastSnapshotTime\": \"$lastSnapshotTime\",\n      \"includeBackupTaskInfo\": true,\n      \"currentBackupTaskInfo\": {\n        \"taskStatus\": \"Queued\",\n        \"queueTime\": \"$queueTime\",\n        \"expectedEndTime\": \"$expectedEndTime\"\n      },\n      \"isTemplate\": true,\n      \"catalogId\": \"$catalogId\",\n      \"pendingSlaDomain\": {\n        \"objectId\": \"$objectId\",\n        \"pendingSlaDomainId\": \"$pendingSlaDomain\",\n        \"pendingSlaDomainName\": \"$pendingSlaDomainName\",\n        \"isPendingSlaDomainRetentionLocked\": true\n      }\n    }\n  ],\n  \"total\": 0\n}\n ```\n\n### Retrieving details for a specific vApp\n\nTo retrieve detailed information about a specific vApp, send a GET request to\n[`/vcd/vapp/{id}`](#operation/getVcdVappV1), where {id} is the ID of a vApp object.\n\n ```bash\n curl -X GET -d \"https://$cluster_address/api/v1/vcd/vapp/{id}\"\n ```\n\nThe Rubrik REST API server responds with the details (VcdVappDetail) of the specified vApp object.\n\n ```bash\n{\n  \"id\": \"string\",\n  \"status\": \"string\",\n  \"progress\": 0,\n  \"startTime\": \"2021-03-16T04:37:38.913Z\",\n  \"endTime\": \"2021-03-16T04:37:38.913Z\",\n  \"nodeId\": \"string\",\n  \"error\": {\n    \"message\": \"string\"\n  },\n  \"links\": [\n    {\n      \"href\": \"string\",\n      \"rel\": \"string\"\n    }\n  ]\n}\n ```\n\n### Updating vApp\n\nTo make changes to the parameters of a specified vApp object, send a PATCH request\nto [`/vcd/vapp/{id}`](#operation/updateVcdVappV1), where {id} is the ID of the vApp object to be updated. The request\npayload of the PATCH request includes the parameters to be updated.\n\n| Name |  Description | Notes |\n  | ---- | ------------ | ----- |\n| configured_sla_domain_id | ID of the SLA Domain object that manages protection for the specified vApp object. Existing snapshots of the vApp object will be retained with the configuration of the specified SLA Domain. | optional |\n| is_paused | Boolean value that indicates whether protection activity is paused for the specified vApp. Set to &#39;true&#39; when protection activity is paused and &#39;false&#39; when protection activity is not paused. Protection activity includes: backup, replication, and archiving. | optional |\n| is_best_effort_synchronization_enabled | Boolean value that indicates whether the Rubrik cluster should attempt taking synchronized snapshots across all child Virtual Machines of the vApp object. | optional |\n| vcd_vm_moids_to_exclude_from_snapshot | Array containing vCloud Director Virtual Machine moids that will be excluded from the vApp snapshots. | optional |\n\n```bash\n curl -X PATCH -d \\\n  '{\n    \"configuredSlaDomainId\": \"$sla_domain_id\",\n    \"isPaused\": \"true\",\n    \"isBestEffortSynchronizationEnabled\": \"true\",\n    \"vcdVmMoidsToExcludeFromSnapshot\": \"$vm_moids_to_exclude\"\n   }' \\\n   \"https://$cluster_address/api/v1/vcd/vapp/{id}\"\n ```\n\nThe Rubrik REST API server responds with the details (VcdVappDetail) of the updated vApp object.\n\n ```bash\n{\n  \"configuredSlaDomainId\": \"INHERIT\",\n  \"isPaused\": true,\n  \"isBestEffortSynchronizationEnabled\": true,\n  \"vcdVmMoidsToExcludeFromSnapshot\": [\n    ...\n  ],\n  \"id\": \"$vappId\",\n  \"name\": \"$name\",\n  \"configuredSlaDomainName\": \"Inherit\",\n  \"configuredSlaDomainType\": \"ProtectionSla\",\n  \"primaryClusterId\": \"$primaryClusterId\",\n  \"isConfiguredSlaDomainRetentionLocked\": true,\n  \"slaLastUpdateTime\": \"$slaLastUpdateTime\",\n  \"effectiveSlaDomainId\": \"UNPROTECTED\",\n  \"effectiveSlaDomainName\": \"Unprotected\",\n  \"isEffectiveSlaDomainRetentionLocked\": true,\n  \"effectiveSlaDomainPolarisManagedId\": \"$effectiveSlaDomainPolarisManagedId\",\n  \"effectiveSlaSourceObjectId\": \"$effectiveSlaSourceObjectId\",\n  \"effectiveSlaSourceObjectName\": \"effectiveSlaSourceObjectName\",\n  \"slaAssignment\": \"Derived\",\n  \"retentionSlaDomainId\": \"$retentionSlaDomainId\",\n  \"vcdClusterId\": \"$vcdClusterId\",\n  \"vcdClusterName\": \"$vcdClusterName\",\n  \"infraPath\": [\n    ...\n  ],\n  \"isRelic\": true,\n  \"numMissedSnapshot\": 0,\n  \"lastSnapshotTime\": \"$lastSnapshotTime\",\n  \"includeBackupTaskInfo\": true,\n  \"currentBackupTaskInfo\": {\n    \"taskStatus\": \"Queued\",\n    \"queueTime\": \"$queueTime\",\n    \"expectedEndTime\": \"$expectedEndTime\"\n  },\n  \"isTemplate\": true,\n  \"catalogId\": \"$catalogId\",\n  \"pendingSlaDomain\": {\n    \"objectId\": \"$objectId\",\n    \"pendingSlaDomainId\": \"$pendingSlaDomainId\",\n    \"pendingSlaDomainName\": \"$pendingSlaDomainName\",\n    \"isPendingSlaDomainRetentionLocked\": true\n  },\n  \"networks\": [\n    ...\n  ],\n  \"vms\": [\n    ...\n  ]\n}\n ```\n\n### Retrieving summary information for all vApp snapshots\n\n## vApp snapshots\n\nTo retrieve summary information for each of the snapshot objects of a specified vApp object, send a GET request\nto [`/vcd/vapp/{id}/snapshot`](#operation/queryVappSnapshotV1), where {id} is the ID of the vApp object.\n\n ```bash\n curl -X GET -d \"https://$cluster_address/api/v1/vcd/vapp/{id}/snapshot\"\n ```\n\nThe Rubrik REST API server responds with the details of all the snapshots of the specified vApp. \nThe response is a List of VcdVappSnapshotSummary objects.\n\n ```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"id\": \"$vappId\",\n      \"date\": \"$date\",\n      \"expirationDate\": \"$expirationDate\",\n      \"sourceObjectType\": \"$sourceObjectType\",\n      \"isOnDemandSnapshot\": true,\n      \"isCustomRetentionApplied\": true,\n      \"cloudState\": 0,\n      \"consistencyLevel\": \"#consistencyLevel\",\n      \"indexState\": 0,\n      \"replicationLocationIds\": [\n        \"string\"\n      ],\n      \"archivalLocationIds\": [\n        \"string\"\n      ],\n      \"slaId\": \"$slaId\",\n      \"slaName\": \"$slaName\",\n      \"isRetainedByRetentionLockSla\": true,\n      \"cloudStorageTier\": \"Hot\",\n      \"isPlacedOnLegalHold\": true,\n      \"snapshotRetentionInfo\": {\n        \"localInfo\": {\n          \"id\": \"string\",\n          \"name\": \"string\",\n          \"isSnapshotPresent\": true,\n          \"isExpirationDateCalculated\": true,\n          \"expirationTime\": \"$expirationTime\",\n          \"snapshotFrequency\": \"$snapshotFrequency\",\n          \"isExpirationInformationUnavailable\": true\n        },\n        \"archivalInfos\": [\n          {\n            \"id\": \"$id\",\n            \"name\": \"$name\",\n            \"isSnapshotPresent\": true,\n            \"isExpirationDateCalculated\": true,\n            \"expirationTime\": \"$expirationTime\",\n            \"snapshotFrequency\": \"$snapshotFrequency\",\n            \"isExpirationInformationUnavailable\": true\n          }\n        ],\n        \"replicationInfos\": [\n          {\n            \"id\": \"$id\",\n            \"name\": \"$name\",\n            \"isSnapshotPresent\": true,\n            \"isExpirationDateCalculated\": true,\n            \"expirationTime\": \"$expirationTime\",\n            \"snapshotFrequency\": \"$snapshotFrequency\",\n            \"isExpirationInformationUnavailable\": true\n          }\n        ],\n        \"cloudNativeLocationInfo\": [\n          {\n            \"id\": \"$id\",\n            \"name\": \"$name\",\n            \"isSnapshotPresent\": true,\n            \"isExpirationDateCalculated\": true,\n            \"expirationTime\": \"$expirationTime\",\n            \"snapshotFrequency\": \"$snapshotFrequency\",\n            \"isExpirationInformationUnavailable\": true\n          }\n        ]\n      },\n      \"parentSnapshotId\": \"$parentSnapshotId\",\n      \"vappName\": \"$vappName\",\n      \"isSynchronized\": true,\n      \"vmSnapshots\": [\n        {\n          \"vcenterVmId\": \"$vcenterVmId\",\n          \"vmSnapshotId\": \"$vmSnapshotId\",\n          \"vmName\": \"$vmName\",\n          \"vcdVmMoid\": \"$vcdVmMoid\",\n          \"indexState\": 0\n        }\n      ]\n    }\n  ],\n  \"total\": 0\n}\n ```\n\n## Creating an on-demand snapshot for a vApp\n\nTo create an on-demand snapshot for a specified vApp object, send a POST request to\n[`/vcd/vapp/{id}/snapshot`](#operation/createOnDemandSnapshotV1), where {id} is the ID of the vApp object.\n\n ```bash\n curl -X POST -d \"https://$cluster_address/api/v1/vcd/vapp/$id/snapshot\"\n ```\n\nThe Rubrik REST API server initiates an asynchronous job to create an on-demand snapshot and returns the details of the\nAsyncRequestStatus request.\n\n ```bash\n{\n  \"id\": \"$requestId\",\n  \"status\": \"QUEUED\",\n  \"progress\": 0,\n  \"startTime\": \"$startTime\",\n  \"endTime\": \"$endTime\",\n  \"nodeId\": \"$nodeId\",\n  \"error\": {\n    \"message\": \"string\"\n  },\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vcd/vapp/request/$requestId\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n ```\n\n### Deleting all snapshots of a vApp object\n\nTo delete all snapshots for a specified vApp object, send a DELETE request to\n[`/vcd/vapp/{id}/snapshot`](#operation/deleteVappSnapshotsV1), where {id} is the ID of the vApp object whose snapshot\nneeds to be deleted.\n\n ```bash\n curl -X DELETE -d \"https://$cluster_address/api/v1/vcd/vapp/$id/snapshot\"\n ```\n\nThe Rubrik REST API server deletes all snapshots of the specified vApp.\n\n ```bash\n{\"Snapshots deleted successfully.\"}\n ```\n\n## Retrieving details about a specific vApp snapshot\n\nTo retrieve detailed information about a specified snapshot for a vApp object, send a GET request\nto [`/vcd/vapp/snapshot/{id}`](#operation/getVappSnapshotV1), where {id} is the ID of the snapshot object whose details\nare required.\n\n```bash\n curl -X GET -d \"https://$cluster_address/api/v1/vcd/vapp/snapshot/{id}\"\n ```\n\nThe Rubrik REST API server fetches details (VcdVappSnapshotDetail) of the specified vApp snapshot.\n\n ```bash\n{\n  \"id\": \"$id\",\n  \"date\": \"$date\",\n  \"expirationDate\": \"$expirationDate\",\n  \"sourceObjectType\": \"$sourceObjectType\",\n  \"isOnDemandSnapshot\": true,\n  \"isCustomRetentionApplied\": true,\n  \"cloudState\": 0,\n  \"consistencyLevel\": \"$consistencyLevel\",\n  \"indexState\": 0,\n  \"replicationLocationIds\": [\n    \"string\"\n  ],\n  \"archivalLocationIds\": [\n    \"string\"\n  ],\n  \"slaId\": \"$slaId\",\n  \"slaName\": \"$slaName\",\n  \"isRetainedByRetentionLockSla\": true,\n  \"cloudStorageTier\": \"Hot\",\n  \"isPlacedOnLegalHold\": true,\n  \"snapshotRetentionInfo\": {\n    \"localInfo\": {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"isSnapshotPresent\": true,\n      \"isExpirationDateCalculated\": true,\n      \"expirationTime\": \"$expirationTime\",\n      \"snapshotFrequency\": \"$snapshotFrequency\",\n      \"isExpirationInformationUnavailable\": true\n    },\n    \"archivalInfos\": [\n      {\n        \"id\": \"$id\",\n        \"name\": \"$name\",\n        \"isSnapshotPresent\": true,\n        \"isExpirationDateCalculated\": true,\n        \"expirationTime\": \"$expirationTime\",\n        \"snapshotFrequency\": \"$snapshotFrequency\",\n        \"isExpirationInformationUnavailable\": true\n      }\n    ],\n    \"replicationInfos\": [\n      {\n        \"id\": \"$id\",\n        \"name\": \"$name\",\n        \"isSnapshotPresent\": true,\n        \"isExpirationDateCalculated\": true,\n        \"expirationTime\": \"$expirationTime\",\n        \"snapshotFrequency\": \"$snapshotFrequency\",\n        \"isExpirationInformationUnavailable\": true\n      }\n    ],\n    \"cloudNativeLocationInfo\": [\n      {\n        \"id\": \"$id\",\n        \"name\": \"$name\",\n        \"isSnapshotPresent\": true,\n        \"isExpirationDateCalculated\": true,\n        \"expirationTime\": \"$expirationTime\",\n        \"snapshotFrequency\": \"$snapshotFrequency\",\n        \"isExpirationInformationUnavailable\": true\n      }\n    ]\n  },\n  \"parentSnapshotId\": \"$parentSnapshotId\",\n  \"vappName\": \"$vappName\",\n  \"isSynchronized\": true,\n  \"vmSnapshots\": [\n    {\n      \"vcenterVmId\": \"$vcenterVmId\",\n      \"vmSnapshotId\": \"$vmSnapshotId\",\n      \"vmName\": \"$vmName\",\n      \"vcdVmMoid\": \"$vcdVmMoid\",\n      \"indexState\": 0,\n      \"networkConnections\": [\n        {\n          \"nicIndex\": 0,\n          \"macAddress\": \"$macAddress\",\n          \"addressingMode\": \"DHCP\",\n          \"ipAddress\": \"$ipAddress\",\n          \"vappNetworkName\": \"vappNetworkName\",\n          \"isConnected\": true,\n          \"networkAdapterType\": \"$networkAdapterType\"\n        }\n      ]\n    }\n  ],\n  \"networks\": [\n    {\n      \"name\": \"$name\",\n      \"parentNetworkId\": \"$parentNetworkId\",\n      \"isDeployed\": true\n    }\n  ],\n  \"excludedVcdVmMoids\": [\n    $excludedVcdVmMoids\n  ]\n}\n ```\n\n### Deleting a specific vApp snapshot object\n\nTo delete an on-demand snapshot or a snapshot from a vApp that is not assigned to an SLA Domain, send a DELETE request\nto [`/vcd/vapp/snapshot/{id}`](#operation/deleteVappSnapshotV1), where {id}  is the ID assigned to a snapshot object.\n\n```bash\n curl -X DELETE -d \"https://$cluster_address/api/v1/vcd/vapp/snapshot/{id}?location=$snapshot_location\"\n ```\n\nThe Rubrik REST API server deletes the specified vApp snapshot at the location (\"all\" or \"local\") specified. \n\n ```bash\n{\"Snapshot successfully deleted.\"}\n ```\n\n### Retrieving details about missed snapshots for a vApp object\n\nTo retrieve the timestamp for each missed snapshot for a specified vApp, send a GET request\nto [`/vcd/vapp/{id}/missed_snapshot`](#operation/vcdMissedSnapshotsV1). where {id} is the id of the vapp.\n\n ```bash\n  curl -X GET -d \"https://$cluster_address/api/v1/vcd/vapp/$id/missed_snapshot\"\n  ```\n\nThe Rubrik REST API server fetches details about all missed snapshots (List of MissedSnapshot) of the specified vApp.\n\n  ```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"archivalLocationType\": [\n        \"string\"\n      ],\n      \"missedSnapshotTime\": \"$missedSnapshotTime\",\n      \"missedSnapshotTimeUnits\": [\n        {\n          \"timeUnit\": \"Minute\",\n          \"frequency\": 0,\n          \"retention\": 0,\n          \"dayOfTime\": \"Monday\"\n        }\n      ]\n    }\n  ],\n  \"total\": 0\n}\n  ```\n\n### Retrieving exportable network configurations\n\nTo retrieve the summary information for the vApp networks that are available for network connections from the virtual\nmachines in the exported vApp snapshot, send a GET request\nto [`/vcd/vapp/snapshot/{snapshot_id}/export/options`](#operation/getVappSnapshotExportOptionsV1). This API requires the\nsnapshot_id of the vApp snapshot object to export. It also requires the `export_mode`, `target_vapp_id` and the\n`target_org_vdc_id1`.\n\n```bash\n  curl -X GET -d \"https://$cluster_address/api/v1/vcd/vapp/snapshot/$snapshot_id/export/options?export_mode=$export_mode\"\n  ```\n\nThe Rubrik REST API server fetches VappExportOptions for the specified snapshot and export mode specified.\n\n  ```bash\n{\n  \"restorableNetworks\": [\n    {\n      \"name\": \"$name\",\n      \"parentNetworkId\": \"$parentNetworkId\",\n      \"isDeployed\": true,\n      \"newName\": \"$newName\"\n    }\n  ],\n  \"targetVappNetworks\": [\n    {\n      \"name\": \"$name\",\n      \"parentNetworkId\": \"$parentNetworkId\",\n      \"isDeployed\": true\n    }\n  ],\n  \"availableStoragePolicies\": [\n    {\n      \"name\": \"$name\",\n      \"id\": \"$id\"\n    }\n  ],\n  \"allChildVmsWithDefaultNetworkConnections\": [\n    {\n      \"name\": \"$name\",\n      \"vcdMoid\": \"$vcdMoid\",\n      \"storagePolicyId\": \"$storagePolicyId\",\n      \"networkConnections\": [\n        {\n          \"nicIndex\": 0,\n          \"macAddress\": \"$macAddress\",\n          \"addressingMode\": \"DHCP\",\n          \"ipAddress\": \"$ipAddress\",\n          \"vappNetworkName\": \"$vappNetworkName\",\n          \"isConnected\": true,\n          \"networkAdapterType\": \"$networkAdapterType\"\n        }\n      ]\n    }\n  ]\n}\n  ```\n\n### Exporting vApp snapshot\n\nTo export the specified vApp snapshot into a new vApp or an existing vApp, send a POST request\nto [`/vcd/vapp/snapshot/{snapshot_id}/export`](#operation/createVappExportV1), where {snapshot_id} is the ID assigned to\nthe vApp snapshot object.\n\n```bash\n    curl -X POST -d \\\n    '{\n      \"exportMode\": \"$exportMode\",\n      \"newVappParams\": {\n        \"name\": \"$name\",\n        \"orgVdcId\": \"$orgVdcId\"\n      },\n      \"targetVappId\": \"$targetVappId\",\n      \"networksToRestore\": [\n        {\n          \"name\": \"$name\",\n          \"parentNetworkId\": \"$parentNetworkId\",\n          \"isDeployed\": true,\n          \"newName\": \"$newName\"\n        }\n      ],\n      \"vmsToExport\": [\n        {\n          \"name\": \"$name\",\n          \"vcdMoid\": \"$vcdMoid\",\n          \"storagePolicyId\": \"$storagePolicyId\",\n          \"networkConnections\": [\n            {\n              \"nicIndex\": 0,\n              \"macAddress\": \"$macAddress\",\n              \"addressingMode\": \"DHCP\",\n              \"ipAddress\": \"$ipAddress\",\n              \"vappNetworkName\": \"$vappNetworkName\",\n              \"isConnected\": true,\n              \"networkAdapterType\": \"$networkAdapterType\"\n            }\n          ]\n        }\n      ],\n      \"shouldPowerOnVappAfterExport\": false\n    }' \\\n    \"https://$cluster_address/api/v1/vcd/vapp/snapshot/$snapshot_id/export\"\n```\n\nThe Rubrik REST API server initiates an asynchronous job to export vApp snapshot and returns the details of the\nAsyncRequestStatus request.\n\n```bash\n{\n  \"id\": \"$requestId\",\n  \"status\": \"QUEUED\",\n  \"progress\": 0,\n  \"startTime\": \"$startTime\",\n  \"endTime\": \"$endTime\",\n  \"nodeId\": \"$nodeId\",\n  \"error\": {\n    \"message\": \"string\"\n  },\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vcd/vapp/request/$requestId\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\n### Recovering vApp objects of virtual machines\n\nTo instantly recover the specified vApp, send a POST request\nto [`/vcd/vapp/snapshot/{snapshot_id}/instant_recover`](#operation/createVappInstantRecoveryV1), where {snapshot_id} is\nthe ID assigned to the vApp snapshot object.\n\n```bash\n    curl -X POST -d \\\n    '{\n      \"vmsToRestore\": [\n        {\n          \"name\": \"$name\",\n          \"vcdMoid\": \"$vcdMoid\",\n          \"storagePolicyId\": \"$storagePolicyId\",\n          \"networkConnections\": [\n            {\n              \"nicIndex\": 0,\n              \"macAddress\": \"$macAddress\",\n              \"addressingMode\": \"DHCP\",\n              \"ipAddress\": \"$ipAddress\",\n              \"vappNetworkName\": \"$vappNetworkName\",\n              \"isConnected\": true,\n              \"networkAdapterType\": \"$networkAdapterType\"\n            }\n          ]\n        }\n      ],\n      \"shouldPowerOnVmsAfterRecovery\": false\n    }' \\\n    \"https://$cluster_address/api/v1/vcd/vapp/snapshot/$snapshot_id/instant_recover\"\n```\n\nThe Rubrik REST API server initiates an asynchronous job to Instant Recover vApp snapshot and returns the details of the\nAsyncRequestStatus request.\n\n```bash\n{\n  \"id\": \"$requestId\",\n  \"status\": \"$status\",\n  \"progress\": 0,\n  \"startTime\": \"$startTime\",\n  \"endTime\": \"$endTime\",\n  \"nodeId\": \"$nodeId\",\n  \"error\": {\n    \"message\": \"string\"\n  },\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vcd/vapp/request/$requestId\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\n### Retrieving Instant Recovery information\n\nTo retrieve the available vApp network connections and the default vApp network connection for the virtual machines in a\nvApp snapshot, send a GET request\nto [`/vcd/vapp/snapshot/{snapshot_id}/instant_recover/options`](#operation/getVappSnapshotInstantRecoveryOptionsV1),\nwhere {snapshot_id} is the ID of the vApp snapshot object.\n\n```bash\n    curl -X GET -d \"https://$cluster_address/api/v1/vcd/vapp/snapshot/$snapshot_id/instant_recover/options\"\n```\n\nThe Rubrik REST API server fetches VappInstantRecoveryOptions for the specified snapshot.\n\n```bash\n{\n  \"restorableVms\": [\n    {\n      \"name\": \"$name\",\n      \"vcdMoid\": \"$vcdMoid\",\n      \"storagePolicyId\": \"$storagePolicyId\",\n      \"networkConnections\": [\n        {\n          \"nicIndex\": 0,\n          \"macAddress\": \"$macAddress\",\n          \"addressingMode\": \"DHCP\",\n          \"ipAddress\": \"$ipAddress\",\n          \"vappNetworkName\": \"$vappNetworkName\",\n          \"isConnected\": true,\n          \"networkAdapterType\": \"$networkAdapterType\"\n        }\n      ]\n    }\n  ],\n  \"availableVappNetworks\": [\n    {\n      \"name\": \"$name\",\n      \"parentNetworkId\": \"$parentNetworkId\",\n      \"isDeployed\": true\n    }\n  ]\n}\n```\n\n### Retrieving vApp job status\n\nTo retrieves the details of a specified asynchronous job for a vApp, send a GET request\nto [`/vcd/vapp/request/{id}`](#operation/getVappAsyncRequestStatusV1), where {id} is the ID assigned to an asynchronous\njob.\n\n```bash\n    curl -X GET -d \"https://$cluster_address/api/v1/vcd/vapp/request/{id}\"\n```\n\nThe Rubrik REST API server fetches status of a vApp asynchronous job (AsyncRequestStatus).\n\n```bash\n{\n  \"id\": \"$requestId\",\n  \"status\": \"QUEUED\",\n  \"progress\": 0,\n  \"startTime\": \"$startTime\",\n  \"endTime\": \"$endTime\",\n  \"nodeId\": \"$nodeId\",\n  \"error\": {\n    \"message\": \"string\"\n  },\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vcd/vapp/request/$requestId\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\n### Searching for a file in a vApp snapshot\n\nTo search for a file through snapshots of all virtual machines that are part of the vApp, send a GET request\nto [`/vcd/vapp/{id}/search`](#operation/searchVappV1), where {id} is the ID of the vApp. It also requires a `path`\nparameter. The parameter takes either a path prefix or a filename prefix.\n\n```bash\n    curl -X GET -d \"https://$cluster_address/api/v1/vcd/vapp/$id/search/options?path=$path\"\n```\n\nThe Rubrik REST API server searches a file through snapshots of all virtual machines and returns list of \nAppSearchResponse.\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"path\": \"$path\",\n      \"filename\": \"$filename\",\n      \"fileVersions\": [\n        {\n          \"lastModified\": \"$lastModified\",\n          \"size\": 0,\n          \"snapshotId\": \"$snapshotId\",\n          \"fileMode\": \"$fileMode\",\n          \"source\": \"$source\"\n        }\n      ],\n      \"childObjectId\": \"$childObjectId\",\n      \"childObjectName\": \"$childObjectName\"\n    }\n  ],\n  \"total\": 0\n}\n```\n\n### Downloading snapshot from archive\n\nTo retrieve a snapshot that is not available locally, from an archival location, send a POST request\nto [`/vcd/vapp/snapshot/{id}/download`](#operation/createVcdVappDownloadSnapshotFromCloudV1)z where {id} is the ID of\nthe snapshot which needs to be downloaded.\n\n```bash\n    curl -X POST -d \"https://$cluster_address/api/v1/vcd/vapp/snapshot/$id/download\"\n```\n\nThe Rubrik REST API server initiates an asynchronous job to download vApp snapshot from archive and returns the \ndetails of the AsyncRequestStatus request.\n\n```bash\n{\n  \"id\": \"$requestId\",\n  \"status\": \"QUEUED\",\n  \"progress\": 0,\n  \"startTime\": \"$startTime\",\n  \"endTime\": \"$endTime\",\n  \"nodeId\": \"$nodeId\",\n  \"error\": {\n    \"message\": \"string\"\n  },\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vcd/vapp/request/$requestId\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\n### Retrieving summary for all vCD Clusters\n\nTo retrieve the summary information for all vCD cluster objects, send a GET request\nto [`/vcd/cluster`](#operation/queryVcdClusterV1). The parameters described in the following table are available to\nfilter the results of the GET request.\n\n| Name       | Required | Type   | Description |\n| ---------- | -------- | ------ | ----------- |\n|`name`      | Optional | string | Search for a vCD Cluster object by name.|\n|`status`    | Optional | string | Filter the results using the status value of the vCD Cluster objects.|\n|`sort_by`   | Optional | string | Attribute to sort the results on.|\n|`sort_order`| Optional | string | Order for sorting the results, either ascending or descending.|\n\n```bash\n    curl -X GET -d \"https://$cluster_address/api/v1/vcd/cluster\"\n```\n\nThe Rubrik REST API server fetches VcdClusterSummary for all vCD instances on the Rubrik cluster.\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"id\": \"$id\",\n      \"name\": \"$name\",\n      \"configuredSlaDomainId\": \"INHERIT\",\n      \"configuredSlaDomainName\": \"Inherit\",\n      \"configuredSlaDomainType\": \"ProtectionSla\",\n      \"primaryClusterId\": \"$primaryClusterId\",\n      \"isConfiguredSlaDomainRetentionLocked\": true,\n      \"slaLastUpdateTime\": \"$slaLastUpdateTime\",\n      \"hostname\": \"$hostname\",\n      \"username\": \"$username\",\n      \"caCerts\": \"$caCerts\",\n      \"connectionStatus\": {\n        \"status\": \"Disconnected\",\n        \"message\": \"string\"\n      }\n    }\n  ],\n  \"total\": 0\n}\n```\n\n### Adding a vCD Cluster\n\nTo create a vCD Cluster object by providing the address of the vCD Cluster and the credentials for an account on the\nvCD Cluster that has administrator privileges, send a POST request to [`/vcd/cluster`](#operation/createVcdClusterV1).\n\n```bash\n    curl -X POST -d \\\n    '{\n      \"hostname\": \"$hostname\",\n      \"username\": \"$username\",\n      \"caCerts\": \"$caCerts\",\n      \"password\": \"$password\"\n    }' \\\n    \"https://$cluster_address/api/v1/vcd/cluster\"\n```\n\nThe Rubrik REST API server attempts to add vCD to the Rubrik cluster and returns AsyncRequestStatus of request.\n\n```bash\n{\n  \"id\": \"$requestId\",\n  \"status\": \"QUEUED\",\n  \"progress\": 0,\n  \"startTime\": \"$startTime\",\n  \"endTime\": \"$endTime\",\n  \"nodeId\": \"$nodeId\",\n  \"error\": {\n    \"message\": \"string\"\n  },\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vcd/cluster/request/$requestId\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\n### Retrieving VimServers of a vCD Cluster\n\nTo retrieve the VimServer representation of the vCenter Servers that are attached to a specified vCD Cluster object,\nsend a GET request to [`/vcd/cluster/{id}/vimserver`](#operation/queryVcdVimServerV1), where {id} is the ID assigned to\nthe vCD cluster. It also need two parameters `sort_by` and `sort_order` which decide the order of the results.\n\n```bash\n    curl -X GET -d \"https://$cluster_address/api/v1/vcd/cluster/$id/vimserver\"\n```\n\nThe Rubrik REST API server fetches VimserverSummary for all Vim servers belonging to a vCD.\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"id\": \"$id\",\n      \"name\": \"$name\",\n      \"vcenterId\": \"$vcenterId\",\n      \"vcdClusterId\": \"$vcdClusterId\",\n      \"vcdClusterName\": \"$vcdClusterName\",\n      \"hostname\": \"$hostname\",\n      \"connectionStatus\": {\n        \"status\": \"Disconnected\",\n        \"message\": \"string\"\n      }\n    }\n  ],\n  \"total\": 0\n}\n```\n\n### Refreshing a vCD Cluster\n\nTo refresh the metadata for a specified vCD Cluster object, send a POST request\nto [`/vcd/cluster/{id}/refresh`](#operation/refreshVcdClusterV1), where {id} is the ID assigned to a vCD Cluster object.\n\n```bash\n    curl -X POST -d \"https://$cluster_address/api/v1/vcd/cluster/$id/refresh\"\n```\n\nThe Rubrik REST API server initiates an asynchronous job to refresh a vCD and returns the\ndetails of the AsyncRequestStatus request.\n\n```bash\n{\n  \"id\": \"$requestId\",\n  \"status\": \"QUEUED\",\n  \"progress\": 0,\n  \"startTime\": \"$startTime\",\n  \"endTime\": \"$endTime\",\n  \"nodeId\": \"$nodeId\",\n  \"error\": {\n    \"message\": \"string\"\n  },\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vcd/cluster/request/$requestId\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\n### Retrieving vCD Cluster details\n\nTo retrieve detailed information for a vCD Cluster object, send a GET request\nto [`/vcd/cluster/{id}`](#operation/getVcdClusterV1), where {id} is the ID assigned to a vCD Cluster object.\n\n```bash\n    curl -X GET -d \"https://$cluster_address/api/v1/vcd/cluster/{id}\"\n```\n\nThe Rubrik REST API server fetches VcdClusterDetail for the specified vCD instance.\n\n```bash\n{\n  \"id\": \"$id\",\n  \"name\": \"$name\",\n  \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n  \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n  \"configuredSlaDomainType\": \"ProtectionSla\",\n  \"primaryClusterId\": \"$primaryClusterId\",\n  \"isConfiguredSlaDomainRetentionLocked\": true,\n  \"slaLastUpdateTime\": \"$slaLastUpdateTime\",\n  \"hostname\": \"$hostname\",\n  \"username\": \"$username\",\n  \"caCerts\": \"$caCerts\",\n  \"connectionStatus\": {\n    \"status\": \"Disconnected\",\n    \"message\": \"string\"\n  }\n}\n```\n\n### Changing vCD Cluster object\n\nTo modify the hostname and credentials of a specified vCD Cluster object, send a PATCH request\nto [`/vcd/cluster/{id}`](#operation/updateVcdClusterV1), where {id} is the ID assigned to a vCD Cluster object. It also\nrequires a parameter named `patch_properties` which contains the updated hostname and credentials for a specified vCD\nCluster object.\n\n```bash\n    curl -X PATCH -d \\\n    '{\n      \"hostname\": \"$hostname\",\n      \"username\": \"$username\",\n      \"password\": \"$password\",\n      \"caCerts\": \"$caCerts\",\n      \"configuredSlaDomainId\": \"$configuredSlaDomainId\"\n    }' \\\n    \"https://$cluster_address/api/v1/vcd/cluster/{id}\"\n```\n\nThe Rubrik REST API server updates and fetches the updated VcdClusterDetail for the specified vCD instance.\n\n```bash\n{\n  \"id\": \"$id\",\n  \"name\": \"$name\",\n  \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n  \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n  \"configuredSlaDomainType\": \"ProtectionSla\",\n  \"primaryClusterId\": \"$primaryClusterId\",\n  \"isConfiguredSlaDomainRetentionLocked\": true,\n  \"slaLastUpdateTime\": \"$slaLastUpdateTime\",\n  \"hostname\": \"$hostname\",\n  \"username\": \"$username\",\n  \"caCerts\": \"$caCerts\",\n  \"connectionStatus\": {\n    \"status\": \"Disconnected\",\n    \"message\": \"string\"\n  }\n}\n```\n\n### Removing a vCD Cluster\n\nTo remove a vCD Cluster object, send a DELETE request to [`/vcd/cluster/{id}`](#operation/deleteVcdClusterV1), where\n{id} is the ID of assigned to a vCD Cluster object.\n\n```bash\n    curl -X DELETE -d \"https://$cluster_address/api/v1/vcd/cluster/{id}\"\n```\n\nThe Rubrik REST API server initiates an asynchronous job to delete a vCD instance and returns the\ndetails of the AsyncRequestStatus request.\n\n```bash\n{\n  \"id\": \"$requestId\",\n  \"status\": \"QUEUED\",\n  \"progress\": 0,\n  \"startTime\": \"$startTime\",\n  \"endTime\": \"$endTime\",\n  \"nodeId\": \"$nodeId\",\n  \"error\": {\n    \"message\": \"string\"\n  },\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vcd/cluster/request/$requestId\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\n### Retrieving details of jobs on vCD cluster\n\nTo retrieve the details of a specified asynchronous job for a vCD Cluster, send a GET request\nto [`/vcd/cluster/request/{id}`](#operation/getVcdClusterAsyncRequestStatusV1), where {id} is the ID assigned to an\nasynchronous job.\n\n```bash\n    curl -X GET -d \"https://$cluster_address/api/v1/vcd/cluster/request/{id}\"\n```\n\nThe Rubrik REST API server fetches details of the specifed asynchronous job and returns the AsyncRequestStatus request.\n\n```bash\n{\n  \"id\": \"$requestId\",\n  \"status\": \"QUEUED\",\n  \"progress\": 0,\n  \"startTime\": \"$startTime\",\n  \"endTime\": \"$endTime\",\n  \"nodeId\": \"$nodeId\",\n  \"error\": {\n    \"message\": \"string\"\n  },\n  \"links\": [\n    {\n      \"href\": \"https://$cluster_address/api/v1/vcd/cluster/request/$requestId\",\n      \"rel\": \"self\"\n    }\n  ]\n}\n```\n\n### Retrieving summary of a vCD hierarchy object\n\nTo retrieve details of the specified object in the vCD hierarchy, send a GET request\nto [`/vcd/hierarchy/{id}`](#operation/getVcdHierarchyObjectV1), where {id} is the ID of the vCD hierarchy object.\n\n```bash\n    curl -X GET -d \"https://$cluster_address/api/v1/vcd/hierarchy/{id}\"\n```\n\nThe Rubrik REST API server fetches VcdHierarchyObjectSummary for the specified vCD object.\n\n```bash\n{\n  \"id\": \"$id\",\n  \"name\": \"$name\",\n  \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n  \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n  \"configuredSlaDomainType\": \"$configuredSlaDomainType\",\n  \"primaryClusterId\": \"$primaryClusterId\",\n  \"isConfiguredSlaDomainRetentionLocked\": true,\n  \"slaLastUpdateTime\": \"$slaLastUpdateTime\",\n  \"effectiveSlaDomainId\": \"UNPROTECTED\",\n  \"effectiveSlaDomainName\": \"Unprotected\",\n  \"isEffectiveSlaDomainRetentionLocked\": true,\n  \"effectiveSlaDomainPolarisManagedId\": \"$effectiveSlaDomainPolarisManagedId\",\n  \"effectiveSlaSourceObjectId\": \"$effectiveSlaSourceObjectId\",\n  \"effectiveSlaSourceObjectName\": \"$effectiveSlaSourceObjectName\",\n  \"slaAssignment\": \"Derived\",\n  \"retentionSlaDomainId\": \"$retentionSlaDomainId\",\n  \"infraPath\": [\n    ...\n  ],\n  \"slaPath\": [\n    ...\n  ],\n  \"isRelic\": true,\n  \"isDeleted\": true,\n  \"objectType\": \"Cluster\",\n  \"descendantCount\": {\n    \"vcdCluster\": 0,\n    \"connectedVimServer\": 0,\n    \"disconnectedVimServer\": 0,\n    \"org\": 0,\n    \"orgVdc\": 0,\n    \"catalog\": 0,\n    \"vApp\": 0\n  },\n  \"connectionStatus\": {\n    \"status\": \"Disconnected\",\n    \"message\": \"string\"\n  },\n  \"ipAddress\": \"$ipAddress\",\n  \"vcenterId\": \"$vcenterId\",\n  \"extendedAttributes\": {\n    \"vappAtributes\": {\n      \"isVappTemplate\": true\n    }\n  },\n  \"pendingSlaDomain\": {\n    \"objectId\": \"$objectId\",\n    \"pendingSlaDomainId\": \"$pendingSlaDomainId\",\n    \"pendingSlaDomainName\": \"$pendingSlaDomainName\",\n    \"isPendingSlaDomainRetentionLocked\": true\n  }\n}\n```\n\n### Retrieving immediate descendant objects\n\nTo retrieve the list of immediate descendant objects for the specified parent, send a GET request\nto [`/vcd/hierarchy/{id}/children`](#operation/getVcdHierarchyChildrenV1), where {id} is the ID of the parent vCD\nhierarchy object. The parameters described in the following table are available to filter the results of the GET\nrequest.\n\n| Name                    | Required | Type    | Description |\n| ----------------------- | -------- | ------- | ----------- |\n|`id`                     | Required | string  | ID of the parent vCD hierarchy object. To get top-level nodes, use **root** as the ID.|\n|`sort_by`                | Optional | string  | Attribute to sort the results on.|\n|`sort_order`             | Optional | string  | Order for sorting the results, either ascending or descending.|\n|`limit`                  | Optional | int     | Limit the number of matches returned.|\n|`offset`                 | Optional | int     | Number of matches to ignore from the beginning of the results.|\n|`name`                   | Optional | string  | Search object by object name.|\n|`is_relic`               | Optional | boolean | Filter by isRelic field of vCD vApp hierarchy object. Return both relic and non-relic children when this value is not specified.|\n|`effective_sla_domain_id`| Optional | string  | Filter by ID of effective SLA domain.|\n|`object_type`            | Optional | string  | Filter by node object type. |\n|`primary_cluster_id`     | Optional | string  | Filter by primary cluster ID, or **local**.|\n|`sla_assignment`         | Optional | string  | Filter by SLA assignment type.|\n|`snappable_status`       | Optional | string  | Filters vCD hierarchy objects based on the specified query value.|\n\n```bash\n    curl -X GET -d \"https://$cluster_address/api/v1/vcd/hierarchy/$id/children\"\n```\n\nThe Rubrik REST API server fetches VcdHierarchyObjectSummary for all children (immediate descendants) \nof the specified vCD object.\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"id\": \"$id\",\n      \"name\": \"$name\",\n      \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n      \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n      \"configuredSlaDomainType\": \"$configuredSlaDomainType\",\n      \"primaryClusterId\": \"$primaryClusterId\",\n      \"isConfiguredSlaDomainRetentionLocked\": true,\n      \"slaLastUpdateTime\": \"$slaLastUpdateTime\",\n      \"effectiveSlaDomainId\": \"UNPROTECTED\",\n      \"effectiveSlaDomainName\": \"Unprotected\",\n      \"isEffectiveSlaDomainRetentionLocked\": true,\n      \"effectiveSlaDomainPolarisManagedId\": \"$effectiveSlaDomainPolarisManagedId\",\n      \"effectiveSlaSourceObjectId\": \"$effectiveSlaSourceObjectId\",\n      \"effectiveSlaSourceObjectName\": \"$effectiveSlaSourceObjectName\",\n      \"slaAssignment\": \"Derived\",\n      \"retentionSlaDomainId\": \"$retentionSlaDomainId\",\n      \"infraPath\": [\n        ...\n      ],\n      \"slaPath\": [\n        ...\n      ],\n      \"isRelic\": true,\n      \"isDeleted\": true,\n      \"objectType\": \"Cluster\",\n      \"descendantCount\": {\n        \"vcdCluster\": 0,\n        \"connectedVimServer\": 0,\n        \"disconnectedVimServer\": 0,\n        \"org\": 0,\n        \"orgVdc\": 0,\n        \"catalog\": 0,\n        \"vApp\": 0\n      },\n      \"connectionStatus\": {\n        \"status\": \"Disconnected\",\n        \"message\": \"string\"\n      },\n      \"ipAddress\": \"$ipAddress\",\n      \"vcenterId\": \"$vcenterId\",\n      \"extendedAttributes\": {\n        \"vappAtributes\": {\n          \"isVappTemplate\": true\n        }\n      },\n      \"pendingSlaDomain\": {\n        \"objectId\": \"$objectId\",\n        \"pendingSlaDomainId\": \"$pendingSlaDomainId\",\n        \"pendingSlaDomainName\": \"$pendingSlaDomainName\",\n        \"isPendingSlaDomainRetentionLocked\": true\n      }\n    }\n  ],\n  \"total\": 0\n}\n```\n\n### Retrieving list of descendant objects\n\nTo retrieve the list of descendant objects for the specified parent, send a GET request to\n[`/vcd/hierarchy/{id}/descendants`](#operation/getVcdHierarchyDescendantsV1), where {id} is the ID of the parent vCD\nhierarchy object. The parameters described in the following table are available to filter the results of the GET\nrequest.\n\n| Name                    | Required | Type    | Description |\n| ----------------------- | -------- | ------- | ----------- |\n|`id`                     | Required | string  | ID of the parent vCD hierarchy object. To get top-level nodes, use **root** as the ID.|\n|`sort_by`                | Optional | string  | Attribute to sort the results on.|\n|`sort_order`             | Optional | string  | Order for sorting the results, either ascending or descending.|\n|`limit`                  | Optional | int     | Limit the number of matches returned.|\n|`offset`                 | Optional | int     | Number of matches to ignore from the beginning of the results.|\n|`name`                   | Optional | string  | Search object by object name.|\n|`is_relic`               | Optional | boolean | Filter by isRelic field of vCD vApp hierarchy object. Return both relic and non-relic children when this value is not specified.|\n|`effective_sla_domain_id`| Optional | string  | Filter by ID of effective SLA domain.|\n|`object_type`            | Optional | string  | Filter by node object type. |\n|`primary_cluster_id`     | Optional | string  | Filter by primary cluster ID, or **local**.|\n|`sla_assignment`         | Optional | string  | Filter by SLA assignment type.|\n|`snappable_status`       | Optional | string  | Filters vCD hierarchy objects based on the specified query value.|\n\n```bash\n    curl -X GET -d \"https://$cluster_address/api/v1/vcd/hierarchy/$id/descendants\"\n```\n\nThe Rubrik REST API server fetches VcdHierarchyObjectSummary for all descendants of specified vCD object.\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"id\": \"$id\",\n      \"name\": \"$name\",\n      \"configuredSlaDomainId\": \"$configuredSlaDomainId\",\n      \"configuredSlaDomainName\": \"$configuredSlaDomainName\",\n      \"configuredSlaDomainType\": \"$configuredSlaDomainType\",\n      \"primaryClusterId\": \"$primaryClusterId\",\n      \"isConfiguredSlaDomainRetentionLocked\": true,\n      \"slaLastUpdateTime\": \"$slaLastUpdateTime\",\n      \"effectiveSlaDomainId\": \"UNPROTECTED\",\n      \"effectiveSlaDomainName\": \"Unprotected\",\n      \"isEffectiveSlaDomainRetentionLocked\": true,\n      \"effectiveSlaDomainPolarisManagedId\": \"$effectiveSlaDomainPolarisManagedId\",\n      \"effectiveSlaSourceObjectId\": \"$effectiveSlaSourceObjectId\",\n      \"effectiveSlaSourceObjectName\": \"$effectiveSlaSourceObjectName\",\n      \"slaAssignment\": \"Derived\",\n      \"retentionSlaDomainId\": \"$retentionSlaDomainId\",\n      \"infraPath\": [\n        ...\n      ],\n      \"slaPath\": [\n        ...\n      ],\n      \"isRelic\": true,\n      \"isDeleted\": true,\n      \"objectType\": \"Cluster\",\n      \"descendantCount\": {\n        \"vcdCluster\": 0,\n        \"connectedVimServer\": 0,\n        \"disconnectedVimServer\": 0,\n        \"org\": 0,\n        \"orgVdc\": 0,\n        \"catalog\": 0,\n        \"vApp\": 0\n      },\n      \"connectionStatus\": {\n        \"status\": \"Disconnected\",\n        \"message\": \"string\"\n      },\n      \"ipAddress\": \"$ipAddress\",\n      \"vcenterId\": \"$vcenterId\",\n      \"extendedAttributes\": {\n        \"vappAtributes\": {\n          \"isVappTemplate\": true\n        }\n      },\n      \"pendingSlaDomain\": {\n        \"objectId\": \"$objectId\",\n        \"pendingSlaDomainId\": \"$pendingSlaDomainId\",\n        \"pendingSlaDomainName\": \"$pendingSlaDomainName\",\n        \"isPendingSlaDomainRetentionLocked\": true\n      }\n    }\n  ],\n  \"total\": 0\n}\n```\n\n# Blackout Windows\n\n## Get Global Blackout Window Status\nSend a GET request to ['/blackout_window`](#operation/getBlackoutWindowStatus)\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/blackout_window\"\n```\n\n## Start or Stop the Global Blackout Window in local Rubrik Cluster\nSend a PATCH request to [`/blackout_window`](#operation/toggleBlackoutWindow)\n\n```bash\ncurl -X PATCH \\\n  -d '{ \\\n   \"isGlobalBlackoutActive\": true \\\n   }' \\\n  \"https://$cluster_address/api/v1/blackout_window\"\n```\n\n# Managed Volumes\n\n## Create Script to Unify Managed Volume Export View\n\nTo request an asynchronous job to generate a script to create a directory to view all files in all channels of a managed volume export, send a POST request to the [`/managed_volume/snapshot/export/{id}/script`](#operation/createManagedVolumeGenerateScriptJob) endpoint with the ID of the snapshot export.\n\n```bash\ncurl -X POST \\\n  \"https://$cluster_address/api/v1/managed_volume/snapshot/export/{id}/script\"\n```\nAn asynchronous request is returned and can be polled to retrieve the job status.\n\n```bash\n{\n  \"id\":\"$request_id\",\n  \"links\": [\n    {\n      \"href\":\"https://$cluster_address/api/v1/managed_volume/request/$request_id\",\n      \"rel\":\"result\"\n    },\n  \"status\":\"QUEUED\"\n}\n```\n\n# Archival\n\n## Create Script to Refresh data sources in a Reader location\n\nSend a POST request to the [`/archive/location/{location_id}/reader/refresh/data_sources`](#operation/refreshArchivalLocationDataSources) endpoint to request an asynchronous job that refreshes the metadata for a list of data sources from a specified reader location. The POST request must provide the ID of the reader location and a list of the IDs of the data sources in the archival location.\n\n```bash\ncurl -X POST \\\n  \"https://$cluster_address/api/v1/archive/location/{location_id}/reader/refresh/data_sources\"\n```\nAn asynchronous request is returned and can be polled to retrieve the job status.\n\n```bash\n{\n  \"id\":\"$request_id\",\n  \"links\": [\n    {\n      \"href\":\"https://$cluster_address/api/v1/archive/request/$request_id\",\n      \"rel\":\"result\"\n    },\n  \"status\":\"QUEUED\"\n}\n```\n\n## Get the ID of the customer AWS account that owns the archival location\n\nSend a GET request to the [`/archive/aws/s3/{id}/account_id`](#operation/getAwsAccountId) endpoint to request the ID of the AWS customer account for the S3 archival location. Returns an error when the location given is not an AWS S3 archival location.\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/archive/aws/s3/{id}/account_id\"\n```\nReturns the ID of the AWS account.\n\n## Disable archival location for archiving and modifications.\n\nSend a POST request to the [`/archive/location/{location_id}/owner/disable`](#operation/disableArchivalLocation) endpoint to disable the specified active archival location. The POST request must include the ID of the active location.\n\n```bash\ncurl -X POST \\\n  \"https://$cluster_address/api/v1/archive/location/{location_id}/owner/disable\"\n```\nReturns empty response body\n\n## Enable archival location for archiving and modifications.\n\nSend a POST request to the [`/archive/location/{location_id}/owner/enable`](#operation/enableArchivalLocation) endpoint to enable archiving and other\noperations that were previously disabled on the specified archival location\nwith the disable operation. The POST request must include the ID of the\nspecified location.\n\n```bash\ncurl -X POST \\\n  \"https://$cluster_address/api/v1/archive/location/{location_id}/owner/enable\"\n```\nReturns empty response body\n\n# Replication\n\n## Enable Source Specific Replication Pause\nSend a POST request to [`/replication/location_pause/enable`]\n(#operation/enablePerLocationPause)\n\n```bash\ncurl -X POST \\\n  -d '{ \\\n   \"sourceClusterUuids\": [\"510ae3f4-d733-4545-9ea4-fe702401fdca\"], \\\n   \"shouldCancelImmediately\": true \\\n   }' \\\n  \"https://$cluster_address/api/v1/replication/location_pause/enable\"\n```\n\n## Disable Source Specific Replication Pause\nSend a POST request to [`/replication/location_pause/disable`]\n(#operation/disablePerLocationPause)\n\n```bash\ncurl -X POST \\\n  -d '{ \\\n   \"sourceClusterUuids\": [\"510ae3f4-d733-4545-9ea4-fe702401fdca\"], \\\n   \"shouldSkipOldSnapshots\": true \\\n   }' \\\n  \"https://$cluster_address/api/v1/replication/location_pause/disable\"\n```\n\n# Unmanaged object\n\nAn unmanaged object is an object that is not currently assigned\nan active SLA.\n\n### Get all unmanaged reader object summaries\nGet a listing of all unmanaged reader object summaries using\na GET request to\n[/unmanaged_object/reader_object](#operation/queryUnmanagedReaderObject).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/unmanaged_object/reader_object\"\n```\nThe Rubrik REST API server returns a `ListResponse` object of unmanaged\nreader object summaries.\n```bash\n{\n  \"data\": [\n    {\n      \"id\": \"$vm1_managed_id\",\n      \"name\": \"$vm1_name\",\n      \"objectType\": \"VirtualMachine\",\n      \"physicalLocation\": [\n        {\n          \"managedId\": \"$location1_managed_id\",\n          \"name\": \"$location1_name\"\n        }\n      ],\n      \"unmanagedStatus\": \"Unprotected\",\n      \"autoSnapshotCount\": 20,\n      \"manualSnapshotCount\": 0,\n      \"localStorage\": 100,\n      \"archiveStorage\": 0,\n      \"retentionSlaDomainId\": \"$gold_sla_id\",\n      \"retentionSlaDomainName\": \"Gold\"\n    }\n  ],\n  \"hasMore\": false,\n  \"total\": 1\n}\n```\n### Get all unmanaged object summaries\nGet a list of all objects with unmanaged snapshots using\na GET request to\n[/unmanaged_object](#operation/queryUnmanagedObjectV1).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/unmanaged_object\"\n```\nThe Rubrik REST API server returns a `ListResponse` object of objects with\n unmanaged snapshots.\n```bash\n{\n  \"data\": [\n    {\n      \"id\": \"$vm1_managed_id\",\n      \"name\": \"$vm1_name\",\n      \"objectType\": \"VirtualMachine\",\n      \"physicalLocation\": [\n        {\n          \"managedId\": \"$location1_managed_id\",\n          \"name\": \"$location1_name\"\n        }\n      ],\n      \"unmanagedStatus\": \"Unprotected\",\n      \"snapshotCount\": 20,\n      \"localStorage\": 100,\n      \"archiveStorage\": 0,\n      \"retentionSlaDomainId\": \"$gold_sla_id\",\n      \"retentionSlaDomainName\": \"Gold\"\n    }\n  ],\n  \"hasMore\": false,\n  \"total\": 1\n}\n```\n\n### Get summary of all snapshots for a given object\nGet summary of all snapshots for a given object using\na GET request to\n[/unmanaged_object/{id}/snapshot](#operation/queryUnmanagedObjectSnapshotsV1).\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/unmanaged_object/{id}/snapshot\"\n```\nThe Rubrik REST API server return a `ListResponse` object of snapshot summaries\nfor the given object.\n```bash\n{\n  \"data\": [\n    {\n      \"id\": \"$snapshot_id\",\n      \"date\": \"<timestamp>\",\n      \"snapshotType\": \"PolicyBased\",\n      \"snapshotRetentionInfo\": {\n        \"localInfo\": {\n          \"id\": \"location_id\",\n          \"name\": \"local_cluster\",\n          \"isSnapshotPresent\": true,\n          \"isExpirationDateCalculated\": true,\n          \"expirationTime\": \"<timestamp2>\"\n        },\n        \"archivalInfos\": [],\n        \"replicationInfos\": []\n      }\n    }\n  ],\n  \"hasMore\": false,\n  \"total\": 1\n}\n```\n\n### Assign a retention SLA to unmanaged object.\nAssign a retention SLA to an unmanaged object to expire existing snapshots\nin a structured manner.\n\nSend a POST request to [/unmanaged_object/assign_retention_sla](#operation/assignToRetentionSlaAsync).\n\n**Example:** Assigning a retention SLA Domain with ID $slaId to a list of unmanaged objects - $snap1Id, $snap2Id\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"slaDomainId\": $slaId,\n    \"managedIds\": [$snap1Id, $snap2Id]\n  }' \\\n  \"https://$cluster_address/api/v1/unmanaged_object/assign_retention_sla\"\n```\n\n### Bulk tier existing snapshots to cold storage\nSchedules a job to tier existing snapshots of the selected objects to cold\nstorage.\n\nSend a POST request to\n[/unmanaged_object/snapshot/bulk_archive_tier](#operation/bulkTierExistingSnapshots)\n\n**Example:** Tier existing snapshots for the objects - $object1Id, $object2Id\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"objectIds\": [$object1Id, $object2Id]\n  }' \\\n  \"https://$cluster_address/api/v1/unmanaged_object/snapshot/bulk_archive_tier\"\n```\n\n**Example:** Tier existing snapshots for the objects - $object1Id, $object2Id\nonly in archival location $archivalLocationId\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"objectIds\": [$object1Id, $object2Id],\n    \"locationId\": $archivalLocationId\n  }' \\\n  \"https://$cluster_address/api/v1/unmanaged_object/snapshot/bulk_archive_tier\"\n\nAn asynchronous request is returned and can be polled to retrieve the job status.\n\n```bash\n{\n  \"id\":\"$request_id\",\n  \"links\": [\n    {\n      \"href\":\"https://$cluster_address/api/v1/unmanaged_object/snapshot/bulk_archive_tier/request/$request_id\",\n      \"rel\":\"result\"\n    },\n  \"status\":\"QUEUED\"\n}\n```\n\n# Data Source\n\nA data source is an object whose snapshots can be taken.\n\n### Delete given snapshots for an object\nDelete snapshots identified by the given snapshot IDs for\nthe specified object using a POST request to\n[\n`/data_source/{id}/snapshot/bulk_delete`\n](#operation/bulkDeleteSnapshotsForObject).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/data_source/{id}/snapshot/bulk_delete\"\n```\n\n### Delete all snapshots for given objects\nDelete all snapshots for given objects using\na POST request to\n[`/data_source/snapshot/bulk_delete`](#operation/bulkDeleteSnapshots).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/data_source/snapshot/bulk_delete\"\n```\n\n### Get information of expired snapshots which were explicitly assigned a SLA domain\nTo get information on snapshots that expired according to their assigned\nSLA domain, send a GET request to\n[`/data_source/{id}/expired_custom_retention_snapshots`](#operation/expiredCustomRetentionSnapshots).\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/data_source/{id}/expired_custom_retention_snapshots\"\n```\n\n# SAP HANA databases\n\n## Get SAP HANA database summary\n\nRequest a list of SAP HANA discovered databases by sending a GET\nrequest to [`/sap_hana/db`](#operation/querySapHanaDatabases).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/sap_hana/db\"\n```\n\n```bash\n{\n  \"data\": [\n    {\n      \"id\": \"$db_id\",\n      \"name\": \"$db_name\",\n      \"dbStatus\": \"ACTIVE\",\n      \"dbType\": \"TENANT\",\n      \"dataPathType\": \"GCP\"\n      \"logBackupJobFrequencyMins\": 30\n      \"sapHanaSystemId\": \"$sap_hana_system_id\",\n      \"sid\": \"SC1\",\n      \"instanceNumber\": \"03\",\n      \"primaryClusterId\": \"$cluster_id\",\n      \"isRelic\": False,\n      \"isArchived\": False\n    }\n  ],\n  \"hasMore\": false,\n  \"total\": 1\n}\n```\n\nFurther details are acquired from\n[`/sap_hana/db/{id}`](#operation/getSapHanaDatabase).\n\n```\ncurl -X GET \"https://$cluster_address/api/v1/sap_hana/db/$db_id\"\n```\n\n```bash\n{\n      \"id\": \"$db_id\",\n      \"name\": \"$db_name\",\n      \"dbStatus\": \"ACTIVE\",\n      \"dbType\": \"TENANT\",\n      \"dataPathType\": \"GCP\"\n      \"logBackupJobFrequencyMins\": 30\n      \"sapHanaSystemId\": \"$sap_hana_system_id\",\n      \"sid\": \"SC1\",\n      \"instanceNumber\": \"03\",\n      \"primaryClusterId\": \"$cluster_id\",\n      \"isRelic\": False,\n      \"isArchived\": False,\n      \"previousFailedBackupPrefixes\": [\n        \"abcd\", \"defg\"\n      ],\n      \"snapShotCount\": 3\n}\n```\n\nUpdate SLA Domain assigned to SAP HANA database by using\n[`/sap_hana/db/{id}`](#operation/patchSapHanaDatabase). The API returns with\nthe summary of the SAP HANA database.\n\n```bash\ncurl -X PATCH \"https://$cluster_address/api/v1/sap_hana/db/$db_id\"\n```\n\n```bash\n{\n      \"id\": \"$db_id\",\n      \"name\": \"$db_name\",\n      \"dbStatus\": \"ACTIVE\",\n      \"dbType\": \"TENANT\",\n      \"dataPathType\": \"GCP\"\n      \"logBackupJobFrequencyMins\": 30\n      \"sapHanaSystemId\": \"$sap_hana_system_id\",\n      \"sid\": \"SC1\",\n      \"instanceNumber\": \"03\",\n      \"primaryClusterId\": \"$cluster_id\",\n      \"isRelic\": False,\n      \"isArchived\": False,\n      \"previousFailedBackupPrefixes\": [\n        \"abcd\", \"defg\"\n      ],\n      \"snapShotCount\": 3\n}\n```\n\n## System copy restore\n\nSystem copy restore is a type of restore that is used across different SAP HANA\ndatabases.\n\n### Configuring system copy restore\n\nTo initiate a task to configure a system copy restore on a SAP HANA database,\nsend a POST request to [`/sap_hana/db/{id}/configure_restore`](#operation/configureSapHanaRestore)\nwhere, {id} is the ID of the target SAP HANA database.\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"source_config\": {\n        \"snappable_id\": \"$source_db_id\"\n      }\n    }' \\\n\"https://$cluster_address/api/v1/sap_hana/db/$target_db_id/configure_restore\"\n```\n\nThe Rubrik REST API server initiates the configuration task and responds with a\nrequest object.\n\n```bash\n{\n      \"id\": \"$request_id\",\n      \"status\": \"QUEUED\",\n      \"error\": \"None\",\n      \"progress\": 0,\n      \"startTime\": \"$start_timestamp\",\n      \"endTime\": \"$end_timestamp\",\n      \"links\": [\n        {\n          \"href\": \"https://$cluster_address/api/v1/sap_hana/db/request/$request_id\",\n          \"rel\": \"self\"\n        }\n      ]\n}\n```\n\n### Unconfiguring system copy restore\n\nTo initiate a task to reset the configuration for a system copy restore on a\nSAP HANA database, send a POST request to\n[`/sap_hana/db/{id}/unconfigure_restore`](#operation/unconfigureSapHanaRestore)\nwhere, {id} is the ID of the target SAP HANA database.\n\n```bash\ncurl -X POST \"https://$cluster_address/api/v1/sap_hana/db/$target_db_id/unconfigure_restore\"\n```\nThe Rubrik REST API server initiates the task to reset the configuration for the\nsystem copy restore and responds with a request object.\n\n```bash\n{\n      \"id\": \"$request_id\",\n      \"status\": \"QUEUED\",\n      \"error\": \"None\",\n      \"progress\": 0,\n      \"startTime\": \"$start_timestamp\",\n      \"endTime\": \"$end_timestamp\",\n      \"links\": [\n        {\n          \"href\": \"https://$cluster_address/api/v1/sap_hana/db/request/$request_id\",\n          \"rel\": \"self\"\n        }\n      ]\n}\n```\n\n## SAP HANA system apis\n\nRequest a list of SAP HANA systems on a cluster by sending a GET\nrequest to [`/sap_hana/system`](#operation/querySapHanaSystems).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/sap_hana/system\"\n```\n\n```bash\n{\n  \"data\": [\n    {\n      \"id\": \"$system_id\",\n      \"sid\": \"SC1\",\n      \"numDbs\": 3,\n      \"containerType\": \"SINGLE_CONTAINER\",\n      \"instanceNumber\": \"03\",\n      \"status\": \"OK\",\n      \"username\": \"$system_username\",\n    }\n  ],\n  \"hasMore\": false,\n  \"total\": 1\n}\n```\n\nAdds an entry for SAP HANA system to database. To add a SAP HANA system entry,\nsend a POST request to [`/sap_hana/system`](#operation/addSapHanaSystem).\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"username\": \"$username\",\n    \"password\": \"$password\",\n    \"sid\": \"$sid\",\n    \"instance\": \"$instance\",\n    \"hostIdList\": [\n      \"$host_id\"\n    ],\n    \"dataPathSpec\": {\n      \"$dataPathType\": \"GCP\"\n    } }' \\\n  \"https://$cluster_address/api/v1/sap_hana/system\"\n```\nThe Rubrik REST API server responds with the ID of the added SAP HANA system and\nthe status of the scheduled system refresh job.\n\n```bash\n{\n      \"id\": \"$system_id\",\n      \"sid\": \"SC1\",\n      \"numDbs\": 3,\n      \"containerType\": \"SINGLE_CONTAINER\",\n      \"instanceNumber\": \"03\",\n      \"status\": \"OK\",\n      \"username\": \"$system_username\",\n}\n```\n\nFurther details are acquired by\n[`/sap_hana/system/{id}`](#operation/getSapHanaSystem).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/sap_hana/system/$db_id\"\n```\n\n```bash\n{\n      \"id\": \"$system_id\",\n      \"sid\": \"SC1\",\n      \"numDbs\": 3,\n      \"containerType\": \"SINGLE_CONTAINER\",\n      \"instanceNumber\": \"03\",\n      \"status\": \"OK\",\n      \"username\": \"$system_username\",\n}\n```\n\nUpdate the SlA Domain assigned to the SAP HANA system by calling the\n[`/sap_hana/system/{id}`](#operation/patchSapHanaSystem) endpoint. The API\nreturns the summary of the SAP HANA system.\n\n```bash\ncurl -X PATCH \"https://$cluster_address/api/v1/sap_hana/system/$db_id\"\n```\n\n```bash\n{\n      \"id\": \"$system_id\",\n      \"sid\": \"SC1\",\n      \"numDbs\": 3,\n      \"containerType\": \"SINGLE_CONTAINER\",\n      \"instanceNumber\": \"03\",\n      \"status\": \"OK\",\n      \"username\": \"$system_username\",\n}\n```\n\nDelete a SAP HANA system by calling the\n[`/sap_hana/system/{id}`](#operation/deleteSapHanaSystem) endpoint. The API\ninitiates a delete job and responds with a request object.\n\n```bash\ncurl -X DELETE \"https://$cluster_address/api/v1/sap_hana/system/$id\"\n```\n\n```bash\n{\n      \"id\": \"$request_id\",\n      \"status\": \"RUNNING\",\n      \"error\": \"None\",\n      \"progress\": 0,\n      \"startTime\": \"$start_timestamp\",\n      \"endTime\": \"$end_timestamp\",\n      \"links\": [\n        {\n          \"href\": \"https://$cluster_address/api/v1/sap_hana/system/request/$request_id\",\n          \"rel\": \"self\"\n        }\n      ]\n}\n```\n\nUsing the information provided in the request object, send a GET request to the\n[`/sap_hana/system/request/{id}`](#operation/getSapHanaSystemAsyncRequestStatus)\nendpoint to poll the task status. When the value of `status` in the task object\nis `SUCCEEDED`, the task finished successfully.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/sap_hana/system/request/$id\"\n```\n\n```bash\n{\n      \"id\": \"$request_id\",\n      \"status\": \"SUCCEEDED\",\n      \"error\": \"None\",\n      \"progress\": 0,\n      \"startTime\": \"$start_timestamp\",\n      \"endTime\": \"$end_timestamp\",\n      \"links\": [\n        {\n          \"href\": \"https://$cluster_address/api/v1/sap_hana/system/request/$request_id\",\n          \"rel\": \"self\"\n        }\n      ]\n}\n```\n\nRefresh the metadata of a SAP HANA system object by calling the\n[`/sap_hana/system/{id}/refresh`](#operation/createSapHanaSystemRefresh)\nendpoint. The API initiates a refresh job and responds with a request object.\n\n```bash\ncurl -X POST \"https://$cluster_address/api/v1/sap_hana/system/$id/refresh\"\n```\n\n```bash\n{\n      \"id\": \"$request_id\",\n      \"status\": \"RUNNING\",\n      \"error\": \"None\",\n      \"progress\": 0,\n      \"startTime\": \"$start_timestamp\",\n      \"endTime\": \"$end_timestamp\",\n      \"links\": [\n        {\n          \"href\": \"https://$cluster_address/api/v1/sap_hana/system/request/$request_id\",\n          \"rel\": \"self\"\n        }\n      ]\n}\n```\n\nCreate a full data snapshot of a SAP HANA system object by\nsending a POST request to the\n[`/sap_hana/db/{id}/snapshot`](#operation/createOnDemandSapHanaBackup)\nendpoint. The API initiates a data backup job and responds with a request\nobject.\n\n```bash\ncurl -X POST \"https://$cluster_address/api/v1/sap_hana/db/{id}/snapshot\"\n```\n\n```bash\n{\n      \"id\": \"$request_id\",\n      \"status\": \"QUEUED\",\n      \"error\": \"None\",\n      \"progress\": 0,\n      \"startTime\": \"$start_timestamp\",\n      \"endTime\": \"$end_timestamp\",\n      \"links\": [\n        {\n          \"href\": \"https://$cluster_address/api/v1/sap_hana/db/request/$request_id\",\n          \"rel\": \"self\"\n        }\n      ]\n}\n```\n\nUsing the information provided in the request object, send a\nGET request to the\n[`/sap_hana/db/request/{id}`](#operation/getSapHanaDbAsyncRequestStatus))\nendpoint to poll the task status. When the value of `status` in\nthe task object is `SUCCEEDED`, the task finished successfully.\nThe response also includes the `$snapshot_id`.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/sap_hana/db/request/{id}\"\n```\n\n```bash\n{\n      \"id\": \"$request_id\",\n      \"status\": \"SUCCEEDED\",\n      \"error\": \"None\",\n      \"progress\": 0,\n      \"startTime\": \"$start_timestamp\",\n      \"endTime\": \"$end_timestamp\",\n      \"links\": [\n        {\n          \"href\": \"https://$cluster_address/api/v1/sap_hana/db/snapshot/$snapshot_id\",\n          \"rel\": \"result\"\n        },\n        {\n          \"href\": \"https://$cluster_address/api/v1/sap_hana/db/request/$request_id\",\n          \"rel\": \"self\"\n        }\n      ]\n}\n```\n\nRequest a list of summary of snapshots of a SAP HANA database by\nsending a GET request to the\n[`/sap_hana/db/{id}/snapshot`](#operation/querySapHanaDbSnapshot)\nendpoint.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/sap_hana/db/{id}/snapshot\"\n```\n\n```bash\n{\n  \"data\": [\n    {\n      \"id\": \"$db_id\",\n      \"date\": \"2019-12-16T23:21:53.377Z\",\n      \"sourceObjectType\": \"SapHanaDatabase\",\n      \"isOnDemandSnapshot\": true,\n      \"isCustomRetentionApplied\": false\n      \"cloudState\": 0\n      \"replicationLocationIds\": [\n        \"string\"\n      ],\n      \"archivalLocationIds\": [\n        \"string\"\n      ],\n      \"slaId\": \"string\",\n      \"slaName\": \"string\",\n      \"isRetainedByRetentionLockSla\": true,\n      \"backupId\": 949363200000,\n      \"backupType\": \"FULL\",\n      \"sapHanaStartTime\": \"2019-12-16T23:21:53.377Z\",\n      \"sapHanaEndTime\": \"2019-12-16T23:21:53.377Z\",\n      \"rubrikSnapshotStartTime\": \"2019-12-16T23:21:53.377Z\",\n      \"rubrikSnapshotEndTime\": \"2019-12-16T23:21:53.377Z\",\n      \"backupPrefix\": \"RUBRIK_949363200000_ON_DEMAND\",\n      \"isExternalBackup\": false,\n      \"isRubrikTriggeredOnDemandBackup\": false\n    }\n  ],\n  \"hasMore\": false,\n  \"total\": 1\n}\n```\n\nRequest SAP HANA database snapshot details by sending a\nGET request to the\n[`/sap_hana/db/snapshot/{id}`](#operation/getSapHanaDbSnapshot) endpoint.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/sap_hana/db/snapshot/{id}\"\n```\n\n```bash\n{\n      \"isCorrupt\": false,\n      \"id\": \"$db_id\",\n      \"date\": \"2019-12-16T23:21:53.377Z\",\n      \"sourceObjectType\": \"SapHanaDatabase\",\n      \"isOnDemandSnapshot\": true,\n      \"isCustomRetentionApplied\": false\n      \"cloudState\": 0\n      \"replicationLocationIds\": [\n        \"string\"\n      ],\n      \"archivalLocationIds\": [\n        \"string\"\n      ],\n      \"slaId\": \"string\",\n      \"slaName\": \"string\",\n      \"isRetainedByRetentionLockSla\": true,\n      \"backupId\": 949363200000,\n      \"backupType\": \"FULL\",\n      \"sapHanaStartTime\": \"2019-12-16T23:21:53.377Z\",\n      \"sapHanaEndTime\": \"2019-12-16T23:21:53.377Z\",\n      \"rubrikSnapshotStartTime\": \"2019-12-16T23:21:53.377Z\",\n      \"rubrikSnapshotEndTime\": \"2019-12-16T23:21:53.377Z\",\n      \"backupPrefix\": \"RUBRIK_949363200000_ON_DEMAND\",\n      \"isExternalBackup\": false,\n      \"isRubrikTriggeredOnDemandBackup\": false\n}\n```\n\nRequest details of recoverable ranges of a SAP HANA database\nby sending a GET request to the\n[`/sap_hana/db/{id}/recoverable_range`](#operation/getSapHanaDbRecoverableRanges)\nendpoint.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/sap_hana/db/{id}/recoverable_range\"\n```\n\n```bash\n{\n  \"hasMore\": false,\n  \"data\": [\n    {\n      \"beginTime\": \"2017-02-02T18:53:12.694Z\",\n      \"endTime\": \"2017-02-02T20:53:12.694Z\"\n    }\n  ],\n  \"total\": 1\n}\n```\n\nDelete a full snapshot with a DELETE request to the\n [`/sap_hana/db/snapshot/{id}`](#operation/deleteSapHanaDbSnapshot) endpoint\n\n```bash\ncurl -X DELETE \"https://$cluster_address/api/v1/sap_hana/db/snapshot/{id}\"\n```\nRequest details of missed snapshots of a SAP HANA database\nby sending a GET request to the\n[`/sap_hana/db/{id}/missed_snapshot`](#operation/getMissedSapHanaDbSnapshots)\nendpoint.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/sap_hana/db/{id}/missed_snapshot\"\n```\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"archivalLocationType\": [\n        \"string\"\n      ],\n      \"missedSnapshotTime\": \"2020-08-06T14:23:13.666Z\",\n      \"missedSnapshotTimeUnits\": [\n        {\n          \"timeUnit\": \"Minute\",\n          \"frequency\": 0,\n          \"retention\": 0,\n          \"dayOfTime\": \"Monday\"\n        }\n      ]\n    }\n  ],\n  \"total\": 0\n}\n```\n\n# Volume Groups\n\nRubrik clusters can protect Windows volumes on a host as a Volume Group.\n\n## Getting a list of Volume Groups\n\nTo retrieve a current list of Volume Groups, send a GET request to\n[`/volume_group`](#operation/queryVolumeGroup).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/volume_group\"\n```\n\nThe Rubrik REST API server responds with a list of summary objects\nof Volume Groups.\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"configuredSlaDomainId\": \"string\",\n      \"configuredSlaDomainName\": \"string\",\n      \"primaryClusterId\": \"string\",\n      \"isConfiguredSlaDomainRetentionLocked\": true,\n      \"effectiveSlaDomainId\": \"string\",\n      \"effectiveSlaDomainName\": \"string\",\n      \"isEffectiveSlaDomainRetentionLocked\": true,\n      \"effectiveSlaDomainPolarisManagedId\": \"string\",\n      \"effectiveSlaSourceObjectId\": \"string\",\n      \"effectiveSlaSourceObjectName\": \"string\",\n      \"slaAssignment\": \"Derived\",\n      \"hostname\": \"string\",\n      \"hostId\": \"string\",\n      \"isRelic\": true\n    }\n  ],\n  \"total\": 0\n}\n```\n\n## Getting Volume Group Details\n\nTo retrieve the details of a Volume Group, send a GET request to\n[`/volume_group/{id}`](#operation/getVolumeGroup)\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/volume_group/{id}\"\n```\n\nThe Rubrik REST API server responds with the details of the Volume Group.\n\n```bash\n{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"configuredSlaDomainId\": \"string\",\n  \"configuredSlaDomainName\": \"string\",\n  \"primaryClusterId\": \"string\",\n  \"isConfiguredSlaDomainRetentionLocked\": true,\n  \"effectiveSlaDomainId\": \"string\",\n  \"effectiveSlaDomainName\": \"string\",\n  \"isEffectiveSlaDomainRetentionLocked\": true,\n  \"effectiveSlaDomainPolarisManagedId\": \"string\",\n  \"effectiveSlaSourceObjectId\": \"string\",\n  \"effectiveSlaSourceObjectName\": \"string\",\n  \"slaAssignment\": \"Derived\",\n  \"hostname\": \"string\",\n  \"hostId\": \"string\",\n  \"isRelic\": true,\n  \"blackoutWindowStatus\": {\n    \"isGlobalBlackoutActive\": true,\n    \"isSnappableBlackoutActive\": true\n  },\n  \"blackoutWindows\": {\n    \"globalBlackoutWindows\": [\n      {\n        \"startTime\": \"string\",\n        \"endTime\": \"string\"\n      }\n    ],\n    \"snappableBlackoutWindows\": [\n      {\n        \"startTime\": \"string\",\n        \"endTime\": \"string\"\n      }\n    ]\n  },\n  \"isPaused\": true,\n  \"volumes\": [\n    {\n      \"id\": \"string\",\n      \"fileSystemType\": \"NTFS\",\n      \"mountPoints\": [\n        \"string\"\n      ],\n      \"size\": 0,\n      \"naturalId\": \"string\",\n      \"volumeGroupId\": \"string\",\n      \"isCurrentlyPresentOnSystem\": true\n    }\n  ]\n}\n```\n\n## Patching Volume Group Details\n\nTo modify the details of a Volume Group, send a PATCH request to\n[`/volume_group/{id}`](#operation/patchVolumeGroup)\n\n```bash\ncurl -X POST \"https://$cluster_address/api/v1/volume_group/{id}\"\n```\n\n## Getting a list of all snapshots of a Volume Group\n\nTo get a list of all snapshots of a Volume Group, send a GET request to\n[`/volume_group/{id}/snapshot`](#operation/queryVolumeGroupSnapshot)\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/volume_group/{id}/snapshot\"\n```\n\nThe Rubrik REST API server responses with a list of snapshots of the\nVolume Group.\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"id\": \"string\",\n      \"date\": \"2019-12-16T23:21:53.446Z\",\n      \"expirationDate\": \"2019-12-16T23:21:53.446Z\",\n      \"sourceObjectType\": \"string\",\n      \"isOnDemandSnapshot\": true,\n      \"cloudState\": 0,\n      \"consistencyLevel\": \"string\",\n      \"indexState\": 0,\n      \"replicationLocationIds\": [\n        \"string\"\n      ],\n      \"archivalLocationIds\": [\n        \"string\"\n      ],\n      \"slaId\": \"string\",\n      \"slaName\": \"string\",\n      \"isRetainedByRetentionLockSla\": true,\n      \"cloudStorageTier\": \"Hot\",\n      \"volumeGroupId\": \"string\",\n      \"name\": \"string\",\n      \"includedVolumes\": [\n        {\n          \"id\": \"string\",\n          \"fileSystemType\": \"NTFS\",\n          \"mountPoints\": [\n            \"string\"\n          ],\n          \"size\": 0\n        }\n      ]\n    }\n  ],\n  \"total\": 0\n}\n```\n\n## Creating on-demand snapshot of a Volume Group\n\nTo create an on-demand snapshot of a Volume Group, send a POST request to\n[`/volume_group/{id}/snapshot`](#operation/createOnDemandVolumeGroupBackup)\n\n```bash\ncurl -X POST \"https://$cluster_address/api/v1/volume_group/{id}/snapshot\"\n```\n\nThe Rubrik REST API server initiates the asynchronous snapshot task and\nresponds with a task object.\n\n```\n{\n  \"id\": \"string\",\n  \"status\": \"string\",\n  \"progress\": 0,\n  \"startTime\": \"2019-12-16T23:21:53.450Z\",\n  \"endTime\": \"2019-12-16T23:21:53.450Z\",\n  \"nodeId\": \"string\",\n  \"error\": {\n    \"message\": \"string\"\n  },\n  \"links\": [\n    {\n      \"href\": \"string\",\n      \"rel\": \"string\"\n    }\n  ]\n}\n```\n\n## Getting the forced full snapshot configuration of a Volume Group\n\nTo retrieve the configuration used to force a full snapshot of a Volume\nGroup, send a GET request to\n[`/volume_group/{id}/request/force_full_snapshot`](#operation/getVolumeGroupForceFullSpec)\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/volume_group/{id}/request/force_full_snapshot\"\n```\n\nThe Rubrik REST API server responds with the Volume Group force full\nresponse object. The response object contains the latest configuration,\nunless it was cleared by a backup job of the Volume Group or it was\nnever set.\n\n```bash\n{\n  \"volumeGroupId\": \"VolumeGroup:::fe9470a4-4057-4357-ac1f-ae99ff735439\",\n  \"volumeInfos\": [\n    {\n      \"volumeId\": \"872bdd28-4d5d-4831-8698-59d692a822fc\",\n      \"shouldDedupe\": false\n    },\n    {\n      \"volumeId\": \"39f61483-9cf5-11e9-80b9-00155d094203\",\n      \"shouldDedupe\": true\n    }\n  ]\n}\n```\n\n## Requesting a forced full snapshot for a Volume Group\n\nTo request a forced full snapshot of a Volume Group, send a POST request to\n[`/volume_group/{id}/request/force_full_snapshot`](#operation/requestVolumeGroupForceFullSnapshot)\n\n```bash\ncurl -X POST \"https://$cluster_address/api/v1/volume_group/{id}/request/force_full_snapshot\"\n```\n\nThe Rubrik REST API server persists the configuration for forcing a\nfull snapshot until the next backup job, which takes a full snapshot\nand clears the configuration.\n\n```\n{\n  \"volumeGroupId\": \"VolumeGroup:::fe9470a4-4057-4357-ac1f-ae99ff735439\",\n  \"volumeInfos\": [\n    {\n      \"volumeId\": \"872bdd28-4d5d-4831-8698-59d692a822fc\",\n      \"shouldDedupe\": false\n    },\n    {\n      \"volumeId\": \"39f61483-9cf5-11e9-80b9-00155d094203\",\n      \"shouldDedupe\": true\n    }\n  ]\n}\n```\n\n## Getting details of a Volume Group snapshot\n\nTo get the details of a Volume Group snapshot, send a GET request to\n[`/volume_group/snapshot/{id}`](#operation/getVolumeGroupSnapshot)\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/volume_group/snapshot/{id}\"\n```\n\nThe The Rubrik REST API server responds with the details of a snapshot.\n\n```\n{\n  \"id\": \"string\",\n  \"date\": \"2019-12-16T23:21:53.395Z\",\n  \"expirationDate\": \"2019-12-16T23:21:53.395Z\",\n  \"sourceObjectType\": \"string\",\n  \"isOnDemandSnapshot\": true,\n  \"cloudState\": 0,\n  \"consistencyLevel\": \"string\",\n  \"indexState\": 0,\n  \"replicationLocationIds\": [\n    \"string\"\n  ],\n  \"archivalLocationIds\": [\n    \"string\"\n  ],\n  \"slaId\": \"string\",\n  \"slaName\": \"string\",\n  \"isRetainedByRetentionLockSla\": true,\n  \"cloudStorageTier\": \"Hot\",\n  \"volumeGroupId\": \"string\",\n  \"name\": \"string\",\n  \"includedVolumes\": [\n    {\n      \"id\": \"string\",\n      \"fileSystemType\": \"NTFS\",\n      \"mountPoints\": [\n        \"string\"\n      ],\n      \"size\": 0\n    }\n  ]\n}\n```\n\n## Getting summary information of all Volume Group mounts\n\nTo get summary information of all Volume Group mounts, send a GET request to\n[`/volume_group/snapshot/mount`](#operation/queryVolumeGroupSnapshotMount)\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/volume_group/snapshot/mount\"\n```\n\nThe Rubrik REST API server returns summary information for all mounts.\n\n```\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"sourceVolumeGroupId\": \"string\",\n      \"sourceHostId\": \"string\",\n      \"sourceHostName\": \"string\",\n      \"snapshotDate\": \"2019-12-16T23:21:53.377Z\",\n      \"snapshotSourceVersion\": \"WithLayoutInfo\",\n      \"mountedDate\": \"2019-12-16T23:21:53.377Z\",\n      \"mountedVolumes\": [\n        {\n          \"id\": \"string\",\n          \"originalMountPoints\": [\n            \"string\"\n          ],\n          \"size\": 0,\n          \"fileSystemType\": \"NTFS\",\n          \"smbPath\": \"string\",\n          \"hostMountedPath\": \"string\"\n        }\n      ],\n      \"targetHostId\": \"string\",\n      \"targetHostName\": \"string\",\n      \"mountRequestId\": \"string\",\n      \"unmountRequestId\": \"string\",\n      \"isReady\": true,\n      \"restoreScriptSmbPath\": \"string\"\n    }\n  ],\n  \"total\": 0\n}\n```\n\n## Getting summary information of one mount\n\nTo retrieve summary information of one Volume Group mount, send a GET\nrequest to\n[`/volume_group/snapshot/mount/{id}`](#operation/getVolumeGroupSnapshotMount)\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/volume_group/snapshot/mount/{id}\"\n```\n\nThe Rubrik REST API server returns summary information of the mount.\n\n```\n{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"sourceVolumeGroupId\": \"string\",\n  \"sourceHostId\": \"string\",\n  \"sourceHostName\": \"string\",\n  \"snapshotDate\": \"2019-12-16T23:21:53.387Z\",\n  \"snapshotSourceVersion\": \"WithLayoutInfo\",\n  \"mountedDate\": \"2019-12-16T23:21:53.388Z\",\n  \"mountedVolumes\": [\n    {\n      \"id\": \"string\",\n      \"originalMountPoints\": [\n        \"string\"\n      ],\n      \"size\": 0,\n      \"fileSystemType\": \"NTFS\",\n      \"smbPath\": \"string\",\n      \"hostMountedPath\": \"string\"\n    }\n  ],\n  \"targetHostId\": \"string\",\n  \"targetHostName\": \"string\",\n  \"mountRequestId\": \"string\",\n  \"unmountRequestId\": \"string\",\n  \"isReady\": true,\n  \"restoreScriptSmbPath\": \"string\"\n}\n\n```\n\n\n## Getting summary information of the latest snapshot of a Volume Group\n\nSend a GET request to\n[`/volume_group/{id}/latest_snapshot`]\\\n(#operation/queryVolumeGroupLatestSnapshot)\nto receive a summary of the latest snapshot of a Volume Group.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/volume_group/{id}/latest_snapshot\"\n```\n\nThe Rubrik REST API server returns summary information of the snapshot.\n```bash\n[\n  {\n    \"id\": \"string\",\n    \"date\": \"2019-12-16T23:21:53.446Z\",\n    \"expirationDate\": \"2019-12-16T23:21:53.446Z\",\n    \"sourceObjectType\": \"string\",\n    \"isOnDemandSnapshot\": true,\n    \"cloudState\": 0,\n    \"consistencyLevel\": \"string\",\n    \"indexState\": 0,\n    \"replicationLocationIds\": [\n      \"string\"\n    ],\n    \"archivalLocationIds\": [\n      \"string\"\n    ],\n    \"slaId\": \"string\",\n    \"slaName\": \"string\",\n    \"isRetainedByRetentionLockSla\": true,\n    \"cloudStorageTier\": \"Hot\",\n    \"volumeGroupId\": \"string\",\n    \"name\": \"string\",\n    \"includedVolumes\": [\n      {\n        \"id\": \"string\",\n        \"fileSystemType\": \"NTFS\",\n        \"mountPoints\": [\n          \"string\"\n        ],\n        \"size\": 0\n      }\n    ]\n  }\n]\n```\n\n# Snapshot Stats\n\n### Return storage stats of a snapshot\nTo receive the storage statistics of a snapshot, send a GET request to\n [`/snapshot/{id}/storage/stats`]\\\n(#operation/getSnapshotStorageStatsV1).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/snapshot/{id}/storage/stats\"\n```\n\n# Hierarchy\n\n### Return the list of descendant objects with SLA conflicts in bulk\nTo bulk get the list of descendant objects with SLA conflicts, send a POST\n request to\n [`/hierarchy/bulk_sla_conflicts`]\\\n(#operation/bulkHierarchySlaConflictsV1).\n\n```bash\ncurl -X POST \"https://$cluster_address/api/v1/hierarchy/bulk_sla_conflicts\"\n```\n\n# Backup Verification\n\nBackup verification checks the validity of a backup\nbased on the specified snapshot ID and object ID.\n\n### Verify the validity of a given snapshot\nVerify the validity of the snapshot identified\nby the specified snapshot ID and object ID.\n[\n`/backup/verify`\n](#operation/verifySnapshot).\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"objectId\": \"$objectId\",\n    \"snapshotIdsOpt\": \"$snapshotIdsOpt\",\n    \"locationIdOpt\": \"$locationIdOpt\",\n    \"shouldVerifyAfterOpt\": \"$shouldVerifyAfterOpt\" }' \\\n  \"https://$cluster_address/api/v1/backup/verify/\"\n```\n\n### Get asynchronous request details for Backup Verification\nGet the details of an asynchronous request\nfor a backup verification job.\n[\n`/backup/verify/{id}`\n](#operation/getBackupVerificationAsyncRequestStatus).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/backup/verify/$id\"\n```\n\n### Reschedule unsuccessful backup tasks\n[\n`/backup/retry`\n](#operation/createBackupRemediationAsyncTask).\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"spec\": [\n      {\n        \"objectId\": \"$objectId\",\n        \"eventSeriesId\": \"$eventSeriesId\"\n      }\n    ],\n    \"config\": {\n      \"runNow\": \"$runNow\"\n    }\n  }' \\\n  \"https://$cluster_address/api/v1/backup/retry/\"\n```\n\n### Get status of reschedule operation\n[\n`/backup/retry/{id}`\n](#operation/getBackupRemediationAsyncTaskStatus).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/backup/retry/$id\"\n```\n\n# Exclusion pattern\n\nAn exclusion pattern is a regular expression pattern that enables Rubrik clusters to exclude files and folders, with names that match the regular expression pattern, from search results. Once created, the Rubrik cluster applies the exclusion pattern to the global search results and the snapshot level search results. The exclusion patterns also exclude matching files and folders from the recovery process.\n\nA Rubrik cluster can apply the exclusion pattern on a particular [Fileset](#section/Filesets) or on all the filesets associated with a particular [Host](#section/Hosts).\n\nThe exclusion patterns are either mutable or immutable. By default, the exclusion patterns are mutable or editable upon creation.\n\nThe Rubrik REST API exposes endpoints to:\n\n* create a single exclusion pattern\n* create multiple exclusion patterns, in bulk\n* get details of all the existing exclusion patterns\n* view details of a specific exclusion pattern\n* update an existing exclusion pattern\n* delete a single exclusion pattern\n* delete multiple exclusion patterns, in bulk\n\n## Adding an exclusion pattern\nTo create a new exclusion pattern, send a POST request to [/exclusion_pattern](#operation/createExclusionPattern).\nThe request payload must include the following attributes required to create an exclusion pattern:\n* `sourceId` - The ID for a fileset or a host to which the pattern will apply.\n* `pattern` - The regular expression pattern.\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"sourceId\": \"$sourceId\",\n    \"pattern\": \"$pattern\" }' \\\n  \"https://$cluster_address/api/v1/exclusion_pattern\"\n```\n\nThe Rubrik REST API server responds with the details of the new exclusion pattern.\n\n```bash\n{\n  \"id\": \"$id\",\n  \"sourceId\": \"$sourceId\",\n  \"pattern\": \"$pattern\",\n  \"isMutable\": true,\n  \"patternStatus\": \"Queued\",\n  \"isActive\": true,\n  \"primaryClusterId\": \"$primaryClusterId\"\n}\n```\n\n## Bulk adding exclusion patterns\nTo create exclusion patterns in bulk, send a POST request to [/exclusion_pattern/bulk](#operation/bulkCreateExclusionPattern).\nThe request payload must be an array. The array contains one set of required attributes for every exclusion pattern that will be created. See [Adding an exclusion pattern](#adding-an-exclusion-pattern) for a list of required attributes.\n\n```bash\ncurl -X POST \\\n  -d '{\n    [{ \"sourceId\": \"$sourceId1\", \"pattern\": \"$pattern1\"}, { \"sourceId\": \"$sourceId2\", \"pattern\": \"$pattern2\"}] }' \\\n  \"https://$cluster_address/api/v1/exclusion_pattern/bulk\"\n```\n\nThe Rubrik REST API server responds with the details of the new exclusion patterns.\n\n```bash\n{\n  \"exclusionPatternDetails\": [\n    {\n      \"id\": \"$id\",\n      \"sourceId\": \"$sourceId1\",\n      \"pattern\": \"$pattern1\",\n      \"isMutable\": true,\n      \"patternStatus\": \"Queued\",\n      \"isActive\": true,\n      \"primaryClusterId\": \"$primaryClusterId\"\n    },\n    {\n      \"id\": \"$id\",\n      \"sourceId\": \"$sourceId2\",\n      \"pattern\": \"$pattern2\",\n      \"isMutable\": true,\n      \"patternStatus\": \"Queued\",\n      \"isActive\": true,\n      \"primaryClusterId\": \"$primaryClusterId\"\n    }\n  ]\n}\n```\n\n## Retrieving all exclusion patterns\nTo retrieve a summary of all the exclusion patterns that have been added to the Rubrik cluster, send a GET request to [/exclusion_pattern](#operation/queryExclusionPattern).\nThe GET /exclusion_pattern endpoint exposes a number of parameters to filter the list of exclusion patterns returned by the endpoint. The endpoint can be used with or without any of the available parameters.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/exclusion_pattern\"\n```\n\nThe Rubrik REST API server responds with a ListResponse object that contains the current list of exclusion patterns and their details.\n\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"id\": \"$id\",\n      \"sourceId\": \"$sourceId\",\n      \"pattern\": \"$pattern\",\n      \"isMutable\": true,\n      \"patternStatus\": \"Applied\",\n      \"isActive\": true,\n      \"primaryClusterId\": \"$primaryClusterId\"\n    }\n  ],\n  \"total\": 1\n}\n```\n\n## Retrieving a specific exclusion pattern\nTo retrieve the details of a specific exclusion pattern, send a GET request to [/exclusion_pattern/{id}](#operation/getExclusionPattern).\nThe {id} represents the ID for the exclusion pattern and has the form - ExclusionPattern:::{uuid}.\n\n```bash\ncurl -X GET \\\n  \"https://$cluster_address/api/v1/exclusion_pattern/$exclusion_pattern_id\"\n```\n\nThe Rubrik REST API server responds with the details of the specified exclusion pattern.\n\n```bash\n{\n  \"id\": \"$exclusion_pattern_id\",\n  \"sourceId\": \"$sourceId\",\n  \"pattern\": \"$pattern\",\n  \"isMutable\": true,\n  \"patternStatus\": \"Applied\",\n  \"isActive\": true,\n  \"primaryClusterId\": \"$primaryClusterId\"\n}\n```\n\n## Updating an exclusion pattern\nTo update a specific exclusion pattern, send a POST request to [/exclusion_pattern/{id}](#operation/updateExclusionPattern).\nNote that the Rubrik cluster allows updating only the exclusion patterns that have `\"isMutable\": true`.\nThe {id} represents the ID for the exclusion pattern to be updated and has the form - ExclusionPattern:::{uuid}.\n\nThe attributes that can be updated are all or a subset of the following attributes:\n\n* pattern\n* isActive\n* isMutable\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"pattern\": \"$pattern\",\n    \"isActive\": false,\n    \"isMutable\": true }' \\\n  \"https://$cluster_address/api/v1/exclusion_pattern/$exclusion_pattern_id\"\n```\n\nThe Rubrik REST API server responds with the details of the updated exclusion pattern.\n\n```bash\n{\n  \"id\": \"$exclusion_pattern_id\",\n  \"sourceId\": \"$sourceId\",\n  \"pattern\": \"$pattern\",\n  \"isMutable\": true,\n  \"patternStatus\": \"Queued\",\n  \"isActive\": true,\n  \"primaryClusterId\": \"$primaryClusterId\"\n}\n```\n\n## Deleting an exclusion pattern\nTo delete a specific exclusion pattern, send a DELETE request to [/exclusion_pattern/{id}](#operation/deleteExclusionPattern).\nNote that the Rubrik cluster only allows the deletion of the exclusion patterns that have `\"isMutable\": true`.\nThe {id} represents the ID for the exclusion pattern to be deleted and has the form - ExclusionPattern:::{uuid}.\n\n```bash\ncurl -X DELETE \\\n  \"https://$cluster_address/api/v1/exclusion_pattern/$exclusion_pattern_id\"\n```\nThe Rubrik REST API server responds with a 204 HTTP response code to indicate the successful deletion of the specified exclusion pattern.\n\n## Bulk deleting exclusion patterns\nTo delete exclusion patterns in bulk, send a DELETE request to [/exclusion_pattern/bulk](#operation/bulkDeleteExclusionPattern) with the IDs for the exclusion patterns to be deleted.\nNote that the Rubrik cluster only allows the deletion of the exclusion patterns that have `\"isMutable\": true`.\n\n```bash\ncurl -X DELETE \\\n  \"https://$cluster_address/api/v1/exclusion_pattern/bulk?ids=$exclusion_pattern_id1,$exclusion_pattern_id2\"\n```\nThe Rubrik REST API server responds with a 204 HTTP response code to indicate the successful deletion of the specified exclusion patterns.\n\n# Hyper-V VMs \n\n## Getting the forced full snapshot configuration of a Hyperv VM\n\nTo retrieve the configuration used to force a full snapshot\nof a Hyperv virtual machine, send a GET request to:\n[`/hyperv/vm/{id}/request/force_full_snapshot`](#operation/getHypervVirtualMachineForceFullSpec)\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/hyperv/vm/{id}/request/force_full_snapshot\"\n```\n\nThe Rubrik REST API server responds with the Hyperv virtual machine force full\nresponse object. The response object contains the latest configuration,\nunless it was cleared by a backup job of the Hyperv virtual machine or was\nnever set.\n\n```bash\n{\n  \"vmId\": \"HypervVirtualMachine:::fe9470a4-4057-4357-ac1f-ae99ff735439\",\n  \"virtualDiskInfos\": [\n    {\n      \"virtualDiskId\": \"872bdd28-4d5d-4831-8698-59d692a822fc\",\n      \"shouldDedupe\": false\n    },\n    {\n      \"virtualDiskId\": \"39f61483-9cf5-11e9-80b9-00155d094203\",\n      \"shouldDedupe\": true\n    }\n  ]\n}\n```\n\n## Requesting a forced full snapshot for a Hyperv VM\n\nTo request a forced full snapshot of a Hyperv virtual machine, send a POST\nrequest to:\n[`/hyperv/vm/{id}/request/force_full_snapshot`](#operation/requestHypervVirtualMachineForceFullSnapshot)\n\n```bash\ncurl -X POST \"https://$cluster_address/api/v1/hyperv/vm/{id}/request/force_full_snapshot\"\n```\n\nThe Rubrik REST API server persists the configuration to force a\nfull snapshot until the next backup job, which takes a full snapshot\nand clears the configuration.\n\n```bash\n{\n  \"vmId\": \"HypervVirtualMachine:::fe9470a4-4057-4357-ac1f-ae99ff735439\",\n  \"virtualDiskInfos\": [\n    {\n      \"virtualDiskId\": \"872bdd28-4d5d-4831-8698-59d692a822fc\",\n      \"shouldDedupe\": false\n    },\n    {\n      \"virtualDiskId\": \"39f61483-9cf5-11e9-80b9-00155d094203\",\n      \"shouldDedupe\": true\n    }\n  ]\n}\n```\n\n# Health monitor\nThe Rubrik REST API endpoints for health monitor will allow users to get insight\ninto the health of individual nodes or the entire Rubrik cluster.\nCurrently, the endpoints support following operations:\n* Retrieve a list of available health monitor policies.\n* Enforce health monitor policies on one or more nodes of the Rubrik cluster.\n* Retrieve the status of the health monitor policies.\n\n## Get health monitor policies\nTo retrieve a list of health monitor policies, send GET request to\nGET ['/health_monitor/policies'](#operation/getPolicies) endpoint.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/health_monitor/policies\"\n```\nThe Rubrik REST API server responds with a list of the available health monitor\npolicies. Following output displays the response for Sdfs policy.\n```bash\n[\n  {\n    \"policyId\": \"Sdfs\",\n    \"policyType\": \"CHECKER\",\n    \"policyName\": \"Sdfs Check\",\n    \"description\": \"Verify /sd is accessible and the SDFS service is responding\",\n    \"script\": \"$policyScript\",\n    \"scope\": \"NODE\",\n    \"runInState\": [\n      \"OK\",\n      \"BAD\"\n    ],\n    \"isEnabled\": true,\n    \"isHidden\": false,\n    \"scheduleFreqInSec\": 20,\n    \"causes\": [],\n    \"remedies\": [],\n    \"configParams\": [],\n    \"notificationConfig\": {\n      \"name\": \"Sdfs Check Failure\",\n      \"notificationType\": \"DIAGNOSTIC\",\n      \"notificationMessage\": \"Sdfs check failed\",\n      \"criticalDetails\": {\n        \"numFailures\": 150,\n        \"failureWindow\": 3000,\n        \"action\": {\n          \"actionString\": \"$criticalActionScript\",\n          \"isEnabled\": true\n        }\n      },\n      \"warnDetails\": {\n        \"numFailures\": 75,\n        \"failureWindow\": 2000,\n        \"action\": {\n          \"actionString\": \"$warnActionScript\",\n          \"isEnabled\": true\n        }\n      }\n    },\n    \"dependencies\": []\n  }\n]\n\n```\n\n## Run health monitor Policies\nTo enforce health monitor policies on selected nodes or the entire Rubrik\ncluster send a POST Request to\n['/health_monitor/$runPolicy'](#operation/runPolicies) endpoint.\n\n```bash\ncurl -X POST\n  -d '{\n    \"policyIds\": [\"policy_id1\", \"policy_id2\"],\n    \"nodeIds\": [\"node_id1, node_id2\"]}' \\\n  \"https://$cluster_address>/api/v1/health_monitor/runPolicy\"\n```\nThe Rubrik REST API server responds with the result of running the health\nmonitor policies. Following output displays the Sdfs policy enforcement response.\n```\n[\n  {\n    \"nodeId\": \"$node_id1\",\n    \"checkResults\": [\n      {\n        \"nodeId\": \"$node_id1\",\n        \"policyId\": \"Sdfs\",\n        \"isCheckPassed\": true\n      }\n    ]\n  },\n  {\n    \"nodeId\": \"$node_id2\",\n    \"checkResults\": [\n      {\n        \"nodeId\": \"$node_id2\",\n        \"policyId\": \"Sdfs\",\n        \"isCheckPassed\": true\n      }\n    ]\n  },\n  {\n    \"nodeId\": \"$node_id3\",\n    \"checkResults\": [\n      {\n        \"nodeId\": \"$node_id3\",\n        \"policyId\": \"Sdfs\",\n        \"isCheckPassed\": true\n      }\n    ]\n  }\n\n```\n## Health monitor policy enforcement status\nTo retrieve the status of the policy enforcement, send a GET request to\nGET ['/health_monitor/policyStatus'](#operation/getPolicyStatus) endpoint.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/health_monitor/policyStatus?\nnode_ids=<node_id1,node_id2>&policy_ids=policy_id1,policy_id2&has_detailed_status=true\"\n```\nThe Rubrik REST API server responds with the status of running the policies on\nthe selected nodes or the entire Rubrik cluster.\n```\n[\n  {\n    \"nodeId\": \"$node_id1\",\n    \"checkResults\": [\n      {\n        \"nodeId\": \"$node_id1\",\n        \"policyId\": \"Sdfs\",\n        \"isCheckPassed\": true,\n        \"checkOutput\": \"Passed last 12 attempts.\"\n      }\n    ]\n  },\n  {\n    \"nodeId\": \"$node_id2\",\n    \"checkResults\": [\n      {\n        \"nodeId\": \"$node_id2\",\n        \"policyId\": \"Sdfs\",\n        \"isCheckPassed\": true,\n        \"checkOutput\": \"Passed last 12 attempts.\"\n      }\n    ]\n  },\n  {\n    \"nodeId\": \"$node_id3\",\n    \"checkResults\": [\n      {\n        \"nodeId\": \"$node_id3\",\n        \"policyId\": \"Sdfs\",\n        \"isCheckPassed\": true,\n        \"checkOutput\": \"Passed last 12 attempts.\"\n      }\n    ]\n  }\n]\n```\n\n# Job Monitoring\n\n## Get summary information for protection and recovery jobs that are currently\n## running, scheduled to run, or completed in the last 24 hours.\nTo get summary information for protection and recovery jobs that are currently\nrunning, scheduled to run, or completed in the last 24 hours, send a GET request\nto [`/job_monitoring`](#operation/getJobMonitoringInfo) endpoint with optional\nquery parameters. The optional query parameters are job_event_status, job_type,\nis_first_full, nclude_log_related_job, object_type, object_name, node_name,\neffective_sla_domain_id, last_update_time, after_id, sort_by, sort_order\nand limit. The default sort sort_by is start time with sort_order as asc.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/job_monitoring?job_event_status=Active,Queued&limit=1&sort_by=StartTime&sort_order=asc\"\n```\n\nThe list of jobs matching the filters is returned.\n```bash\n{\n  \"jobMonitoringInfoList\": [\n    {\n      \"jobMonitoringState\": \"Active\",\n      \"jobStatus\": \"Queued\",\n      \"jobType\": \"Replication\",\n      \"objectId\": \"ObjectId,\n      \"objectType\": \"VmwareVirtualMachine\",\n      \"objectName\": \"object name\",\n      \"locationId\": \"location id\",\n      \"locationName\": \"location name\",\n      \"slaDomainId\": \"6d29f271-d706-47a5-a706-f4411ae5555a\",\n      \"slaDomainName\": \"Sla name\",\n      \"startTime\": \"2019-10-28T22:15:14.868Z\",\n      \"isFirstFullSnapshot\": false,\n      \"retryCount\": 0,\n      \"eventSeriesId\": \"b3a00c13-74de-4508-80cd-822d5f2960fe\",\n      \"duration\": 1802576,\n      \"nodeId\": \"node_id\",\n      \"warningCount\": 0,\n      \"lastUpdatedTime\": \"2019-10-28T22:15:15.088Z\"\n    }\n  ],\n  \"jobEventStatus\": [\"Active\",\"Queued\"],\n  \"shouldIncludeLogRelatedJob\": false,\n  \"afterId\": \"afterId\",\n  \"hasMore\": true\n}\n```\n## Get job summary information for protection and recovery jobs separated by\n## job type that have been scheduled, are currently running, or completed in\n## the past 24 hours.\nTo get job summary information for protection and recovery jobs separated by\njob type that have been scheduled, are currently running, or completed in the\npast 24 hours,send a GET request to\n[`/job_monitoring/summary_by_job_type`](#operation/getMonitoringJobCountByJobType)\nwith the required job_monitoring_state parameter.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/job_monitoring/summary_by_job_type?job_monitoring_state=Active\"\n```\n\nThe reponse is the the number of jobs for the given state separated by job_type.\n\n```bash\n{\n  \"jobMonitoringState\": \"Active\",\n  \"objectCounts\": {\n    \"total\": 37,\n    \"archival\": 10,\n    \"backup\": 15,\n    \"instantiate\": 0,\n    \"recovery\": 0,\n    \"replication\": 12,\n    \"logBackup\": 0,\n    \"logArchival\": 0,\n    \"logReplication\": 0,\n    \"logShipping\": 0\n  }\n}\n```\n## Get job summary information separated by job state for all running jobs,\n## jobs that have been scheduled, and jobs that are complete, for protection\n## and recovery jobs in the past 24 hours.\nTo get job summary information separated by job state for all running jobs,\njobs that have been scheduled, and jobs that are complete, for protection and\nrecovery jobs in the past 24 hours, send a GET request to\n[`/job_monitoring/get_summary_by_job_state`](#operation/getMonitoringJobCountByJobState)\nwith the optional parameter job_types to get the count only for a\nspecific state.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/job_monitoring/get_summary_by_job_state\"\n```\n\nThe response is the number of jobs in each state.\n\n```bash\n{\n  \"jobTypes\": [\n    \"Instantiate\",\n    \"LogReplication\",\n    \"Archival\",\n    \"Replication\",\n    \"LogBackup\",\n    \"LogShipping\",\n    \"Backup\",\n    \"Recovery\",\n    \"LogArchival\"\n  ],\n  \"objectCounts\": {\n    \"total\": 52,\n    \"failure\": 2,\n    \"active\": 15,\n    \"scheduled\": 10,\n    \"success\": 25\n  }\n}\n```\n\n## Get a link to to download the job summary information as a CSV file, with\n## the same filters as in the `GET /job_monitoring/` API.\nTo get a link to to download the job summary information as a CSV file, send a\nGET request to\n[`/job_monitoring/csv_download_link`](#operation/getJobMonitoringInfoCsvDownloadLink)\n with require parameter job_monitoring_state.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/job_monitoring/csv_download_link?job_monitoring_state=Active\"\n```\n\nThe link to the file is returned.\n\n```bash\n{\n  \"downloadLink\": \"https://$cluster_address/report_dir/name.csv\",\n  \"jobMonitoringState\": \"Active\"\n}\n```\n\n## Create an email subscription to the monitoring page with user-specified\n## job states.\nTo create an email subscription to the monitoring page, send a\nPOST request to\n[`/job_monitoring/subscription`](#operation/createMonitoringSubscription)\n with required parameter subscription_request.\n\n```bash\ncurl -X POST -d '{\n  \"timeAttributes\": \"$timeAttributes\",\n  \"emailAddresses\": \"$emailAddresses\",\n  \"attachments\": \"$attachments\",\n  \"jobStates\": \"$jobStates\"\n}' \"https://$cluster_address/api/v1/job_monitoring/subscription\"\n```\n\nThe summary of the created monitoring email subscription is returned.\n\n```bash\n{\n  \"timeAttributes\": {\"dailyScheduleHour\": 7},\n  \"emailAddresses\": [\"abcde@rubrik.com\"],\n  \"attachments\": [\"Csv\"],\n  \"jobStates\": [\"Active\"],\n  \"id\": \"b3a00c13-74de-4508-80cd-822d5f2960fe\",\n  \"status\": \"Active\",\n  \"owner\": {\n    \"userId\": \"6d29f271-d706-47a5-a706-f4411ae5555a\",\n    \"userName\": \"Owner\"\n  }\n}\n```\n\n## Get all monitoring page email subscriptions.\nTo get all email subscriptions to the monitoring page, send a\nGET request to [`/job_monitoring/subscription`]\n(#operation/getMonitoringSubscriptions)\n with no parameters.\n\n```bash\ncurl -X GET\n\"https://$cluster_address/api/v1/job_monitoring/subscription\"\n```\n\nA summary of all unarchived email subscriptions for monitoring\n  page in a list of summaries sorted by creation time (earliest\n  created first).\n  Each summary contains information for each subscription\n  -- Time attributes - when to send the email\n  -- Email addresses - who to send the email\n  -- Attachments - what attachments should the email include\n  -- Job states - which job states to include in the email\n      (Failure, Scheduled, Success, Active, Canceled).\n  -- Id - the tring that identifies the subscription\n  -- Status - the status of the subscription\n      (Active, Suspended, or Unknown)\n  -- Owner - information about the owner of the subscription\n    -- user id - unique id used to identify the owner\n    -- user name - human-readable name of user\n       the time schedule to send the subscription\n\n```bash\n[\n  {\n    \"timeAttributes\": {\"dailyScheduleHour\": 7},\n    \"emailAddresses\": [\"abcde@rubrik.com\"],\n    \"attachments\": [\"Csv\"],\n    \"jobStates\": [\"Active\"],\n    \"id\": \"b3a00c13-74de-4508-80cd-822d5f2960fe\",\n    \"status\": \"Suspended\",\n    \"owner\": {\n      \"userId\": \"6d29f271-d706-47a5-a706-f4411ae5555a\",\n      \"userName\": \"Owner\"\n    }\n  },\n  {\n    \"timeAttributes\": {\"dailyScheduleHour\": 20},\n    \"emailAddresses\": [\"dummy@rubrik.com\"],\n    \"attachments\": [\"Csv\"],\n    \"jobStates\": [\"Failure\", \"Canceled\"],\n    \"id\": \"b3a00c13-74de-4508-80cd-822d5f2960fe\",\n    \"status\": \"Active\",\n    \"owner\": {\n      \"userId\": \"499aeb71-f114-45a5-8456-91b9f6c45ddd\",\n      \"userName\": \"Owner\"\n    }\n  },\n]\n```\n\n## Get a monitoring page email subscription.\nTo get an email subscription to the monitoring page, send a\nGET request to\n[`/job_monitoring/subscription/{subscription_id}`]\n(#operation/getMonitoringSubscription)\n with required parameter subscription_id.\n\n```bash\ncurl -X GET\n\"https://$cluster_address/api/v1/job_monitoring/subscription/$subscription_id\"\n```\n\nThe summary of the created monitoring email subscription is returned.\n\n```bash\n{\n  \"timeAttributes\": {\"dailyScheduleHour\": 7},\n  \"emailAddresses\": [\"abcde@rubrik.com\"],\n  \"attachments\": [\"Csv\"],\n  \"jobStates\": [\"Active\"],\n  \"id\": \"b3a00c13-74de-4508-80cd-822d5f2960fe\",\n  \"status\": \"Active\",\n  \"owner\": {\n    \"userId\": \"6d29f271-d706-47a5-a706-f4411ae5555a\",\n    \"userName\": \"Owner\"\n  }\n}\n```\n\n## Update an existing monitoring page email subscription.\nTo update an email subscription to the monitoring page, send a\nPATCH request to\n[`/job_monitoring/subscription/{subscription_id}`]\n(#operation/updateMonitoringSubscription)\n with required parameter subscription_id.\n\n```bash\ncurl -X PATCH -d '{\n  \"timeAttributes\": \"$timeAttributes\",\n  \"emailAddresses\": \"$emailAddresses\",\n  \"attachments\": \"$attachments\",\n  \"jobStates\": \"$jobStates\",\n  \"id\": \"$id\",\n  \"assumeOwnership\": \"$assumeOwnership\"\n}'\n\"https://$cluster_address/api/v1/job_monitoring/subscription/$subscription_id\"\n```\n\nThe summary of the updated monitoring email subscription is returned.\n\n```bash\n{\n  \"timeAttributes\": {\"dailyScheduleHour\": 7},\n  \"emailAddresses\": [\"abcde@rubrik.com\"],\n  \"attachments\": [\"Csv\"],\n  \"jobStates\": [\"Active\"],\n  \"id\": \"b3a00c13-74de-4508-80cd-822d5f2960fe\",\n  \"status\": \"Active\",\n  \"owner\": {\n    \"userId\": \"6d29f271-d706-47a5-a706-f4411ae5555a\",\n    \"userName\": \"Owner\"\n  }\n}\n```\n\n## Delete an existing monitoring page email subscription.\nTo delete an email subscription to the monitoring page, send a\nDELETE request to\n[`/job_monitoring/subscription/{subscription_id}`]\n(#operation/deleteMonitoringSubscription)\n with required parameter subscription_id.\n\n```bash\ncurl -X DELETE\n\"https://$cluster_address/api/v1/job_monitoring/subscription/$subscription_id\"\n```\n\n# Rubrik syslog management\n\nRubrik CDM clusters include the capability to add export rules to forward\nsyslog information to remote servers.\n\n# Managing the Rubrik cluster syslog settings\n\nTo view all the currently configured syslog export rules, send a GET request to\nthe [`/syslog/export`](#operation/getSyslogExportRules) endpoint.\n\n**Example:** Retrieving the currently configured syslog export rules for a\nRubrik cluster.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/syslog/export\"\n```\n\nTo add a new syslog export rule, send a POST request to the\n[`/syslog/export`](#operation/addSyslogExportRule) endpoint.\n\n**Example:** Adding a new syslog export rule for a Rubrik cluster\n\n```bash\ncurl -X POST \"https://$cluster_address/api/v1/syslog/export\"\n```\n\nTo retrieve a syslog export rule, send a GET request with the export rule ID to\nthe [`/syslog/export/{id}`](#operation/getSyslogExportRule) endpoint.\n\nTo modify a syslog export rule, send a PATCH request with the export rule ID to\nthe [`/syslog/export/{id}`](#operation/updateSyslogExportRule) endpoint.\n\nTo remove a syslog export rule, send a DELETE request with the export rule ID to\nthe [`/syslog/export/{id}`](#operation/deleteSyslogExportRule) endpoint.\n\n**Example:** Managing individual syslog export rules for a Rubrik cluster\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/syslog/export/{id}\"\ncurl -X PATCH \"https://$cluster_address/api/v1/syslog/export/{id}\"\ncurl -X DELETE \"https://$cluster_address/api/v1/syslog/export/{id}\"\n```\n\nTo test a syslog export rule, send a POST request with the export rule\ninformation to the [`/syslog/export/test`](#operation/testSyslogExportRule)\nendpoint.\n\n**Example:** Testing a syslog export rule for a Rubrik cluster\n\n```bash\ncurl -X POST \"https://$cluster_address/api/v1/syslog/export/test\"\n```\n\n# Rubrik user management\n\nRubrik CDM clusters include the capability to manage access to resources\nusing local users.\n\n# Managing the Rubrik local user account lockout\n\nTo view the current local user account lockout configuration, send a GET\nrequest to\nthe [`/user/lockout`](#operation/getUserAccountLockoutSettings) endpoint.\n\n**Example:** Retrieving the current local user account lockout configuration\nfor a Rubrik cluster\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/user/lockout\"\n```\n\nTo update the lockout configuration, send a PATCH request to the\n[`/user/lockout`](#operation/manageUserAccountLockoutSettings) endpoint.\n\n**Example:** Updating the local user account lockout configuration for a\nRubrik cluster.\n\n```bash\ncurl -X PATCH \"https://$cluster_address/api/v1/user/lockout\"\n```\n\n## Unlocking a locked user\nTo unlock a locked user, send a POST request to the\n[`/user/{id}/unlock`](#operation/unlockUser) endpoint\n\n**Example:** Unlocking a locked local user on CDM cluster\n```bash\ncurl -X POST \"https://$cluster_address/api/v1/user/{id}/unlock\"\n```\n\n# Configuring users with TOTP as 2FA\n\nTo fetch the TOTP status for an account, send a GET request to the\n[`/user/{id}/totp/status`](#operation/getTotpStatus) endpoint.\n\n**Example:** Retrieving TOTP status\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/user/{id}/totp/status\"\n```\n\nTo configure and enable TOTP for an account, send a PUT request to the\n[`/user/{id}/totp/config`](#operation/setupTotp) endpoint.\n\n**Example:** Configure TOTP\n```bash\ncurl -X PUT \"https://$cluster_address/api/v1/user/{id}/totp/config\"\n```\n\nTo reset and disable TOTP for an account, send a DELETE request to the\n[`/user/{id}/totp/config`](#operation/resetTotp) endpoint.\n\n**Example:** Reset TOTP\n```bash\ncurl -X DELETE \"https://$cluster_address/api/v1/user/{id}/totp/config\"\n```\n\nTo generate TOTP secret for an account, send a POST request to the\n[`/user/{id}/totp/new_secret`](#operation/generateTotpSecret) endpoint.\n\n**Example:** Generate TOTP secret\n```bash\ncurl -X POST \"https://$cluster_address/api/v1/user/{id}/totp/new_secret\"\n```\n\n# MFA Servers\n\nAn MFA Server is a server that Rubrik can be configured with in order to support\nintegrations with external multi-factor authentication services.\n\n## Adding a server\nTo add an MFA Server to the cluster, send a POST request to the\n[`/mfa/rsa/server`](#operation/createRsaMfaServer) endpoint.\n\n```bash\ncurl -X POST -d \\\n  '\n  {\n  \"name\": \"string\",\n  \"timeout\": 0,\n  \"baseUrl\": \"string\",\n  \"clientId\": \"string\",\n  \"assurancePolicyName\": \"string\",\n  \"ldapUsernameAttribute\": \"string\",\n  \"certificateId\": \"string\",\n  \"restApiKey\": \"string\",\n  \"restApiAccessId\": \"string\"\n  }\n  ' \\\n  \"https://$cluster_address/api/v1/mfa/rsa/server\"\n```\n```bash\n{\n  \"name\": \"string\",\n  \"timeout\": 0,\n  \"baseUrl\": \"string\",\n  \"clientId\": \"string\",\n  \"assurancePolicyName\": \"string\",\n  \"ldapUsernameAttribute\": \"string\",\n  \"certificateId\": \"string\",\n  \"id\": \"string\"\n}\n```\n## Getting MFA Servers\nTo get all MFA Servers configured on the cluster, leverage a GET request on the\n[`/mfa/rsa/server`](#operation/queryRsaMfaServers) endpoint.\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/mfa/rsa/server\"\n```\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"name\": \"string\",\n      \"timeout\": 0,\n      \"baseUrl\": \"string\",\n      \"clientId\": \"string\",\n      \"assurancePolicyName\": \"string\",\n      \"ldapUsernameAttribute\": \"string\",\n      \"certificateId\": \"string\",\n      \"id\": \"string\"\n    }\n  ],\n  \"total\": 0\n}\n```\n\n## Deleting MFA Server Integrations\nIn order to delete a specific MFA Server integration, make a DELETE call to the\n[`/mfa/rsa/server/{id}`](#operation/deleteRsaMfaServer) endpoint.\n\n```bash\ncurl -X DELETE \\\n  -d '{\n    \"id\": \"$server_id\" }' \\\n  \"https://$cluster_address/api/v1/mfa/rsa/server/{id}\"\n```\n\n## Getting an MFA Server\nIn order to retrieve a specific MFA server integration, make a GET call to the\n[`/mfa/rsa/server/{id}`](#operation/getRsaMfaServer) endpoint.\n\n```bash\ncurl -X POST \\\n  -d '{\n    \"id\": \"server_id\" }' \\\n  \"https://$cluster_address/api/v1/mfa/rsa/server/{id}\"\n```\n```bash\n{\n  \"name\": \"string\",\n  \"timeout\": 0,\n  \"baseUrl\": \"string\",\n  \"clientId\": \"string\",\n  \"assurancePolicyName\": \"string\",\n  \"ldapUsernameAttribute\": \"string\",\n  \"certificateId\": \"string\",\n  \"id\": \"string\"\n}\n```\n\n## Updating an MFA Server\nIn order to update a specific MFA Server integration, make a PATCH call to the\n[`/mfa/rsa/server/{id}`](#operation/updateRsaMfaServer) endpoint.\n\n```bash\ncurl -X PATCH \\\n  -d '{\n{\n  \"name\": \"string\",\n  \"timeout\": 0,\n  \"baseUrl\": \"string\",\n  \"restApiKey\": \"string\",\n  \"clientId\": \"string\",\n  \"assurancePolicyName\": \"string\",\n  \"restApiAccessId\": \"string\",\n  \"ldapUsernameAttribute\": \"string\",\n  \"certificateId\": \"string\"\n}\n    ' \\\n  \"https://$cluster_address/api/v1/mfa/rsa/server/{id}\"\n```\n```bash\n{\n  \"name\": \"string\",\n  \"timeout\": 0,\n  \"baseUrl\": \"string\",\n  \"clientId\": \"string\",\n  \"assurancePolicyName\": \"string\",\n  \"ldapUsernameAttribute\": \"string\",\n  \"certificateId\": \"string\",\n  \"id\": \"string\"\n}\n```\n\n# Legal\n\n## Copyright\n\nRubrik REST API - Copyright © 2017-2021 Rubrik Inc.\nAll rights reserved.\n\nThis documentation may be used free of charge. Selling without prior written consent is prohibited.\nObtain permission before redistributing. In all cases, this copyright notice and disclaimer must remain\nintact.\n\n\n## Disclaimer\n\nTHE CONTENTS OF THIS DOCUMENTATION ARE PROVIDED \"AS IS,\" AND COPYRIGHT HOLDERS MAKE NO\nREPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR\nTITLE; THAT THE CONTENTS OF THE DOCUMENTATION ARE SUITABLE FOR ANY PURPOSE; THAT THE\nIMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS,\nTRADEMARKS OR OTHER RIGHTS.\nCOPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL\nDAMAGES ARISING OUT OF ANY USE OF THE DOCUMENTATION OR THE PERFORMANCE OR IMPLEMENTATION OF\nTHE CONTENTS THEREOF.\n\n## Trademarks\n\nRubrik, the Rubrik logo, Rubrik Envision, and Rubrik Edge are trademarks or registered trademarks of Rubrik, Inc. in the U.S. and/or other countries. All other trademarks are the property of their respective owners.\n\n# Report Config\n\n## Update the config parameters related to Reports\nSend a PATCH request to [`/report/config`](#operation/setReportConfig)\nThis request updates the configuration parameters related to the reporting framework.\n`cleanupReportJobInstanceForLogJobs` specifies an interval in days. Log jobs in report job instances are retained for the specified interval.\n\n```bash\ncurl -X PATCH \"https://$cluster_address/api/v1/report/config\"\n```\n\n## Get summary information for backup compliance based on each 24 hour time period\nSend a GET request to [`/report/compliance_summary`](#operation/getComplianceSummaryV1)\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/report/compliance_summary\"\n```\n\n## Get summary information for backup compliance based on snapshot range\nSend a GET request to\n [`/report/compliance_summary_sla`](#operation/getComplianceSummarySLAV1)\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/report/compliance_summary_sla\"\n```\n\n#Database log backup report\n\n#Get the database log report summary\n\nTo get the database log report summary, send a GET request to the\n[`/database/log_report`](#operation/queryLogReport) end point\n\n**Example:** Retrieving the database log report summary\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/database/log_report\"\n```\n```bash\n{\n  \"total\": 1,\n  \"data\": [\n    {\n      \"effectiveSlaDomainName\": \"sla_name\",\n      \"id\": \"$db_id\",\n      \"name\": \"$db_name\",\n      \"location\": \"$location_name\",\n      \"databaseType\": \"$db_type\",\n      \"primaryClusterId\": \"$cluster_id\",\n      \"logBackupFrequency\": 3600,\n      \"lastSnapshotTime\": \"2020-11-10T22:21:43.000Z\",\n      \"effectiveSlaDomainId\": \"$sla_id\"\n    }\n  ],\n  \"hasMore\": false\n}\n```\n\n#Get the database log report properties\n\nTo get the database log report properties, send a GET request to the\n[`/database/log_report/defaults`](#operation/queryReportProperties) end point\n\n **Example:** Retrieving the database log report properties\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v1/database/log_report/defaults\"\n```\n```bash\n{\n  \"logDelayNotificationFrequencyInMin\": 720,\n  \"logDelayThresholdInMin\": 720,\n  \"enableDelayNotification\": false\n}\n```\n\n#Update the database log report properties\n\nTo update the database log report properties, send a PATCH request to the\n[`/database/log_report/defaults`](#operation/updateReportProperties) end point\n\n **Example:** Update the database log report properties\n\n```bash\ncurl -X PATCH \"https://$cluster_address/api/v1/database/log_report/defaults\" -d\\\n'{\n    \"logDelayNotificationFrequencyInMin\": 360,\n    \"logDelayThresholdInMin\": 120,\n    \"enableDelayNotification\": true\n }'\n```\n\n# Organization\n\n## Create a list of Rubrik Envoy objects\nTo create a list of Rubrik Envoy objects, send a POST request to the\n[`/organization/{id}/envoy/bulk`](#operation/bulkCreateEnvoys) endpoint. The\nrequest takes an ID for the Organization and the information about the Rubrik\nEnvoy objects.\n\n```bash\ncurl -X POST \"https://$cluster_address/api/v1/organization/{id}/envoy/bulk\"\n```\n\nThe Rubrik REST API server responds with a `ListResponse` object.\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"id\": \"string\",\n      \"ipAddress\": \"string\",\n      \"port\": 1234,\n      \"organizationId\": \"string\",\n      \"status\": \"Connected\",\n    },\n  ]\n}\n```\n\n## Remove a list of Rubrik Envoy objects\nTo remove a list of Rubrik Envoy objects, send a DELETE request to the\n[`/organization/{id}/envoy/bulk`](#operation/bulkDeleteEnvoys) endpoint. The\nrequest takes an ID for the Organization and a list of IDs for Rubrik Envoy\nobjects.\n\n```bash\ncurl -X DELETE \"https://$cluster_address/api/v1/organization/{id}/envoy/bulk\"\n```\n\nThe Rubrik REST API server responds with HTTP response code 204. This indicates\nthe request succeeded and the response body is empty.\n\n## Update a list of Rubrik Envoy objects\nTo update a list of Rubrik Envoy objects, send a PATCH request to the\n[`/organization/{id}/envoy/bulk`](#operation/bulkUpdateEnvoys) endpoint. The\nrequest takes an ID for the Organization and the information about the Rubrik\nEnvoy objects.\n\n```bash\ncurl -X PATCH \"https://$cluster_address/api/v1/organization/{id}/envoy/bulk\"\n```\n\nThe Rubrik REST API server responds with a `ListResponse` object.\n```bash\n{\n  \"hasMore\": true,\n  \"data\": [\n    {\n      \"id\": \"string\",\n      \"ipAddress\": \"string\",\n      \"port\": 1234,\n      \"organizationId\": \"string\",\n      \"status\": \"Connected\",\n    },\n  ]\n}\n```\n",
  "apiTitle": "Rubrik REST API",
  "endpoints": 323,
  "sdkMethods": 454,
  "schemas": 756,
  "parameters": 1251,
  "difficultyScore": 1144.75,
  "difficulty": "Very Hard"
}