{
  "providerName": "intel.com",
  "openApiRaw": "https://productapi.intel.com/swagger.json",
  "homepage": "intel.com",
  "serviceName": "product-catalogue",
  "apiVersion": "0.1.0",
  "methods": [
    {
      "url": "/api/products/get-codename",
      "method": "getCodeName",
      "httpMethod": "get",
      "tag": "products",
      "description": "5. Get list of codename details for Intel products.",
      "parameters": [
        {
          "name": "locale_geo_id",
          "schema": "string",
          "required": true,
          "description": "Locale and Geo code used to get localised data.<br/><br/>"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/products/get-ordering-info",
      "method": "getorderinginfo",
      "httpMethod": "get",
      "tag": "products",
      "description": "3. Get ordering info for product id's requested.",
      "parameters": [
        {
          "name": "product_id",
          "schema": "string",
          "required": true,
          "description": "Filter ordering info details based on one or multiple product id's. Values must be enclosed in [ square brackets ] and each value must be in \"double quotes\". Use comma to add multiple values. <br/><br/>Example: [\"123003\"]"
        },
        {
          "name": "locale_geo_id",
          "schema": "string",
          "required": true,
          "description": "Locale and Geo code used to get localised data.<br/><br/>"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/products/get-products",
      "method": "getProductList",
      "httpMethod": "get",
      "tag": "products",
      "description": "1. Find products by product id or category id",
      "parameters": [
        {
          "name": "locale_geo_id",
          "schema": "string",
          "required": true,
          "description": "Locale and Geo code used to get localised data.<br/><br/>"
        },
        {
          "name": "category_id",
          "schema": "string",
          "required": false,
          "description": "Filter products based on one or multiple category id. Either category id or product id is mandatory for any request. Values must be enclosed in [ square brackets ] and each value must be in \"double quotes\". Use comma to add multiple values. <br/><br/>Example: [\"873\"]<br/><br/>Categories Available:<br/> Processors = 873, Server Products = 1201, Mini PC's = 98414, Wireless Networking = 59485, Ethernet Products = 36773, Fabric products = 70021, Memory and Storage = 35125, Chipsets = 53, Graphics Drivers = 80939 <br/><br/>"
        },
        {
          "name": "product_id",
          "schema": "string",
          "required": false,
          "description": "Filter products based on one or multiple product id. Either category id or product id is mandatory for any request. Values must be enclosed in [ square brackets ] and each value must be in \"double quotes\". Use comma to add multiple values. <br/><br/>Example: [\"123003\"]<br/><br/>"
        },
        {
          "name": "highlights",
          "schema": "string",
          "required": false,
          "description": "Specification values which needs to be pulled from product data. Values must be enclosed in [ square brackets ] and each value must be in \"double quotes\". Use comma to add multiple values. <br/><br/>Example: [\"CoreCount\", \"StatusCodeText\"]<br/><br/>"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Indicates sorting fields. Accepts array of objects in format like: [{\"field\":\"name\",\"order\":\"ASC\"}].<br/><br/>Any specification that we get from get-product-info can be used to sort result. Other generic sort field is \"name\".<br/><br/>"
        },
        {
          "name": "filters",
          "schema": "string",
          "required": false,
          "description": "Allows to filter data.<br/><br/>Format of filter: [{\"type\":\"specvalue\",\"name\":\"ThreadCount\",\"gteq\":\"4\"}]<br/><br/><b>Available operators are:</b> \"eq\": equal to, \"neq\": not equal to, \"lteq\": less than or equal to, \"gteq\": greater than or equal to, \"swc\": starts with characters, \"nswc\": not starting with characters, \"cts\": contains, \"ncts\": not contains<br/><br/><b>Conditions:</b> By default all objects works on an AND condition. But inside an object we have the capability to put an \"OR\" or \"AND\" condition.<br/>Example conditions: [{\"type\":\"specvalue\",\"name\":\"ThreadCount\",\"ncts\":\"4,5\",\"cond\":\"AND\"}]<br/><br/><br/>"
        },
        {
          "name": "per_page",
          "schema": "integer",
          "required": false,
          "description": "Filter number of products in response to desired size."
        },
        {
          "name": "page_no",
          "schema": "integer",
          "required": false,
          "description": "Indicates page number for pagination of results."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/products/get-products-info",
      "method": "getProductInfo",
      "httpMethod": "get",
      "tag": "products",
      "description": "2. Get complete product info with product id.",
      "parameters": [
        {
          "name": "locale_geo_id",
          "schema": "string",
          "required": true,
          "description": "Locale and Geo code used to get localised data.<br/><br/>"
        },
        {
          "name": "product_id",
          "schema": "string",
          "required": true,
          "description": "Product id's that needs to be filtered. Only max of 40 products are supported now. Values must be enclosed in [ square brackets ] and each value must be in \"double quotes\". Use comma to add multiple values.<br/><br/>Example: [\"223\",\"224\"]"
        },
        {
          "name": "include_reference",
          "schema": "string",
          "required": false,
          "description": "If send \"true\", this will fetch variant/compatible info into result set. Default is false."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://productapi.intel.com",
  "apiDescription": "This is the documentation for PIM Micro services. In order to use this tool you need to have Basic Auth credentials and a client id. If you dont have one, please make sure to request one by sending an email to the PIM MS team: [pim.360.team@intel.com](mailto:pim.360.team@intel.com?subject=PIMServices)",
  "apiTitle": "Intel Product Catalogue Service",
  "endpoints": 4,
  "sdkMethods": 4,
  "schemas": 0,
  "parameters": 14,
  "contactEmail": "pim.360.team@intel.com",
  "difficultyScore": 7.5,
  "difficulty": "Very Easy"
}