{
  "providerName": "oceandrivers.com",
  "openApiRaw": "http://api.oceandrivers.com/static/resources.json",
  "securitySchemes": {},
  "homepage": "oceandrivers.com",
  "apiVersion": "1.0",
  "methods": [
    {
      "url": "/v1.0/compareStation/{stationName}/",
      "method": "compareStation",
      "httpMethod": "get",
      "tag": "ODWeather",
      "typeScriptTag": "odWeather",
      "description": "Get forecast and realtime information for known points<br/>None",
      "parameters": [
        {
          "name": "stationName",
          "schema": "string",
          "required": true,
          "description": "Weather station to compare, values: cnareanl|rcnp | cmsap|boyaenderrocat|areopuertopalma | EWXXX"
        }
      ],
      "responses": []
    },
    {
      "url": "/v1.0/getAemetStation/{stationName}/{period}/",
      "method": "getAemetStation",
      "httpMethod": "get",
      "tag": "ODWeather",
      "typeScriptTag": "odWeather",
      "description": "Get data from the aemet stations<br/>None",
      "parameters": [
        {
          "name": "stationName",
          "schema": "string",
          "required": true,
          "description": "station name currently: aeropuertopalma | caboblanco "
        },
        {
          "name": "period",
          "schema": "string",
          "required": true,
          "description": "Period of time to get the data. Options: lastdata lastday"
        }
      ],
      "responses": []
    },
    {
      "url": "/v1.0/getEasyWind/{easywindId}/",
      "method": "getEasywind",
      "httpMethod": "get",
      "tag": "ODWeather",
      "typeScriptTag": "odWeather",
      "description": "Get data from the easywind weather stations<br/>None",
      "parameters": [
        {
          "name": "easywindId",
          "schema": "string",
          "required": true,
          "description": "currently: 'EW013'|'EW008'"
        },
        {
          "name": "period",
          "schema": "string",
          "required": true,
          "description": "Period of time to get the data latestdata|latesthour|latestday"
        }
      ],
      "responses": []
    },
    {
      "url": "/v1.0/getEventStations/{eventId}/",
      "method": "getEventStations",
      "httpMethod": "get",
      "tag": "ODWeather",
      "typeScriptTag": "odWeather",
      "description": "Get stations in an event<br/>None",
      "parameters": [
        {
          "name": "eventId",
          "schema": "string",
          "required": true,
          "description": "currently: 'trofeoprincesasofia|palmavela'"
        }
      ],
      "responses": []
    },
    {
      "url": "/v1.0/getForecastPoints/{yatchclubid}/language/{language}",
      "method": "getForecastPoints",
      "httpMethod": "get",
      "tag": "ODWeather",
      "typeScriptTag": "odWeather",
      "description": "Get forecast points of a yatchclub<br/>None",
      "parameters": [
        {
          "name": "yatchclubid",
          "schema": "string",
          "required": true,
          "description": "base URL for the the"
        },
        {
          "name": "language",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v1.0/getForecastTimeSeries/{latitude}/{longitude}/",
      "method": "getForecastTimeSeries",
      "httpMethod": "get",
      "tag": "ODWeather",
      "typeScriptTag": "odWeather",
      "description": "Get timeseries forecast information<br/>None",
      "parameters": [
        {
          "name": "latitude",
          "schema": "number",
          "required": true,
          "description": "latitude for the forecast"
        },
        {
          "name": "longitude",
          "schema": "number",
          "required": true,
          "description": "longitude for the forecast"
        },
        {
          "name": "inittime",
          "schema": "string",
          "required": false,
          "description": "initial date for the forecast ISO string YYYY-MM-DDTHH:mm:SS.SZ"
        },
        {
          "name": "endtime",
          "schema": "string",
          "required": false,
          "description": "end date for the forecast ISO string YYYY-MM-DDTHH:mm:SS.SZ"
        },
        {
          "name": "days",
          "schema": "integer",
          "required": false,
          "description": "optional number of days in string. Will be added to init forecast date"
        },
        {
          "name": "hours",
          "schema": "integer",
          "required": false,
          "description": "optional number of hours in string. Will be added to init forecast date"
        },
        {
          "name": "weather",
          "schema": "string",
          "required": true,
          "description": " Comma separated values for the weather parameteres temperature,rain,wind_u,wind_v,gust,pressure,cloud,humidity&wave=height,direction,period"
        },
        {
          "name": "wave",
          "schema": "string",
          "required": false,
          "description": " Comma separated values for the wave parameteres height,direction,period"
        },
        {
          "name": "entryid",
          "schema": "string",
          "required": false,
          "description": "Direct file I want to extract"
        }
      ],
      "responses": []
    },
    {
      "url": "/v1.0/getForecastTimeSeriesWrf/{latitude}/{longitude}/",
      "method": "getForecastTimeSeriesWrf",
      "httpMethod": "get",
      "tag": "ODWeather",
      "typeScriptTag": "odWeather",
      "description": "Get timeseries forecast information<br/>None",
      "parameters": [
        {
          "name": "latitude",
          "schema": "number",
          "required": true,
          "description": "latitude for the forecast"
        },
        {
          "name": "longitude",
          "schema": "number",
          "required": true,
          "description": "longitude for the forecast"
        },
        {
          "name": "inittime",
          "schema": "string",
          "required": false,
          "description": "initial date for the forecast ISO string YYYY-MM-DDTHH:mm:SS.SZ"
        },
        {
          "name": "endtime",
          "schema": "string",
          "required": false,
          "description": "end date for the forecast ISO string YYYY-MM-DDTHH:mm:SS.SZ"
        },
        {
          "name": "days",
          "schema": "integer",
          "required": false,
          "description": "optional number of days in string. Will be added to init forecast date"
        },
        {
          "name": "hours",
          "schema": "integer",
          "required": false,
          "description": "optional number of hours in string. Will be added to init forecast date"
        },
        {
          "name": "weather",
          "schema": "string",
          "required": true,
          "description": " Comma separated values for the weather parameteres temperature,rain,wind_u,wind_v,gust,pressure,cloud,humidity&wave=height,direction,period"
        },
        {
          "name": "wave",
          "schema": "string",
          "required": false,
          "description": " Comma separated values for the wave parameteres height,direction,period"
        },
        {
          "name": "entryid",
          "schema": "string",
          "required": false,
          "description": "Direct file I want to extract"
        }
      ],
      "responses": []
    },
    {
      "url": "/v1.0/getSocibWeatherStation/{stationName}/{period}/",
      "method": "getSocibWeatherStation",
      "httpMethod": "get",
      "tag": "ODWeather",
      "typeScriptTag": "odWeather",
      "description": "Get data from the socib bahia de palma buoy<br/>None",
      "parameters": [
        {
          "name": "stationName",
          "schema": "string",
          "required": true,
          "description": "station name currently: boyaenderrocat | playadepalma"
        },
        {
          "name": "period",
          "schema": "string",
          "required": true,
          "description": "Period of time to get the data. Options: lastdata lasthour lastday"
        }
      ],
      "responses": []
    },
    {
      "url": "/v1.0/getWeatherDisplay/{stationName}/",
      "method": "getWeatherDisplay",
      "httpMethod": "get",
      "tag": "ODWeather",
      "typeScriptTag": "odWeather",
      "description": "Get data from the weather display software<br/>None",
      "parameters": [
        {
          "name": "stationName",
          "schema": "string",
          "required": true,
          "description": "currently: 'cnarenal'|'campastilla' | 'cncg'"
        },
        {
          "name": "period",
          "schema": "string",
          "required": true,
          "description": "Period of time to get the data latestdata|latesthour|latestday|dailylog"
        }
      ],
      "responses": []
    },
    {
      "url": "/v1.0/getWebCams/",
      "method": "getWebCams",
      "httpMethod": "get",
      "tag": "ODWeather",
      "typeScriptTag": "odWeather",
      "description": "Get forecast and realtime information for known points<br/>None",
      "parameters": [],
      "responses": []
    }
  ],
  "apiBaseUrl": "https://api.oceandrivers.com/",
  "apiDescription": "This is the api to access the ODWeather API information",
  "apiTitle": "ODWeather",
  "endpoints": 10,
  "sdkMethods": 10,
  "schemas": 0,
  "parameters": 30,
  "contactEmail": "matiasbonet@oceandrivers.com",
  "difficultyScore": 17.5,
  "difficulty": "Easy"
}