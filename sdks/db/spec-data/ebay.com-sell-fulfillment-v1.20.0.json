{
  "providerName": "ebay.com",
  "openApiRaw": "https://developer.ebay.com/api-docs/master/sell/fulfillment/openapi/3/sell_fulfillment_v1_oas3.json",
  "homepage": "ebay.com",
  "serviceName": "sell-fulfillment",
  "apiVersion": "v1.20.0",
  "methods": [
    {
      "url": "/order",
      "method": "getOrders",
      "httpMethod": "get",
      "tag": "order",
      "description": "Use this call to search for and retrieve one or more orders based on their creation date, last modification date, or fulfillment status using the <b>filter</b> parameter. You can alternatively specify a list of orders using the <b>orderIds</b> parameter. Include the optional <b>fieldGroups</b> query parameter set to <code>TAX_BREAKDOWN</code> to return a breakdown of the taxes and fees. <br><br> The returned <b>Order</b> objects contain information you can use to create and process fulfillments, including: <ul> <li>Information about the buyer and seller</li> <li>Information about the order's line items</li> <li>The plans for packaging, addressing and shipping the order</li> <li>The status of payment, packaging, addressing, and shipping the order</li> <li>A summary of monetary amounts specific to the order such as pricing, payments, and shipping costs</li> <li>A summary of applied taxes and fees, and optionally a breakdown of each </li></ul> <br><br> <span class=\"tablenote\"><strong>Important:</strong> In this call, the <b>cancelStatus.cancelRequests</b> array is returned but is always empty. Use the <b>getOrder</b> call instead, which returns this array fully populated with information about any cancellation requests.</span>",
      "parameters": [
        {
          "name": "fieldGroups",
          "schema": "string",
          "required": false,
          "description": "The response type associated with the order. The only presently supported value is <code>TAX_BREAKDOWN</code>. This type returns a breakdown of tax and fee values associated with the order."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "One or more comma-separated criteria for narrowing down the collection of orders returned by this call. These criteria correspond to specific fields in the response payload. Multiple filter criteria combine to further restrict the results. <br><br><span class=\"tablenote\"><strong>Note:</strong> <b>getOrders</b> can return orders up to two years old. Do not set the <code>creationdate</code> filter to a date beyond two years in the past.</span><br><span class=\"tablenote\"><strong>Note:</strong> If the <b>orderIds</b> parameter is included in the request, the <b>filter</b> parameter will be ignored.</span><br>The available criteria are as follows: <dl> <dt><code><b>creationdate</b></code></dt> <dd>The time period during which qualifying orders were created (the <b>orders.creationDate</b> field). In the URI, this is expressed as a starting timestamp, with or without an ending timestamp (in brackets). The timestamps are in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock.For example: <ul> <li><code>creationdate:[2016-02-21T08:25:43.511Z..]</code> identifies orders created on or after the given timestamp.</li> <li><code>creationdate:[2016-02-21T08:25:43.511Z..2016-04-21T08:25:43.511Z]</code> identifies orders created between the given timestamps, inclusive.</li> </ul> </dd> <dt><code><b>lastmodifieddate</b></code></dt> <dd>The time period during which qualifying orders were last modified (the <b>orders.modifiedDate</b> field).  In the URI, this is expressed as a starting timestamp, with or without an ending timestamp (in brackets). The timestamps are in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock.For example: <ul> <li><code>lastmodifieddate:[2016-05-15T08:25:43.511Z..]</code> identifies orders modified on or after the given timestamp.</li> <li><code>lastmodifieddate:[2016-05-15T08:25:43.511Z..2016-05-31T08:25:43.511Z]</code> identifies orders modified between the given timestamps, inclusive.</li> </ul> <span class=\"tablenote\"><strong>Note:</strong> If <b>creationdate</b> and <b>lastmodifieddate</b> are both included, only <b>creationdate</b> is used.</span> <br><br></dd> <dt><code><b>orderfulfillmentstatus</b></code></dt> <dd>The degree to which qualifying orders have been shipped (the <b>orders.orderFulfillmentStatus</b> field). In the URI, this is expressed as one of the following value combinations: <ul> <li><code>orderfulfillmentstatus:{NOT_STARTED|IN_PROGRESS}</code> specifies orders for which no shipping fulfillments have been started, plus orders for which at least one shipping fulfillment has been started but not completed.</li> <li><code>orderfulfillmentstatus:{FULFILLED|IN_PROGRESS}</code> specifies orders for which all shipping fulfillments have been completed, plus orders for which at least one shipping fulfillment has been started but not completed.</li> </ul> <span class=\"tablenote\"><strong>Note:</strong> The values <code>NOT_STARTED</code>, <code>IN_PROGRESS</code>, and <code>FULFILLED</code> can be used in various combinations, but only the combinations shown here are currently supported.</span> </dd> </dl> Here is an example of a <b>getOrders</b> call using all of these filters: <br><br> <code>GET https://api.ebay.com/sell/v1/order?<br>filter=<b>creationdate</b>:%5B2016-03-21T08:25:43.511Z..2016-04-21T08:25:43.511Z%5D,<br><b>lastmodifieddate</b>:%5B2016-05-15T08:25:43.511Z..%5D,<br><b>orderfulfillmentstatus</b>:%7BNOT_STARTED%7CIN_PROGRESS%7D</code> <br><br> <span class=\"tablenote\"><strong>Note:</strong> This call requires that certain special characters in the URI query string be percent-encoded: <br> &nbsp;&nbsp;&nbsp;&nbsp;<code>[</code> = <code>%5B</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>]</code> = <code>%5D</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>{</code> = <code>%7B</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>|</code> = <code>%7C</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>}</code> = <code>%7D</code> <br> This query filter example uses these codes.</span> For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/sell/fulfillment/types/api:FilterField"
        },
        {
          "name": "limit",
          "schema": "string",
          "required": false,
          "description": "The number of orders to return per page of the result set. Use this parameter in conjunction with the <b>offset</b> parameter to control the pagination of the output. <br><br>For example, if <b>offset</b> is set to <code>10</code> and <b>limit</b> is set to <code>10</code>, the call retrieves orders 11 thru 20 from the result set. <br><br> If a limit is not set, the <b>limit</b> defaults to 50 and returns up to 50 orders. If a requested limit is more than 200, the call fails and returns an error.<br ><br> <span class=\"tablenote\"><strong>Note:</strong> This feature employs a zero-based list, where the first item in the list has an offset of <code>0</code>. If the <b>orderIds</b> parameter is included in the request, this parameter will be ignored.</span> <br><br> <b>Maximum:</b> <code>200</code> <br> <b>Default:</b> <code>50</code>"
        },
        {
          "name": "offset",
          "schema": "string",
          "required": false,
          "description": "Specifies the number of orders to skip in the result set before returning the first order in the paginated response.  <p>Combine <b>offset</b> with the <b>limit</b> query parameter to control the items returned in the response. For example, if you supply an <b>offset</b> of <code>0</code> and a <b>limit</b> of <code>10</code>, the first page of the response contains the first 10 items from the complete list of items retrieved by the call. If <b>offset</b> is <code>10</code> and <b>limit</b> is <code>20</code>, the first page of the response contains items 11-30 from the complete result set.</p> <p><b>Default:</b> 0</p>"
        },
        {
          "name": "orderIds",
          "schema": "string",
          "required": false,
          "description": "A comma-separated list of the unique identifiers of the orders to retrieve (maximum 50). If one or more order ID values are specified through the <b>orderIds</b> query parameter, all other query parameters will be ignored.<br><br><span class=\"tablenote\"><strong>Note:</strong> <b>getOrders</b> can return orders up to two years old. Do not provide the orderId for an order created more than two years in the past.</span>"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This type contains the specifications for the collection of orders that match the search or filter criteria of a <b>getOrders</b> call. The collection is grouped into a result set, and based on the query parameters that are set (including the <strong>limit</strong> and <strong>offset</strong> parameters), the result set may included multiple pages, but only one page of the result set can be viewed at a time."
        }
      ]
    },
    {
      "url": "/order/{orderId}",
      "method": "getOrder",
      "httpMethod": "get",
      "tag": "order",
      "description": "Use this call to retrieve the contents of an order based on its unique identifier, <i>orderId</i>. This value was returned in the <b> getOrders</b> call's <b>orders.orderId</b> field when you searched for orders by creation date, modification date, or fulfillment status. Include the optional <b>fieldGroups</b> query parameter set to <code>TAX_BREAKDOWN</code> to return a breakdown of the taxes and fees. <br><br> The returned <b>Order</b> object contains information you can use to create and process fulfillments, including: <ul> <li>Information about the buyer and seller</li> <li>Information about the order's line items</li> <li> The plans for packaging, addressing and shipping the order</li> <li>The status of payment, packaging, addressing, and shipping the order</li> <li>A summary of monetary amounts specific to the order such as pricing, payments, and shipping costs</li> <li>A summary of applied taxes and fees, and optionally a breakdown of each </li></ul>",
      "parameters": [
        {
          "name": "fieldGroups",
          "schema": "string",
          "required": false,
          "description": "The response type associated with the order. The only presently supported value is <code>TAX_BREAKDOWN</code>. This type returns a breakdown of tax and fee values associated with the order."
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the order. Order ID values are shown in My eBay/Seller Hub, and are also returned by the <b>getOrders</b> method in the <b>orders.orderId</b> field.<span class=\"tablenote\"><strong>Note:</strong> <b>getOrders</b> can return orders up to two years old. Do not provide the orderId for an order created more than two years in the past.</span>"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This type contains the details of an order, including information about the buyer, order history, shipping fulfillments, line items, costs, payments, and order fulfillment status."
        }
      ]
    },
    {
      "url": "/order/{orderId}/shipping_fulfillment",
      "method": "getShippingFulfillments",
      "httpMethod": "get",
      "tag": "shipping_fulfillment",
      "description": "Use this call to retrieve the contents of all fulfillments currently defined for a specified order based on the order's unique identifier, <b>orderId</b>. This value is returned in the <b>getOrders</b> call's <b>members.orderId</b> field when you search for orders by creation date or shipment status.",
      "parameters": [
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the order. Order ID values are shown in My eBay/Seller Hub, and are also returned by the <b>getOrders</b> method in the <b>orders.orderId</b> field."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This type contains the specifications for the entire collection of shipping fulfillments that are associated with the order specified by a <b>getShippingFulfillments</b> call. The <b>fulfillments</b> container returns an array of all the fulfillments in the collection."
        }
      ]
    },
    {
      "url": "/order/{orderId}/shipping_fulfillment",
      "method": "createShippingFulfillment",
      "httpMethod": "post",
      "tag": "shipping_fulfillment",
      "description": "When you group an order's line items into one or more packages, each package requires a corresponding plan for handling, addressing, and shipping; this is a <i>shipping fulfillment</i>. For each package, execute this call once to generate a shipping fulfillment associated with that package. <br><br> <span class=\"tablenote\"><strong>Note:</strong> A single line item in an order can consist of multiple units of a purchased item, and one unit can consist of multiple parts or components. Although these components might be provided by the manufacturer in separate packaging, the seller must include all components of a given line item in the same package.</span> <br><br>Before using this call for a given package, you must determine which line items are in the package. If the package has been shipped, you should provide the date of shipment in the request. If not provided, it will default to the current date and time.",
      "parameters": [
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the order. Order ID values are shown in My eBay/Seller Hub, and are also returned by the <b>getOrders</b> method in the <b>orders.orderId</b> field."
        },
        {
          "name": "lineItems",
          "schema": "array",
          "description": ""
        },
        {
          "name": "shippedDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "shippingCarrierCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "trackingNumber",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/order/{orderId}/shipping_fulfillment/{fulfillmentId}",
      "method": "getShippingFulfillment",
      "httpMethod": "get",
      "tag": "shipping_fulfillment",
      "description": "Use this call to retrieve the contents of a fulfillment based on its unique identifier, <b>fulfillmentId</b> (combined with the associated order's <b>orderId</b>). The <b>fulfillmentId</b> value was originally generated by the <b>createShippingFulfillment</b> call, and is returned by the <b>getShippingFulfillments</b> call in the <b>members.fulfillmentId</b> field.",
      "parameters": [
        {
          "name": "fulfillmentId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the fulfillment. This eBay-generated value was created by the <b>Create Shipping Fulfillment</b> call, and returned by the <b>getShippingFulfillments</b> call in the <b>fulfillments.fulfillmentId</b> field; for example, <code>9405509699937003457459</code>."
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the order. Order ID values are shown in My eBay/Seller Hub, and are also returned by the <b>getOrders</b> method in the <b>orders.orderId</b> field."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This type contains the complete details of an existing fulfillment for an order."
        }
      ]
    },
    {
      "url": "/order/{order_id}/issue_refund",
      "method": "issueRefund",
      "httpMethod": "post",
      "tag": "order",
      "description": "Issue Refund",
      "parameters": [
        {
          "name": "order_id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the order. Order IDs are returned in the <b>getOrders</b> method (and <b>GetOrders</b> call of Trading API). The <b>issueRefund</b> method supports the legacy API Order IDs and REST API order IDs."
        },
        {
          "name": "comment",
          "schema": "string",
          "description": ""
        },
        {
          "name": "orderLevelRefundAmount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "reasonForRefund",
          "schema": "string",
          "description": ""
        },
        {
          "name": "refundItems",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This is the base type of the <b>issueRefund</b> response payload. As long as the <b>issueRefund</b> method does not trigger an error, a response payload will be returned."
        }
      ]
    },
    {
      "url": "/payment_dispute/{payment_dispute_id}",
      "method": "getPaymentDispute",
      "httpMethod": "get",
      "tag": "payment_dispute",
      "description": "Get Payment Dispute Details",
      "parameters": [
        {
          "name": "payment_dispute_id",
          "schema": "string",
          "required": true,
          "description": "This is the unique identifier of the payment dispute. This path parameter must be passed in at the end of the call URI to identify the payment dispute to retrieve. This identifier is automatically created by eBay once the payment dispute comes into the eBay system. The unique identifier for payment disputes is returned in the <strong>paymentDisputeId</strong> field in the <strong>getPaymentDisputeSummaries</strong> response."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This type is used by the base response of the <strong>getPaymentDispute</strong> method. The <strong>getPaymentDispute</strong> method retrieves detailed information on a specific payment dispute."
        }
      ]
    },
    {
      "url": "/payment_dispute/{payment_dispute_id}/accept",
      "method": "acceptPaymentDispute",
      "httpMethod": "post",
      "tag": "payment_dispute",
      "description": "Accept Payment Dispute",
      "parameters": [
        {
          "name": "payment_dispute_id",
          "schema": "string",
          "required": true,
          "description": "This is the unique identifier of the payment dispute. This path parameter must be passed into the call URI to identify the payment dispute for which the user plans to accept. This identifier is automatically created by eBay once the payment dispute comes into the eBay system. The unique identifier for payment disputes is returned in the <strong>paymentDisputeId</strong> field in the <strong>getPaymentDisputeSummaries</strong> response.<br><br>This path parameter is required, and the actual identifier value is passed in right after the <strong>payment_dispute</strong> resource. See the Resource URI above."
        },
        {
          "name": "returnAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "revision",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/payment_dispute/{payment_dispute_id}/activity",
      "method": "getActivities",
      "httpMethod": "get",
      "tag": "payment_dispute",
      "description": "Get Payment Dispute Activity",
      "parameters": [
        {
          "name": "payment_dispute_id",
          "schema": "string",
          "required": true,
          "description": "This is the unique identifier of the payment dispute. This path parameter must be passed in at the end of the call URI to identify the payment dispute for which the user wishes to see all activity. This identifier is automatically created by eBay once the payment dispute comes into the eBay system. The unique identifier for payment disputes is returned in the <strong>paymentDisputeId</strong> field in the <strong>getPaymentDisputeSummaries</strong> response.<br><br>This path parameter is required, and the actual identifier value is passed in right after the <strong>payment_dispute</strong> resource. See the Resource URI above."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This type is used by the base response of the <strong>getActivities</strong> method, and includes a log of all activities of a payment dispute, from creation to resolution."
        }
      ]
    },
    {
      "url": "/payment_dispute/{payment_dispute_id}/add_evidence",
      "method": "addEvidence",
      "httpMethod": "post",
      "tag": "payment_dispute",
      "description": "Add an Evidence File",
      "parameters": [
        {
          "name": "payment_dispute_id",
          "schema": "string",
          "required": true,
          "description": "This is the unique identifier of the payment dispute. This path parameter must be passed into the call URI to identify the payment dispute for which the user plans to add evidence for a contested payment dispute. This identifier is automatically created by eBay once the payment dispute comes into the eBay system. The unique identifier for payment disputes is returned in the <strong>paymentDisputeId</strong> field in the <strong>getPaymentDisputeSummaries</strong> response.<br><br>This path parameter is required, and the actual identifier value is passed in right after the <strong>payment_dispute</strong> resource. See the Resource URI above."
        },
        {
          "name": "evidenceType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "files",
          "schema": "array",
          "description": ""
        },
        {
          "name": "lineItems",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This type is used by the response payload of the <strong>addEvidence</strong> method. Its only field is an unique identifier of an evidence set."
        }
      ]
    },
    {
      "url": "/payment_dispute/{payment_dispute_id}/contest",
      "method": "contestPaymentDispute",
      "httpMethod": "post",
      "tag": "payment_dispute",
      "description": "Contest Payment Dispute",
      "parameters": [
        {
          "name": "payment_dispute_id",
          "schema": "string",
          "required": true,
          "description": "This is the unique identifier of the payment dispute. This path parameter must be passed into the call URI to identify the payment dispute for which the user plans to contest. This identifier is automatically created by eBay once the payment dispute comes into the eBay system. The unique identifier for payment disputes is returned in the <strong>paymentDisputeId</strong> field in the <strong>getPaymentDisputeSummaries</strong> response.<br><br>This path parameter is required, and the actual identifier value is passed in right after the <strong>payment_dispute</strong> resource. See the Resource URI above."
        },
        {
          "name": "note",
          "schema": "string",
          "description": ""
        },
        {
          "name": "returnAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "revision",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/payment_dispute/{payment_dispute_id}/fetch_evidence_content",
      "method": "fetchEvidenceContent",
      "httpMethod": "get",
      "tag": "payment_dispute",
      "description": "Get Payment Dispute Evidence File",
      "parameters": [
        {
          "name": "payment_dispute_id",
          "schema": "string",
          "required": true,
          "description": "The identifier of the payment dispute. The identifier of each payment dispute is returned in the <strong>getPaymentDisputeSummaries</strong> response. This identifier is passed in as a path parameter at the end of the call URI."
        },
        {
          "name": "evidence_id",
          "schema": "string",
          "required": true,
          "description": "The identifier of the evidential file set. The identifier of an evidential file set for a payment dispute is returned under the <strong>evidence</strong> array in the <strong>getPaymentDispute</strong> response.<br><br>Below is an example of the syntax to use for this query parameter:<br><br><code>evidence_id=12345678</code>"
        },
        {
          "name": "file_id",
          "schema": "string",
          "required": true,
          "description": "The identifier of an evidential file. This file must belong to the evidential file set identified through the <strong>evidence_id</strong> query parameter. The identifier of each evidential file is returned under the <strong>evidence.files</strong> array in the <strong>getPaymentDispute</strong> response. <br><br>Below is an example of the syntax to use for this query parameter:<br><br><code>file_id=12345678</code> "
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/payment_dispute/{payment_dispute_id}/update_evidence",
      "method": "updateEvidence",
      "httpMethod": "post",
      "tag": "payment_dispute",
      "description": "Update evidence",
      "parameters": [
        {
          "name": "payment_dispute_id",
          "schema": "string",
          "required": true,
          "description": "This is the unique identifier of the payment dispute. This path parameter must be passed into the call URI to identify the payment dispute for which the user plans to update the evidence set for a contested payment dispute. This identifier is automatically created by eBay once the payment dispute comes into the eBay system. The unique identifier for payment disputes is returned in the <strong>paymentDisputeId</strong> field in the <strong>getPaymentDisputeSummaries</strong> response.<br><br>This path parameter is required, and the actual identifier value is passed in right after the <strong>payment_dispute</strong> resource. See the Resource URI above."
        },
        {
          "name": "evidenceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "evidenceType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "files",
          "schema": "array",
          "description": ""
        },
        {
          "name": "lineItems",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/payment_dispute/{payment_dispute_id}/upload_evidence_file",
      "method": "uploadEvidenceFile",
      "httpMethod": "post",
      "tag": "payment_dispute",
      "description": "Upload an Evidence File",
      "parameters": [
        {
          "name": "payment_dispute_id",
          "schema": "string",
          "required": true,
          "description": "This is the unique identifier of the payment dispute. This path parameter must be passed into the call URI to identify the payment dispute for which the user plans to upload an evidence file. This identifier is automatically created by eBay after the payment dispute comes into the eBay system. The unique identifier for payment disputes is returned in the <strong>paymentDisputeId</strong> field in the <strong>getPaymentDisputeSummaries</strong> response.<br><br>This path parameter is required, and the actual identifier value is passed in right after the <strong>payment_dispute</strong> resource. See the Resource URI above."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This type is used to store the unique identifier of an evidence file. Evidence files are used by seller to contest a payment dispute."
        }
      ]
    },
    {
      "url": "/payment_dispute_summary",
      "method": "getPaymentDisputeSummaries",
      "httpMethod": "get",
      "tag": "payment_dispute",
      "description": "Search Payment Dispute by Filters",
      "parameters": [
        {
          "name": "order_id",
          "schema": "string",
          "required": false,
          "description": "This filter is used if the seller wishes to retrieve one or more payment disputes filed against a specific order. It is possible that there can be more than one dispute filed against an order if the order has multiple line items. If this filter is used, any other filters are ignored."
        },
        {
          "name": "buyer_username",
          "schema": "string",
          "required": false,
          "description": "This filter is used if the seller wishes to retrieve one or more payment disputes opened by a specific seller. The string that is passed in to this query parameter is the eBay user ID of the buyer."
        },
        {
          "name": "open_date_from",
          "schema": "string",
          "required": false,
          "description": "The <b>open_date_from</b> and/or <b>open_date_to</b> date filters are used if the seller wishes to retrieve payment disputes opened within a specific date range. A maximum date range that may be set with the <b>open_date_from</b> and/or <b>open_date_to</b> filters is 90 days. These date filters use the ISO-8601 24-hour date and time format, and time zone used is Universal Coordinated Time (UTC), also known as Greenwich Mean Time (GMT), or Zulu.<br><br>The <b>open_date_from</b> field sets the beginning date of the date range, and can be set as far back as 18 months from the present time. If a <b>open_date_from</b> field is used, but a <b>open_date_to</b> field is not used, the <b>open_date_to</b> value will default to 90 days after the date specified in the <b>open_date_from</b> field, or to the present time if less than 90 days in the past.<br><br>The ISO-8601 format looks like this: <em>yyyy-MM-ddThh:mm.ss.sssZ</em>. An example would be <code>2019-08-04T19:09:02.768Z</code>."
        },
        {
          "name": "open_date_to",
          "schema": "string",
          "required": false,
          "description": "The <b>open_date_from</b> and/or <b>open_date_to</b> date filters are used if the seller wishes to retrieve payment disputes opened within a specific date range. A maximum date range that may be set with the <b>open_date_from</b> and/or <b>open_date_to</b> filters is 90 days. These date filters use the ISO-8601 24-hour date and time format, and the time zone used is Universal Coordinated Time (UTC), also known as Greenwich Mean Time (GMT), or Zulu.<br><br>The <b>open_date_to</b> field sets the ending date of the date range, and can be set up to 90 days from the date set in the <b>open_date_from</b> field. <br><br>The ISO-8601 format looks like this: <em>yyyy-MM-ddThh:mm.ss.sssZ</em>. An example would be <code>2019-08-04T19:09:02.768Z</code>."
        },
        {
          "name": "payment_dispute_status",
          "schema": "string",
          "required": false,
          "description": "This filter is used if the seller wishes to only retrieve payment disputes in a specific state. More than one value can be specified. If no <b>payment_dispute_status</b> filter is used, payment disputes in all states are returned in the response. See <strong>DisputeStateEnum</strong> type for supported values."
        },
        {
          "name": "limit",
          "schema": "string",
          "required": false,
          "description": "The value passed in this query parameter sets the maximum number of payment disputes to return per page of data. The value passed in this field should be an integer from 1 to 200. If this query parameter is not set, up to 200 records will be returned on each page of results.<br><br><b>Min</b>: 1; <b>Max</b>: 200; <b>Default</b>: 200"
        },
        {
          "name": "offset",
          "schema": "string",
          "required": false,
          "description": "This field is used to specify the number of records to skip in the result set before returning the first payment dispute in the paginated response. A zero-based index is used, so if you set the <b>offset</b> value to <code>0</code> (default value), the first payment dispute in the result set appears at the top of the response. <br><br>Combine <b>offset</b> with the <b>limit</b> parameter to control the payment disputes returned in the response. For example, if you supply an <b>offset</b> value of <code>0</code> and a <b>limit</b> value of <code>10</code>, the response will contain the first 10 payment disputes from the result set that matches the input criteria. If you supply an <b>offset</b> value of <code>10</code> and a <b>limit</b> value of <code>20</code>, the response will contain payment disputes 11-30 from the result set that matches the input criteria.<br><br><b>Min</b>: 0; <b>Max</b>: total number of payment disputes - 1; <b>Default</b>: 0"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This type defines the base response payload of the <strong>getPaymentDisputeSummaries</strong> method. Each payment dispute that matches the input criteria is returned under the <strong>paymentDisputeSummaries</strong> array."
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.ebay.com{basePath}",
  "apiDescription": "Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.",
  "apiTitle": "Fulfillment API",
  "endpoints": 14,
  "sdkMethods": 24,
  "schemas": 73,
  "parameters": 49,
  "difficultyScore": 72.75,
  "difficulty": "Easy"
}