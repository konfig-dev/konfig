{
  "providerName": "pandascore.co",
  "openApiRaw": "blob:https://developers.pandascore.co/blobId",
  "securitySchemes": {
    "BearerToken": {
      "scheme": "bearer",
      "type": "http"
    },
    "QueryToken": {
      "in": "query",
      "name": "token",
      "type": "apiKey"
    }
  },
  "categories": [
    "entertainment"
  ],
  "homepage": "pandascore.co",
  "apiVersion": "2.23.1",
  "methods": [
    {
      "url": "/additions",
      "method": "getAdditions",
      "httpMethod": "get",
      "tag": "Incidents",
      "typeScriptTag": "incidents",
      "description": "List additions",
      "parameters": [
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        },
        {
          "name": "type",
          "schema": "array",
          "required": false,
          "description": "Filter by result type(s)"
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": "Filter out older results"
        },
        {
          "name": "videogame",
          "schema": "array",
          "required": false,
          "description": "Filter by videogame(s)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/changes",
      "method": "getChanges",
      "httpMethod": "get",
      "tag": "Incidents",
      "typeScriptTag": "incidents",
      "description": "List changes",
      "parameters": [
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        },
        {
          "name": "type",
          "schema": "array",
          "required": false,
          "description": "Filter by result type(s)"
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": "Filter out older results"
        },
        {
          "name": "videogame",
          "schema": "array",
          "required": false,
          "description": "Filter by videogame(s)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/deletions",
      "method": "getDeletions",
      "httpMethod": "get",
      "tag": "Incidents",
      "typeScriptTag": "incidents",
      "description": "List deletions",
      "parameters": [
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        },
        {
          "name": "type",
          "schema": "array",
          "required": false,
          "description": "Filter by result type(s)"
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": "Filter out older results"
        },
        {
          "name": "videogame",
          "schema": "array",
          "required": false,
          "description": "Filter by videogame(s)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/incidents",
      "method": "getIncidents",
      "httpMethod": "get",
      "tag": "Incidents",
      "typeScriptTag": "incidents",
      "description": "List changes, additions and deletions",
      "parameters": [
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        },
        {
          "name": "type",
          "schema": "array",
          "required": false,
          "description": "Filter by result type(s)"
        },
        {
          "name": "since",
          "schema": "string",
          "required": false,
          "description": "Filter out older results"
        },
        {
          "name": "videogame",
          "schema": "array",
          "required": false,
          "description": "Filter by videogame(s)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/leagues",
      "method": "getLeagues",
      "httpMethod": "get",
      "tag": "Leagues",
      "typeScriptTag": "leagues",
      "description": "List leagues",
      "parameters": [
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/leagues/{league_id_or_slug}",
      "method": "getLeaguesLeagueIdOrSlug",
      "httpMethod": "get",
      "tag": "Leagues",
      "typeScriptTag": "leagues",
      "description": "Get a league",
      "parameters": [
        {
          "name": "leagueIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A league ID or slug"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/leagues/{league_id_or_slug}/matches",
      "method": "getLeaguesLeagueIdOrSlugMatches",
      "httpMethod": "get",
      "tag": "Leagues",
      "typeScriptTag": "leagues",
      "description": "Get matches for a league",
      "parameters": [
        {
          "name": "leagueIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A league ID or slug"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/leagues/{league_id_or_slug}/matches/past",
      "method": "getLeaguesLeagueIdOrSlugMatchesPast",
      "httpMethod": "get",
      "tag": "Leagues",
      "typeScriptTag": "leagues",
      "description": "Get past matches for league",
      "parameters": [
        {
          "name": "leagueIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A league ID or slug"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/leagues/{league_id_or_slug}/matches/running",
      "method": "getLeaguesLeagueIdOrSlugMatchesRunning",
      "httpMethod": "get",
      "tag": "Leagues",
      "typeScriptTag": "leagues",
      "description": "Get running matches for league",
      "parameters": [
        {
          "name": "leagueIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A league ID or slug"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/leagues/{league_id_or_slug}/matches/upcoming",
      "method": "getLeaguesLeagueIdOrSlugMatchesUpcoming",
      "httpMethod": "get",
      "tag": "Leagues",
      "typeScriptTag": "leagues",
      "description": "Get upcoming matches for league",
      "parameters": [
        {
          "name": "leagueIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A league ID or slug"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/leagues/{league_id_or_slug}/series",
      "method": "getLeaguesLeagueIdOrSlugSeries",
      "httpMethod": "get",
      "tag": "Leagues",
      "typeScriptTag": "leagues",
      "description": "List series of a league",
      "parameters": [
        {
          "name": "leagueIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A league ID or slug"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/leagues/{league_id_or_slug}/tournaments",
      "method": "getLeaguesLeagueIdOrSlugTournaments",
      "httpMethod": "get",
      "tag": "Leagues",
      "typeScriptTag": "leagues",
      "description": "Get tournaments for a league",
      "parameters": [
        {
          "name": "leagueIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A league ID or slug"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/lives",
      "method": "getLives",
      "httpMethod": "get",
      "tag": "Matches",
      "typeScriptTag": "matches",
      "description": "List lives matches",
      "parameters": [
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/matches",
      "method": "getMatches",
      "httpMethod": "get",
      "tag": "Matches",
      "typeScriptTag": "matches",
      "description": "List matches",
      "parameters": [
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/matches/past",
      "method": "getMatchesPast",
      "httpMethod": "get",
      "tag": "Matches",
      "typeScriptTag": "matches",
      "description": "Get past matches",
      "parameters": [
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/matches/running",
      "method": "getMatchesRunning",
      "httpMethod": "get",
      "tag": "Matches",
      "typeScriptTag": "matches",
      "description": "Get running matches",
      "parameters": [
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/matches/upcoming",
      "method": "getMatchesUpcoming",
      "httpMethod": "get",
      "tag": "Matches",
      "typeScriptTag": "matches",
      "description": "Get upcoming matches",
      "parameters": [
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/matches/{match_id_or_slug}",
      "method": "getMatchesMatchIdOrSlug",
      "httpMethod": "get",
      "tag": "Matches",
      "typeScriptTag": "matches",
      "description": "Get a match",
      "parameters": [
        {
          "name": "matchIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A match ID or slug"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/matches/{match_id_or_slug}/opponents",
      "method": "getMatchesMatchIdOrSlugOpponents",
      "httpMethod": "get",
      "tag": "Matches",
      "typeScriptTag": "matches",
      "description": "Get match's opponents",
      "parameters": [
        {
          "name": "matchIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A match ID or slug"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/players",
      "method": "getPlayers",
      "httpMethod": "get",
      "tag": "Players",
      "typeScriptTag": "players",
      "description": "List players",
      "parameters": [
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/players/{player_id_or_slug}",
      "method": "getPlayersPlayerIdOrSlug",
      "httpMethod": "get",
      "tag": "Players",
      "typeScriptTag": "players",
      "description": "Get a player",
      "parameters": [
        {
          "name": "playerIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A player ID or slug"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/players/{player_id_or_slug}/matches",
      "method": "getPlayersPlayerIdOrSlugMatches",
      "httpMethod": "get",
      "tag": "Players",
      "typeScriptTag": "players",
      "description": "Get matches for a player",
      "parameters": [
        {
          "name": "playerIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A player ID or slug"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/series",
      "method": "getSeries",
      "httpMethod": "get",
      "tag": "Series",
      "typeScriptTag": "series",
      "description": "List series",
      "parameters": [
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/series/past",
      "method": "getSeriesPast",
      "httpMethod": "get",
      "tag": "Series",
      "typeScriptTag": "series",
      "description": "Get past series",
      "parameters": [
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/series/running",
      "method": "getSeriesRunning",
      "httpMethod": "get",
      "tag": "Series",
      "typeScriptTag": "series",
      "description": "Get running series",
      "parameters": [
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/series/upcoming",
      "method": "getSeriesUpcoming",
      "httpMethod": "get",
      "tag": "Series",
      "typeScriptTag": "series",
      "description": "Get upcoming series",
      "parameters": [
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/series/{serie_id_or_slug}",
      "method": "getSeriesSerieIdOrSlug",
      "httpMethod": "get",
      "tag": "Series",
      "typeScriptTag": "series",
      "description": "Get a serie",
      "parameters": [
        {
          "name": "serieIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A serie ID or slug"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A serie, an occurrence of a league event"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/series/{serie_id_or_slug}/matches",
      "method": "getSeriesSerieIdOrSlugMatches",
      "httpMethod": "get",
      "tag": "Series",
      "typeScriptTag": "series",
      "description": "Get matches for a serie",
      "parameters": [
        {
          "name": "serieIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A serie ID or slug"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/series/{serie_id_or_slug}/matches/past",
      "method": "getSeriesSerieIdOrSlugMatchesPast",
      "httpMethod": "get",
      "tag": "Series",
      "typeScriptTag": "series",
      "description": "Get past matches for serie",
      "parameters": [
        {
          "name": "serieIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A serie ID or slug"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/series/{serie_id_or_slug}/matches/running",
      "method": "getSeriesSerieIdOrSlugMatchesRunning",
      "httpMethod": "get",
      "tag": "Series",
      "typeScriptTag": "series",
      "description": "Get running matches for serie",
      "parameters": [
        {
          "name": "serieIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A serie ID or slug"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/series/{serie_id_or_slug}/matches/upcoming",
      "method": "getSeriesSerieIdOrSlugMatchesUpcoming",
      "httpMethod": "get",
      "tag": "Series",
      "typeScriptTag": "series",
      "description": "Get upcoming matches for serie",
      "parameters": [
        {
          "name": "serieIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A serie ID or slug"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/series/{serie_id_or_slug}/players",
      "method": "getSeriesSerieIdOrSlugPlayers",
      "httpMethod": "get",
      "tag": "Series",
      "typeScriptTag": "series",
      "description": "Get players for a serie",
      "parameters": [
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        },
        {
          "name": "serieIdOrSlug",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/series/{serie_id_or_slug}/tournaments",
      "method": "getSeriesSerieIdOrSlugTournaments",
      "httpMethod": "get",
      "tag": "Series",
      "typeScriptTag": "series",
      "description": "Get tournaments for a serie",
      "parameters": [
        {
          "name": "serieIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A serie ID or slug"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/teams",
      "method": "getTeams",
      "httpMethod": "get",
      "tag": "Teams",
      "typeScriptTag": "teams",
      "description": "List teams",
      "parameters": [
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of teams"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/teams/{team_id_or_slug}",
      "method": "getTeamsTeamIdOrSlug",
      "httpMethod": "get",
      "tag": "Teams",
      "typeScriptTag": "teams",
      "description": "Get a team",
      "parameters": [
        {
          "name": "teamIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A team ID or slug"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/teams/{team_id_or_slug}/leagues",
      "method": "getTeamsTeamIdOrSlugLeagues",
      "httpMethod": "get",
      "tag": "Teams",
      "typeScriptTag": "teams",
      "description": "Get leagues for a team",
      "parameters": [
        {
          "name": "teamIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A team ID or slug"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/teams/{team_id_or_slug}/matches",
      "method": "getTeamsTeamIdOrSlugMatches",
      "httpMethod": "get",
      "tag": "Teams",
      "typeScriptTag": "teams",
      "description": "Get matches for team",
      "parameters": [
        {
          "name": "teamIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A team ID or slug"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/teams/{team_id_or_slug}/series",
      "method": "getTeamsTeamIdOrSlugSeries",
      "httpMethod": "get",
      "tag": "Teams",
      "typeScriptTag": "teams",
      "description": "Get series for a team",
      "parameters": [
        {
          "name": "teamIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A team ID or slug"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/teams/{team_id_or_slug}/tournaments",
      "method": "getTeamsTeamIdOrSlugTournaments",
      "httpMethod": "get",
      "tag": "Teams",
      "typeScriptTag": "teams",
      "description": "Get tournaments for a team",
      "parameters": [
        {
          "name": "teamIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A team ID or slug"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/tournaments",
      "method": "getTournaments",
      "httpMethod": "get",
      "tag": "Tournaments",
      "typeScriptTag": "tournaments",
      "description": "List tournaments",
      "parameters": [
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/tournaments/past",
      "method": "getTournamentsPast",
      "httpMethod": "get",
      "tag": "Tournaments",
      "typeScriptTag": "tournaments",
      "description": "Get past tournaments",
      "parameters": [
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/tournaments/running",
      "method": "getTournamentsRunning",
      "httpMethod": "get",
      "tag": "Tournaments",
      "typeScriptTag": "tournaments",
      "description": "Get running tournaments",
      "parameters": [
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/tournaments/upcoming",
      "method": "getTournamentsUpcoming",
      "httpMethod": "get",
      "tag": "Tournaments",
      "typeScriptTag": "tournaments",
      "description": "Get upcoming tournaments",
      "parameters": [
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/tournaments/{tournament_id_or_slug}",
      "method": "getTournamentsTournamentIdOrSlug",
      "httpMethod": "get",
      "tag": "Tournaments",
      "typeScriptTag": "tournaments",
      "description": "Get a tournament",
      "parameters": [
        {
          "name": "tournamentIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A tournament ID or slug"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/tournaments/{tournament_id_or_slug}/brackets",
      "method": "getTournamentsTournamentIdOrSlugBrackets",
      "httpMethod": "get",
      "tag": "Tournaments",
      "typeScriptTag": "tournaments",
      "description": "Get a tournament's brackets",
      "parameters": [
        {
          "name": "tournamentIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A tournament ID or slug"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/tournaments/{tournament_id_or_slug}/matches",
      "method": "getTournamentsTournamentIdOrSlugMatches",
      "httpMethod": "get",
      "tag": "Tournaments",
      "typeScriptTag": "tournaments",
      "description": "Get matches for tournament",
      "parameters": [
        {
          "name": "tournamentIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A tournament ID or slug"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/tournaments/{tournament_id_or_slug}/players",
      "method": "getTournamentsTournamentIdOrSlugPlayers",
      "httpMethod": "get",
      "tag": "Tournaments",
      "typeScriptTag": "tournaments",
      "description": "Get players for a tournament",
      "parameters": [
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        },
        {
          "name": "tournamentIdOrSlug",
          "schema": "string",
          "required": true,
          "description": "Automatically added"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/tournaments/{tournament_id_or_slug}/rosters",
      "method": "getTournamentsTournamentIdOrSlugRosters",
      "httpMethod": "get",
      "tag": "Tournaments",
      "typeScriptTag": "tournaments",
      "description": "Get rosters for a tournament",
      "parameters": [
        {
          "name": "tournamentIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A tournament ID or slug"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/tournaments/{tournament_id_or_slug}/standings",
      "method": "getTournamentsTournamentIdOrSlugStandings",
      "httpMethod": "get",
      "tag": "Tournaments",
      "typeScriptTag": "tournaments",
      "description": "Get tournament standings",
      "parameters": [
        {
          "name": "tournamentIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A tournament ID or slug"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/tournaments/{tournament_id_or_slug}/teams",
      "method": "getTournamentsTournamentIdOrSlugTeams",
      "httpMethod": "get",
      "tag": "tournaments",
      "typeScriptTag": "tournaments",
      "description": "Get teams for a tournament",
      "parameters": [
        {
          "name": "tournamentIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A tournament ID or slug"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of teams"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/videogames",
      "method": "getVideogames",
      "httpMethod": "get",
      "tag": "Videogames",
      "typeScriptTag": "videogames",
      "description": "List videogames",
      "parameters": [
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/videogames/{videogame_id_or_slug}",
      "method": "getVideogamesVideogameIdOrSlug",
      "httpMethod": "get",
      "tag": "Videogames",
      "typeScriptTag": "videogames",
      "description": "Get a videogame",
      "parameters": [
        {
          "name": "videogameIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A videogame ID or slug"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/videogames/{videogame_id_or_slug}/leagues",
      "method": "getVideogamesVideogameIdOrSlugLeagues",
      "httpMethod": "get",
      "tag": "Videogames",
      "typeScriptTag": "videogames",
      "description": "",
      "parameters": [
        {
          "name": "videogameIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A videogame ID or slug"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/videogames/{videogame_id_or_slug}/series",
      "method": "getVideogamesVideogameIdOrSlugSeries",
      "httpMethod": "get",
      "tag": "Videogames",
      "typeScriptTag": "videogames",
      "description": "List series for a videogame",
      "parameters": [
        {
          "name": "videogameIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A videogame ID or slug"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/videogames/{videogame_id_or_slug}/tournaments",
      "method": "getVideogamesVideogameIdOrSlugTournaments",
      "httpMethod": "get",
      "tag": "Videogames",
      "typeScriptTag": "videogames",
      "description": "Get tournaments for a videogame",
      "parameters": [
        {
          "name": "videogameIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A videogame ID or slug"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/videogames/{videogame_id_or_slug}/versions",
      "method": "getVideogamesVideogameIdOrSlugVersions",
      "httpMethod": "get",
      "tag": "Videogames",
      "typeScriptTag": "videogames",
      "description": "List videogame versions",
      "parameters": [
        {
          "name": "videogameIdOrSlug",
          "schema": "undefined",
          "required": true,
          "description": "A videogame ID or slug"
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Options to filter results. String fields are case sensitive"
        },
        {
          "name": "range",
          "schema": "object",
          "required": false,
          "description": "Options to select results within ranges"
        },
        {
          "name": "sort",
          "schema": "array",
          "required": false,
          "description": "Options to sort results"
        },
        {
          "name": "search",
          "schema": "object",
          "required": false,
          "description": "Options to search results"
        },
        {
          "name": "page",
          "schema": "undefined",
          "required": false,
          "description": "Pagination in the form of `page=2` or `page[size]=30&amp;page[number]=2`"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Equivalent to `page[size]`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.pandascore.co/",
  "apiDescription": "\n# Introduction\n\nWhether you're looking to build an official Pandascore integration for your service, or you just want to build something awesome, [we can help you get started](/home).\n\nThe API works over the HTTPS protocol, and is accessed from the `api.pandascore.co` domain.\n\n- The current endpoint is [https://api.pandascore.co](https://api.pandascore.co).\n- All data is sent and received as JSON by default.\n- Blank fields are included with `null` values instead of being omitted.\n- All timestamps are returned in ISO-8601 format\n\n### About this documentation\n\nClicking on a query parameter like `filter` or `search` will show you the available options: ![filter](/doc/images/query_param_details.jpg)\n\nYou can also click on a response to see the detailed response schema: ![response](/doc/images/response_schema.jpg)\n\n## Events hierarchy\n\nThe PandaScore API allows you to access data about eSports events by using a certain structure detailed below.\n\n**Leagues**\n\nLeagues are the top level events. They don't have a date and represent a regular competition. A League is composed of one or several series.  \nSome League of Legends leagues are: _EU LCS, NA LCS, LCK, etc._  \nSome Dota 2 leagues are: _ESL One, GESC, The International, PGL, etc._\n\n**Series**\n\nA Serie represents an occurrence of a league event.  \nThe EU LCS league has two series per year: _spring 2017, summer 2017, spring 2016, summer 2016 etc._  \nSome Dota2 Series examples would be: _Changsha Major, Open Bucharest, Frankfurt, i-League Invitational etc._\n\n**Tournaments**\n\nTournaments groups all the matches of a serie under \"stages\" and \"groups\".  \nThe tournaments of the EU LCS of summer 2017 are: _Group A, Group B, Playoffs, etc._  \nSome Dota 2 tournaments are: _Group A, Group B, Playoffs, etc._\n\n**Matches**\n\nFinally we have matches which have two players or teams (depending on the played videogame) and several games (the rounds of the match).  \nMatches of the group A in the EU LCS of summer 2017 are: _G2 vs FNC, MSF vs NIP, etc._  \nMatches of the group A in the ESL One, Genting tournamnet are: _Lower Round 1, Quarterfinal, Upper Final, etc._  \n\n**Please note that some matches may be listed as \"TBD vs TBD\" if the matchup is not announced yet, for example the date of the Final match is known but the quarterfinal is still being played.**  \n![Structure](/doc/images/structure.png)\n\n## Formats\n\n&lt;!-- The API currently supports the JSON format by default, as well as the XML format. Add the desired extension to your request URL in order to get that format. --&gt;\nThe API currently supports the JSON format by default.\n\nOther formats may be added depending on user needs.\n\n## Pagination\n\nThe Pandascore API paginates all resources on the index method.\n\nRequests that return multiple items will be paginated to 50 items by default. You can specify further pages with the `page[number]` parameter. You can also set a custom page size (up to 100) with the `page[size]` parameter.\n\nThe `Link` HTTP response header contains pagination data with `first`, `previous`, `next` and `last` raw page links when available, under the format\n\n```\nLink: &lt;https://api.pandascore.co/{Resource}?page=X+1&gt;; rel=\"next\", &lt;https://api.pandascore.co/{Resource}?page=X-1&gt;; rel=\"prev\", &lt;https://api.pandascore.co/{Resource}?page=1&gt;; rel=\"first\", &lt;https://api.pandascore.co/{Resource}?page=X+n&gt;; rel=\"last\"\n```\n\nThere is also:\n\n* A `X-Page` header field, which contains the current page.\n* A `X-Per-Page` header field, which contains the current pagination length.\n* A `X-Total` header field, which contains the total count of items across all pages.\n\n## Filtering\n\nThe `filter` query parameter can be used to filter a collection by one or several fields for one or several values. The `filter` parameter takes the field to filter as a key, and the values to filter as the value. Multiples values must be comma-separated (`,`).\n\nFor example, the following is a request for all the champions with a name matching Twitch or Brand exactly, but only with 21 armor:\n\n```\nGET /lol/champions?filter[name]=Brand,Twitch&amp;filter[armor]=21&amp;token=YOUR_ACCESS_TOKEN\n```\n\n## Range\n\nThe `range` parameter is a hash that allows filtering fields by an interval.\nOnly values between the given two comma-separated bounds will be returned. The bounds are inclusive.\n\nFor example, the following is a request for all the champions with `hp` within 500 and 1000:\n\n```\nGET /lol/champions?range[hp]=500,1000&amp;token=YOUR_ACCESS_TOKEN\n```\n\n## Search\n\nThe `search` parameter is a bit like the `filter` parameter, but it will return all results where the values **contain** the given parameter.\n\nNote: this only works on strings.\nSearching with integer values is not supported and `filter` or `range` parameters may be better suited for your needs here.\n\nFor example, to get all the champions with a name containing `\"twi\"`:\n\n```\n$ curl -sg -H 'Authorization: Bearer YOUR_ACCESS_TOKEN' 'https://api.pandascore.co/lol/champions?search[name]=twi' | jq -S '.[].name'\n\"Twitch\"\n\"Twisted Fate\"\n```\n\n## Sorting\n\nAll index endpoints support multiple sort fields with comma-separation (`,`); the fields are applied in the order specified.\n\nThe sort order for each field is ascending unless it is prefixed with a minus (U+002D HYPHEN-MINUS, “-“), in which case it is descending.\n\nFor example, `GET /lol/champions?sort=attackdamage,-name&amp;token=YOUR_ACCESS_TOKEN` will return all the champions sorted by attack damage.\nAny champions with the same attack damage will then be sorted by their names in descending alphabetical order.\n\n## Rate limiting\n\nDepending on your current plan, you will have a different rate limit. Your plan and your current request count [are available on your dashboard](https://pandascore.co/settings).\n\nWith the **free plan**, you have a limit of 1000 requests per hour, others plans have a limit of 4000 requests per hour. The number of remaining requests is available in the `X-Rate-Limit-Remaining` response header.\n\nYour API key is included in all the examples on this page, so you can test any example right away. **Only you can see this value.**\n\n# Authentication\n\nThe authentication on the Pandascore API works with access tokens.\n\nAll developers need to [create an account](https://pandascore.co/users/sign_in) before getting started, in order to get an access token. The access token should not be shared.\n\n**Your token can be found and regenerated from [your dashboard](https://pandascore.co/settings).**\n\nThe access token can be passed in the URL with the `token` query string parameter, or in the `Authorization: Bearer` header field.\n\n&lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;\n",
  "apiTitle": "PandaScore REST API for All Videogames",
  "endpoints": 56,
  "sdkMethods": 56,
  "schemas": 393,
  "parameters": 301,
  "difficultyScore": 327.75,
  "difficulty": "Hard"
}