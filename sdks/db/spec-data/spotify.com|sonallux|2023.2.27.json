{
  "providerName": "spotify.com",
  "openApiRaw": "https://raw.githubusercontent.com/sonallux/spotify-web-api/main/fixed-spotify-open-api.yml",
  "securitySchemes": {
    "oauth_2_0": {
      "description": "Spotify supports OAuth 2.0 for authenticating all API requests.",
      "flows": {
        "authorizationCode": {
          "authorizationUrl": "https://accounts.spotify.com/authorize",
          "scopes": {
            "app-remote-control": "Communicate with the Spotify app on your device.\n",
            "playlist-modify-private": "Manage your private playlists.\n",
            "playlist-modify-public": "Manage your public playlists.\n",
            "playlist-read-collaborative": "Access your collaborative playlists.\n",
            "playlist-read-private": "Access your private playlists.\n",
            "streaming": "Play content and control playback on your other devices.\n",
            "ugc-image-upload": "Upload images to Spotify on your behalf.\n",
            "user-follow-modify": "Manage your saved content.\n",
            "user-follow-read": "Access your followers and who you are following.\n",
            "user-library-modify": "Manage your saved content.\n",
            "user-library-read": "Access your saved content.\n",
            "user-modify-playback-state": "Control playback on your Spotify clients and Spotify Connect devices.\n",
            "user-read-currently-playing": "Read your currently playing content.\n",
            "user-read-email": "Get your real email address.\n",
            "user-read-playback-position": "Read your position in content you have played.\n",
            "user-read-playback-state": "Read your currently playing content and Spotify Connect devices information.\n",
            "user-read-private": "Access your subscription details.\n",
            "user-read-recently-played": "Access your recently played items.\n",
            "user-top-read": "Read your top artists and content.\n"
          },
          "tokenUrl": "https://accounts.spotify.com/api/token"
        }
      },
      "type": "oauth2"
    }
  },
  "homepage": "spotify.com",
  "serviceName": "sonallux",
  "apiVersion": "2023.2.27",
  "methods": [
    {
      "url": "/albums",
      "method": "getMultipleAlbums",
      "httpMethod": "get",
      "tag": "Albums",
      "description": "Get Several Albums\n",
      "parameters": [
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/albums/{id}",
      "method": "getAnAlbum",
      "httpMethod": "get",
      "tag": "Albums",
      "description": "Get Album\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/albums/{id}/tracks",
      "method": "getAnAlbumsTracks",
      "httpMethod": "get",
      "tag": "Albums",
      "description": "Get Album Tracks\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/artists",
      "method": "getMultipleArtists",
      "httpMethod": "get",
      "tag": "Artists",
      "description": "Get Several Artists\n",
      "parameters": [
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/artists/{id}",
      "method": "getAnArtist",
      "httpMethod": "get",
      "tag": "Artists",
      "description": "Get Artist\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/artists/{id}/albums",
      "method": "getAnArtistsAlbums",
      "httpMethod": "get",
      "tag": "Artists",
      "description": "Get Artist's Albums\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "includeGroups",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/artists/{id}/related-artists",
      "method": "getAnArtistsRelatedArtists",
      "httpMethod": "get",
      "tag": "Artists",
      "description": "Get Artist's Related Artists\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/artists/{id}/top-tracks",
      "method": "getAnArtistsTopTracks",
      "httpMethod": "get",
      "tag": "Artists",
      "description": "Get Artist's Top Tracks\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/audio-analysis/{id}",
      "method": "getAudioAnalysis",
      "httpMethod": "get",
      "tag": "Tracks",
      "description": "Get Track's Audio Analysis\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/audio-features",
      "method": "getSeveralAudioFeatures",
      "httpMethod": "get",
      "tag": "Tracks",
      "description": "Get Tracks' Audio Features\n",
      "parameters": [
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/audio-features/{id}",
      "method": "getAudioFeatures",
      "httpMethod": "get",
      "tag": "Tracks",
      "description": "Get Track's Audio Features\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/audiobooks",
      "method": "getMultipleAudiobooks",
      "httpMethod": "get",
      "tag": "Audiobooks",
      "description": "Get Several Audiobooks\n",
      "parameters": [
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/audiobooks/{id}",
      "method": "getAnAudiobook",
      "httpMethod": "get",
      "tag": "Audiobooks",
      "description": "Get an Audiobook\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/audiobooks/{id}/chapters",
      "method": "getAudiobookChapters",
      "httpMethod": "get",
      "tag": "Audiobooks",
      "description": "Get Audiobook Chapters\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/browse/categories",
      "method": "getCategories",
      "httpMethod": "get",
      "tag": "Categories",
      "description": "Get Several Browse Categories\n",
      "parameters": [
        {
          "name": "country",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "locale",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/browse/categories/{category_id}",
      "method": "getACategory",
      "httpMethod": "get",
      "tag": "Categories",
      "description": "Get Single Browse Category\n",
      "parameters": [
        {
          "name": "categoryId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "country",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "locale",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/browse/categories/{category_id}/playlists",
      "method": "getACategoriesPlaylists",
      "httpMethod": "get",
      "tag": "Playlists",
      "description": "Get Category's Playlists\n",
      "parameters": [
        {
          "name": "categoryId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "country",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/browse/featured-playlists",
      "method": "getFeaturedPlaylists",
      "httpMethod": "get",
      "tag": "Playlists",
      "description": "Get Featured Playlists\n",
      "parameters": [
        {
          "name": "country",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "locale",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/browse/new-releases",
      "method": "getNewReleases",
      "httpMethod": "get",
      "tag": "Albums",
      "description": "Get New Releases\n",
      "parameters": [
        {
          "name": "country",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/chapters",
      "method": "getSeveralChapters",
      "httpMethod": "get",
      "tag": "Chapters",
      "description": "Get Several Chapters\n",
      "parameters": [
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/chapters/{id}",
      "method": "getAChapter",
      "httpMethod": "get",
      "tag": "Chapters",
      "description": "Get a Chapter\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/episodes",
      "method": "getMultipleEpisodes",
      "httpMethod": "get",
      "tag": "Episodes",
      "description": "Get Several Episodes\n",
      "parameters": [
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/episodes/{id}",
      "method": "getAnEpisode",
      "httpMethod": "get",
      "tag": "Episodes",
      "description": "Get Episode\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/markets",
      "method": "getAvailableMarkets",
      "httpMethod": "get",
      "tag": "Markets",
      "description": "Get Available Markets\n",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me",
      "method": "getCurrentUsersProfile",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Get Current User's Profile\n",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/albums",
      "method": "removeAlbumsUser",
      "httpMethod": "delete",
      "tag": "Albums",
      "description": "Remove Users' Saved Albums\n",
      "parameters": [
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/albums",
      "method": "getUsersSavedAlbums",
      "httpMethod": "get",
      "tag": "Albums",
      "description": "Get User's Saved Albums\n",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/albums",
      "method": "saveAlbumsUser",
      "httpMethod": "put",
      "tag": "Albums",
      "description": "Save Albums for Current User\n",
      "parameters": [
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/albums/contains",
      "method": "checkUsersSavedAlbums",
      "httpMethod": "get",
      "tag": "Albums",
      "description": "Check User's Saved Albums\n",
      "parameters": [
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/audiobooks",
      "method": "removeAudiobooksUser",
      "httpMethod": "delete",
      "tag": "Audiobooks",
      "description": "Remove User's Saved Audiobooks\n",
      "parameters": [
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/audiobooks",
      "method": "getUsersSavedAudiobooks",
      "httpMethod": "get",
      "tag": "Audiobooks",
      "description": "Get User's Saved Audiobooks\n",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/audiobooks",
      "method": "saveAudiobooksUser",
      "httpMethod": "put",
      "tag": "Audiobooks",
      "description": "Save Audiobooks for Current User\n",
      "parameters": [
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/audiobooks/contains",
      "method": "checkUsersSavedAudiobooks",
      "httpMethod": "get",
      "tag": "Audiobooks",
      "description": "Check User's Saved Audiobooks\n",
      "parameters": [
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/episodes",
      "method": "removeEpisodesUser",
      "httpMethod": "delete",
      "tag": "Episodes",
      "description": "Remove User's Saved Episodes\n",
      "parameters": [
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/episodes",
      "method": "getUsersSavedEpisodes",
      "httpMethod": "get",
      "tag": "Episodes",
      "description": "Get User's Saved Episodes\n",
      "parameters": [
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/episodes",
      "method": "saveEpisodesUser",
      "httpMethod": "put",
      "tag": "Episodes",
      "description": "Save Episodes for Current User\n",
      "parameters": [
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/episodes/contains",
      "method": "checkUsersSavedEpisodes",
      "httpMethod": "get",
      "tag": "Episodes",
      "description": "Check User's Saved Episodes\n",
      "parameters": [
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/following",
      "method": "unfollowArtistsUsers",
      "httpMethod": "delete",
      "tag": "Users",
      "description": "Unfollow Artists or Users\n",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/following",
      "method": "getFollowed",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Get Followed Artists\n",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/following",
      "method": "followArtistsUsers",
      "httpMethod": "put",
      "tag": "Users",
      "description": "Follow Artists or Users\n",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/following/contains",
      "method": "checkCurrentUserFollows",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Check If User Follows Artists or Users\n",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/player",
      "method": "getInformationAboutTheUsersCurrentPlayback",
      "httpMethod": "get",
      "tag": "Player",
      "description": "Get Playback State\n",
      "parameters": [
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "additionalTypes",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/player",
      "method": "transferAUsersPlayback",
      "httpMethod": "put",
      "tag": "Player",
      "description": "Transfer Playback\n",
      "parameters": [
        {
          "name": "device_ids",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "play",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/player/currently-playing",
      "method": "getTheUsersCurrentlyPlayingTrack",
      "httpMethod": "get",
      "tag": "Player",
      "description": "Get Currently Playing Track\n",
      "parameters": [
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "additionalTypes",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/player/devices",
      "method": "getAUsersAvailableDevices",
      "httpMethod": "get",
      "tag": "Player",
      "description": "Get Available Devices\n",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/player/next",
      "method": "skipUsersPlaybackToNextTrack",
      "httpMethod": "post",
      "tag": "Player",
      "description": "Skip To Next\n",
      "parameters": [
        {
          "name": "deviceId",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/player/pause",
      "method": "pauseAUsersPlayback",
      "httpMethod": "put",
      "tag": "Player",
      "description": "Pause Playback\n",
      "parameters": [
        {
          "name": "deviceId",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/player/play",
      "method": "startAUsersPlayback",
      "httpMethod": "put",
      "tag": "Player",
      "description": "Start/Resume Playback\n",
      "parameters": [
        {
          "name": "deviceId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "context_uri",
          "schema": "string",
          "description": ""
        },
        {
          "name": "offset",
          "schema": "object",
          "description": ""
        },
        {
          "name": "position_ms",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "uris",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/player/previous",
      "method": "skipUsersPlaybackToPreviousTrack",
      "httpMethod": "post",
      "tag": "Player",
      "description": "Skip To Previous\n",
      "parameters": [
        {
          "name": "deviceId",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/player/queue",
      "method": "getQueue",
      "httpMethod": "get",
      "tag": "Player",
      "description": "Get the User's Queue\n",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/player/queue",
      "method": "addToQueue",
      "httpMethod": "post",
      "tag": "Player",
      "description": "Add Item to Playback Queue\n",
      "parameters": [
        {
          "name": "uri",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "deviceId",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/player/recently-played",
      "method": "getRecentlyPlayed",
      "httpMethod": "get",
      "tag": "Player",
      "description": "Get Recently Played Tracks\n",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "after",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "before",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/player/repeat",
      "method": "setRepeatModeOnUsersPlayback",
      "httpMethod": "put",
      "tag": "Player",
      "description": "Set Repeat Mode\n",
      "parameters": [
        {
          "name": "state",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "deviceId",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/player/seek",
      "method": "seekToPositionInCurrentlyPlayingTrack",
      "httpMethod": "put",
      "tag": "Player",
      "description": "Seek To Position\n",
      "parameters": [
        {
          "name": "positionMs",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "deviceId",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/player/shuffle",
      "method": "toggleShuffleForUsersPlayback",
      "httpMethod": "put",
      "tag": "Player",
      "description": "Toggle Playback Shuffle\n",
      "parameters": [
        {
          "name": "state",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "deviceId",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/player/volume",
      "method": "setVolumeForUsersPlayback",
      "httpMethod": "put",
      "tag": "Player",
      "description": "Set Playback Volume\n",
      "parameters": [
        {
          "name": "volumePercent",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "deviceId",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/playlists",
      "method": "getAListOfCurrentUsersPlaylists",
      "httpMethod": "get",
      "tag": "Playlists",
      "description": "Get Current User's Playlists\n",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/shows",
      "method": "removeShowsUser",
      "httpMethod": "delete",
      "tag": "Shows",
      "description": "Remove User's Saved Shows\n",
      "parameters": [
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/shows",
      "method": "getUsersSavedShows",
      "httpMethod": "get",
      "tag": "Shows",
      "description": "Get User's Saved Shows\n",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/shows",
      "method": "saveShowsUser",
      "httpMethod": "put",
      "tag": "Shows",
      "description": "Save Shows for Current User\n",
      "parameters": [
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/shows/contains",
      "method": "checkUsersSavedShows",
      "httpMethod": "get",
      "tag": "Shows",
      "description": "Check User's Saved Shows\n",
      "parameters": [
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/top/artists",
      "method": "getUsersTopArtists",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Get User's Top Artists\n",
      "parameters": [
        {
          "name": "timeRange",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/top/tracks",
      "method": "getUsersTopTracks",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Get User's Top Tracks\n",
      "parameters": [
        {
          "name": "timeRange",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/tracks",
      "method": "removeTracksUser",
      "httpMethod": "delete",
      "tag": "Tracks",
      "description": "Remove User's Saved Tracks\n",
      "parameters": [
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/tracks",
      "method": "getUsersSavedTracks",
      "httpMethod": "get",
      "tag": "Tracks",
      "description": "Get User's Saved Tracks\n",
      "parameters": [
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/tracks",
      "method": "saveTracksUser",
      "httpMethod": "put",
      "tag": "Tracks",
      "description": "Save Tracks for Current User\n",
      "parameters": [
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/tracks/contains",
      "method": "checkUsersSavedTracks",
      "httpMethod": "get",
      "tag": "Tracks",
      "description": "Check User's Saved Tracks\n",
      "parameters": [
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/playlists/{playlist_id}",
      "method": "getPlaylist",
      "httpMethod": "get",
      "tag": "Playlists",
      "description": "Get Playlist\n",
      "parameters": [
        {
          "name": "playlistId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "fields",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "additionalTypes",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/playlists/{playlist_id}",
      "method": "changePlaylistDetails",
      "httpMethod": "put",
      "tag": "Playlists",
      "description": "Change Playlist Details\n",
      "parameters": [
        {
          "name": "playlistId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "collaborative",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "public",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/playlists/{playlist_id}/followers",
      "method": "unfollowPlaylist",
      "httpMethod": "delete",
      "tag": "Users",
      "description": "Unfollow Playlist\n",
      "parameters": [
        {
          "name": "playlistId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/playlists/{playlist_id}/followers",
      "method": "followPlaylist",
      "httpMethod": "put",
      "tag": "Users",
      "description": "Follow Playlist\n",
      "parameters": [
        {
          "name": "playlistId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "public",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/playlists/{playlist_id}/followers/contains",
      "method": "checkIfUserFollowsPlaylist",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Check if Users Follow Playlist\n",
      "parameters": [
        {
          "name": "playlistId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/playlists/{playlist_id}/images",
      "method": "getPlaylistCover",
      "httpMethod": "get",
      "tag": "Playlists",
      "description": "Get Playlist Cover Image\n",
      "parameters": [
        {
          "name": "playlistId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/playlists/{playlist_id}/images",
      "method": "uploadCustomPlaylistCover",
      "httpMethod": "put",
      "tag": "Playlists",
      "description": "Add Custom Playlist Cover Image\n",
      "parameters": [
        {
          "name": "playlistId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/playlists/{playlist_id}/tracks",
      "method": "removeTracksPlaylist",
      "httpMethod": "delete",
      "tag": "Playlists",
      "description": "Remove Playlist Items\n",
      "parameters": [
        {
          "name": "playlistId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "snapshot_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tracks",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/playlists/{playlist_id}/tracks",
      "method": "getPlaylistsTracks",
      "httpMethod": "get",
      "tag": "Playlists",
      "description": "Get Playlist Items\n",
      "parameters": [
        {
          "name": "playlistId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "fields",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "additionalTypes",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/playlists/{playlist_id}/tracks",
      "method": "addTracksToPlaylist",
      "httpMethod": "post",
      "tag": "Playlists",
      "description": "Add Items to Playlist\n",
      "parameters": [
        {
          "name": "playlistId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "position",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "uris",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "position",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "uris",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/playlists/{playlist_id}/tracks",
      "method": "reorderOrReplacePlaylistsTracks",
      "httpMethod": "put",
      "tag": "Playlists",
      "description": "Update Playlist Items\n",
      "parameters": [
        {
          "name": "playlistId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "uris",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "insert_before",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "range_length",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "range_start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "snapshot_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "uris",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/recommendations",
      "method": "getRecommendations",
      "httpMethod": "get",
      "tag": "Tracks",
      "description": "Get Recommendations\n",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "seedArtists",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "seedGenres",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "seedTracks",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "minAcousticness",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "maxAcousticness",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "targetAcousticness",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "minDanceability",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "maxDanceability",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "targetDanceability",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "minDurationMs",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "maxDurationMs",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "targetDurationMs",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "minEnergy",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "maxEnergy",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "targetEnergy",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "minInstrumentalness",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "maxInstrumentalness",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "targetInstrumentalness",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "minKey",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "maxKey",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "targetKey",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "minLiveness",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "maxLiveness",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "targetLiveness",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "minLoudness",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "maxLoudness",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "targetLoudness",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "minMode",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "maxMode",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "targetMode",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "minPopularity",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "maxPopularity",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "targetPopularity",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "minSpeechiness",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "maxSpeechiness",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "targetSpeechiness",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "minTempo",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "maxTempo",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "targetTempo",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "minTimeSignature",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "maxTimeSignature",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "targetTimeSignature",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "minValence",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "maxValence",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "targetValence",
          "schema": "number",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/recommendations/available-genre-seeds",
      "method": "getRecommendationGenres",
      "httpMethod": "get",
      "tag": "Genres",
      "description": "Get Available Genre Seeds\n",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/search",
      "method": "search",
      "httpMethod": "get",
      "tag": "Search",
      "description": "Search for Item\n",
      "parameters": [
        {
          "name": "q",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "includeExternal",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/shows",
      "method": "getMultipleShows",
      "httpMethod": "get",
      "tag": "Shows",
      "description": "Get Several Shows\n",
      "parameters": [
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/shows/{id}",
      "method": "getAShow",
      "httpMethod": "get",
      "tag": "Shows",
      "description": "Get Show\n",
      "parameters": [
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/shows/{id}/episodes",
      "method": "getAShowsEpisodes",
      "httpMethod": "get",
      "tag": "Shows",
      "description": "Get Show Episodes\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/tracks",
      "method": "getSeveralTracks",
      "httpMethod": "get",
      "tag": "Tracks",
      "description": "Get Several Tracks\n",
      "parameters": [
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ids",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/tracks/{id}",
      "method": "getTrack",
      "httpMethod": "get",
      "tag": "Tracks",
      "description": "Get Track\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "market",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}",
      "method": "getUsersProfile",
      "httpMethod": "get",
      "tag": "Users",
      "description": "Get User's Profile\n",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/playlists",
      "method": "getListUsersPlaylists",
      "httpMethod": "get",
      "tag": "Playlists",
      "description": "Get User's Playlists\n",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{user_id}/playlists",
      "method": "createPlaylist",
      "httpMethod": "post",
      "tag": "Playlists",
      "description": "Create Playlist\n",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "collaborative",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "public",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "429",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.spotify.com/v1",
  "apiDescription": "You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.\n\nIn order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.\n\nThe base URI for all Web API requests is `https://api.spotify.com/v1`.\n\nNeed help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers.\n",
  "apiTitle": "Spotify Web API with fixes and improvements from sonallux",
  "endpoints": 68,
  "sdkMethods": 225,
  "schemas": 93,
  "parameters": 250,
  "contactUrl": "https://github.com/sonallux/spotify-web-api",
  "difficultyScore": 334,
  "difficulty": "Hard"
}