{
  "providerName": "adyen.com",
  "openApiRaw": "https://raw.githubusercontent.com/Adyen/adyen-openapi/main/json/ManagementService-v3.json",
  "homepage": "adyen.com",
  "serviceName": "ManagementService-v3",
  "apiVersion": "3",
  "methods": [
    {
      "url": "/companies",
      "method": "getCompanies",
      "httpMethod": "get",
      "tag": "Account - company level",
      "description": "Get a list of company accounts",
      "parameters": [
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The number of the page to fetch."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "The number of items to have on a page, maximum 100. The default is 10 items on a page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}",
      "method": "getCompaniesCompanyId",
      "httpMethod": "get",
      "tag": "Account - company level",
      "description": "Get a company account",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/androidApps",
      "method": "getCompaniesCompanyIdAndroidApps",
      "httpMethod": "get",
      "tag": "Android files - company level",
      "description": "Get a list of Android apps",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The number of the page to fetch."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "The number of items to have on a page, maximum 100. The default is 20 items on a page."
        },
        {
          "name": "packageName",
          "schema": "string",
          "required": false,
          "description": "The package name that uniquely identifies the Android app."
        },
        {
          "name": "versionCode",
          "schema": "integer",
          "required": false,
          "description": "The version number of the app."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/androidApps",
      "method": "postCompaniesCompanyIdAndroidApps",
      "httpMethod": "post",
      "tag": "Android files - company level",
      "description": "Upload Android App",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/androidApps/{id}",
      "method": "getCompaniesCompanyIdAndroidAppsId",
      "httpMethod": "get",
      "tag": "Android files - company level",
      "description": "Get Android app",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the app."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/androidCertificates",
      "method": "getCompaniesCompanyIdAndroidCertificates",
      "httpMethod": "get",
      "tag": "Android files - company level",
      "description": "Get a list of Android certificates",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The number of the page to fetch."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "The number of items to have on a page, maximum 100. The default is 20 items on a page."
        },
        {
          "name": "certificateName",
          "schema": "string",
          "required": false,
          "description": "The name of the certificate."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/apiCredentials",
      "method": "getCompaniesCompanyIdApiCredentials",
      "httpMethod": "get",
      "tag": "API credentials - company level",
      "description": "Get a list of API credentials",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The number of the page to fetch."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "The number of items to have on a page, maximum 100. The default is 10 items on a page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/apiCredentials",
      "method": "postCompaniesCompanyIdApiCredentials",
      "httpMethod": "post",
      "tag": "API credentials - company level",
      "description": "Create an API credential.",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "allowedOrigins",
          "schema": "array",
          "description": ""
        },
        {
          "name": "associatedMerchantAccounts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "roles",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/apiCredentials/{apiCredentialId}",
      "method": "getCompaniesCompanyIdApiCredentialsApiCredentialId",
      "httpMethod": "get",
      "tag": "API credentials - company level",
      "description": "Get an API credential",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "apiCredentialId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the API credential."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/apiCredentials/{apiCredentialId}",
      "method": "patchCompaniesCompanyIdApiCredentialsApiCredentialId",
      "httpMethod": "patch",
      "tag": "API credentials - company level",
      "description": "Update an API credential.",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "apiCredentialId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the API credential."
        },
        {
          "name": "active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "allowedOrigins",
          "schema": "array",
          "description": ""
        },
        {
          "name": "associatedMerchantAccounts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "roles",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/apiCredentials/{apiCredentialId}/allowedOrigins",
      "method": "getCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOrigins",
      "httpMethod": "get",
      "tag": "Allowed origins - company level",
      "description": "Get a list of allowed origins",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "apiCredentialId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the API credential."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/apiCredentials/{apiCredentialId}/allowedOrigins",
      "method": "postCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOrigins",
      "httpMethod": "post",
      "tag": "Allowed origins - company level",
      "description": "Create an allowed origin",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "apiCredentialId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the API credential."
        },
        {
          "name": "_links",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "domain",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/apiCredentials/{apiCredentialId}/allowedOrigins/{originId}",
      "method": "deleteCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOriginsOriginId",
      "httpMethod": "delete",
      "tag": "Allowed origins - company level",
      "description": "Delete an allowed origin",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "apiCredentialId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the API credential."
        },
        {
          "name": "originId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the allowed origin."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/apiCredentials/{apiCredentialId}/allowedOrigins/{originId}",
      "method": "getCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOriginsOriginId",
      "httpMethod": "get",
      "tag": "Allowed origins - company level",
      "description": "Get an allowed origin",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "apiCredentialId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the API credential."
        },
        {
          "name": "originId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the allowed origin."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/apiCredentials/{apiCredentialId}/generateApiKey",
      "method": "postCompaniesCompanyIdApiCredentialsApiCredentialIdGenerateApiKey",
      "httpMethod": "post",
      "tag": "API key - company level",
      "description": "Generate new API key",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "apiCredentialId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the API credential."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/apiCredentials/{apiCredentialId}/generateClientKey",
      "method": "postCompaniesCompanyIdApiCredentialsApiCredentialIdGenerateClientKey",
      "httpMethod": "post",
      "tag": "Client key - company level",
      "description": "Generate new client key",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "apiCredentialId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the API credential."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/billingEntities",
      "method": "getCompaniesCompanyIdBillingEntities",
      "httpMethod": "get",
      "tag": "Terminal orders - company level",
      "description": "Get a list of billing entities",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "The name of the billing entity."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/merchants",
      "method": "getCompaniesCompanyIdMerchants",
      "httpMethod": "get",
      "tag": "Account - company level",
      "description": "Get a list of merchant accounts",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The number of the page to fetch."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "The number of items to have on a page, maximum 100. The default is 10 items on a page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/shippingLocations",
      "method": "getCompaniesCompanyIdShippingLocations",
      "httpMethod": "get",
      "tag": "Terminal orders - company level",
      "description": "Get a list of shipping locations",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "The name of the shipping location."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The number of locations to skip."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The number of locations to return."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/shippingLocations",
      "method": "postCompaniesCompanyIdShippingLocations",
      "httpMethod": "post",
      "tag": "Terminal orders - company level",
      "description": "Create a shipping location",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/terminalActions",
      "method": "getCompaniesCompanyIdTerminalActions",
      "httpMethod": "get",
      "tag": "Terminal actions - company level",
      "description": "Get a list of terminal actions",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The number of the page to fetch."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "The number of items to have on a page, maximum 100. The default is 20 items on a page."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Returns terminal actions with the specified status. \nAllowed values: **pending**, **successful**, **failed**, **cancelled**, **tryLater**."
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "Returns terminal actions of the specified type. \nAllowed values: **InstallAndroidApp**, **UninstallAndroidApp**, **InstallAndroidCertificate**, **UninstallAndroidCertificate**."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/terminalActions/{actionId}",
      "method": "getCompaniesCompanyIdTerminalActionsActionId",
      "httpMethod": "get",
      "tag": "Terminal actions - company level",
      "description": "Get terminal action",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "actionId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the terminal action."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/terminalLogos",
      "method": "getCompaniesCompanyIdTerminalLogos",
      "httpMethod": "get",
      "tag": "Terminal settings - company level",
      "description": "Get the terminal logo",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "model",
          "schema": "string",
          "required": true,
          "description": "The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/terminalLogos",
      "method": "patchCompaniesCompanyIdTerminalLogos",
      "httpMethod": "patch",
      "tag": "Terminal settings - company level",
      "description": "Update the terminal logo",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "model",
          "schema": "string",
          "required": true,
          "description": "The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T."
        },
        {
          "name": "data",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/terminalModels",
      "method": "getCompaniesCompanyIdTerminalModels",
      "httpMethod": "get",
      "tag": "Terminal orders - company level",
      "description": "Get a list of terminal models",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/terminalOrders",
      "method": "getCompaniesCompanyIdTerminalOrders",
      "httpMethod": "get",
      "tag": "Terminal orders - company level",
      "description": "Get a list of orders",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "customerOrderReference",
          "schema": "string",
          "required": false,
          "description": "Your purchase order number."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The order status. Possible values (not case-sensitive): Placed, Confirmed, Cancelled, Shipped, Delivered."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The number of orders to skip."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The number of orders to return."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/terminalOrders",
      "method": "postCompaniesCompanyIdTerminalOrders",
      "httpMethod": "post",
      "tag": "Terminal orders - company level",
      "description": "Create an order",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "billingEntityId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "customerOrderReference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "items",
          "schema": "array",
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "shippingLocationId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taxId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/terminalOrders/{orderId}",
      "method": "getCompaniesCompanyIdTerminalOrdersOrderId",
      "httpMethod": "get",
      "tag": "Terminal orders - company level",
      "description": "Get an order",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/terminalOrders/{orderId}",
      "method": "patchCompaniesCompanyIdTerminalOrdersOrderId",
      "httpMethod": "patch",
      "tag": "Terminal orders - company level",
      "description": "Update an order",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the order."
        },
        {
          "name": "billingEntityId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "customerOrderReference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "items",
          "schema": "array",
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "shippingLocationId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taxId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/terminalOrders/{orderId}/cancel",
      "method": "postCompaniesCompanyIdTerminalOrdersOrderIdCancel",
      "httpMethod": "post",
      "tag": "Terminal orders - company level",
      "description": "Cancel an order",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/terminalProducts",
      "method": "getCompaniesCompanyIdTerminalProducts",
      "httpMethod": "get",
      "tag": "Terminal orders - company level",
      "description": "Get a list of terminal products",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": "The country to return products for, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. For example, **US**"
        },
        {
          "name": "terminalModelId",
          "schema": "string",
          "required": false,
          "description": "The terminal model to return products for. Use the ID returned in the [GET `/terminalModels`](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/companies/{companyId}/terminalModels) response. For example, **Verifone.M400**"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The number of products to skip."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The number of products to return."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/terminalSettings",
      "method": "getCompaniesCompanyIdTerminalSettings",
      "httpMethod": "get",
      "tag": "Terminal settings - company level",
      "description": "Get terminal settings",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/terminalSettings",
      "method": "patchCompaniesCompanyIdTerminalSettings",
      "httpMethod": "patch",
      "tag": "Terminal settings - company level",
      "description": "Update terminal settings",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "cardholderReceipt",
          "schema": "object",
          "description": ""
        },
        {
          "name": "connectivity",
          "schema": "object",
          "description": ""
        },
        {
          "name": "gratuities",
          "schema": "array",
          "description": ""
        },
        {
          "name": "hardware",
          "schema": "object",
          "description": ""
        },
        {
          "name": "localization",
          "schema": "object",
          "description": ""
        },
        {
          "name": "nexo",
          "schema": "object",
          "description": ""
        },
        {
          "name": "offlineProcessing",
          "schema": "object",
          "description": ""
        },
        {
          "name": "opi",
          "schema": "object",
          "description": ""
        },
        {
          "name": "passcodes",
          "schema": "object",
          "description": ""
        },
        {
          "name": "payAtTable",
          "schema": "object",
          "description": ""
        },
        {
          "name": "payment",
          "schema": "object",
          "description": ""
        },
        {
          "name": "receiptOptions",
          "schema": "object",
          "description": ""
        },
        {
          "name": "receiptPrinting",
          "schema": "object",
          "description": ""
        },
        {
          "name": "signature",
          "schema": "object",
          "description": ""
        },
        {
          "name": "standalone",
          "schema": "object",
          "description": ""
        },
        {
          "name": "surcharge",
          "schema": "object",
          "description": ""
        },
        {
          "name": "tapToPay",
          "schema": "object",
          "description": ""
        },
        {
          "name": "timeouts",
          "schema": "object",
          "description": ""
        },
        {
          "name": "wifiProfiles",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/users",
      "method": "getCompaniesCompanyIdUsers",
      "httpMethod": "get",
      "tag": "Users - company level",
      "description": "Get a list of users",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The number of the page to return."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "The number of items to have on a page. Maximum value is **100**. The default is **10** items on a page."
        },
        {
          "name": "username",
          "schema": "string",
          "required": false,
          "description": "The partial or complete username to select all users that match."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/users",
      "method": "postCompaniesCompanyIdUsers",
      "httpMethod": "post",
      "tag": "Users - company level",
      "description": "Create a new user",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "accountGroups",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "associatedMerchantAccounts",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "roles",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "timeZoneCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/users/{userId}",
      "method": "getCompaniesCompanyIdUsersUserId",
      "httpMethod": "get",
      "tag": "Users - company level",
      "description": "Get user details",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the user."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/users/{userId}",
      "method": "patchCompaniesCompanyIdUsersUserId",
      "httpMethod": "patch",
      "tag": "Users - company level",
      "description": "Update user details",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the user."
        },
        {
          "name": "accountGroups",
          "schema": "array",
          "description": ""
        },
        {
          "name": "active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "associatedMerchantAccounts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "object",
          "description": ""
        },
        {
          "name": "roles",
          "schema": "array",
          "description": ""
        },
        {
          "name": "timeZoneCode",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/webhooks",
      "method": "getCompaniesCompanyIdWebhooks",
      "httpMethod": "get",
      "tag": "Webhooks - company level",
      "description": "List all webhooks",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account)."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The number of the page to fetch."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "The number of items to have on a page, maximum 100. The default is 10 items on a page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/webhooks",
      "method": "postCompaniesCompanyIdWebhooks",
      "httpMethod": "post",
      "tag": "Webhooks - company level",
      "description": "Set up a webhook",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account)."
        },
        {
          "name": "acceptsExpiredCertificate",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "acceptsSelfSignedCertificate",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "acceptsUntrustedRootCertificate",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "active",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "additionalSettings",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "communicationFormat",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "encryptionProtocol",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "filterMerchantAccountType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "filterMerchantAccounts",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "networkType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "populateSoapActionHeader",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/webhooks/{webhookId}",
      "method": "deleteCompaniesCompanyIdWebhooksWebhookId",
      "httpMethod": "delete",
      "tag": "Webhooks - company level",
      "description": "Remove a webhook",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "webhookId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the webhook configuration."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/webhooks/{webhookId}",
      "method": "getCompaniesCompanyIdWebhooksWebhookId",
      "httpMethod": "get",
      "tag": "Webhooks - company level",
      "description": "Get a webhook",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account)."
        },
        {
          "name": "webhookId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the webhook configuration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/webhooks/{webhookId}",
      "method": "patchCompaniesCompanyIdWebhooksWebhookId",
      "httpMethod": "patch",
      "tag": "Webhooks - company level",
      "description": "Update a webhook",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "webhookId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the webhook configuration."
        },
        {
          "name": "acceptsExpiredCertificate",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "acceptsSelfSignedCertificate",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "acceptsUntrustedRootCertificate",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "additionalSettings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "communicationFormat",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "encryptionProtocol",
          "schema": "string",
          "description": ""
        },
        {
          "name": "filterMerchantAccountType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "filterMerchantAccounts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "networkType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "populateSoapActionHeader",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/webhooks/{webhookId}/generateHmac",
      "method": "postCompaniesCompanyIdWebhooksWebhookIdGenerateHmac",
      "httpMethod": "post",
      "tag": "Webhooks - company level",
      "description": "Generate an HMAC key",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "webhookId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the webhook configuration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/companies/{companyId}/webhooks/{webhookId}/test",
      "method": "postCompaniesCompanyIdWebhooksWebhookIdTest",
      "httpMethod": "post",
      "tag": "Webhooks - company level",
      "description": "Test a webhook",
      "parameters": [
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the company account."
        },
        {
          "name": "webhookId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the webhook configuration."
        },
        {
          "name": "merchantIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "notification",
          "schema": "object",
          "description": ""
        },
        {
          "name": "types",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/me",
      "method": "getMe",
      "httpMethod": "get",
      "tag": "My API credential",
      "description": "Get API credential details",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/allowedOrigins",
      "method": "getMeAllowedOrigins",
      "httpMethod": "get",
      "tag": "My API credential",
      "description": "Get allowed origins",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/allowedOrigins",
      "method": "postMeAllowedOrigins",
      "httpMethod": "post",
      "tag": "My API credential",
      "description": "Add allowed origin",
      "parameters": [
        {
          "name": "_links",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "domain",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/allowedOrigins/{originId}",
      "method": "deleteMeAllowedOriginsOriginId",
      "httpMethod": "delete",
      "tag": "My API credential",
      "description": "Remove allowed origin",
      "parameters": [
        {
          "name": "originId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the allowed origin."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/allowedOrigins/{originId}",
      "method": "getMeAllowedOriginsOriginId",
      "httpMethod": "get",
      "tag": "My API credential",
      "description": "Get allowed origin details",
      "parameters": [
        {
          "name": "originId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the allowed origin."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/me/generateClientKey",
      "method": "postMeGenerateClientKey",
      "httpMethod": "post",
      "tag": "My API credential",
      "description": "Generate a client key",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants",
      "method": "getMerchants",
      "httpMethod": "get",
      "tag": "Account - merchant level",
      "description": "Get a list of merchant accounts",
      "parameters": [
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The number of the page to fetch."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "The number of items to have on a page, maximum 100. The default is 10 items on a page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants",
      "method": "postMerchants",
      "httpMethod": "post",
      "tag": "Account - merchant level",
      "description": "Create a merchant account",
      "parameters": [
        {
          "name": "businessLineId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "companyId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "legalEntityId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pricingPlan",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "salesChannels",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}",
      "method": "getMerchantsMerchantId",
      "httpMethod": "get",
      "tag": "Account - merchant level",
      "description": "Get a merchant account",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/activate",
      "method": "postMerchantsMerchantIdActivate",
      "httpMethod": "post",
      "tag": "Account - merchant level",
      "description": "Request to activate a merchant account",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/apiCredentials",
      "method": "getMerchantsMerchantIdApiCredentials",
      "httpMethod": "get",
      "tag": "API credentials - merchant level",
      "description": "Get a list of API credentials",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The number of the page to fetch."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "The number of items to have on a page, maximum 100. The default is 10 items on a page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/apiCredentials",
      "method": "postMerchantsMerchantIdApiCredentials",
      "httpMethod": "post",
      "tag": "API credentials - merchant level",
      "description": "Create an API credential",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "allowedOrigins",
          "schema": "array",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "roles",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/apiCredentials/{apiCredentialId}",
      "method": "getMerchantsMerchantIdApiCredentialsApiCredentialId",
      "httpMethod": "get",
      "tag": "API credentials - merchant level",
      "description": "Get an API credential",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "apiCredentialId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the API credential."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/apiCredentials/{apiCredentialId}",
      "method": "patchMerchantsMerchantIdApiCredentialsApiCredentialId",
      "httpMethod": "patch",
      "tag": "API credentials - merchant level",
      "description": "Update an API credential",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "apiCredentialId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the API credential."
        },
        {
          "name": "active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "allowedOrigins",
          "schema": "array",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "roles",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/apiCredentials/{apiCredentialId}/allowedOrigins",
      "method": "getMerchantsMerchantIdApiCredentialsApiCredentialIdAllowedOrigins",
      "httpMethod": "get",
      "tag": "Allowed origins - merchant level",
      "description": "Get a list of allowed origins",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "apiCredentialId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the API credential."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/apiCredentials/{apiCredentialId}/allowedOrigins",
      "method": "postMerchantsMerchantIdApiCredentialsApiCredentialIdAllowedOrigins",
      "httpMethod": "post",
      "tag": "Allowed origins - merchant level",
      "description": "Create an allowed origin",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "apiCredentialId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the API credential."
        },
        {
          "name": "_links",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "domain",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/apiCredentials/{apiCredentialId}/allowedOrigins/{originId}",
      "method": "deleteMerchantsMerchantIdApiCredentialsApiCredentialIdAllowedOriginsOriginId",
      "httpMethod": "delete",
      "tag": "Allowed origins - merchant level",
      "description": "Delete an allowed origin",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "apiCredentialId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the API credential."
        },
        {
          "name": "originId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the allowed origin."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/apiCredentials/{apiCredentialId}/allowedOrigins/{originId}",
      "method": "getMerchantsMerchantIdApiCredentialsApiCredentialIdAllowedOriginsOriginId",
      "httpMethod": "get",
      "tag": "Allowed origins - merchant level",
      "description": "Get an allowed origin",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "apiCredentialId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the API credential."
        },
        {
          "name": "originId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the allowed origin."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/apiCredentials/{apiCredentialId}/generateApiKey",
      "method": "postMerchantsMerchantIdApiCredentialsApiCredentialIdGenerateApiKey",
      "httpMethod": "post",
      "tag": "API key - merchant level",
      "description": "Generate new API key",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "apiCredentialId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the API credential."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/apiCredentials/{apiCredentialId}/generateClientKey",
      "method": "postMerchantsMerchantIdApiCredentialsApiCredentialIdGenerateClientKey",
      "httpMethod": "post",
      "tag": "Client key - merchant level",
      "description": "Generate new client key",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "apiCredentialId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the API credential."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/billingEntities",
      "method": "getMerchantsMerchantIdBillingEntities",
      "httpMethod": "get",
      "tag": "Terminal orders - merchant level",
      "description": "Get a list of billing entities",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "The name of the billing entity."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/paymentMethodSettings",
      "method": "getMerchantsMerchantIdPaymentMethodSettings",
      "httpMethod": "get",
      "tag": "Payment methods - merchant level",
      "description": "Get all payment methods",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "storeId",
          "schema": "string",
          "required": false,
          "description": "The unique identifier of the store for which to return the payment methods."
        },
        {
          "name": "businessLineId",
          "schema": "string",
          "required": false,
          "description": "The unique identifier of the Business Line for which to return the payment methods."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "The number of items to have on a page, maximum 100. The default is 10 items on a page."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The number of the page to fetch."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/paymentMethodSettings",
      "method": "postMerchantsMerchantIdPaymentMethodSettings",
      "httpMethod": "post",
      "tag": "Payment methods - merchant level",
      "description": "Request a payment method",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "afterpayTouch",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "applePay",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "bcmc",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "businessLineId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "cartesBancaires",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "clearpay",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "countries",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "cup",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "currencies",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "customRoutingFlags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "diners",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "discover",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "eftpos_australia",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "giroPay",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "girocard",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "googlePay",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "ideal",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "interac_card",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "jcb",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "klarna",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "maestro",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "mc",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "mealVoucher_FR",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "paypal",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "shopperInteraction",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sofort",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "storeIds",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "swish",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "twint",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "vipps",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "visa",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/paymentMethodSettings/{paymentMethodId}",
      "method": "getMerchantsMerchantIdPaymentMethodSettingsPaymentMethodId",
      "httpMethod": "get",
      "tag": "Payment methods - merchant level",
      "description": "Get payment method details",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "paymentMethodId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the payment method."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/paymentMethodSettings/{paymentMethodId}",
      "method": "patchMerchantsMerchantIdPaymentMethodSettingsPaymentMethodId",
      "httpMethod": "patch",
      "tag": "Payment methods - merchant level",
      "description": "Update a payment method",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "paymentMethodId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the payment method."
        },
        {
          "name": "bcmc",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cartesBancaires",
          "schema": "object",
          "description": ""
        },
        {
          "name": "countries",
          "schema": "array",
          "description": ""
        },
        {
          "name": "cup",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencies",
          "schema": "array",
          "description": ""
        },
        {
          "name": "diners",
          "schema": "object",
          "description": ""
        },
        {
          "name": "discover",
          "schema": "object",
          "description": ""
        },
        {
          "name": "eftpos_australia",
          "schema": "object",
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "girocard",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ideal",
          "schema": "object",
          "description": ""
        },
        {
          "name": "interac_card",
          "schema": "object",
          "description": ""
        },
        {
          "name": "jcb",
          "schema": "object",
          "description": ""
        },
        {
          "name": "maestro",
          "schema": "object",
          "description": ""
        },
        {
          "name": "mc",
          "schema": "object",
          "description": ""
        },
        {
          "name": "storeIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "visa",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/paymentMethodSettings/{paymentMethodId}/addApplePayDomains",
      "method": "postMerchantsMerchantIdPaymentMethodSettingsPaymentMethodIdAddApplePayDomains",
      "httpMethod": "post",
      "tag": "Payment methods - merchant level",
      "description": "Add an Apple Pay domain",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "paymentMethodId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the payment method."
        },
        {
          "name": "domains",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/paymentMethodSettings/{paymentMethodId}/getApplePayDomains",
      "method": "getMerchantsMerchantIdPaymentMethodSettingsPaymentMethodIdGetApplePayDomains",
      "httpMethod": "get",
      "tag": "Payment methods - merchant level",
      "description": "Get Apple Pay domains",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "paymentMethodId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the payment method."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/payoutSettings",
      "method": "getMerchantsMerchantIdPayoutSettings",
      "httpMethod": "get",
      "tag": "Payout settings - merchant level",
      "description": "Get a list of payout settings",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/payoutSettings",
      "method": "postMerchantsMerchantIdPayoutSettings",
      "httpMethod": "post",
      "tag": "Payout settings - merchant level",
      "description": "Add a payout setting",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "enabledFromDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "transferInstrumentId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/payoutSettings/{payoutSettingsId}",
      "method": "deleteMerchantsMerchantIdPayoutSettingsPayoutSettingsId",
      "httpMethod": "delete",
      "tag": "Payout settings - merchant level",
      "description": "Delete a payout setting",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "payoutSettingsId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the payout setting."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/payoutSettings/{payoutSettingsId}",
      "method": "getMerchantsMerchantIdPayoutSettingsPayoutSettingsId",
      "httpMethod": "get",
      "tag": "Payout settings - merchant level",
      "description": "Get a payout setting",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "payoutSettingsId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the payout setting."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/payoutSettings/{payoutSettingsId}",
      "method": "patchMerchantsMerchantIdPayoutSettingsPayoutSettingsId",
      "httpMethod": "patch",
      "tag": "Payout settings - merchant level",
      "description": "Update a payout setting",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "payoutSettingsId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the payout setting."
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/shippingLocations",
      "method": "getMerchantsMerchantIdShippingLocations",
      "httpMethod": "get",
      "tag": "Terminal orders - merchant level",
      "description": "Get a list of shipping locations",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "The name of the shipping location."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The number of locations to skip."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The number of locations to return."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/shippingLocations",
      "method": "postMerchantsMerchantIdShippingLocations",
      "httpMethod": "post",
      "tag": "Terminal orders - merchant level",
      "description": "Create a shipping location",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/splitConfigurations",
      "method": "getMerchantsMerchantIdSplitConfigurations",
      "httpMethod": "get",
      "tag": "Split configuration - merchant level",
      "description": "Get a list of split configurations",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/splitConfigurations",
      "method": "postMerchantsMerchantIdSplitConfigurations",
      "httpMethod": "post",
      "tag": "Split configuration - merchant level",
      "description": "Create a split configuration",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "rules",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "splitConfigurationId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "stores",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}",
      "method": "deleteMerchantsMerchantIdSplitConfigurationsSplitConfigurationId",
      "httpMethod": "delete",
      "tag": "Split configuration - merchant level",
      "description": "Delete a split configuration",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "splitConfigurationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the split configuration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}",
      "method": "getMerchantsMerchantIdSplitConfigurationsSplitConfigurationId",
      "httpMethod": "get",
      "tag": "Split configuration - merchant level",
      "description": "Get a split configuration",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "splitConfigurationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the split configuration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}",
      "method": "patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationId",
      "httpMethod": "patch",
      "tag": "Split configuration - merchant level",
      "description": "Update split configuration description",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "splitConfigurationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the split configuration."
        },
        {
          "name": "description",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}",
      "method": "postMerchantsMerchantIdSplitConfigurationsSplitConfigurationId",
      "httpMethod": "post",
      "tag": "Split configuration - merchant level",
      "description": "Create a rule",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "splitConfigurationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the split configuration."
        },
        {
          "name": "currency",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "fundingSource",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "paymentMethod",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ruleId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "shopperInteraction",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "splitLogic",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}/rules/{ruleId}",
      "method": "deleteMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleId",
      "httpMethod": "delete",
      "tag": "Split configuration - merchant level",
      "description": "Delete a split configuration rule",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "splitConfigurationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the split configuration."
        },
        {
          "name": "ruleId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}/rules/{ruleId}",
      "method": "patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleId",
      "httpMethod": "patch",
      "tag": "Split configuration - merchant level",
      "description": "Update split conditions",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "splitConfigurationId",
          "schema": "string",
          "required": true,
          "description": "The identifier of the split configuration."
        },
        {
          "name": "ruleId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the split configuration rule."
        },
        {
          "name": "currency",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "fundingSource",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "paymentMethod",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "shopperInteraction",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}/rules/{ruleId}/splitLogic/{splitLogicId}",
      "method": "patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleIdSplitLogicSplitLogicId",
      "httpMethod": "patch",
      "tag": "Split configuration - merchant level",
      "description": "Update the split logic",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "splitConfigurationId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the split configuration."
        },
        {
          "name": "ruleId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the split configuration rule."
        },
        {
          "name": "splitLogicId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the split configuration split."
        },
        {
          "name": "acquiringFees",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "additionalCommission",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "adyenCommission",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "adyenFees",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "adyenMarkup",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "chargeback",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "chargebackCostAllocation",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "commission",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "interchange",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "paymentFee",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "remainder",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "schemeFee",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "splitLogicId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "surcharge",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tip",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/stores",
      "method": "getMerchantsMerchantIdStores",
      "httpMethod": "get",
      "tag": "Account - store level",
      "description": "Get a list of stores",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The number of the page to fetch."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "The number of items to have on a page, maximum 100. The default is 10 items on a page."
        },
        {
          "name": "reference",
          "schema": "string",
          "required": false,
          "description": "The reference of the store."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/stores",
      "method": "postMerchantsMerchantIdStores",
      "httpMethod": "post",
      "tag": "Account - store level",
      "description": "Create a store",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "address",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "businessLineIds",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "externalReferenceId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "phoneNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "shopperStatement",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "splitConfiguration",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/stores/{reference}/terminalLogos",
      "method": "getMerchantsMerchantIdStoresReferenceTerminalLogos",
      "httpMethod": "get",
      "tag": "Terminal settings - store level",
      "description": "Get the terminal logo",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "reference",
          "schema": "string",
          "required": true,
          "description": "The reference that identifies the store."
        },
        {
          "name": "model",
          "schema": "string",
          "required": true,
          "description": "The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/stores/{reference}/terminalLogos",
      "method": "patchMerchantsMerchantIdStoresReferenceTerminalLogos",
      "httpMethod": "patch",
      "tag": "Terminal settings - store level",
      "description": "Update the terminal logo",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "reference",
          "schema": "string",
          "required": true,
          "description": "The reference that identifies the store."
        },
        {
          "name": "model",
          "schema": "string",
          "required": true,
          "description": "The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T"
        },
        {
          "name": "data",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/stores/{reference}/terminalSettings",
      "method": "getMerchantsMerchantIdStoresReferenceTerminalSettings",
      "httpMethod": "get",
      "tag": "Terminal settings - store level",
      "description": "Get terminal settings",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "reference",
          "schema": "string",
          "required": true,
          "description": "The reference that identifies the store."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/stores/{reference}/terminalSettings",
      "method": "patchMerchantsMerchantIdStoresReferenceTerminalSettings",
      "httpMethod": "patch",
      "tag": "Terminal settings - store level",
      "description": "Update terminal settings",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "reference",
          "schema": "string",
          "required": true,
          "description": "The reference that identifies the store."
        },
        {
          "name": "cardholderReceipt",
          "schema": "object",
          "description": ""
        },
        {
          "name": "connectivity",
          "schema": "object",
          "description": ""
        },
        {
          "name": "gratuities",
          "schema": "array",
          "description": ""
        },
        {
          "name": "hardware",
          "schema": "object",
          "description": ""
        },
        {
          "name": "localization",
          "schema": "object",
          "description": ""
        },
        {
          "name": "nexo",
          "schema": "object",
          "description": ""
        },
        {
          "name": "offlineProcessing",
          "schema": "object",
          "description": ""
        },
        {
          "name": "opi",
          "schema": "object",
          "description": ""
        },
        {
          "name": "passcodes",
          "schema": "object",
          "description": ""
        },
        {
          "name": "payAtTable",
          "schema": "object",
          "description": ""
        },
        {
          "name": "payment",
          "schema": "object",
          "description": ""
        },
        {
          "name": "receiptOptions",
          "schema": "object",
          "description": ""
        },
        {
          "name": "receiptPrinting",
          "schema": "object",
          "description": ""
        },
        {
          "name": "signature",
          "schema": "object",
          "description": ""
        },
        {
          "name": "standalone",
          "schema": "object",
          "description": ""
        },
        {
          "name": "surcharge",
          "schema": "object",
          "description": ""
        },
        {
          "name": "tapToPay",
          "schema": "object",
          "description": ""
        },
        {
          "name": "timeouts",
          "schema": "object",
          "description": ""
        },
        {
          "name": "wifiProfiles",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/stores/{storeId}",
      "method": "getMerchantsMerchantIdStoresStoreId",
      "httpMethod": "get",
      "tag": "Account - store level",
      "description": "Get a store",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the store."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/stores/{storeId}",
      "method": "patchMerchantsMerchantIdStoresStoreId",
      "httpMethod": "patch",
      "tag": "Account - store level",
      "description": "Update a store",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the store."
        },
        {
          "name": "address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "businessLineIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "externalReferenceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phoneNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "splitConfiguration",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/terminalLogos",
      "method": "getMerchantsMerchantIdTerminalLogos",
      "httpMethod": "get",
      "tag": "Terminal settings - merchant level",
      "description": "Get the terminal logo",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "model",
          "schema": "string",
          "required": true,
          "description": "The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/terminalLogos",
      "method": "patchMerchantsMerchantIdTerminalLogos",
      "httpMethod": "patch",
      "tag": "Terminal settings - merchant level",
      "description": "Update the terminal logo",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "model",
          "schema": "string",
          "required": true,
          "description": "The terminal model. Allowed values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T."
        },
        {
          "name": "data",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/terminalModels",
      "method": "getMerchantsMerchantIdTerminalModels",
      "httpMethod": "get",
      "tag": "Terminal orders - merchant level",
      "description": "Get a list of terminal models",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/terminalOrders",
      "method": "getMerchantsMerchantIdTerminalOrders",
      "httpMethod": "get",
      "tag": "Terminal orders - merchant level",
      "description": "Get a list of orders",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "customerOrderReference",
          "schema": "string",
          "required": false,
          "description": "Your purchase order number."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The order status. Possible values (not case-sensitive): Placed, Confirmed, Cancelled, Shipped, Delivered."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The number of orders to skip."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The number of orders to return."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/terminalOrders",
      "method": "postMerchantsMerchantIdTerminalOrders",
      "httpMethod": "post",
      "tag": "Terminal orders - merchant level",
      "description": "Create an order",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "billingEntityId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "customerOrderReference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "items",
          "schema": "array",
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "shippingLocationId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taxId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/terminalOrders/{orderId}",
      "method": "getMerchantsMerchantIdTerminalOrdersOrderId",
      "httpMethod": "get",
      "tag": "Terminal orders - merchant level",
      "description": "Get an order",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/terminalOrders/{orderId}",
      "method": "patchMerchantsMerchantIdTerminalOrdersOrderId",
      "httpMethod": "patch",
      "tag": "Terminal orders - merchant level",
      "description": "Update an order",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the order."
        },
        {
          "name": "billingEntityId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "customerOrderReference",
          "schema": "string",
          "description": ""
        },
        {
          "name": "items",
          "schema": "array",
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "shippingLocationId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "taxId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/terminalOrders/{orderId}/cancel",
      "method": "postMerchantsMerchantIdTerminalOrdersOrderIdCancel",
      "httpMethod": "post",
      "tag": "Terminal orders - merchant level",
      "description": "Cancel an order",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "orderId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/terminalProducts",
      "method": "getMerchantsMerchantIdTerminalProducts",
      "httpMethod": "get",
      "tag": "Terminal orders - merchant level",
      "description": "Get a list of terminal products",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": "The country to return products for, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. For example, **US**"
        },
        {
          "name": "terminalModelId",
          "schema": "string",
          "required": false,
          "description": "The terminal model to return products for. Use the ID returned in the [GET `/terminalModels`](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/merchants/{merchantId}/terminalModels) response. For example, **Verifone.M400**"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "The number of products to skip."
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "The number of products to return."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/terminalSettings",
      "method": "getMerchantsMerchantIdTerminalSettings",
      "httpMethod": "get",
      "tag": "Terminal settings - merchant level",
      "description": "Get terminal settings",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/terminalSettings",
      "method": "patchMerchantsMerchantIdTerminalSettings",
      "httpMethod": "patch",
      "tag": "Terminal settings - merchant level",
      "description": "Update terminal settings",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "cardholderReceipt",
          "schema": "object",
          "description": ""
        },
        {
          "name": "connectivity",
          "schema": "object",
          "description": ""
        },
        {
          "name": "gratuities",
          "schema": "array",
          "description": ""
        },
        {
          "name": "hardware",
          "schema": "object",
          "description": ""
        },
        {
          "name": "localization",
          "schema": "object",
          "description": ""
        },
        {
          "name": "nexo",
          "schema": "object",
          "description": ""
        },
        {
          "name": "offlineProcessing",
          "schema": "object",
          "description": ""
        },
        {
          "name": "opi",
          "schema": "object",
          "description": ""
        },
        {
          "name": "passcodes",
          "schema": "object",
          "description": ""
        },
        {
          "name": "payAtTable",
          "schema": "object",
          "description": ""
        },
        {
          "name": "payment",
          "schema": "object",
          "description": ""
        },
        {
          "name": "receiptOptions",
          "schema": "object",
          "description": ""
        },
        {
          "name": "receiptPrinting",
          "schema": "object",
          "description": ""
        },
        {
          "name": "signature",
          "schema": "object",
          "description": ""
        },
        {
          "name": "standalone",
          "schema": "object",
          "description": ""
        },
        {
          "name": "surcharge",
          "schema": "object",
          "description": ""
        },
        {
          "name": "tapToPay",
          "schema": "object",
          "description": ""
        },
        {
          "name": "timeouts",
          "schema": "object",
          "description": ""
        },
        {
          "name": "wifiProfiles",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/users",
      "method": "getMerchantsMerchantIdUsers",
      "httpMethod": "get",
      "tag": "Users - merchant level",
      "description": "Get a list of users",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the merchant."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The number of the page to fetch."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "The number of items to have on a page. Maximum value is **100**. The default is **10** items on a page."
        },
        {
          "name": "username",
          "schema": "string",
          "required": false,
          "description": "The partial or complete username to select all users that match."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/users",
      "method": "postMerchantsMerchantIdUsers",
      "httpMethod": "post",
      "tag": "Users - merchant level",
      "description": "Create a new user",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the merchant."
        },
        {
          "name": "accountGroups",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "roles",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "timeZoneCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/users/{userId}",
      "method": "getMerchantsMerchantIdUsersUserId",
      "httpMethod": "get",
      "tag": "Users - merchant level",
      "description": "Get user details",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the merchant."
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the user."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/users/{userId}",
      "method": "patchMerchantsMerchantIdUsersUserId",
      "httpMethod": "patch",
      "tag": "Users - merchant level",
      "description": "Update a user",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the merchant."
        },
        {
          "name": "userId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the user."
        },
        {
          "name": "accountGroups",
          "schema": "array",
          "description": ""
        },
        {
          "name": "active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "object",
          "description": ""
        },
        {
          "name": "roles",
          "schema": "array",
          "description": ""
        },
        {
          "name": "timeZoneCode",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/webhooks",
      "method": "getMerchantsMerchantIdWebhooks",
      "httpMethod": "get",
      "tag": "Webhooks - merchant level",
      "description": "List all webhooks",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The number of the page to fetch."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "The number of items to have on a page, maximum 100. The default is 10 items on a page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/webhooks",
      "method": "postMerchantsMerchantIdWebhooks",
      "httpMethod": "post",
      "tag": "Webhooks - merchant level",
      "description": "Set up a webhook",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "acceptsExpiredCertificate",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "acceptsSelfSignedCertificate",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "acceptsUntrustedRootCertificate",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "active",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "additionalSettings",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "communicationFormat",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "encryptionProtocol",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "networkType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "populateSoapActionHeader",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/webhooks/{webhookId}",
      "method": "deleteMerchantsMerchantIdWebhooksWebhookId",
      "httpMethod": "delete",
      "tag": "Webhooks - merchant level",
      "description": "Remove a webhook",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "webhookId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the webhook configuration."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/webhooks/{webhookId}",
      "method": "getMerchantsMerchantIdWebhooksWebhookId",
      "httpMethod": "get",
      "tag": "Webhooks - merchant level",
      "description": "Get a webhook",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "webhookId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the webhook configuration."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/webhooks/{webhookId}",
      "method": "patchMerchantsMerchantIdWebhooksWebhookId",
      "httpMethod": "patch",
      "tag": "Webhooks - merchant level",
      "description": "Update a webhook",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "webhookId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the webhook configuration."
        },
        {
          "name": "acceptsExpiredCertificate",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "acceptsSelfSignedCertificate",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "acceptsUntrustedRootCertificate",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "active",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "additionalSettings",
          "schema": "object",
          "description": ""
        },
        {
          "name": "communicationFormat",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "encryptionProtocol",
          "schema": "string",
          "description": ""
        },
        {
          "name": "networkType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "populateSoapActionHeader",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/webhooks/{webhookId}/generateHmac",
      "method": "postMerchantsMerchantIdWebhooksWebhookIdGenerateHmac",
      "httpMethod": "post",
      "tag": "Webhooks - merchant level",
      "description": "Generate an HMAC key",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "webhookId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/merchants/{merchantId}/webhooks/{webhookId}/test",
      "method": "postMerchantsMerchantIdWebhooksWebhookIdTest",
      "httpMethod": "post",
      "tag": "Webhooks - merchant level",
      "description": "Test a webhook",
      "parameters": [
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the merchant account."
        },
        {
          "name": "webhookId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier of the webhook configuration."
        },
        {
          "name": "notification",
          "schema": "object",
          "description": ""
        },
        {
          "name": "types",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/stores",
      "method": "getStores",
      "httpMethod": "get",
      "tag": "Account - store level",
      "description": "Get a list of stores",
      "parameters": [
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The number of the page to fetch."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "The number of items to have on a page, maximum 100. The default is 10 items on a page."
        },
        {
          "name": "reference",
          "schema": "string",
          "required": false,
          "description": "The reference of the store."
        },
        {
          "name": "merchantId",
          "schema": "string",
          "required": false,
          "description": "The unique identifier of the merchant account."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/stores",
      "method": "postStores",
      "httpMethod": "post",
      "tag": "Account - store level",
      "description": "Create a store",
      "parameters": [
        {
          "name": "address",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "businessLineIds",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "externalReferenceId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "merchantId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "phoneNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "reference",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "shopperStatement",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "splitConfiguration",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/stores/{storeId}",
      "method": "getStoresStoreId",
      "httpMethod": "get",
      "tag": "Account - store level",
      "description": "Get a store",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the store."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/stores/{storeId}",
      "method": "patchStoresStoreId",
      "httpMethod": "patch",
      "tag": "Account - store level",
      "description": "Update a store",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the store."
        },
        {
          "name": "address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "businessLineIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "externalReferenceId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phoneNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "splitConfiguration",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/stores/{storeId}/terminalLogos",
      "method": "getStoresStoreIdTerminalLogos",
      "httpMethod": "get",
      "tag": "Terminal settings - store level",
      "description": "Get the terminal logo",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the store."
        },
        {
          "name": "model",
          "schema": "string",
          "required": true,
          "description": "The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/stores/{storeId}/terminalLogos",
      "method": "patchStoresStoreIdTerminalLogos",
      "httpMethod": "patch",
      "tag": "Terminal settings - store level",
      "description": "Update the terminal logo",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the store."
        },
        {
          "name": "model",
          "schema": "string",
          "required": true,
          "description": "The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T."
        },
        {
          "name": "data",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/stores/{storeId}/terminalSettings",
      "method": "getStoresStoreIdTerminalSettings",
      "httpMethod": "get",
      "tag": "Terminal settings - store level",
      "description": "Get terminal settings",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the store."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/stores/{storeId}/terminalSettings",
      "method": "patchStoresStoreIdTerminalSettings",
      "httpMethod": "patch",
      "tag": "Terminal settings - store level",
      "description": "Update terminal settings",
      "parameters": [
        {
          "name": "storeId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the store."
        },
        {
          "name": "cardholderReceipt",
          "schema": "object",
          "description": ""
        },
        {
          "name": "connectivity",
          "schema": "object",
          "description": ""
        },
        {
          "name": "gratuities",
          "schema": "array",
          "description": ""
        },
        {
          "name": "hardware",
          "schema": "object",
          "description": ""
        },
        {
          "name": "localization",
          "schema": "object",
          "description": ""
        },
        {
          "name": "nexo",
          "schema": "object",
          "description": ""
        },
        {
          "name": "offlineProcessing",
          "schema": "object",
          "description": ""
        },
        {
          "name": "opi",
          "schema": "object",
          "description": ""
        },
        {
          "name": "passcodes",
          "schema": "object",
          "description": ""
        },
        {
          "name": "payAtTable",
          "schema": "object",
          "description": ""
        },
        {
          "name": "payment",
          "schema": "object",
          "description": ""
        },
        {
          "name": "receiptOptions",
          "schema": "object",
          "description": ""
        },
        {
          "name": "receiptPrinting",
          "schema": "object",
          "description": ""
        },
        {
          "name": "signature",
          "schema": "object",
          "description": ""
        },
        {
          "name": "standalone",
          "schema": "object",
          "description": ""
        },
        {
          "name": "surcharge",
          "schema": "object",
          "description": ""
        },
        {
          "name": "tapToPay",
          "schema": "object",
          "description": ""
        },
        {
          "name": "timeouts",
          "schema": "object",
          "description": ""
        },
        {
          "name": "wifiProfiles",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/terminals",
      "method": "getTerminals",
      "httpMethod": "get",
      "tag": "Terminals - terminal level",
      "description": "Get a list of terminals",
      "parameters": [
        {
          "name": "searchQuery",
          "schema": "string",
          "required": false,
          "description": "Returns terminals with an ID that contains the specified string. If present, other query parameters are ignored."
        },
        {
          "name": "otpQuery",
          "schema": "string",
          "required": false,
          "description": "Returns one or more terminals associated with the one-time passwords specified in the request. If this query parameter is used, other query parameters are ignored."
        },
        {
          "name": "countries",
          "schema": "string",
          "required": false,
          "description": "Returns terminals located in the countries specified by their [two-letter country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)."
        },
        {
          "name": "merchantIds",
          "schema": "string",
          "required": false,
          "description": "Returns terminals that belong to the merchant accounts specified by their unique merchant account ID."
        },
        {
          "name": "storeIds",
          "schema": "string",
          "required": false,
          "description": "Returns terminals that are assigned to the [stores](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/stores) specified by their unique store ID."
        },
        {
          "name": "brandModels",
          "schema": "string",
          "required": false,
          "description": "Returns terminals of the [models](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/companies/{companyId}/terminalModels) specified in the format *brand.model*."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "The number of the page to fetch."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "The number of items to have on a page, maximum 100. The default is 20 items on a page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/terminals/scheduleActions",
      "method": "postTerminalsScheduleActions",
      "httpMethod": "post",
      "tag": "Terminal actions - terminal level",
      "description": "Create a terminal action",
      "parameters": [
        {
          "name": "actionDetails",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "scheduledAt",
          "schema": "string",
          "description": ""
        },
        {
          "name": "storeId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "terminalIds",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/terminals/{terminalId}/reassign",
      "method": "postTerminalsTerminalIdReassign",
      "httpMethod": "post",
      "tag": "Terminals - terminal level",
      "description": "Reassign a terminal",
      "parameters": [
        {
          "name": "terminalId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the payment terminal."
        },
        {
          "name": "companyId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "inventory",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "merchantId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "storeId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/terminals/{terminalId}/terminalLogos",
      "method": "getTerminalsTerminalIdTerminalLogos",
      "httpMethod": "get",
      "tag": "Terminal settings - terminal level",
      "description": "Get the terminal logo",
      "parameters": [
        {
          "name": "terminalId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the payment terminal."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/terminals/{terminalId}/terminalLogos",
      "method": "patchTerminalsTerminalIdTerminalLogos",
      "httpMethod": "patch",
      "tag": "Terminal settings - terminal level",
      "description": "Update the logo",
      "parameters": [
        {
          "name": "terminalId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the payment terminal."
        },
        {
          "name": "data",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/terminals/{terminalId}/terminalSettings",
      "method": "getTerminalsTerminalIdTerminalSettings",
      "httpMethod": "get",
      "tag": "Terminal settings - terminal level",
      "description": "Get terminal settings",
      "parameters": [
        {
          "name": "terminalId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the payment terminal."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/terminals/{terminalId}/terminalSettings",
      "method": "patchTerminalsTerminalIdTerminalSettings",
      "httpMethod": "patch",
      "tag": "Terminal settings - terminal level",
      "description": "Update terminal settings",
      "parameters": [
        {
          "name": "terminalId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier of the payment terminal."
        },
        {
          "name": "cardholderReceipt",
          "schema": "object",
          "description": ""
        },
        {
          "name": "connectivity",
          "schema": "object",
          "description": ""
        },
        {
          "name": "gratuities",
          "schema": "array",
          "description": ""
        },
        {
          "name": "hardware",
          "schema": "object",
          "description": ""
        },
        {
          "name": "localization",
          "schema": "object",
          "description": ""
        },
        {
          "name": "nexo",
          "schema": "object",
          "description": ""
        },
        {
          "name": "offlineProcessing",
          "schema": "object",
          "description": ""
        },
        {
          "name": "opi",
          "schema": "object",
          "description": ""
        },
        {
          "name": "passcodes",
          "schema": "object",
          "description": ""
        },
        {
          "name": "payAtTable",
          "schema": "object",
          "description": ""
        },
        {
          "name": "payment",
          "schema": "object",
          "description": ""
        },
        {
          "name": "receiptOptions",
          "schema": "object",
          "description": ""
        },
        {
          "name": "receiptPrinting",
          "schema": "object",
          "description": ""
        },
        {
          "name": "signature",
          "schema": "object",
          "description": ""
        },
        {
          "name": "standalone",
          "schema": "object",
          "description": ""
        },
        {
          "name": "surcharge",
          "schema": "object",
          "description": ""
        },
        {
          "name": "tapToPay",
          "schema": "object",
          "description": ""
        },
        {
          "name": "timeouts",
          "schema": "object",
          "description": ""
        },
        {
          "name": "wifiProfiles",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://management-test.adyen.com/v3",
  "apiDescription": "Configure and manage your Adyen company and merchant accounts, stores, and payment terminals.\n## Authentication\nEach request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.\n\nTo access the live endpoints, you need to generate a new API key in your live Customer Area.\n## Versioning\n\nManagement API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:\n\n```text\nhttps://management-test.adyen.com/v3/companies/{companyId}/webhooks\n```\n\n## Going live\n\nTo access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:\n\n```text\nhttps://management-live.adyen.com/v3\n```\n\n## Release notes\nHave a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!",
  "apiTitle": "Management API",
  "endpoints": 80,
  "sdkMethods": 132,
  "schemas": 174,
  "parameters": 646,
  "contactUrl": "https://github.com/Adyen/adyen-openapi",
  "difficultyScore": 380.5,
  "difficulty": "Hard"
}